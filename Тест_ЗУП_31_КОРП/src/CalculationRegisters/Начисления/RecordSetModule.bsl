#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение, ТолькоЗапись, ЗаписьФактическогоПериодаДействия, ЗаписьПерерасчетов)
	
	ЗаполнитьРеквизитМесяц();
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ЭтоВременныйНаборЗаписей") Тогда
		Возврат;
	КонецЕсли;
	
	// Дополнение набора записей дублированными начислениями внутренних совместителей и подработок.
	РегистрыРасчета.Начисления.ДополнитьНаборЗаписейНачислениямиСовместителейИПодработок(ЭтотОбъект);
	
	Регистратор = Отбор.Регистратор.Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаписываемыеДвижения.Сотрудник КАК Сотрудник,
		|	ЗаписываемыеДвижения.ПериодДействия КАК ПериодДействия
		|ПОМЕСТИТЬ ВТСотрудникиПредыдущиеПериодыРегистратора
		|ИЗ
		|	РегистрРасчета.Начисления КАК ЗаписываемыеДвижения
		|ГДЕ
		|	ЗаписываемыеДвижения.Регистратор = &Регистратор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ПериодДействия";
		
	Запрос.Выполнить();
	
	ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение, ТолькоЗапись, ЗаписьФактическогоПериодаДействия, ЗаписьПерерасчетов)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ЭтоВременныйНаборЗаписей") Тогда
		Возврат;
	КонецЕсли;
	
	Регистратор = Отбор.Регистратор.Значение;
	Если ТипЗнч(Регистратор) <> Тип("ДокументСсылка.НачислениеЗарплаты")
		И ТипЗнч(Регистратор) <> Тип("ДокументСсылка.НачислениеЗаПервуюПоловинуМесяца") 
		И ТипЗнч(Регистратор) <> Тип("ДокументСсылка.ПереносДанных") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаписываемыеДвижения.Сотрудник КАК Сотрудник,
			|	ЗаписываемыеДвижения.ПериодДействия КАК ПериодДействия
			|ПОМЕСТИТЬ ВТСотрудникиПериодыРегистратораПредварительно
			|ИЗ
			|	РегистрРасчета.Начисления КАК ЗаписываемыеДвижения
			|ГДЕ
			|	ЕСТЬNULL(ЗаписываемыеДвижения.Регистратор, &Регистратор) = &Регистратор
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодДействия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЕСТЬNULL(ЗаписываемыеДвижения.Сотрудник, ПредыдущиеДвижения.Сотрудник) КАК Сотрудник,
			|	ЕСТЬNULL(ЗаписываемыеДвижения.ПериодДействия, ПредыдущиеДвижения.ПериодДействия) КАК ПериодДействия
			|ПОМЕСТИТЬ ВТСотрудникиПериодыРегистратора
			|ИЗ
			|	ВТСотрудникиПериодыРегистратораПредварительно КАК ЗаписываемыеДвижения
			|		ПОЛНОЕ СОЕДИНЕНИЕ ВТСотрудникиПредыдущиеПериодыРегистратора КАК ПредыдущиеДвижения
			|		ПО ЗаписываемыеДвижения.Сотрудник = ПредыдущиеДвижения.Сотрудник
			|			И ЗаписываемыеДвижения.ПериодДействия = ПредыдущиеДвижения.ПериодДействия
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодДействия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Начисления.Ссылка КАК ВидРасчета
			|ПОМЕСТИТЬ ВТНачисленияСЗачетомНормыВремени
			|ИЗ
			|	ПланВидовРасчета.Начисления КАК Начисления
			|ГДЕ
			|	Начисления.ЗачетНормыВремени
			|	И НЕ Начисления.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыРабочегоВремениСотрудников.ЧасовоеНеотработанное), ЗНАЧЕНИЕ(Перечисление.ВидыРабочегоВремениСотрудников.ЧасовоеОтработанноеВПределахНормы))
			|	И Начисления.СпособВыполненияНачисления В (ЗНАЧЕНИЕ(Перечисление.СпособыВыполненияНачислений.ЕжемесячноПриОкончательномРасчете), ЗНАЧЕНИЕ(Перечисление.СпособыВыполненияНачислений.ВЗаданныхМесяцахПриОкончательномРасчете), ЗНАЧЕНИЕ(Перечисление.СпособыВыполненияНачислений.ПоОтдельномуДокументуДоОкончательногоРасчета))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ВидРасчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НачисленияФактическийПериодДействия.Сотрудник КАК Сотрудник,
			|	НачисленияФактическийПериодДействия.Организация КАК Организация,
			|	НачисленияФактическийПериодДействия.ПериодДействия КАК ПериодДействия,
			|	НачисленияФактическийПериодДействия.ПериодРегистрации КАК ПериодРегистрации,
			|	НачисленияФактическийПериодДействия.ПериодДействияНачало КАК ПериодДействияНачало,
			|	НачисленияФактическийПериодДействия.ПериодДействияКонец КАК ПериодДействияКонец,
			|	НачисленияФактическийПериодДействия.Сторно,
			|	НачисленияФактическийПериодДействия.ВидРасчета,
			|	НачисленияФактическийПериодДействия.Регистратор
			|ПОМЕСТИТЬ ВТНачисленияФактическийПериодДействия
			|ИЗ
			|	РегистрРасчета.Начисления.ФактическийПериодДействия(
			|			ВидРасчета В
			|					(ВЫБРАТЬ
			|						Начисления.ВидРасчета
			|					ИЗ
			|						ВТНачисленияСЗачетомНормыВремени КАК Начисления)
			|				И (Сотрудник, ПериодДействия) В
			|					(ВЫБРАТЬ
			|						ОсновныеНачисления.Сотрудник,
			|						ОсновныеНачисления.ПериодДействия
			|					ИЗ
			|						ВТСотрудникиПериодыРегистратора КАК ОсновныеНачисления)) КАК НачисленияФактическийПериодДействия
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодДействия";
		
		Запрос.Выполнить();
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НачисленияСторно.Сотрудник КАК Сотрудник,
			|	НачисленияСторно.Организация КАК Организация,
			|	НачисленияСторно.ПериодДействия КАК ПериодДействия,
			|	НачисленияСторно.ПериодРегистрации КАК ПериодРегистрации,
			|	НачисленияСторно.ПериодДействияНачало КАК ДатаНачала,
			|	НачисленияСторно.ПериодДействияКонец КАК ДатаОкончания,
			|	НачисленияСторно.Регистратор КАК Регистратор,
			|	Начисления.ПериодРегистрации КАК ПериодРегистрацииПогашения,
			|	Начисления.ПериодДействияНачало КАК ДатаНачалаПогашения,
			|	Начисления.ПериодДействияКонец КАК ДатаОкончанияПогашения,
			|	Начисления.Регистратор КАК РегистраторПогашения
			|ИЗ
			|	ВТНачисленияФактическийПериодДействия КАК НачисленияСторно
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиПериодыРегистратора КАК СотрудникиПериодыРегистратора
			|		ПО (СотрудникиПериодыРегистратора.Сотрудник = НачисленияСторно.Сотрудник)
			|			И (СотрудникиПериодыРегистратора.ПериодДействия = НачисленияСторно.ПериодДействия)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияФактическийПериодДействия КАК Начисления
			|		ПО НачисленияСторно.Сотрудник = Начисления.Сотрудник
			|			И (НЕ Начисления.Сторно)
			|			И НачисленияСторно.ПериодРегистрации <= Начисления.ПериодРегистрации
			|			И НачисленияСторно.ПериодДействия = Начисления.ПериодДействия
			|			И НачисленияСторно.ПериодДействияНачало < Начисления.ПериодДействияКонец
			|			И НачисленияСторно.ПериодДействияКонец > Начисления.ПериодДействияНачало
			|
			|УПОРЯДОЧИТЬ ПО
			|	Сотрудник,
			|	ПериодДействия";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			ПерерасчетЗарплаты.РассчитатьПериодыДоначисленийНеПолныхПериодов(РезультатЗапроса.Выбрать());
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРеквизитМесяц()
	
	Для Каждого СтрокаНабора Из ЭтотОбъект Цикл
		СтрокаНабора.Месяц = СтрокаНабора.ПериодДействия;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли