#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Сторнирование движений исправленного документа.
//
// Параметры:
//  НаборЗаписей		 - РегистрНакопленияНаборЗаписей - Целевой набор записей в который будут добавлены сторнирующие строки.
//  ИсправленныйДокумент - ДокументСсылка				 - Документ, записи которого необходимо сторнировать.
//  Записывать			 - Булево						 - Если Истина, то набор будет записан сразу, если Ложь, то набору будет установлен признак Записывать = Истина.
//
Процедура СторнироватьДвижения(НаборЗаписей, ИсправленныйДокумент, Записывать = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.Регистратор = &ИсправленныйДокумент
	|	И Удержания.ФиксСторно = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ИсправленныйДокумент", ИсправленныйДокумент);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеРесурсыРегистра = Метаданные.РегистрыРасчета.Удержания.Ресурсы;
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Для Каждого Ресурс Из МетаданныеРесурсыРегистра Цикл
			НоваяСтрока[Ресурс.Имя] = - НоваяСтрока[Ресурс.Имя];
		КонецЦикла;
		НоваяСтрока.ФиксСторно = Истина;
		НоваяСтрока.ИдентификаторСтроки = - НоваяСтрока.ИдентификаторСтроки;
		
	КонецЦикла;
	
	Если Записывать Тогда
		НаборЗаписей.Записать();
		НаборЗаписей.Записывать = Ложь;
	Иначе
		НаборЗаписей.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли