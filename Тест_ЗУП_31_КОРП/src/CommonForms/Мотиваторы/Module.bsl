
#Область ОбработчикиСобытийФормы
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("Анкета") Тогда
		Отказ = Истина;
		Возврат;	
	Иначе
		Анкета = Параметры.Анкета;
	КонецЕсли;
	
	МассивЗаметок = Новый Массив;
	Если Параметры.Свойство("ЗаметкиПоМотивации") Тогда
		МассивЗаметок = Параметры.ЗаметкиПоМотивации;
	КонецЕсли;
	
	ЗаполнитьТаблицу("Мотиваторы");
	ЗаполнитьТаблицу("Демотиваторы");
	ЗаполнитьФразы();
	ЗаполнитьЗаметки(МассивЗаметок);
	
	СоздатьЭлементыФормы();
	
	Если Анкета.Проведен Тогда
		Элементы.МотиваторыРазобраны.ТолькоПросмотр = Истина;
		Элементы.МотивирующиеФразы.ТолькоПросмотр = Истина;
		Элементы.ГруппаТаблицы.ТолькоПросмотр = Истина;
		УстановитьДоступность(Элементы.ГруппаМотиваторы);
		УстановитьДоступность(Элементы.ГруппаДемотиваторы);
		Элементы.ФормаОК.Доступность = Ложь;
	КонецЕсли;			
	
КонецПроцедуры
		
#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - обработчик команды ОК
//
&НаКлиенте
Процедура КомандаОК(Команда)
	
	ЗаписатьДанные();
	Закрыть();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УвеличитьПоказатель(Команда)
	
	Массив = СтрРазделить(Команда.Имя, "_");
	ТекущаяСтрока = ЭтаФорма[Массив[1]][Число(Массив[2])];
	ТекущаяСтрока.Вес = ТекущаяСтрока.Вес + 1; 

КонецПроцедуры

&НаКлиенте
Процедура УменьшитьПоказатель(Команда)
	
	Массив = СтрРазделить(Команда.Имя, "_");
	ТекущаяСтрока = ЭтаФорма[Массив[1]][Число(Массив[2])];
	ТекущаяСтрока.Вес = ТекущаяСтрока.Вес - 1; 

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоказатель(Команда)
	
	Массив = СтрРазделить(Команда.Имя, "_");	
	ИмяТаблицы = Массив[1];
	ИмяКолонки = ИмяКолонки(ИмяТаблицы);
		
	СтрПараметры = Новый Структура;
	МассивВыбранных = Новый Массив;
	Для Каждого СтрокаТЧ Из ЭтаФорма[ИмяТаблицы] Цикл
		МассивВыбранных.Добавить(СтрокаТЧ[ИмяКолонки]);
	КонецЦикла;
	СтрПараметры.Вставить("МассивВыбранных", МассивВыбранных);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрыКоманды", Массив);

	ИмяФормыВыбора = "Справочник." + ИмяТаблицы + ".Форма.ФормаВыбора";
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбранПоказатель_Завершение", ЭтаФорма, ДополнительныеПараметры);
	ОткрытьФорму(ИмяФормыВыбора, СтрПараметры,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Обработчик оповещения о закрытии формы выбора показателя.
// Добавляет новый показатель на форму.
//
// Параметры 
//	Результат - СправочникСсылка.Мотиваторы, СправочникСсылка.Демотиваторы, Неопределено - ссылка на выбранный показатель. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ВыбранПоказатель_Завершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДобавитьНовыйЭлемент_Сервер(Результат, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИмяКолонки(ИмяТаблицы)
	
	Возврат ?(ИмяТаблицы = "Демотиваторы", "Демотиватор", "Мотиватор");
	
КонецФункции

&НаСервере
Процедура ДобавитьНовыйЭлемент_Сервер(Результат, ДополнительныеПараметры)
	
	ИмяТаблицы = ДополнительныеПараметры.ПараметрыКоманды[1];
	НоваяСтрока = ЭтаФорма[ИмяТаблицы].Добавить();
	ИмяКолонки = ИмяКолонки(ИмяТаблицы);
	НоваяСтрока[ИмяКолонки] = Результат;
	НоваяСтрока.Вес = 1;
	ДобавитьЭлементыСтроки(ЭтаФорма[ИмяТаблицы].Количество()-1, ИмяТаблицы, ИмяКолонки);
	
	Элементы.Переместить(Элементы["ДобавитьПоказатель" + "_" + ИмяТаблицы], Элементы["Группа" + ИмяТаблицы]);

КонецПроцедуры

&НаКлиенте
Процедура ИзменениеКомментария(Команда)
	
	Массив = СтрРазделить(Команда.Имя, "_");
	ТекущаяСтрока = ЭтаФорма[Массив[1]][Число(Массив[2])];
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтрока", ТекущаяСтрока);
	ДополнительныеПараметры.Вставить("Команда", Команда);
	Оповещение = Новый ОписаниеОповещения("ВведенКомментарий_Завершение", ЭтаФорма, ДополнительныеПараметры);
	ЗаголовокФормы = НСтр("ru='Введите комментарий'");
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(Оповещение, ТекущаяСтрока.Комментарий, ЗаголовокФормы);

КонецПроцедуры

// Обработчик оповещения о завершении ввода комментария.
// Заполняет комментарий в текущей строке.
//
// Параметры 
//	Результат - Строка, Неопределено - введенный комментарий. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит текущую строку и команду.
//
&НаКлиенте
Процедура ВведенКомментарий_Завершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДополнительныеПараметры.ТекущаяСтрока.Комментарий = Результат;
	Элементы[ДополнительныеПараметры.Команда.Имя].Заголовок = ?(ЗначениеЗаполнено(Результат), Результат, НСтр("ru = 'Ввести комментарий'"));
	
КонецПроцедуры
 
// Процедура сохраняет значения мотиваторов и демотиваторов в регистр сведений МотиваторыВАнкетах.
//
&НаСервере
Процедура ЗаписатьДанные()
	
	Для Каждого ТекущаяСтрока Из Мотиваторы Цикл
		НаборЗаписей = РегистрыСведений.МотиваторыВАнкетах.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Анкета.Установить(Анкета);
		НаборЗаписей.Отбор.Мотиватор.Установить(ТекущаяСтрока.Мотиватор);
		Если ТекущаяСтрока.Вес > 0 Или ТекущаяСтрока.Комментарий <> "" Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Анкета = Анкета;
			НоваяЗапись.Мотиватор = ТекущаяСтрока.Мотиватор;
			НоваяЗапись.Количество = ТекущаяСтрока.Вес;
			НоваяЗапись.Комментарий = ТекущаяСтрока.Комментарий;
		КонецЕсли;
		НаборЗаписей.Записать();
	КонецЦикла;
	
	Для Каждого ТекущаяСтрока Из Демотиваторы Цикл
		НаборЗаписей = РегистрыСведений.МотиваторыВАнкетах.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Анкета.Установить(Анкета);
		НаборЗаписей.Отбор.Мотиватор.Установить(ТекущаяСтрока.Демотиватор);
		Если ТекущаяСтрока.Вес > 0 Или ТекущаяСтрока.Комментарий <> "" Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Анкета = Анкета;
			НоваяЗапись.Мотиватор = ТекущаяСтрока.Демотиватор;
			НоваяЗапись.Количество = ТекущаяСтрока.Вес;
			НоваяЗапись.Комментарий = ТекущаяСтрока.Комментарий;
		КонецЕсли;
		НаборЗаписей.Записать();
	КонецЦикла;	
	
	НаборЗаписей = РегистрыСведений.ДанныеПоМотивацииВАнкетахДополнительно.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Анкета.Установить(Анкета);
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Анкета = Анкета;
	НоваяЗапись.МотивирующаяФраза = МотивирующиеФразы;
	НоваяЗапись.МотиваторыРазобраны = МотиваторыРазобраны;
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицу(ИмяТаблицы)
	
	ИмяКолонки = ИмяКолонки(ИмяТаблицы); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Мотиваторы.Ссылка КАК МотиваторСсылка,
		|	ЕСТЬNULL(МотиваторыВАнкетах.Количество, 0) КАК Вес,
		|	ЕСТЬNULL(МотиваторыВАнкетах.Комментарий, """") КАК Комментарий,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(МотиваторыВАнкетах.Комментарий, """") КАК СТРОКА(500))) <> """"
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьКомментарий
		|ИЗ
		|	Справочник.Мотиваторы КАК Мотиваторы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МотиваторыВАнкетах КАК МотиваторыВАнкетах
		|		ПО (МотиваторыВАнкетах.Мотиватор = Мотиваторы.Ссылка)
		|			И (МотиваторыВАнкетах.Анкета = &Анкета)
		|ГДЕ
		|	НЕ Мотиваторы.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	МотиваторыВАнкетах.Количество УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МотиваторыВАнкетах.Мотиватор КАК Мотиватор,
		|	СУММА(МотиваторыВАнкетах.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТМотиваторы
		|ИЗ
		|	РегистрСведений.МотиваторыВАнкетах КАК МотиваторыВАнкетах
		|ГДЕ
		|	МотиваторыВАнкетах.Мотиватор ССЫЛКА Справочник.Мотиваторы
		|	И НЕ ВЫРАЗИТЬ(МотиваторыВАнкетах.Мотиватор КАК Справочник.Мотиваторы).ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	МотиваторыВАнкетах.Мотиватор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Мотиваторы.Ссылка,
		|	0
		|ИЗ
		|	Справочник.Мотиваторы КАК Мотиваторы
		|ГДЕ
		|	НЕ Мотиваторы.ПометкаУдаления
		|	И НЕ Мотиваторы.Ссылка В
		|				(ВЫБРАТЬ
		|					МотиваторыВАнкетах.Мотиватор
		|				ИЗ
		|					РегистрСведений.МотиваторыВАнкетах КАК МотиваторыВАнкетах
		|				СГРУППИРОВАТЬ ПО
		|					МотиваторыВАнкетах.Мотиватор)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 5
		|	Мотиваторы.Мотиватор КАК МотиваторСсылка,
		|	Мотиваторы.Количество КАК Количество
		|ИЗ
		|	ВТМотиваторы КАК Мотиваторы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Количество УБЫВ";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "МотиваторСсылка", ИмяКолонки);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Мотиваторы", "Справочник." + ИмяТаблицы);
	Запрос.УстановитьПараметр("Анкета", Анкета);
	Результат = Запрос.ВыполнитьПакет();
	ЭтаФорма[ИмяТаблицы].Загрузить(Результат[0].Выгрузить());
	
	Если ЭтаФорма[ИмяТаблицы].Количество()<5 Тогда
		ТопТаблица = Результат[2].Выгрузить();
		Для Каждого СтрокаТЗ Из ТопТаблица Цикл
			Если ЭтаФорма[ИмяТаблицы].Количество()=5 Тогда
				Прервать;
			КонецЕсли;
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить(ИмяКолонки, СтрокаТЗ[ИмяКолонки]);
			Массив = ЭтаФорма[ИмяТаблицы].НайтиСтроки(СтруктураПоиска);
			Если Массив.Количество()>0 Тогда
				Продолжить;
			КонецЕсли; 
			НоваяСтрока = ЭтаФорма[ИмяТаблицы].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		КонецЦикла; 
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФразы()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПоМотивацииВАнкетахДополнительно.МотивирующаяФраза КАК МотивирующаяФраза,
		|	ДанныеПоМотивацииВАнкетахДополнительно.МотиваторыРазобраны КАК МотиваторыРазобраны
		|ИЗ
		|	РегистрСведений.ДанныеПоМотивацииВАнкетахДополнительно КАК ДанныеПоМотивацииВАнкетахДополнительно
		|ГДЕ
		|	ДанныеПоМотивацииВАнкетахДополнительно.Анкета = &Анкета";
	
	Запрос.УстановитьПараметр("Анкета", Анкета);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		МотивирующиеФразы = Выборка.МотивирующаяФраза;
		МотиваторыРазобраны = Выборка.МотиваторыРазобраны;
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаметки(МассивЗаметок)
	
	ЗаметкиПоВопросам.Очистить();
	Для Каждого ТекущаяСтрока Из МассивЗаметок Цикл
		НоваяСтрока = ЗаметкиПоВопросам.Добавить();
		ВопросШаблона = ТекущаяСтрока.Вопрос;
		КодРаздела = ВопросШаблона.Родитель.Код;
		НоваяСтрока.Вопрос = Строка(КодРаздела) + "." + Строка(ВопросШаблона.Код) + ". " + ВопросШаблона.Формулировка;
		НоваяСтрока.Заметка = ТекущаяСтрока.Заметки;
	КонецЦикла;
	ЗаметкиПоВопросам.Сортировать("Вопрос");
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыФормы()
	
	СоздатьЭлементыФормыПоТаблице("Мотиваторы");
	СоздатьЭлементыФормыПоТаблице("Демотиваторы");
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыФормыПоТаблице(ИмяТаблицы)
	
	ИмяКолонки = ИмяКолонки(ИмяТаблицы);
		
	Индекс = 0;
	Для Каждого СтрокаТЗ Из ЭтаФорма[ИмяТаблицы] Цикл
		ДобавитьЭлементыСтроки(Формат(Индекс, "ЧН=0; ЧГ="), ИмяТаблицы, ИмяКолонки, СтрокаТЗ.Комментарий);
		Индекс = Индекс + 1;
	КонецЦикла;
	
	ИмяКоманды = "ДобавитьПоказатель_" + ИмяТаблицы;
	Команда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	Команда.Действие = "ДобавитьПоказатель";
	Команда.Заголовок = НСтр("ru = 'Другое...'");
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы["Группа" + ИмяТаблицы]);
	НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	НовыйЭлемент.Вид  = ВидКнопкиФормы.Гиперссылка;

КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыСтроки(Индекс, ИмяТаблицы, ИмяКолонки, Комментарий="")
	
	ГруппаПолей = Элементы.Добавить(ИмяТаблицы + Индекс, Тип("ГруппаФормы"), Элементы["Группа" + ИмяТаблицы]);
	ГруппаПолей.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаПолей.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ГруппаПолей.ОтображатьЗаголовок = Ложь;
	
	НовыйЭлемент = Элементы.Добавить(ИмяТаблицы + ИмяКолонки+Индекс, Тип("ПолеФормы"), ГруппаПолей);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = ИмяТаблицы + "[" + Индекс + "]." + ИмяКолонки;
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	НовыйЭлемент.КнопкаОткрытия = Ложь;
	НовыйЭлемент.КнопкаВыпадающегоСписка = Ложь;
	НовыйЭлемент.Ширина = 20;
	НовыйЭлемент.ТолькоПросмотр = Истина;
	
	ИмяКоманды = "Увеличить_" + ИмяТаблицы + "_" + Индекс;
	Команда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	Команда.Действие = "УвеличитьПоказатель";
	Команда.Заголовок = "+";
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаПолей);
	НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	НовыйЭлемент.Ширина = 4;
	НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
	
	НовыйЭлемент = Элементы.Добавить(ИмяТаблицы + "Вес" + Индекс, Тип("ПолеФормы"), ГруппаПолей);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.Ширина = 2;
	НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
	НовыйЭлемент.ПутьКДанным = ИмяТаблицы + "[" + Индекс +"].Вес";
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	
	ИмяКоманды = "Уменьшить_" + ИмяТаблицы + "_" + Индекс;
	Команда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	Команда.Действие = "УменьшитьПоказатель";
	Команда.Заголовок = "-";
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаПолей);
	НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	НовыйЭлемент.Ширина = 4;
	НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
	
	ИмяКоманды = "Комментарий_" + ИмяТаблицы + "_" + Индекс;
	Команда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	Команда.Действие = "ИзменениеКомментария";
	Команда.Заголовок = ?(ЗначениеЗаполнено(Комментарий), Комментарий, НСтр("ru = 'Ввести комментарий'"));
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаПолей);
	НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	НовыйЭлемент.Вид  = ВидКнопкиФормы.Гиперссылка;
	НовыйЭлемент.Ширина = 15;
	НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
	НовыйЭлемент.Высота = 1;
	НовыйЭлемент.РастягиватьПоВертикали = Ложь;

КонецПроцедуры
 
&НаСервере
Процедура УстановитьДоступность(ГруппаФормы)
	
	Для Каждого ЭлементФормы Из ГруппаФормы.ПодчиненныеЭлементы Цикл
		Если ЭлементФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда
			УстановитьДоступность(ЭлементФормы);	
		ИначеЕсли ЭлементФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка Или ЭлементФормы.Вид = ВидКнопкиФормы.Гиперссылка Тогда
			ЭлементФормы.Доступность = Ложь;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти
