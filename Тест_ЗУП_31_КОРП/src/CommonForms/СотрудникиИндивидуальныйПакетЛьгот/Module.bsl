
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ДатаСеанса = ТекущаяДатаСеанса();
	
	Месяц = ДобавитьМесяц(НачалоМесяца(ДатаСеанса), 1);
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Месяц", "МесяцСтрокой");
	
	ФизическоеЛицо = Параметры.ФизическоеЛицо;
	ЗаполнитьИндивидуальныеЛьготы();
	
	Заголовок = Строка(ФизическоеЛицо);
	
	Если Не Пользователи.РолиДоступны("ДобавлениеИзменениеЛьготСотрудников") Тогда 
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Месяц", "МесяцСтрокой");
	МесяцПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Месяц", "МесяцСтрокой", Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт

	МесяцПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Месяц", "МесяцСтрокой", Направление);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцПриИзменении", 0.5, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцПриИзменении()
	
	МесяцПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьЛьготу(Команда)
	
	ВыбратьЛьготуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыборЛьготы(Команда)
	
	ОтменитьВыборЛьготыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	
	Если РазмерПакетаЛьгот > РазмерЛимита Тогда 
		ТекстВопроса = НСтр("ru = 'Превышен лимит сотрудника. Продолжить?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписатьИЗакрытьЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе 
		ЗаписатьИЗакрытьЗавершение(КодВозвратаДиалога.ОК, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьВыбранныеЛьготы();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура МесяцПриИзменении()
	
	ЗаполнитьИндивидуальныеЛьготы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИндивидуальныеЛьготы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДатаПолученияДанных = КонецМесяца(Месяц);
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.НачалоПериода = ДатаПолученияДанных;
	ПараметрыПолученияСотрудников.ОкончаниеПериода = ДатаПолученияДанных;
	ПараметрыПолученияСотрудников.СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
	ПараметрыПолученияСотрудников.КадровыеДанные = "Организация, Подразделение, Должность, ДолжностьПоШтатномуРасписанию";
	
	ДанныеФизическихЛиц = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолученияСотрудников);
	
	ТаблицаОписанийПозиций = ЛьготыСотрудников.ТаблицаОписанийПозиций();
	
	Для Каждого ДанныеФизическогоЛица Из ДанныеФизическихЛиц Цикл 
	
		НоваяСтрока = ТаблицаОписанийПозиций.Добавить();
		НоваяСтрока.Организация = ДанныеФизическогоЛица.Организация;
		НоваяСтрока.Подразделение = ДанныеФизическогоЛица.Подразделение;
		НоваяСтрока.Должность = ДанныеФизическогоЛица.Должность;
		НоваяСтрока.Позиция = ДанныеФизическогоЛица.ДолжностьПоШтатномуРасписанию;
		
	КонецЦикла;
	
	Запрос = ЛьготыСотрудников.ЗапросДанныеЛимитовЛьготПозиций(ТаблицаОписанийПозиций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДанныеЛимитов = Новый Соответствие;
	
	ИспользоватьЛимит = Истина;
	РазмерЛимита = 0;
	ДоступныВсеЛьготы = Ложь;
	
	Пока Выборка.Следующий() Цикл
		ДанныеЛимита = ЛьготыСотрудников.СтруктураДанныхЛимита();
		ЗаполнитьЗначенияСвойств(ДанныеЛимита, Выборка);
		ДанныеЛимитов.Вставить(Выборка.Позиция, ДанныеЛимита); 
	КонецЦикла;
	
	Для Каждого ДанныеФизическогоЛица Из ДанныеФизическихЛиц Цикл
		
		ДанныеЛимита = ДанныеЛимитов[ДанныеФизическогоЛица.ДолжностьПоШтатномуРасписанию];
		Если ДанныеЛимита = Неопределено Или Не ДанныеЛимита.ИспользоватьЛимит Тогда 
			ИспользоватьЛимит = Ложь;
			РазмерЛимита = 0;
		КонецЕсли;
		
		Если ИспользоватьЛимит Тогда 
			РазмерЛимита = Макс(РазмерЛимита, ДанныеЛимита.КоличествоБаллов);
		КонецЕсли;
		
		Если ДанныеЛимита <> Неопределено И ДанныеЛимита.ДоступныВсеЛьготы Тогда
			ДоступныВсеЛьготы = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаЛимитСотрудника", "Видимость", ИспользоватьЛимит);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РазмерПакетаЛьготИндикатор", "МаксимальноеЗначение", РазмерЛимита);
	
	ДоступныеЛьготы.Очистить();
	ВыбранныеЛьготы.Очистить();
	
	МассивВыбранныхЛьгот = ЛьготыСотрудников.ЛьготыФизическогоЛица(Месяц, ФизическоеЛицо);
	Если МассивВыбранныхЛьгот = Неопределено Тогда 
		МассивВыбранныхЛьгот = Новый Массив;
	КонецЕсли;
	
	Если ДоступныВсеЛьготы Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	Начисления.Ссылка,
		               |	Начисления.Наименование,
		               |	Начисления.КоличествоБаллов
		               |ИЗ
		               |	ПланВидовРасчета.Начисления КАК Начисления
		               |ГДЕ
		               |	Начисления.ЯвляетсяЛьготой
		               |	И Начисления.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ВыбираемаяСотрудникомЛьгота)
		               |	И НЕ Начисления.ПометкаУдаления
		               |	И НЕ Начисления.ВАрхиве";
					   
		МассивДоступныхЛьгот = Новый Массив;
		РеквизитыЛьгот = Новый Соответствие;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			МассивДоступныхЛьгот.Добавить(Выборка.Ссылка);
			РеквизитыЛьготы = Новый Структура("Наименование, КоличествоБаллов", Выборка.Наименование, Выборка.КоличествоБаллов);
			РеквизитыЛьгот.Вставить(Выборка.Ссылка, РеквизитыЛьготы);
		КонецЦикла;
		
	Иначе 
		
		Запрос = ЛьготыСотрудников.ЗапросДанныеЛьгот(ТаблицаОписанийПозиций);
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		МассивДоступныхЛьгот = Новый Массив;
		УникальныеЛьготы = Новый Соответствие;
		
		Выборка = РезультатыЗапроса[6].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если УникальныеЛьготы[Выборка.Льгота] <> Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			МассивДоступныхЛьгот.Добавить(Выборка.Льгота);
			УникальныеЛьготы.Вставить(Выборка.Льгота, Истина);
		КонецЦикла;
	
		РеквизитыЛьгот = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивДоступныхЛьгот, "Наименование, КоличествоБаллов");
		
	КонецЕсли;
	
	Для Каждого Льгота Из МассивВыбранныхЛьгот Цикл 
		
		РеквизитыЛьготы = РеквизитыЛьгот[Льгота];
		Если РеквизитыЛьготы = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ВыбранныеЛьготы.Добавить();
		НоваяСтрока.Льгота = Льгота;
		НоваяСтрока.Наименование = РеквизитыЛьготы.Наименование;
		НоваяСтрока.Стоимость = РеквизитыЛьготы.КоличествоБаллов;
		
	КонецЦикла;
	
	Для Каждого Льгота Из МассивДоступныхЛьгот Цикл
		
		Если МассивВыбранныхЛьгот.Найти(Льгота) <> Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		РеквизитыЛьготы = РеквизитыЛьгот[Льгота];
		Если РеквизитыЛьготы = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ДоступныеЛьготы.Добавить();
		НоваяСтрока.Льгота = Льгота;
		НоваяСтрока.Наименование = РеквизитыЛьготы.Наименование;
		НоваяСтрока.Стоимость = РеквизитыЛьготы.КоличествоБаллов;
		
	КонецЦикла;
	
	ДоступныеЛьготы.Сортировать("Наименование");
	ВыбранныеЛьготы.Сортировать("Наименование");
	
	РазмерПакетаЛьгот = ВыбранныеЛьготы.Итог("Стоимость");
	
	УстановитьТекстПодсказкиИндикатораРазмераПакетаЛьгот();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстПодсказкиИндикатораРазмераПакетаЛьгот()
	
	ТекстПодсказки = "" + РазмерПакетаЛьгот + "/" + РазмерЛимита;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РазмерПакетаЛьготИндикатор", "Подсказка", ТекстПодсказки);
	
	Если РазмерПакетаЛьгот = 0 Тогда 
		
		ШаблонПодсказки = НСтр("ru = 'Лимит %1, льготы не выбраны'");
		
		ПредставлениеРазмераЛимита = ПредставлениеКоличестваБаллов(РазмерЛимита);
		
		ТекстНадписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПодсказки, ПредставлениеРазмераЛимита);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаЛимитСотрудника", "Подсказка", ТекстНадписи);
		
	Иначе
		
		ШаблонПодсказки = НСтр("ru = 'Лимит %1, выбрано льгот на %2, осталось %3'");
		
		ПредставлениеРазмераЛимита = ПредставлениеКоличестваБаллов(РазмерЛимита);
		ПредставлениеРазмераПакетаЛьгот = ПредставлениеКоличестваБаллов(РазмерПакетаЛьгот);
		ПредставлениеОстаткаЛимита = ПредставлениеКоличестваБаллов(РазмерЛимита - РазмерПакетаЛьгот);
		
		ТекстНадписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПодсказки, ПредставлениеРазмераЛимита, ПредставлениеРазмераПакетаЛьгот, ПредставлениеОстаткаЛимита);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаЛимитСотрудника", "Подсказка", ТекстНадписи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеКоличестваБаллов(КоличествоБаллов)
	
	ПоследняяЦифра = Прав(КоличествоБаллов, 1);
	Если СтрНайти("0,5,6,7,8,9", ПоследняяЦифра) <> 0 Тогда 
		КоличествоБалловШаблон = НСтр("ru = '%1 баллов'");
	Иначе 
		ПоследниеДвеЦифры = Прав(КоличествоБаллов, 2);
		ПоследниеДвеЦифры = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПоследниеДвеЦифры, 2, "0");
		Если ПоследняяЦифра = "1" Тогда 
			КоличествоБалловШаблон = ?(ПоследниеДвеЦифры = "11", НСтр("ru = '%1 баллов'"), НСтр("ru = '%1 балл'"));
		Иначе
			КоличествоБалловШаблон = ?(Найти("12,13,14", ПоследниеДвеЦифры) = 0, НСтр("ru = '%1 балла'"), НСтр("ru = '%1 баллов'"));
		КонецЕсли;
	КонецЕсли;
	КоличествоБалловТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(КоличествоБалловШаблон, КоличествоБаллов);
	
	Возврат КоличествоБалловТекст;
	
КонецФункции

&НаСервере
Процедура ВыбратьЛьготуНаСервере()
	
	ИдентификаторТекущейСтроки = Элементы.ДоступныеЛьготы.ТекущаяСтрока;
	Если ИдентификаторТекущейСтроки = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеЛьготы = ДоступныеЛьготы.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	
	НоваяСтрока = ВыбранныеЛьготы.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЛьготы);
	
	ВыбранныеЛьготы.Сортировать("Наименование");
	
	ДоступныеЛьготы.Удалить(ДанныеЛьготы);
	
	РазмерПакетаЛьгот = ВыбранныеЛьготы.Итог("Стоимость");
	
	УстановитьТекстПодсказкиИндикатораРазмераПакетаЛьгот();
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьВыборЛьготыНаСервере()
	
	ИдентификаторТекущейСтроки = Элементы.ВыбранныеЛьготы.ТекущаяСтрока;
	Если ИдентификаторТекущейСтроки = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеЛьготы = ВыбранныеЛьготы.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	
	НоваяСтрока = ДоступныеЛьготы.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЛьготы);
	
	ДоступныеЛьготы.Сортировать("Наименование");
	
	ВыбранныеЛьготы.Удалить(ДанныеЛьготы);
	
	РазмерПакетаЛьгот = ВыбранныеЛьготы.Итог("Стоимость");
	
	УстановитьТекстПодсказкиИндикатораРазмераПакетаЛьгот();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВыбранныеЛьготы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ИндивидуальныеЛьготыФизическихЛиц.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Дата.Установить(Месяц);
	НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	
	Для Каждого ДанныеВыбраннойЛьготы Из ВыбранныеЛьготы Цикл 
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Дата = Месяц;
		НоваяЗапись.ФизическоеЛицо = ФизическоеЛицо;
	    НоваяЗапись.Льгота = ДанныеВыбраннойЛьготы.Льгота;
	КонецЦикла;
	
	Если НаборЗаписей.Количество() = 0 Тогда 
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Дата = Месяц;
		НоваяЗапись.ФизическоеЛицо = ФизическоеЛицо;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

