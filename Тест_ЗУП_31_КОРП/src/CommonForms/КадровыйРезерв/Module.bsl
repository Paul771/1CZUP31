#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	КадровыйРезервФормы.СоздатьКомандыФормыКадровогоРезерва(ЭтаФорма);
	КадровыйРезервФормы.СоздатьЭлементыФормыКомандыКадровогоРезерва(ЭтаФорма, Элементы.КоманднаяПанельФормы);
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "ФизическоеЛицоСсылка");
	ЭтаФорма.Заголовок = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизическоеЛицоСсылка, "Наименование");
	
	ПроинициализироватьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Подключаемый_НадписьРезерваОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", ПолучитьПозициюРезерваПоСсылке(НавигационнаяСсылкаФорматированнойСтроки));
	ОткрытьФорму("Справочник.КадровыйРезерв.ФормаОбъекта", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ЗаявкаНаВключениеВКадровыйРезерв(Команда)
	ЗначенияЗаполнения = Новый Структура("ФизическоеЛицо", ФизическоеЛицоСсылка);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	КадровыйРезервКлиент.ОткрытьФормуЗаявкаНаВключениеВКадровыйРезерв(ЭтаФорма, ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВключениеВКадровыйРезерв(Команда)
	ПараметрыФормы = Новый Структура("ФизическоеЛицо", ФизическоеЛицоСсылка);
	КадровыйРезервКлиент.ОткрытьФормуВключениеВКадровыйРезерв(ЭтаФорма, ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИсключениеИзКадровогоРезерва(Команда)
	ПараметрыФормы = Новый Структура("ФизическоеЛицо", ФизическоеЛицоСсылка);
	КадровыйРезервКлиент.ОткрытьФормуИсключениеИзКадровогоРезерва(ЭтаФорма, ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроинициализироватьФорму()
	СоздатьЭлементыФормыРезерва();
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыФормыРезерва()

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КадровыйРезерв.СоздатьВТКадровыйРезерв(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадровыйРезерв.ВидРезерва КАК ВидРезерва,
		|	КадровыйРезерв.ПозицияРезерва,
		|	КадровыйРезерв.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА КадровыйРезерв.Статус = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.ПустаяСсылка)
		|			ТОГДА 3
		|		КОГДА КадровыйРезерв.Статус = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Рассматривается)
		|			ТОГДА 2
		|		КОГДА КадровыйРезерв.Статус = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Согласовано)
		|			ТОГДА 1
		|	КОНЕЦ КАК ПриоритетСтатуса,
		|	КадровыйРезерв.ДатаВключения,
		|	КадровыйРезерв.ДатаИсключения,
		|	КадровыйРезерв.СтатусДоИсключения,
		|	КадровыйРезерв.Рейтинг,
		|	ВЫРАЗИТЬ(КадровыйРезерв.ПозицияРезерва КАК Справочник.КадровыйРезерв).Представление КАК ПозицияРезерваПредставление
		|ИЗ
		|	ВТКадровыйРезерв КАК КадровыйРезерв
		|ГДЕ
		|	КадровыйРезерв.ФизическоеЛицо = &ФизическоеЛицоСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПриоритетСтатуса
		|ИТОГИ ПО
		|	ВидРезерва,
		|	ПриоритетСтатуса";
		
	Запрос.УстановитьПараметр("ФизическоеЛицоСсылка", ФизическоеЛицоСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		СоздатьПоясняющуюНадписьОтсутствия();
	Иначе
		СоздатьЭлементыРезерва(РезультатЗапроса);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыРезерва(РезультатЗапроса)

	НомерПозицииРезерва = 0;
	ВыборкаВидРезерва = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВидРезерва.Следующий() Цикл
		ГруппаВидаСоздана = Ложь;
		ВыборкаПриоритетСтатуса= ВыборкаВидРезерва.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПриоритетСтатуса.Следующий() Цикл
			Если ВыборкаПриоритетСтатуса.ПриоритетСтатуса = 3 Тогда
				ГруппаВидРезерва = Элементы.ГруппаЭлементовКадровогоРезерваРанееСостоял
			ИначеЕсли НЕ ГруппаВидаСоздана Тогда
				НаименованиеГруппы = "ГруппаПозицииРезерва" + НомерПозицииРезерва;
				ГруппаВидРезерва = ГруппаЭлементыФормыДляПозицииРезерва(ЭтаФорма, НаименованиеГруппы, ВыборкаПриоритетСтатуса.ВидРезерва, Элементы.ГруппаЭлементовКадровогоРезерва);
				ГруппаВидаСоздана = Истина;
			КонецЕсли;
			ВыборкаРезультатаЗапроса = ВыборкаПриоритетСтатуса.Выбрать();
			Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
				ДобавитьРеквизитыФормыДляПозицииРезерва(ЭтаФорма, ВыборкаРезультатаЗапроса, НомерПозицииРезерва);
				ДобавитьЭлементыФормыДляПозицииРезерва(ЭтаФорма, ГруппаВидРезерва, НомерПозицииРезерва, ВыборкаРезультатаЗапроса);
				НомерПозицииРезерва = НомерПозицииРезерва + 1;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыФормыДляПозицииРезерва(Форма, Выборка, ПорядковыйНомер)

	ДобавляемыеРеквизиты = Новый Массив;
	РеквизитВидРезерва = Новый РеквизитФормы("НадписьРезерва" + ПорядковыйНомер, Новый ОписаниеТипов("ФорматированнаяСтрока"));
	ДобавляемыеРеквизиты.Добавить(РеквизитВидРезерва);
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	Форма["НадписьРезерва" + ПорядковыйНомер] = СобратьФорматированнуюСтрокуРезерва(Выборка);
	
КонецПроцедуры

&НаСервере
Функция СобратьФорматированнуюСтрокуРезерва(Выборка)

	СсылкаПозиции = Строка(Выборка.ПозицияРезерва.УникальныйИдентификатор());
	СтатусКандидат = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Рассматривается");
	СтатусРезервист = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Согласовано");
	
	МассивСтрок = Новый Массив;
	
	Если Выборка.ПриоритетСтатуса = 3 Тогда
		Если Выборка.СтатусДоИсключения = СтатусКандидат Тогда
			// Был исключен из резервистов.
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Ранее состоял в'") + " "));
		ИначеЕсли Выборка.СтатусДоИсключения = СтатусРезервист Тогда
			// Был исключен из кандидатов.
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Рассматривался на позицию'") + " "));
		КонецЕсли;
	ИначеЕсли Выборка.ПриоритетСтатуса = 2 Тогда
		// Если кандидат - укажем пояснение.
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Кандидат в'") + " "));
	КонецЕсли;
	
	// Добавим описание позиции.
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Выборка.ПозицияРезерваПредставление,,,,СсылкаПозиции));
	
	// Добавим описание времени.
	Если Выборка.ПриоритетСтатуса = 1 ИЛИ Выборка.ПриоритетСтатуса = 2 Тогда
		// Включен, собираем с датой начала (подробной).
		ДанныеСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.СведенияОСтаже();
		ДанныеСтажа.ДатаОтсчета = Выборка.ДатаВключения;
		СтажНаПозицииРезерва = ЗарплатаКадрыРасширенныйКлиентСервер.ПродолжительностьСтажа(ДанныеСтажа, ТекущаяДатаСеанса());
		ПредставлениеСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(СтажНаПозицииРезерва.Лет, СтажНаПозицииРезерва.Месяцев, 0);
		
		СтрокаВремени = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(" " + НСтр("ru = 'с %1 (%2)'") + " ",Формат(Выборка.ДатаВключения, "ДЛФ=D"), ПредставлениеСтажа);		
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаВремени));
	ИначеЕсли Выборка.ПриоритетСтатуса = 3 Тогда
		// Исключен, собираем с датами начала и окончания.
		Если Выборка.СтатусДоИсключения = СтатусРезервист Тогда
			СтрокаВремени = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				" " + НСтр("ru = 'с %1 по %2'") + " ", Формат(Выборка.ДатаВключения, "ДЛФ=D"), Формат(Выборка.ДатаИсключения, "ДЛФ=D"));
		ИначеЕсли Выборка.СтатусДоИсключения = СтатусКандидат Тогда
			СтрокаВремени = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				", " + НСтр("ru = 'отклонен %1'") + " ", Формат(Выборка.ДатаИсключения, "ДЛФ=D"));
		КонецЕсли;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрокаВремени));
	КонецЕсли;
		
	Возврат Новый ФорматированнаяСтрока(МассивСтрок);

КонецФункции

&НаСервере
Функция ГруппаЭлементыФормыДляПозицииРезерва(Форма, Имя, Заголовок, ГруппаВладелец)

	ГруппаФормы = Форма.Элементы.Вставить(Имя, Тип("ГруппаФормы"), ГруппаВладелец);
	ГруппаФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаФормы.ОтображатьЗаголовок = ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйРезервПоВидам");
	ГруппаФормы.Заголовок = Заголовок;
	ГруппаФормы.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаФормы.РастягиватьПоВертикали = Ложь;
	ГруппаФормы.РастягиватьПоГоризонтали = Ложь;
	
	Возврат ГруппаФормы;
	
КонецФункции
	
&НаСервере
Процедура ДобавитьЭлементыФормыДляПозицииРезерва(Форма, ГруппаФормы, ПорядковыйНомер, Выборка)
	
	// Создаем ПозицияРезерва
	ПолеПозицияРезерва = Форма.Элементы.Вставить("НадписьРезерва" + ПорядковыйНомер, Тип("ПолеФормы"), ГруппаФормы);
	ПолеПозицияРезерва.ПутьКДанным = "НадписьРезерва" + ПорядковыйНомер;
	ПолеПозицияРезерва.Вид = ВидПоляФормы.ПолеНадписи;
	ПолеПозицияРезерва.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ПолеПозицияРезерва.РастягиватьПоГоризонтали = Истина;
	ПолеПозицияРезерва.Ширина = 200;
	ПолеПозицияРезерва.УстановитьДействие("ОбработкаНавигационнойСсылки", "Подключаемый_НадписьРезерваОбработкаНавигационнойСсылки");
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьПоясняющуюНадписьОтсутствия()

	// Создаем реквизит формы.
	ДобавляемыеРеквизиты = Новый Массив;
	РеквизитИнфоНадписьНеСостоит = Новый РеквизитФормы("ИнфоНадписьНеСостоит", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(РеквизитИнфоНадписьНеСостоит);
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(ЭтаФорма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(ЭтаФорма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	ЭтаФорма.ИнфоНадписьНеСостоит = НСтр("ru = 'Сотрудник не состоит в кадровом резерве.'");
	
	// Создаем элемент формы.
	ПолеПозицияРезерва = ЭтаФорма.Элементы.Вставить("ИнфоНадписьНеСостоит", Тип("ПолеФормы"), ЭтаФорма.Элементы.ГруппаЭлементовКадровогоРезерва);
	ПолеПозицияРезерва.ПутьКДанным = "ИнфоНадписьНеСостоит";
	ПолеПозицияРезерва.Вид = ВидПоляФормы.ПолеНадписи;
	ПолеПозицияРезерва.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ПолеПозицияРезерва.РастягиватьПоГоризонтали = Истина;
	ПолеПозицияРезерва.Ширина = 200;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПозициюРезерваПоСсылке(НавигационнаяСсылка)
	
	Возврат КадровыйРезерв.ПолучитьПозициюРезерваПоСсылке(НавигационнаяСсылка);
	
КонецФункции

#КонецОбласти