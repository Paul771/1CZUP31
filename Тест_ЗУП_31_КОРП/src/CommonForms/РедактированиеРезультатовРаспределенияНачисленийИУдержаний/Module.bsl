
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ИдентификаторСтроки", ИдентификаторСтроки);
	Параметры.Свойство("Сотрудник", Сотрудник);
	Параметры.Свойство("Период", Период);
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("Подразделение", Подразделение);
	Параметры.Свойство("ОписаниеТаблицы", ОписаниеТаблицы);
	
	Параметры.Свойство("ДатаНачала", ДатаНачала);
	Параметры.Свойство("ВидРасчета", ВидРасчета);
	
	КоллекцияЗначений = Неопределено;
	Параметры.Свойство("РаспределяемыйРезультат", КоллекцияЗначений);
	ЗаполнитьТаблицуЗначений("РаспределяемыйРезультат", КоллекцияЗначений);
	
	Если РаспределяемыйРезультат.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьВидОперацииРаспределяемогоРезультата();
	
	КоллекцияЗначений = Неопределено;
	Параметры.Свойство("РаспределениеРезультатов", КоллекцияЗначений);
	Если Параметры.Свойство("АдресРаспределенияРезультатовВХранилище") И ЗначениеЗаполнено(Параметры.АдресРаспределенияРезультатовВХранилище) Тогда
		КоллекцияЗначений = КоллекцияЗначенийИзХранилища(Параметры.АдресРаспределенияРезультатовВХранилище, ОписаниеТаблицы, ИдентификаторСтроки);
	КонецЕсли;
	ИсходноеРаспределениеРезультатов = КоллекцияЗначений;
	ЗаполнитьТаблицуЗначений("РаспределениеРезультатов", КоллекцияЗначений);
	
	ИмяТаблицыРаспределениеРезультатов = ЗарплатаКадрыРасширенныйКлиентСервер.ИмяТаблицыРаспределениеРезультатовРасчета(ОписаниеТаблицы);
	
	ИспользоватьОбособленныеТерритории = ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеТерритории", Новый Структура("Организация",Организация));
	Если ИспользоватьОбособленныеТерритории Тогда
		
		ТаблицаТерриторий = РаспределениеРезультатов.Выгрузить(, "Территория,Результат");
		ТаблицаТерриторий.Свернуть("Территория", "Результат");
		Если ТаблицаТерриторий.Количество() = 1 Тогда
			
			Территория = ТаблицаТерриторий[0].Территория;
			Для каждого СтрокаРаспределяемыйРезультат Из РаспределяемыйРезультат Цикл
				СтрокаРаспределяемыйРезультат.Территория = Территория;
			КонецЦикла;
			
		ИначеЕсли ТаблицаТерриторий.Количество() > 1 Тогда
			
			ТаблицаРаспределяемыйРезультат = РаспределяемыйРезультат.Выгрузить();
			Для каждого СтрокаТаблицыРаспределяемогоРезультата Из ТаблицаРаспределяемыйРезультат Цикл
				
				ДобавитьНовуюСтроку = Ложь;
				СтрокаРаспределяемыйРезультат = Неопределено;
				Для каждого СтрокаТаблицыТерриторий Из ТаблицаТерриторий Цикл
					
					Если ДобавитьНовуюСтроку Тогда
						СтрокаРаспределяемыйРезультат = РаспределяемыйРезультат.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРаспределяемыйРезультат, СтрокаТаблицыРаспределяемогоРезультата);
					Иначе
						НайденныеСтроки = РаспределяемыйРезультат.НайтиСтроки(Новый Структура("ВидРасчета", СтрокаТаблицыРаспределяемогоРезультата.ВидРасчета));
						Если НайденныеСтроки.Количество() > 0 Тогда
							СтрокаРаспределяемыйРезультат = НайденныеСтроки[0];
						КонецЕсли; 
					КонецЕсли; 
					
					Если СтрокаРаспределяемыйРезультат <> Неопределено Тогда
						
						СтрокаРаспределяемыйРезультат.Территория = СтрокаТаблицыТерриторий.Территория;
						СтрокаРаспределяемыйРезультат.Результат = СтрокаТаблицыТерриторий.Результат;
						
						Если ЗначениеЗаполнено(СтрокаРаспределяемыйРезультат.Территория) Тогда
							СтрокаРаспределяемыйРезультат.Представление = Строка(СтрокаРаспределяемыйРезультат.Территория);
						Иначе
							СтрокаРаспределяемыйРезультат.Представление = НСтр("ru='Территория по умолчанию'");
						КонецЕсли;
						
					КонецЕсли; 
					
					ДобавитьНовуюСтроку = Истина;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	ЦветаСтиляПоясняющийТекст = ЦветаСтиля.ПоясняющийТекст;
	ЦветаСтиляПоясняющийОшибкуТекст = ЦветаСтиля.ПоясняющийОшибкуТекст;
	
	УстановитьОтображениеЭлементовФормы();
	
	Если ТипЗнч(Сотрудник) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		РабочиеМестаФизическогоЛица = КадровыйУчетРасширенный.РабочиеМестаФизическогоЛица(Сотрудник, Организация, КонецМесяца(Период), Истина, Истина, Истина);
		Если РабочиеМестаФизическогоЛица.Количество() > 0 Тогда
			
			Если РабочиеМестаФизическогоЛица.Количество() = 1 Тогда
				ЕдинственныйСотрудник = РабочиеМестаФизическогоЛица[0].Сотрудник;
			Иначе
				
				Для каждого ДанныеСотрудника Из РабочиеМестаФизическогоЛица Цикл
					
					Элементы.РаспределениеРезультатаСотрудник.СписокВыбора.Добавить(ДанныеСотрудника.Сотрудник, ДанныеСотрудника.ПредставлениеРабочегоМеста);
					Элементы.РаспределениеРезультатовСотрудник.СписокВыбора.Добавить(ДанныеСотрудника.Сотрудник, ДанныеСотрудника.ПредставлениеРабочегоМеста);
						
				КонецЦикла;
			
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"РаспределениеРезультатаСотрудник",
					"РежимВыбораИзСписка",
					Истина);
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"РаспределениеРезультатовСотрудник",
					"РежимВыбораИзСписка",
					Истина);
					
			КонецЕсли;
			
		КонецЕсли;
		
		УстановитьПредставленияРабочихМест();
			
	Иначе
		ЕдинственныйСотрудник = Сотрудник;
	КонецЕсли;
	
	ПараметрыФО = Новый Структура("Организация, Период", Организация, НачалоДня(Период));
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
	СтатьиФинансированияГранта = Новый ФиксированныйМассив(Новый Массив);
	Если ИмяТаблицыРаспределениеРезультатов = "РаспределениеРезультатовНачислений" Тогда
		// При распределении начислений получим настройку применения ЕНВД
		// информация о применении ЕНВД будет использоваться для анализа необходимости пересчета страховых взносов.
		ПрименяетсяЕНВД = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Организация, НачалоДня(Период));
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ГрантыНеоблагаемыеНДФЛ") Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("ГрантыНеоблагаемыеНДФЛ");
			Если Модуль.ИспользуютсяГрантыНеоблагаемыеНДФЛ() Тогда
				СтатьиФинансированияГранта = Новый ФиксированныйМассив(Модуль.СтатьиФинансированияГранта(Сотрудник, ВидРасчета, ДатаНачала));
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстПустогоЗначения = НСтр("ru='<подбирается автоматически>'");
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстПустогоЗначения);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РаспределениеРезультатов.ПодразделениеУчетаЗатрат");
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("РаспределениеРезультатаПодразделениеУчетаЗатрат");
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("РаспределениеРезультатовПодразделениеУчетаЗатрат");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидОперацииРаспределяемогоРезультата()

	МассивПособий = Новый Массив;
	МассивПособий.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС);
	МассивПособий.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	
	МассивДоговорыГПХ = Новый Массив;
	МассивДоговорыГПХ.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДоговорАвторскогоЗаказа);
	МассивДоговорыГПХ.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДоговорРаботыУслуги);
	
	ВидыУдержанийНДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ();
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	Для каждого Строка Из РаспределяемыйРезультат Цикл
		Строка.ВидОперации = НачислениеУдержаниеВидОперации[Строка.ВидРасчета];
		Строка.ПоказыватьПодразделениеУчетаЗатрат = (ВидыУдержанийНДФЛ.Найти(Строка.ВидРасчета) = Неопределено);
		Если МассивПособий.Найти(Строка.ВидОперации) <> Неопределено Тогда
			РаспределениеПособий = Истина;
		ИначеЕсли МассивДоговорыГПХ.Найти(Строка.ВидОперации) <> Неопределено Тогда
			РаспределениеДоговорыГПХ = Истина;
		КонецЕсли;
		ВРаспределенииЕстьНДФЛ = ВРаспределенииЕстьНДФЛ Или Не Строка.ПоказыватьПодразделениеУчетаЗатрат;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ОписаниеКолонок = ОписанияПроверяемыхКолонок();
	
	НомерСтроки = 0;
	Для каждого РаспределяемаяСтрока Из РаспределяемыйРезультат Цикл
		
		Если ОдинРезультат Тогда
			СтрокиРаспределения = РаспределениеРезультатов;
			ВидРасчета = Неопределено;
		Иначе
			СтрокиРаспределения = РаспределениеРезультатов.НайтиСтроки(Новый Структура("ВидУдержания", РаспределяемаяСтрока.ВидРасчета));
			ВидРасчета = РаспределяемаяСтрока.ВидРасчета;
		КонецЕсли;

		Для каждого СтрокаРаспределения Из СтрокиРаспределения Цикл
			
			Для каждого ОписаниеКолонки Из ОписаниеКолонок Цикл
				
				Если НЕ ЗначениеЗаполнено(СтрокаРаспределения[ОписаниеКолонки.Ключ]) Тогда
					
					ЗаголовокКолонки = ОписаниеКолонки.Значение;
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Поле ""%1"" не заполнено'"),
						ЗаголовокКолонки);
						
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения,
						,
						"РаспределениеРезультатов[" + НомерСтроки + "]." + ОписаниеКолонки.Ключ,
						,
						Отказ);
						
				КонецЕсли;
					
			КонецЦикла;
			
		КонецЦикла;
		
		РаспределеннаяСумма = РассчитатьРезультатРаспределения(ЭтаФорма, ВидРасчета, РаспределяемаяСтрока.Территория);
		ОстатокРаспределения = РаспределяемаяСтрока.Результат - РаспределеннаяСумма;
		Если ОстатокРаспределения <> 0 Тогда
			
			ТекстСообщения = ТекстСообщенияРезультатаРаспределения(РаспределяемаяСтрока, ОстатокРаспределения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,
				"РаспределяемыйРезультат[" + НомерСтроки + "].Результат",
				,
				Отказ);
			
		КонецЕсли; 
			
		НомерСтроки = НомерСтроки + 1;	
		
	КонецЦикла;
	
КонецПроцедуры

#Область ОбработчикиСобытийТаблицыФормыРаспределяемыйРезультат

&НаКлиенте
Процедура РаспределяемыйРезультатПриАктивизацииСтроки(Элемент)
	
	Если Элементы.РаспределяемыйРезультат.ТекущиеДанные <> Неопределено Тогда
		
		ТекущиеДанные = Элементы.РаспределяемыйРезультат.ТекущиеДанные;
		
		СтруктураОтбора = Новый Структура;
		Если ИмяТаблицыРаспределениеРезультатов <> "РаспределениеРезультатовНачислений" Тогда
			СтруктураОтбора.Вставить("ВидУдержания", ТекущиеДанные.ВидРасчета);
		КонецЕсли; 
		
		Если ИспользоватьОбособленныеТерритории Тогда
			СтруктураОтбора.Вставить("Территория", ТекущиеДанные.Территория);
		КонецЕсли;
		
		Элементы.РаспределениеРезультатов.ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
		
		УстановитьИнфоНадпись(ЭтаФорма, Элементы.РаспределяемыйРезультат.ТекущиеДанные);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			ИмяТаблицыРезультатовРаспределения + "АналитикаПодробно",
			"Видимость",
			ТекущиеДанные.ПоказыватьПодразделениеУчетаЗатрат);
			
		ВидимостьПолейАналитикаПодробно = ТекущиеДанные.ПоказыватьПодразделениеУчетаЗатрат И 
			ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(
				Элементы,
				ИмяТаблицыРезультатовРаспределения + "АналитикаПодробно",
				"Пометка");	
			
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			ИмяТаблицыРезультатовРаспределения + "ПодразделениеУчетаЗатрат",
			"Видимость",
			ВидимостьПолейАналитикаПодробно);	
	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРаспределениеРезультата

&НаКлиенте
Процедура РаспределениеРезультатаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ВидРасчета = РаспределяемыйРезультат[0].ВидРасчета;
		Территория = РаспределяемыйРезультат[0].Территория;
		Остаток = РаспределяемыйРезультат[0].Результат - РаспределяемыйРезультат[0].РезультатРаспределения;
		РаспределениеРезультатовПриДобавленииСтроки(Элемент.ТекущиеДанные, ВидРасчета, Территория, Остаток);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеРезультатаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = РаспределяемыйРезультат[0];
	УстановитьИнфоНадпись(ЭтаФорма, ТекущиеДанные);
	
	ТекущиеДанные = Элементы.РаспределениеРезультата.ТекущиеДанные;
	ТекущиеДанные.КодСтатьиФинансирования = КодСтатьиФинансирования(ТекущиеДанные.СтатьяФинансирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеРезультатаПослеУдаления(Элемент)
	
	ТекущиеДанные = РаспределяемыйРезультат[0];
	УстановитьИнфоНадпись(ЭтаФорма, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеРезультатаСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбработатьВыборРабочегоМеста(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРаспределениеРезультатов

&НаКлиенте
Процедура РаспределениеРезультатовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ВидРасчета = Элементы.РаспределяемыйРезультат.ТекущиеДанные.ВидРасчета;
		Территория = Элементы.РаспределяемыйРезультат.ТекущиеДанные.Территория;
		Остаток = Элементы.РаспределяемыйРезультат.ТекущиеДанные.Результат - Элементы.РаспределяемыйРезультат.ТекущиеДанные.РезультатРаспределения;
		РаспределениеРезультатовПриДобавленииСтроки(Элемент.ТекущиеДанные, ВидРасчета, Территория, Остаток);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеРезультатовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.РаспределяемыйРезультат.ТекущиеДанные;
	УстановитьИнфоНадпись(ЭтаФорма, ТекущиеДанные);
	                                                   
	ТекущиеДанные = Элементы.РаспределениеРезультатов.ТекущиеДанные;
	ТекущиеДанные.КодСтатьиФинансирования = КодСтатьиФинансирования(ТекущиеДанные.СтатьяФинансирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеРезультатовПослеУдаления(Элемент)
	
	ТекущиеДанные = Элементы.РаспределяемыйРезультат.ТекущиеДанные;
	УстановитьИнфоНадпись(ЭтаФорма, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеРезультатовСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбработатьВыборРабочегоМеста(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не Модифицированность Тогда
		ОповеститьОВыборе(Неопределено);
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ОповеститьОбИзменениях(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РаспределениеРезультатовПриДобавленииСтроки(ДанныеНовойСтроки, ВидРасчета, Территория, Остаток)
	
	Если НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.ВидУдержания) Тогда
		ДанныеНовойСтроки.ВидУдержания = ВидРасчета;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.Сотрудник) Тогда
		ДанныеНовойСтроки.Сотрудник = ЕдинственныйСотрудник;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.Подразделение) Тогда
		ДанныеНовойСтроки.Подразделение = Подразделение;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.Территория) Тогда
		ДанныеНовойСтроки.Территория = Территория;
	КонецЕсли;
	
	Если РаспределяемыйРезультат.Количество() > 1 Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.Сотрудник) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатовСотрудник";
		ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.Подразделение) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатовПодразделение";
		ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.СтатьяФинансирования) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатовСтатьяФинансирования";
		ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.СтатьяРасходов) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатовСтатьяРасходов";
		ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.СпособОтраженияЗарплатыВБухучете) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатовСпособОтраженияЗарплатыВБухучете";
		Иначе
			ИмяТекущегоПоля = "РаспределениеРезультатовРезультат";
		КонецЕсли;
	
	Иначе
		
		Если НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.Сотрудник) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатаСотрудник";
		ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.Подразделение) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатаПодразделение";
		ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.СтатьяФинансирования) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатаСтатьяФинансирования";
		ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.СтатьяРасходов) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатаСтатьяРасходов";
		ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеНовойСтроки.СпособОтраженияЗарплатыВБухучете) Тогда
			ИмяТекущегоПоля = "РаспределениеРезультатаСпособОтраженияЗарплатыВБухучете";
		Иначе
			ИмяТекущегоПоля = "РаспределениеРезультатаРезультат";
		КонецЕсли;
	
	КонецЕсли;
	
	ТекущийЭлемент = Элементы.Найти(ИмяТекущегоПоля);
	
	Если Остаток > 0 Тогда
		ДанныеНовойСтроки.Результат = Остаток;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзменениях(Отказ)
	
	Если Модифицированность Тогда
		
		ОчиститьСообщения();
		
		Если ПроверитьЗаполнение() Тогда
			
			Модифицированность = Ложь;
			
			ПараметрыОповещения = Новый Структура;   
			ПараметрыОповещения.Вставить("ПрименяетсяЕНВД", ПрименяетсяЕНВД);
			ПараметрыОповещения.Вставить("СотрудникФизическоеЛицо", Сотрудник);
			ПараметрыОповещения.Вставить("РаспределениеРезультатов", ВозвращаемыйРезультат());
			ПараметрыОповещения.Вставить("ИсходноеРаспределениеРезультатов", ИсходноеРаспределениеРезультатов);
			ПараметрыОповещения.Вставить("СтатьиФинансированияГранта", СтатьиФинансированияГранта);
			
			ОповеститьОВыборе(ПараметрыОповещения);
			
		Иначе
			Отказ = Истина;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеЭлементовФормы()
	
	ОдинРезультат = РаспределяемыйРезультат.Количество() = 1;
	
	Если Не ОдинРезультат Тогда
		
		ИмяСкрываемойСтраницы = "ОдинРезультатСтраница";
		ИмяТаблицыРезультатовРаспределения = "РаспределениеРезультатов";
		Для каждого СтрокаРаспределяемогоРезультата Из РаспределяемыйРезультат Цикл
			СтрокаРаспределяемогоРезультата.РезультатРаспределения =	
				РассчитатьРезультатРаспределения(ЭтаФорма, СтрокаРаспределяемогоРезультата.ВидРасчета, СтрокаРаспределяемогоРезультата.Территория);
		КонецЦикла;
			
	Иначе
		
		ИмяСкрываемойСтраницы = "НесколькоРезультатовСтраница";
		ИмяТаблицыРезультатовРаспределения = "РаспределениеРезультата";
		УстановитьИнфоНадпись(ЭтаФорма, РаспределяемыйРезультат[0]);
			
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		ИмяСкрываемойСтраницы,
		"Видимость",
		Ложь);
		
	ЕстьПодразделениеУчетаЗатрат = Ложь;
	ИменаКолонок = "СтатьяФинансирования,СтатьяРасходов,Результат";
	Если ИмяТаблицыРаспределениеРезультатов = "РаспределениеРезультатовНачислений" Тогда
		ИменаКолонок = ИменаКолонок + ",ОблагаетсяЕНВД";
		Если Не РаспределениеПособий Тогда
			ИменаКолонок = ИменаКолонок + ",СпособОтраженияЗарплатыВБухучете";
		КонецЕсли;
		ЕстьПодразделениеУчетаЗатрат = Не РаспределениеДоговорыГПХ И Не РаспределениеПособий;
	ИначеЕсли ИмяТаблицыРаспределениеРезультатов = "РаспределениеРезультатовУдержаний" Тогда
		ИменаКолонок =  ИменаКолонок + ",Сотрудник,Подразделение";
		ЕстьПодразделениеУчетаЗатрат = Не ВРаспределенииЕстьНДФЛ;
	КонецЕсли;
		
	ИменаДоступныхКолонок = Новый ФиксированныйМассив(СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаКолонок));
	
	Для каждого ИмяКолонки Из ИменаДоступныхКолонок Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			ИмяТаблицыРезультатовРаспределения + ИмяКолонки,
			"Видимость",
			Истина);
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		ИмяТаблицыРезультатовРаспределения + "АналитикаПодробно",
		"Видимость",
		ЕстьПодразделениеУчетаЗатрат И ОдинРезультат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЗначений(ИмяРеквизита, КоллекцияЗначений)
	
	ТипКоллекцииЗначений = ТипЗнч(КоллекцияЗначений);
	Если ТипКоллекцииЗначений = Тип("Массив") ИЛИ ТипКоллекцииЗначений = Тип("ФиксированныйМассив") Тогда
		
		Для каждого ЭлементКоллекции Из КоллекцияЗначений Цикл
			
			Если ТипЗнч(ЭлементКоллекции) = Тип("КлючИЗначение") Тогда
				ЗначениеЭлемента = ЭлементКоллекции.Значение;
			Иначе
				ЗначениеЭлемента = ЭлементКоллекции;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЭтаФорма[ИмяРеквизита].Добавить(), ЗначениеЭлемента);
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоллекцияЗначенийИзХранилища(АдресРаспределенияРезультатовВХранилище, ОписаниеТаблицы, ИдентификаторСтроки)
	
	РаспределениеРезультатов = ПолучитьИзВременногоХранилища(АдресРаспределенияРезультатовВХранилище);
		
	СтрокиРаспределения = РаспределениеРезультатов.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки));
	
	Если СтрокиРаспределения.Количество() = 0 Тогда 
		Возврат Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
	
	СтатьиФинансирования = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиРаспределения, "СтатьяФинансирования", Истина);
	КодыСтатейФинансирования = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СтатьиФинансирования, "Код");
	
	ИменаКолонок = ЗарплатаКадрыРасширенныйКлиентСервер.ИменаКолонокТаблицыРаспределенияРезультатовРасчета(ОписаниеТаблицы);
	ОписаниеСтроки = Новый Структура(ИменаКолонок);
	
	РезультатРаспределения = Новый Массив;
	
	Для Каждого СтрокаРаспределения Из СтрокиРаспределения Цикл 
		ЗаполнитьЗначенияСвойств(ОписаниеСтроки, СтрокаРаспределения);
		ОписаниеСтроки.КодСтатьиФинансирования = КодыСтатейФинансирования[ОписаниеСтроки.СтатьяФинансирования];
		РезультатРаспределения.Добавить(Новый ФиксированнаяСтруктура(ОписаниеСтроки));
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(РезультатРаспределения);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РассчитатьРезультатРаспределения(Форма, ВидРасчета, Территория)
	
	РаспределениеРезультатов = Форма.РаспределениеРезультатов;
	РаспределяемыйРезультат = Форма.РаспределяемыйРезультат;
	ИспользоватьОбособленныеТерритории = Форма.ИспользоватьОбособленныеТерритории;
	
	РезультатРаспределения = 0;
	
	СтруктураОтбора = Новый Структура;
	Если ИспользоватьОбособленныеТерритории Тогда
		СтруктураОтбора.Вставить("Территория", Территория);
	КонецЕсли;
	
	Если Форма.ИмяТаблицыРаспределениеРезультатов <> "РаспределениеРезультатовНачислений" И ВидРасчета <> Неопределено Тогда
		СтруктураОтбора.Вставить("ВидУдержания", ВидРасчета);
	КонецЕсли; 
	
	Если СтруктураОтбора.Количество() = 0 Тогда
		СтрокиРаспределения = РаспределениеРезультатов;
	Иначе
		СтрокиРаспределения = РаспределениеРезультатов.НайтиСтроки(СтруктураОтбора);
	КонецЕсли;
	
	Для каждого СтрокаРаспределения Из СтрокиРаспределения Цикл
		РезультатРаспределения = РезультатРаспределения + СтрокаРаспределения.Результат;
	КонецЦикла;
	
	Возврат РезультатРаспределения;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстСообщенияРезультатаРаспределения(РаспределяемаяСтрока, ОстатокРаспределения)
	
	Если ОстатокРаспределения = 0 Тогда
		ТекстСообщения = "";
	ИначеЕсли ОстатокРаспределения > 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 не распределено %2'"),
			РаспределяемаяСтрока.Представление,
			ОстатокРаспределения);
		
	Иначе
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 распределено больше на %2'"),
			РаспределяемаяСтрока.Представление,
			- ОстатокРаспределения);
			
	КонецЕсли;
		
	Возврат ТекстСообщения;	
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьИнфоНадпись(Форма, ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено Тогда
		
		Форма.РезультатРаспределенияИнфоНадпись = "";
		Форма.РезультатРаспределенияИнфоКартинка = Новый Картинка;
		
		Возврат;
		
	КонецЕсли; 
	
	ВидРасчета = ?(Форма.ОдинРезультат, Неопределено, ТекущиеДанные.ВидРасчета);
	Форма.ИтогоРезультатРаспределения = РассчитатьРезультатРаспределения(Форма, ВидРасчета, ТекущиеДанные.Территория);
	ТекущиеДанные.РезультатРаспределения = Форма.ИтогоРезультатРаспределения;
	ОстатокРаспределения = ТекущиеДанные.Результат - ТекущиеДанные.РезультатРаспределения;
	
	Форма.РезультатРаспределенияИнфоНадпись = ТекстСообщенияРезультатаРаспределения(ТекущиеДанные, ОстатокРаспределения);
	
	Если ОстатокРаспределения <> 0 Тогда
		Форма.РезультатРаспределенияИнфоКартинка = БиблиотекаКартинок.Предупреждение;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"РезультатРаспределенияИнфоНадпись",
			"ЦветТекста",
			Форма.ЦветаСтиляПоясняющийОшибкуТекст);
	Иначе
		Форма.РезультатРаспределенияИнфоКартинка = Новый Картинка;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВозвращаемыйРезультат()
	
	ИменаКолонок = ЗарплатаКадрыРасширенныйКлиентСервер.ИменаКолонокТаблицыРаспределенияРезультатовРасчета(ОписаниеТаблицы);
	
	СтруктураВозврата = Новый Массив;
	Для каждого СтрокаРаспределениеРезультатов Из РаспределениеРезультатов Цикл
		
		ОписаниеСтроки = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(ОписаниеСтроки, СтрокаРаспределениеРезультатов);
		
		СтруктураВозврата.Добавить(ОписаниеСтроки);
		
	КонецЦикла; 
	
	Возврат Новый ФиксированныйМассив(СтруктураВозврата);
	
КонецФункции

&НаСервере
Функция ОписанияПроверяемыхКолонок()
	
	ИменаКолонок = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИменаКолонок, ИменаДоступныхКолонок);
		
	СписокИменКолонокИсключаемыхИзПроверки = ИменаКолонокИсключаемыхИзПроверки();
	Для каждого ИмяКолонкиИсключаемойИзПроверки Из СписокИменКолонокИсключаемыхИзПроверки Цикл
		Индекс = ИменаКолонок.Найти(ИмяКолонкиИсключаемойИзПроверки);
		Если Индекс <> Неопределено Тогда
			ИменаКолонок.Удалить(Индекс);
		КонецЕсли; 
	КонецЦикла;
	
	ОписаниеКолонок = Новый Соответствие;
	
	РеквизитыТаблицы = ПолучитьРеквизиты("РаспределениеРезультатов");
	Для каждого РеквизитТаблицы Из РеквизитыТаблицы Цикл
		Если ИменаКолонок.Найти(РеквизитТаблицы.Имя) <> Неопределено Тогда
			ОписаниеКолонок.Вставить(РеквизитТаблицы.Имя, РеквизитТаблицы.Заголовок);
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ОписаниеКолонок;
	
КонецФункции

&НаСервере
Функция ИменаКолонокИсключаемыхИзПроверки()
	
	ИменаКолонок = "ОблагаетсяЕНВД,Результат,Подразделение,ПодразделениеУчетаЗатрат";
	
	Если НЕ ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		ИменаКолонок = ИменаКолонок + ",СтатьяРасходов";
	КонецЕсли; 
	
	Возврат СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаКолонок);
	
КонецФункции

&НаСервере
Функция КодСтатьиФинансирования(СтатьяФинансирования)	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтатьяФинансирования, "Код");	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборРабочегоМеста(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИдентификаторТекущейСтроки = Элемент.Родитель.ТекущаяСтрока;
	Если ИдентификаторТекущейСтроки <> Неопределено Тогда
		
		ТекущиеДанные = РаспределениеРезультатов.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
		ТекущиеДанные.Сотрудник = ВыбранноеЗначение;
		УстановитьПредставлениеРабочегоМестаВСтроке(ЭтаФорма, ТекущиеДанные);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеРабочегоМестаВСтроке(Форма, СтрокаРаспределенияРезультатов)
	
	Если Форма.ОдинРезультат Тогда
		СписокВыбора = Форма.Элементы.РаспределениеРезультатаСотрудник.СписокВыбора;
	Иначе
		СписокВыбора = Форма.Элементы.РаспределениеРезультатовСотрудник.СписокВыбора;
	КонецЕсли;
	
	ЗначениеСпискаВыбора = СписокВыбора.НайтиПоЗначению(СтрокаРаспределенияРезультатов.Сотрудник);
	Если ЗначениеСпискаВыбора = Неопределено Тогда
		ПредставлениеРабочегоМеста = "";
	Иначе
		ПредставлениеРабочегоМеста = ЗначениеСпискаВыбора.Представление;
	КонецЕсли;
	
	СтрокаРаспределенияРезультатов.ПредставлениеРабочегоМеста = ПредставлениеРабочегоМеста;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставленияРабочихМест()
	
	Для каждого СтрокаРаспределенияРезультатов Из РаспределениеРезультатов Цикл
		УстановитьПредставлениеРабочегоМестаВСтроке(ЭтаФорма, СтрокаРаспределенияРезультатов);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	Отказ = Ложь;
	ОповеститьОбИзменениях(Отказ);
	
	Если Не Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаПодробно(Команда)
	
	ВидимостьПолейАналитикаПодробно = Не ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(
		Элементы,
		ИмяТаблицыРезультатовРаспределения + "АналитикаПодробно",
		"Пометка");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		ИмяТаблицыРезультатовРаспределения + "АналитикаПодробно",
		"Пометка",
		ВидимостьПолейАналитикаПодробно);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		ИмяТаблицыРезультатовРаспределения + "ПодразделениеУчетаЗатрат",
		"Видимость",
		ВидимостьПолейАналитикаПодробно);
	
КонецПроцедуры

#КонецОбласти
