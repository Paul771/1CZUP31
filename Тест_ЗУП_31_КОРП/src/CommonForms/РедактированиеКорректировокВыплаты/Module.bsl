
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьФизическоеЛицо(Параметры.СотрудникФизическоеЛицо);
	РасчетЗарплатыРасширенныйФормы.ДокументыНачисленийДополнитьФормуРезультатыРаспределения(ЭтаФорма, ОписанияТаблицДляРаспределенияРезультата());
	
	МесяцНачисления = Параметры.МесяцНачисления;
	Организация = Параметры.Организация;
	
	ДанныеКорректировокВыплаты = ПолучитьИзВременногоХранилища(Параметры.ДанныеКорректировокВыплаты);
	КорректировкиВыплаты.Загрузить(ДанныеКорректировокВыплаты.КорректировкиВыплаты);
	РаспределениеРезультатовУдержаний.Загрузить(ДанныеКорректировокВыплаты.РаспределениеРезультатовУдержаний);
	
	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	ЗарплатаКадрыРасширенный.ВводРаспределенияРезультатовРасчетаДанныеВРеквизит(ЭтаФорма, ОписанияТаблицДляРаспределенияРезультата());
	
	ДанныеОбъекта = Новый Структура("КорректировкиВыплаты", КорректировкиВыплаты);
	ОбразФормы = Новый Структура("Объект", ДанныеОбъекта);
	ОтражениеЗарплатыВБухучетеРасширенный.ОбъектПриЧтенииНаСервереПредставлениеРаспределения(ОбразФормы, ОписаниеДокумента());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКорректировкиВыплаты

&НаКлиенте
Процедура КорректировкиВыплатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если СтрНайти(Поле.Имя, "КомандаРедактированияРаспределения") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадрыРасширенныйКлиент.ОткрытьФормуРедактированияРезультатовРаспределенияПоИсточникамФинансирования(
		ЭтаФорма, ОписаниеТаблицыКорректировкиВыплаты(), ВыбраннаяСтрока, МесяцНачисления, Организация);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкиВыплатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.КорректировкиВыплаты.ТекущиеДанные;
	Если НоваяСтрока И Не Копирование Тогда 
		ТекущиеДанные.ФиксСтрока = Истина;
		ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицо;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Модифицированность Тогда
		Оповестить("ИзмененыКорректировкиВыплаты", ПоместитьИзмененныеДанныеВоВременноеХранилище(), ЭтаФорма);
		Модифицированность = Ложь;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьФизическоеЛицо(СотрудникФизическоеЛицо)
	
	Если ТипЗнч(СотрудникФизическоеЛицо) = Тип("СправочникСсылка.ФизическиеЛица") Тогда 
		ФизическоеЛицо = СотрудникФизическоеЛицо;
		Возврат;
	КонецЕсли;
	
	ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СотрудникФизическоеЛицо, "ФизическоеЛицо");
	
КонецПроцедуры

&НаСервере
Функция ПоместитьИзмененныеДанныеВоВременноеХранилище()
	
	ЗарплатаКадрыРасширенный.ВводРаспределенияРезультатовРасчетаРеквизитВДанные(ЭтаФорма, ЭтаФорма, ОписанияТаблицДляРаспределенияРезультата());
	
	ВозвращаемыеСведения = Новый Структура;
	ВозвращаемыеСведения.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	ВозвращаемыеСведения.Вставить("КорректировкиВыплаты", КорректировкиВыплаты.Выгрузить());
	ВозвращаемыеСведения.Вставить("РаспределениеРезультатовУдержаний", РаспределениеРезультатовУдержаний.Выгрузить());
	
	Возврат ПоместитьВоВременноеХранилище(ВозвращаемыеСведения, Новый УникальныйИдентификатор);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписанияТаблицДляРаспределенияРезультата()
	
	ОписанияТаблиц = Новый Массив;
	ОписанияТаблиц.Добавить(ОписаниеТаблицыКорректировкиВыплаты());
	
	Возврат ОписанияТаблиц;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеТаблицыКорректировкиВыплаты()
	                          
	ОписаниеТаблицы = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыРасчета();
	ОписаниеТаблицы.ИмяТаблицы = "КорректировкиВыплаты";
	ОписаниеТаблицы.ПутьКДанным = "КорректировкиВыплаты";
	ОписаниеТаблицы.ИмяПоляРезультат = "КорректировкаВыплаты";
	ОписаниеТаблицы.НомерТаблицы = РасчетЗарплатыБазовыйКлиентСервер.НомерТаблицыКорректировкиВыплаты();
	ОписаниеТаблицы.СодержитПолеВидРасчета = Ложь;
	ОписаниеТаблицы.СодержитПолеСотрудник = Ложь;
	ОписаниеТаблицы.ИмяРеквизитаСотрудник = "ФизическоеЛицо";
	
	ОписаниеТаблицы.ПутьКДаннымРаспределениеРезультатов = "РаспределениеРезультатовУдержаний";
	ОписаниеТаблицы.ИмяРеквизитаИдентификаторСтроки = "ИдентификаторСтроки";
	ОписаниеТаблицы.УстанавливатьИдентификаторСтрокиРаспределенияРезультата = Истина;
	ОписаниеТаблицы.ОтображатьПоляРаспределенияРезультатов = Истина;
	
	Возврат ОписаниеТаблицы;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтруктураОписанияТаблицДляРаспределенияРезультата() Экспорт

	ОписанияТаблиц = Новый Структура;
	ОписанияТаблиц.Вставить("КорректировкиВыплаты", ОписаниеТаблицыКорректировкиВыплаты());
	
	Возврат ОписанияТаблиц;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеДокумента()
	
	Описание = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеРасчетногоДокумента();
	Описание.КорректировкиВыплатыИмя = "КорректировкиВыплаты";
	
	Описание.ОписанияТаблицДляРаспределенияРезультата = СтруктураОписанияТаблицДляРаспределенияРезультата();
	
	Возврат Описание;
	
КонецФункции

&НаКлиенте
Процедура КорректировкиВыплатыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ПерераспределитьКорректировкиВыплаты(ТекущиеДанные, РаботаВБюджетномУчреждении);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
