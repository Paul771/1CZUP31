#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ХарактеристикиОбучениеТребуетсяОбучениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ХарактеристикиОбучение.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если (НЕ СкрытьТребуетсяОбучение И ТекущиеДанные.ТребуетсяОбучение)
		И ТекущиеДанные.ВсегоМероприятий = 1 Тогда
		
		ДобавитьЕдинственноеМероприятие(ТекущиеДанные.Характеристика);
	КонецЕсли;
	
	ХарактеристикиОбучениеТребуетсяОбучениеПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыХарактеристикиОбучение

&НаКлиенте
Процедура ХарактеристикиОбучениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "ХарактеристикиОбучениеКомандаПодбора" Тогда
		ОбучениеРазвитиеКлиент.ПодобратьМероприятиеПоХарактеристике(ЭтаФорма, Элементы.ХарактеристикиОбучение.ТекущиеДанные, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыПрограммаОбучения

&НаКлиенте
Процедура ПрограммаОбученияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НоваяСтрока И Не ОтменаРедактирования Тогда
		ЗаполнитьВторичныеРеквизитыПодбораМероприятийТаблицыХарактеристик();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрограммаОбученияПослеУдаления(Элемент)
	ЗаполнитьВторичныеРеквизитыПодбораМероприятийТаблицыХарактеристик();
КонецПроцедуры

&НаКлиенте
Процедура ПрограммаОбученияПриИзменении(Элемент)
	
	СтруктураИменРеквизитов = ОбучениеРазвитиеКлиентСервер.ОписаниеСтруктурыИменРеквизитовПрограммыОбучения();
	СтруктураИменРеквизитов.ИмяРеквизитаПрограммаОбучения = "ПрограммаОбучения";
	СтруктураИменРеквизитов.ИмяРеквизитаЧислаКолонок = "ПродолжительностьПланаОбучения";
	
	ОбучениеРазвитиеКлиент.ПрограммаОбученияПриИзменении(ЭтаФорма, Элемент, Элементы.ПрограммаОбучения, СтруктураИменРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрограммаОбученияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ПрограммаОбученияСтрокаХарактеристик" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Ключ", Элементы.ПрограммаОбучения.ТекущиеДанные.Мероприятие);
		СтруктураПараметров.Вставить("ОткрытьСписокХарактеристик", Истина);
		
		ОткрытьФорму("Справочник.МероприятияОбученияРазвития.ФормаОбъекта", СтруктураПараметров, ЭтаФорма, УникальныйИдентификатор);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрограммаОбученияМероприятиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПрограммаОбучения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьВторичныеРеквизитыВСтрокеПланаОбученияНаСервере(ТекущиеДанные.ПолучитьИдентификатор());
	
	ЗаполнитьВторичныеРеквизитыПодбораМероприятийТаблицыХарактеристик();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресПрограммыОбучения", АдресПрограммыОбучения());
	Если ДоступноТребуетсяОбучение Тогда
		СтруктураПараметров.Вставить("АдресХарактеристикиОбучение", АдресХарактеристикиОбучение());
	КонецЕсли;
	
	Закрыть(СтруктураПараметров);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьВсегоМероприятийВТаблицеХарактеристик()

	Для каждого СтрокаХарактеристик Из Характеристики Цикл
		НайденныеСтроки = КэшХарактеристикиМероприятия.НайтиСтроки(Новый Структура("Характеристика", СтрокаХарактеристик.Характеристика));
		СтрокаХарактеристик.ВсегоМероприятий = НайденныеСтроки.Количество();
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура ПрочитатьРеквизитыИзПараметров()

	Если Параметры.Свойство("АдресХарактеристикПерсонала") Тогда
		ТаблицаХарактеристик = ПолучитьИзВременногоХранилища(Параметры.АдресХарактеристикПерсонала);
		Если ТаблицаХарактеристик.Колонки.Найти("ТребуетсяОбучение") = Неопределено Тогда
			ТаблицаХарактеристик.Колонки.Добавить("ТребуетсяОбучение", Новый ОписаниеТипов("Булево"));
			ТаблицаХарактеристик.ЗаполнитьЗначения(Истина, "ТребуетсяОбучение");
		КонецЕсли;
		Характеристики.Загрузить(ТаблицаХарактеристик);
	КонецЕсли;
	Если Параметры.Свойство("АдресПрограммыОбучения") Тогда
		ПрограммаОбучения.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресПрограммыОбучения));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	УстановитьПризнакиОтображенияРеквизитовФормы();
	
	ПрочитатьРеквизитыИзПараметров();
	
	ОбучениеРазвитиеФормы.ЗаполнитьКэшХарактеристикиМероприятия(КэшХарактеристикиМероприятия, Характеристики.Выгрузить(, "Характеристика").ВыгрузитьКолонку("Характеристика"));
	ЗаполнитьВсегоМероприятийВТаблицеХарактеристик();
	ЗаполнитьВторичныеРеквизитыПодбораМероприятийТаблицыХарактеристик();
	
	ЗаполнитьВторичныеРеквизитыВСтрокеПланаОбученияНаСервере();
	
	УстановитьСвойстваЭлементовФормы();

КонецПроцедуры

&НаСервере
Процедура УстановитьПризнакиОтображенияРеквизитовФормы()

	ДоступноТребуетсяОбучение = Истина;
	
	Если Параметры.Свойство("СкрытьРеквизиты") Тогда
		СписокСкрываемыхРеквизитов = Параметры.СкрытьРеквизиты;
		Если СписокСкрываемыхРеквизитов.Свойство("ТребуетсяОбучение") Тогда
			СкрытьТребуетсяОбучение = Истина;
			ДоступноТребуетсяОбучение = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("НедоступныеРеквизиты") Тогда
		СписокСкрываемыхРеквизитов = Параметры.НедоступныеРеквизиты;
		Если СписокСкрываемыхРеквизитов.Свойство("ТребуетсяОбучение") Тогда
			ДоступноТребуетсяОбучение = Ложь;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ХарактеристикиОбучениеТребуетсяОбучение",
		"Видимость",
		Не СкрытьТребуетсяОбучение);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ХарактеристикиОбучениеТребуетсяОбучение",
		"ТолькоПросмотр",
		Не ДоступноТребуетсяОбучение);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПодбораМероприятийПоХарактеристикамНаСервере(РезультатЗакрытия) Экспорт
	ДобавитьВыбранныеМероприятияВПрограммуОбучения(РезультатЗакрытия);
КонецПроцедуры

&НаСервере
Процедура ДобавитьЕдинственноеМероприятие(ХарактеристикаСсылка) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	МероприятияОбученияРазвитияХарактеристикиПерсонала.Ссылка КАК МероприятиеОбучения
		|ИЗ
		|	Справочник.МероприятияОбученияРазвития.ХарактеристикиПерсонала КАК МероприятияОбученияРазвитияХарактеристикиПерсонала
		|ГДЕ
		|	МероприятияОбученияРазвитияХарактеристикиПерсонала.Характеристика = &ХарактеристикаСсылка";
	
	Запрос.УстановитьПараметр("ХарактеристикаСсылка", ХарактеристикаСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	ДобавитьВыбранныеМероприятияВПрограммуОбучения(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Выборка.МероприятиеОбучения));

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВторичныеРеквизитыВСтрокеПланаОбученияНаСервере(ИдентификаторТекущейСтроки = Неопределено)
	
	ОбучениеРазвитиеФормы.ЗаполнитьУчебныеЧасыПланаОбучения(ЭтаФорма, ИдентификаторТекущейСтроки, "ПрограммаОбучения");
	ОбучениеРазвитиеФормы.ЗаполнитьОтветственногоВСтрокеПрограммыОбучения(ЭтаФорма, ИдентификаторТекущейСтроки, "ПрограммаОбучения");
	
	Если ИдентификаторТекущейСтроки = Неопределено Тогда
		ОбучениеРазвитиеФормы.ЗаполнитьСтрокиХарактеристикВТаблицеПрограммаОбучения(ПрограммаОбучения, Характеристики, КэшХарактеристикиМероприятия);
	Иначе
		ОбучениеРазвитиеФормы.ЗаполнитьСтрокуХарактеристикВТаблицеПрограммаОбучения(ПрограммаОбучения.НайтиПоИдентификатору(ИдентификаторТекущейСтроки), Характеристики, КэшХарактеристикиМероприятия);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АдресПрограммыОбучения()
	Возврат ПоместитьВоВременноеХранилище(ПрограммаОбучения.Выгрузить(, "Мероприятие, Ответственный"), УникальныйИдентификатор);
КонецФункции

&НаСервере
Функция АдресХарактеристикиОбучение()
	Возврат ПоместитьВоВременноеХранилище(Характеристики.Выгрузить(, "Характеристика, ТребуетсяОбучение"), УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ХарактеристикиОбучениеТребуетсяОбучениеПриИзмененииНаСервере()
	ОбучениеРазвитиеФормы.ЗаполнитьСтрокиХарактеристикВТаблицеПрограммаОбучения(ПрограммаОбучения, Характеристики, КэшХарактеристикиМероприятия);
КонецПроцедуры

&НаСервере
Процедура ДобавитьВыбранныеМероприятияВПрограммуОбучения(ВыбранныеМероприятия)

	ТаблицаХарактеристикиМероприятия = КэшХарактеристикиМероприятия;
	
	СтруктураОтветственных = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ВыбранныеМероприятия, "Ответственный");
	
	Для каждого Мероприятие Из ВыбранныеМероприятия Цикл
		Если ПрограммаОбучения.НайтиСтроки(Новый Структура("Мероприятие", Мероприятие)).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ПрограммаОбучения.Добавить();
		НоваяСтрока.Мероприятие = Мероприятие;
		НоваяСтрока.Ответственный = СтруктураОтветственных[Мероприятие];
		ОбучениеРазвитиеФормы.ЗаполнитьСтрокуХарактеристикВТаблицеПрограммаОбучения(НоваяСтрока, Характеристики, ТаблицаХарактеристикиМероприятия);
	КонецЦикла; 

	ОбучениеРазвитиеФормы.ЗаполнитьУчебныеЧасыПланаОбучения(ЭтаФорма,, "ПрограммаОбучения");
	ЗаполнитьВторичныеРеквизитыПодбораМероприятийТаблицыХарактеристик();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВторичныеРеквизитыПодбораМероприятийТаблицыХарактеристик()

	ЗаполнитьПодобраноМероприятийВТаблицеХарактеристик(Характеристики, ПрограммаОбучения);
	ЗаполнитьТекстКомандыПодбораВТаблицеХарактеристик(Характеристики);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодобраноМероприятийВТаблицеХарактеристик(Характеристики, ПрограммаОбучения)

	СписокМероприятий = ПрограммаОбучения.Выгрузить(, "Мероприятие").ВыгрузитьКолонку("Мероприятие");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МероприятияОбученияРазвитияХарактеристикиПерсонала.Характеристика КАК Характеристика,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МероприятияОбученияРазвитияХарактеристикиПерсонала.Ссылка) КАК ПодобраноМероприятий
		|ИЗ
		|	Справочник.МероприятияОбученияРазвития.ХарактеристикиПерсонала КАК МероприятияОбученияРазвитияХарактеристикиПерсонала
		|ГДЕ
		|	МероприятияОбученияРазвитияХарактеристикиПерсонала.Ссылка В(&СписокМероприятий)
		|
		|СГРУППИРОВАТЬ ПО
		|	МероприятияОбученияРазвитияХарактеристикиПерсонала.Характеристика";
	Запрос.УстановитьПараметр("СписокМероприятий", СписокМероприятий);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого СтрокаХарактеристик Из Характеристики Цикл
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Новый Структура("Характеристика", СтрокаХарактеристик.Характеристика)) Тогда
			СтрокаХарактеристик.ПодобраноМероприятий = Выборка.ПодобраноМероприятий;
		Иначе	
			СтрокаХарактеристик.ПодобраноМероприятий = 0;
		КонецЕсли;
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстКомандыПодбораВТаблицеХарактеристик(Характеристики)

	Для каждого СтрокаХарактеристик Из Характеристики Цикл
		ОсталосьПодобрать = СтрокаХарактеристик.ВсегоМероприятий - СтрокаХарактеристик.ПодобраноМероприятий;
		Если ОсталосьПодобрать = 0 Тогда
			СтрокаХарактеристик.КомандаПодбора = "";
			
		ИначеЕсли СтрокаХарактеристик.ПодобраноМероприятий = 0 Тогда
			СтрокаХарактеристик.КомандаПодбора = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';Выбрать %1 мероприятие;;Выбрать %1 мероприятия;Выбрать %1 мероприятий;Выбрать %1 мероприятия'"),
				ОсталосьПодобрать);
		Иначе
			СтрокаХарактеристик.КомандаПодбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Выбрать еще %1'"),
				ОсталосьПодобрать);
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры

#КонецОбласти