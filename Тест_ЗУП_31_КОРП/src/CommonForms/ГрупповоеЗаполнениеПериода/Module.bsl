
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПериодПоУмолчанию = Неопределено;
	Параметры.Свойство("ПериодПоУмолчанию", ПериодПоУмолчанию);
	
	Если ПериодПоУмолчанию <> Неопределено Тогда 
		ДатаНачала 	  = ПериодПоУмолчанию.ДатаНачала;
		ДатаОкончания = ПериодПоУмолчанию.ДатаОкончания; 
	Иначе
		ДатаНачала 	  = ТекущаяДатаСеанса();
		ДатаОкончания = ТекущаяДатаСеанса(); 
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если ОшибкаВводаПериодаСобытия() Тогда
		ДатаОкончания = ДатаНачала;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)

	Если ОшибкаВводаПериодаСобытия() Тогда
		ДатаНачала = ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Период = Новый Структура;
	Период.Вставить("Период", Новый Структура("ДатаНачала, ДатаОкончания", ДатаНачала, ДатаОкончания));
	Оповестить("ИзмененПериодДокумента", Период, ЭтотОбъект);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ОшибкаВводаПериодаСобытия()
	Если (ДатаНачала > ДатаОкончания И ЗначениеЗаполнено(ДатаОкончания)) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;		
КонецФункции

#КонецОбласти

