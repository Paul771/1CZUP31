
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРедактирования = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыРедактирования,
		"ВремяРегистрации,Организация,Подразделение,ГрафикРаботы,КоличествоСтавок");
		
	Сотрудник = ПараметрыРедактирования.ВладелецНачисленийИУдержаний;	
		
	Если ПараметрыРедактирования.РежимРаботы = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли; 
	
	РежимРаботы = ПараметрыРедактирования.РежимРаботы;
	
	ПроинициализироватьТаблицуЛьгот(ПараметрыРедактирования.ОписаниеТаблицыНачислений);
	
	Если ЗначениеЗаполнено(ПараметрыРедактирования.Показатели) Тогда
		Для Каждого ДанныеПоказателя Из ПараметрыРедактирования.Показатели Цикл
			ЗаполнитьЗначенияСвойств(Показатели.Добавить(), ДанныеПоказателя);
		КонецЦикла;
	КонецЕсли; 
	
	ПроинициализироватьФорму();
	
	РассчитатьИтогиПоРазмеруЛьгот(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадрыРасширенный.РедактированиеСоставаНачисленийПроверкаЗаполненияВФорме(ЭтотОбъект, ОписаниеТаблицыЛьгот(ЛьготыНомерТаблицы, ЛьготыСодержитПолеДействие), Отказ, РежимРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыЛьготы

&НаКлиенте
Процедура ЛьготыПриИзменении(Элемент)
	
	РассчитатьИтогиПоРазмеруЛьгот(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛьготыПриАктивизацииСтроки(Элемент)
	
	ЗарплатаКадрыРасширенныйКлиент.РедактированиеСоставаНачисленийПриАктивизацииСтроки(ЭтотОбъект, "Льготы", "ЛьготыЛьгота", РежимРаботы, ОписаниеКоманднойПанелиЛьгот());
	
КонецПроцедуры

&НаКлиенте
Процедура ЛьготыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ЗарплатаКадрыРасширенныйКлиент.РедактированиеСоставаНачисленийОтменитьНачисление(ЭтотОбъект, "Льготы", РежимРаботы, ОписаниеКоманднойПанелиЛьгот(), Ложь);	

	ПериодОжидания = ЗарплатаКадрыРасширенныйКлиент.ПериодОжиданияЗапускаАвтоматическогоРасчета();
	Если ПериодОжидания > 0 Тогда
		ПодключитьОбработчикОжидания("РассчитатьРазмерЛьготНаКлиенте", ПериодОжидания, Истина);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЛьготыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ЗарплатаКадрыРасширенныйКлиент.РедактированиеСоставаНачисленийПриНачалеРедактирования(ЭтотОбъект, "Льготы", РежимРаботы, , НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛьготыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеТаблицыЛьгот = ОписаниеТаблицыЛьгот(ЛьготыНомерТаблицы, ЛьготыСодержитПолеДействие); 
	
	Если ЗарплатаКадрыРасширенныйКлиент.ВводПлановыхНачисленийРассчитатьФОТПриОкончанииРедактирования(ЭтотОбъект, Элемент, РежимРаботы, ОписаниеТаблицыЛьгот) Тогда
		ПериодОжидания = ЗарплатаКадрыРасширенныйКлиент.ПериодОжиданияЗапускаАвтоматическогоРасчета();
		Если ПериодОжидания > 0 Тогда
			ПодключитьОбработчикОжидания("РассчитатьРазмерЛьготНаКлиенте", ПериодОжидания, Истина);
		КонецЕсли; 
	Иначе
		РассчитатьИтогиПоРазмеруЛьгот(ЭтотОбъект);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЛьготыЛьготаПриИзменении(Элемент)
	
	ОписаниеТаблицыЛьгот = ОписаниеТаблицыЛьгот(ЛьготыНомерТаблицы, ЛьготыСодержитПолеДействие); 
	ЗарплатаКадрыРасширенныйКлиент.РедактированиеСоставаНачисленийНачислениеПриИзменении(ЭтотОбъект, ОписаниеТаблицыЛьгот, РежимРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗначениеПоказателяПриИзмененииЛьготы(Элемент)
	
	ОписаниеТаблицыЛьгот = ОписаниеТаблицыЛьгот(ЛьготыНомерТаблицы, ЛьготыСодержитПолеДействие); 
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьКомментарииДействийСНачислением(Элементы.Льготы.ТекущиеДанные,
		ЗарплатаКадрыРасширенныйКлиентСервер.МаксимальноеКоличествоПоказателейПоОписаниюТаблицы(ЭтотОбъект, ОписаниеТаблицыЛьгот), РежимРаботы, ОписаниеТаблицыЛьгот, ВремяРегистрации);		
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура OK(Команда)
	
	ОчиститьСообщения();
	
	ЗакрытьФорму = Истина;
	
	Если Модифицированность Тогда
		
		Если ПроверитьЗаполнение() Тогда
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("АдресВХранилище", АдресРезультатаВХранилище());
			
			Оповестить("ИзмененыЛьготы", СтруктураПараметров, ВладелецФормы);
			
		Иначе
			ЗакрытьФорму = Ложь;
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если ЗакрытьФорму Тогда
		Закрыть();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьРазмерЛьгот(Команда)
	
	РассчитатьРазмерЛьготНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьРазмерЛьгот(Команда)
	
	Элементы.РедактироватьРазмерЛьгот.Пометка = Не Элементы.РедактироватьРазмерЛьгот.Пометка;
	УстановитьВидимостьРазмераЛьгот(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроинициализироватьФорму()
	
	ОписаниеТаблицы = ОписаниеТаблицыЛьгот(ЛьготыНомерТаблицы, ЛьготыСодержитПолеДействие);
	
	ЗарплатаКадрыРасширенный.РедактированиеСоставаНачисленийДополнитьФорму(ЭтотОбъект, ОписаниеТаблицы, "Начисления", РежимРаботы);
	ЗарплатаКадрыРасширенный.ВводНачисленийДанныеВРеквизит(ЭтотОбъект, ОписаниеТаблицы, РежимРаботы);	
	
	ЛьготыСотрудников.ДополнитьФормуКадровогоДокумента(ЭтотОбъект, ОписаниеТаблицы);
	
	Если Не ЛьготыСодержитПолеДействие Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ЛьготыСтраницыКоманднойПанели",
			"ТекущаяСтраница",
			Элементы.ЛьготыСтраницаДобавитьУдалить);
		
	КонецЕсли; 
	
	УстановитьВидимостьРазмераЛьгот(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПроинициализироватьТаблицуЛьгот(ОписаниеТаблицыЛьгот)
	
	ЛьготыНомерТаблицы = ОписаниеТаблицыЛьгот.НомерТаблицы;
	
	Если ОписаниеТаблицыЛьгот.Свойство("СодержитПолеДействие") Тогда
		ЭтотОбъект.ЛьготыСодержитПолеДействие = ОписаниеТаблицыЛьгот.СодержитПолеДействие;
	КонецЕсли; 
	
	ВидыРасчета = Новый Массив;
	
	Для Каждого ДанныеСтроки Из ОписаниеТаблицыЛьгот.Таблица Цикл
		
		НоваяСтрока = Льготы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
		ВидыРасчета.Добавить(НоваяСтрока.Льгота);
		
	КонецЦикла;
	
	ПорядокВидовРасчета = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ВидыРасчета, "РеквизитДопУпорядочивания");
	Для каждого СтрокаТабличнойЧасти Из Льготы Цикл
		СтрокаТабличнойЧасти.Порядок = ПорядокВидовРасчета.Получить(СтрокаТабличнойЧасти.Льгота);
	КонецЦикла;
	
	Льготы.Сортировать("Порядок");
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьРазмерЛьготНаКлиенте()
	
	РассчитатьРазмерЛьготНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьРазмерЛьготНаСервере()
	
	ЛьготыСотрудников.РассчитатьРазмерЛьготВФормеСОднимСотрудником(ЭтотОбъект, ОписаниеТаблицыЛьгот(ЛьготыНомерТаблицы, ЛьготыСодержитПолеДействие), ЭтотОбъект);
	РассчитатьИтогиПоРазмеруЛьгот(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтогиПоРазмеруЛьгот(Форма)
	
	Форма.РазмерЛьгот = ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПоФОТ(Форма, ОписаниеТаблицыЛьгот(Форма.ЛьготыНомерТаблицы, Форма.ЛьготыСодержитПолеДействие));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьРазмераЛьгот(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, 
		"ЛьготыРазмер", "Видимость", Форма.Элементы.РедактироватьРазмерЛьгот.Пометка);

КонецПроцедуры

&НаСервере
Функция АдресРезультатаВХранилище()
	
	СтруктураПараметраОповещения = Новый Структура;
	СтруктураПараметраОповещения.Вставить("Сотрудник", Сотрудник);
	СтруктураПараметраОповещения.Вставить("Модифицированность",	Модифицированность);
	
	ОписанияТаблицРасчета = Новый Массив;
	ОписанияТаблицРасчета.Добавить(ОписаниеТаблицыЛьгот(ЛьготыНомерТаблицы, ЛьготыСодержитПолеДействие));
	
	ЗарплатаКадрыРасширенный.ВводНачисленийРеквизитВДанные(ЭтотОбъект, ЭтотОбъект, ОписанияТаблицРасчета, РежимРаботы);
	
	СтруктураПараметраОповещения.Вставить("Льготы", 
		ОбщегоНазначения.ТаблицаЗначенийВМассив(Льготы.Выгрузить(, "Льгота,ИдентификаторСтрокиВидаРасчета,Размер,Действие")));
	
	ТаблицаПоказателей = Показатели.Выгрузить(, "Показатель,ИдентификаторСтрокиВидаРасчета,Значение");
	
	СтруктураПараметраОповещения.Вставить("Показатели",
		ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаПоказателей));
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураПараметраОповещения, УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Функция ОписаниеКоманднойПанелиЛьгот()
	
	ОписаниеКоманднойПанелиЛьгот = ЗарплатаКадрыРасширенныйКлиент.ОписаниеКоманднойПанелиНачислений();
	ОписаниеКоманднойПанелиЛьгот.СтраницыКоманднойПанелиНачислений 	= "ЛьготыСтраницыКоманднойПанели";
	ОписаниеКоманднойПанелиЛьгот.СтраницаДобавитьОтменить 			= "ЛьготыСтраницаДобавитьОтменить";
	ОписаниеКоманднойПанелиЛьгот.СтраницаДобавитьПродолжить 		= "ЛьготыСтраницаДобавитьПродолжить";
	ОписаниеКоманднойПанелиЛьгот.СтраницаДобавитьУдалить 			= "ЛьготыСтраницаДобавитьУдалить";
	
	Возврат ОписаниеКоманднойПанелиЛьгот;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеТаблицыЛьгот(НомерТаблицы, СодержитПолеДействие)
	
	ОписаниеТаблицыВидовРасчета = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыПлановыхНачислений(Ложь, Ложь);
	ОписаниеТаблицыВидовРасчета.ИмяТаблицы = "Льготы";
	ОписаниеТаблицыВидовРасчета.ИмяРеквизитаВидРасчета = "Льгота";
	ОписаниеТаблицыВидовРасчета.ПутьКДанным = "Льготы";
	ОписаниеТаблицыВидовРасчета.ПутьКДаннымПоказателей = "Показатели";
	ОписаниеТаблицыВидовРасчета.НомерТаблицы = НомерТаблицы;
	ОписаниеТаблицыВидовРасчета.ИмяРеквизитаФиксРасчет = "ЛьготыФиксРасчет";
	ОписаниеТаблицыВидовРасчета.СодержитПолеДействие = СодержитПолеДействие;
	ОписаниеТаблицыВидовРасчета.ИмяРеквизитаДокументОснование = "";
	
	Возврат ОписаниеТаблицыВидовРасчета;
	
КонецФункции

#КонецОбласти
