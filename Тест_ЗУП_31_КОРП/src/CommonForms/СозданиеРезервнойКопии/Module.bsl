#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не РаботаВМоделиСервиса.ИспользованиеРазделителяСеанса() Тогда 
		ВызватьИсключение(НСтр("ru = 'Не установлено значение разделителя'"));
	КонецЕсли;
	
	ПереключитьСтраницу(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьКопиюОбласти(Команда)
	
	Результат = СоздатьКопиюОбластиНаСервере();
	
	Если Результат.Статус = "Выполнено" Тогда
		ОбработатьРезультатВыполненияЗадания();
	ИначеЕсли Результат.Статус = "Выполняется" Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтотОбъект, ИдентификаторЗадания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
				ОбработатьРезультатВыполненияЗадания();
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ЗаписатьИсключениеНаСервере(ПредставлениеОшибки);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатВыполненияЗадания()
	
	СнятьМонопольныйРежим();
	
	Если Не ПустаяСтрока(АдресХранилища) Тогда
		УдалитьИзВременногоХранилища(АдресХранилища);
		АдресХранилища = "";
		// Перейти на страницу результата.
		ПереключитьСтраницу(ЭтотОбъект, "СтраницаПослеВыгрузкиУспех");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПереключитьСтраницу(Форма, Знач ИмяСтраницы = "СтраницаДоВыгрузки")
	
	Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы[ИмяСтраницы];
	
	Если ИмяСтраницы = "СтраницаДоВыгрузки" Тогда
		Форма.Элементы.ФормаСоздатьКопиюОбласти.Доступность = Истина;
	Иначе
		Форма.Элементы.ФормаСоздатьКопиюОбласти.Доступность = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИсключениеНаСервере(Знач ПредставлениеОшибки)
	
	СнятьМонопольныйРежим();
	
	Событие = РезервноеКопированиеОбластейДанных.НаименованиеФоновогоРезервногоКопирования();
	ЗаписьЖурналаРегистрации(Событие, УровеньЖурналаРегистрации.Ошибка, , , ПредставлениеОшибки);
	
КонецПроцедуры

&НаСервере
Функция СоздатьКопиюОбластиНаСервере()
	
	ОбластьДанных = РаботаВМоделиСервиса.ЗначениеРазделителяСеанса();
	УстановитьМонопольныйРежим(Истина);
	
	ПараметрыЗадания = РезервноеКопированиеОбластейДанных.СоздатьПустыеПараметрыВыгрузки();
	ПараметрыЗадания.ОбластьДанных = ОбластьДанных;
	ПараметрыЗадания.ИДКопии = Новый УникальныйИдентификатор;
	ПараметрыЗадания.Принудительно = Истина;
	ПараметрыЗадания.ПоТребованию = Истина;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = РезервноеКопированиеОбластейДанных.НаименованиеФоновогоРезервногоКопирования();
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Попытка
		
		
		
		Результат = ДлительныеОперации.ВыполнитьВФоне(
			РезервноеКопированиеОбластейДанных.ИмяМетодаФоновогоРезервногоКопирования(),
			ПараметрыЗадания,
			ПараметрыВыполнения);
		
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписатьИсключениеНаСервере(ПредставлениеОшибки);
		ВызватьИсключение;
	КонецПопытки;
	
	АдресХранилища = Результат.АдресРезультата;
	ИдентификаторЗадания = Результат.ИдентификаторЗадания;
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервереБезКонтекста
Процедура СнятьМонопольныйРежим()
	
	УстановитьМонопольныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти
