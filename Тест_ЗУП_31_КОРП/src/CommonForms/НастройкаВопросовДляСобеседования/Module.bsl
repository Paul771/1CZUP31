
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.АнкетыКандидатов) Тогда
		ТолькоПросмотр = Истина;
		Элементы.ФормаСохранитьАнкету.Доступность = Ложь;
		Элементы.ОткрытьФормуЗаполненияАнкеты.Доступность = Ложь;
		Элементы.ВопросыДляСобеседования.ТолькоПросмотр = Истина;
		Элементы.ВопросыДляСобеседования.РазрешитьПеретаскивание = Ложь;
		Элементы.ВступлениеГиперссылка.Доступность = Ложь;
		Элементы.ЗаключениеГиперссылка.Доступность = Ложь;
	КонецЕсли;
	
	Параметры.Свойство("Объект", Объект);
	Параметры.Свойство("ШаблонАнкеты", ШаблонАнкеты);
	Параметры.Свойство("ЭтапРаботы", ЭтапРаботы);
	
	ЗаполнитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И Не ЗавершениеРаботы Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтаФорма);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ПодготовитьАнкету(Команда)
	
	Отказ = Ложь;
	СохранитьАнкету(Отказ, Истина);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьАнкету(Команда)
	
	Если Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьАнкету();
	Оповестить("СохранениеНастроекВопросовДляСобеседования", Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьВопросДляСобеседования(Команда)
	
	Если ПроверитьУсловияПересчетаАнкет() Тогда
	
		Оповещение = Новый ОписаниеОповещения("ПодобратьВопросДляСобеседованияПослеВопросаОПересчете", ЭтаФорма);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ПодобратьВопросДляСобеседованияПослеВопросаОПересчете(КодВозвратаДиалога.Да, Неопределено);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьВопросДляСобеседованияПослеВопросаОПересчете(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	
	Если Не ЕстьРазделы() Тогда
		Возврат;
	КонецЕсли;
	
	ВопросыДляСобеседованияТекущиеДанные = Элементы.ВопросыДляСобеседования.ТекущиеДанные;
	
	Родитель = РодительВопросыДляСобеседования(ВопросыДляСобеседованияТекущиеДанные);
	
	ТекущиеДанные = Элементы.ХарактеристикиПерсонала.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Характеристика", Неопределено);
		ПараметрыФормы.Вставить("ЗначениеХарактеристики", Неопределено);
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ИдентификаторРодителя", ?(Родитель = Неопределено, Неопределено, Родитель.ПолучитьИдентификатор()));
		Оповещение = Новый ОписаниеОповещения("ПодобратьВопросДляСобеседованияЗавершение", ЭтаФорма, ПараметрыОповещения);
		ОткрытьФорму("ОбщаяФорма.ПодборВопросовДляСобеседования", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение);
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ВидХарактеристики = ПредопределенноеЗначение("Перечисление.ВидыХарактеристикПерсонала.Прочее") Тогда
		ИдентификаторНовойСтроки = Неопределено;
		ПеренестиВыбраннуюХарактеристикуВТаблицу(ТекущиеДанные.Характеристика, ?(Родитель = Неопределено, Неопределено, Родитель.ПолучитьИдентификатор()), ИдентификаторНовойСтроки);
		Если ИдентификаторНовойСтроки <> Неопределено Тогда
			Элементы.ВопросыДляСобеседования.ТекущаяСтрока = ИдентификаторНовойСтроки;
		КонецЕсли;
		УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
		ЭлектронноеИнтервьюКлиент.ЗаполнитьДеревоКритериевОценки(ЭтаФорма);
		Модифицированность = Истина;
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Характеристика", ТекущиеДанные.Характеристика);
		ПараметрыФормы.Вставить("ЗначениеХарактеристики", ТекущиеДанные.Значение);
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ИдентификаторРодителя", ?(Родитель = Неопределено, Неопределено, Родитель.ПолучитьИдентификатор()));
		Оповещение = Новый ОписаниеОповещения("ПодобратьВопросДляСобеседованияЗавершение", ЭтаФорма, ПараметрыОповещения);
		ОткрытьФорму("ОбщаяФорма.ПодборВопросовДляСобеседования", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьХарактеристики(Команда)
	
	Элементы.ГруппаХарактеристикиПерсонала.Видимость = Не Элементы.ГруппаХарактеристикиПерсонала.Видимость;
	Элементы.КомандыПодбора.Видимость = Элементы.ГруппаХарактеристикиПерсонала.Видимость;
	Если Элементы.ГруппаХарактеристикиПерсонала.Видимость Тогда
		Элементы.ФормаОтображатьХарактеристики.Заголовок = НСтр("ru = 'Скрыть характеристики'");
	Иначе
		Элементы.ФормаОтображатьХарактеристики.Заголовок = НСтр("ru = 'Показать характеристики'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРаздел(Команда)
	
	ЭлементыДерева = ВопросыДляСобеседования.ПолучитьЭлементы();
	
	НоваяСтрока = ЭлементыДерева.Добавить();
	НоваяСтрока.ТипСтроки = "Раздел";
	НоваяСтрока.КодКартинки = АнкетированиеКлиентСервер.ПолучитьКодКартинкиШаблонаАнкеты(Истина);
	АнкетированиеКлиентСервер.СформироватьНумерациюДерева(ВопросыДляСобеседования);
	Элементы.ВопросыДляСобеседования.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
	Элементы.ВопросыДляСобеседования.ИзменитьСтроку();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВопросДляСобеседования(Команда)
	
	Если ПроверитьУсловияПересчетаАнкет() Тогда
				
		Оповещение = Новый ОписаниеОповещения("ДобавитьВопросДляСобеседованияПослеВопросаОПересчете", ЭтаФорма);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ДобавитьВопросДляСобеседованияПослеВопросаОПересчете(КодВозвратаДиалога.Да, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВопросДляСобеседованияПослеВопросаОПересчете(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	
	Если Не ЕстьРазделы() Тогда
		Возврат;
	КонецЕсли;
	
	ВопросыДляСобеседованияТекущиеДанные = Элементы.ВопросыДляСобеседования.ТекущиеДанные;
	
	Родитель = РодительВопросыДляСобеседования(ВопросыДляСобеседованияТекущиеДанные);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ИдентификаторРодителя", ?(Родитель = Неопределено, Неопределено, Родитель.ПолучитьИдентификатор()));
	Оповещение = Новый ОписаниеОповещения("ДобавитьВопросДляСобеседованияЗавершение", ЭтаФорма, ПараметрыОповещения);
	ОткрытьФорму("Справочник.ВопросыДляСобеседования.ФормаВыбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПроверкуПрочейХарактеристики(Команда)
	
	Если ПроверитьУсловияПересчетаАнкет() Тогда
				
		Оповещение = Новый ОписаниеОповещения("ДобавитьПроверкуПрочейХарактеристикиПослеВопросаОПересчете", ЭтаФорма);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ДобавитьПроверкуПрочейХарактеристикиПослеВопросаОПересчете(КодВозвратаДиалога.Да, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПроверкуПрочейХарактеристикиПослеВопросаОПересчете(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	
	Если Не ЕстьРазделы() Тогда
		Возврат;
	КонецЕсли;
	
	ВопросыДляСобеседованияТекущиеДанные = Элементы.ВопросыДляСобеседования.ТекущиеДанные;
	
	Родитель = РодительВопросыДляСобеседования(ВопросыДляСобеседованияТекущиеДанные);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ВидХарактеристики", ПредопределенноеЗначение("Перечисление.ВидыХарактеристикПерсонала.Прочее"));
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ИдентификаторРодителя", ?(Родитель = Неопределено, Неопределено, Родитель.ПолучитьИдентификатор()));
	Оповещение = Новый ОписаниеОповещения("ДобавитьПроверкуПрочейХарактеристикиЗавершение", ЭтаФорма, ПараметрыОповещения);
	ОткрытьФорму("ПланВидовХарактеристик.ХарактеристикиПерсонала.ФормаВыбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВопросПоМотивации(Команда)
	
	Если Не ЕстьРазделы() Тогда
		Возврат;
	КонецЕсли;
	
	ВопросыДляСобеседованияТекущиеДанные = Элементы.ВопросыДляСобеседования.ТекущиеДанные;
	
	Родитель = РодительВопросыДляСобеседования(ВопросыДляСобеседованияТекущиеДанные);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ТипВопроса", ПредопределенноеЗначение("Перечисление.ТипыВопросовПоМетодуСИвановой.Мотивация"));
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ИдентификаторРодителя", ?(Родитель = Неопределено, Неопределено, Родитель.ПолучитьИдентификатор()));
	Оповещение = Новый ОписаниеОповещения("ДобавитьВопросДляСобеседованияЗавершение", ЭтаФорма, ПараметрыОповещения);
	ОткрытьФорму("Справочник.ВопросыДляСобеседования.ФормаВыбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЗаполненияАнкеты(Команда)
		
	Если Модифицированность Тогда
		
		Если ШаблонАнкеты.Пустая() Тогда
			ТекстВопроса = НСтр("ru = 'Для просмотра формы заполнения необходимо записать шаблон анкеты.
		                   |Записать?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Шаблон анкеты был модифицирован. 
		                   |Для корректного отображения изменений шаблон необходимо записать.
		                   |Записать?'");
		КонецЕсли;
		
		ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВопросОНеобходимостиЗаписиПослеЗавершения", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОповещенияОЗакрытии,
		               ТекстВопроса,
		               РежимДиалогаВопрос.ДаНет,
		               ,
		               КодВозвратаДиалога.Да,
		               НСтр("ru = 'Записать?'"));
		Возврат;
	КонецЕсли;
	ОткрытьФормуМастераАнкетыПоРазделам();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКритерий(Команда)
	
	Модифицированность = Истина;
	НоваяСтрока = КритерииОценкиДерево.ПолучитьЭлементы().Добавить();
	НоваяСтрока.Уровень = 0;
	Элементы.КритерииОценкиДерево.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.КритерииОценкиДерево.ИзменитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКлюч(Команда)
	
	ТекущиеДанные = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.Предопределенный Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Уровень = 0 Тогда
		Родитель = ТекущиеДанные;
	Иначе
		Родитель = ТекущиеДанные.ПолучитьРодителя();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Родитель.Наименование) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Наименование критерия не заполнено'"));
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	НоваяСтрока = Родитель.ПолучитьЭлементы().Добавить();
	НоваяСтрока.Уровень = 1;
	Элементы.КритерииОценкиДерево.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.КритерииОценкиДерево.ИзменитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиКомментарий(Команда)
	
	ВвестиКомментарийТекущегоВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКритерии(Команда)
	
	ВопросДляСобеседования = ЭлектронноеИнтервьюКлиент.ВопросСобеседования(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(ВопросДляСобеседования) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ВопросДляСобеседования", ВопросДляСобеседования);	
	
	Если ПроверитьУсловияПересчетаАнкет() Тогда
	
		Оповещение = Новый ОписаниеОповещения("ОбновитьКритерииЗавершение", ЭтаФорма, ПараметрыОповещения);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбновитьКритерииЗавершение(КодВозвратаДиалога.Да, ПараметрыОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СпособОтбораХарактеристикПриИзменении(Элемент)
	
	Если СпособОтбораХарактеристик = 1 Тогда
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Проверена", Истина);
		ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
	ИначеЕсли СпособОтбораХарактеристик = 2 Тогда
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Проверена", Ложь);
		ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
	Иначе
		ОтборСтрок = Неопределено;
	КонецЕсли;	
	Элементы.ХарактеристикиПерсонала.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияПриАктивизацииСтроки(Элемент)
	
	ЭлектронноеИнтервьюКлиент.ЗаполнитьДеревоКритериевОценки(ЭтаФорма, Не ТолькоПросмотр);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ИзменениеСтрокиДереваВопросовДляСобеседования(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИзменениеСтрокиДереваВопросовДляСобеседования(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.ВопросыДляСобеседования.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ТекущиеДанные", ТекущиеДанные);
	
	Если ПроверитьУсловияПересчетаАнкет() Тогда
					
		Оповещение = Новый ОписаниеОповещения("ВопросыДляСобеседованияПередУдалениемПослеВопросаОПересчете", ЭтаФорма, ПараметрыОповещения);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ВопросыДляСобеседованияПередУдалениемПослеВопросаОПересчете(КодВозвратаДиалога.Да, ПараметрыОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияПослеУдаления(Элемент)
	
	Если ВопросыДляСобеседования.ПолучитьЭлементы().Количество() > 0 Тогда
		АнкетированиеКлиентСервер.СформироватьНумерациюДерева(ВопросыДляСобеседования);
	КонецЕсли;
	УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если ПараметрыПеретаскивания.Значение.Количество() <> 1 Тогда
		Выполнение = Ложь;
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
	КонецЕсли;
	
	СтрокаПеретаскивание = ВопросыДляСобеседования.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение[0]);

	Если ТипЗнч(СтрокаПеретаскивание) = Тип("Неопределено") Тогда
		Выполнение = Ложь;
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ПараметрыПеретаскивания.Значение[0] = Неопределено Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение[0]) <> Тип("Число") Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
	КонецЕсли;
	
	Если Строка = Неопределено Тогда
		СтрокаНазначение     = Неопределено;
	Иначе	
		СтрокаНазначение     = ВопросыДляСобеседования.НайтиПоИдентификатору(Строка);
	КонецЕсли;
	СтрокаПеретаскивание = ВопросыДляСобеседования.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение[0]);
	
	Если СтрокаНазначение = Неопределено Тогда
	ИначеЕсли (СтрокаПеретаскивание.ТипСтроки = "Раздел") И (СтрокаНазначение.ТипСтроки = "Вопрос") Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	ИначеЕсли (СтрокаПеретаскивание.ТипСтроки = "Вопрос") И (СтрокаНазначение.ТипСтроки = "Вопрос")	Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;		
	ИначеЕсли (СтрокаПеретаскивание.ТипСтроки = "Раздел") И (СтрокаНазначение.ТипСтроки = "Раздел") Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	АнкетированиеКлиентСервер.СформироватьНумерациюДерева(ВопросыДляСобеседования);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыДляСобеседованияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Строка = Неопределено Тогда
		СтрокаНазначение     = Неопределено;
	Иначе
		СтрокаНазначение     = ВопросыДляСобеседования.НайтиПоИдентификатору(Строка);
	КонецЕсли;
	СтрокаПеретаскивание = ВопросыДляСобеседования.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение[0]);
	
	Если СтрокаНазначение = Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		ПеретащитьЭлементДерева(СтрокаНазначение, СтрокаПеретаскивание, Ложь);
		Модифицированность = Истина;
		
	ИначеЕсли (СтрокаПеретаскивание.ТипСтроки = "Вопрос") И (СтрокаНазначение.ТипСтроки = "Раздел") Тогда
		
		Если СтрокаПеретаскивание.ПолучитьРодителя() <> СтрокаНазначение Тогда
			
			СтандартнаяОбработка = Ложь;
			ПеретащитьЭлементДерева(СтрокаНазначение, СтрокаПеретаскивание, Ложь);
			Модифицированность = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВступлениеГиперссылкаНажатие(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ВступлениеГиперссылкаНажатиеЗавершение", ЭтотОбъект); 
	ПоказатьВводСтроки(Оповещение, Вступление, НСтр("ru = 'Вступление:'"),, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаключениеГиперссылкаНажатие(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ЗаключениеГиперссылкаНажатиеЗавершение", ЭтотОбъект); 
	ПоказатьВводСтроки(Оповещение, Заключение, НСтр("ru = 'Заключение:'"),, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("КритерииОценкиДеревоПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПриАктивизацииСтрокиОбработчикОжидания()
	
	ЭлектронноеИнтервьюКлиент.УстановитьОтборТаблицыКритериев(ЭтаФорма, Не ТолькоПросмотр);
	
КонецПроцедуры
 
&НаКлиенте
Процедура КритерииОценкиДеревоПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ВопросДляСобеседования = ЭлектронноеИнтервьюКлиент.ВопросСобеседования(ЭтаФорма);
		
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Наименование) Тогда
		ОбновитьДанныеВопроса(Элемент.ТекущаяСтрока, ВопросДляСобеседования);
		ОбновитьНаименованиеКлиент(Элемент);
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.Уровень = 1 Тогда
		ЭлементарныйВопрос = Элемент.ТекущиеДанные.ПолучитьРодителя().ЭлементарныйВопрос;
		ОтветНаВопрос = Элемент.ТекущиеДанные.ОтветНаВопрос;
		Если ЗначениеЗаполнено(ЭлементарныйВопрос) И ЗначениеЗаполнено(ОтветНаВопрос) Тогда
			ЭлектронноеИнтервьюКлиент.УстановитьДоступность(ЭтаФорма, Истина, Истина);
		Иначе
			ЭлектронноеИнтервьюКлиент.УстановитьДоступность(ЭтаФорма, Истина, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные.Предопределенный Тогда
		Возврат;
	КонецЕсли;
	
	ВопросДляСобеседования = ЭлектронноеИнтервьюКлиент.ВопросСобеседования(ЭтаФорма);	
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ТекущиеДанные", ТекущиеДанные);			
	ПараметрыОповещения.Вставить("ВопросДляСобеседования", ВопросДляСобеседования);	
	
	Если ПроверитьУсловияПересчетаАнкет() Тогда
	
		Оповещение = Новый ОписаниеОповещения("КритерииОценкиДеревоПередУдалениемЗавершение", ЭтаФорма, ПараметрыОповещения);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		КритерииОценкиДеревоПередУдалениемЗавершение(КодВозвратаДиалога.Да, ПараметрыОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПередУдалениемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	ВопросДляСобеседования = ДополнительныеПараметры.ВопросДляСобеседования;
	
	Родитель = ТекущиеДанные.ПолучитьРодителя();
	
	Если ТекущиеДанные.Уровень = 0 Тогда
		
		ЭлементарныйВопрос = ТекущиеДанные.ЭлементарныйВопрос;
		УдалитьСтрокиКлючей(ЭлементарныйВопрос);
		
	Иначе
		
		ЭлементарныйВопрос = Родитель.ЭлементарныйВопрос;
		ОтветНаВопрос = ТекущиеДанные.ОтветНаВопрос;
		УдалитьСтрокиКлючей(ЭлементарныйВопрос, ОтветНаВопрос);
		Если ЗначениеЗаполнено(ОтветНаВопрос) Тогда
			УдалитьОтветНаВопрос(ОтветНаВопрос);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Родитель = Неопределено Тогда
		КритерииОценкиДерево.ПолучитьЭлементы().Удалить(ТекущиеДанные);
	Иначе
		Родитель.ПолучитьЭлементы().Удалить(ТекущиеДанные);
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КритерииОценкиДеревоТребуетсяКомментарий" Тогда
		СтандартнаяОбработка = Ложь;
		ВвестиКомментарийТекущегоВопроса();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыПриИзменении(Элемент)
	
	УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	НовСтрока = Элементы.Ответы.ТекущиеДанные;
	ЗаполнитьЗначенияСвойств(НовСтрока, ТекущаяСтрока);
	НовСтрока.Уровень = 3;
	НовСтрока.Балл = 1; 

КонецПроцедуры

&НаКлиенте
Процедура ОтветыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущаяСтрока = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено  Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	Если ПроверитьУсловияПересчетаАнкет() Тогда
	
		Отказ = Истина;
			
		Оповещение = Новый ОписаниеОповещения("ОтветыПередНачаломДобавленияЗавершение", ЭтаФорма);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыПередНачаломИзменения(Элемент, Отказ)
		
	Если ПроверитьУсловияПересчетаАнкет() Тогда
	
		Отказ = Истина;
			
		Оповещение = Новый ОписаниеОповещения("ОтветыПередНачаломИзмененияЗавершение", ЭтаФорма);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Ответы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверитьУсловияПересчетаАнкет() Тогда
	
		Отказ = Истина;
				
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ТекущиеДанные", ТекущиеДанные);			
		Оповещение = Новый ОписаниеОповещения("ОтветыПередУдалениемЗавершение", ЭтаФорма, ПараметрыОповещения);
		ПоказатьВопрос(Оповещение, ТекстВопросаПересчетаАнкет(), РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыПослеУдаления(Элемент)
	
	УстановитьКоличествоСтроки(ЭтаФорма);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли; 
	
	УстановитьКоличествоСтроки(ЭтаФорма);
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанныеФормы()
	
	Элементы.ФормаОтображатьХарактеристики.Заголовок = НСтр("ru = 'Скрыть характеристики'");
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Вакансии") Тогда
		Элементы.НадписьЗаголовок.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Заполните список вопросов для проверки вакансии ""%1"" на этапе ""%2"".'"),
																										Строка(Объект),
																										Строка(ЭтапРаботы));
	Иначе
		Элементы.НадписьЗаголовок.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Заполните список вопросов для проверки профиля должности ""%1"" на этапе ""%2"".'"),
																										Строка(Объект),
																										Строка(ЭтапРаботы));
	КонецЕсли;
		
	ЗаполнитьТаблицуХарактеристик();
	
	Если ЗначениеЗаполнено(ШаблонАнкеты) Тогда
		ЗаполнитьДеревоШаблонаАнкеты();
		Если ВопросыДляСобеседования.ПолучитьЭлементы().Количество() > 0 Тогда
			АнкетированиеКлиентСервер.СформироватьНумерациюДерева(ВопросыДляСобеседования);
		КонецЕсли;
		Вступление = ШаблонАнкеты.Вступление;
		Заключение = ШаблонАнкеты.Заключение;
	КонецЕсли;
	
	УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
	
	Если ТолькоПросмотр Тогда
		Элементы.ФормаПодготовитьАнкету.Доступность = Ложь;
		Элементы.ХарактеристикиПерсонала.ТолькоПросмотр = Истина;
		Элементы.ВопросыДляСобеседования.ТолькоПросмотр = Истина;
		Элементы.Ответы.ТолькоПросмотр = Истина;
		Элементы.ВопросыДляСобеседованияПодменюДобавить.Доступность = Ложь;
		Элементы.ВопросыДляСобеседованияПодобратьВопросДляСобеседования.Доступность = Ложь;
		Элементы.ВопросыДляСобеседованияКонтекстноеМенюГруппаДобавление.Доступность = Ложь;
		Элементы.ГруппаГиперссылки.ТолькоПросмотр = Истина;
		Элементы.КритерииОценкиДерево.ТолькоПросмотр = Истина;
		Элементы.Ответы.ТолькоПросмотр = Истина;
		Элементы.КритерииОценкиДеревоДобавитьКритерий.Доступность = Ложь;
		Элементы.КритерииОценкиДеревоДобавитьКлюч.Доступность = Ложь;
		Элементы.КритерииОценкиДеревоВвестиКомментарий.Доступность = Ложь;
		Элементы.КритерииОценкиДеревоОбновитьКритерии.Доступность = Ложь;
	КонецЕсли;
	
	ЭлектронноеИнтервью.УстановитьОформлениеДереваКритериевОценки(ЭтаФорма);
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ЭлементарныйВопрос", ПредопределенноеЗначение("ПланВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка"));
	СтруктураОтбора.Вставить("Уровень", 3);
	ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
	Элементы.Ответы.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуХарактеристик()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВакансииХарактеристикиПерсонала.Характеристика КАК Характеристика,
		|	ВакансииХарактеристикиПерсонала.Значение,
		|	ВакансииХарактеристикиПерсонала.Вес КАК Вес,
		|	ВЫБОР
		|		КОГДА ВакансииХарактеристикиПерсонала.Характеристика.ВидХарактеристики = ЗНАЧЕНИЕ(Перечисление.ВидыХарактеристикПерсонала.Знание)
		|			ТОГДА 0
		|		КОГДА ВакансииХарактеристикиПерсонала.Характеристика.ВидХарактеристики = ЗНАЧЕНИЕ(Перечисление.ВидыХарактеристикПерсонала.Навык)
		|			ТОГДА 1
		|		КОГДА ВакансииХарактеристикиПерсонала.Характеристика.ВидХарактеристики = ЗНАЧЕНИЕ(Перечисление.ВидыХарактеристикПерсонала.ЛичноеКачество)
		|			ТОГДА 2
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК КартинкаВида,
		|	ВакансииХарактеристикиПерсонала.Характеристика.ВидХарактеристики КАК ВидХарактеристики
		|ИЗ
		|	Справочник.Вакансии.ХарактеристикиПерсонала КАК ВакансииХарактеристикиПерсонала
		|ГДЕ
		|	ВакансииХарактеристикиПерсонала.Ссылка = &Объект
		|	И ВакансииХарактеристикиПерсонала.ТребуетсяПроверка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрофилиДолжностейХарактеристикиПерсонала.Характеристика,
		|	ПрофилиДолжностейХарактеристикиПерсонала.Значение,
		|	ПрофилиДолжностейХарактеристикиПерсонала.Вес,
		|	ВЫБОР
		|		КОГДА ПрофилиДолжностейХарактеристикиПерсонала.Характеристика.ВидХарактеристики = ЗНАЧЕНИЕ(Перечисление.ВидыХарактеристикПерсонала.Знание)
		|			ТОГДА 0
		|		КОГДА ПрофилиДолжностейХарактеристикиПерсонала.Характеристика.ВидХарактеристики = ЗНАЧЕНИЕ(Перечисление.ВидыХарактеристикПерсонала.Навык)
		|			ТОГДА 1
		|		КОГДА ПрофилиДолжностейХарактеристикиПерсонала.Характеристика.ВидХарактеристики = ЗНАЧЕНИЕ(Перечисление.ВидыХарактеристикПерсонала.ЛичноеКачество)
		|			ТОГДА 2
		|		ИНАЧЕ 3
		|	КОНЕЦ,
		|	ПрофилиДолжностейХарактеристикиПерсонала.Характеристика.ВидХарактеристики
		|ИЗ
		|	Справочник.ПрофилиДолжностей.ХарактеристикиПерсонала КАК ПрофилиДолжностейХарактеристикиПерсонала
		|ГДЕ
		|	ПрофилиДолжностейХарактеристикиПерсонала.Ссылка = &Объект
		|	И ПрофилиДолжностейХарактеристикиПерсонала.ТребуетсяПроверка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Вес УБЫВ,
		|	Характеристика";
		
	ХарактеристикиПерсонала.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоШаблонаАнкеты()
	
	Результаты = ДанныеВопросовШаблонаАнкеты(ШаблонАнкеты, Объект);
	Если Результаты[2].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоАнкетыСервер = РеквизитФормыВЗначение("ВопросыДляСобеседования");
	
	Выборка = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Если Выборка.Количество() > 0 Тогда
		ДобавитьСтрокиДереваАнкеты(Выборка, ДеревоАнкетыСервер, 1, ЭтаФорма);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДеревоАнкетыСервер, "ВопросыДляСобеседования");
	
	ДеревоРезультат = Результаты[3].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЭлектронноеИнтервью.ЗаполнитьТаблицуДереваКритериевОценки(ДеревоРезультат.Строки, Ответы);
	
КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ДанныеВопросовШаблонаАнкеты(ШаблонАнкеты, Объект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", ШаблонАнкеты);
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.Текст =		
		"ВЫБРАТЬ
		|	ВопросыШаблонаАнкеты.Ссылка КАК ВопросШаблона,
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования КАК ВопросДляСобеседования,
		|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос КАК ЭлементарныйВопрос
		|ПОМЕСТИТЬ ВТВопросыШаблонаАнкеты
		|ИЗ
		|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|		ПО ВопросыШаблонаАнкеты.Ссылка = ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты
		|ГДЕ
		|	НЕ ВопросыШаблонаАнкеты.ПометкаУдаления
		|	И ВопросыШаблонаАнкеты.Владелец = &Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВопросыШаблонаАнкеты.ВопросШаблона КАК ВопросШаблона,
		|	ВопросыШаблонаАнкеты.ВопросДляСобеседования КАК ВопросДляСобеседования,
		|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	МАКСИМУМ(НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала) КАК ХарактеристикаПерсонала
		|ПОМЕСТИТЬ ВТВопросыШаблонаАнкетыСХарактеристиками
		|ИЗ
		|	ВТВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаВопросовДляСобеседования КАК НастройкаВопросовДляСобеседования
		|		ПО (ВопросыШаблонаАнкеты.ВопросДляСобеседования ЕСТЬ NULL)
		|			И ВопросыШаблонаАнкеты.ЭлементарныйВопрос = НастройкаВопросовДляСобеседования.ЭлементарныйВопрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВопросыШаблонаАнкеты.ВопросШаблона,
		|	ВопросыШаблонаАнкеты.ВопросДляСобеседования,
		|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросДляСобеседования КАК ВопросДляСобеседования,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона КАК ВопросШаблона,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона.Родитель КАК Родитель,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона.ЭтоГруппа КАК ЭтоРаздел,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона.РодительВопрос КАК РодительВопрос,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона.Наименование КАК Наименование,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона.Формулировка КАК Формулировка,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона.Подсказка КАК Подсказка,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона.СпособОтображенияПодсказки КАК СпособОтображенияПодсказки,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросШаблона.ТипВопроса КАК ТипВопроса,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ВопросДляСобеседования.ТипВопроса КАК ТипВопросаДляСобеседования,
		|	ВопросыШаблонаАнкетыСХарактеристиками.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала
		|ИЗ
		|	ВТВопросыШаблонаАнкетыСХарактеристиками КАК ВопросыШаблонаАнкетыСХарактеристиками
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВопросШаблона ИЕРАРХИЯ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаВопросовДляСобеседования.ВопросДляСобеседования КАК ВопросДляСобеседования,
		|	ВложенныйЗапрос.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	ВложенныйЗапрос.ЭлементарныйВопрос.Формулировка КАК Наименование,
		|	ВложенныйЗапрос.ЭлементарныйВопрос.ТребуетсяКомментарий КАК ТребуетсяКомментарий,
		|	ВложенныйЗапрос.ЭлементарныйВопрос.ПояснениеКомментария КАК ПояснениеКомментария,
		|	НастройкаВопросовДляСобеседования.ОтветНаВопрос.Наименование КАК ОтветНаименование,
		|	НастройкаВопросовДляСобеседования.ОтветНаВопрос КАК ОтветНаВопрос,
		|	НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала КАК Характеристика,
		|	НастройкаВопросовДляСобеседования.ЗначениеХарактеристики КАК Значение,
		|	НастройкаВопросовДляСобеседования.Балл КАК Балл,
		|	НастройкаВопросовДляСобеседования.ЭлементарныйВопросВопросаДляСобеседования КАК ЭлементарныйВопросВопросаДляСобеседования,
		|	НастройкаВопросовДляСобеседования.ОтветНаВопросВопросаДляСобеседования КАК ОтветНаВопросВопросаДляСобеседования
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВопросыШаблонаАнкеты.Ссылка КАК ВопросШаблонаАнкеты,
		|		ЕСТЬNULL(ВопросыШаблонаАнкетыСоставКомплексногоВопроса.ЭлементарныйВопрос, ВопросыШаблонаАнкеты.ЭлементарныйВопрос) КАК ЭлементарныйВопрос
		|	ИЗ
		|		Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВопросыШаблонаАнкеты.СоставКомплексногоВопроса КАК ВопросыШаблонаАнкетыСоставКомплексногоВопроса
		|			ПО (ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка = ВопросыШаблонаАнкеты.Ссылка)
		|	ГДЕ
		|		ВопросыШаблонаАнкеты.Владелец = &Владелец
		|		И НЕ ВопросыШаблонаАнкеты.ЭтоГруппа) КАК ВложенныйЗапрос
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НастройкаВопросовДляСобеседования.Объект КАК Объект,
		|			НастройкаВопросовДляСобеседования.ВопросДляСобеседования КАК ВопросДляСобеседования,
		|			НастройкаВопросовДляСобеседования.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|			НастройкаВопросовДляСобеседования.ОтветНаВопрос КАК ОтветНаВопрос,
		|			НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|			НастройкаВопросовДляСобеседования.ЗначениеХарактеристики КАК ЗначениеХарактеристики,
		|			НастройкаВопросовДляСобеседования.Балл КАК Балл,
		|			НастройкаВопросовДляСобеседования.ЭлементарныйВопросВопросаДляСобеседования КАК ЭлементарныйВопросВопросаДляСобеседования,
		|			НастройкаВопросовДляСобеседования.ОтветНаВопросВопросаДляСобеседования КАК ОтветНаВопросВопросаДляСобеседования
		|		ИЗ
		|			РегистрСведений.НастройкаВопросовДляСобеседования КАК НастройкаВопросовДляСобеседования
		|		ГДЕ
		|			НастройкаВопросовДляСобеседования.Объект = &Объект
		|			И (НастройкаВопросовДляСобеседования.ВопросДляСобеседования В
		|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ВопросыШаблонаАнкеты.ВопросДляСобеседования
		|						ИЗ
		|							ВТВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты)
		|					ИЛИ НастройкаВопросовДляСобеседования.ВопросДляСобеседования = ЗНАЧЕНИЕ(Справочник.ВопросыДляСобеседования.ПустаяСсылка)
		|						И НастройкаВопросовДляСобеседования.ЭлементарныйВопрос В
		|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|								ВопросыШаблонаАнкеты.ЭлементарныйВопрос
		|							ИЗ
		|								ВТВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|							ГДЕ
		|								ВопросыШаблонаАнкеты.ВопросДляСобеседования ЕСТЬ NULL))) КАК НастройкаВопросовДляСобеседования
		|		ПО ВложенныйЗапрос.ЭлементарныйВопрос = НастройкаВопросовДляСобеседования.ЭлементарныйВопрос
		|ИТОГИ
		|	МАКСИМУМ(ЭлементарныйВопросВопросаДляСобеседования),
		|	МАКСИМУМ(ОтветНаВопросВопросаДляСобеседования)
		|ПО
		|	ВопросДляСобеседования,
		|	ЭлементарныйВопрос,
		|	ОтветНаВопрос";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьСтрокиДереваАнкеты(Выборка, СтрокаРодитель, УровеньРекурсии, Форма)
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.РодительВопрос) Тогда
			НоваяСтрока = СтрокаРодитель.Строки.Добавить();
		Иначе
			СтрокаРодительПодчиненногоВопроса = СтрокаРодитель.Строки.Найти(Выборка.РодительВопрос, "ВопросШаблона");
			Если СтрокаРодительПодчиненногоВопроса <> Неопределено Тогда
				НоваяСтрока = СтрокаРодительПодчиненногоВопроса.Строки.Добавить();
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока.ВопросШаблона              = Выборка.ВопросШаблона;
		НоваяСтрока.КодКартинки                = АнкетированиеКлиентСервер.ПолучитьКодКартинкиШаблонаАнкеты(Выборка.ЭтоРаздел, Выборка.ТипВопроса);
		НоваяСтрока.Подсказка                  = Выборка.Подсказка;
		НоваяСтрока.СпособОтображенияПодсказки = Выборка.СпособОтображенияПодсказки;
		НоваяСтрока.ТипСтроки                  = ?(Выборка.ЭтоРаздел, "Раздел", "Вопрос");
		НоваяСтрока.Наименование               = Выборка.Наименование;
		НоваяСтрока.Формулировка               = Выборка.Формулировка;
		Если Не ЗначениеЗаполнено(Выборка.ХарактеристикаПерсонала) Тогда
			НоваяСтрока.ВопросДляСобеседования = Выборка.ВопросДляСобеседования;
		Иначе
			НоваяСтрока.ВопросДляСобеседования = Выборка.ХарактеристикаПерсонала;
		КонецЕсли;
		НоваяСтрока.ТипВопроса                 = Выборка.ТипВопросаДляСобеседования;
		НоваяСтрока.ЭлементарныйВопрос         = Выборка.ЭлементарныйВопрос;
		
		ПодчиненнаяВыборка = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Если ПодчиненнаяВыборка.Количество() > 0 Тогда
			ДобавитьСтрокиДереваАнкеты(ПодчиненнаяВыборка, НоваяСтрока, УровеньРекурсии + 1, Форма);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик оповещения о закрытии формы подбора вопросов для собеседования.
// Переносит выбранные вопросы для собеседования в таблицу вопросов для проверки.
//
// Параметры 
//	Результат - Массив - массив ссылок на выбранные вопросы для собеседования. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ПодобратьВопросДляСобеседованияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторРодителя = ДополнительныеПараметры.ИдентификаторРодителя;
	Для Каждого ТекущийВопросДляСобеседования Из Результат Цикл
		ИдентификаторНовойСтроки = Неопределено;
		ПеренестиВыбранныйВопросДляСобеседованияВТаблицу(ТекущийВопросДляСобеседования, ИдентификаторРодителя, ИдентификаторНовойСтроки);
	КонецЦикла;
	
	Если ИдентификаторНовойСтроки <> Неопределено Тогда
		Элементы.ВопросыДляСобеседования.ТекущаяСтрока = ИдентификаторНовойСтроки;
	КонецЕсли;
	
	УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
	ЭлектронноеИнтервьюКлиент.ЗаполнитьДеревоКритериевОценки(ЭтаФорма);
	Модифицированность = Истина;
	
КонецПроцедуры

// Обработчик оповещения о закрытии вопроса о необходимости сохранить изменения.
// При согласии пользователя формирует шаблон анкеты.
//
// Параметры 
//	Результат - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранениеШаблонаСПересчетом(Истина);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПризнакПроверкиХарактеристик(Форма)
	
	Для каждого ТекущаяСтрока Из Форма.ХарактеристикиПерсонала Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Характеристика", ТекущаяСтрока.Характеристика);
		СтруктураПоиска.Вставить("Значение", ТекущаяСтрока.Значение);
		НайденныеСтроки = Форма.Ответы.НайтиСтроки(СтруктураПоиска);
		ТекущаяСтрока.Проверена = НайденныеСтроки.Количество() > 0;
		Если Не ТекущаяСтрока.Проверена Тогда
			ТекущаяСтрока.Проверена = ПризнакПроверкиХарактеристикиПоДругимЭтапам(Форма.ШаблонАнкеты, Форма.Объект, ТекущаяСтрока.Характеристика, ТекущаяСтрока.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
 
&НаКлиенте
Функция РодительВопросыДляСобеседования(ТекущийРодитель)
	
	Пока (ТекущийРодитель <> Неопределено) И (ТекущийРодитель.ТипСтроки <> "Раздел") Цикл
		ТекущийРодитель = ТекущийРодитель.ПолучитьРодителя();
	КонецЦикла;
		
	Возврат ТекущийРодитель;
	
КонецФункции

&НаКлиенте
Процедура ИзменениеСтрокиДереваВопросовДляСобеседования(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ВопросДляСобеседования) Тогда
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ТекущиеДанные", ТекущиеДанные);
		Оповещение = Новый ОписаниеОповещения("ИзменениеСтрокиДереваВопросовДляСобеседованияЗавершение", ЭтаФорма, ПараметрыОповещения);
		ПоказатьЗначение(Оповещение, ТекущиеДанные.ВопросДляСобеседования);
	Иначе
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ТекущиеДанные", ТекущиеДанные);
		Оповещение = Новый ОписаниеОповещения("ИзменениеСтрокиДереваВопросовДляСобеседованияЗавершение", ЭтаФорма, ПараметрыОповещения);
		ПоказатьВводЗначения(Оповещение, ТекущиеДанные.Наименование, НСтр("ru = 'Наименование раздела'"), Тип("Строка"));
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения о завершении редактирования строки дерева вопросов для собеседования.
// Определяет наименование и формулировку текущей строки дерева.
//
// Параметры 
//	Результат - Строка, Неопределено - значение после редактирования. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ИзменениеСтрокиДереваВопросовДляСобеседованияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	ДополнительныеПараметры.ТекущиеДанные.Наименование = Результат;
	ДополнительныеПараметры.ТекущиеДанные.Формулировка = Результат;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаДерева(СтрокиДерева, Значение, Колонка)
	
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		ПодчиненныеЭлементы = СтрокаДерева.ПолучитьЭлементы();
		Если ПодчиненныеЭлементы.Количество() = 0 Тогда
			Если СтрокаДерева[Колонка] = Значение Тогда
				Возврат СтрокаДерева.ПолучитьИдентификатор();
			КонецЕсли;
		Иначе
			ИдентификаторСтроки = СтрокаДерева(ПодчиненныеЭлементы, Значение, Колонка);
			Если ИдентификаторСтроки <> Неопределено Тогда
				Возврат ИдентификаторСтроки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ПеретащитьЭлементДерева(СтрокаНазначение, СтрокаПеретаскивание, ИспользоватьРодителяСтрокиНазначения = Ложь, УдалятьПослеДобавления = Истина);
	
	Если СтрокаНазначение = Неопределено Тогда
		НоваяСтрока = ВопросыДляСобеседования.ПолучитьЭлементы().Добавить();
	ИначеЕсли ИспользоватьРодителяСтрокиНазначения Тогда
		Если СтрокаНазначение.ПолучитьРодителя() = Неопределено Тогда
			НоваяСтрока = ВопросыДляСобеседования.ПолучитьЭлементы().Добавить();
		Иначе
			НоваяСтрока = СтрокаНазначение.ПолучитьРодителя().ПолучитьЭлементы().Добавить();
		КонецЕсли;
	Иначе
		НоваяСтрока = СтрокаНазначение.ПолучитьЭлементы().Добавить();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПеретаскивание);
	
	Для каждого Элемент Из СтрокаПеретаскивание.ПолучитьЭлементы() Цикл
		ПеретащитьЭлементДерева(НоваяСтрока, Элемент, Ложь, Ложь);
	КонецЦикла;
	
	Если УдалятьПослеДобавления Тогда
		Если СтрокаПеретаскивание.ПолучитьРодителя() = Неопределено Тогда
			ВопросыДляСобеседования.ПолучитьЭлементы().Удалить(СтрокаПеретаскивание);
		Иначе
			СтрокаПеретаскивание.ПолучитьРодителя().ПолучитьЭлементы().Удалить(СтрокаПеретаскивание);
		КонецЕсли;
	КонецЕсли;
	
	Если ИспользоватьРодителяСтрокиНазначения Тогда
		Если СтрокаНазначение.ПолучитьРодителя() <> Неопределено Тогда
			Элементы.ВопросыДляСобеседования.Развернуть(СтрокаНазначение.ПолучитьРодителя().ПолучитьИдентификатор(), Ложь);
		КонецЕсли;
	Иначе
		Если СтрокаНазначение <> Неопределено Тогда
			Элементы.ВопросыДляСобеседования.Развернуть(СтрокаНазначение.ПолучитьИдентификатор(), Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьАнкету(Отказ = Ложь, ЗакрытьФорму = Ложь)
	
	Если ЕстьКорневыеВопросы() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Есть вопросы для собеседования в корне дерева вопросов для проверки. Необходимо поместить все вопросы для собеседования в разделы.'");
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	// Проверим заполнение обязательных полей
	Для каждого ТекущаяСтрока Из Ответы Цикл
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.ЭлементарныйВопрос) И ТекущаяСтрока.Уровень = 1 Тогда
			Элементы.ВопросыДляСобеседования.ТекущаяСтрока = СтрокаДерева(ВопросыДляСобеседования.ПолучитьЭлементы(), ТекущаяСтрока.ВопросДляСобеседования, "ВопросДляСобеседования");
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("ВопросДляСобеседования", ТекущаяСтрока.ВопросДляСобеседования);
			ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
			Элементы.Ответы.ОтборСтрок = ОтборСтрок;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Поле ""Критерий"" не заполнено'");
			Сообщение.Поле = "Ответы[" + ТекущаяСтрока.ПолучитьИдентификатор() + "].ЭлементарныйВопрос";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.ОтветНаВопрос) И ТекущаяСтрока.Уровень = 2 Тогда
			Элементы.ВопросыДляСобеседования.ТекущаяСтрока = СтрокаДерева(ВопросыДляСобеседования.ПолучитьЭлементы(), ТекущаяСтрока.ВопросДляСобеседования, "ВопросДляСобеседования");
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("ВопросДляСобеседования", ТекущаяСтрока.ВопросДляСобеседования);
			ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
			Элементы.Ответы.ОтборСтрок = ОтборСтрок;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Поле ""Ответ"" не заполнено'");
			Сообщение.Поле = "КритерииОценкиДерево[" + ТекущаяСтрока.ПолучитьИдентификатор() + "].ОтветНаВопрос";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Отказ Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	СохранениеШаблонаСПересчетом(ЗакрытьФорму);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьАнкетуНаСервере()
	
	Если ВопросыДляСобеседования.ПолучитьЭлементы().Количество() = 0 Тогда
		ШаблонАнкеты = Справочники.ШаблоныАнкет.ПустаяСсылка();
		Возврат;
	КонецЕсли;	
		
	Если НЕ ЗначениеЗаполнено(ШаблонАнкеты) Тогда
		ШаблонАнкетыОбъект = Справочники.ШаблоныАнкет.СоздатьЭлемент();
		ШаблонАнкетыОбъект.Наименование = Объект.Наименование + " / " + ЭтапРаботы.Наименование;
		ШаблонАнкетыОбъект.Заголовок = ШаблонАнкетыОбъект.Наименование;
		ШаблонАнкетыОбъект.Вступление = Вступление;
		ШаблонАнкетыОбъект.Заключение = Заключение;
		ШаблонАнкетыОбъект.Записать();
		ШаблонАнкеты = ШаблонАнкетыОбъект.Ссылка;
	Иначе
		Если ШаблонАнкеты.Вступление <> Вступление
				ИЛИ ШаблонАнкеты.Заключение <> Заключение Тогда
			ШаблонАнкетыОбъект = ШаблонАнкеты.ПолучитьОбъект();
			ШаблонАнкетыОбъект.Вступление = Вступление;
			ШаблонАнкетыОбъект.Заключение = Заключение;
		    ШаблонАнкетыОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

// Обработчик оповещения о закрытии формы выбора вопросов для собеседования.
// Добавляет выбранные вопросы в дерево вопросов для собеседования.
//
// Параметры 
//	Результат - Массив, Неопределено - массив выбранных вопросов. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит идентификатор родительской строки.
//
&НаКлиенте
Процедура ДобавитьВопросДляСобеседованияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекущийВопрос Из Результат Цикл
		
		ИдентификаторРодителя = ДополнительныеПараметры.ИдентификаторРодителя;
		ИдентификаторНовойСтроки = Неопределено;
		ПеренестиВыбранныйВопросДляСобеседованияВТаблицу(ТекущийВопрос, ИдентификаторРодителя, ИдентификаторНовойСтроки);
		
		Если ИдентификаторНовойСтроки <> Неопределено Тогда
			Элементы.ВопросыДляСобеседования.ТекущаяСтрока = ИдентификаторНовойСтроки;
		КонецЕсли;
		
		УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
		ЭлектронноеИнтервьюКлиент.ЗаполнитьДеревоКритериевОценки(ЭтаФорма);
		Модифицированность = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик оповещения о закрытии формы выбора прочих характеристик персонала.
// Добавляет выбранные прочие характеристики в дерево вопросов для собеседования.
//
// Параметры 
//	Результат - ПланВидовХарактеристикСсылка.ХарактеристикиПерсонала, Неопределено - выбранная прочая характеристика. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ДобавитьПроверкуПрочейХарактеристикиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторРодителя = ДополнительныеПараметры.ИдентификаторРодителя;
	Для Каждого ТекущаяХарактеристика Из Результат Цикл
		ИдентификаторНовойСтроки = Неопределено;
		ПеренестиВыбраннуюХарактеристикуВТаблицу(ТекущаяХарактеристика, ИдентификаторРодителя, ИдентификаторНовойСтроки);
	КонецЦикла;
	
	Если ИдентификаторНовойСтроки <> Неопределено Тогда
		Элементы.ВопросыДляСобеседования.ТекущаяСтрока = ИдентификаторНовойСтроки;
	КонецЕсли;
	
	УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
	ЭлектронноеИнтервьюКлиент.ЗаполнитьДеревоКритериевОценки(ЭтаФорма);
	Модифицированность = Истина;	
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиВыбранныйВопросДляСобеседованияВТаблицу(ВопросДляСобеседования, ИдентификаторРодителя, ИдентификаторНовойСтроки)
	
	ИдентификаторНовойСтроки = СтрокаДерева(ВопросыДляСобеседования.ПолучитьЭлементы(), ВопросДляСобеседования, "ВопросДляСобеседования");
	
	Если ИдентификаторНовойСтроки <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ИдентификаторРодителя = Неопределено Тогда
		ЭлементыДерева = ВопросыДляСобеседования.ПолучитьЭлементы();
	Иначе
		Родитель = ВопросыДляСобеседования.НайтиПоИдентификатору(ИдентификаторРодителя);
		ЭлементыДерева = Родитель.ПолучитьЭлементы();
	КонецЕсли;
	НоваяСтрока = ЭлементыДерева.Добавить();
	НоваяСтрока.ТипСтроки = "Вопрос";
	НоваяСтрока.КодКартинки = АнкетированиеКлиентСервер.ПолучитьКодКартинкиШаблонаАнкеты(Ложь, Перечисления.ТипыВопросовШаблонаАнкеты.Комплексный);
	НоваяСтрока.Наименование = ВопросДляСобеседования.Наименование;
	
	Если ВопросДляСобеседования.ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.PARLA Тогда
		НоваяСтрока.Формулировка =
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'P(Problem) %1
		|A(Action) Как развивались события? Как действовали Вы лично?
		|R(Result) Какой в итоге получился результат?
		|Считаете Вы его положительным или отрицательным?
		|L(Learned) Какой вывод вы сделали из этой ситуации?
		|A(Applied) Что изменилось в вашем поведении после этой ситуации? Что вы планируете изменить в будущем?'"),
		ВопросДляСобеседования.Формулировка);
	Иначе
		НоваяСтрока.Формулировка = ВопросДляСобеседования.Формулировка;
	КонецЕсли;
	
	НоваяСтрока.Подсказка = ВопросДляСобеседования.Подсказка;
	НоваяСтрока.СпособОтображенияПодсказки = ВопросДляСобеседования.СпособОтображенияПодсказки;
	НоваяСтрока.ВопросДляСобеседования = ВопросДляСобеседования;
	НоваяСтрока.ТипВопроса = ВопросДляСобеседования.ТипВопроса;
	АнкетированиеКлиентСервер.СформироватьНумерациюДерева(ВопросыДляСобеседования);
	ИдентификаторНовойСтроки = НоваяСтрока.ПолучитьИдентификатор();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаКритериев();
	Запрос.УстановитьПараметр("Вопрос", ВопросДляСобеседования);
	Запрос.УстановитьПараметр("Объект", Объект);
		
	ДеревоРезультат =  Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЭлектронноеИнтервью.ЗаполнитьТаблицуДереваКритериевОценки(ДеревоРезультат.Строки, Ответы, Истина);	
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиВыбраннуюХарактеристикуВТаблицу(Результат, ИдентификаторРодителя, ИдентификаторНовойСтроки)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВопросыДляАнкетирования.Ссылка КАК Вопрос,
		|	ВариантыОтветовАнкет.Ссылка КАК Ответ,
		|	ВариантыОтветовАнкет.Наименование,
		|	ВариантыОтветовАнкет.РеквизитДопУпорядочивания
		|ПОМЕСТИТЬ ВТОтветы
		|ИЗ
		|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовАнкет КАК ВариантыОтветовАнкет
		|		ПО ВопросыДляАнкетирования.Ссылка = ВариантыОтветовАнкет.Владелец
		|ГДЕ
		|	ВопросыДляАнкетирования.Наименование = &Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияХарактеристикПерсонала.Ссылка КАК ЗначениеХарактеристики,
		|	ЗначенияХарактеристикПерсонала.Наименование,
		|	ЗначенияХарактеристикПерсонала.РеквизитДопУпорядочивания,
		|	Ответы.Вопрос
		|ПОМЕСТИТЬ ВТЗначенияХарактеристик
		|ИЗ
		|	Справочник.ЗначенияХарактеристикПерсонала КАК ЗначенияХарактеристикПерсонала
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветы КАК Ответы
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ЗначенияХарактеристикПерсонала.Владелец = &Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияХарактеристик.ЗначениеХарактеристики,
		|	ЕСТЬNULL(Ответы.Вопрос, ЗначенияХарактеристик.Вопрос) КАК Вопрос,
		|	Ответы.Ответ,
		|	ЗначенияХарактеристик.Наименование,
		|	ЗначенияХарактеристик.РеквизитДопУпорядочивания
		|ИЗ
		|	ВТЗначенияХарактеристик КАК ЗначенияХарактеристик
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТОтветы КАК Ответы
		|		ПО ЗначенияХарактеристик.Наименование = Ответы.Наименование
		|			И ЗначенияХарактеристик.РеквизитДопУпорядочивания = Ответы.РеквизитДопУпорядочивания
		|			И ЗначенияХарактеристик.Вопрос = Ответы.Вопрос
		|ИТОГИ ПО
		|	Вопрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияХарактеристик.ЗначениеХарактеристики,
		|	ЗначенияХарактеристик.Наименование,
		|	ЗначенияХарактеристик.РеквизитДопУпорядочивания
		|ИЗ
		|	ВТЗначенияХарактеристик КАК ЗначенияХарактеристик
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначенияХарактеристик.ЗначениеХарактеристики,
		|	ЗначенияХарактеристик.Наименование,
		|	ЗначенияХарактеристик.РеквизитДопУпорядочивания";
	
	Запрос.УстановитьПараметр("Владелец", Результат);
	Запрос.УстановитьПараметр("Наименование", Результат.Наименование);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Вопрос = Неопределено;
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.Вопрос) Тогда
			Продолжить;
		КонецЕсли;
		ВопросПодходит = Истина;
		СписокОтветов = Новый Соответствие;
		ВыборкаОтветов = Выборка.Выбрать();
		Пока ВыборкаОтветов.Следующий() Цикл
			Если Не (ЗначениеЗаполнено(ВыборкаОтветов.Ответ) И ЗначениеЗаполнено(ВыборкаОтветов.ЗначениеХарактеристики)) Тогда
				ВопросПодходит = Ложь;
				Прервать;
			КонецЕсли;
			СписокОтветов.Вставить(ВыборкаОтветов.ЗначениеХарактеристики, ВыборкаОтветов.Ответ);
		КонецЦикла;
		Если ВопросПодходит Тогда
			Вопрос = Выборка.Вопрос;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Вопрос = Неопределено Тогда
		ВопросОбъект = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоздатьЭлемент();
		ВопросОбъект.Наименование = Результат.Наименование;
		ВопросОбъект.Формулировка = Результат;
		ВопросОбъект.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз;
		ВопросОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ВариантыОтветовАнкет");
		ВопросОбъект.ВидПереключателя = Перечисления.ВидыПереключателяВАнкетах.Тумблер;
		ВопросОбъект.Записать();
		Вопрос = ВопросОбъект.Ссылка;
		
		СписокОтветов = Новый Соответствие;
		Выборка = РезультатЗапроса[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			ОтветОбъект = Справочники.ВариантыОтветовАнкет.СоздатьЭлемент();
			ОтветОбъект.Владелец = Вопрос;
			ОтветОбъект.Наименование = Выборка.Наименование;
			ОтветОбъект.РеквизитДопУпорядочивания = Выборка.РеквизитДопУпорядочивания;
			ОтветОбъект.Записать();
			Ответ = ОтветОбъект.Ссылка;
			СписокОтветов.Вставить(Выборка.ЗначениеХарактеристики, Ответ);
		КонецЦикла;
	КонецЕсли;
		
	ИдентификаторНовойСтроки = СтрокаДерева(ВопросыДляСобеседования.ПолучитьЭлементы(), Результат, "ВопросДляСобеседования");
	
	Если ИдентификаторНовойСтроки = Неопределено Тогда
		Если ИдентификаторРодителя = Неопределено Тогда
			ЭлементыДерева = ВопросыДляСобеседования.ПолучитьЭлементы();
		Иначе
			Родитель = ВопросыДляСобеседования.НайтиПоИдентификатору(ИдентификаторРодителя);
			ЭлементыДерева = Родитель.ПолучитьЭлементы();
		КонецЕсли;
		НоваяСтрока = ЭлементыДерева.Добавить();
		НоваяСтрока.ТипСтроки = "Вопрос";
		НоваяСтрока.КодКартинки = АнкетированиеКлиентСервер.ПолучитьКодКартинкиШаблонаАнкеты(Ложь, Перечисления.ТипыВопросовШаблонаАнкеты.Простой);
		НоваяСтрока.Наименование = Результат;
		НоваяСтрока.Формулировка = Результат;
		НоваяСтрока.ЭлементарныйВопрос = Вопрос;
		НоваяСтрока.ВопросДляСобеседования = Результат;
		АнкетированиеКлиентСервер.СформироватьНумерациюДерева(ВопросыДляСобеседования);
		ИдентификаторНовойСтроки = НоваяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗначенияХарактеристикПерсонала.Владелец КАК Характеристика,
		|	ЗначенияХарактеристикПерсонала.Ссылка КАК Значение,
		|	1 КАК Балл
		|ИЗ
		|	Справочник.ЗначенияХарактеристикПерсонала КАК ЗначенияХарактеристикПерсонала
		|ГДЕ
		|	ЗначенияХарактеристикПерсонала.Владелец = &Характеристика";
	Запрос.УстановитьПараметр("Характеристика", Результат);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтруктураПоиска = Новый Структура(
			"Характеристика,
			|Значение,
			|ВопросДляСобеседования");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		СтруктураПоиска.Вставить("ВопросДляСобеседования", Справочники.ВопросыДляСобеседования.ПустаяСсылка());
		НайденныеСтроки = Ответы.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Ответы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ЭлементарныйВопрос = Вопрос;
			НоваяСтрока.ОтветНаВопрос = СписокОтветов.Получить(Выборка.Значение);
			НоваяСтрока.ВопросДляСобеседования = Справочники.ВопросыДляСобеседования.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьКорневыеВопросы()
	
	ЕстьКорневыеВопросы = Ложь;
	КорневыеЭлементы = ВопросыДляСобеседования.ПолучитьЭлементы();
	Для Каждого Элемент Из КорневыеЭлементы Цикл
		Если Элемент.ТипСтроки = "Вопрос" Тогда
			ЕстьКорневыеВопросы = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьКорневыеВопросы;	
	
КонецФункции

&НаКлиенте
Функция ЕстьРазделы()
	
	ЕстьРазделы = Ложь;
	КорневыеЭлементы = ВопросыДляСобеседования.ПолучитьЭлементы();
	Для Каждого Элемент Из КорневыеЭлементы Цикл
		Если Элемент.ТипСтроки = "Раздел" Тогда
			ЕстьРазделы = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьРазделы Тогда
		ТекстВопроса = НСтр("ru = 'Для добавления вопросов должен быть создан хотя бы один раздел. Создать новый раздел?'");
		ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВопросОСозданииРазделаПослеЗавершения", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	КонецЕсли;
	
	Возврат ЕстьРазделы;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПризнакПроверкиХарактеристикиПоДругимЭтапам(ШаблонАнкеты, Объект, Характеристика, Значение)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", ШаблонАнкеты);
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("ХарактеристикаПерсонала", Характеристика);
	Запрос.УстановитьПараметр("ЗначениеХарактеристики", Значение);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВопросыШаблонаАнкеты.Ссылка КАК ВопросШаблона,
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования,
		|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос
		|ПОМЕСТИТЬ ВТВопросыШаблонаАнкеты
		|ИЗ
		|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|		ПО ВопросыШаблонаАнкеты.Ссылка = ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты
		|ГДЕ
		|	НЕ ВопросыШаблонаАнкеты.ПометкаУдаления
		|	И ВопросыШаблонаАнкеты.Владелец = &Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрофилиДолжностейЭтапыРаботыСКандидатами.ШаблонАнкеты
		|ПОМЕСТИТЬ ВТДругиеШаблоны
		|ИЗ
		|	Справочник.ПрофилиДолжностей.ЭтапыРаботыСКандидатами КАК ПрофилиДолжностейЭтапыРаботыСКандидатами
		|ГДЕ
		|	ПрофилиДолжностейЭтапыРаботыСКандидатами.ШаблонАнкеты <> &Владелец
		|	И ПрофилиДолжностейЭтапыРаботыСКандидатами.Ссылка = &Объект
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВакансииЭтапыРаботыСКандидатами.ШаблонАнкеты
		|ИЗ
		|	Справочник.Вакансии.ЭтапыРаботыСКандидатами КАК ВакансииЭтапыРаботыСКандидатами
		|ГДЕ
		|	ВакансииЭтапыРаботыСКандидатами.ШаблонАнкеты <> &Владелец
		|	И ВакансииЭтапыРаботыСКандидатами.Ссылка = &Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВопросыШаблонаАнкеты.Ссылка КАК ВопросШаблона,
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования,
		|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос
		|ПОМЕСТИТЬ ВТДругиеВопросыШаблонаАнкеты
		|ИЗ
		|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|		ПО ВопросыШаблонаАнкеты.Ссылка = ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДругиеШаблоны КАК ДругиеШаблоны
		|		ПО ВопросыШаблонаАнкеты.Владелец = ДругиеШаблоны.ШаблонАнкеты
		|ГДЕ
		|	НЕ ВопросыШаблонаАнкеты.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДругиеВопросыШаблонаАнкеты.ВопросШаблона,
		|	ЕСТЬNULL(ДругиеВопросыШаблонаАнкеты.ВопросДляСобеседования, ЗНАЧЕНИЕ(Справочник.ВопросыДляСобеседования.ПустаяСсылка)) КАК ВопросДляСобеседования,
		|	ДругиеВопросыШаблонаАнкеты.ЭлементарныйВопрос
		|ПОМЕСТИТЬ ВТТолькоДругиеВопросыШаблонаАнкеты
		|ИЗ
		|	ВТДругиеВопросыШаблонаАнкеты КАК ДругиеВопросыШаблонаАнкеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|		ПО ДругиеВопросыШаблонаАнкеты.ВопросШаблона = ВопросыШаблонаАнкеты.ВопросШаблона
		|			И (ВЫБОР
		|				КОГДА ДругиеВопросыШаблонаАнкеты.ВопросДляСобеседования ЕСТЬ NULL 
		|					ТОГДА ДругиеВопросыШаблонаАнкеты.ЭлементарныйВопрос = ВопросыШаблонаАнкеты.ЭлементарныйВопрос
		|							И ВопросыШаблонаАнкеты.ВопросДляСобеседования ЕСТЬ NULL 
		|				ИНАЧЕ ДругиеВопросыШаблонаАнкеты.ВопросДляСобеседования = ВопросыШаблонаАнкеты.ВопросДляСобеседования
		|			КОНЕЦ)
		|ГДЕ
		|	ВопросыШаблонаАнкеты.ВопросШаблона ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаВопросовДляСобеседования.Балл
		|ИЗ
		|	РегистрСведений.НастройкаВопросовДляСобеседования КАК НастройкаВопросовДляСобеседования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТолькоДругиеВопросыШаблонаАнкеты.ВопросДляСобеседования КАК ВопросДляСобеседования,
		|			ЕСТЬNULL(ВопросыШаблонаАнкетыСоставКомплексногоВопроса.ЭлементарныйВопрос, ТолькоДругиеВопросыШаблонаАнкеты.ЭлементарныйВопрос) КАК ЭлементарныйВопрос
		|		ИЗ
		|			ВТТолькоДругиеВопросыШаблонаАнкеты КАК ТолькоДругиеВопросыШаблонаАнкеты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВопросыШаблонаАнкеты.СоставКомплексногоВопроса КАК ВопросыШаблонаАнкетыСоставКомплексногоВопроса
		|				ПО ТолькоДругиеВопросыШаблонаАнкеты.ВопросШаблона = ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка) КАК ВложенныйЗапрос1
		|		ПО НастройкаВопросовДляСобеседования.ВопросДляСобеседования = ВложенныйЗапрос1.ВопросДляСобеседования
		|			И НастройкаВопросовДляСобеседования.ЭлементарныйВопрос = ВложенныйЗапрос1.ЭлементарныйВопрос
		|ГДЕ
		|	НастройкаВопросовДляСобеседования.Объект = &Объект
		|	И НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала = &ХарактеристикаПерсонала
		|	И НастройкаВопросовДляСобеседования.ЗначениеХарактеристики = &ЗначениеХарактеристики";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат ЗначениеЗаполнено(Выборка.Балл);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Обработчик оповещения о закрытии вопроса о необходимости записи шаблона анкеты.
// При согласии пользователя сохраняет шаблон и открывает форму мастера анкеты по разделам.
//
// Параметры 
//	РезультатВопроса - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ВопросОНеобходимостиЗаписиПослеЗавершения(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	СохранитьАнкету(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуМастераАнкетыПоРазделам();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуМастераАнкетыПоРазделам()

	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("ШаблонАнкеты", ШаблонАнкеты);
	ОткрытьФорму("ОбщаяФорма.МастерАнкетыПоРазделам", СтруктураПараметры, ЭтотОбъект);

КонецПроцедуры

// Обработчик оповещения о закрытии вопроса о необходимости пересчета результатов анкет.
//
// Параметры 
//	Результат - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит текущие данные.
//
&НаКлиенте
Процедура ВопросыДляСобеседованияПередУдалениемПослеВопросаОПересчете(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	
	Если ТекущиеДанные.ПолучитьЭлементы().Количество() > 0 Тогда
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ТекущиеДанные", ТекущиеДанные);
		Оповещение = Новый ОписаниеОповещения("ВопросыДляСобеседованияПередУдалениемЗавершение", ЭтаФорма, ПараметрыОповещения);
		ТекстВопроса = НСтр("ru = 'Удалить раздел со всеми подчиненными вопросами?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		Если ТипЗнч(ТекущиеДанные.ВопросДляСобеседования) = Тип("СправочникСсылка.ВопросыДляСобеседования") Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ВопросДляСобеседования", ТекущиеДанные.ВопросДляСобеседования);
			УдаляемыеСтроки = Ответы.НайтиСтроки(СтруктураПоиска);
		Иначе
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("ВопросДляСобеседования", ПредопределенноеЗначение("Справочник.ВопросыДляСобеседования.ПустаяСсылка"));
			СтруктураОтбора.Вставить("Характеристика", ТекущиеДанные.ВопросДляСобеседования);
			УдаляемыеСтроки = Ответы.НайтиСтроки(СтруктураОтбора);
		КонецЕсли;
		Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			Ответы.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		Родитель = ТекущиеДанные.ПолучитьРодителя();
		Если Родитель = Неопределено Тогда
			ВопросыДляСобеседования.ПолучитьЭлементы().Удалить(ТекущиеДанные);
		Иначе
			Родитель.ПолучитьЭлементы().Удалить(ТекущиеДанные);
		КонецЕсли;
		
		Модифицированность = Истина;
			
		ВопросыДляСобеседованияПослеУдаления(ВопросыДляСобеседования);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения о закрытии вопроса о необходимости удаления раздела с подчиненными вопросами.
// При согласии пользователя удаляет раздел с подчиненными вопросами.
//
// Параметры 
//	Результат - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит текущие данные.
//
&НаКлиенте
Процедура ВопросыДляСобеседованияПередУдалениемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	
	Для Каждого ЭлементКоллекции Из ТекущиеДанные.ПолучитьЭлементы() Цикл
		Если ТипЗнч(ЭлементКоллекции.ВопросДляСобеседования) = Тип("СправочникСсылка.ВопросыДляСобеседования") Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ВопросДляСобеседования", ЭлементКоллекции.ВопросДляСобеседования);
			УдаляемыеСтроки = Ответы.НайтиСтроки(СтруктураПоиска);
		Иначе
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("ВопросДляСобеседования", ПредопределенноеЗначение("Справочник.ВопросыДляСобеседования.ПустаяСсылка"));
			СтруктураОтбора.Вставить("Характеристика", ЭлементКоллекции.ВопросДляСобеседования);
			УдаляемыеСтроки = Ответы.НайтиСтроки(СтруктураОтбора);
		КонецЕсли;
		Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			Ответы.Удалить(УдаляемаяСтрока);
		КонецЦикла;
	КонецЦикла;
	ВопросыДляСобеседования.ПолучитьЭлементы().Удалить(ТекущиеДанные);
	
	Если ВопросыДляСобеседования.ПолучитьЭлементы().Количество() > 0 Тогда
		АнкетированиеКлиентСервер.СформироватьНумерациюДерева(ВопросыДляСобеседования);
	КонецЕсли;
	УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
	
КонецПроцедуры

// Обработчик оповещения о закрытии вопроса о необходимости пересчета результатов анкет.
//
// Параметры 
//	РезультатВопроса - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ОтветыПередНачаломДобавленияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	Элементы.Ответы.ДобавитьСтроку();
	
КонецПроцедуры

// Обработчик оповещения о закрытии вопроса о необходимости пересчета результатов анкет.
//
// Параметры 
//	РезультатВопроса - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ОтветыПередНачаломИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	ТекущиеДанные = Элементы.Ответы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Ответы.ИзменитьСтроку();
	
КонецПроцедуры

// Обработчик оповещения о закрытии вопроса о необходимости пересчета результатов анкет.
//
// Параметры 
//	РезультатВопроса - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит текущие данные.
//
&НаКлиенте
Процедура ОтветыПередУдалениемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	Ответы.Удалить(ДополнительныеПараметры.ТекущиеДанные);
	
	ОтветыПослеУдаления(Элементы.Ответы);
	
КонецПроцедуры

// Обработчик оповещения о завершении ввода вступления.
// Заполняет вступление введенной строкой.
//
// Параметры 
//	Результат - Строка, Неопределено - введенное значение. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ВступлениеГиперссылкаНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Вступление = Результат;
	
КонецПроцедуры

// Обработчик оповещения о завершении ввода заключения.
// Заполняет заключение введенной строкой.
//
// Параметры 
//	Результат - Строка, Неопределено - введенное значение. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ЗаключениеГиперссылкаНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Заключение = Результат;
	
КонецПроцедуры
 
// Обработчик оповещения о завершении ввода комментария текущего вопроса.
// Заполняет комментарий текущего вопроса введенной строкой.
//
// Параметры 
//	Результат - Строка, Неопределено - введенное значение. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит текущие данные.
//
&НаКлиенте
Процедура ВвестиКомментарийТекущегоВопросаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	ТекущиеДанные.ПояснениеКомментария = Результат;
	ТекущиеДанные.ТребуетсяКомментарий = НЕ ПустаяСтрока(Результат);
	
	ЭлементарныйВопрос = ТекущиеДанные.ЭлементарныйВопрос;
	ВопросДляСобеседования = ЭлектронноеИнтервьюКлиент.ВопросСобеседования(ЭтаФорма);
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ЭлементарныйВопрос", ЭлементарныйВопрос);
	СтруктураПоиска.Вставить("ВопросДляСобеседования", ВопросДляСобеседования);
	Массив = Ответы.НайтиСтроки(СтруктураПоиска);
	Для Каждого ЭлМассива Из Массив Цикл
		ЭлМассива.ПояснениеКомментария = Результат;
		ЭлМассива.ТребуетсяКомментарий = НЕ ПустаяСтрока(Результат);
	КонецЦикла; 
	Модифицированность = Истина;
	
КонецПроцедуры

// Обработчик оповещения о закрытии вопроса о создании нового раздела.
// При согласии пользователя создает новый раздел.
//
// Параметры 
//	Результат - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит текущие данные.
//
&НаКлиенте
Процедура ВопросОСозданииРазделаПослеЗавершения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДобавитьРаздел(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКоличествоСтроки(ФормаОбъекта, ТекущаяСтрока=Неопределено)
	
	Объект = ФормаОбъекта.Объект;
	Элементы = ФормаОбъекта.Элементы;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТекущаяСтрока = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	КонецЕсли; 
	
	ЭлементарныйВопрос = ТекущаяСтрока.ПолучитьРодителя().ЭлементарныйВопрос;
	ВопросДляСобеседования = Элементы.ВопросыДляСобеседования.ТекущиеДанные.ВопросДляСобеседования;
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ЭлементарныйВопрос", ЭлементарныйВопрос);
	СтруктураПоиска.Вставить("ОтветНаВопрос", ТекущаяСтрока.ОтветНаВопрос);
	СтруктураПоиска.Вставить("ВопросДляСобеседования", ВопросДляСобеседования);
	СтруктураПоиска.Вставить("Уровень", 3);
	Массив = ФормаОбъекта.Ответы.НайтиСтроки(СтруктураПоиска);
	ТекущаяСтрока.КоличествоКлючей = Массив.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаименованиеКлиент(Элемент)
	
	ТекущаяСтрока = КритерииОценкиДерево.НайтиПоИдентификатору(Элемент.ТекущаяСтрока);
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	СтруктураПоиска = Новый Структура;
	Если ТекущаяСтрока.Уровень = 0 Тогда
		СтруктураПоиска.Вставить("ЭлементарныйВопрос", ТекущиеДанные.ЭлементарныйВопрос);
		ИмяКолонки = "Наименование";
	Иначе
		СтруктураПоиска.Вставить("ОтветНаВопрос", ТекущиеДанные.ОтветНаВопрос);
		ИмяКолонки = "ОтветНаименование";
	КонецЕсли;
	
	Массив = Ответы.НайтиСтроки(СтруктураПоиска);
	Для Каждого ЭлМассива Из Массив Цикл
		ЭлМассива[ИмяКолонки] = ТекущиеДанные.Наименование;
	КонецЦикла;
	
КонецПроцедуры
 
&НаСервере
Процедура ОбновитьДанныеВопроса(ИдентификаторСтроки, ВопросДляСобеседования)
	
	ТекущаяСтрока = КритерииОценкиДерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ТекущаяСтрока.Уровень = 0 Тогда
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ЭлементарныйВопрос) Тогда
			ЭлементарныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоздатьЭлемент();
			ЭлементарныйВопрос.Наименование = ТекущаяСтрока.Наименование;
			ЭлементарныйВопрос.Формулировка = ТекущаяСтрока.Наименование;
			ЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз;
			ЭлементарныйВопрос.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ВариантыОтветовАнкет");
			ЭлементарныйВопрос.ВидПереключателя = Перечисления.ВидыПереключателяВАнкетах.Тумблер;
			ЭлементарныйВопрос.Записать();
			ТекущаяСтрока.ЭлементарныйВопрос = ЭлементарныйВопрос.Ссылка;
			ТекущаяСтрока.ВопросДляСобеседования = ВопросДляСобеседования;
			
			НоваяСтрока = Ответы.Добавить();
			НоваяСтрока.ЭлементарныйВопрос = ЭлементарныйВопрос.Ссылка; 
			НоваяСтрока.ВопросДляСобеседования = ВопросДляСобеседования;
			НоваяСтрока.Наименование = ТекущаяСтрока.Наименование;
			НоваяСтрока.ОтветНаВопрос = Справочники.ВариантыОтветовАнкет.ПустаяСсылка();
	        НоваяСтрока.Значение = Справочники.ЗначенияХарактеристикПерсонала.ПустаяСсылка();
			НоваяСтрока.ВопросДляСобеседования = ВопросДляСобеседования;
			НоваяСтрока.Уровень = 1;
			
		ИначеЕсли ТекущаяСтрока.ЭлементарныйВопрос.Формулировка <> ТекущаяСтрока.Наименование Тогда
			ЭлементарныйВопрос = ТекущаяСтрока.ЭлементарныйВопрос.ПолучитьОбъект();
			ЭлементарныйВопрос.Наименование = ТекущаяСтрока.Наименование;
			ЭлементарныйВопрос.Формулировка = ТекущаяСтрока.Наименование;
			ЭлементарныйВопрос.Записать();
		КонецЕсли;
		
	Иначе
		
		ЭлементарныйВопрос = ТекущаяСтрока.ПолучитьРодителя().ЭлементарныйВопрос;
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ОтветНаВопрос) Тогда
			Ответ = Справочники.ВариантыОтветовАнкет.СоздатьЭлемент();
			Ответ.Наименование = ТекущаяСтрока.Наименование;
			Ответ.Владелец = ЭлементарныйВопрос;
			Ответ.Записать();
			ТекущаяСтрока.ОтветНаВопрос = Ответ.Ссылка;
			ТекущаяСтрока.ЭлементарныйВопрос = ЭлементарныйВопрос;
			ТекущаяСтрока.ВопросДляСобеседования = ВопросДляСобеседования;
			
			НоваяСтрока = Ответы.Добавить();
			НоваяСтрока.ЭлементарныйВопрос = ЭлементарныйВопрос; 
			НоваяСтрока.ВопросДляСобеседования = ВопросДляСобеседования;
			НоваяСтрока.ОтветНаВопрос = Ответ.Ссылка;
			НоваяСтрока.Значение = Справочники.ЗначенияХарактеристикПерсонала.ПустаяСсылка();
			НоваяСтрока.Уровень = 2;
			
		ИначеЕсли ТекущаяСтрока.ОтветНаВопрос.Наименование <> ТекущаяСтрока.Наименование Тогда
			Ответ = ТекущаяСтрока.ОтветНаВопрос.ПолучитьОбъект();
			Ответ.Наименование = ТекущаяСтрока.Наименование;
			Ответ.Владелец = ЭлементарныйВопрос;
			Ответ.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура удаления ключей по ключевому вопросу
//
// Параметры:
//	ЭлементарныйВопрос - ПланыВидовХарактеристикСсылка.ВопросыДляАнкетирования - Ссылка на удаляемый ключевой вопрос.
//
&НаКлиенте
Процедура УдалитьСтрокиКлючей(ЭлементарныйВопрос, Ответ = Неопределено)
	
	Если Ответ = Неопределено Тогда
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ЭлементарныйВопрос", ЭлементарныйВопрос);
		УдаляемыеСтрокиТаблицы = Ответы.НайтиСтроки(СтруктураПоиска);
	Иначе
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ЭлементарныйВопрос", ЭлементарныйВопрос);
		СтруктураПоиска.Вставить("ОтветНаВопрос", Ответ);
		УдаляемыеСтрокиТаблицы = Ответы.НайтиСтроки(СтруктураПоиска);
	КонецЕсли;
	
	Для Каждого УдаляемаяСтрока Из УдаляемыеСтрокиТаблицы Цикл
		Ответы.Удалить(УдаляемаяСтрока);
	КонецЦикла;
	
КонецПроцедуры
 
&НаСервере
Процедура УдалитьОтветНаВопрос(Ответ)
	
	ОтветОбъект = Ответ.ПолучитьОбъект();
	ОтветОбъект.УстановитьПометкуУдаления(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиКомментарийТекущегоВопроса()
	
	ТекущиеДанные = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Уровень = 0 Тогда
		Родитель = ТекущиеДанные;
	Иначе
		Родитель = ТекущиеДанные.ПолучитьРодителя();
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		Если ЗначениеЗаполнено(Родитель.ПояснениеКомментария) Тогда
			ПоказатьЗначение(, Родитель.ПояснениеКомментария);
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ТекущиеДанные", Родитель);
	Оповещение = Новый ОписаниеОповещения("ВвестиКомментарийТекущегоВопросаЗавершение", ЭтаФорма, ПараметрыОповещения);
	ПоказатьВводЗначения(Оповещение, Родитель.ПояснениеКомментария, "Комментарий", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(150)));
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьУсловияПересчетаАнкет()
	
	Возврат ЗначениеЗаполнено(ШаблонАнкеты) И НЕ ТребуетсяПересчетАнкет И ПроверитьНаличиеАнкет(ШаблонАнкеты);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьНаличиеАнкет(ШаблонАнкеты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Анкета.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Анкета КАК Анкета
		|ГДЕ
		|	Анкета.ШаблонАнкеты = &ШаблонАнкеты";
	
	Запрос.УстановитьПараметр("ШаблонАнкеты", ШаблонАнкеты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

&НаКлиенте
Функция ТекстВопросаПересчетаАнкет()
	
	Возврат НСтр("ru = 'Изменение настройки критериев потребует пересчета результатов анкетирования. Продолжить?'");
	
КонецФункции

&НаКлиенте
Процедура СохранениеШаблонаСПересчетом(ЗакрытьФорму)
		
	Если ЗначениеЗаполнено(ШаблонАнкеты) И ПроверитьНаличиеАнкет(ШаблонАнкеты) Тогда
				
		ДлительнаяОперация = СохранениеШаблонаСПересчетомНаСервере();	
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ЗакрытьФорму", ЗакрытьФорму);			
		Оповещение = Новый ОписаниеОповещения("СохранениеШаблонаСПересчетомЗавершение", ЭтаФорма, ПараметрыОповещения);

		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется пересчет результатов анкетирования.'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
		
	Иначе
		
		СохранениеШаблонаСПересчетомНаСервере();
		
		ТребуетсяПересчетАнкет = Ложь;
		Модифицированность = Ложь;
	
		Если ЗакрытьФорму Тогда
			Закрыть(ШаблонАнкеты);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения о завершении выполнения фонового задания пересчета результатов анкет.
//
// Параметры 
//	Результат - Структура, Неопределено - см. описание процедуры ДлительныеОперацииКлиент.ОжидатьЗавершение. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит признак закрытия формы.
//
&НаКлиенте
Процедура СохранениеШаблонаСПересчетомЗавершение(Результат, ДополнительныеПараметры) Экспорт 

	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ТекстОшибки = НСтр("ru = 'Не удалось выполнить пересчет результатов анкет.'");
		ТекстОшибки = ТекстОшибки + НСтр("ru = 'Техническая информация:'") + Символы.ПС + Результат.КраткоеПредставлениеОшибки;
		ВывестиСообщениеОбОшибке(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьВопросыШаблона();
	ОчиститьСтарыеОтветы();
	
	ТребуетсяПересчетАнкет = Ложь;
	Модифицированность = Ложь;
	
	Если ДополнительныеПараметры.ЗакрытьФорму Тогда
		Закрыть(ШаблонАнкеты);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСообщениеОбОшибке(Знач ТекстОшибки)
	ОчиститьСообщения();
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
КонецПроцедуры

&НаСервере
Функция СохранениеШаблонаСПересчетомНаСервере()
	
	ПодготовитьАнкетуНаСервере();
	
	МассивАнкет = Новый Массив;
	
	Если ЗначениеЗаполнено(ШаблонАнкеты) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Анкета.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.Анкета КАК Анкета
			|ГДЕ
			|	Анкета.ШаблонАнкеты = &ШаблонАнкеты";
		
		Запрос.УстановитьПараметр("ШаблонАнкеты", ШаблонАнкеты);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			МассивАнкет.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ТребуетсяПересчетАнкет", ТребуетсяПересчетАнкет);	
	ПараметрыПроцедуры.Вставить("ДеревоШаблонаАнкеты", РеквизитФормыВЗначение("ВопросыДляСобеседования"));
	ПараметрыПроцедуры.Вставить("Ответы", Ответы.Выгрузить());
	ПараметрыПроцедуры.Вставить("ШаблонАнкеты", ШаблонАнкеты);
	ПараметрыПроцедуры.Вставить("Объект", Объект);
	ПараметрыПроцедуры.Вставить("МассивАнкет", МассивАнкет);
	
	Если МассивАнкет.Количество() > 0 Тогда
	
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
				
		Возврат ДлительныеОперации.ВыполнитьВФоне("ЭлектронноеИнтервью.СохранитьНастройкиШаблонаАнкеты", ПараметрыПроцедуры, ПараметрыВыполнения);
	
	Иначе
		
		ЭлектронноеИнтервью.СохранитьНастройкиШаблонаАнкеты(ПараметрыПроцедуры, Неопределено);
		ЗаполнитьВопросыШаблона();
		ОчиститьСтарыеОтветы();
	
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьВопросыШаблона()
	
	Для Каждого ТекущийРаздел Из ВопросыДляСобеседования.ПолучитьЭлементы() Цикл
		Для Каждого ТекущаяСтрока Из ТекущийРаздел.ПолучитьЭлементы() Цикл
			Если Не ЗначениеЗаполнено(ТекущаяСтрока.ВопросДляСобеседования) Тогда
				Продолжить;
			КонецЕсли;
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ВопросыШаблонаАнкеты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
			|		ПО (ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты = ВопросыШаблонаАнкеты.Ссылка)
			|ГДЕ
			|	ВопросыШаблонаАнкеты.Владелец = &Владелец
			|	И (ВопросыШаблонаАнкеты.ЭлементарныйВопрос = &ЭлементарныйВопрос
			|				И &ЭлементарныйВопрос <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка)
			|			ИЛИ ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования = &ВопросДляСобеседования)";
			Запрос.УстановитьПараметр("Владелец", ШаблонАнкеты);
			Запрос.УстановитьПараметр("ЭлементарныйВопрос", ТекущаяСтрока.ЭлементарныйВопрос);
			Запрос.УстановитьПараметр("ВопросДляСобеседования", ТекущаяСтрока.ВопросДляСобеседования);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Если ТекущаяСтрока.ВопросШаблона <> Выборка.Ссылка Тогда
					ТекущаяСтрока.ВопросШаблона = Выборка.Ссылка;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;			
	
КонецПроцедуры

// Обработчик оповещения о закрытии вопроса о необходимости пересчета результатов анкет.
//
// Параметры 
//	Результат - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит текущие данные.
//
&НаКлиенте
Процедура ОбновитьКритерииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяПересчетАнкет = Истина;
	
	ВопросДляСобеседования = ДополнительныеПараметры.ВопросДляСобеседования;
	ОбновитьКритерииНаСервере(ВопросДляСобеседования);
	
	УстановитьПризнакПроверкиХарактеристик(ЭтаФорма);
	ЭлектронноеИнтервьюКлиент.ЗаполнитьДеревоКритериевОценки(ЭтаФорма);
	Модифицированность = Истина;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКритерииНаСервере(ВопросДляСобеседования)
	
	Если ВопросДляСобеседования.ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.Мотивация Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("ВопросДляСобеседования", ВопросДляСобеседования);
	
	УдаляемыеОтветы = Ответы.НайтиСтроки(ПараметрыПоиска);
	СтарыеОтветы = Ответы.Выгрузить();
	СтарыеОтветы.Очистить();
	СтарыеОтветы.Свернуть("ЭлементарныйВопрос, ОтветНаВопрос, СтарыйЭлементарныйВопрос, СтарыйОтветНаВопрос");
	
	УдаляемыеЭлементарныеВопросы = Новый ТаблицаЗначений;
	УдаляемыеЭлементарныеВопросы.Колонки.Добавить("СтарыйЭлементарныйВопрос");
	УдаляемыеЭлементарныеВопросы.Колонки.Добавить("СтарыйОтветНаВопрос");
	УдаляемыеЭлементарныеВопросы.Колонки.Добавить("ЭлементарныйВопросВопросаДляСобеседования");
	УдаляемыеЭлементарныеВопросы.Колонки.Добавить("ОтветНаВопросВопросаДляСобеседования");
	
	Для Каждого ТекущаяСтрока Из УдаляемыеОтветы Цикл
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.ОтветНаВопрос) Тогда
			Ответы.Удалить(ТекущаяСтрока);
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекущаяСтрока.СтарыйОтветНаВопрос) Тогда
			СтарыйЭлементарныйВопрос = ТекущаяСтрока.СтарыйЭлементарныйВопрос;
			СтарыйОтветНаВопрос = ТекущаяСтрока.СтарыйОтветНаВопрос;
		Иначе
			СтарыйЭлементарныйВопрос = ТекущаяСтрока.ЭлементарныйВопрос;
			СтарыйОтветНаВопрос = ТекущаяСтрока.ОтветНаВопрос;
		КонецЕсли;
		
		НоваяСтрока = СтарыеОтветы.Добавить();
		НоваяСтрока.ЭлементарныйВопрос = ТекущаяСтрока.ЭлементарныйВопросВопросаДляСобеседования;
		НоваяСтрока.ОтветНаВопрос = ТекущаяСтрока.ОтветНаВопросВопросаДляСобеседования;
		НоваяСтрока.СтарыйЭлементарныйВопрос = СтарыйЭлементарныйВопрос;
		НоваяСтрока.СтарыйОтветНаВопрос = СтарыйОтветНаВопрос;
		
		Ответы.Удалить(ТекущаяСтрока);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаКритериев();
	Запрос.УстановитьПараметр("Вопрос", ВопросДляСобеседования);
	Запрос.УстановитьПараметр("Объект", Объект);
		
	ДеревоРезультат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЭлектронноеИнтервью.ЗаполнитьТаблицуДереваКритериевОценки(ДеревоРезультат.Строки, Ответы, Истина,,,,, СтарыеОтветы);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСтарыеОтветы()
	
	Для Каждого ТекущаяСтрока Из Ответы Цикл
		ТекущаяСтрока.СтарыйЭлементарныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка();
		ТекущаяСтрока.СтарыйОтветНаВопрос = Справочники.ВариантыОтветовАнкет.ПустаяСсылка();
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаКритериев()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВариантыОтветовАнкет.Ссылка КАК Ответ,
		|	ВопросыДляСобеседованияКлючевыеВопросы.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	ВопросыДляСобеседованияКлючевыеВопросы.Ссылка КАК Вопрос
		|ПОМЕСТИТЬ ВТЭлементарныеВопросы
		|ИЗ
		|	Справочник.ВопросыДляСобеседования.КлючевыеВопросы КАК ВопросыДляСобеседованияКлючевыеВопросы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовАнкет КАК ВариантыОтветовАнкет
		|		ПО ВопросыДляСобеседованияКлючевыеВопросы.ЭлементарныйВопрос = ВариантыОтветовАнкет.Владелец
		|			И (НЕ ВариантыОтветовАнкет.ПометкаУдаления)
		|ГДЕ
		|	ВопросыДляСобеседованияКлючевыеВопросы.Ссылка = &Вопрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВакансииХарактеристикиПерсонала.Характеристика КАК Характеристика,
		|	ВакансииХарактеристикиПерсонала.Значение КАК Значение
		|ПОМЕСТИТЬ ВТИспользуемыеХарактеристики
		|ИЗ
		|	Справочник.Вакансии.ХарактеристикиПерсонала КАК ВакансииХарактеристикиПерсонала
		|ГДЕ
		|	ВакансииХарактеристикиПерсонала.Ссылка = &Объект
		|	И ВакансииХарактеристикиПерсонала.ТребуетсяПроверка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрофилиДолжностейХарактеристикиПерсонала.Характеристика,
		|	ПрофилиДолжностейХарактеристикиПерсонала.Значение
		|ИЗ
		|	Справочник.ПрофилиДолжностей.ХарактеристикиПерсонала КАК ПрофилиДолжностейХарактеристикиПерсонала
		|ГДЕ
		|	ПрофилиДолжностейХарактеристикиПерсонала.Ссылка = &Объект
		|	И ПрофилиДолжностейХарактеристикиПерсонала.ТребуетсяПроверка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Вопрос КАК ВопросДляСобеседования,
		|	ЭлементарныеВопросы.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	ЭлементарныеВопросы.Ответ КАК ОтветНаВопрос,
		|	ЕСТЬNULL(ВопросыДляСобеседованияКлючи.ХарактеристикаПерсонала, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиПерсонала.ПустаяСсылка)) КАК Характеристика,
		|	ЕСТЬNULL(ВопросыДляСобеседованияКлючи.ЗначениеХарактеристики, ЗНАЧЕНИЕ(Справочник.ЗначенияХарактеристикПерсонала.ПустаяСсылка)) КАК Значение,
		|	ЕСТЬNULL(ВопросыДляСобеседованияКлючи.Балл, 0) КАК Балл
		|ПОМЕСТИТЬ ВТПолнаяТаблица
		|ИЗ
		|	ВТЭлементарныеВопросы КАК ЭлементарныеВопросы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВопросыДляСобеседования.Ключи КАК ВопросыДляСобеседованияКлючи
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИспользуемыеХарактеристики КАК ИспользуемыеХарактеристики
		|			ПО ВопросыДляСобеседованияКлючи.ХарактеристикаПерсонала = ИспользуемыеХарактеристики.Характеристика
		|				И ВопросыДляСобеседованияКлючи.ЗначениеХарактеристики = ИспользуемыеХарактеристики.Значение
		|		ПО ЭлементарныеВопросы.Вопрос = ВопросыДляСобеседованияКлючи.Ссылка
		|			И ЭлементарныеВопросы.ЭлементарныйВопрос = ВопросыДляСобеседованияКлючи.ЭлементарныйВопрос
		|			И ЭлементарныеВопросы.Ответ = ВопросыДляСобеседованияКлючи.ОтветНаВопрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТПолнаяТаблица.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	ВТПолнаяТаблица.ВопросДляСобеседования КАК ВопросДляСобеседования
		|ПОМЕСТИТЬ ВТПодходящиеВопросы
		|ИЗ
		|	ВТПолнаяТаблица КАК ВТПолнаяТаблица
		|ГДЕ
		|	ВТПолнаяТаблица.Характеристика <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиПерсонала.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПолнаяТаблица.ВопросДляСобеседования КАК ВопросДляСобеседования,
		|	ВТПолнаяТаблица.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	ВТПолнаяТаблица.ОтветНаВопрос КАК ОтветНаВопрос,
		|	ВТПолнаяТаблица.ЭлементарныйВопрос.Формулировка КАК Наименование,
		|	ВТПолнаяТаблица.ЭлементарныйВопрос.ТребуетсяКомментарий КАК ТребуетсяКомментарий,
		|	ВТПолнаяТаблица.ЭлементарныйВопрос.ПояснениеКомментария КАК ПояснениеКомментария,
		|	ВТПолнаяТаблица.ОтветНаВопрос.Наименование КАК ОтветНаименование,
		|	ВТПолнаяТаблица.Характеристика КАК Характеристика,
		|	ВТПолнаяТаблица.Значение КАК Значение,
		|	ВТПолнаяТаблица.Балл КАК Балл
		|ИЗ
		|	ВТПолнаяТаблица КАК ВТПолнаяТаблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодходящиеВопросы КАК ВТПодходящиеВопросы
		|		ПО ВТПолнаяТаблица.ВопросДляСобеседования = ВТПодходящиеВопросы.ВопросДляСобеседования
		|			И ВТПолнаяТаблица.ЭлементарныйВопрос = ВТПодходящиеВопросы.ЭлементарныйВопрос
		|ИТОГИ ПО
		|	ВопросДляСобеседования,
		|	ЭлементарныйВопрос,
		|	ОтветНаВопрос";
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
