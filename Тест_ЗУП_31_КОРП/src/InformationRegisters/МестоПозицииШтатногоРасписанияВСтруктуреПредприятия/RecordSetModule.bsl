#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СписокПозиций = Новый Соответствие;
	Для Каждого Запись Из ЭтотОбъект Цикл
		СписокПозиций.Вставить(Запись.Позиция);
	КонецЦикла;
	
	Если СписокПозиций.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("СписокПозиций", ОбщегоНазначения.ВыгрузитьКолонку(СписокПозиций, "Ключ"));
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	МестоПозицииШтатногоРасписанияВСтруктуреПредприятия.Позиция КАК Позиция,
			|	МестоПозицииШтатногоРасписанияВСтруктуреПредприятия.Подразделение КАК Подразделение
			|ПОМЕСТИТЬ ВТПодразделенияПозиций
			|ИЗ
			|	РегистрСведений.МестоПозицииШтатногоРасписанияВСтруктуреПредприятия КАК МестоПозицииШтатногоРасписанияВСтруктуреПредприятия
			|ГДЕ
			|	МестоПозицииШтатногоРасписанияВСтруктуреПредприятия.Позиция В(&СписокПозиций)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПодразделенияПозиций.Позиция КАК Позиция
			|ИЗ
			|	ВТПодразделенияПозиций КАК ПодразделенияПозиций";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			ДополнительныеСвойства.Вставить("ТекущиеПодразделенияПозиций", Запрос.МенеджерВременныхТаблиц);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ТекущиеПодразделенияПозиций") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ТекущиеПодразделенияПозиций;
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	МестоПозицииШтатногоРасписанияВСтруктуреПредприятия.Позиция КАК Позиция,
			|	МестоПозицииШтатногоРасписанияВСтруктуреПредприятия.Подразделение КАК МестоВСтруктуреПредприятия
			|ПОМЕСТИТЬ ВТМестаВСтруктуреПредприятияПозиций
			|ИЗ
			|	РегистрСведений.МестоПозицииШтатногоРасписанияВСтруктуреПредприятия КАК МестоПозицииШтатногоРасписанияВСтруктуреПредприятия
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодразделенияПозиций КАК ПодразделенияПозиций
			|		ПО МестоПозицииШтатногоРасписанияВСтруктуреПредприятия.Позиция = ПодразделенияПозиций.Позиция
			|ГДЕ
			|	МестоПозицииШтатногоРасписанияВСтруктуреПредприятия.Подразделение <> ПодразделенияПозиций.Подразделение
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПодразделенияПозиций.Позиция КАК Позиция
			|ИЗ
			|	ВТМестаВСтруктуреПредприятияПозиций КАК ПодразделенияПозиций";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	МестаВСтруктуреПредприятияПозиций.МестоВСтруктуреПредприятия КАК МестоВСтруктуреПредприятия,
				|	ДанныеДляПодбораСотрудников.ИдентификаторЗаписи КАК ИдентификаторЗаписи
				|ИЗ
				|	РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудников
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМестаВСтруктуреПредприятияПозиций КАК МестаВСтруктуреПредприятияПозиций
				|		ПО ДанныеДляПодбораСотрудников.ДолжностьПоШтатномуРасписанию = МестаВСтруктуреПредприятияПозиций.Позиция";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				
				НаборЗаписейДанныеДляПодбораСотрудников = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
				НаборЗаписейДанныеДляПодбораСотрудников.Отбор.ИдентификаторЗаписи.Установить(Выборка.ИдентификаторЗаписи);
				
				НаборЗаписейДанныеДляПодбораСотрудников.Прочитать();
				Для Каждого Запись Из НаборЗаписейДанныеДляПодбораСотрудников Цикл
					Запись.МестоВСтруктуреПредприятия = Выборка.МестоВСтруктуреПредприятия;
				КонецЦикла;
				
				НаборЗаписейДанныеДляПодбораСотрудников.Записать();
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	ИменаПолей = ОбменДаннымиЗарплатаКадры.ИменаПолейОграниченияРегистрацииРегистраСведений();
	ИменаПолей.Подразделения = "Подразделение";
	ИменаПолей.ПозицииШтатногоРасписания = "Позиция";
	
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииРегистраСведений(ЭтотОбъект, ИменаПолей);
	
КонецФункции

#КонецОбласти

#КонецЕсли
