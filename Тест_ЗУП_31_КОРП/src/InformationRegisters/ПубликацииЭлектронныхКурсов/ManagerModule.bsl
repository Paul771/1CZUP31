#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция Публикация(Знач ЭлектронныйКурс, Знач ДатаИзмененияСуществующихДанных = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлектронныйКурс) Тогда
		ВызватьИсключение НСтр("ru = 'Электронный курс не задан'");
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПубликацииЭлектронныхКурсов.ДатаПубликации КАК ДатаИзменения,
		|	ПубликацииЭлектронныхКурсов.СтруктураКурса КАК СтруктураКурса,
		|	ПубликацииЭлектронныхКурсов.Ресурсы КАК Ресурсы
		|ИЗ
		|	РегистрСведений.ПубликацииЭлектронныхКурсов КАК ПубликацииЭлектронныхКурсов
		|ГДЕ
		|	ПубликацииЭлектронныхКурсов.ЭлектронныйКурс = &ЭлектронныйКурс
		|	И &ОтборПоДатеИзменения";
	
	Если ДатаИзмененияСуществующихДанных <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДатеИзменения", "ПубликацииЭлектронныхКурсов.ДатаПубликации > &ДатаИзмененияСуществующихДанных");
		Запрос.УстановитьПараметр("ДатаИзмененияСуществующихДанных", ДатаИзмененияСуществующихДанных);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДатеИзменения", "ИСТИНА")
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЭлектронныйКурс", ЭлектронныйКурс);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	ВыборкаДетальныеЗаписи.Следующий();
	
	ДанныеДляВозврата = ИзучениеЭлектронныхКурсовСлужебный.ПустаяСтруктураДанныхПубликации();
	ДанныеДляВозврата.ДатаИзменения = ВыборкаДетальныеЗаписи.ДатаИзменения;
	ДанныеДляВозврата.СтруктураКурса = ВыборкаДетальныеЗаписи.СтруктураКурса.Получить();
	ДанныеДляВозврата.Ресурсы = ВыборкаДетальныеЗаписи.Ресурсы.Получить();
	
	Возврат Новый ФиксированнаяСтруктура(ДанныеДляВозврата);
	
КонецФункции

Процедура Опубликовать(ЭлектронныйКурс, ОпубликоватьБезРазрешения, ИдентификаторФормы = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлектронныйКурс) Тогда
		ВызватьИсключение НСтр("ru = 'Электронный курс не задан'");
	КонецЕсли;		
	
	Если НЕ ОпубликоватьБезРазрешения И НЕ РегистрыСведений.ИзмененныеЭлектронныеКурсы.МожноПубликоватьКурс(ЭлектронныйКурс) Тогда
		Возврат; // Нет разрешения не публикацию (курс еще редактируется)
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
			
		// Сначала фиксируем факт публикации, чтобы не было ложных срабатываний о том, что курс не опубликован.
		РегистрыСведений.ИзмененныеЭлектронныеКурсы.ЗафиксироватьПубликациюКурса(ЭлектронныйКурс);
		
		ДанныеПубликации = ИзучениеЭлектронныхКурсовСлужебный.ДанныеПубликацииЭлектронногоКурса(ЭлектронныйКурс);
		
		Запись = РегистрыСведений.ПубликацииЭлектронныхКурсов.СоздатьМенеджерЗаписи();
		Запись.ДатаПубликации = ТекущаяДатаСеанса();
		Запись.ЭлектронныйКурс = ЭлектронныйКурс;	
		Запись.СтруктураКурса = Новый ХранилищеЗначения(ДанныеПубликации.СтруктураКурса);
		Запись.Ресурсы = Новый ХранилищеЗначения(ДанныеПубликации.Ресурсы);		
		Запись.Записать();
		
		ЗафиксироватьТранзакцию();
	
	Исключение
 
 		ОтменитьТранзакцию();
		ЭлектронноеОбучениеСлужебный.ЗаписатьОшибкуВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
		
	КонецПопытки;
	
	// Выгружаем на диск (на сервере)
	
	ПутьКОбщемуКаталогу = РегистрыСведений.ОбщиеНастройкиЭлектронногоОбучения.Значение("ПутьКОбщемуКаталогуНаВебСервере");
	
	Если ЗначениеЗаполнено(ПутьКОбщемуКаталогу) Тогда		
		ПутьККаталогуЭлектронныйКурсов = ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.ПутьККаталогуЭлектронныхКурсов(ПутьКОбщемуКаталогу);
		ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.ВыполнитьНачальноеЗаполнениеКаталогаЭлектронныхКурсов(ПутьККаталогуЭлектронныйКурсов);
		ПутьККаталогуРесурсов = ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.ПутьККаталогуРесурсов(ПутьККаталогуЭлектронныйКурсов);
		ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.СкопироватьНаДискДанныеПубликации(ДанныеПубликации, ПутьККаталогуРесурсов, ЭлектронныйКурс,,ИдентификаторФормы); 
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьПубликацию(ЭлектронныйКурс) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлектронныйКурс) Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
	
		РегистрыСведений.ИзмененныеЭлектронныеКурсы.ЗафиксироватьПубликациюКурса(ЭлектронныйКурс);
		
		Набор = РегистрыСведений.ПубликацииЭлектронныхКурсов.СоздатьНаборЗаписей();
		Набор.Отбор.ЭлектронныйКурс.Установить(ЭлектронныйКурс);
		Набор.Записать();
		ЗафиксироватьТранзакцию();
	
	Исключение
 
 		ОтменитьТранзакцию();
		ЭлектронноеОбучениеСлужебный.ЗаписатьОшибкуВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
		
	КонецПопытки;

КонецПроцедуры

#КонецОбласти

#КонецЕсли

