#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьВторичныеДанныеСтатусыФизическихЛиц(ПараметрыОбновления = Неопределено) Экспорт
	ЗаполнитьВторичныеДанные();
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
КонецПроцедуры

Процедура ЗаполнитьВторичныеДанные(ФизическоеЛицо = Неопределено) Экспорт
	
	ДатаЗакона285ФЗ = УчетНДФЛ.ДатаЗакона285ФЗ();
	ДатаИзмененияИсчисленияДляИностранцев = УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев();
	
	ДатыИзмененияЗаконодательства = Новый ТаблицаЗначений;
	ДатыИзмененияЗаконодательства.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ДатыИзмененияЗаконодательства.Добавить().Дата = ДатаЗакона285ФЗ; 
	ДатыИзмененияЗаконодательства.Добавить().Дата = ДатаИзмененияИсчисленияДляИностранцев;
	ДатыИзмененияЗаконодательства.Сортировать("Дата");

	ЗаписываемыйНабор = РегистрыСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.СоздатьНаборЗаписей();
	ЗаписываемыйНабор.ОбменДанными.Загрузка = Истина;
	
	ТаблицаНабор = РегистрыСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Период КАК Период,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛицКакНалогоплательщиковНДФЛ
	|ГДЕ
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо = &ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	Период";
	
	ТекстФильтра = "(ИСТИНА)";
	Если ФизическоеЛицо = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо = &ФизическоеЛицо", "(ИСТИНА)");
		ЗаписываемыйНабор.Записать();
	Иначе
		Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		Если ФизическоеЛицо <> Неопределено Тогда
			ЗаписываемыйНабор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
			ЗаписываемыйНабор.Записать();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		
		ЗаписываемыйНабор.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		
		ИзмененияЗаконодательства = ДатыИзмененияЗаконодательства.Скопировать();
		УчтенныеИзмененияЗаконодательства = Новый Массив;
		Набор = ТаблицаНабор.Скопировать();
		ДобавляемыеПериоды = ТаблицаНабор.Скопировать();
		
		Пока Выборка.Следующий() Цикл
			Если Набор.Количество() > 0 Тогда
				// выполним разбиение с учетом дат изменения законодательства
				ПоследняяЗапись = Набор[Набор.Количество() - 1];
				
				Для Каждого ДатаИзмененияЗаконодатлсьтва Из ИзмененияЗаконодательства Цикл
					Если ДатаИзмененияЗаконодатлсьтва.Дата < Выборка.Период 
						И ДатаИзмененияЗаконодатлсьтва.Дата > ПоследняяЗапись.ДатаНачала Тогда
						
						Запись = Набор.Добавить();
						Запись.ДатаНачала = ДатаИзмененияЗаконодатлсьтва.Дата;
						Запись.ФизическоеЛицо = Выборка.ФизическоеЛицо;
						Запись.Статус = ПоследняяЗапись.Статус;
						
						УчтенныеИзмененияЗаконодательства.Добавить(ДатаИзмененияЗаконодатлсьтва);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Запись = Набор.Добавить();
			Запись.ДатаНачала = Выборка.Период;
			Запись.ФизическоеЛицо = Выборка.ФизическоеЛицо;
			Запись.Статус = Выборка.Статус;
			
			Для Каждого ДатаИзмененияЗаконодатлсьтва Из УчтенныеИзмененияЗаконодательства Цикл
				ИзмененияЗаконодательства.Удалить(ДатаИзмененияЗаконодатлсьтва);
			КонецЦикла;
			УчтенныеИзмененияЗаконодательства.Очистить();
		КонецЦикла;
		
		Если Набор.Количество() > 0 Тогда
			// выполним разбиение с учетом дат изменения законодательства
			ПоследняяЗапись = Набор[Набор.Количество() - 1];
			Для Каждого ДатаИзмененияЗаконодатлсьтва Из ИзмененияЗаконодательства Цикл
				Если ДатаИзмененияЗаконодатлсьтва.Дата > ПоследняяЗапись.ДатаНачала Тогда
					ПоследняяЗапись = Набор[Набор.Количество() - 1];
					
					Запись = Набор.Добавить();
					Запись.ДатаНачала = ДатаИзмененияЗаконодатлсьтва.Дата;
					Запись.ФизическоеЛицо = Выборка.ФизическоеЛицо;
					Запись.Статус = ПоследняяЗапись.Статус;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Набор.Сортировать("ДатаНачала");
		
		ПредыдущаяЗапись = Неопределено;
		Для Каждого ЗаписьНабора Из Набор Цикл
			НовыйПериод = Неопределено;
			Если ПредыдущаяЗапись <> Неопределено Тогда
				Если НачалоГода(ЗаписьНабора.ДатаНачала) <> НачалоГода(ПредыдущаяЗапись.ДатаНачала)
					И НачалоГода(ЗаписьНабора.ДатаНачала) <> ЗаписьНабора.ДатаНачала Тогда
					ПредыдущаяЗапись.ДатаОкончания = НачалоГода(ЗаписьНабора.ДатаНачала) - 1;
					
					НовыйПериод = ДобавляемыеПериоды.Добавить();
					ЗаполнитьЗначенияСвойств(НовыйПериод, ПредыдущаяЗапись);
					НовыйПериод.ДатаНачала = НачалоГода(ЗаписьНабора.ДатаНачала);
					НовыйПериод.ДатаОкончания = ЗаписьНабора.ДатаНачала - 1;
					НовыйПериод.Год = НовыйПериод.ДатаНачала;
					
					ПредыдущаяЗапись = НовыйПериод;
					НовыеПериоды = Неопределено;
					
				КонецЕсли;
				
				Если ЗаписьНабора.ДатаНачала <> НачалоМесяца(ЗаписьНабора.ДатаНачала) Тогда
					ПредыдущаяЗапись.ДатаОкончания = НачалоМесяца(ЗаписьНабора.ДатаНачала) - 1;
					
					НовыйПериод = ДобавляемыеПериоды.Добавить();
					ЗаполнитьЗначенияСвойств(НовыйПериод, ПредыдущаяЗапись);
					НовыйПериод.ДатаНачала = НачалоМесяца(ЗаписьНабора.ДатаНачала);
					НовыйПериод.ДатаОкончания = ЗаписьНабора.ДатаНачала - 1;
					НовыйПериод.Год = НачалоГода(НовыйПериод.ДатаНачала);
				Иначе
					ПредыдущаяЗапись.ДатаОкончания = ЗаписьНабора.ДатаНачала - 1;
				КонецЕсли;
			КонецЕсли;
			
			РезидентРФНаКонецМесяца = Истина;
			Если ЗаписьНабора.ДатаНачала < ДатаЗакона285ФЗ Тогда
				РезидентРФНаКонецМесяца = Не (ЗаписьНабора.Статус = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент Или ЗаписьНабора.Статус = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Беженцы);
			Иначе
				РезидентРФНаКонецМесяца = ЗаписьНабора.Статус <> Справочники.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент;
			КонецЕсли;
			ЗаписьНабора.РезидентРФНаКонецМесяца = РезидентРФНаКонецМесяца;
			
			ЗаписьНабора.Год = НачалоГода(ЗаписьНабора.ДатаНачала);
			
			Если НовыйПериод <> Неопределено Тогда
				НовыйПериод.РезидентРФНаКонецМесяца = РезидентРФНаКонецМесяца;
			КонецЕсли;
			
			ПредыдущаяЗапись = ЗаписьНабора;
			
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДобавляемыеПериоды, Набор);
		Набор.Сортировать("ДатаНачала");
		
		Если Набор.Количество() > 0  Тогда
			Набор[Набор.Количество() - 1].ДатаОкончания = ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата();
		КонецЕсли;

		
		//// расчитаем ресурс РезидентРФНаКонецГода
		//ПредыдущаяЗапись = Неопределено;
		//ЗаписиЗаГод = Новый Массив;
		//Для Каждого ЗаписьНабора Из Набор Цикл
		//	Если ПредыдущаяЗапись <> Неопределено И ПредыдущаяЗапись.Год <> ЗаписьНабора.Год Тогда
		//		РезидентРФНаКонецГода = ЗаписиЗаГод[ЗаписиЗаГод.Количество() - 1].РезидентРФНаКонецМесяца;
		//		СтатусНаКонецГода = ЗаписиЗаГод[ЗаписиЗаГод.Количество() - 1].Статус;
		//		
		//		Для Каждого ЗаписьЗаГод Из ЗаписиЗаГод Цикл
		//			ЗаписьЗаГод.РезидентРФНаКонецГода = РезидентРФНаКонецГода;
		//			ЗаписьЗаГод.СтатусНаКонецГода = СтатусНаКонецГода;
		//		КонецЦикла;	
		//		
		//		ЗаписиЗаГод = Новый Массив;
		//	КонецЕсли;
		//	
		//	ЗаписиЗаГод.Добавить(ЗаписьНабора);
		//	
		//	ПредыдущаяЗапись = ЗаписьНабора;
		//КонецЦикла;
		//
		//Если ЗаписиЗаГод.Количество() > 0 Тогда
		//	РезидентРФНаКонецГода = ЗаписиЗаГод[ЗаписиЗаГод.Количество() - 1].РезидентРФНаКонецМесяца;
		//	СтатусНаКонецГода = ЗаписиЗаГод[ЗаписиЗаГод.Количество() - 1].Статус;
		//	
		//	Для Каждого ЗаписьЗаГод Из ЗаписиЗаГод Цикл
		//		ЗаписьЗаГод.РезидентРФНаКонецГода = РезидентРФНаКонецГода;
		//		ЗаписьЗаГод.СтатусНаКонецГода = СтатусНаКонецГода;
		//	КонецЦикла;
		//КонецЕсли;

		
		// расчитаем значения на конец отчетных периодов
		ПредыдущаяЗапись = Неопределено;
		ЗаписиЗаГод = Новый Массив;
		РесурсыРегистра = 
		"РезидентРФНаКонецКвартала1,
		|РезидентРФНаКонецКвартала2,
		|РезидентРФНаКонецКвартала3,
		|РезидентРФНаКонецГода,
		|СтатусНаКонецКвартала1,
		|СтатусНаКонецКвартала2,
		|СтатусНаКонецКвартала3,
		|СтатусНаКонецГода";
		ЗначенияРесурсов = Новый Структура(РесурсыРегистра);
		Для Каждого ЗаписьНабора Из Набор Цикл
			Если ПредыдущаяЗапись <> Неопределено И ПредыдущаяЗапись.Год <> ЗаписьНабора.Год Тогда
				
				Для Каждого ЗаписьЗаГод Из ЗаписиЗаГод Цикл
					ЗаполнитьЗначенияСвойств(ЗаписьЗаГод, ЗначенияРесурсов, РесурсыРегистра);
				КонецЦикла;
				
				ЗначенияРесурсов = Новый Структура(РесурсыРегистра);
				ЗаписиЗаГод = Новый Массив;
			КонецЕсли;
			
			Для ОтчетныйПериод = 1 По 4 Цикл
				ИмяРесурсаСтатус = ?(ОтчетныйПериод = 4, "СтатусНаКонецГода", "СтатусНаКонецКвартала" + ОтчетныйПериод);
				ИмяРесурсаРезидент = ?(ОтчетныйПериод = 4, "РезидентРФНаКонецГода", "РезидентРФНаКонецКвартала"  + ОтчетныйПериод);
				НачалоКвартала = ДобавитьМесяц(ЗаписьНабора.Год, (ОтчетныйПериод-1) * 3);
				ОкончаниеКвартала = КонецКвартала(НачалоКвартала);
				
				Если (ЗаписьНабора.ДатаНачала >= НачалоКвартала И ЗаписьНабора.ДатаНачала <= ОкончаниеКвартала) 
					Или (ЗаписьНабора.ДатаНачала < НачалоКвартала И ЗаписьНабора.ДатаОкончания > ОкончаниеКвартала) 
					Или (ЗаписьНабора.ДатаОкончания >= НачалоКвартала И ЗаписьНабора.ДатаОкончания <= ОкончаниеКвартала) Тогда
					ЗначенияРесурсов[ИмяРесурсаРезидент] = ЗаписьНабора.РезидентРФНаКонецМесяца;
					ЗначенияРесурсов[ИмяРесурсаСтатус] = ЗаписьНабора.Статус;
				КонецЕсли;
			КонецЦикла;
			
			ЗаписиЗаГод.Добавить(ЗаписьНабора);
			
			ПредыдущаяЗапись = ЗаписьНабора;
		КонецЦикла;
		Если ЗаписиЗаГод.Количество() > 0 Тогда
			Для Каждого ЗаписьЗаГод Из ЗаписиЗаГод Цикл
				ЗаполнитьЗначенияСвойств(ЗаписьЗаГод, ЗначенияРесурсов, РесурсыРегистра);
			КонецЦикла;
		КонецЕсли;
		
		// расчитаем ресурс ПрименяетсяСтавкаПункта1Статьи224НК
		Для Каждого ЗаписьНабора Из Набор Цикл
			Если ЗаписьНабора.ДатаНачала < ДатаИзмененияИсчисленияДляИностранцев Тогда
				ЗаписьНабора.ПрименяетсяСтавкаПункта1Статьи224НК = ЗаписьНабора.РезидентРФНаКонецМесяца Или ЗаписьНабора.РезидентРФНаКонецГода;
			ИначеЕсли ЗаписьНабора.СтатусНаКонецГода = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Резидент Тогда
				ЗаписьНабора.ПрименяетсяСтавкаПункта1Статьи224НК = Истина;
			ИначеЕсли ЗаписьНабора.Статус = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Резидент
				Или ЗаписьНабора.Статус = Справочники.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС Тогда
				
				ЗаписьНабора.ПрименяетсяСтавкаПункта1Статьи224НК = Истина;
			Иначе
				ЗаписьНабора.ПрименяетсяСтавкаПункта1Статьи224НК = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		ЗаписываемыйНабор.Загрузить(Набор);
		ЗаписываемыйНабор.Записать();
		ЗаписываемыйНабор.Очистить();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли