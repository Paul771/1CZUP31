&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ВедущийОбъект", ОбъектВладелец);
	Если Не ЗначениеЗаполнено(ОбъектВладелец) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Если объект еще не заблокирован для изменений и есть права на изменение набора
	// попытаемся установить блокировку.
	Если НЕ ОтражениеЗарплатыВБухучетеРасширенный.ДоступноИзменениеБухучетаЗарплатыПодразделений() Тогда
		
		ТолькоПросмотр = Истина;
		
	КонецЕсли; 
	
	Если ТолькоПросмотр Тогда
		
		Элементы.ТаблицаИстории.ТолькоПросмотр = Истина;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, 
			"ФормаКомандаОК",
			"Доступность",
			Ложь);
			
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
		
	Для Каждого ЗаписьНабора Из Параметры.МассивЗаписей Цикл
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), ЗаписьНабора);
	КонецЦикла;
	
	ЗаполнитьСоответствиеПредставлений();
	
	НаборЗаписей.Сортировать("Период");
	Таблица = НаборЗаписей.Выгрузить(); 
	Таблица.Свернуть("Период");
	Периоды = Таблица.ВыгрузитьКолонку("Период");
	Отбор = Новый Структура("Период");
	Для каждого Период Из Периоды Цикл
		
		НоваяСтрокаИстории = ТаблицаИстории.Добавить();
		НоваяСтрокаИстории.Период = Период;
		Отбор.Период = Период;
		СтрокиНабора = НаборЗаписей.НайтиСтроки(Отбор);
		Если СтрокиНабора.Количество()>1 Тогда
			
			НоваяСтрокаИстории.Распределяется = Истина;
			
			ТаблицаРаспределения = НоваяТаблицаРаспределения();
			Для каждого СтрокаНабора Из СтрокиНабора Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаРаспределения.Добавить(),СтрокаНабора);
			КонецЦикла;
			НоваяСтрокаИстории.Распределение = ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(ТаблицаРаспределения);
			НоваяСтрокаИстории.КомандаРедактированияРаспределения = ПредставлениеРаспределения(НоваяСтрокаИстории.Распределение);
		Иначе	
			ЗаполнитьЗначенияСвойств(НоваяСтрокаИстории, СтрокиНабора[0]);
			НоваяСтрокаИстории.Распределение = ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(НоваяТаблицаРаспределения());
			НоваяСтрокаИстории.КомандаРедактированияРаспределения = НСтр("ru = 'Не заполнено'");
		КонецЕсли;
	
	КонецЦикла;
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(ТаблицаИстории, "Период", "ПериодСтрокой");
	ОтражениеЗарплатыВБухучете.УстановитьСписокВыбораОтношениеКЕНВД(Элементы, "ТаблицаИсторииОтношениеКЕНВД");
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоответствиеПредставлений()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиФинансированияЗарплата.Ссылка,
	|	СтатьиФинансированияЗарплата.Код
	|ИЗ
	|	Справочник.СтатьиФинансированияЗарплата КАК СтатьиФинансированияЗарплата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияЗарплатыВБухУчете.Ссылка,
	|	ВЫРАЗИТЬ(СпособыОтраженияЗарплатыВБухУчете.Наименование КАК СТРОКА(40)) КАК Наименование
	|ИЗ
	|	Справочник.СпособыОтраженияЗарплатыВБухУчете КАК СпособыОтраженияЗарплатыВБухУчете";
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка = Результат[0].Выбрать();
	Представления = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Представления.Вставить(Выборка.Ссылка, Выборка.Код);
	КонецЦикла;
	Представления.Вставить(Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка(), "");
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		Представления.Вставить(Выборка.Ссылка, Выборка.Наименование);
	КонецЦикла;
	Представления.Вставить(Справочники.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка(), "");
	Представления.Вставить(Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД,Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД);
	Представления.Вставить(Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД,Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД);
	Представления.Вставить(Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом,НСтр("ru = 'ЕНВД: опр. ежемесячно процентом'"));  
	Представления.Вставить(Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка(),"");	

	СоответствиеПредставлений = Новый ФиксированноеСоответствие(Представления);
	
КонецПроцедуры


&НаСервере
Функция ПредставлениеРаспределения(ТаблицаРаспределения)

	Если ТаблицаРаспределения.Количество() = 0 Тогда
		Возврат НСтр("ru = 'Не заполнено'");
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.БухучетЗарплатыПодразделений;
	Синоним = МетаданныеРегистра.Синоним;
	Если ЗначениеЗаполнено(МетаданныеРегистра.ПредставлениеЗаписи) Тогда
		Синоним = МетаданныеРегистра.ПредставлениеЗаписи;
	КонецЕсли;
	ЕстьОшибки = Ложь;
	Для каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
		
		ПроверяемыеПоля = Новый Массив;
		ПроверяемыеПоля.Добавить("ДоляРаспределения");
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
			ПроверяемыеПоля.Добавить("СтатьяФинансирования");
		КонецЕсли;
		ПроверяемыеПоля.Добавить("СпособОтраженияЗарплатыВБухучете");
		Если ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД") Тогда
			ПроверяемыеПоля.Добавить("ОтношениеКЕНВД");
		КонецЕсли;
		
		ПредставлениеРаспределения = "";
		Для каждого Запись Из ТаблицаРаспределения Цикл
			
			Для каждого ОписаниеПоля Из ПроверяемыеПоля Цикл
				
				Если Не ЗначениеЗаполнено(Запись[ОписаниеПоля]) Тогда   
					ЕстьОшибки = Истина;	
				КонецЕсли;
				
				Если ОписаниеПоля = "ДоляРаспределения" Тогда
					ПредставлениеРаспределения = ПредставлениеРаспределения + Запись[ОписаниеПоля];
				Иначе
					ПредставлениеРаспределения =  ПредставлениеРаспределения + ", " + СОКРЛП(СоответствиеПредставлений[Запись[ОписаниеПоля]]);
				КонецЕсли;
				
			КонецЦикла;
			ПредставлениеРаспределения = ПредставлениеРаспределения + Символы.ПС;
		КонецЦикла;
				
	КонецЦикла;
	
	Если ЕстьОшибки Тогда
		Возврат НСтр("ru = 'Заполнено с ошибками'");
	Иначе
		Возврат ПредставлениеРаспределения;
	КонецЕсли;

КонецФункции


&НаСервереБезКонтекста
Функция НоваяТаблицаРаспределения()

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("ОтношениеКЕНВД", Новый ОписаниеТипов("ПеречислениеСсылка.ОтношениеКЕНВДЗатратНаЗарплату"));
	Таблица.Колонки.Добавить("ДоляРаспределения", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14, 3)));
	
	Возврат Таблица;

КонецФункции


&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если ОшибкиРаспределенияВТаблицеИстории() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей.Очистить();
	Для каждого СтрокаТЗ Из ТаблицаИстории Цикл
	
		Если СтрокаТЗ.Распределяется Тогда
			
			ТаблицаРаспределения = СтрокаТЗ.Распределение;
			ИдентификаторСтроки = 0;
			Для каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаРаспределения);
				НоваяЗапись.Подразделение = ОбъектВладелец;
				НоваяЗапись.Период = СтрокаТЗ.Период;
				НоваяЗапись.ИдентификаторСтроки = ИдентификаторСтроки;
				ИдентификаторСтроки = ИдентификаторСтроки +1;
			КонецЦикла;
			
		Иначе
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТЗ);
			НоваяЗапись.Подразделение = ОбъектВладелец;
			
		КонецЕсли;
	
	КонецЦикла;
	
	РедактированиеПериодическихСведенийКлиент.ОповеститьОЗавершении(ЭтаФорма, "БухучетЗарплатыПодразделений", ОбъектВладелец);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

&НаСервере
Функция ОшибкиРаспределенияВТаблицеИстории()

	МетаданныеРегистра = Метаданные.РегистрыСведений.БухучетЗарплатыПодразделений;
	Синоним = МетаданныеРегистра.Синоним;
	Если ЗначениеЗаполнено(МетаданныеРегистра.ПредставлениеЗаписи) Тогда
		Синоним = МетаданныеРегистра.ПредставлениеЗаписи;
	КонецЕсли;
	
	Отказ = Ложь;
	
	Для каждого СтрокаТЗ Из ТаблицаИстории Цикл
		
		Если СтрокаТЗ.Распределяется Тогда
			
			ТаблицаРаспределения = СтрокаТЗ.Распределение;
			
			Если ТаблицаРаспределения.Количество() = 0 Тогда
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1: не указано распределение по счетам, субконто на %2.'"), Синоним, СтрокаТЗ.ПериодСтрокой);
				ПутьКРеквизитуФормы = "ТаблицаИстории";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,	ПутьКРеквизитуФормы, , Отказ);
				
			Иначе
				
				ПроверяемыеПоля = Новый Массив;
				ПроверяемыеПоля.Добавить(МетаданныеРегистра.Ресурсы.СпособОтраженияЗарплатыВБухучете);
				Если ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД") Тогда
					ПроверяемыеПоля.Добавить(МетаданныеРегистра.Ресурсы.ОтношениеКЕНВД);
				КонецЕсли;
				Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
					ПроверяемыеПоля.Добавить(МетаданныеРегистра.Ресурсы.СтатьяФинансирования);
				КонецЕсли;
				ПроверяемыеПоля.Добавить(МетаданныеРегистра.Ресурсы.ДоляРаспределения);
				
				Для каждого Запись Из ТаблицаРаспределения Цикл
					
					Для каждого ОписаниеПоля Из ПроверяемыеПоля Цикл
						
						Если Не ЗначениеЗаполнено(Запись[ОписаниеПоля.Имя]) Тогда   
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1: не указано распределение по счетам, субконто на %2.'"), Синоним, СтрокаТЗ.ПериодСтрокой);
							ПутьКРеквизитуФормы = "БухучетЗарплатыПодразделенийРаспределение";
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,	ПутьКРеквизитуФормы, , Отказ);
						КонецЕсли;	
						
					КонецЦикла;	
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Отказ;

КонецФункции

&НаКлиенте
Процедура ТаблицаИсторииПериодПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(Элементы.ТаблицаИстории.ТекущиеДанные, "Период", "ПериодСтрокой", Модифицированность);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, Элементы.ТаблицаИстории.ТекущиеДанные, "Период", "ПериодСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(Элементы.ТаблицаИстории.ТекущиеДанные, "Период", "ПериодСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			НовыйПериод = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
			Если ТаблицаИстории.Количество() > 1 Тогда
				ПоследнийПериод = ТаблицаИстории.Получить(ТаблицаИстории.Количество() - 2).Период;
			Иначе
				ПоследнийПериод = '00010101000000';
			КонецЕсли; 
			Если НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = ДобавитьМесяц(ПоследнийПериод, 1);
			КонецЕсли; 
			Элемент.ТекущиеДанные.Период = НовыйПериод;
			ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Элемент.ТекущиеДанные, "Период", "ПериодСтрокой");
			
			Элемент.ТекущиеДанные.Распределение = НовыйФиксированныйМассивРаспределение();
			Элемент.ТекущиеДанные.КомандаРедактированияРаспределения = НСтр("ru = 'Не заполнено'");
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НовыйФиксированныйМассивРаспределение()

	Возврат ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(НоваяТаблицаРаспределения());

КонецФункции

&НаКлиенте
Процедура ТаблицаИсторииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаИстории.Сортировать("Период");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НЕ ОтменаРедактирования Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
				СообщениеОбОшибке = НСтр("ru = 'Необходимо указать месяц, с которого будет действовать настройка бухучета зарплаты'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке,,"ТаблицаИстории.Период", , Отказ);
			Иначе
				НайденныеСтроки = ТаблицаИстории.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
						СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанным месяцем начала действия настройки'");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке,,"ТаблицаИстории.Период", , Отказ);
						Прервать;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если СтрНайти(Поле.Имя, "КомандаРедактированияРаспределения") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ТаблицаИстории.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ТаблицаРаспределения = ТекущиеДанные.Распределение;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	ПараметрыОткрытия.Вставить("Период", ТекущиеДанные.Период);
	ПараметрыОткрытия.Вставить("ТаблицаРаспределения", ТаблицаРаспределения);
	ОткрытьФорму("РегистрСведений.БухучетЗарплатыПодразделений.Форма.РедактированиеНастройкиРаспределенияБухучета" , ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененоРаспределениеБухучетЗарплаты" И Источник = ЭтаФорма Тогда
		
		Отбор = Новый Структура("Период", Параметр.Период);
		НайденныеСтроки = ТаблицаИстории.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество()>0 Тогда
			НайденныеСтроки[0].Распределение = Параметр.ТаблицаРаспределения;
			НайденныеСтроки[0].КомандаРедактированияРаспределения = ПредставлениеРаспределения(НайденныеСтроки[0].Распределение);
		КонецЕсли;	
		
	КонецЕсли;
	
	
КонецПроцедуры



