#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьЦелевоеПодразделение(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ПланОбученияРазвитияСотрудники.Ссылка КАК Регистратор,
		|	ПланОбученияРазвитияСотрудники.Ссылка.Подразделение КАК Подразделение,
		|	ПланОбученияРазвитияМероприятия.Мероприятие КАК Мероприятие,
		|	ПланОбученияРазвитияМероприятия.ДатаНачала КАК ДатаНачала,
		|	ПланОбученияРазвитияМероприятия.ДатаОкончания КАК ДатаОкончания,
		|	ПланОбученияРазвитияСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПланОбученияРазвитияМероприятия.КоличествоУчебныхЧасов КАК КоличествоУчебныхЧасов,
		|	ПланОбученияРазвитияСотрудники.СуммаНаСотрудника КАК СуммаРасходов,
		|	ПланОбученияРазвитияМероприятия.Подразделение КАК ЦелевоеПодразделение,
		|	ПланОбученияРазвитияСотрудники.Сотрудник КАК Сотрудник,
		|	ПланОбученияРазвитияСотрудники.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ПланОбученияРазвития.Сотрудники КАК ПланОбученияРазвитияСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПланОбученияРазвития.Мероприятия КАК ПланОбученияРазвитияМероприятия
		|		ПО ПланОбученияРазвитияСотрудники.Ссылка = ПланОбученияРазвитияМероприятия.Ссылка
		|			И ПланОбученияРазвитияСотрудники.НомерСтрокиМероприятия = ПланОбученияРазвитияМероприятия.НомерСтрокиМероприятия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДокументы.Регистратор КАК Регистратор,
		|	ВТДокументы.Подразделение КАК Подразделение,
		|	ВТДокументы.Мероприятие КАК Мероприятие,
		|	ВТДокументы.ДатаНачала КАК ДатаНачала,
		|	ВТДокументы.ДатаОкончания КАК ДатаОкончания,
		|	ВТДокументы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТДокументы.КоличествоУчебныхЧасов КАК КоличествоУчебныхЧасов,
		|	ВТДокументы.СуммаРасходов КАК СуммаРасходов,
		|	ВТДокументы.ЦелевоеПодразделение КАК ЦелевоеПодразделение,
		|	ВТДокументы.Сотрудник КАК Сотрудник,
		|	ВТДокументы.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ВТДокументы КАК ВТДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПланОбученияСотрудников КАК ПланОбученияСотрудников
		|		ПО ВТДокументы.Регистратор = ПланОбученияСотрудников.Регистратор
		|			И ВТДокументы.НомерСтроки = ПланОбученияСотрудников.НомерСтроки
		|			И ВТДокументы.ЦелевоеПодразделение <> ПланОбученияСотрудников.ЦелевоеПодразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДокументы";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей = РегистрыСведений.ПланОбученияСотрудников.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		КонецЦикла;
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Выборка.Количество() = 0);

КонецПроцедуры

#КонецОбласти

#КонецЕсли
