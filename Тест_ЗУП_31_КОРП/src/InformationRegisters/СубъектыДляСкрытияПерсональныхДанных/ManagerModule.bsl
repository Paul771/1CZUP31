#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает существующие настройки скрытия субъектов.
//
// Параметры:
//	Субъекты - Массив, ОпределяемыйТип.СубъектПерсональныхДанных - ссылка или массив ссылок на субъекты.
//
// Возвращаемое значение:
//     Соответствие - со свойствами:
//      * Ключ     - ОпределяемыйТип.СубъектПерсональныхДанных - субъект.
//      * Значение - Структура - структура настроек. Описание см. НастройкиСкрытияПоУмолчанию.
//
Функция Прочитать(Знач Субъекты) Экспорт
	
	Если Не ЗначениеЗаполнено(Субъекты) Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	Если ТипЗнч(Субъекты) <> Тип("Массив") Тогда
		Субъекты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Субъекты);
	КонецЕсли;

	НастройкиСубъектов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Субъекты", Субъекты);

	Запрос.Текст = "ВЫБРАТЬ
	|	СубъектыДляСкрытияПерсональныхДанных.ДатаСкрытия КАК ДатаСкрытия,
	|	СубъектыДляСкрытияПерсональныхДанных.Состояние КАК Состояние,
	|	СубъектыДляСкрытияПерсональныхДанных.ПричинаОтменыСкрытия КАК ПричинаОтменыСкрытия,
	|	СубъектыДляСкрытияПерсональныхДанных.Субъект КАК Субъект
	|ИЗ
	|	РегистрСведений.СубъектыДляСкрытияПерсональныхДанных КАК СубъектыДляСкрытияПерсональныхДанных
	|ГДЕ
	|	СубъектыДляСкрытияПерсональныхДанных.Субъект В (&Субъекты)";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			НастройкиСкрытия = НастройкиСкрытияПоУмолчанию();
			ЗаполнитьЗначенияСвойств(НастройкиСкрытия, Выборка);
			НастройкиСубъектов.Вставить(Выборка.Субъект, НастройкиСкрытия);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат НастройкиСубъектов;
	
КонецФункции

// Записывает настройки скрытия субъектов.
//
// Параметры:
//	Субъекты - Массив, ОпределяемыйТип.СубъектПерсональныхДанных - ссылка или массив ссылок на субъекты.
//  НастройкиСкрытия - Структура - структура настроек. Описание см. НастройкиСкрытияПоУмолчанию.
//
Процедура Записать(Знач Субъекты, НастройкиСкрытия = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Субъекты) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкиСкрытия) Тогда
		НастройкиСкрытия = НастройкиСкрытияПоУмолчанию();
	КонецЕсли;
	
	Если ТипЗнч(Субъекты) <> Тип("Массив") Тогда
		Субъекты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Субъекты);
	КонецЕсли;
	
	НаборЗаписей = СоздатьНаборЗаписей();

	Для Каждого Субъект Из Субъекты Цикл
		
		НаборЗаписей.Отбор.Субъект.Установить(Субъект);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Субъект = Субъект;
		ЗаполнитьЗначенияСвойств(НоваяЗапись, НастройкиСкрытия);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей, Истина, Истина);
		НаборЗаписей.Очистить();
		
	КонецЦикла;
	
КонецПроцедуры

// Настройки скрытия по умолчанию.
//
// Возвращаемое значение:
//     Структура - со свойствами:
//      * ДатаСкрытия - ОпределяемыйТип.СубъектПерсональныхДанных - плановая или фактическая дата скрытия.
//      * Состояние - ПеречислениеСсылка.СостоянияСубъектовДляСкрытия - определяет требуемое состояние.
//      * ПричинаОтменыСкрытия - Строка - описание причины отказа в скрытии.
//
Функция НастройкиСкрытияПоУмолчанию() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДнейДоСкрытия = Константы.ДнейДоСкрытияПерсональныхДанныхСубъектов.Получить();
	ДатаСкрытия = НачалоДня(ТекущаяДатаСеанса()) + ДнейДоСкрытия * 86400; 
	
	НастройкиСкрытия = Новый Структура;
	НастройкиСкрытия.Вставить("ДатаСкрытия", ДатаСкрытия);
	НастройкиСкрытия.Вставить("Состояние", Перечисления.СостоянияСубъектовДляСкрытия.ГотовКСкрытию);
	НастройкиСкрытия.Вставить("ПричинаОтменыСкрытия", "");
	
	Возврат НастройкиСкрытия;
	
КонецФункции

#КонецОбласти

#КонецЕсли

