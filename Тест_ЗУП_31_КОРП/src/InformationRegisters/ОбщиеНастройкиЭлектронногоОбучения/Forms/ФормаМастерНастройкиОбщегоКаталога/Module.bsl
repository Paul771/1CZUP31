
#Область ОбработчикиСобытийФормы

// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыКлиента = СтандартныеПодсистемыСервер.ПараметрыКлиентаНаСервере();
	
	СтрокаСоединенияИнформационнойБазы = ПараметрыКлиента.Получить("СтрокаСоединенияИнформационнойБазы");
	ЭтоВебКлиент = ПараметрыКлиента.Получить("ЭтоВебКлиент");
	
	Если ЭтоВебКлиент = Истина Тогда		
		Элементы.ГруппаТонкийКлиент.Видимость = Ложь;		
	КонецЕсли;
	
	АдресОбщегоКаталогаНаВебСервере = РегистрыСведений.ОбщиеНастройкиЭлектронногоОбучения.Значение("АдресОбщегоКаталогаНаВебСервере");
	ПутьКОбщемуКаталогуНаВебСервере = РегистрыСведений.ОбщиеНастройкиЭлектронногоОбучения.Значение("ПутьКОбщемуКаталогуНаВебСервере");
	
	РучнаяНастройка = Истина; // Реквизит
	
	Если НЕ ЗначениеЗаполнено(АдресОбщегоКаталогаНаВебСервере) И ЭтоВебКлиент Тогда		
		
		// Автоматически находим адрес и путь к общему каталогу
		
		СтрокаСоединенияСтруктура = ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.СтруктураСтрокиПараметров(СтрокаСоединенияИнформационнойБазы,,";");
		
		Если СтрокаСоединенияСтруктура.Свойство("ws") Тогда
			
			СтрокаСоединенияСтруктура.ws = СтрЗаменить(СтрокаСоединенияСтруктура.ws, """", "");
			
			РазделенныйАдрес = СтрРазделить(СтрокаСоединенияСтруктура.ws, "/", Истина);
			
			Если РазделенныйАдрес.Количество() > 3 Тогда				
				
				Сч = 1;
				
				Для каждого ЭлементАдреса Из РазделенныйАдрес Цикл
					
					Если Сч = 4 Тогда
						Прервать;
					КонецЕсли;
					
					АдресОбщегоКаталогаНаВебСервере = АдресОбщегоКаталогаНаВебСервере + ЭлементАдреса + "/";
					
					Сч = Сч + 1;
					
				КонецЦикла;
			
				АдресОбщегоКаталогаНаВебСервере = АдресОбщегоКаталогаНаВебСервере + "v8sdo";
			
			КонецЕсли;
			
		КонецЕсли;			
		
		Если НЕ ЗначениеЗаполнено(ПутьКОбщемуКаталогуНаВебСервере)
			И ЗначениеЗаполнено(АдресОбщегоКаталогаНаВебСервере)
			И НЕ ОбщегоНазначения.ЭтоLinuxСервер() Тогда
			
			КореньСервера = Новый Файл("C:\inetpub\wwwroot");
			
			Если КореньСервера.Существует() И КореньСервера.ЭтоКаталог() Тогда
				ПутьКОбщемуКаталогуНаВебСервере = "C:\inetpub\wwwroot\v8sdo";
				РучнаяНастройка = Ложь; // Удалось указать путь автоматически
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ДекорацияРучнойКаталог.Видимость = РучнаяНастройка;
	Элементы.ДекорацияАвтоКаталог.Видимость = НЕ РучнаяНастройка;
	
	ЗагрузчикОбластиПросмотра = Документы.ИзучениеЭлектронногоКурса.ПолучитьМакет("ЗагрузчикОбластиПросмотра").ПолучитьТекст();
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОбластьПросмотраДокументСформирован(Элемент)
	
	ЭлектронноеОбучениеСлужебныйКлиент.ОпределитьБраузер(ЭтотОбъект, Элемент.Документ);	
	
	Если НЕ ЗначениеЗаполнено(Браузер) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоТестированиеОбластиПросмотра И ЭлектронноеОбучениеСлужебныйКлиент.ИмяДокумента(Элемент.Документ, Браузер) = "loader" Тогда

		// Выполняем скрипт test() в HTML документе, который тестирует область просмотра
		// Если все хорошо, то функция вызовет событие ПриНажатии.
		ЭлектронноеОбучениеСлужебныйКлиент.ВыполнитьСкрипт(Элемент.Документ, "test()", Браузер);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьПросмотраПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если ЭтоТестированиеОбластиПросмотра Тогда
		
		ЭтоТестированиеОбластиПросмотра = Ложь;
		
		Попытка
			ПроверкаВыполнена = ?(ДанныеСобытия.Element.value = "4002580234", Истина, Ложь);
		Исключение
			ПроверкаВыполнена = Ложь;
		КонецПопытки;				
		
		ДокументHTMLДляПоказа = "<html><body style=""color: %2; font-family: Arial"">%1</body></html>";
		
		Если ПроверкаВыполнена Тогда			
			
			ТекстСообщения = НСтр("ru = 'Каталог успешно создан и протестирован. Завершите работу мастера, чтобы сохранить настройку.'");
			
			ЦветСообщения = "green";
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Возникла ошибка при отображении файла. Поверьте адрес общего каталога. '");
			
			#Если ВебКлиент Тогда
				ТекстСообщения = ТекстСообщения + Символы.ПС
				+ НСтр("ru = 'Убедитесь, что адрес хоста каталога совпадает с адресом хоста публикации информационной базы.'");
			#КонецЕсли
			
			ЦветСообщения = "red";
			
		КонецЕсли;			
		
		ОбластьПросмотра = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументHTMLДляПоказа, ТекстСообщения, ЦветСообщения);
		
	КонецЕсли;
		
	
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиКомандФормы

// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Этап1(Команда)
	Элементы.СтраницыМастера.ТекущаяСтраница = Элементы.СтраницаВведение;
КонецПроцедуры

&НаКлиенте
Процедура Этап2(Команда)
	Элементы.СтраницыМастера.ТекущаяСтраница = Элементы.СтраницаСозданиеКаталога;
КонецПроцедуры

&НаКлиенте
Процедура Этап3(Команда)
	
	Если НЕ ЗначениеЗаполнено(АдресОбщегоКаталогаНаВебСервере) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Адрес общего каталога не задан'"));
		Возврат;
	КонецЕсли;
	
	ОбластьПросмотра   = "";
	ОбщийКаталогСоздан = СформироватьОбщийКаталог();
	
	Если ОбщийКаталогСоздан = Истина Тогда
	
		Элементы.СтраницыМастера.ТекущаяСтраница = Элементы.СтраницаЗавершение;
		
		ЭтоТестированиеОбластиПросмотра = Истина;
		ПроверкаВыполнена = Ложь;
		ОбластьПросмотра = СтрЗаменить(ЗагрузчикОбластиПросмотра, "{{АдресКаталогаРесурсов}}", АдресКаталогаРесурсов + "ping.html");
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура Завершить(Команда)
	
	НастройкаЗаписана = ЗаписатьНастройку();

	Если НастройкаЗаписана = Истина Тогда
		Оповестить("ОбщиеНастройкиЭлектронногоОбученияОбновлены");
		Закрыть();
	КонецЕсли;

КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция СформироватьОбщийКаталог()
	
	// Делаем базовые проверки
	
	Если НЕ ЗначениеЗаполнено(ПутьКОбщемуКаталогуНаВебСервере) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите путь к каталогу'"));
		Возврат Ложь;
		
	КонецЕсли;
	
	// Создаем авто-каталог
	
	Если НЕ РучнаяНастройка Тогда
		
		Попытка
			
			СоздатьКаталог(ПутьКОбщемуКаталогуНаВебСервере);
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка создания каталога. Вероятно, сервер не имеет прав на запись.'"));
			ЗаписьЖурналаРегистрации(ЭлектронноеОбучениеСлужебныйКлиентСервер.СобытиеЖурналаРегистрацииЭлектронныхКурсов(), УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		КонецПопытки;		
		
	КонецЕсли;	
	
	// Проверяем, можно ли писать в этот каталог
	
	ПутьКОбщемуКаталогуНаВебСервере = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьКОбщемуКаталогуНаВебСервере);
	
	ОбщийКаталог = Новый Файл(ПутьКОбщемуКаталогуНаВебСервере);
	
	Если ОбщийКаталог.Существует() И ОбщийКаталог.ЭтоКаталог() Тогда
		
		ИмяТестовогоФайла = ПутьКОбщемуКаталогуНаВебСервере + "ping.txt";
		ТекстТестовогоФайла = "4002580234";
		
		НовыйПустойФайл = Новый ТекстовыйДокумент;
		НовыйПустойФайл.УстановитьТекст(ТекстТестовогоФайла);
		
		Попытка
			
			НовыйПустойФайл.Записать(ИмяТестовогоФайла);
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка записи в каталог. Вероятно, сервер не имеет прав на запись в указанный каталог.'"));
			ЗаписьЖурналаРегистрации(ЭлектронноеОбучениеСлужебныйКлиентСервер.СобытиеЖурналаРегистрацииЭлектронныхКурсов(), УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат Ложь;
			
		КонецПопытки;
		
		НовыйПустойФайл = Новый ТекстовыйДокумент;
		
		Попытка
			
			НовыйПустойФайл.Прочитать(ИмяТестовогоФайла);
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка чтения файла из каталога. Вероятно, сервер не имеет прав на чтение из каталога.'"));
			ЗаписьЖурналаРегистрации(ЭлектронноеОбучениеСлужебныйКлиентСервер.СобытиеЖурналаРегистрацииЭлектронныхКурсов(), УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат Ложь;			
			
		КонецПопытки;		
		
		Если НовыйПустойФайл.ПолучитьТекст() <> ТекстТестовогоФайла Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Тестовый файл поврежден.'"));
			Возврат Ложь;
		КонецЕсли;
		
		Попытка
			УдалитьФайлы(ИмяТестовогоФайла);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка удаления файла. Вероятно, сервер не имеет прав на удаление файлов в каталоге.'"));
			ЗаписьЖурналаРегистрации(ЭлектронноеОбучениеСлужебныйКлиентСервер.СобытиеЖурналаРегистрацииЭлектронныхКурсов(), УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат Ложь;			
		КонецПопытки;		
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Каталог по указанному пути не найден.'"));
		Возврат Ложь;
		
	КонецЕсли;	
	
	// Формируем каталог ресурсов
	
	ПутьККаталогуРесурсов = ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.ПутьККаталогуЭлектронныхКурсов(ПутьКОбщемуКаталогуНаВебСервере);
	АдресКаталогаРесурсов = ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.ПутьККаталогуЭлектронныхКурсов(АдресОбщегоКаталогаНаВебСервере);
	
	ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.ВыполнитьНачальноеЗаполнениеКаталогаЭлектронныхКурсов(ПутьККаталогуРесурсов);
	
	ФайлPing = РегистрыСведений.ОбщиеНастройкиЭлектронногоОбучения.ПолучитьМакет("ТестированиеОбластиПросмотра");
	ФайлPing.Записать(ПутьККаталогуРесурсов + "ping.html");		
	
	Возврат Истина;	
	
КонецФункции

&НаСервере
Функция ЗаписатьНастройку()
	
	РегистрыСведений.ОбщиеНастройкиЭлектронногоОбучения.Сохранить("ПутьКОбщемуКаталогуНаВебСервере", ПутьКОбщемуКаталогуНаВебСервере);
	РегистрыСведений.ОбщиеНастройкиЭлектронногоОбучения.Сохранить("АдресОбщегоКаталогаНаВебСервере", АдресОбщегоКаталогаНаВебСервере);
	
	Возврат Истина;
	
КонецФункции


#КонецОбласти

