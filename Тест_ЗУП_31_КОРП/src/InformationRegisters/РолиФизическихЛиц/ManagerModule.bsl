#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьРольФизическогоЛица(КоллекцияФизическихЛиц, Организация, Роль, Установить = Истина) Экспорт
	
	Если ТипЗнч(КоллекцияФизическихЛиц) <> Тип("Массив") Тогда
		ФизическиеЛица = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КоллекцияФизическихЛиц);
	Иначе
		ФизическиеЛица = КоллекцияФизическихЛиц;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РолиФизическихЛиц КАК РолиФизическихЛиц
		|		ПО РолиФизическихЛиц.ФизическоеЛицо = ФизическиеЛица.Ссылка
		|			И РолиФизическихЛиц.Организация = &Организация
		|			И РолиФизическихЛиц.Роль = &Роль
		|ГДЕ
		|	ФизическиеЛица.Ссылка В (&ФизическиеЛица)
		|	И ВЫБОР
		|			КОГДА &Установить
		|				ТОГДА РолиФизическихЛиц.ФизическоеЛицо ЕСТЬ NULL 
		|			ИНАЧЕ НЕ РолиФизическихЛиц.ФизическоеЛицо ЕСТЬ NULL 
		|		КОНЕЦ";
		
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Роль", Роль);
	Запрос.УстановитьПараметр("Установить", Установить);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Набор = РегистрыСведений.РолиФизическихЛиц.СоздатьНаборЗаписей();
		Набор.Отбор.ФизическоеЛицо.Установить(Выборка.Ссылка);
		Набор.Отбор.Организация.Установить(Организация);
		Набор.Отбор.Роль.Установить(Роль);
		
		Если Установить Тогда
			Запись = Набор.Добавить();
			Запись.ФизическоеЛицо = Выборка.Ссылка;
			Запись.Организация = Организация;
			Запись.Роль = Роль;
		КонецЕсли; 
		
		Набор.Записать();
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура УдалитьРольФизическогоЛица(ФизическоеЛицо, Организация, РольФизическогоЛица) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Набор = РегистрыСведений.РолиФизическихЛиц.СоздатьНаборЗаписей();
	
	Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	Набор.Отбор.Организация.Установить(Организация);
	Набор.Отбор.Роль.Установить(РольФизическогоЛица);
	
	Набор.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОбновитьРолиФизическогоЛица(ФизическоеЛицо, ОписаниеРолей) Экспорт
	
	ТаблицаНабораФормы = РегистрыСведений.РолиФизическихЛиц.СоздатьНаборЗаписей();
	ТаблицаНабораФормы.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	
	Для каждого СтруктураРоли Из ОписаниеРолей Цикл
		НоваяСтрокаРоли = ТаблицаНабораФормы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаРоли, СтруктураРоли);
		НоваяСтрокаРоли.ФизическоеЛицо = ФизическоеЛицо;
	КонецЦикла;
	
	Набор = РегистрыСведений.РолиФизическихЛиц.СоздатьНаборЗаписей();
	Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	Набор.Прочитать();
	
	Если НЕ ОбщегоНазначения.КоллекцииИдентичны(Набор.Выгрузить(), ТаблицаНабораФормы) Тогда
		
		Набор.Загрузить(ТаблицаНабораФормы.Выгрузить());
		Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры


#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьРольСотрудникФизическихЛиц() Экспорт
	
	Запрос = Новый запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТИзмеренияДаты";
	
	Запрос.Выполнить();
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"КадроваяИсторияСотрудников",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТИзмеренияДаты"));
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КадроваяИсторияСотрудников.ФизическоеЛицо,
		|	КадроваяИсторияСотрудников.Организация
		|ИЗ
		|	ВТКадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РолиФизическихЛиц КАК РолиФизическихЛиц
		|		ПО КадроваяИсторияСотрудников.ФизическоеЛицо = РолиФизическихЛиц.ФизическоеЛицо
		|			И КадроваяИсторияСотрудников.Организация = РолиФизическихЛиц.Организация
		|ГДЕ
		|	РолиФизическихЛиц.ФизическоеЛицо ЕСТЬ NULL ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.РолиФизическихЛиц.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
		НаборЗаписей.Отбор.Роль.Установить(Перечисления.РолиФизическихЛиц.Сотрудник);
		
		Запись = НаборЗаписей.Добавить();
		Запись.ФизическоеЛицо = Выборка.ФизическоеЛицо;
		Запись.Организация = Выборка.Организация;
		Запись.Роль = Перечисления.РолиФизическихЛиц.Сотрудник;
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьИдентификаторыЗаписи() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдентификаторЗаписи", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РолиФизическихЛиц.ИдентификаторЗаписи
		|ИЗ
		|	РегистрСведений.РолиФизическихЛиц КАК РолиФизическихЛиц
		|ГДЕ
		|	РолиФизическихЛиц.ИдентификаторЗаписи = &ИдентификаторЗаписи";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		НаборЗаписей = РегистрыСведений.РолиФизическихЛиц.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		
		Для каждого Запись Из НаборЗаписей Цикл
			Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
		КонецЦикла;
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#КонецЕсли
