#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальногоЗаполненияИОбновленияИБ

Процедура ОбновитьРеквизитУченаяСтепень(ПараметрыОбновления = НеОпределено) Экспорт
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	УченыеСтепени.Ссылка КАК УченаяСтепень,
	|	УченыеСтепени.ОтрасльНауки,
	|	УченыеСтепени.ОтрасльНауки.Наименование,
	|	УченыеСтепени.Родитель КАК ОбщаяУченаяСтепень
	|ПОМЕСТИТЬ ВТУченыеСтепениПоОтраслям
	|ИЗ
	|	Справочник.УченыеСтепени КАК УченыеСтепени
	|ГДЕ
	|	УченыеСтепени.ОтрасльНауки <> ЗНАЧЕНИЕ(Справочник.ОтраслиНауки.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	УченыеСтепениФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	УченыеСтепениФизическихЛиц.НомерПоПорядку КАК НомерПоПорядку,
	|	УченыеСтепениПоОтраслям.УченаяСтепень КАК УченаяСтепень
	|ИЗ
	|	РегистрСведений.УченыеСтепениФизическихЛиц КАК УченыеСтепениФизическихЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УченыеСтепени КАК УченыеСтепени
	|		ПО УченыеСтепениФизическихЛиц.УченаяСтепень = УченыеСтепени.Ссылка
	|			И (УченыеСтепени.ОтрасльНауки = ЗНАЧЕНИЕ(Справочник.ОтраслиНауки.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУченыеСтепениПоОтраслям КАК УченыеСтепениПоОтраслям
	|		ПО ((ВЫРАЗИТЬ(УченыеСтепениФизическихЛиц.УдалитьОтрасльНауки КАК СТРОКА(30))) = УченыеСтепениПоОтраслям.ОтрасльНаукиНаименование)
	|			И (УченыеСтепени.Ссылка = УченыеСтепениПоОтраслям.ОбщаяУченаяСтепень)
	|ГДЕ
	|	НЕ УченыеСтепениПоОтраслям.УченаяСтепень ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	НомерПоПорядку";
	
	Если ПараметрыОбновления = НеОпределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 1000", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	Иначе
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.УченыеСтепениФизическихЛиц", "ФизическоеЛицо", Выборка.ФизическоеЛицо) Тогда
				Продолжить;
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.УченыеСтепениФизическихЛиц.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
			
			Пока Выборка.СледующийПоЗначениюПоля("НомерПоПорядку") Цикл
				
				НаборЗаписей.Отбор.НомерПоПорядку.Установить(Выборка.НомерПоПорядку);
				НаборЗаписей.Прочитать();
				
				НаборЗаписей[0].УченаяСтепень = Выборка.УченаяСтепень;
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ПредставлениеУченойСтепениФизическогоЛица(ФизическоеЛицоСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УченыеСтепениФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо1,
		|	УченыеСтепениФизическихЛиц.НомерПоПорядку,
		|	УченыеСтепениФизическихЛиц.УченаяСтепень,
		|	УченыеСтепениФизическихЛиц.ДатаПрисужденияУченойСтепени,
		|	УченыеСтепениФизическихЛиц.ДиссертационныйСовет,
		|	УченыеСтепениФизическихЛиц.ДипломСерияНомер,
		|	УченыеСтепениФизическихЛиц.ДипломВыданОрганизация
		|ИЗ
		|	РегистрСведений.УченыеСтепениФизическихЛиц КАК УченыеСтепениФизическихЛиц
		|ГДЕ
		|	УченыеСтепениФизическихЛиц.ФизическоеЛицо = &ФизическоеЛицоСсылка";
		
	Запрос.УстановитьПараметр("ФизическоеЛицоСсылка", ФизическоеЛицоСсылка);
	
	Возврат ПредставлениеУченойСтепениПоКоллекцииЗаписей(Запрос.Выполнить().Выгрузить());
	
КонецФункции

Функция ПредставлениеУченойСтепениПоКоллекцииЗаписей(НаборЗаписей) Экспорт
	
	ПредставлениеУченыеСтепени = "";
	
	ПоследняяУченаяСтепень = Неопределено;
	Для Каждого СтрокаУченыеСтепени Из НаборЗаписей Цикл
		Если ПоследняяУченаяСтепень = Неопределено ИЛИ ПоследняяУченаяСтепень.ДатаПрисужденияУченойСтепени < СтрокаУченыеСтепени.ДатаПрисужденияУченойСтепени Тогда
			ПоследняяУченаяСтепень = СтрокаУченыеСтепени;
		КонецЕсли; 
	КонецЦикла;
	
	Если ПоследняяУченаяСтепень <> Неопределено Тогда
		ПредставлениеУченыеСтепени = ?(ЗначениеЗаполнено(ПоследняяУченаяСтепень.УченаяСтепень), Строка(ПоследняяУченаяСтепень.УченаяСтепень), "");
		ПредставлениеУченыеСтепени = ПредставлениеУченыеСтепени + ?(ЗначениеЗаполнено(ПоследняяУченаяСтепень.ДатаПрисужденияУченойСтепени), ?(ПустаяСтрока(ПредставлениеУченыеСтепени), "", ", ") + Формат(ПоследняяУченаяСтепень.ДатаПрисужденияУченойСтепени, "ДЛФ=D"), "");
		ПредставлениеУченыеСтепени = ПредставлениеУченыеСтепени + ?(ЗначениеЗаполнено(ПоследняяУченаяСтепень.ДиссертационныйСовет), ?(ПустаяСтрока(ПредставлениеУченыеСтепени), "", ", ") + Строка(ПоследняяУченаяСтепень.ДиссертационныйСовет), "");
	КонецЕсли;
	
	Если ПустаяСтрока(ПредставлениеУченыеСтепени) Тогда
		ПредставлениеУченыеСтепени = НСтр("ru = 'Ученые степени не присуждались'");
	КонецЕсли; 
	
	Возврат ПредставлениеУченыеСтепени;
	
КонецФункции

#КонецОбласти

#КонецЕсли