#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ПеренестиПериодДействияПерерасчетовНаНачалоМесяца() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПерерасчетЗарплаты.Организация,
		|	ПерерасчетЗарплаты.Сотрудник,
		|	ВЫРАЗИТЬ(ПерерасчетЗарплаты.Сотрудник КАК Справочник.Сотрудники).ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПерерасчетЗарплаты.ПериодДействия,
		|	ПерерасчетЗарплаты.Основание,
		|	ПерерасчетЗарплаты.*
		|ИЗ
		|	РегистрСведений.ПерерасчетЗарплаты КАК ПерерасчетЗарплаты
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ПерерасчетЗарплаты.ПериодДействия, МЕСЯЦ) < ПерерасчетЗарплаты.ПериодДействия";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.ПерерасчетЗарплаты.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			НаборЗаписей.Отбор.Основание.Установить(Выборка.Основание);
			НаборЗаписей.Отбор.ПериодДействия.Установить(Выборка.ПериодДействия);
			
			НаборЗаписей.Записать();
			
			НаборЗаписей.Отбор.ПериодДействия.Установить(НачалоМесяца(Выборка.ПериодДействия));
			
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.ПериодДействия = НачалоМесяца(Выборка.ПериодДействия);
			
			НаборЗаписей.Записать();
			
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьДокументыНачисленияПерерасчетовЗарплаты() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПерерасчетЗарплаты.Организация,
		|	ПерерасчетЗарплаты.Сотрудник,
		|	ВЫРАЗИТЬ(ПерерасчетЗарплаты.Сотрудник КАК Справочник.Сотрудники).ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПерерасчетЗарплаты.ПериодДействия,
		|	ПерерасчетЗарплаты.Основание,
		|	НачисленияУдержанияПоСотрудникам.Регистратор КАК ДокументНачисления
		|ИЗ
		|	РегистрСведений.ПерерасчетЗарплаты КАК ПерерасчетЗарплаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|		ПО ПерерасчетЗарплаты.Организация = НачисленияУдержанияПоСотрудникам.Организация
		|			И ПерерасчетЗарплаты.Сотрудник = НачисленияУдержанияПоСотрудникам.Сотрудник
		|			И (ПерерасчетЗарплаты.ПериодДействия = НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ))
		|			И (НачисленияУдержанияПоСотрудникам.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
		|			И (ВЫРАЗИТЬ(НачисленияУдержанияПоСотрудникам.НачислениеУдержание КАК ПланВидовРасчета.Начисления).СпособВыполненияНачисления В (ЗНАЧЕНИЕ(Перечисление.СпособыВыполненияНачислений.ЕжемесячноПриОкончательномРасчете), ЗНАЧЕНИЕ(Перечисление.СпособыВыполненияНачислений.ВЗаданныхМесяцахПриОкончательномРасчете)))
		|ГДЕ
		|	ПерерасчетЗарплаты.ДокументНачисления = НЕОПРЕДЕЛЕНО";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.ПерерасчетЗарплаты.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			НаборЗаписей.Отбор.ПериодДействия.Установить(Выборка.ПериодДействия);
			НаборЗаписей.Отбор.ДокументНачисления.Установить(Неопределено);
			
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать();
			
			НаборЗаписей.Отбор.ДокументНачисления.Установить(Выборка.ДокументНачисления);
			
			Запись = НаборЗаписей.Добавить();
			Запись.Организация = Выборка.Организация;
			Запись.Сотрудник = Выборка.Сотрудник;
			Запись.ФизическоеЛицо = Выборка.ФизическоеЛицо;
			Запись.ПериодДействия = Выборка.ПериодДействия;
			Запись.ДокументНачисления = Выборка.ДокументНачисления;
			
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьФизическоеЛицоВРегистреПерерасчетЗарплаты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПерерасчетЗарплаты.Организация,
		|	ПерерасчетЗарплаты.Сотрудник,
		|	ВЫРАЗИТЬ(ПерерасчетЗарплаты.Сотрудник КАК Справочник.Сотрудники).ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПерерасчетЗарплаты.ПериодДействия,
		|	ПерерасчетЗарплаты.Основание,
		|	ПерерасчетЗарплаты.ДокументНачисления
		|ИЗ
		|	РегистрСведений.ПерерасчетЗарплаты КАК ПерерасчетЗарплаты
		|ГДЕ
		|	ПерерасчетЗарплаты.ФизическоеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.ПерерасчетЗарплаты.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			НаборЗаписей.Отбор.ПериодДействия.Установить(Выборка.ПериодДействия);
			НаборЗаписей.Отбор.Основание.Установить(Выборка.Основание);
			НаборЗаписей.Отбор.ДокументНачисления.Установить(Выборка.ДокументНачисления);
			
			НаборЗаписей.Прочитать();
			Для каждого Запись Из НаборЗаписей Цикл
				Запись.ФизическоеЛицо = Выборка.ФизическоеЛицо;
			КонецЦикла;
			
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
