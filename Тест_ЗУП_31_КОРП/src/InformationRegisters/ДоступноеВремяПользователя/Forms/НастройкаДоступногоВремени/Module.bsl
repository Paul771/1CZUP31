#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	УстановитьПривилегированныйРежим(Истина);
	НастройкаДоступногоВремени = РегистрыСведений.ДоступноеВремяПользователя.СоздатьНаборЗаписей();
	НастройкаДоступногоВремени.Отбор.Пользователь.Установить(Пользователь);
	НастройкаДоступногоВремени.Прочитать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ДоступностьПользователя = РаботаСРабочимКалендарем.ПолучитьНастройкуДоступностиПользователя(Пользователь);
	
	Если ДоступностьПользователя <> Перечисления.ДоступностьПользователя.ДоступенПоРасписанию 
		И НастройкаДоступногоВремени.Количество() = 0 Тогда
		
		РаботаСРабочимКалендаремПереопределяемый.ПриЗаполненииДоступногоВремениПользователя(НастройкаДоступногоВремени);
		
	КонецЕсли;
	
	ТаблицаНастройкаДоступногоВремени = НастройкаДоступногоВремени.Выгрузить();
	ТаблицаНастройкаДоступногоВремени.Сортировать("ВремяНачала");
	ЗаполнитьРеквизитыФормыИзНастройкиДоступногоВремени(ТаблицаНастройкаДоступногоВремени);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПонедельникПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПонедельникВремяСтрокойПриИзменении(Элемент)
	
	СкорректироватьВремяСтрокой(ПонедельникВремяСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура ВторникПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВторникВремяСтрокойПриИзменении(Элемент)
	
	СкорректироватьВремяСтрокой(ВторникВремяСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура СредаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СредаВремяСтрокойПриИзменении(Элемент)
	
	СкорректироватьВремяСтрокой(СредаВремяСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧетвергПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЧетвергВремяСтрокойПриИзменении(Элемент)
	
	СкорректироватьВремяСтрокой(ЧетвергВремяСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура ПятницаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПятницаВремяСтрокойПриИзменении(Элемент)
	
	СкорректироватьВремяСтрокой(ПятницаВремяСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура СубботаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СубботаВремяСтрокойПриИзменении(Элемент)
	
	СкорректироватьВремяСтрокой(СубботаВремяСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура ВоскресеньеПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВоскресеньеВремяСтрокойПриИзменении(Элемент)
	
	СкорректироватьВремяСтрокой(ВоскресеньеВремяСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступностьПользователяПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	ЗаписатьНастройкиДоступногоВремениИзРеквизитовФормы();
	Оповестить("Запись_ДоступноеВремяПользователя");
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыФормыИзНастройкиДоступногоВремени(ТаблицаНастройкаДоступногоВремени)
	
	ПонедельникВремяСтрокой = ПолучитьВремяСтрокой(ТаблицаНастройкаДоступногоВремени, 1);
	Понедельник = ЗначениеЗаполнено(ПонедельникВремяСтрокой);
	
	ВторникВремяСтрокой = ПолучитьВремяСтрокой(ТаблицаНастройкаДоступногоВремени, 2);
	Вторник = ЗначениеЗаполнено(ВторникВремяСтрокой);
	
	СредаВремяСтрокой = ПолучитьВремяСтрокой(ТаблицаНастройкаДоступногоВремени, 3);
	Среда = ЗначениеЗаполнено(СредаВремяСтрокой);
	
	ЧетвергВремяСтрокой = ПолучитьВремяСтрокой(ТаблицаНастройкаДоступногоВремени, 4);
	Четверг = ЗначениеЗаполнено(ЧетвергВремяСтрокой);
	
	ПятницаВремяСтрокой = ПолучитьВремяСтрокой(ТаблицаНастройкаДоступногоВремени, 5);
	Пятница = ЗначениеЗаполнено(ПятницаВремяСтрокой);
	
	СубботаВремяСтрокой = ПолучитьВремяСтрокой(ТаблицаНастройкаДоступногоВремени, 6);
	Суббота = ЗначениеЗаполнено(СубботаВремяСтрокой);
	
	ВоскресеньеВремяСтрокой = ПолучитьВремяСтрокой(ТаблицаНастройкаДоступногоВремени, 7);
	Воскресенье = ЗначениеЗаполнено(ВоскресеньеВремяСтрокой);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиДоступногоВремениИзРеквизитовФормы()
	
	УстановитьНастройкуДоступностиПользователя =
		РаботаСРабочимКалендарем.УстановитьНастройкуДоступностиПользователя(
			Пользователь,
			ДоступностьПользователя);
	
	Если Пользователь = ПользователиКлиентСервер.ТекущийПользователь() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	НастройкаДоступногоВремени = РегистрыСведений.ДоступноеВремяПользователя.СоздатьНаборЗаписей();
	НастройкаДоступногоВремени.Отбор.Пользователь.Установить(Пользователь);
	
	ЗаполнитьНастройкуДняНедели(НастройкаДоступногоВремени, 1, Понедельник, ПонедельникВремяСтрокой);
	ЗаполнитьНастройкуДняНедели(НастройкаДоступногоВремени, 2, Вторник, ВторникВремяСтрокой);
	ЗаполнитьНастройкуДняНедели(НастройкаДоступногоВремени, 3, Среда, СредаВремяСтрокой);
	ЗаполнитьНастройкуДняНедели(НастройкаДоступногоВремени, 4, Четверг, ЧетвергВремяСтрокой);
	ЗаполнитьНастройкуДняНедели(НастройкаДоступногоВремени, 5, Пятница, ПятницаВремяСтрокой);
	ЗаполнитьНастройкуДняНедели(НастройкаДоступногоВремени, 6, Суббота, СубботаВремяСтрокой);
	ЗаполнитьНастройкуДняНедели(НастройкаДоступногоВремени, 7, Воскресенье, ВоскресеньеВремяСтрокой);
	
	НастройкаДоступногоВремени.Записать();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВремяСтрокой(ТаблицаНастройкаДоступногоВремени, НомерДняНедели)
	
	ВремяСтрокой = "";
	
	ПараметрыОтбора = Новый Структура("ДеньНедели", НомерДняНедели);
	ЭлементыНастройкиДняНедели = ТаблицаНастройкаДоступногоВремени.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого ЭлементНастройкиДняНедели Из ЭлементыНастройкиДняНедели Цикл
		ДобавитьПромежутокВремениКВремениСтрокой(
			ВремяСтрокой, ЭлементНастройкиДняНедели.ВремяНачала, ЭлементНастройкиДняНедели.ВремяОкончания);
	КонецЦикла;
	
	Возврат ВремяСтрокой;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНастройкуДняНедели(НастройкаДоступногоВремени, ДеньНедели, ДоступныйДень, Знач ВремяСтрокой)
	
	Если НЕ ДоступныйДень Тогда
		Возврат;
	КонецЕсли;
	
	Пока ЗначениеЗаполнено(ВремяСтрокой) Цикл
		
		Период = ПолучитьПериодИзСтроки(ВремяСтрокой);
		
		Если Период = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементНастройкиДоступногоВремени = НастройкаДоступногоВремени.Добавить();
		ЭлементНастройкиДоступногоВремени.Пользователь = Пользователь;
		ЭлементНастройкиДоступногоВремени.ДеньНедели = ДеньНедели;
		ЭлементНастройкиДоступногоВремени.ВремяНачала = Период.ВремяНачала;
		ЭлементНастройкиДоступногоВремени.ВремяОкончания = Период.ВремяОкончания;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьВремяИзСтроки(ВремяСтрокой)
	
	Время = Неопределено;
	
	ВремяСтрокой = СтрЗаменить(ВремяСтрокой, ":", "");
	ВремяСтрокой = СокрЛП(ВремяСтрокой);
	
	Если СтрДлина(ВремяСтрокой) = 4 Тогда
		Попытка
			Время = Дата("00010101" + ВремяСтрокой + "00");
		Исключение
			// Время, введенное строкой, могло быть некорректным
		КонецПопытки;
	ИначеЕсли СтрДлина(ВремяСтрокой) = 3 Тогда
		Попытка
			Время = Дата("000101010" + ВремяСтрокой + "00");
		Исключение
			// Время, введенное строкой, могло быть некорректным
		КонецПопытки;
	КонецЕсли;
	
	Возврат Время;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	
	ДоступенПоРасписанию = (ДоступностьПользователя 
		= ПредопределенноеЗначение("Перечисление.ДоступностьПользователя.ДоступенПоРасписанию"));
	
	Элементы.ГруппаСтолбецНастройки.Доступность = ДоступенПоРасписанию;
	
	Элементы.Понедельник.Доступность = ДоступенПоРасписанию;
	Элементы.Вторник.Доступность = ДоступенПоРасписанию;
	Элементы.Среда.Доступность = ДоступенПоРасписанию;
	Элементы.Четверг.Доступность = ДоступенПоРасписанию;
	Элементы.Пятница.Доступность = ДоступенПоРасписанию;
	Элементы.Суббота.Доступность = ДоступенПоРасписанию;
	Элементы.Воскресенье.Доступность = ДоступенПоРасписанию;
	
	Элементы.ПонедельникВремяСтрокой.Доступность = ДоступенПоРасписанию И Понедельник;
	Элементы.ВторникВремяСтрокой.Доступность = ДоступенПоРасписанию И Вторник;
	Элементы.СредаВремяСтрокой.Доступность = ДоступенПоРасписанию И Среда;
	Элементы.ЧетвергВремяСтрокой.Доступность = ДоступенПоРасписанию И Четверг;
	Элементы.ПятницаВремяСтрокой.Доступность = ДоступенПоРасписанию И Пятница;
	Элементы.СубботаВремяСтрокой.Доступность = ДоступенПоРасписанию И Суббота;
	Элементы.ВоскресеньеВремяСтрокой.Доступность = ДоступенПоРасписанию И Воскресенье;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьВремяСтрокой(ВремяСтрокой)
	
	СкорректированноеВремяСтрокой = "";
	
	Пока ЗначениеЗаполнено(ВремяСтрокой) Цикл
		
		Период = ПолучитьПериодИзСтроки(ВремяСтрокой);
		
		Если Период = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавитьПромежутокВремениКВремениСтрокой(
			СкорректированноеВремяСтрокой, Период.ВремяНачала, Период.ВремяОкончания);
		
	КонецЦикла;
	
	ВремяСтрокой = СкорректированноеВремяСтрокой;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПериодИзСтроки(ПериодСтрокой)
	
	Период = Новый Структура("ВремяНачала, ВремяОкончания");
	
	ПериодСтрокой = СокрЛП(ПериодСтрокой);
	
	ПозицияРазделителяЭлементовВремени = Найти(ПериодСтрокой, ",");
	Если ПозицияРазделителяЭлементовВремени > 0 Тогда
		ЭлементВремениСтрокой = Лев(ПериодСтрокой, ПозицияРазделителяЭлементовВремени - 1);
		ПериодСтрокой = Сред(ПериодСтрокой, ПозицияРазделителяЭлементовВремени + 1);
	Иначе
		ЭлементВремениСтрокой = ПериодСтрокой;
		ПериодСтрокой = "";
	КонецЕсли;
	
	ПозицияРазделителяНачалаИОкончания = Найти(ЭлементВремениСтрокой, "-");
	Если ПозицияРазделителяНачалаИОкончания = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	ВремяНачалаСтрокой = Лев(ЭлементВремениСтрокой, ПозицияРазделителяНачалаИОкончания - 1);
	ВремяОкончанияСтрокой = Сред(ЭлементВремениСтрокой, ПозицияРазделителяНачалаИОкончания + 1);
	
	Период.ВремяНачала = ПолучитьВремяИзСтроки(ВремяНачалаСтрокой);
	Период.ВремяОкончания = ПолучитьВремяИзСтроки(ВремяОкончанияСтрокой);
	Если Период.ВремяНачала = Неопределено ИЛИ Период.ВремяОкончания = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Период.ВремяОкончания = Дата("00010101000000") Тогда
		Период.ВремяОкончания = Дата("00010101235959");
	КонецЕсли;
	
	Возврат Период;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДобавитьПромежутокВремениКВремениСтрокой(ВремяСтрокой, ВремяНачала, ВремяОкончания)
	
	ПромежутокВремениСтрокой =
		РаботаСРабочимКалендаремКлиентСервер.ПолучитьПромежутокВремениСтрокой(ВремяНачала, ВремяОкончания);
	ИнтеграцияС1СДокументооборотКлиентСервер.ДобавитьЗначениеКСтрокеЧерезРазделитель(ВремяСтрокой, ", ", ПромежутокВремениСтрокой);
	
КонецФункции





#КонецОбласти
