#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьДанныеДляПодбораСотрудников(Сотрудники, ОтключитьБизнесЛогику = Ложь, ДополнительныеСвойства = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	Сотрудники.ГоловнойСотрудник КАК ГоловнойСотрудник
		|ПОМЕСТИТЬ ВТОбновляемыеСотрудники
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка В(&Сотрудники)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТОбновляемыеСотрудники КАК Сотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Сотрудники.Сотрудник КАК Сотрудник
		|ИЗ
		|	ВТСотрудники КАК Сотрудники";
	
	РезультатЗапросаПоСотрудникам = Запрос.Выполнить();
	
	Если РезультатЗапросаПоСотрудникам.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Не РезультатЗапросаПоСотрудникам.Пустой() Тогда
		
		ИмяВТКадроваяИсторияСотрудников = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТКадроваяИсторияСотрудников");
			
	Иначе
		ИмяВТКадроваяИсторияСотрудников = "ВТРегистрСведенийКадровыхДанных";
	КонецЕсли;
	
	Если Не РезультатЗапросаПоСотрудникам.Пустой() Тогда
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
			"КадроваяИсторияСотрудников",
			Запрос.МенеджерВременныхТаблиц,
			Истина,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
				"ВТСотрудники",
				"Сотрудник"),
			,
			ИмяВТКадроваяИсторияСотрудников);
		
	КонецЕсли; 
				
	Если Не РезультатЗапросаПоСотрудникам.Пустой() Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	РегистрСведений.Период КАК Период,
			|	РегистрСведений.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	РегистрСведений.Организация КАК Организация,
			|	РегистрСведений.Подразделение КАК Подразделение,
			|	РегистрСведений.Сотрудник КАК Сотрудник,
			|	РегистрСведений.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РегистрСведений.Должность КАК Должность,
			|	РегистрСведений.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
			|	РегистрСведений.ВидСобытия КАК ВидСобытия,
			|	РегистрСведений.КоличествоСтавок КАК КоличествоСтавок,
			|	РегистрСведений.ВидДоговора КАК ВидДоговора
			|ПОМЕСТИТЬ ВТРегистрСведенийКадровыхДанных
			|ИЗ
			|	ВТКадроваяИсторияСотрудников КАК РегистрСведений";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТКадроваяИсторияСотрудников", ИмяВТКадроваяИсторияСотрудников);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрСведений.Период КАК Период,
		|	РегистрСведений.Сотрудник КАК Сотрудник,
		|	РегистрСведений.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РегистрСведений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РегистрСведений.Организация КАК Организация,
		|	РегистрСведений.Подразделение КАК Подразделение,
		|	РегистрСведений.Должность КАК Должность,
		|	РегистрСведений.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	МИНИМУМ(ЕСТЬNULL(РегистрСведенийПоследующие.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК СледующийПериод
		|ПОМЕСТИТЬ ВТРегистрСведенийСПоследующимиПериодами
		|ИЗ
		|	ВТРегистрСведенийКадровыхДанных КАК РегистрСведений
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрСведенийКадровыхДанных КАК РегистрСведенийПоследующие
		|		ПО РегистрСведений.Сотрудник = РегистрСведенийПоследующие.Сотрудник
		|			И РегистрСведений.Период < РегистрСведенийПоследующие.Период
		|			И (ВЫБОР
		|				КОГДА РегистрСведенийПоследующие.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|					ТОГДА ИСТИНА
		|				КОГДА РегистрСведений.Подразделение <> РегистрСведенийПоследующие.Подразделение
		|					ТОГДА ИСТИНА
		|				КОГДА РегистрСведений.Должность <> РегистрСведенийПоследующие.Должность
		|					ТОГДА ИСТИНА
		|				КОГДА РегистрСведений.ДолжностьПоШтатномуРасписанию <> РегистрСведенийПоследующие.ДолжностьПоШтатномуРасписанию
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрСведений.Период,
		|	РегистрСведений.Сотрудник,
		|	РегистрСведений.ГоловнаяОрганизация,
		|	РегистрСведений.ФизическоеЛицо,
		|	РегистрСведений.Организация,
		|	РегистрСведений.Подразделение,
		|	РегистрСведений.Должность,
		|	РегистрСведений.ДолжностьПоШтатномуРасписанию
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрСведенийСПоследующимиПериодами.Сотрудник КАК Сотрудник,
		|	РегистрСведенийСПоследующимиПериодами.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РегистрСведенийСПоследующимиПериодами.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РегистрСведенийСПоследующимиПериодами.Организация КАК Организация,
		|	РегистрСведенийСПоследующимиПериодами.Подразделение КАК Подразделение,
		|	РегистрСведенийСПоследующимиПериодами.Должность КАК Должность,
		|	РегистрСведенийСПоследующимиПериодами.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	ВЫБОР
		|		КОГДА РегистрСведенийСПоследующимиПериодами.СледующийПериод = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(РегистрСведенийСПоследующимиПериодами.СледующийПериод, ДЕНЬ, -1)
		|	КОНЕЦ КАК ОкончаниеПериода,
		|	МИНИМУМ(РегистрСведенийСПоследующимиПериодами.Период) КАК НачалоПериода,
		|	МАКСИМУМ(РегистрСведенийСПоследующимиПериодами.Период) КАК ПериодПоследнейЗаписи
		|ПОМЕСТИТЬ ВТРегистрСведенийСПериодами
		|ИЗ
		|	ВТРегистрСведенийСПоследующимиПериодами КАК РегистрСведенийСПоследующимиПериодами
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрСведенийСПоследующимиПериодами.Сотрудник,
		|	РегистрСведенийСПоследующимиПериодами.ГоловнаяОрганизация,
		|	РегистрСведенийСПоследующимиПериодами.ФизическоеЛицо,
		|	РегистрСведенийСПоследующимиПериодами.Организация,
		|	РегистрСведенийСПоследующимиПериодами.Подразделение,
		|	РегистрСведенийСПоследующимиПериодами.Должность,
		|	РегистрСведенийСПоследующимиПериодами.ДолжностьПоШтатномуРасписанию,
		|	РегистрСведенийСПоследующимиПериодами.СледующийПериод
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ПериодПоследнейЗаписи,
		|	Подразделение,
		|	Должность,
		|	ДолжностьПоШтатномуРасписанию
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РегистрСведенийСПериодами.Сотрудник КАК Сотрудник,
		|	РегистрСведенийСПериодами.ОкончаниеПериода КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТРегистрСведенийСПериодами КАК РегистрСведенийСПериодами";
	
	Запрос.Выполнить();
	
	ОписательТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательТаблиц, Истина, "ТарифнаяСтавка,ФОТ,Надбавка,СпособРасчетаАванса,Аванс");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрСведенийСПериодами.НачалоПериода КАК Период,
		|	РегистрСведенийСПериодами.Сотрудник КАК Сотрудник,
		|	РегистрСведенийСПериодами.ГоловнаяОрганизация КАК Организация,
		|	РегистрСведенийСПериодами.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РегистрСведенийСПериодами.Организация КАК Филиал,
		|	РегистрСведенийСПериодами.Подразделение КАК Подразделение,
		|	РегистрСведенийСПериодами.Должность КАК Должность,
		|	РегистрСведенийСПериодами.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	РегистрСведенийСПериодами.ОкончаниеПериода КАК Окончание,
		|	РегистрСведенийПериодПоследнейЗаписи.ВидСобытия КАК ВидСобытия,
		|	РегистрСведенийПериодПоследнейЗаписи.КоличествоСтавок КАК КоличествоСтавок,
		|	РегистрСведенийПериодПоследнейЗаписи.ВидДоговора КАК ВидДоговора,
		|	КадровыеДанныеСотрудников.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	КадровыеДанныеСотрудников.ФОТ КАК ФОТ,
		|	КадровыеДанныеСотрудников.Надбавка КАК Надбавка,
		|	КадровыеДанныеСотрудников.СпособРасчетаАванса КАК СпособРасчетаАванса,
		|	КадровыеДанныеСотрудников.Аванс КАК Аванс
		|ПОМЕСТИТЬ ВТНаборыЗаписей
		|ИЗ
		|	ВТРегистрСведенийСПериодами КАК РегистрСведенийСПериодами
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрСведенийКадровыхДанных КАК РегистрСведенийПериодПоследнейЗаписи
		|		ПО РегистрСведенийСПериодами.Сотрудник = РегистрСведенийПериодПоследнейЗаписи.Сотрудник
		|			И РегистрСведенийСПериодами.ГоловнаяОрганизация = РегистрСведенийПериодПоследнейЗаписи.ГоловнаяОрганизация
		|			И РегистрСведенийСПериодами.ФизическоеЛицо = РегистрСведенийПериодПоследнейЗаписи.ФизическоеЛицо
		|			И РегистрСведенийСПериодами.Организация = РегистрСведенийПериодПоследнейЗаписи.Организация
		|			И РегистрСведенийСПериодами.Подразделение = РегистрСведенийПериодПоследнейЗаписи.Подразделение
		|			И РегистрСведенийСПериодами.ПериодПоследнейЗаписи = РегистрСведенийПериодПоследнейЗаписи.Период
		|			И РегистрСведенийСПериодами.Должность = РегистрСведенийПериодПоследнейЗаписи.Должность
		|			И РегистрСведенийСПериодами.ДолжностьПоШтатномуРасписанию = РегистрСведенийПериодПоследнейЗаписи.ДолжностьПоШтатномуРасписанию
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрСведенийКадровыхДанных КАК РегистрСведенийНачалоСобытия
		|		ПО РегистрСведенийСПериодами.Сотрудник = РегистрСведенийНачалоСобытия.Сотрудник
		|			И РегистрСведенийСПериодами.ГоловнаяОрганизация = РегистрСведенийНачалоСобытия.ГоловнаяОрганизация
		|			И РегистрСведенийСПериодами.ФизическоеЛицо = РегистрСведенийНачалоСобытия.ФизическоеЛицо
		|			И РегистрСведенийСПериодами.Организация = РегистрСведенийНачалоСобытия.Организация
		|			И РегистрСведенийСПериодами.Подразделение = РегистрСведенийНачалоСобытия.Подразделение
		|			И РегистрСведенийСПериодами.НачалоПериода = РегистрСведенийНачалоСобытия.Период
		|			И РегистрСведенийСПериодами.Должность = РегистрСведенийНачалоСобытия.Должность
		|			И РегистрСведенийСПериодами.ДолжностьПоШтатномуРасписанию = РегистрСведенийНачалоСобытия.ДолжностьПоШтатномуРасписанию
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО РегистрСведенийСПериодами.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
		|			И РегистрСведенийСПериодами.ОкончаниеПериода = КадровыеДанныеСотрудников.Период
		|ГДЕ
		|	РегистрСведенийНачалоСобытия.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДляПодбора.Начало КАК Начало,
		|	ДанныеДляПодбора.Организация КАК Организация,
		|	ДанныеДляПодбора.Филиал КАК Филиал,
		|	ДанныеДляПодбора.Подразделение КАК Подразделение,
		|	ДанныеДляПодбора.Сотрудник КАК Сотрудник,
		|	ДанныеДляПодбора.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеДляПодбора.Должность КАК Должность,
		|	ДанныеДляПодбора.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	ДанныеДляПодбора.ВидСобытия КАК ВидСобытия,
		|	ДанныеДляПодбора.КоличествоСтавок КАК КоличествоСтавок,
		|	ДанныеДляПодбора.ВидДоговора КАК ВидДоговора,
		|	ДанныеДляПодбора.Окончание КАК Окончание,
		|	ДанныеОбОплатеТрудаДляПодбора.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	ДанныеОбОплатеТрудаДляПодбора.ФОТ КАК ФОТ,
		|	ДанныеОбОплатеТрудаДляПодбора.Надбавка КАК Надбавка,
		|	ДанныеОбОплатеТрудаДляПодбора.СпособРасчетаАванса КАК СпособРасчетаАванса,
		|	ДанныеОбОплатеТрудаДляПодбора.Аванс КАК Аванс
		|ПОМЕСТИТЬ ВТДанныеДляПодбораСотрудников
		|ИЗ
		|	ВТОбновляемыеСотрудники КАК ОбновляемыеСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОбОплатеТрудаДляПодбораСотрудников КАК ДанныеОбОплатеТрудаДляПодбора
		|			ПО ДанныеДляПодбора.Сотрудник = ДанныеОбОплатеТрудаДляПодбора.Сотрудник
		|				И ДанныеДляПодбора.ФизическоеЛицо = ДанныеОбОплатеТрудаДляПодбора.ФизическоеЛицо
		|				И ДанныеДляПодбора.ИдентификаторЗаписи = ДанныеОбОплатеТрудаДляПодбора.ИдентификаторЗаписи
		|		ПО ОбновляемыеСотрудники.Сотрудник = ДанныеДляПодбора.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(НаборыЗаписей.Сотрудник, ДанныеДляПодбора.Сотрудник) КАК Сотрудник
		|ПОМЕСТИТЬ ВТИзмененныеСотрудники
		|ИЗ
		|	ВТНаборыЗаписей КАК НаборыЗаписей
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|		ПО НаборыЗаписей.Период = ДанныеДляПодбора.Начало
		|			И НаборыЗаписей.Организация = ДанныеДляПодбора.Организация
		|			И НаборыЗаписей.Филиал = ДанныеДляПодбора.Филиал
		|			И НаборыЗаписей.Подразделение = ДанныеДляПодбора.Подразделение
		|			И НаборыЗаписей.Сотрудник = ДанныеДляПодбора.Сотрудник
		|			И НаборыЗаписей.ФизическоеЛицо = ДанныеДляПодбора.ФизическоеЛицо
		|			И НаборыЗаписей.Должность = ДанныеДляПодбора.Должность
		|			И НаборыЗаписей.ДолжностьПоШтатномуРасписанию = ДанныеДляПодбора.ДолжностьПоШтатномуРасписанию
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДанныеДляПодбора.Сотрудник ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Сотрудник ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ВидСобытия <> ДанныеДляПодбора.ВидСобытия
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.КоличествоСтавок <> ДанныеДляПодбора.КоличествоСтавок
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ВидДоговора <> ДанныеДляПодбора.ВидДоговора
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Окончание <> ДанныеДляПодбора.Окончание
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ТарифнаяСтавка <> ДанныеДляПодбора.ТарифнаяСтавка
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.ФОТ <> ДанныеДляПодбора.ФОТ
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Надбавка <> ДанныеДляПодбора.Надбавка
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.СпособРасчетаАванса <> ДанныеДляПодбора.СпособРасчетаАванса
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Аванс <> ДанныеДляПодбора.Аванс
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеСотрудники.Сотрудник.Наименование КАК Наименование,
		|	ИзмененныеСотрудники.Сотрудник КАК Сотрудник,
		|	ИзмененныеСотрудники.Сотрудник.ГоловнаяОрганизация КАК Организация,
		|	ИзмененныеСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЛОЖЬ КАК ПоДоговоруГПХ,
		|	НаборыЗаписей.Филиал КАК Филиал,
		|	НаборыЗаписей.Подразделение КАК Подразделение,
		|	НаборыЗаписей.Должность КАК Должность,
		|	НаборыЗаписей.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	ВЫБОР
		|		КОГДА ИзмененныеСотрудники.Сотрудник = ИзмененныеСотрудники.Сотрудник.ГоловнойСотрудник
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоГоловнойСотрудник,
		|	НаборыЗаписей.ВидСобытия КАК ВидСобытия,
		|	НаборыЗаписей.КоличествоСтавок КАК КоличествоСтавок,
		|	НаборыЗаписей.ВидДоговора КАК ВидДоговора,
		|	НаборыЗаписей.Период КАК Начало,
		|	НаборыЗаписей.Окончание КАК Окончание,
		|	НаборыЗаписей.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	НаборыЗаписей.ФОТ КАК ФОТ,
		|	НаборыЗаписей.Надбавка КАК Надбавка,
		|	НаборыЗаписей.СпособРасчетаАванса КАК СпособРасчетаАванса,
		|	НаборыЗаписей.Аванс КАК Аванс
		|ИЗ
		|	ВТИзмененныеСотрудники КАК ИзмененныеСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНаборыЗаписей КАК НаборыЗаписей
		|		ПО ИзмененныеСотрудники.Сотрудник = НаборыЗаписей.Сотрудник
		|ГДЕ
		|	ЕСТЬNULL(НаборыЗаписей.Организация, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И ЕСТЬNULL(НаборыЗаписей.Филиал, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	НаборыЗаписей.Период";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			НаборЗаписей.Отбор.ПоДоговоруГПХ.Установить(Ложь);
			
			НаборЗаписейДанныхОбОплатеТруда = РегистрыСведений.ДанныеОбОплатеТрудаДляПодбораСотрудников.СоздатьНаборЗаписей();
			НаборЗаписейДанныхОбОплатеТруда.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			
			// Если отношения не оформлены добавляется запись с незаполненными сведениями о рабочем месте.
			Если Выборка.Начало = Null Тогда
				
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
				
				Запись.ПоДоговоруГПХ = Ложь;
				Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
				
			Иначе
				
				ПериодДоНачалаРаботыЗарегистрирован = Ложь;
				Пока Выборка.Следующий() Цикл
					
					Если НЕ ПериодДоНачалаРаботыЗарегистрирован
						И ЗначениеЗаполнено(Выборка.Начало) Тогда
						
						ДобавитьЗаписьПериодаДоНачалаРаботы(НаборЗаписей, Выборка);
						ПериодДоНачалаРаботыЗарегистрирован = Истина;
						
					КонецЕсли;
					
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Выборка);
					
					Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
					
					Если ОтключитьБизнесЛогику Тогда
						Запись.КоличествоСтавокПредставление = КадровыйУчетРасширенныйКлиентСервер.ПредставлениеКоличестваСтавок(Запись.КоличествоСтавок);
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Выборка.ТарифнаяСтавка)
						Или ЗначениеЗаполнено(Выборка.ФОТ)
						Или ЗначениеЗаполнено(Выборка.Надбавка)
						Или ЗначениеЗаполнено(Выборка.СпособРасчетаАванса)
						Или ЗначениеЗаполнено(Выборка.Аванс)Тогда
						
						ЗаписьДанныхОбОплатеТруда = НаборЗаписейДанныхОбОплатеТруда.Добавить();
						ЗаполнитьЗначенияСвойств(ЗаписьДанныхОбОплатеТруда, Выборка);
						
						ЗаписьДанныхОбОплатеТруда.ИдентификаторЗаписи = Запись.ИдентификаторЗаписи;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ОтключитьБизнесЛогику Тогда
				НаборЗаписей.ОбменДанными.Загрузка = Истина;
				НаборЗаписейДанныхОбОплатеТруда.ОбменДанными.Загрузка = Истина;
			КонецЕсли;
			
			Если ДополнительныеСвойства <> Неопределено Тогда
				
				Для каждого ДополнительноеСвойство Из ДополнительныеСвойства Цикл
					НаборЗаписей.ДополнительныеСвойства.Вставить(ДополнительноеСвойство.Ключ, ДополнительноеСвойство.Значение);
					НаборЗаписейДанныхОбОплатеТруда.ДополнительныеСвойства.Вставить(ДополнительноеСвойство.Ключ, ДополнительноеСвойство.Значение);
				КонецЦикла;
				
			КонецЕсли; 
			
			НаборЗаписей.Записать();
			НаборЗаписейДанныхОбОплатеТруда.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеДляПодбораДоговорниковГПХ(Сотрудники, ОтключитьБизнесЛогику = Ложь, ДополнительныеСвойства = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокСотрудников", Сотрудники);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник.Наименование КАК Наименование,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник КАК Сотрудник,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Организация.ГоловнаяОрганизация КАК Организация,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ФизическоеЛицо,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Организация КАК Филиал,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Подразделение,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаНачала КАК Начало,
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаОкончания КАК Окончание
		|ПОМЕСТИТЬ ВТНаборыЗаписей
		|ИЗ
		|	РегистрСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
		|ГДЕ
		|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник В(&СписокСотрудников)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДляПодбора.Сотрудник,
		|	ДанныеДляПодбора.Филиал,
		|	ДанныеДляПодбора.Подразделение,
		|	ДанныеДляПодбора.Начало,
		|	ДанныеДляПодбора.Окончание
		|ПОМЕСТИТЬ ВТДанныеДляПодбораСотрудников
		|ИЗ
		|	РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|ГДЕ
		|	ДанныеДляПодбора.Сотрудник В(&СписокСотрудников)
		|	И ДанныеДляПодбора.ПоДоговоруГПХ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(НаборыЗаписей.Сотрудник, ДанныеДляПодбора.Сотрудник) КАК Сотрудник
		|ПОМЕСТИТЬ ВТИзмененныеСотрудники
		|ИЗ
		|	ВТНаборыЗаписей КАК НаборыЗаписей
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДанныеДляПодбораСотрудников КАК ДанныеДляПодбора
		|		ПО НаборыЗаписей.Сотрудник = ДанныеДляПодбора.Сотрудник
		|			И НаборыЗаписей.Филиал = ДанныеДляПодбора.Филиал
		|			И НаборыЗаписей.Подразделение = ДанныеДляПодбора.Подразделение
		|			И НаборыЗаписей.Начало = ДанныеДляПодбора.Начало
		|			И НаборыЗаписей.Окончание = ДанныеДляПодбора.Окончание
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДанныеДляПодбора.Сотрудник ЕСТЬ NULL 
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Сотрудник ЕСТЬ NULL 
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Филиал <> ДанныеДляПодбора.Филиал
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Подразделение <> ДанныеДляПодбора.Подразделение
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Начало <> ДанныеДляПодбора.Начало
		|				ТОГДА ИСТИНА
		|			КОГДА НаборыЗаписей.Окончание <> ДанныеДляПодбора.Окончание
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НаборыЗаписей.Наименование,
		|	ИзмененныеСотрудники.Сотрудник КАК Сотрудник,
		|	НаборыЗаписей.Организация,
		|	НаборыЗаписей.ФизическоеЛицо,
		|	НаборыЗаписей.Филиал,
		|	НаборыЗаписей.Подразделение,
		|	НаборыЗаписей.Начало КАК Начало,
		|	НаборыЗаписей.Окончание,
		|	ВЫБОР
		|		КОГДА ИзмененныеСотрудники.Сотрудник = ИзмененныеСотрудники.Сотрудник.ГоловнойСотрудник
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоГоловнойСотрудник
		|ИЗ
		|	ВТИзмененныеСотрудники КАК ИзмененныеСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНаборыЗаписей КАК НаборыЗаписей
		|		ПО ИзмененныеСотрудники.Сотрудник = НаборыЗаписей.Сотрудник
		|ГДЕ
		|	ЕСТЬNULL(НаборыЗаписей.Организация, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И ЕСТЬNULL(НаборыЗаписей.Филиал, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Начало";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
			НаборЗаписей.Отбор.ПоДоговоруГПХ.Установить(Истина);
			
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.Начало <> Null Тогда
					
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Выборка);
					
					Запись.ПоДоговоруГПХ = Истина;
					Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ОтключитьБизнесЛогику Тогда
				НаборЗаписей.ОбменДанными.Загрузка = Истина;
			КонецЕсли;
			
			Если ДополнительныеСвойства <> Неопределено Тогда
				
				Для каждого ДополнительноеСвойство Из ДополнительныеСвойства Цикл
					НаборЗаписей.ДополнительныеСвойства.Вставить(ДополнительноеСвойство.Ключ, ДополнительноеСвойство.Значение);
				КонецЦикла;
				
			КонецЕсли;
			
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьНаименованияСотрудника(Сотрудник, Наименование) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сотрудник.Установить(Сотрудник);
	
	НаборЗаписей.Прочитать();
	
	Для каждого Запись Из НаборЗаписей Цикл
		Запись.Наименование = Наименование;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ДобавитьДанныеНовогоСотрудника(СотрудникОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сотрудник.Установить(СотрудникОбъект.Ссылка);
	НаборЗаписей.Отбор.ПоДоговоруГПХ.Установить(Ложь);
	
	Запись = НаборЗаписей.Добавить();
	Запись.Наименование = СотрудникОбъект.Наименование;
	Запись.Сотрудник = СотрудникОбъект.Ссылка;
	Запись.Организация = СотрудникОбъект.ГоловнаяОрганизация;
	Запись.ФизическоеЛицо = СотрудникОбъект.ФизическоеЛицо;
	Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
	Запись.ПоДоговоруГПХ = Ложь;
	Запись.ЭтоГоловнойСотрудник = (СотрудникОбъект.Ссылка = СотрудникОбъект.ГоловнойСотрудник);
	
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СформироватьПериодыДоНачалаРаботы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.Наименование,
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	Сотрудники.ГоловнаяОрганизация КАК Организация,
		|	Сотрудники.ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА Сотрудники.Ссылка = Сотрудники.ГоловнойСотрудник
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоГоловнойСотрудник,
		|	МИНИМУМ(ЕСТЬNULL(ДанныеДляПодбораСотрудников.Начало, ДАТАВРЕМЯ(1, 1, 1))) КАК Начало
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудников
		|		ПО Сотрудники.Ссылка = ДанныеДляПодбораСотрудников.Сотрудник
		|ГДЕ
		|	НЕ ЕСТЬNULL(ДанныеДляПодбораСотрудников.ПоДоговоруГПХ, ЛОЖЬ)
		|
		|СГРУППИРОВАТЬ ПО
		|	Сотрудники.Наименование,
		|	Сотрудники.Ссылка,
		|	Сотрудники.ГоловнаяОрганизация,
		|	Сотрудники.ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА Сотрудники.Ссылка = Сотрудники.ГоловнойСотрудник
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДанныеДляПодбораСотрудников.Начало, ДАТАВРЕМЯ(1, 1, 2))) > ДАТАВРЕМЯ(1, 1, 1)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		НаборЗаписей = РегистрыСведений.ДанныеДляПодбораСотрудников.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПоДоговоруГПХ.Установить(Ложь);
		
		НаборЗаписей.Прочитать();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДобавитьЗаписьПериодаДоНачалаРаботы(НаборЗаписей, Выборка);
		КонецЦикла;
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЗаписьПериодаДоНачалаРаботы(НаборЗаписей, Выборка)
	
	Запись = НаборЗаписей.Добавить();
	
	ЗаполнитьЗначенияСвойств(Запись, Выборка, "Наименование,Сотрудник,Организация,ФизическоеЛицо,ЭтоГоловнойСотрудник");
	Запись.Окончание = НачалоДня(НачалоДня(Выборка.Начало) - 1);
	
	Запись.ИдентификаторЗаписи = Новый УникальныйИдентификатор;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
