
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Физлицо") Тогда
		
		Физлицо = Параметры.Отбор.Физлицо;
		
		ИзФормыРедактированияЛичныхДанных = Параметры.ИзФормыРедактированияЛичныхДанных;
		
		УдостоверениеЛичности = РегистрыСведений.ДокументыФизическихЛиц.ДокументУдостоверяющийЛичностьФизлица(Физлицо);
		
		ЕстьУдостоверение = Не ПустаяСтрока(УдостоверениеЛичности);
		
		Элементы.УдостоверениеЛичности.Высота		= ?(ЕстьУдостоверение, 2, 0);
		УдостоверениеЛичности = ?(ЕстьУдостоверение, НСтр("ru='Удостоверение личности'") + ": ", "") + УдостоверениеЛичности;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Физлицо",	Физлицо);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДокументыФизическихЛиц.Представление
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
		|ГДЕ
		|	ДокументыФизическихЛиц.Физлицо = &Физлицо";
		ЕстьДокументы = Не Запрос.Выполнить().Пустой();
		
		Если Не ЕстьУдостоверение И ЕстьДокументы Тогда
			Элементы.НетУдостоверения.Видимость		= Истина;
			ТекстСообщения = НСтр("ru = 'Для физлица %1 не задан документ, удостоверяющий личность.'");
			УдостоверениеЛичности = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Физлицо);
		КонецЕсли;
		
		Элементы.УдостоверениеЛичности.Видимость	= Не ПустаяСтрока(УдостоверениеЛичности);
		
		Если ТолькоПросмотр Тогда
			УстановитьРежимТолькоПросмотр(ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ИзФормыРедактированияЛичныхДанных И Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если ИзФормыРедактированияЛичныхДанных И Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Если ИзФормыРедактированияЛичныхДанных И Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьРежимТолькоПросмотр(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Список",
		"ТолькоПросмотр",
		Истина);
	
КонецПроцедуры

&НаКлиенте
Функция ЗаблокироватьОбъектВФормеВладельце()
	
	Если Не СотрудникиКлиент.ЗаблокироватьОбъектВФормеВладельцеПриРедактированииИстории(ЭтотОбъект) Тогда
		
		УстановитьРежимТолькоПросмотр(ЭтотОбъект);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

