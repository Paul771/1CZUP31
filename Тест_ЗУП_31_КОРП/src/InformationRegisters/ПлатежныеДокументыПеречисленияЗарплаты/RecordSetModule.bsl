#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Ведомости = ЭтотОбъект.ВыгрузитьКолонку("Ведомость");
	Организации = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Ведомости, "Организация");
	Для Каждого Запись Из ЭтотОбъект Цикл
		Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
			Запись.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Ведомость, "Организация");
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЭтотОбъект.ДополнительныеСвойства.Свойство("ВыполнятьПроверкуПередЗаписьюНабора")
		Или ЭтотОбъект.ДополнительныеСвойства.ВыполнятьПроверкуПередЗаписьюНабора Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НаборЗаписей", ЭтотОбъект);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НаборЗаписей.ПлатежныйДокумент КАК ПлатежныйДокумент,
		|	НаборЗаписей.Ведомость КАК Ведомость
		|ПОМЕСТИТЬ ВТНаборЗаписей
		|ИЗ
		|	&НаборЗаписей КАК НаборЗаписей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НаборЗаписей.ПлатежныйДокумент КАК ПлатежныйДокумент,
		|	НаборЗаписей.Ведомость КАК Ведомость
		|ИЗ
		|	ВТНаборЗаписей КАК НаборЗаписей
		|
		|УПОРЯДОЧИТЬ ПО
		|	НаборЗаписей.ПлатежныйДокумент";
		
		МассивОшибок = Новый Массив;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("ПлатежныйДокумент") Цикл
			МассивВедомостей = Новый Массив;
			Пока Выборка.Следующий() Цикл
				МассивВедомостей.Добавить(Выборка.Ведомость);
			КонецЦикла;
			ОбменСБанкамиПоЗарплатнымПроектам.ПроверитьЗаполнениеПлатежногоДокумента(Выборка.ПлатежныйДокумент, МассивВедомостей, МассивОшибок);
		КонецЦикла;
		
		Для каждого Ошибка Из МассивОшибок Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка.ТекстСообщения, Ошибка.Ведомость, , , Отказ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	Если ДополнительныеСвойства.Свойство("ОграниченияРегистрации") Тогда
		// Ограничения регистрации уже были получены
		Возврат ДополнительныеСвойства.ОграниченияРегистрации;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НаборЗаписей", ЭтотОбъект);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НаборЗаписей.Организация КАК Организация,
	|	НаборЗаписей.Ведомость КАК Ведомость
	|ПОМЕСТИТЬ ВТНаборЗаписей
	|ИЗ
	|	&НаборЗаписей КАК НаборЗаписей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборЗаписей.Организация КАК Организация,
	|	СотрудникиВедомости.Сотрудник КАК Сотрудник,
	|	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации КАК Период
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	ВТНаборЗаписей КАК НаборЗаписей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк.Зарплата КАК СотрудникиВедомости
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	|			ПО СотрудникиВедомости.Ссылка = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка
	|		ПО НаборЗаписей.Ведомость = СотрудникиВедомости.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Организация КАК Организация
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ДанныеДокументов.Период) КАК Период
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДатаПериода = '00010101';
	Выборка = РезультатЗапроса[3].Выбрать();
	Если Выборка.Следующий() Тогда
		ДатаПериода = Выборка.Период;
	КонецЕсли;
	
	МассивСотрудников = РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("Сотрудник");
	МассивОрганизаций = РезультатЗапроса[2].Выгрузить().ВыгрузитьКолонку("Организация");
	
	ОграниченияРегистрации = ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации();
	ОграниченияРегистрации.Сотрудники = МассивСотрудников;
	ОграниченияРегистрации.ДатаПолученияДанных = ДатаПериода;
	ОграниченияРегистрации.Организации = МассивОрганизаций;
	
	Возврат ОграниченияРегистрации;
	
КонецФункции

#КонецОбласти

#КонецЕсли
