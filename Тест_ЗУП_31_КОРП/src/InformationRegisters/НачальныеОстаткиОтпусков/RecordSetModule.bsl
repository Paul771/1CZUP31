#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	УдалитьЗаписиЗаработанныхОтпусков(ЭтотОбъект);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти 

#Область ВспомогательныеПроцедурыИФункции

Процедура УдалитьЗаписиЗаработанныхОтпусков(НаборЗаписей)

	// Подготовка таблицы изменившихся записей.
	// В отличие от других источников вторичного регистра - изменение ввода остатков требует полного пересчета прав.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТЗ.Сотрудник КАК Справочник.Сотрудники) КАК Сотрудник,
		|	ВЫРАЗИТЬ(ТЗ.ВидЕжегодногоОтпуска КАК Справочник.ВидыОтпусков) КАК ВидЕжегодногоОтпуска,
		|	НАЧАЛОПЕРИОДА(ТЗ.ДатаОстатка, ДЕНЬ) КАК ДатаОстатка,
		|	НАЧАЛОПЕРИОДА(ТЗ.РабочийГодНачало, ДЕНЬ) КАК РабочийГодНачало,
		|	НАЧАЛОПЕРИОДА(ТЗ.РабочийГодОкончание, ДЕНЬ) КАК РабочийГодОкончание,
		|	ТЗ.КоличествоДней КАК КоличествоДней
		|ПОМЕСТИТЬ НовыйНабор
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачальныеОстаткиОтпусков.Сотрудник,
		|	НачальныеОстаткиОтпусков.ВидЕжегодногоОтпуска,
		|	НАЧАЛОПЕРИОДА(НачальныеОстаткиОтпусков.ДатаОстатка, ДЕНЬ) КАК ДатаОстатка,
		|	НАЧАЛОПЕРИОДА(НачальныеОстаткиОтпусков.РабочийГодНачало, ДЕНЬ) КАК РабочийГодНачало,
		|	НАЧАЛОПЕРИОДА(НачальныеОстаткиОтпусков.РабочийГодОкончание, ДЕНЬ) КАК РабочийГодОкончание,
		|	НачальныеОстаткиОтпусков.КоличествоДней КАК КоличествоДней
		|ПОМЕСТИТЬ СтарыйНабор
		|ИЗ
		|	РегистрСведений.НачальныеОстаткиОтпусков КАК НачальныеОстаткиОтпусков
		|ГДЕ
		|	НачальныеОстаткиОтпусков.Регистратор = &Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(НовыйНабор.Сотрудник, СтарыйНабор.Сотрудник) КАК Сотрудник,
		|	ЕСТЬNULL(НовыйНабор.ВидЕжегодногоОтпуска, СтарыйНабор.ВидЕжегодногоОтпуска) КАК ВидЕжегодногоОтпуска,
		|	ЕСТЬNULL(НовыйНабор.ДатаОстатка, СтарыйНабор.ДатаОстатка) КАК ДатаОстатка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НовыйНабор.КоличествоДней, 0) <> ЕСТЬNULL(СтарыйНабор.КоличествоДней, 0)
		|			ТОГДА ИСТИНА
		|		КОГДА ЕСТЬNULL(НовыйНабор.РабочийГодОкончание, ДАТАВРЕМЯ(1, 1, 1)) <> ЕСТЬNULL(СтарыйНабор.РабочийГодОкончание, ДАТАВРЕМЯ(1, 1, 1))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК БылиИзменения
		|ПОМЕСТИТЬ СравнительныйНабор
		|ИЗ
		|	НовыйНабор КАК НовыйНабор
		|		ПОЛНОЕ СОЕДИНЕНИЕ СтарыйНабор КАК СтарыйНабор
		|		ПО НовыйНабор.Сотрудник = СтарыйНабор.Сотрудник
		|			И НовыйНабор.ВидЕжегодногоОтпуска = СтарыйНабор.ВидЕжегодногоОтпуска
		|			И НовыйНабор.ДатаОстатка = СтарыйНабор.ДатаОстатка
		|			И НовыйНабор.РабочийГодНачало = СтарыйНабор.РабочийГодНачало
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СравнительныйНабор.Сотрудник,
		|	СравнительныйНабор.ВидЕжегодногоОтпуска,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Период
		|ИЗ
		|	СравнительныйНабор КАК СравнительныйНабор
		|ГДЕ
		|	СравнительныйНабор.БылиИзменения = ИСТИНА";
	
		ТаблицаНовыхДвижений = НаборЗаписей.Выгрузить(,"Сотрудник,ВидЕжегодногоОтпуска,ДатаОстатка,РабочийГодНачало,РабочийГодОкончание,КоличествоДней");
		Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("ТЗ", ТаблицаНовыхДвижений);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ОстаткиОтпусков.УдалитьЗаписиЗаработанныхОтпусков(ТаблицаЗапроса);

КонецПроцедуры

#КонецОбласти 

#КонецЕсли