#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции
	
Функция НастройкиПодключения(Знач Конфигурация, Знач Пользователь = Неопределено) Экспорт
	
	// Получаем переменные
	
	Если Пользователь = Неопределено Тогда
		Пользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	// Получаем настройки соединения
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчебныеИнформационныеБазы.СпособПодключения,
		|	УчебныеИнформационныеБазы.АутентификацияWindowsИнформационнойБазы,
		|	УчебныеИнформационныеБазы.ИмяИнформационнойБазыНаСервере,
		|	УчебныеИнформационныеБазы.ИмяСервераИнформационнойБазы,
		|	УчебныеИнформационныеБазы.КаталогИнформационнойБазы,
		|	УчебныеИнформационныеБазы.ПользовательИнформационнойБазы,
		|	УчебныеИнформационныеБазы.АдресНаВебСервере
		|ИЗ
		|	РегистрСведений.УчебныеИнформационныеБазы КАК УчебныеИнформационныеБазы
		|ГДЕ
		|	УчебныеИнформационныеБазы.Конфигурация = &Конфигурация
		|	И УчебныеИнформационныеБазы.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Неопределено;
		
	Иначе
		
		ТаблицаНастроек = РезультатЗапроса.Выгрузить();
		
		НастройкиПодключения = Новый Структура;
		
		Для каждого Колонка Из ТаблицаНастроек.Колонки Цикл
			НастройкиПодключения.Вставить(Колонка.Имя, ТаблицаНастроек[0][Колонка.Имя]);		
		КонецЦикла;
		
		Возврат НастройкиПодключения;
		
	КонецЕсли;	
	
КонецФункции

Функция УстановитьПодключение(ДанныеДляОбработкиXML, Знач НастройкиПодключения) Экспорт
	
	РезультатСоединения = Новый Структура("ОшибкаПодключения, ОшибкаПроверки, КраткоеОписаниеОшибки, ПодробноеОписаниеОшибки", Ложь, Ложь, "", "");
	
	// Соединяемся с внешней базой на сервере и получаем результат проверки этапов
	
	Если НастройкиПодключения.СпособПодключения = Перечисления.СпособыПодключенияКУчебнойИнформационнойБазе.ВебСервер Тогда
		
		ПараметрыСоединения = ОбщегоНазначенияКлиентСервер.СтруктураURI(НастройкиПодключения.АдресНаВебСервере);
		ИнтернетПрокси = ПолучениеФайловИзИнтернетаКлиентСервер.ПолучитьПрокси(ПараметрыСоединения.Схема);
		
		ТаймаутСети = 10;
		
		HTTP = Новый HTTPСоединение(ПараметрыСоединения.Хост,
			ПараметрыСоединения.Порт,
			?(НастройкиПодключения.АутентификацияWindowsИнформационнойБазы, "", НастройкиПодключения.ПользовательИнформационнойБазы),
			?(НастройкиПодключения.АутентификацияWindowsИнформационнойБазы, "", ""),
			ИнтернетПрокси,
			ТаймаутСети,
			?(ПараметрыСоединения.Схема = "https",
				Новый ЗащищенноеСоединениеOpenSSL(),
				Неопределено));
				
		ПараметрыСоединения.ПутьНаСервере = ЭлектронноеОбучениеСлужебныйКлиентСервер.ДобавитьКонечныйРазделительПути(ПараметрыСоединения.ПутьНаСервере);
		
		ПараметрыСоединения.ПутьНаСервере = ПараметрыСоединения.ПутьНаСервере + "hs/learning/v1/check";
		
		HTTPЗапрос = Новый HTTPЗапрос(ПараметрыСоединения.ПутьНаСервере);
		HTTPЗапрос.УстановитьТелоИзСтроки(ДанныеДляОбработкиXML);
		
		Попытка
			
			Ответ = HTTP.ОтправитьДляОбработки(HTTPЗапрос);
			
		Исключение
					
			РезультатСоединения.ОшибкаПодключения = Истина;
			РезультатСоединения.КраткоеОписаниеОшибки = НСтр("ru = 'Произошла ошибка при подключении к учебной базе.
			|Подробное описание ошибки см. в журнале регистрации.'");
			РезультатСоединения.ПодробноеОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Ошибка при подключении к учебной базе (%1): %2.'"),
				ПараметрыСоединения.ПутьНаСервере, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(ЭлектронноеОбучениеСлужебныйКлиентСервер.СобытиеЖурналаРегистрацииЭлектронныхКурсов(), УровеньЖурналаРегистрации.Ошибка,,,НСтр("ru = 'Ошибка при подключении к учебной базе'") + РезультатСоединения.ПодробноеОписаниеОшибки);
			
			Возврат РезультатСоединения;
			
		КонецПопытки;
		
		Если Ответ.КодСостояния <> 200 Тогда
			
			РезультатСоединения.ОшибкаПроверки = Истина;
			РезультатСоединения.КраткоеОписаниеОшибки = НСтр("ru = 'Произошла ошибка проверки задания.
			|Подробное описание ошибки см. в журнале регистрации.'");
			РезультатСоединения.ПодробноеОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Ошибка при подключении к учебной базе (%1): %2.'"),
				Ответ.КодСостояния, Ответ.ПолучитьТелоКакСтроку());
				
			ЭлектронноеОбучениеСлужебный.ЗаписатьОшибкуВЖурналРегистрации((НСтр("ru = 'Ошибка проверки задания пользователя во внешней базе'") + РезультатСоединения.ПодробноеОписаниеОшибки));
			
			Возврат РезультатСоединения;
			
		КонецЕсли;
		
		ДанныеДляОбработкиXML = Ответ.ПолучитьТелоКакСтроку();
		
	Иначе
		
		НастройкиСоединения = Новый Структура(
		"ВариантРаботыИнформационнойБазы,
		|КаталогИнформационнойБазы,
		|ИмяСервера1СПредприятия,
		|ИмяИнформационнойБазыНаСервере1СПредприятия,
		|АутентификацияОперационнойСистемы,
		|ИмяПользователя",
		?(НастройкиПодключения.СпособПодключения = Перечисления.СпособыПодключенияКУчебнойИнформационнойБазе.Сервер, 1, 0),
		НастройкиПодключения.КаталогИнформационнойБазы,
		НастройкиПодключения.ИмяСервераИнформационнойБазы,
		НастройкиПодключения.ИмяИнформационнойБазыНаСервере,
		НастройкиПодключения.АутентификацияWindowsИнформационнойБазы,
		НастройкиПодключения.ПользовательИнформационнойБазы);
		
		НастройкиСоединения = ОбщегоНазначенияКлиентСервер.УстановитьВнешнееСоединениеСБазой(НастройкиСоединения);
		
		Если НастройкиСоединения.ОшибкаПодключенияКомпоненты Тогда
			
			РезультатСоединения.ОшибкаПодключения = Истина;
			РезультатСоединения.КраткоеОписаниеОшибки = НастройкиСоединения.КраткоеОписаниеОшибки;
			РезультатСоединения.ПодробноеОписаниеОшибки = НастройкиСоединения.ПодробноеОписаниеОшибки;
			
			Возврат РезультатСоединения;
			
		КонецЕсли;
		
		Попытка
			 
			// УчебнаяКонфигурацияСУЗ.ВыполнитьПодключение(ДанныеДляОбработкиXML);
			НастройкиСоединения.Соединение.УчебнаяКонфигурацияСУЗ.ВыполнитьПодключение(ДанныеДляОбработкиXML);
			
		Исключение
			
			РезультатСоединения.ОшибкаПроверки = Истина;
			РезультатСоединения.КраткоеОписаниеОшибки = НСтр("ru = 'Произошла ошибка проверки задания.
			|Подробное описание ошибки см. в журнале регистрации.'");
			РезультатСоединения.ПодробноеОписаниеОшибки = НСтр("ru = 'Ошибка подключения к учебной базе:'") + Символы.ПС + ОписаниеОшибки();
			
			ЗаписьЖурналаРегистрации(ЭлектронноеОбучениеСлужебныйКлиентСервер.СобытиеЖурналаРегистрацииЭлектронныхКурсов(), УровеньЖурналаРегистрации.Ошибка,,,НСтр("ru = 'Ошибка проверки задания пользователя во внешней базе'") + РезультатСоединения.ПодробноеОписаниеОшибки);
			
			Возврат РезультатСоединения;
			
		КонецПопытки;
			
	КонецЕсли;
	
	Возврат РезультатСоединения;
	
КонецФункции

#КонецОбласти

#КонецЕсли