#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ЗафиксироватьИзменениеКурса(ЭлектронныйКурс, ГотовКПубликации) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлектронныйКурс) Тогда
		ВызватьИсключение НСтр("ru = 'Электронный курс не задан'");
	КонецЕсли;	
	
	Пользователь = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(Пользователь) <> Тип("СправочникСсылка.Пользователи")
		ИЛИ НЕ ЗначениеЗаполнено(Пользователь) Тогда
		
		ВызватьИсключение НСтр("ru = 'Пользователь, который редактирует курс не задан'");
		
	КонецЕсли;
	
	Запись = РегистрыСведений.ИзмененныеЭлектронныеКурсы.СоздатьМенеджерЗаписи();
	Запись.ЭлектронныйКурс = ЭлектронныйКурс;
	Запись.Пользователь = Пользователь;
	
	Запись.Прочитать();
	
	Если НЕ Запись.Выбран() Тогда
		Запись.ДатаНачалаИзменения = ТекущаяДатаСеанса();
	КонецЕсли;		
	
	Запись.ГотовКПубликации = ГотовКПубликации;
	Запись.ДатаОкончанияИзменения = ТекущаяДатаСеанса();
	
	Запись.ЭлектронныйКурс = ЭлектронныйКурс;
	Запись.Пользователь = Пользователь;	
	
	Запись.Записать();
	
КонецПроцедуры

Процедура ЗафиксироватьПубликациюКурса(ЭлектронныйКурс) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлектронныйКурс) Тогда
		ВызватьИсключение НСтр("ru = 'Электронный курс не задан'");
	КонецЕсли;	
	
	НаборЗаписей = РегистрыСведений.ИзмененныеЭлектронныеКурсы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЭлектронныйКурс.Установить(ЭлектронныйКурс);
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция МожноПубликоватьКурс(ЭлектронныйКурс) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлектронныйКурс) Тогда
		ВызватьИсключение НСтр("ru = 'Электронный курс не задан'");
	КонецЕсли;		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИзмененныеЭлектронныеКурсы.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.ИзмененныеЭлектронныеКурсы КАК ИзмененныеЭлектронныеКурсы
		|ГДЕ
		|	ИзмененныеЭлектронныеКурсы.ЭлектронныйКурс = &ЭлектронныйКурс
		|	И ИзмененныеЭлектронныеКурсы.ГотовКПубликации = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ЭлектронныйКурс", ЭлектронныйКурс);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат ?(РезультатЗапроса.Пустой(), Истина, Ложь);
	
КонецФункции

Функция КоличествоИзмененныхКурсов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) КАК КоличествоЗаписей
		|ИЗ
		|	РегистрСведений.ИзмененныеЭлектронныеКурсы КАК ИзмененныеЭлектронныеКурсы";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	ВыборкаДетальныеЗаписи.Следующий();

	Возврат ВыборкаДетальныеЗаписи.КоличествоЗаписей;
	
КонецФункции

Функция ЭлектронныйКурсОтредактированТекущимПользователем(ЭлектронныйКурс) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлектронныйКурс) Тогда
		ВызватьИсключение НСтр("ru = 'Электронный курс не задан'");
	КонецЕсли;	
	
	Пользователь = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(Пользователь) <> Тип("СправочникСсылка.Пользователи")
		ИЛИ НЕ ЗначениеЗаполнено(Пользователь) Тогда
		
		ВызватьИсключение НСтр("ru = 'Пользователь, который редактирует курс не задан'");
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) КАК КоличествоЗаписей
		|ИЗ
		|	РегистрСведений.ИзмененныеЭлектронныеКурсы КАК ИзмененныеЭлектронныеКурсы
		|ГДЕ
		|	ИзмененныеЭлектронныеКурсы.ЭлектронныйКурс = &ЭлектронныйКурс
		|	И ИзмененныеЭлектронныеКурсы.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ЭлектронныйКурс", ЭлектронныйКурс);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();

	Возврат ?(ВыборкаДетальныеЗаписи.КоличествоЗаписей = 0, Ложь, Истина);
	
КонецФункции

#КонецОбласти

#КонецЕсли

