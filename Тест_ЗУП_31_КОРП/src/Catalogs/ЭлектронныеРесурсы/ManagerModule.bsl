#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Возвращает единственный элемент ресурса.
//
// Если в ресурсе нет элементов или их больше одного,
// включая группы, то возвращает Неопределено.
// Помимо этой функции единственный элемент можно
// получить из реквизита ресурса.
//
Функция ЕдинственныйЭлемент(Ресурс) Экспорт	 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ЭлементыЭлектронныхКурсов.Ссылка
		|ИЗ
		|	Справочник.ЭлементыЭлектронныхРесурсов КАК ЭлементыЭлектронныхКурсов
		|ГДЕ
		|	ЭлементыЭлектронныхКурсов.ПометкаУдаления = ЛОЖЬ
		|	И ЭлементыЭлектронныхКурсов.Владелец = &Ресурс";

	Запрос.УстановитьПараметр("Ресурс", Ресурс);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		
		ВыборкаДетальныеЗаписи.Следующий();
		
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;		
	
КонецФункции

Функция ДеревоЭлементов(Ресурс) Экспорт
	 
	// Делаем проверки
	//
	
	ДанныеРесурса = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ресурс, "ИдентичныйРесурс, SCO");
	ИдентичныйРесурс = ДанныеРесурса.ИдентичныйРесурс;
	
	Если ЗначениеЗаполнено(ИдентичныйРесурс) Тогда
		// Если указан идентичный ресурс, то берем файлы из него.
		Возврат ДеревоЭлементов(ИдентичныйРесурс);  // Рекурсия
	КонецЕсли;
	
	// Выбираем все элементы ресурса
	//
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЭлементыРесурса.Ссылка КАК Ссылка,
	               |	ЭлементыРесурса.ИмяФайла КАК ИмяФайла,
	               |	ЭлементыРесурса.ЭтоГруппа КАК ЭтоГруппа,
	               |	ЭлементыРесурса.Наименование КАК Наименование,
	               |	ЭлементыРесурса.Скрывать КАК Скрывать,
	               |	ЭлементыРесурса.Владелец КАК Владелец,
	               |	ЭлементыРесурса.Тип КАК ТипЭлемента,
	               |	ЭлементыРесурса.ЭтоВнешнийЭлемент КАК ЭтоВнешнийЭлемент,
	               |	ЭлементыРесурса.ДатаИзменения КАК ДатаИзменения,
	               |	ВЫБОР
	               |		КОГДА ЭлементыРесурса.ЭтоГруппа
	               |			ТОГДА 2
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Картинка
	               |ИЗ
	               |	Справочник.ЭлементыЭлектронныхРесурсов КАК ЭлементыРесурса
	               |ГДЕ
	               |	ЭлементыРесурса.ПометкаУдаления = ЛОЖЬ
	               |	И ЭлементыРесурса.Владелец = &Ресурс
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Наименование ИЕРАРХИЯ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ресурс", Ресурс);
	
	ВыборкаВсехФайловРесурса = Запрос.Выполнить();
	ДеревоФайловРесурса      = ВыборкаВсехФайловРесурса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Если НЕ ДанныеРесурса.SCO Тогда // Ресурсы SCORM никак не меняем
		ПодготовитьДеревоЭлементовДляВыгрузки(ДеревоФайловРесурса.Строки);	
	КонецЕсли;
		
	// Завершаем
	//
	
	Возврат ДеревоФайловРесурса;
	
КонецФункции

Процедура ПодготовитьДеревоЭлементовДляВыгрузки(СтрокиДереваФайлов)
	
	Для каждого Строка Из СтрокиДереваФайлов Цикл
		
		Если НЕ Строка.ЭтоВнешнийЭлемент Тогда
			Строка.ИмяФайла = Справочники.ЭлементыЭлектронныхРесурсов.ИмяФайлаДляВыгрузки(Строка.Ссылка, Строка.ИмяФайла, Строка.ТипЭлемента);
		КонецЕсли;		
			
		Если Строка.Строки.Количество() > 0 Тогда
			ПодготовитьДеревоЭлементовДляВыгрузки(Строка.Строки); // Рекурсия
		КонецЕсли;		
		
	КонецЦикла;
		
КонецПроцедуры

Функция СтруктураФайловРесурса(Ресурс, СтрокиДереваФайлов, Знач УровеньВложенности, ЭлектронныйРесурс, ИдентификаторФормы = Неопределено) Экспорт
			
	МассивФайлов = Новый Массив();
	
	Если СтрокиДереваФайлов.Количество() = 0 Тогда
		Возврат МассивФайлов;
	КонецЕсли;
	
	Для каждого Строка Из СтрокиДереваФайлов Цикл
		
		Если Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.YouTube Тогда		
			Продолжить; // Нет файла для этого типа элемента ресурса
		КонецЕсли;
		
		Файл = ПустаяСтруктураФайлаДляВыгрузки();
		
		Файл.ИмяФайла = Строка.ИмяФайла;
		Файл.ЭтоКаталог = Строка.ЭтоГруппа;
		
		Если Строка.ЭтоГруппа Тогда
			
			МассивФайловРесурса = СтруктураФайловРесурса(Ресурс, Строка.Строки, УровеньВложенности + 1, ЭлектронныйРесурс, ИдентификаторФормы); // Рекурсия
			Файл.ПодчиненныеФайлы = МассивФайловРесурса;
			
		Иначе
			
			Если Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Text Тогда
				
				ФорматированныйДокумент = Справочники.ЭлементыЭлектронныхРесурсов.ДанныеЭлементаДляВыгрузки(Строка.Ссылка, Строка.ТипЭлемента);
				ФорматированныйДокументСтруктура = ЭлектронноеОбучениеСлужебный.ПредставлениеФорматированногоДокументаДляВыгрузкиHTML(ФорматированныйДокумент, Строка.Ссылка.УникальныйИдентификатор(),,Истина,Ложь);
				
				Файл.ИмяФайла = ""; // Чтобы распаковался в корень ресурса				
				Файл.ТипЭлемента = "Folder";
				Файл.ДвоичныеДанные = ФорматированныйДокументСтруктура.ДвоичныеДанные;
				
			ИначеЕсли Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Document
				ИЛИ Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Presentation Тогда
				
				Файл.ИмяФайла = ""; // Чтобы распаковался в корень ресурса
				Файл.ТипЭлемента = "Folder";
				Файл.ДвоичныеДанные = Справочники.ЭлементыЭлектронныхРесурсов.ДанныеЭлементаДляВыгрузки(Строка.Ссылка, Строка.ТипЭлемента, ИдентификаторФормы);
				
			ИначеЕсли Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Video Тогда	
				
				ФорматДляВыгрузки = Справочники.ЭлементыЭлектронныхРесурсов.ФорматВидеоФайлаДляВыгрузки(Строка.Ссылка);				
				Файл.ИмяФайла = "video." + НРег(ФорматДляВыгрузки);				
				Файл.ДвоичныеДанные = Справочники.ЭлементыЭлектронныхРесурсов.ДанныеЭлементаДляВыгрузки(Строка.Ссылка, Строка.ТипЭлемента, ИдентификаторФормы);								
				
			ИначеЕсли Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Audio Тогда	
				
				ФорматДляВыгрузки = НРег(ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(Строка.ИмяФайла)));
				Файл.ИмяФайла = "audio." + ФорматДляВыгрузки;				
				Файл.ДвоичныеДанные = Справочники.ЭлементыЭлектронныхРесурсов.ДанныеЭлементаДляВыгрузки(Строка.Ссылка, Строка.ТипЭлемента, ИдентификаторФормы);
				
			ИначеЕсли Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.File
				ИЛИ Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Image
				ИЛИ Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.DataProcessor
				ИЛИ Строка.ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Media Тогда	
				
				Файл.ИмяФайла = Строка.ИмяФайла;				
				Файл.ДвоичныеДанные = Справочники.ЭлементыЭлектронныхРесурсов.ДанныеЭлементаДляВыгрузки(Строка.Ссылка, Строка.ТипЭлемента, ИдентификаторФормы);
				
			Иначе
				
				ВызватьИсключение НСтр("ru = 'Неизвестный тип элемента'");
				
			КонецЕсли;				
						
		КонецЕсли;
		
		МассивФайлов.Добавить(Файл);
		
	КонецЦикла;
	
	Возврат МассивФайлов;
	
КонецФункции

Функция ПустаяСтруктураФайлаДляВыгрузки() Экспорт
	
	Файл = Новый Структура;
	
	Файл.Вставить("ИмяФайла", "");
	Файл.Вставить("ЭтоКаталог", "");
	Файл.Вставить("ДвоичныеДанные", Неопределено);
	Файл.Вставить("ПодчиненныеФайлы", Неопределено);
	Файл.Вставить("ТипЭлемента", Неопределено); // Строка

	Возврат Файл;
	
КонецФункции

Функция ЭлементРесурсаПоОтносительномуПути(Знач Ресурс, Знач ОтносительныйПутьКФайлу) Экспорт
	
	РазделительПути = ЭлектронноеОбучениеСлужебныйКлиентСервер.РазделительПути(ОтносительныйПутьКФайлу);
	ОтносительныйПутьМассив = СтрРазделить(ОтносительныйПутьКФайлу, РазделительПути, Ложь);
	КоличествоЭлементовПути = ОтносительныйПутьМассив.Количество();
	ИмяФайла = ОтносительныйПутьМассив[КоличествоЭлементовПути-1];
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЭлементыЭлектронныхРесурсов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЭлементыЭлектронныхРесурсов КАК ЭлементыЭлектронныхРесурсов
		|ГДЕ
		|	ЭлементыЭлектронныхРесурсов.ПометкаУдаления = ЛОЖЬ
		|	И ЭлементыЭлектронныхРесурсов.ИмяФайла = &ИмяФайла
		|	И ЭлементыЭлектронныхРесурсов.Владелец = &Ресурс";
	
	Запрос.УстановитьПараметр("ИмяФайла", ИмяФайла);
	Запрос.УстановитьПараметр("Ресурс", Ресурс);	
		
	УровеньРодителя = 1;
	
	Пока УровеньРодителя < КоличествоЭлементовПути Цикл
		
		ИмяФайлаРодителя = ОтносительныйПутьМассив[УровеньРодителя - 1];
		ИмяПараметра = "ИмяКаталог" + ЭлектронноеОбучениеСлужебныйКлиентСервер.ЧислоВСтроку(УровеньРодителя);
		ТекстУсловия = " И ЭлементыЭлектронныхРесурсов.";
		
		Для Счетчик = 1 По УровеньРодителя Цикл			
			ТекстУсловия = ТекстУсловия + "Родитель."			
		КонецЦикла;
		
		ТекстУсловия = ТекстУсловия + "ИмяФайла = &" + ИмяПараметра;			
		Запрос.Текст = Запрос.Текст + ТекстУсловия;
		Запрос.УстановитьПараметр(ИмяПараметра, ИмяФайлаРодителя);
		
		УровеньРодителя = УровеньРодителя + 1;
		
	КонецЦикла;		
	
	ИмяПараметра = "ПоследнийРодитель";
	ТекстУсловия = " И ЭлементыЭлектронныхРесурсов.";
	
	Для Счетчик = 1 По УровеньРодителя Цикл			
		ТекстУсловия = ТекстУсловия + "Родитель."			
	КонецЦикла;		
	
	ТекстУсловия = Лев(ТекстУсловия, СтрДлина(ТекстУсловия)-1);
	ТекстУсловия = ТекстУсловия + " = &" + ИмяПараметра;		
	Запрос.Текст = Запрос.Текст + ТекстУсловия;
	
	Запрос.УстановитьПараметр(ИмяПараметра, Справочники.ЭлементыЭлектронныхРесурсов.ПустаяСсылка());		
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Ссылка;
	
КонецФункции

// Возвращает путь к элементу относительно каталога ресурсов
//
Функция ОтносительныйПутьКЭлементуРесурса(Знач ЭлементРесурса, ДеревоЭлементовРесурса = Неопределено) Экспорт
	
	ДанныеФайла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлементРесурса, "Владелец, ЭтоВнешнийЭлемент, ИмяФайла");	
	
	Если ДанныеФайла.ЭтоВнешнийЭлемент Тогда
		Возврат ДанныеФайла.ИмяФайла;
	КонецЕсли;	
	
	Ресурс = ДанныеФайла.Владелец;	
	
	Если ДеревоЭлементовРесурса = Неопределено Тогда
		ДеревоЭлементовРесурса = ДеревоЭлементов(Ресурс);
	КонецЕсли;	
	
	СтрокаДерева = НайтиЭлементВДереве(ДеревоЭлементовРесурса.Строки, ЭлементРесурса);
	
	Если СтрокаДерева = Неопределено Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Элемент %1 не найден в ресурсе %2'"), ЭлементРесурса, Ресурс);
	КонецЕсли;
	
	ПутьКЭлементу = ДанныеФайла.ИмяФайла;
	РодительЭлемента = СтрокаДерева.Родитель;
	
	Пока РодительЭлемента <> Неопределено Цикл
		ПутьКЭлементу = РодительЭлемента.ИмяФайла + "/" + ПутьКЭлементу;
		РодительЭлемента = РодительЭлемента.Родитель;
	КонецЦикла;
	
	ПутьКЭлементу = Строка(Ресурс.УникальныйИдентификатор()) + "/" + ПутьКЭлементу;	// Добавляем каталог ресурса
	
	Возврат ПутьКЭлементу;   
	
КонецФункции

Функция НайтиЭлементВДереве(СтрокиДереваЭлементов, ЭлементРесурса)
	
	НайденныйЭлемент = Неопределено;
	
	Для каждого Строка Из СтрокиДереваЭлементов Цикл

		Если Строка.Ссылка = ЭлементРесурса Тогда
			НайденныйЭлемент = Строка;
			Прервать;
		КонецЕсли;

		Если Строка.ЭтоГруппа И НайденныйЭлемент = Неопределено Тогда
			НайденныйЭлемент = НайтиЭлементВДереве(Строка.Строки, ЭлементРесурса); // Рекурсия
		КонецЕсли;

		Если НайденныйЭлемент <> Неопределено Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НайденныйЭлемент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
