#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции	
	
Функция ОписаниеОбработки(Обработка = Неопределено, Поставщик = Неопределено) Экспорт
	
	ОписаниеОбработки = Новый Структура("Безопасно, ВерсияAPI, Данные, Имя", Истина, 1, Неопределено, "");

	Если Обработка <> Неопределено Тогда
	
		Если ТипЗнч(Обработка) = Тип("СправочникСсылка.ЭлементыЭлектронныхРесурсов") Тогда
			
			ВызватьИсключение НСтр("ru = 'Вызов не поддерживается'");
			
		Иначе
			
			ОписаниеОбработки.Имя = Обработка;
			
		КонецЕсли;

	КонецЕсли;
		
	Возврат ОписаниеОбработки;
	
КонецФункции

Функция ОбработатьОтветПользователя(ДанныеДляОбработки, ПрограммныйПродукт, Пользователь) Экспорт
	
	РезультатОбработки = Новый Структура("Код, Текст", 0, "");
	
	ДанныеПП = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПрограммныйПродукт, "Обработка, Тип");
	
	Если ДанныеПП.Тип = Перечисления.ТипыУчебныхПрограммныхПродуктов.УчебнаяБаза1С Тогда
		
		// Получаем параметры подключения к учебной базе
					
		НастройкиПодключения = РегистрыСведений.УчебныеИнформационныеБазы.НастройкиПодключения(ПрограммныйПродукт, Пользователь);
		
		// Соединяемся с внешней базой
		
		Если НастройкиПодключения = Неопределено Тогда
			
			РезультатОбработки.Вставить("Код", 9); 
			РезультатОбработки.Вставить("Форма", Новый Структура("Имя, Ключ, ЗначенияЗаполнения", "РегистрСведений.УчебныеИнформационныеБазы.ФормаЗаписи", Неопределено, Новый Структура("Конфигурация, Пользователь", ПрограммныйПродукт, Пользователь)));
			
			Возврат РезультатОбработки;
			
		Иначе
			
			ДанныеДляОбработки.Вставить("НастройкиПодключения", НастройкиПодключения);
			
			ДанныеДляОбработкиXML = ОбщегоНазначения.ЗначениеВСтрокуXML(ДанныеДляОбработки);
			
			РезультатСоединения = РегистрыСведений.УчебныеИнформационныеБазы.УстановитьПодключение(ДанныеДляОбработкиXML, НастройкиПодключения);
			
			ДанныеДляОбработки = ОбщегоНазначения.ЗначениеИзСтрокиXML(ДанныеДляОбработкиXML);
			
		КонецЕсли;
		
		Если РезультатСоединения.ОшибкаПодключения Тогда
			
			КлючНастроек = РегистрыСведений.УчебныеИнформационныеБазы.СоздатьКлючЗаписи(Новый Структура("Конфигурация, Пользователь", ПрограммныйПродукт, Пользователь));
			
			РезультатОбработки.Вставить("Код", 10); 
			РезультатОбработки.Вставить("Текст", РезультатСоединения.КраткоеОписаниеОшибки);
			РезультатОбработки.Вставить("Форма", Новый Структура("Имя, Ключ, ЗначенияЗаполнения", "РегистрСведений.УчебныеИнформационныеБазы.ФормаЗаписи", КлючНастроек, Неопределено));
			
			Возврат РезультатОбработки;
			
		КонецЕсли;
			
		Если РезультатСоединения.ОшибкаПроверки Тогда
			
			РезультатОбработки.Вставить("Код", 11); 
			РезультатОбработки.Вставить("Текст", РезультатСоединения.КраткоеОписаниеОшибки);
		
		КонецЕсли;
		
	Иначе
		
		РезультатОбработки.Вставить("Код", 12); 
		РезультатОбработки.Вставить("Текст", НСтр("ru = 'Тип учебной программы не задан или не поддерживается.'")); 
		
		Возврат РезультатОбработки;
		
	КонецЕсли;
	
	Возврат РезультатОбработки;
	
КонецФункции

#КонецОбласти

#КонецЕсли