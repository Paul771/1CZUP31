#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьСпособОценки(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	СтруктураЦелей.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтруктураЦелей КАК СтруктураЦелей
		|ГДЕ
		|	СтруктураЦелей.СпособОценки = ЗНАЧЕНИЕ(Перечисление.СпособОценкиПоказателяЭффективности.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СправочникОбъект.СпособОценки = ПредопределенноеЗначение("Перечисление.СпособОценкиПоказателяЭффективности.ШкалаЗначений");
		СправочникОбъект.ГраницыШкалы = ПредопределенноеЗначение("Перечисление.ТипыГраницыШкалыПоказателяЭффективности.ФактическоеЗначение");
		НоваяСтрока = СправочникОбъект.ШкалаЗначений.Добавить();
		НоваяСтрока.ЗначениеДо = КлючевыеПоказателиЭффективностиКлиентСервер.ЗначениеПоследнегоПорогаШкалы(СправочникОбъект.ОбратнаяШкала);
		
		СправочникОбъект.ОбменДанными.Загрузка = Истина;
		СправочникОбъект.Записать();
	КонецЦикла;

	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Выборка.Количество() = 0);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли