
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		ПриПолученииДанныхНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.Наименование = Лев(Объект.Формулировка, 100);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОчиститьОценкиВариантовОтвета();
	Для каждого ВариантОтвета Из ВариантыОтветов Цикл
		Если ЗначениеЗаполнено(ВариантОтвета.Наименование) И ВариантОтвета.Модифицированность Тогда
		    ЗаписатьВариантОтветаНаСервере(ВариантОтвета);
		КонецЕсли;
		ВариантОтвета.Оценка = ОценкаВопроса(ВариантОтвета);
		ВариантОтвета.РеквизитДопУпорядочивания = ВариантыОтветов.Индекс(ВариантОтвета) + 1;
	КонецЦикла;
	
	ЗаписатьОценкиОтвета();
	ЗаписатьВариантыОтветовАнкет();
	
	ПоследнийЗаписанныйНаборВариантовОтветов = ВариантыОтветов.Выгрузить(,"Наименование").ВыгрузитьКолонку("Наименование");
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиПользователя", "ВариантыОтветовНаВопросыАнкетированияДляОценкиПерсонала", ПоследнийЗаписанныйНаборВариантовОтветов);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьЗначенияТумблера(Команда)
	
	ПараметрыФормы = Новый Структура("АдресВариантовОтветов", АдресВариантовОтветов()); 
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПриИзмененииВариантовОтветов", ЭтотОбъект, Новый Структура("АдресВариантовОтветовРезультат"));
	
	ОткрытьФорму("Справочник.МероприятияОценкиПерсонала.Форма.НастройкаВариантовОтветов", ПараметрыФормы, ЭтаФорма,,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПользовательскийТумблерПриИзменении(Элемент)
	
	Если ПользовательскийТумблер <> 0 И (ПользовательскийТумблер <> ВариантыОтветов.Количество() - 1) Тогда
		ПользовательскийТумблер = 0;
	КонецЕсли;
	
	ПрямойПорядокСледованияОтветов = (ПользовательскийТумблер = 0);
	
	УстановитьВидимостьУказателей(ЭтаФорма);
	РасположитьДекорацииВыраженности();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РасположитьДекорацииВыраженности()

	Элементы.МаксМинКартинка.Видимость = ПрямойПорядокСледованияОтветов;
	Элементы.МинМаксКартинка.Видимость = Не ПрямойПорядокСледованияОтветов;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииВариантовОтветов(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(РезультатЗакрытия) = Тип("Строка") Тогда
		ЗагрузитьВариантыОтветов(РезультатЗакрытия);
	КонецЕсли;
	
	УстановитьСвойстваПользовательскогоТумблера();
	УстановитьШиринуГруппыКартинки(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()

	ПрочитатьПараметры();
	
	ЗаполнитьВариантыОтветов();
	УстановитьПрямойПорядокСледованияОтветов();

	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПараметры()

	Параметры.Свойство("ХарактеристикаПерсонала", ХарактеристикаПерсонала);
	
	Если Не Параметры.Свойство("ТипОтвета") Тогда
		Объект.ТипОтвета = ПредопределенноеЗначение("Перечисление.ТипыОтветовНаВопрос.ОдинВариантИз");
		Объект.ВидПереключателя = ПредопределенноеЗначение("Перечисление.ВидыПереключателяВАнкетах.Тумблер");
	Иначе
		Параметры.Свойство("ТипОтвета", Объект.ТипОтвета);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()

	УстановитьЗаголовокФормы();
	УстановитьТекстПодсказки();
	УстановитьТекстУказателейПодсказок();
	
	УстановитьСвойстваПользовательскогоТумблера();
	
	УстановитьШиринуГруппыКартинки(ЭтаФорма);
	УстановитьВидимостьУказателей(ЭтаФорма);
	РасположитьДекорацииВыраженности();

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()

	ЭтаФорма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Настройка поведенческого индикатора для характеристики персонала ""%1""'"), ХарактеристикаПерсонала);

КонецПроцедуры

&НаСервере
Процедура УстановитьТекстУказателейПодсказок()

	ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Максимум
					|""%1""'"), ХарактеристикаПерсонала);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПодсказкаЛево",
		"Заголовок",
		ТекстПодсказки);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПодсказкаПраво",
		"Заголовок",
		ТекстПодсказки);

КонецПроцедуры

&НаСервере
Процедура УстановитьТекстПодсказки()

	ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Выберите ответ, соответствующий максимальному уровню характеристики персонала ""%1"".
					|Выбрать можно только крайние варианты ответов.'"), ХарактеристикаПерсонала);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПодсказкаУказателей",
		"Заголовок",
		ТекстПодсказки);

КонецПроцедуры
	
&НаСервере
Процедура УстановитьСвойстваПользовательскогоТумблера()
	
	Элементы.ПользовательскийТумблер.СписокВыбора.Очистить();
	
	Для каждого ВариантОтвета Из ВариантыОтветов Цикл
		Элементы.ПользовательскийТумблер.СписокВыбора.Добавить(ВариантыОтветов.Индекс(ВариантОтвета), ВариантОтвета.Наименование);
	КонецЦикла; 
	
	Если ПрямойПорядокСледованияОтветов Тогда
		ПользовательскийТумблер = 0;
	Иначе
		ПользовательскийТумблер = ВариантыОтветов.Количество() - 1;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьШиринуГруппыКартинки(Форма)

	ШиринаЭлемента = 0;
	Для каждого ВариантОтвета Из Форма.ВариантыОтветов Цикл
		ШиринаЭлемента = ШиринаЭлемента + 2 + СтрДлина(ВариантОтвета.Наименование)*0.68;
	КонецЦикла; 
	
	Форма.Элементы.ХарактеристикаПерсонала.МаксимальнаяШирина = ШиринаЭлемента;
	Форма.Элементы.ХарактеристикаГруппаЖелтая.Ширина = ШиринаЭлемента;
	Форма.Элементы.МинМаксКартинка.МаксимальнаяШирина = ШиринаЭлемента;
	Форма.Элементы.МаксМинКартинка.МаксимальнаяШирина = ШиринаЭлемента;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьУказателей(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"УказателиЛево",
		"Видимость",
		Форма.ПользовательскийТумблер = 0);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"УказателиПраво",
		"Видимость",
		Форма.ПользовательскийТумблер = Форма.ВариантыОтветов.Количество() - 1);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВариантыОтветов()
	
	ЗагрузитьТекущиеВарианты();
	Если ВариантыОтветов.Количество() = 0 Тогда
		ЗагрузитьПредопределенныеВарианты();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВариантыОтветовАнкет()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыОтветов.Ссылка КАК Ссылка,
		|	ВариантыОтветов.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
		|ПОМЕСТИТЬ ВТВариантыОтветов
		|ИЗ
		|	&ВариантыОтветов КАК ВариантыОтветов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВариантыОтветовАнкет.Ссылка КАК Ссылка,
		|	ВариантыОтветовАнкет.ПометкаУдаления КАК ПометкаУдаления,
		|	ВариантыОтветовАнкет.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
		|ПОМЕСТИТЬ ВТСуществующиеОтветы
		|ИЗ
		|	Справочник.ВариантыОтветовАнкет КАК ВариантыОтветовАнкет
		|ГДЕ
		|	ВариантыОтветовАнкет.Владелец = &Вопрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуществующиеОтветы.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ВариантыОтветов.Ссылка ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ СуществующиеОтветы.ПометкаУдаления
		|	КОНЕЦ КАК ПометкаУдаления,
		|	ВариантыОтветов.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
		|ИЗ
		|	ВТСуществующиеОтветы КАК СуществующиеОтветы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВариантыОтветов КАК ВариантыОтветов
		|		ПО СуществующиеОтветы.Ссылка = ВариантыОтветов.Ссылка
		|ГДЕ
		|	(ВариантыОтветов.Ссылка ЕСТЬ NULL
		|			ИЛИ ВариантыОтветов.РеквизитДопУпорядочивания <> СуществующиеОтветы.РеквизитДопУпорядочивания)";
	Запрос.УстановитьПараметр("Вопрос", Объект.Ссылка);
	Запрос.УстановитьПараметр("ВариантыОтветов", ВариантыОтветов.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СледующийРеквизитДопУпорядочивания = ВариантыОтветов.Количество() + 1;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОтветОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ОтветОбъект.ПометкаУдаления = Выборка.ПометкаУдаления;
		Если Выборка.РеквизитДопУпорядочивания = Null Тогда
			ОтветОбъект.РеквизитДопУпорядочивания = СледующийРеквизитДопУпорядочивания;
			СледующийРеквизитДопУпорядочивания = СледующийРеквизитДопУпорядочивания + 1;
		Иначе
			ОтветОбъект.РеквизитДопУпорядочивания = Выборка.РеквизитДопУпорядочивания;
		КонецЕсли;
		
		Попытка
			ОтветОбъект.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Анкетирование'"), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТекущиеВарианты()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыОтветовАнкет.Наименование КАК Наименование,
		|	ВариантыОтветовАнкет.Ссылка КАК Ссылка,
		|	ВариантыОтветовАнкет.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
		|	ЕСТЬNULL(ОценкиВариантовОтвета.ОценкаОтвета, 0) КАК Оценка
		|ИЗ
		|	Справочник.ВариантыОтветовАнкет КАК ВариантыОтветовАнкет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОценкиВариантовОтвета КАК ОценкиВариантовОтвета
		|		ПО ВариантыОтветовАнкет.Ссылка = ОценкиВариантовОтвета.ВариантОтвета
		|			И ВариантыОтветовАнкет.Владелец = ОценкиВариантовОтвета.Вопрос
		|			И (ОценкиВариантовОтвета.ХарактеристикаПерсонала = &ХарактеристикаПерсонала)
		|ГДЕ
		|	ВариантыОтветовАнкет.Владелец = &Вопрос
		|	И ВариантыОтветовАнкет.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВариантыОтветовАнкет.РеквизитДопУпорядочивания";
	Запрос.УстановитьПараметр("Вопрос", Объект.Ссылка);
	Запрос.УстановитьПараметр("ХарактеристикаПерсонала", ХарактеристикаПерсонала);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ВариантыОтветов.Загрузить(РезультатЗапроса.Выгрузить());

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПредопределенныеВарианты()

	ПоследнийЗаписанныйНаборВариантовОтветов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПользователя", "ВариантыОтветовНаВопросыАнкетированияДляОценкиПерсонала", ОценкаПерсонала.ВариантыОтветовНаВопросыАнкетированияДляОценкиПерсонала());
	
	Для каждого ВариантОтвета Из ПоследнийЗаписанныйНаборВариантовОтветов Цикл
		НоваяСтрока = ВариантыОтветов.Добавить();
		НоваяСтрока.Наименование = ВариантОтвета;
		НоваяСтрока.Модифицированность = Истина;
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьВариантОтветаНаСервере(ВариантОтвета)

	Если Не ЗначениеЗаполнено(ВариантОтвета.Ссылка) Тогда
		ОтветОбъект = Справочники.ВариантыОтветовАнкет.СоздатьЭлемент();
		ОтветОбъект.Владелец = Объект.Ссылка;
	Иначе	
		ОтветОбъект = ВариантОтвета.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	ОтветОбъект.Наименование = ВариантОтвета.Наименование;
	
	Попытка
		ОтветОбъект.Записать();
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Анкетирование'"), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ложь;
	КонецПопытки;
	
	ВариантОтвета.Ссылка = ОтветОбъект.Ссылка;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция АдресВариантовОтветов()
	Возврат ПоместитьВоВременноеХранилище(ВариантыОтветов.Выгрузить(), Новый УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ЗагрузитьВариантыОтветов(АдресВХранилище)
	ВариантыОтветов.Загрузить(ПолучитьИзВременногоХранилища(АдресВХранилище));
КонецПроцедуры

&НаСервере
Функция ОценкаВопроса(ВариантОтвета)

	Если ПрямойПорядокСледованияОтветов Тогда
		Возврат ВариантыОтветов.Количество() - ВариантыОтветов.Индекс(ВариантОтвета);
	Иначе
		Возврат ВариантыОтветов.Индекс(ВариантОтвета) + 1;
	КонецЕсли;

КонецФункции

&НаСервере
Процедура ОчиститьОценкиВариантовОтвета()

	НаборЗаписей = РегистрыСведений.ОценкиВариантовОтвета.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ХарактеристикаПерсонала.Установить(ХарактеристикаПерсонала);
	НаборЗаписей.Отбор.Вопрос.Установить(Объект.Ссылка);
	
	НаборЗаписей.Записать(Истина);

КонецПроцедуры

&НаСервере
Процедура ЗаписатьОценкиОтвета()

	Для каждого ВариантОтвета Из ВариантыОтветов Цикл
		МенеджерЗаписи = РегистрыСведений.ОценкиВариантовОтвета.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.ХарактеристикаПерсонала = ХарактеристикаПерсонала;
		МенеджерЗаписи.Вопрос = Объект.Ссылка;
		МенеджерЗаписи.ВариантОтвета = ВариантОтвета.Ссылка;
		МенеджерЗаписи.ОценкаОтвета = ВариантОтвета.Оценка;
		
		МенеджерЗаписи.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПрямойПорядокСледованияОтветов()

	ПервыйНомер = Неопределено;
	ПоследнийНомер = Неопределено;
	
	Для каждого ВариантОтвета Из ВариантыОтветов Цикл
		Если ВариантОтвета.Оценка = 0 Тогда
			Продолжить;
		КонецЕсли;
		ПервыйНомер = ?(ПервыйНомер = Неопределено, ВариантОтвета.Оценка, ПервыйНомер);
		ПоследнийНомер = ВариантОтвета.Оценка;
	КонецЦикла; 
	
	Если ПервыйНомер = Неопределено
		ИЛИ ПоследнийНомер > ПервыйНомер Тогда
		ПрямойПорядокСледованияОтветов = Ложь;
	Иначе
		ПрямойПорядокСледованияОтветов = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти