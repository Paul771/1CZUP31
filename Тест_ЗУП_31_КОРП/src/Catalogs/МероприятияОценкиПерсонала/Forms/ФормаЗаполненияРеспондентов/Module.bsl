
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Участники.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресСотрудниковВХранилище));
	
	ВключатьРольКоллега = Истина;
	ВключатьРольСамооценка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьСвойстваПоляВводаПоИспользованию("КоличествоРеспондентовСотрудника", ОграничиватьКоличествоРеспондентовСотрудника);
	УстановитьСвойстваПоляВводаПоИспользованию("КоличествоСотрудниковРеспондента", ОграничиватьКоличествоСотрудниковРеспондента);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
	
&НаКлиенте
Процедура СформироватьТаблицуРеспондентовЗакрытьФорму(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	
	
	АдресРеспондентовВХранилище = ТаблицаРеспондентовИндивидуальныйНабор();
	
	Закрыть(АдресРеспондентовВХранилище);
	
КонецПроцедуры

#КонецОбласти  

#Область ПроцедурыИФункцииОсновнойФункциональности

&НаСервере
Функция ТаблицаРеспондентовИндивидуальныйНабор()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Участники", Участники.Выгрузить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Участники.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ Участники
	|ИЗ
	|	&Участники КАК Участники";
	
	Запрос.Выполнить();
	
	ОписательВТ = КадровыйУчет.ОписаниеВременнойТаблицыОтборовФизическихЛиц("Участники");
	
	КадровыйУчет.СоздатьВТТекущиеКадровыеДанныеСотрудниковФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц, ОписательВТ, Истина, , "ТекущееПодразделение,ДатаУвольнения", "ВТТекущиеКадровыеДанныеСотрудников");

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(Участники.ФизическоеЛицо, Сотрудники.ФизическоеЛицо) КАК ФизическоеЛицо,
	|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Участники.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					Участники.ФизическоеЛицо
	|				ИЗ
	|					Участники)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЯвляетсяОцениваемым
	|ПОМЕСТИТЬ Сотрудники
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	|		ПО (ТекущиеКадровыеДанныеСотрудников.Сотрудник = Сотрудники.Ссылка)
	|			И (ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = Сотрудники.ФизическоеЛицо)
	|		ПОЛНОЕ СОЕДИНЕНИЕ Участники КАК Участники
	|		ПО Сотрудники.ФизическоеЛицо = Участники.ФизическоеЛицо
	|ГДЕ
	|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	2 КАК Приоритет,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Самооценка.ФизическоеЛицо КАК Респондент,
	|	&РольСамооценка КАК РольРеспондента
	|ПОМЕСТИТЬ Респонденты
	|ИЗ
	|	Сотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Сотрудники КАК Самооценка
	|		ПО Сотрудники.ФизическоеЛицо = Самооценка.ФизическоеЛицо
	|			И (Сотрудники.ЯвляетсяОцениваемым)
	|ГДЕ
	|	&ВключатьРольСамооценка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	3,
	|	Сотрудники.ФизическоеЛицо,
	|	Коллега.ФизическоеЛицо,
	|	&РольКоллега
	|ИЗ
	|	Сотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Сотрудники КАК Коллега
	|		ПО Сотрудники.ФизическоеЛицо <> Коллега.ФизическоеЛицо
	|			И Сотрудники.Подразделение = Коллега.Подразделение
	|			И (Сотрудники.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
	|			И (Сотрудники.ЯвляетсяОцениваемым)
	|ГДЕ
	|	&ВключатьРольКоллега
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Респонденты.Респондент КАК Респондент,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Респонденты.ФизическоеЛицо) КАК КоличествоОцениваемых
	|ПОМЕСТИТЬ СтатистикаРеспондентов
	|ИЗ
	|	Респонденты КАК Респонденты
	|
	|СГРУППИРОВАТЬ ПО
	|	Респонденты.Респондент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Респонденты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Респонденты.Респондент КАК Респондент,
	|	Респонденты.РольРеспондента КАК РольРеспондента,
	|	СтатистикаРеспондентов.КоличествоОцениваемых КАК КоличествоОцениваемых,
	|	Респонденты.Приоритет КАК Приоритет
	|ИЗ
	|	Респонденты КАК Респонденты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатистикаРеспондентов КАК СтатистикаРеспондентов
	|		ПО Респонденты.Респондент = СтатистикаРеспондентов.Респондент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Респонденты.ФизическоеЛицо,
	|	Респонденты.Приоритет,
	|	СтатистикаРеспондентов.КоличествоОцениваемых
	|ИТОГИ ПО
	|	ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ВключатьРольКоллега", ВключатьРольКоллега);
	Запрос.УстановитьПараметр("ВключатьРольСамооценка",	ВключатьРольСамооценка);
	Запрос.УстановитьПараметр("РольСамооценка",
		ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.РолиРеспондентаОценкиПерсонала.Самооценка"));
	Запрос.УстановитьПараметр("РольКоллега",
		ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.РолиРеспондентаОценкиПерсонала.Коллега"));
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПоФизлицам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаРеспондентов = Новый ТаблицаЗначений;
	ТаблицаРеспондентов.Колонки.Добавить("ФизическоеЛицо",		Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРеспондентов.Колонки.Добавить("Респондент", 			Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРеспондентов.Колонки.Добавить("РольРеспондента", 	Новый ОписаниеТипов("СправочникСсылка.РолиРеспондентаОценкиПерсонала"));
	
	КоличествоСотрудниковРеспондентов = Новый Соответствие;
	
	Пока ВыборкаПоФизлицам.Следующий() Цикл
		КоличествоРеспондентов = 0;
		ВыборкаРеспондентов = ВыборкаПоФизлицам.Выбрать();
		Пока ВыборкаРеспондентов.Следующий() Цикл
			
			КоличествоСотрудников = КоличествоСотрудниковРеспондентов[ВыборкаРеспондентов.Респондент];
			Если КоличествоСотрудников = Неопределено Тогда
				КоличествоСотрудников = 0;
			КонецЕсли;
			
			Если ОграничиватьКоличествоРеспондентовСотрудника И КоличествоРеспондентов = КоличествоРеспондентовСотрудника Тогда
				// переходим к следующему сотруднику
				Прервать;
			КонецЕсли;
			
			Если ОграничиватьКоличествоСотрудниковРеспондента И КоличествоСотрудников = КоличествоСотрудниковРеспондента Тогда
				// переходим к следующему респонденту
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ТаблицаРеспондентов.Добавить(), ВыборкаРеспондентов);
				
			// считаем респондентов сотрудника
			КоличествоРеспондентов = КоличествоРеспондентов + 1;
		
			// считаем сотрудников респондента
			КоличествоСотрудников = КоличествоСотрудников + 1;
			КоличествоСотрудниковРеспондентов.Вставить(ВыборкаРеспондентов.Респондент, КоличествоСотрудников);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаРеспондентов,Новый УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти  

#Область ОбработчикиСобытийЭлементовФормы


&НаКлиенте
Процедура УстановитьСвойстваПоляВводаПоИспользованию(ИмяПоля, Использование)
	
	Элементы[ИмяПоля].Доступность = Использование;
	Элементы[ИмяПоля].АвтоОтметкаНезаполненного = Использование;
	Элементы[ИмяПоля].ОтметкаНезаполненного = Использование;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничиватьКоличествоРеспондентовСотрудникаПриИзменении(Элемент)
	
	УстановитьСвойстваПоляВводаПоИспользованию("КоличествоРеспондентовСотрудника", ОграничиватьКоличествоРеспондентовСотрудника);
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничиватьКоличествоСотрудниковРеспондентаПриИзменении(Элемент)
	
	УстановитьСвойстваПоляВводаПоИспользованию("КоличествоСотрудниковРеспондента", ОграничиватьКоличествоСотрудниковРеспондента);
	
КонецПроцедуры

#КонецОбласти