
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КомандыФормы;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодборПерсонала.ОбновитьСоставКомандОтправкиВакансий(ЭтотОбъект);
	
	НастроитьВидСпискаВакансий();
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Вакансии.РежимВыбора = Истина;
		Если Параметры.Свойство("СписокПодобранных") Тогда
			СписокПодобранных.ЗагрузитьЗначения(Параметры.СписокПодобранных);
			ОбновитьОтображениеПодобранных();
		КонецЕсли;	
	КонецЕсли;
	
	Если НЕ Параметры.РежимВыбора ИЛИ Параметры.Свойство("ТолькоОткрытыеВакансии") Тогда
		ЗначениеОтбора = Новый Массив;
		ЗначениеОтбора.Добавить(Перечисления.СостоянияВакансии.Приостановлена);
		ЗначениеОтбора.Добавить(Перечисления.СостоянияВакансии.Закрыта);
		ЗначениеОтбора.Добавить(Перечисления.СостоянияВакансии.Отменена);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Вакансии,
			"Состояние",
			ЗначениеОтбора,
			ВидСравненияКомпоновкиДанных.НеВСписке,
			НСтр("ru = 'Только открытые вакансии'"),
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ,
			Новый УникальныйИдентификатор);
	КонецЕсли;
	
	ШаблонСообщения = ПодборПерсонала.ШаблонСоСпискомСсылок("Справочник.Вакансии");
	
	УстановитьВидимостьОткликовКандидатов();
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Вакансии", , , , "Организация");
	
	СоздатьКомандыЗагрузкиССайта();
	
	СоздаватьВакансииТолькоПоЗаявке = ПолучитьФункциональнуюОпцию("ОткрытиеВакансииТребуетСогласования");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СоздатьПоЗаявке", "Видимость", СоздаватьВакансииТолькоПоЗаявке);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Создать", "Видимость", Не СоздаватьВакансииТолькоПоЗаявке);
	
	НастроитьСписокКандидатов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыНастройкиДоступаКСайтам" Тогда
		ОбработкаОповещенияИзмененыНастройкиДоступаКСайтам();
	ИначеЕсли ИмяСобытия = "ЗагруженыВакансии" Тогда
		Элементы.Вакансии.Обновить();
	КонецЕсли;
	
	ОбработатьОповещенияЭтаповРаботыСКандидатами(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ВладелецФормы <> ЭтаФорма Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыНовой = Новый Структура("Основание");
	ПараметрыНовой.Основание = ВыбранноеЗначение;
	
	ОткрытьФорму("Справочник.Вакансии.ФормаОбъекта", ПараметрыНовой, ЭтаФорма, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ОбработкаНавигационнойСсылкиПозицияМассовогоНабора(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	ОбработкаНавигационнойСсылкиСостоянияКандидатов(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПоЗаявке(Команда)
	
	ПараметрыВыбора = Новый Структура("РежимВыбора, ТолькоДляСозданияВакансий");
	ПараметрыВыбора.РежимВыбора = Истина;
	ПараметрыВыбора.ТолькоДляСозданияВакансий = Истина;
	
	ОткрытьФорму("Документ.ЗаявкаНаПодборПерсонала.ФормаВыбора", ПараметрыВыбора, ЭтаФорма, ЭтаФорма, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если Элементы.Вакансии.РежимВыбора И НЕ ЗакрыватьПриВыборе Тогда
		
		СтандартнаяОбработка = Ложь;
		
		МассивВыбранных = Элементы.Вакансии.ВыделенныеСтроки;
	
		КоличествоВыбранных = МассивВыбранных.Количество();
		Если КоличествоВыбранных Тогда
			ОповеститьОВыборе(МассивВыбранных);
		КонецЕсли;
		
		Если КоличествоВыбранных > 1 Тогда
			Закрыть();
		Иначе
			Для Каждого ВыбранноеЗначение Из МассивВыбранных Цикл
				Если СписокПодобранных.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
					СписокПодобранных.Добавить(ВыбранноеЗначение);
				КонецЕсли; 
			КонецЦикла;
			ОбновитьОтображениеПодобранных();			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаЗагрузитьССайта(Команда)
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ИнтеграцияРекрутинговыхСайтов") Тогда
		Возврат;
	КонецЕсли;

	МодульИнтеграцияРекрутинговыхСайтовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтеграцияРекрутинговыхСайтовКлиент");
	МодульИнтеграцияРекрутинговыхСайтовКлиент.ЗагрузитьВакансииССайта(Команда.Имя, СоответствиеКомандИСайтов, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВакансию(Команда)
	
	ВакансииМассив = ПодборПерсоналаКлиент.СсылкиНаОбъектыВыделенныхСтрокСписка(Элементы.Вакансии);
	
	Если ВакансииМассив.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ПодборПерсоналаКлиент.ПараметрыФормированияПисьма(УникальныйИдентификатор);
	ДополнительныеПараметры.ИдентификаторПечатнойФормы = ПодборПерсоналаКлиент.ИдентификаторПечатнойФормы(Команда.Имя);
	ДополнительныеПараметры.Предметы = ВакансииМассив;
	
	Если ПолучитьФункциональнуюОпциюФормы("ИспользоватьШаблоныСообщений") Тогда
		ОткрытьФормуВыбораШаблона(ВакансииМассив[0], ДополнительныеПараметры);
	Иначе
		ДополнительныеПараметры.Вставить("ВывестиСписокПредметов");
		ПодборПерсоналаКлиент.СформироватьСообщениеБезШаблона(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьВидимостьКомандОтправкиВакансий()
	ПодборПерсоналаКлиент.ОбновитьВидимостьКомандОтправкиВакансий(ЭтотОбъект, Элементы.Вакансии);
КонецПроцедуры

&НаКлиенте
Процедура ПоделитьсяСсылкой(Команда)
	
	ВакансииМассив = ПодборПерсоналаКлиент.СсылкиНаОбъектыВыделенныхСтрокСписка(Элементы.Вакансии);
	
	Если ВакансииМассив.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ПодборПерсоналаКлиент.ПараметрыФормированияПисьма(УникальныйИдентификатор);
	ДополнительныеПараметры.Предметы = ВакансииМассив;
	
	Если ПолучитьФункциональнуюОпциюФормы("ИспользоватьШаблоныСообщений") Тогда
		Если ЗначениеЗаполнено(ШаблонСообщения) Тогда
			ПодборПерсоналаКлиент.Подключаемый_СформироватьСообщение(ШаблонСообщения, ДополнительныеПараметры);
		Иначе
			ОткрытьФормуВыбораШаблона(ВакансииМассив[0], ДополнительныеПараметры);
		КонецЕсли;
	Иначе
		ДополнительныеПараметры.Вставить("ВывестиСписокСсылок");
		ПодборПерсоналаКлиент.СформироватьСообщениеБезШаблона(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСпискаВсеВакансии(Команда)
	
	ВидВсеВакансии = Истина;
	УстановитьВидСпискаВакансий(ЭтаФорма);
	УстановитьОтборПоПодразделению(ЭтаФорма);
	
	ПодключитьОбработчикОжидания("ПриИзмененииСохраняемойНастройки", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСпискаПоПодразделениям(Команда)
	
	ВидВсеВакансии = Ложь;
	УстановитьВидСпискаВакансий(ЭтаФорма);
	УстановитьОтборПоПодразделению(ЭтаФорма);
	
	ПодключитьОбработчикОжидания("ПриИзмененииСохраняемойНастройки", 0.2, Истина);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Вакансии);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Вакансии, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Вакансии);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ПоказыватьОдобренныхОтклоненныхКандидатов(Команда)
	
	ПодборПерсоналаКлиентСервер.УстановитьСнятьОтборОдобренныхОтклоненныхКандидатов(
		Кандидаты, 
		Элементы.ПоказыватьОдобренныхОтклоненныхКандидатов.Пометка, 
		Элементы.ПоказыватьОдобренныхОтклоненныхКандидатов);
	
	ПодключитьОбработчикОжидания("ПриИзмененииСохраняемойНастройки", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодборПерсоналаКлиент.НачатьОбновлениеКомандОтправкиВакансий(ЭтотОбъект);
	
	ПодключитьОбработчикОжидания("ПриАктивизацииСтрокиВакансииНаКлиенте", 0.1, Истина);
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураПредприятияПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОтборПоПодразделениюНаКлиенте", 0.1, Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СоздатьКомандыЗагрузкиССайта()
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ИнтеграцияРекрутинговыхСайтов") Тогда
		МодульИнтеграцияРекрутинговыхСайтов = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияРекрутинговыхСайтов");
		МодульИнтеграцияРекрутинговыхСайтов.ВакансииСписокПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОткликовКандидатов()
	
	ОткликиКандидатов = ПодборПерсонала.ОткликиКандидатов(Вакансии.Отбор.Элементы);
	
	Если ОткликиКандидатов.Количество() = 0 Или Параметры.РежимВыбора Тогда
		Элементы.ОповещенияГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ОповещенияГруппа.Видимость = Истина;
	ВакансииМассив = ОбщегоНазначения.ВыгрузитьКолонку(ОткликиКандидатов, "Вакансия", Истина);
	
	Если ВакансииМассив.Количество() = 1 Тогда
		ТекстПоВакансиям = НСтр("ru = 'по вакансии'");
	Иначе
		ТекстПоВакансиям = НСтр("ru = 'по вакансиям'");
	КонецЕсли;
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Есть не рассмотренные отклики (%1) %2'"), ОткликиКандидатов.Количество(), ТекстПоВакансиям);
	
	ЧастиСообщения = Новый Массив;
	ЧастиСообщения.Добавить(ТекстСообщения);
	ЧастиСообщения.Добавить(" ");
	
	Индекс = 0;
	Пока Индекс < ВакансииМассив.Количество() Цикл
		Если Индекс > 3 Тогда
			// Слишком много — дальше не выводим.
			ЧастьЗавершения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = ' и по другим (всего %1)'"), ВакансииМассив.Количество());
			ЧастиСообщения.Добавить(ЧастьЗавершения);
			Прервать;
		КонецЕсли;
		Если Индекс > 0 Тогда
			ЧастиСообщения.Добавить(", ");
		КонецЕсли;
		Вакансия = ВакансииМассив[Индекс];
		ЧастиСообщения.Добавить(Новый ФорматированнаяСтрока(Строка(Вакансия), , , , ПолучитьНавигационнуюСсылку(Вакансия)));
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Элементы.ОповещениеОбОткликах.Заголовок = Новый ФорматированнаяСтрока(ЧастиСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияИзмененыНастройкиДоступаКСайтам()
	
	КоличествоЭлементов = Элементы.КоманднаяПанельФормы.ПодчиненныеЭлементы.ФормаЗагрузить.ПодчиненныеЭлементы.Количество();
	ЭлементыДляУдаления = Новый Массив;
	Для Индекс = 0 По КоличествоЭлементов - 1 Цикл
		ЭлементыДляУдаления.Добавить(Элементы.КоманднаяПанельФормы.ПодчиненныеЭлементы.ФормаЗагрузить.ПодчиненныеЭлементы.Получить(Индекс));			
	КонецЦикла;
	
	Для Каждого ЭлементДляУдаления Из ЭлементыДляУдаления Цикл
		Элементы.Удалить(ЭлементДляУдаления);
	КонецЦикла;
	
	СоответствиеКомандИСайтов = Новый ФиксированноеСоответствие(Новый Соответствие);
	
	СоздатьКомандыЗагрузкиССайта();

КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеПодобранных()
	
	ЭлементУсловногоОформления = Неопределено;
	Для каждого ЭлементОформления Из УсловноеОформление.Элементы Цикл
		Если ЭлементОформления.Представление = НСтр("ru='Выделение подобранных'") Тогда
			ЭлементОформления.Отбор.Элементы[0].ПравоеЗначение = СписокПодобранных;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораШаблона(Вакансия, ПередаваемыеПараметры)
	
	Оповещение = Новый ОписаниеОповещения("Подключаемый_СформироватьСообщение", ОбщегоНазначенияКлиент.ОбщийМодуль("ПодборПерсоналаКлиент"), ПередаваемыеПараметры);
	
	ШаблоныСообщенийКлиент.ВыбратьШаблон(Оповещение, , Вакансия);
	
КонецПроцедуры

#Область ГруппировкаПоПодразделениям

&НаСервере
Процедура НастроитьВидСпискаВакансий()
	
	НастройкаВидВсеВакансии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ВакансииСписок", "ВидВсеВакансии");
	ВидВсеВакансии = НастройкаВидВсеВакансии;
	
	Если НастройкаВидВсеВакансии = Неопределено Тогда
		ВидВсеВакансии = Истина;
	КонецЕсли;
	
	УстановитьВидСпискаВакансий(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидСпискаВакансий(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "СтруктураПредприятия", "Видимость", Не Форма.ВидВсеВакансии);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "Подразделение", "Видимость", Форма.ВидВсеВакансии);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ВидСпискаВсеВакансии", "Пометка", Форма.ВидВсеВакансии);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ВидСпискаПоПодразделениям", "Пометка", Не Форма.ВидВсеВакансии);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоПодразделению(Форма)
	
	Если Форма.Элементы.СтруктураПредприятия.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.ВидВсеВакансии Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Вакансии, "Подразделение");
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Форма.Вакансии.Отбор, "Подразделение", Форма.Элементы.СтруктураПредприятия.ТекущаяСтрока, ВидСравненияКомпоновкиДанных.ВИерархии);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоПодразделениюНаКлиенте()
	
	УстановитьОтборПоПодразделениюНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПодразделениюНаСервере()
	
	УстановитьОтборПоПодразделению(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСохраняемойНастройки()
	
	Настройки = СохраняемыеНастройки();
	Настройки.ВидВсеВакансии = ВидВсеВакансии;
	Настройки.ПоказыватьОдобренныхОтклоненныхКандидатов = Элементы.ПоказыватьОдобренныхОтклоненныхКандидатов.Пометка;
	СохранитьНастройкиНаСервере(Настройки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СохраняемыеНастройки()
	
	Настройки = Новый Структура(
		"ВидВсеВакансии,
		|ПоказыватьОдобренныхОтклоненныхКандидатов");
	Возврат Настройки;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройкиНаСервере(Настройки)
	
	Для Каждого КлючИЗначение Из Настройки Цикл
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ВакансииСписок", КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПриАктивизацииСтрокиВакансииНаКлиенте()
	
	Если Элементы.Вакансии.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Вакансия = Элементы.Вакансии.ТекущаяСтрока;
	
	Если Вакансия = ВыбраннаяВакансия Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьОтборКандидатовПоВакансии(ЭтаФорма, Вакансия);
	УстановитьЗаголовокГруппыКандидатовПоВакансии(ЭтаФорма, Вакансия);
	ЗаполнитьИнформационныеСтрокиВакансии(Вакансия);
	
	ВыбраннаяВакансия = Вакансия;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборКандидатовПоВакансии(Форма, Вакансия)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Форма.Кандидаты.Отбор, "Вакансия", Вакансия, ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокГруппыКандидатовПоВакансии(Форма, Вакансия)
	
	ШаблонЗаголовка = НСтр("ru = 'Кандидаты на вакансию %1'");
	Форма.Элементы.КандидатыСписокГруппа.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, Вакансия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИнформационныеСтрокиВакансии(Вакансия)
	
	ИнформационныеСтроки = ИнформационныеСтрокиВакансии(Вакансия);

	Элементы.ИнформацияЗанятости.Заголовок = ИнформационныеСтроки.ИнформационнаяСтрокаЗанятости;
	Элементы.ИнформацияКандидатов.Заголовок = ИнформационныеСтроки.ИнформационнаяСтрокаКандидатов;
	
	ПозицииМассовогоНабора = ИнформационныеСтроки.ПозицииМассовогоНабора;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИнформационныеСтрокиВакансии(Вакансия)
	
	ДанныеВакансии = Справочники.Вакансии.ДанныеВакансии(Вакансия);
	
	ИнформационныеСтроки = Новый Структура(
		"ИнформационнаяСтрокаЗанятости,
		|ИнформационнаяСтрокаКандидатов,
		|ПозицииМассовогоНабора");
	
	Если ДанныеВакансии.СпособНабора = Перечисления.СпособНабораПерсоналаНаВакансию.ЕдиничныйНабор Тогда
		ИнформационныеСтроки.ИнформационнаяСтрокаЗанятости = НСтр("ru = 'По вакансии ведется единичный набор.'");
	Иначе
		Справочники.Вакансии.ЗаполнитьИнформационнуюСтрокуЗанятости(
			ИнформационныеСтроки.ИнформационнаяСтрокаЗанятости, ДанныеВакансии.НазначениеНабора, ДанныеВакансии.Должность, ДанныеВакансии.Позиция, ДанныеВакансии.Подразделение, ИнформационныеСтроки.ПозицииМассовогоНабора);
	КонецЕсли;
	
	Справочники.Вакансии.ЗаполнитьИнформационнуюСтрокуКандидатов(
		ИнформационныеСтроки.ИнформационнаяСтрокаКандидатов, Вакансия, ДанныеВакансии.СпособНабора, ДанныеВакансии.Позиция, ДанныеВакансии.ДатаОткрытия, ИнформационныеСтроки.ПозицииМассовогоНабора);
		
	Возврат ИнформационныеСтроки;
		
КонецФункции

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиПозицияМассовогоНабора(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки <> "ПозицииМассовогоНабора" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ПозицииМассовогоНабора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Отбор");
	ПараметрыФормы.Отбор = Новый Структура("Ссылка");
	ПараметрыФормы.Отбор.Ссылка = Новый Массив(ПозицииМассовогоНабора);
	ОткрытьФорму("Справочник.ШтатноеРасписание.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиСостоянияКандидатов(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("Отбор");
	ПараметрыФормы.Отбор = Новый Структура("Вакансия");
	ПараметрыФормы.Отбор.Вакансия = ВыбраннаяВакансия;
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_Этап_") <> 0 Тогда
		ПараметрыФормы.Отбор.Вставить("ЭтапРаботы", СостояниеКандидатаЭтапСсылкаПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки));
	КонецЕсли;
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_Решение_") <> 0 Тогда
		ПараметрыФормы.Отбор.Вставить("Состояние", СостояниеКандидатаРешениеПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки));
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Кандидаты.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СостояниеКандидатаЭтапСсылкаПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки)
	
	ИдентификаторЭтапа = Новый УникальныйИдентификатор(СтрЗаменить(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_Этап_", ""));
	ЭтапРаботы = Справочники.ЭтапыРаботыСКандидатами.ПолучитьСсылку(ИдентификаторЭтапа);
	
	Возврат ЭтапРаботы;
	
КонецФункции

&НаСервереБезКонтекста
Функция СостояниеКандидатаРешениеПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки)
	Возврат Перечисления.СостоянияСогласования[СтрЗаменить(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_Решение_", "")];
КонецФункции

&НаКлиенте
Процедура ОбработатьОповещенияЭтаповРаботыСКандидатами(ИмяСобытия, Параметр, Источник)
	
	ОбрабатываемыеСобытия = Новый Массив;
	ОбрабатываемыеСобытия.Добавить("ЗапланированЭтапРаботыСКандидатом");
	ОбрабатываемыеСобытия.Добавить("ЗавершенЭтапРаботыСКандидатом");
	ОбрабатываемыеСобытия.Добавить("УтвержденыКандидаты");
	ОбрабатываемыеСобытия.Добавить("ОтклоненыКандидаты");
	ОбрабатываемыеСобытия.Добавить("ОтменаРешенияПоКандидату");
	
	Если ОбрабатываемыеСобытия.Найти(ИмяСобытия) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметр.Свойство("Кандидаты") Или Не Параметр.Свойство("Вакансии") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметр.Вакансии.Найти(ВыбраннаяВакансия) <> Неопределено Тогда
		ЗаполнитьИнформационныеСтрокиВакансии(ВыбраннаяВакансия);
		Элементы.Кандидаты.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписокКандидатов()
	
	Справочники.Кандидаты.УстановитьУсловноеОформлениеСпискаКандидатов(Кандидаты);
	
	ПоказыватьОдобренныхОтклоненныхКандидатов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ВакансииСписок", "ПоказыватьОдобренныхОтклоненныхКандидатов");
	Если ПоказыватьОдобренныхОтклоненныхКандидатов = Неопределено Тогда
		ПоказыватьОдобренныхОтклоненныхКандидатов = Ложь;
	КонецЕсли;
	ПодборПерсоналаКлиентСервер.УстановитьСнятьОтборОдобренныхОтклоненныхКандидатов(Кандидаты, Не ПоказыватьОдобренныхОтклоненныхКандидатов, Элементы.ПоказыватьОдобренныхОтклоненныхКандидатов);
	
КонецПроцедуры

#КонецОбласти