#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ПрофилиДолжностей") Тогда
		ЗаполнитьПоПрофилюДолжности(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаПодборПерсонала") Тогда
		ЗаполнитьПоЗаявкеНаПодборПерсонала(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание")
		ИЛИ НазначениеНабора = ПредопределенноеЗначение("Перечисление.НазначениеНабораПерсоналаНаВакансию.ДолжностьПодразделение") Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Позиция");
		
	КонецЕсли;
	
	// По одной заявке допустимо создавать только одну вакансию.
	Если ЕстьДругиеВакансииПоЗаявке(Основание, Ссылка) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'По заявке %1 уже существуют ранее зарегистрированные вакансии.'"), Основание);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Состояние = Перечисления.СостоянияВакансии.Открыта Тогда
		Если Справочники.Вакансии.ЕстьДругиеВакансииПоКомбинацииДолжностьПодразделение(Должность, Подразделение, , Ссылка) Тогда 
			ВызватьИсключение НСтр("ru = 'Существует вакансия с аналогичными должностью и подразделением.'");
		КонецЕсли;
	КонецЕсли;
	
	Если Ссылка.Пустая() Тогда
		Если Не СоответствуетПрофилюДолжности Тогда
			ЭлектронноеИнтервью.СкопироватьНастройкиЭтапов(ЭтотОбъект, "Вакансии");
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьПризнакиИзмененности();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ЭтапыРаботыСКандидатамиИзменены") И ДополнительныеСвойства["ЭтапыРаботыСКандидатамиИзменены"] = Истина Тогда
		ЭлектронноеИнтервью.ОтменитьАнкетыУдаленныхЭтапов(Ссылка);
	КонецЕсли;
	
	ОбновитьКандидатовПоВакансии();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	Возврат ОбменДаннымиЗарплатаКадрыРасширенный.ОграниченияРегистрацииПоОрганизацииИПодразделению(
		ЭтотОбъект, ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Позиция, "Владелец"), ЭтотОбъект.Подразделение);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоПрофилюДолжности(Профиль)
	
	ЭтотОбъект.ПрофильДолжности = Профиль;
	
	ДанныеПрофиля = Справочники.ПрофилиДолжностей.ДанныеПрофиляДолжности(Профиль);
	
	// Попробуем подобрать позицию штатного расписания, если штатное расписание используется.
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		// Штатное расписание не используется, заполняем независимо от позиции подразделение и должность.
		ЭтотОбъект.Подразделение = ДанныеПрофиля.Подразделение;
	Иначе
		ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПозицииШтатногоРасписания.Ссылка,
			|	ПозицииШтатногоРасписания.Приоритет
			|ИЗ
			|	(ВЫБРАТЬ
			|		ШтатноеРасписание.Ссылка КАК Ссылка,
			|		1 КАК Приоритет
			|	ИЗ
			|		Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестоПозицииШтатногоРасписанияВСтруктуреПредприятия КАК МестоПозиции
			|			ПО (МестоПозиции.Позиция = ШтатноеРасписание.Ссылка)
			|				И (МестоПозиции.Подразделение = &Подразделение)
			|				И (ШтатноеРасписание.Должность = &Должность)
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ШтатноеРасписание.Ссылка,
			|		2
			|	ИЗ
			|		Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|	ГДЕ
			|		ШтатноеРасписание.Должность = &Должность) КАК ПозицииШтатногоРасписания
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПозицииШтатногоРасписания.Приоритет";

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Должность", ДанныеПрофиля.Должность);
		Запрос.УстановитьПараметр("Подразделение", ДанныеПрофиля.Подразделение);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьПоПозицииШтатногоРасписания(Выборка.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронноеИнтервью") Тогда
		
		ЭтотОбъект.ХарактеристикиПерсонала.Очистить();
		Для каждого ТекущаяСтрока Из ДанныеПрофиля.ХарактеристикиПерсонала Цикл
			ЗаполнитьЗначенияСвойств(ЭтотОбъект.ХарактеристикиПерсонала.Добавить(), ТекущаяСтрока);
		КонецЦикла;
		
		ЭтотОбъект.ДействияСотрудников.Очистить();
		Для каждого ТекущаяСтрока Из ДанныеПрофиля.ДействияСотрудников Цикл
			ЗаполнитьЗначенияСвойств(ЭтотОбъект.ДействияСотрудников.Добавить(), ТекущаяСтрока);
		КонецЦикла;
		
	КонецЕсли;
	ЭтотОбъект.Требования = ДанныеПрофиля.Требования;
	ЭтотОбъект.Обязанности = ДанныеПрофиля.Обязанности;
	
	ЭтотОбъект.ЭтапыРаботыСКандидатами.Очистить();
	Для каждого ТекущаяСтрока Из ДанныеПрофиля.ЭтапыРаботыСКандидатами Цикл
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.ЭтапыРаботыСКандидатами.Добавить(), ТекущаяСтрока);
	КонецЦикла;
	
	ЭтотОбъект.Условия = ДанныеПрофиля.Условия;
	
КонецПроцедуры

Процедура ЗаполнитьПоПозицииШтатногоРасписания(ПозицияШтатногоРасписания)
	
	ЭтотОбъект.Позиция = ПозицияШтатногоРасписания;
	
	ДанныеПозиции = Справочники.ШтатноеРасписание.ДанныеПозицииШтатногоРасписания(ПозицияШтатногоРасписания);
	
	ЭтотОбъект.Подразделение = ДанныеПозиции.МестоВСтруктуреПредприятия;
	ЭтотОбъект.ПредполагаемыйДоход = ДанныеПозиции.ФОТ;
	ЭтотОбъект.Должность = ДанныеПозиции.Должность;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаявкеНаПодборПерсонала(ДокументСсылка)
	
	// Проверим, нет ли на основании указанной заявки уже зарегистрированных вакансий
	Если ЕстьДругиеВакансииПоЗаявке(ДокументСсылка, Ссылка) Тогда
		ВызватьИсключение НСтр("ru = 'По этой заявке на подбор персонала вакансия уже зарегистрирована.'");
	КонецЕсли;
	
	// Получаем данные заявки для заполнения
	ДанныеЗаявки = Документы.ЗаявкаНаПодборПерсонала.ДанныеЗаявкиНаПодборПерсонала(ДокументСсылка);
	
	// Проверим, согласована ли заявка 
	Если ДанныеЗаявки.Состояние <> Перечисления.СостоянияСогласования.Согласовано Тогда
		ВызватьИсключение НСтр("ru = 'Заявка не согласована.'");
	КонецЕсли;
	
	// Проверим, нет ли зарегистрированных вакансий с параметрами заявки
	Если Справочники.Вакансии.ЕстьДругиеВакансииПоКомбинацииДолжностьПодразделение(ДанныеЗаявки.Должность, ДанныеЗаявки.Подразделение, ДокументСсылка, Ссылка) Тогда
		ВызватьИсключение НСтр("ru = 'Существует вакансия с аналогичными должностью и подразделением.'");
	КонецЕсли;
	
	// Заявка согласована, заполняем вакансию
	ЭтотОбъект.Основание = ДокументСсылка;
	ЭтотОбъект.Позиция = ДанныеЗаявки.Позиция;
	ЭтотОбъект.Подразделение = ДанныеЗаявки.Подразделение;
	ЭтотОбъект.Должность = ДанныеЗаявки.Должность;
	ЭтотОбъект.ПрофильДолжности = ДанныеЗаявки.ПрофильДолжности;
	ЭтотОбъект.Условия = ДанныеЗаявки.Условия;
	ЭтотОбъект.ПредполагаемыйДоход = ДанныеЗаявки.ПредполагаемыйДоход;
	ЭтотОбъект.ПланируемаяДатаЗакрытия = ДанныеЗаявки.ПланируемаяДатаЗакрытия;
	ЭтотОбъект.Приоритет = ДанныеЗаявки.Приоритет;
	ЭтотОбъект.ПричинаОткрытия = ДанныеЗаявки.ПричинаОткрытия;
	ЭтотОбъект.Заявитель = ДанныеЗаявки.Ответственный;
	ЭтотОбъект.Примечание = ДанныеЗаявки.Комментарий;
	ЭтотОбъект.СпособНабора = ДанныеЗаявки.СпособНабора;
	ЭтотОбъект.НазначениеНабора = ДанныеЗаявки.НазначениеНабора;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронноеИнтервью") Тогда
		Для каждого ТекущаяСтрока Из ДанныеЗаявки.ХарактеристикиПерсонала Цикл
			ЗаполнитьЗначенияСвойств(ЭтотОбъект.ХарактеристикиПерсонала.Добавить(), ТекущаяСтрока);
		КонецЦикла;
		Для каждого ТекущаяСтрока Из ДанныеЗаявки.ДействияСотрудников Цикл
			ЗаполнитьЗначенияСвойств(ЭтотОбъект.ДействияСотрудников.Добавить(), ТекущаяСтрока);
		КонецЦикла;
	КонецЕсли;
	ЭтотОбъект.Требования = ДанныеЗаявки.Требования;
	ЭтотОбъект.Обязанности = ДанныеЗаявки.Обязанности;
	Для каждого ТекущаяСтрока Из ДанныеЗаявки.ЭтапыРаботыСКандидатами Цикл
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.ЭтапыРаботыСКандидатами.Добавить(), ТекущаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

Функция ЕстьДругиеВакансииПоЗаявке(Заявка, Вакансия)
	
	Если Не ЗначениеЗаполнено(Заявка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	Справочник.Вакансии КАК Вакансии
		|ГДЕ
		|	Вакансии.Ссылка <> &Вакансия
		|	И Вакансии.Основание = &Основание";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Вакансия", Вакансия);
	Запрос.УстановитьПараметр("Основание", Заявка);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

Процедура ОбновитьКандидатовПоВакансии()
	
	ОтборКандидатов = Новый Структура("Вакансия");
	ОтборКандидатов.Вакансия = Ссылка;
	КандидатыМассив = Справочники.Кандидаты.КандидатыПоОтбору(ОтборКандидатов);
	
	Если ДополнительныеСвойства.Свойство("ЭтапыРаботыСКандидатамиИзменены") И ДополнительныеСвойства["ЭтапыРаботыСКандидатамиИзменены"] = Истина Тогда
		Для Каждого Кандидат Из КандидатыМассив Цикл
			КандидатОбъект = Кандидат.ПолучитьОбъект();
			Попытка
				КандидатОбъект.Заблокировать();
			Исключение
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Требуется обновить кандидата %1. 
					|В данный момент изменение невозможно, так как кандидат редактируется другим пользователем или в другой форме программы.'"),
					КандидатОбъект.Наименование);
				ВызватьИсключение ТекстСообщения;
			КонецПопытки;
			РеквизитыКандидата = Новый Структура(
				"Вакансия,
				|Состояние");
			ЗаполнитьЗначенияСвойств(РеквизитыКандидата, КандидатОбъект);
			ПодборПерсонала.ОбновитьТекущийЭтапРаботыКандидата(Кандидат, РеквизитыКандидата);
		КонецЦикла;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ХарактеристикиПерсоналаИзменены") И ДополнительныеСвойства["ХарактеристикиПерсоналаИзменены"] = Истина Тогда
		ЭлектронноеИнтервью.РассчитатьОценкиКандидатов(Ссылка, КандидатыМассив);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПризнакиИзмененности()
	
	Если Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПрежнийОбъект = Ссылка.ПолучитьОбъект();
	
	ИменаКолонок = "ЭтапРаботы,ШаблонАнкеты,Комментарий";
	Если Не ОбщегоНазначения.КоллекцииИдентичны(ЭтотОбъект.ЭтапыРаботыСКандидатами, ПрежнийОбъект.ЭтапыРаботыСКандидатами, ИменаКолонок, , Истина) Тогда
		ДополнительныеСвойства.Вставить("ЭтапыРаботыСКандидатамиИзменены", Истина);
	КонецЕсли;
	
	ИменаКолонок = "Характеристика,Значение,Вес,ТребуетсяПроверка,ТребуетсяОбучение,ВесЗначения";
	Если Не ОбщегоНазначения.КоллекцииИдентичны(ЭтотОбъект.ХарактеристикиПерсонала, ПрежнийОбъект.ХарактеристикиПерсонала, ИменаКолонок) Тогда
		ДополнительныеСвойства.Вставить("ХарактеристикиПерсоналаИзменены", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
