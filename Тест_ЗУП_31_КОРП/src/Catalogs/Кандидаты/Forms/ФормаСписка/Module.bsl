
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ПодключаемыеКомандыГруппа;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
	ШаблонСообщения = ПодборПерсонала.ШаблонСоСпискомСсылок("Справочник.Кандидаты");
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список");
	
	ИспользоватьЭлектронноеИнтервью = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронноеИнтервью");
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Пользователь", Пользователи.АвторизованныйПользователь());
	
	Справочники.Кандидаты.УстановитьУсловноеОформлениеСпискаКандидатов(Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Проведение_Анкета" Тогда
		Элементы.Список.Обновить();
		СписокПриАктивизацииСтроки(Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ИспользоватьЭлектронноеИнтервью Тогда
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Элементы.ФормаПровестиИнтервью.Видимость = Ложь;
		Иначе
			ЭтапРаботы = ТекущиеДанные.ЭтапРаботы;
			Если ЗначениеЗаполнено(ЭтапРаботы) Тогда
				Элементы.ФормаПровестиИнтервью.Видимость = ЭлектронноеИнтервьюВызовСервера.ЕстьШаблон(ТекущиеДанные.Ссылка, ЭтапРаботы, ТекущиеДанные.Вакансия);
			Иначе
				Элементы.ФормаПровестиИнтервью.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.ФормаПровестиИнтервью.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПровестиИнтервью(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтапРаботы = ТекущиеДанные.ЭтапРаботы;
	Если Не ЗначениеЗаполнено(ЭтапРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеАнкеты = ЭлектронноеИнтервьюВызовСервера.ШаблонАнкеты(ТекущиеДанные.Ссылка, ЭтапРаботы, ТекущиеДанные.Вакансия);
	Если Не ЗначениеЗаполнено(ДанныеАнкеты.ШаблонАнкеты) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеАнкеты.Анкета) Или ДанныеАнкеты.ТолькоПросмотр Тогда
		ЭлектронноеИнтервьюКлиент.НачатьИнтервью(ТекущиеДанные.Ссылка, ФизЛицоКандидата(ТекущиеДанные.Ссылка), ЭтапРаботы, ДанныеАнкеты.ШаблонАнкеты);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТолькоФормаЗаполнения", Истина);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Ложь);
	ПараметрыФормы.Вставить("Ключ", ДанныеАнкеты.Анкета);
	ПараметрыФормы.Вставить("ВозможностьПредварительногоСохранения", Истина);
	ФормаАнкеты = ОткрытьФорму("Документ.Анкета.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьРезюме(Команда)
	
	Кандидаты = СсылкиНаОбъектыВыделенныхСтрокСписка();
	
	Если Кандидаты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ПодборПерсоналаКлиент.ПараметрыФормированияПисьма(УникальныйИдентификатор);
	ДополнительныеПараметры.ИдентификаторПечатнойФормы = ПодборПерсоналаКлиент.ИдентификаторПечатнойФормы(Команда.Имя);
	ДополнительныеПараметры.Предметы = Кандидаты;
	
	Если ПолучитьФункциональнуюОпциюФормы("ИспользоватьШаблоныСообщений") Тогда
		ОткрытьФормуВыбораШаблона(Кандидаты[0], ДополнительныеПараметры);
	Иначе
		ДополнительныеПараметры.Вставить("ВывестиСписокПредметов");
		ПодборПерсоналаКлиент.СформироватьСообщениеЗаявителюБезШаблона(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоделитьсяСсылкой(Команда)
	
	Кандидаты = СсылкиНаОбъектыВыделенныхСтрокСписка();
	
	Если Кандидаты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ПодборПерсоналаКлиент.ПараметрыФормированияПисьма(УникальныйИдентификатор);
	ДополнительныеПараметры.Предметы = Кандидаты;
	
	Если ПолучитьФункциональнуюОпциюФормы("ИспользоватьШаблоныСообщений") Тогда
		Если ЗначениеЗаполнено(ШаблонСообщения) Тогда
			ПодборПерсоналаКлиент.Подключаемый_СформироватьСообщениеЗаявителю(ШаблонСообщения, ДополнительныеПараметры);
		Иначе
			ОткрытьФормуВыбораШаблона(Кандидаты[0], ДополнительныеПараметры);
		КонецЕсли;
	Иначе
		ДополнительныеПараметры.Вставить("ВывестиСписокСсылок");
		ПодборПерсоналаКлиент.СформироватьСообщениеЗаявителюБезШаблона(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ФизЛицоКандидата(Кандидат)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Кандидат, "ФизическоеЛицо");
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораШаблона(Кандидат, ПередаваемыеПараметры)
	
	Оповещение = Новый ОписаниеОповещения("Подключаемый_СформироватьСообщениеЗаявителю", ОбщегоНазначенияКлиент.ОбщийМодуль("ПодборПерсоналаКлиент"), ПередаваемыеПараметры);
	
	ШаблоныСообщенийКлиент.ВыбратьШаблон(Оповещение, , Кандидат);
	
КонецПроцедуры

&НаКлиенте
Функция СсылкиНаОбъектыВыделенныхСтрокСписка()
	
	Кандидаты = Новый Массив;
	Вакансии = Новый Массив;
	
	ВыделенныеСтроки = ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		ТекущаяСтрока = Элементы.Список.ДанныеСтроки(ВыделеннаяСтрока);
		Если ТекущаяСтрока <> Неопределено Тогда
			Кандидаты.Добавить(ТекущаяСтрока.Ссылка);
			Вакансии.Добавить(ТекущаяСтрока.Вакансия);
		КонецЕсли;
	КонецЦикла;
	
	Вакансии = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Вакансии);
	
	Если Вакансии.Количество() > 1 Тогда
		
		Кандидаты.Очистить();
		
		ТекстСообщения = НСтр("ru = 'Не поддерживается групповая отправка по нескольким вакансиям.
			|Выберите кандидатов на одну вакансию.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
	Возврат Кандидаты;
	
КонецФункции

#КонецОбласти