
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	КандидатСсылка = Параметры.Кандидат;
	ЗаполнитьКомментарии(Параметры.Комментарии);
	
КонецПроцедуры   

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ОК(Команда)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КомментарииСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	НачатьИзменениеКомментария(ВыбраннаяСтрока);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомментарииСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	НачатьДобавлениеКомментария();
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомментарииСписокПередУдалением(Элемент, Отказ)

	СтрокаНабора = Элемент.ТекущиеДанные;
	
	Если СтрокаНабора.Пользователь <> ПользователиКлиентСервер.АвторизованныйПользователь() Тогда
		ТекстСообщения = НСтр("ru = 'Вы не можете удалить комментарий другого пользователя.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат;
	КонецЕсли;
		
	КомментарииКандидатовНаборЗаписей.Удалить(СтрокаНабора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКомментарии(Комментарии)
	
	КомментарииКандидатовНаборЗаписей.Очистить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Комментарии, КомментарииКандидатовНаборЗаписей);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьИзменениеКомментария(ИдентификаторСтроки)
	
	ПараметрыФормы = ПодборПерсоналаКлиентСервер.ПараметрыРедактированияКомментарияКандидата();
		
	СтрокаНабора = КомментарииКандидатовНаборЗаписей.НайтиПоИдентификатору(ИдентификаторСтроки);
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, СтрокаНабора);
	
	ДополнительныеПараметры = Новый Структура("НомерКомментария");
	ДополнительныеПараметры.НомерКомментария = ИдентификаторСтроки;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьИзменениеКомментария", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("РегистрСведений.КомментарииКандидатов.Форма.КомментарийКандидата", ПараметрыФормы, ЭтаФорма, ЭтаФорма, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьИзменениеКомментария(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	НомерКомментария = ДополнительныеПараметры.НомерКомментария;
	СтрокаНабора = КомментарииКандидатовНаборЗаписей.НайтиПоИдентификатору(НомерКомментария);
	ЗаполнитьЗначенияСвойств(СтрокаНабора, Результат);
	СтрокаНабора.Период = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	КомментарииКандидатовНаборЗаписей.Сортировать("Период Убыв");
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьДобавлениеКомментария()
	
	ПараметрыФормы = Новый Структура("Пользователь");
	ПараметрыФормы.Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьДобавлениеКомментария", ЭтотОбъект);
	ОткрытьФорму("РегистрСведений.КомментарииКандидатов.Форма.КомментарийКандидата", ПараметрыФормы, ЭтаФорма, ЭтаФорма, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьДобавлениеКомментария(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	СтрокаНабора = КомментарииКандидатовНаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаНабора, Результат);
	СтрокаНабора.Период = ОбщегоНазначенияКлиент.ДатаСеанса();
	СтрокаНабора.Кандидат = КандидатСсылка;
	СтрокаНабора.Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	
	КомментарииКандидатовНаборЗаписей.Сортировать("Период Убыв");
	
КонецПроцедуры

&НаКлиенте
Функция СписокКомментариев()
	
	Комментарии = Новый Массив;
	Для Каждого СтрокаНабора Из КомментарииКандидатовНаборЗаписей Цикл
		ЗаписьКомментария = ПодборПерсоналаКлиентСервер.ПараметрыРедактированияКомментарияКандидата();
		ЗаполнитьЗначенияСвойств(ЗаписьКомментария, СтрокаНабора);
		Комментарии.Добавить(ЗаписьКомментария);
	КонецЦикла;
	
	Возврат Комментарии;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТолькоПросмотр Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	Комментарии = СписокКомментариев();
	
	Модифицированность = Ложь;
	Закрыть(Комментарии);
	
КонецПроцедуры

#КонецОбласти