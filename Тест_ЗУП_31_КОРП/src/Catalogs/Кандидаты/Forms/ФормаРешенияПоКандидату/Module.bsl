#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Кандидаты = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Распаковываем параметры.
	Решение = Параметры.Решение;
	ТолькоПросмотрРешения = Параметры.ТолькоПросмотрРешения;
	ДатаРешения = Параметры.ДатаРешения;
	
	ЗаполнитьКандидатов(Параметры);

	Если Решение = Перечисления.СостоянияСогласования.Отклонено Тогда
		ПричинаОтклонения = Параметры.ПричинаОтклонения;
		КомментарийРешения = Параметры.КомментарийРешения;
		Если Не ЗначениеЗаполнено(ПричинаОтклонения) Тогда
			ПричинаОтклонения = ПодборПерсонала.ПричинаОтклоненияКандидатаПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
	// Значения по умолчанию.
	Если Не ЗначениеЗаполнено(ДатаРешения) Тогда
		ДатаРешения = ТекущаяДатаСеанса();
	КонецЕсли;
	
	НастроитьЭлементыФормы(Параметры);
	
	ЗаполнитьШаблонПисьмаПоУмолчанию(ШаблонПисьмаОбОдобрении, Перечисления.СостоянияСогласования.Согласовано);
	ЗаполнитьШаблонSMSПоУмолчанию(ШаблонSMSОбОдобрении, Перечисления.СостоянияСогласования.Согласовано);
	ЗаполнитьШаблонПисьмаПоУмолчанию(ШаблонПисьмаОбОтказе, Перечисления.СостоянияСогласования.Отклонено);
	ЗаполнитьШаблонSMSПоУмолчанию(ШаблонSMSОбОтказе, Перечисления.СостоянияСогласования.Отклонено);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ВзаимодействияСписок, "Предмет", Кандидат);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НаписатьПисьмоКандидатамОбОдобрении И Не ЗначениеЗаполнено(ШаблонПисьмаОбОдобрении) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен шаблон письма об одобрении кандидатов.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ШаблонПисьмаОбОдобрении", , Отказ);
	КонецЕсли;
	
	Если ОтправитьSMSКандидатамОбОдобрении И Не ЗначениеЗаполнено(ШаблонSMSОбОдобрении) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен шаблон SMS об одобрении кандидатов.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ШаблонSMSОбОдобрении", , Отказ);
	КонецЕсли;
	
	Если НаписатьПисьмоКандидатамОбОтказе И Не ЗначениеЗаполнено(ШаблонПисьмаОбОтказе) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен шаблон письма об отказе кандидатам.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ШаблонПисьмаОбОтказе", , Отказ);
	КонецЕсли;
	
	Если ОтправитьSMSКандидатамОбОтказе И Не ЗначениеЗаполнено(ШаблонSMSОбОтказе) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен шаблон SMS об отказе кандидатам.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ШаблонSMSОбОтказе", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ТолькоПросмотрРешения Тогда
		Закрыть(Неопределено);
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	РезультатВыбора = РезультатВыбора();
	Закрыть(РезультатВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура НаписатьПисьмо(Команда)
	
	Если Не ИспользоватьШаблоныСообщений Тогда
		ВзаимодействияКлиент.СоздатьВзаимодействиеИлиПредмет("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", Кандидат, ЭтаФорма);
		Возврат;
	КонецЕсли;
	
	НачатьФормированиеСообщенияПоШаблону("Письмо");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьSMS(Команда)
	
	Если Не ИспользоватьШаблоныСообщений Тогда
		ВзаимодействияКлиент.СоздатьВзаимодействиеИлиПредмет("Документ.СообщениеSMS.ФормаОбъекта", Кандидат, ЭтаФорма);
		Возврат;
	КонецЕсли;
	
	НачатьФормированиеСообщенияПоШаблону("СообщениеSMS");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВзаимодействияСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВзаимодействияСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НаписатьПисьмоКандидатамОбОтказеПриИзменении(Элемент)
	УстановитьДоступностьШаблонаПисьмаОбОтказе(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьSMSКандидатамОбОтказеПриИзменении(Элемент)
	УстановитьДоступностьШаблонаSMSОбОтказе(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НаписатьПисьмоКандидатамОбОдобренииПриИзменении(Элемент)
	УстановитьДоступностьШаблонаПисьмаОбОдобрении(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьSMSКандидатамОбОдобренииПриИзменении(Элемент)
	УстановитьДоступностьШаблонаSMSОбОдобрении(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрыватьВакансиюПриИзменении(Элемент)
	УстановитьДоступностьОтклоненияДругихКандидатов(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьДругихКандидатовПриИзменении(Элемент)
	УстановитьДоступностьДругихКандидатов(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ОтклоненныеКандидаты()
	
	ОтклоненныеКандидаты = Новый Массив;
	Для Каждого СтрокаТаблицы Из ДругиеКандидаты Цикл
		Если Не СтрокаТаблицы.Отклонять Тогда
			Продолжить;
		КонецЕсли;
		Отклонение = Новый Структура("Кандидат, ПричинаОтклонения");
		Отклонение.Кандидат = СтрокаТаблицы.Кандидат;
		Отклонение.ПричинаОтклонения = СтрокаТаблицы.ПричинаОтклонения;
		ОтклоненныеКандидаты.Добавить(Отклонение);
	КонецЦикла;
	
	Возврат ОтклоненныеКандидаты;
	
КонецФункции

&НаСервере
Процедура НастроитьЭлементыФормы(ПараметрыФормы)
	
	ИспользоватьШаблоныСообщений = ПолучитьФункциональнуюОпцию("ИспользоватьШаблоныСообщений");
	
	УстановитьДоступностьШаблонаПисьмаОбОтказе(ЭтаФорма);
	УстановитьДоступностьШаблонаSMSОбОтказе(ЭтаФорма);
	
	УстановитьДоступностьШаблонаПисьмаОбОдобрении(ЭтаФорма);	
	УстановитьДоступностьШаблонаSMSОбОдобрении(ЭтаФорма);
	
	УстановитьВидимостьВзаимодействий();	
	УстановитьВидимостьСообщитьОбОдобрении();
	УстановитьВидимостьСообщитьОбОтказе();
	
	Элементы.ПричинаГруппа.Видимость = Ложь;
	Элементы.ВакансияГруппа.Видимость = Ложь;
	Элементы.ДругиеКандидатыГруппа.Видимость = Ложь;
	Элементы.КандидатыГруппа.Видимость = Ложь;
	
	Если Кандидаты.Количество() > 1 Тогда
		Элементы.КандидатыГруппа.Видимость = Истина;
	КонецЕсли;
	
	Если Решение = Перечисления.СостоянияСогласования.Согласовано Тогда
		Если Кандидаты.Количество() > 1 Тогда
			Заголовок = НСтр("ru = 'Утверждение кандидатов'");
		Иначе
			Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Утверждение %1'"),
				ПодборПерсонала.СклонениеКандидата(Кандидат, 2));
			Если Не Справочники.Вакансии.СпособНабораМассовый(Вакансия) Тогда	
				Элементы.ВакансияГруппа.Видимость = Истина;
				Элементы.ДругиеКандидатыГруппа.Видимость = Истина;
				ЗакрыватьВакансию = Истина;
				ЗаполнитьДругихКандидатов();
				Если ДругиеКандидаты.Количество() > 0 Тогда
					ОтклонитьДругихКандидатов = Истина;
					Элементы.ДругиеКандидатыГруппа.Видимость = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Решение = Перечисления.СостоянияСогласования.Отклонено Тогда
		Если Кандидаты.Количество() > 1 Тогда
			Заголовок = НСтр("ru = 'Отклонение кандидатов'");
		Иначе
			Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Отклонение %1'"),
				ПодборПерсонала.СклонениеКандидата(Кандидат, 2));
		КонецЕсли;
		Элементы.ПричинаГруппа.Видимость = Истина;
	КонецЕсли;
	
	Если ТолькоПросмотрРешения Тогда
		Элементы.ДатаРешения.ТолькоПросмотр = Истина;
		Элементы.ПричинаОтклонения.ТолькоПросмотр = Истина;
		Элементы.КомментарийРешения.ТолькоПросмотр = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьВзаимодействий()
	
	Если Не ПравоДоступа("Чтение", Метаданные.ЖурналыДокументов.Взаимодействия) Тогда
		Элементы.ВзаимодействияГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПрочиеВзаимодействия") Тогда
		Элементы.ВзаимодействияГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Кандидаты.Количество() = 1 Тогда
		Элементы.ВзаимодействияГруппа.Видимость = Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.ВзаимодействияГруппа.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСообщитьОбОдобрении()
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШаблоныСообщений") Тогда
		Элементы.СообщитьОбОдобренииГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Решение = Перечисления.СостоянияСогласования.Согласовано И Кандидаты.Количество() > 1 Тогда
		Элементы.СообщитьОбОдобренииГруппа.Видимость = Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.СообщитьОбОдобренииГруппа.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСообщитьОбОтказе()
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШаблоныСообщений") Тогда
		Элементы.СообщитьОбОтказеГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Решение = Перечисления.СостоянияСогласования.Отклонено И Кандидаты.Количество() > 1 Тогда
		Элементы.СообщитьОбОтказеГруппа.Видимость = Истина;
		Возврат;
	КонецЕсли;
	
	Если Решение = Перечисления.СостоянияСогласования.Согласовано И Кандидаты.Количество() = 1 И ДругиеКандидаты.Количество() > 1 Тогда
		Элементы.СообщитьОбОтказеГруппа.Видимость = Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.СообщитьОбОтказеГруппа.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКандидатов(ПараметрыФормы)
	
	// Заполним список кандидатов с вакансиями.
	ВакансииКандидатов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ПараметрыФормы.Кандидаты, "Вакансия");
	Для Каждого ЭлементМассива Из ПараметрыФормы.Кандидаты Цикл
		НоваяСтрока = Кандидаты.Добавить();
		НоваяСтрока.Кандидат = ЭлементМассива;
		НоваяСтрока.Вакансия = ВакансииКандидатов[НоваяСтрока.Кандидат];
	КонецЦикла;
	
	Если Кандидаты.Количество() = 1 Тогда
		Кандидат = Кандидаты[0].Кандидат;
		Вакансия = Кандидаты[0].Вакансия;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДругихКандидатов()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Кандидаты.Ссылка КАК Кандидат,
		|	ТекущийЭтап.ЭтапРаботы КАК ЭтапРаботы,
		|	Кандидаты.Рейтинг КАК Рейтинг,
		|	Кандидаты.ПричинаОтклонения КАК ПричинаОтклонения
		|ИЗ
		|	Справочник.Кандидаты КАК Кандидаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеЭтапыРаботыСКандидатами КАК ТекущийЭтап
		|		ПО (ТекущийЭтап.Кандидат = Кандидаты.Ссылка)
		|ГДЕ
		|	Кандидаты.Вакансия = &Вакансия
		|	И Кандидаты.Ссылка <> &Кандидат");
		
	Запрос.УстановитьПараметр("Вакансия", Вакансия);
	Запрос.УстановитьПараметр("Кандидат", Кандидат);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДругиеКандидаты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Отклонять = Истина;
		Если Не ЗначениеЗаполнено(НоваяСтрока.ПричинаОтклонения) Тогда
			НоваяСтрока.ПричинаОтклонения = ПодборПерсонала.ПричинаОтклоненияКандидатаПоУмолчанию();
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Функция РезультатВыбора()
	
	Результат = Новый Структура(
		"Кандидаты,
		|Вакансии,
		|Решение,
		|Вакансия,
		|ДругиеКандидаты,
		|ПисьмоОдобрение,
		|СообщениеSMSОдобрение,
		|ПисьмоОтказ,
		|СообщениеSMSОтказ");
	
	Результат.Решение = Новый Структура(
		"Решение,
		|ДатаРешения,
		|Причина,
		|Комментарий");
	
	Результат.Вакансия = Новый Структура(
		"ЗакрыватьВакансию,
		|Вакансия,
		|Дата");
	
	Результат.ДругиеКандидаты = Новый Структура(
		"Отклонять,
		|Кандидаты,
		|Дата");
	
	КандидатыМассив = Новый Массив;
	Для Каждого СтрокаТаблицы Из Кандидаты Цикл
		КандидатыМассив.Добавить(СтрокаТаблицы.Кандидат);
	КонецЦикла;
	
	Результат.Кандидаты = Новый ФиксированныйМассив(КандидатыМассив);
	Результат.Вакансии = Новый Массив;
	
	Результат.Решение.Решение = Решение;
	Результат.Решение.ДатаРешения = ДатаРешения;
	Результат.Решение.Причина = ПричинаОтклонения;
	Результат.Решение.Комментарий = КомментарийРешения;
	
	Результат.Вакансия.ЗакрыватьВакансию = ЗакрыватьВакансию;
	Результат.Вакансия.Вакансия = Вакансия;
	Результат.Вакансия.Дата = ДатаРешения;
	
	Результат.ДругиеКандидаты.Отклонять = ОтклонитьДругихКандидатов;
	Результат.ДругиеКандидаты.Кандидаты = ОтклоненныеКандидаты();
	Результат.ДругиеКандидаты.Дата = ДатаРешения;
	
	ДругиеКандидатыМассив = Новый Массив;
	Для Каждого Элемент Из Результат.ДругиеКандидаты.Кандидаты Цикл
		ДругиеКандидатыМассив.Добавить(Элемент.Кандидат);
	КонецЦикла;
	
	Результат.ПисьмоОдобрение = ОписаниеСообщенияПоШаблону();
	Результат.ПисьмоОдобрение.Написать = НаписатьПисьмоКандидатамОбОдобрении;
	Если НаписатьПисьмоКандидатамОбОдобрении Тогда
		Результат.ПисьмоОдобрение.Шаблон = ШаблонПисьмаОбОдобрении;
		Результат.ПисьмоОдобрение.Получатели = Новый ФиксированныйМассив(КандидатыМассив);
	КонецЕсли;
	
	Результат.СообщениеSMSОдобрение = ОписаниеСообщенияПоШаблону();
	Результат.СообщениеSMSОдобрение.Написать = ОтправитьSMSКандидатамОбОдобрении;
	Если ОтправитьSMSКандидатамОбОдобрении Тогда
		Результат.СообщениеSMSОдобрение.Шаблон = ШаблонSMSОбОдобрении;
		Результат.СообщениеSMSОдобрение.Получатели = Новый ФиксированныйМассив(КандидатыМассив);
	КонецЕсли;
	
	Результат.ПисьмоОтказ = ОписаниеСообщенияПоШаблону();
	Результат.ПисьмоОтказ.Написать = НаписатьПисьмоКандидатамОбОтказе;
	Если НаписатьПисьмоКандидатамОбОтказе Тогда
		Результат.ПисьмоОтказ.Шаблон = ШаблонПисьмаОбОтказе;
		Если Решение = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Отклонено") Тогда 
			Результат.ПисьмоОтказ.Получатели = Новый ФиксированныйМассив(КандидатыМассив);
		ИначеЕсли Решение = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Согласовано") Тогда 
			// Другие кандидаты
			Результат.ПисьмоОтказ.Получатели = Новый ФиксированныйМассив(ДругиеКандидатыМассив);
		КонецЕсли;
	КонецЕсли;
	
	Результат.СообщениеSMSОтказ = ОписаниеСообщенияПоШаблону();
	Результат.СообщениеSMSОтказ.Написать = НаписатьПисьмоКандидатамОбОтказе;
	Если НаписатьПисьмоКандидатамОбОтказе Тогда
		Результат.СообщениеSMSОтказ.Шаблон = ШаблонSMSОбОтказе;
		Если Решение = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Отклонено") Тогда 
			Результат.СообщениеSMSОтказ.Получатели = Новый ФиксированныйМассив(КандидатыМассив);
		ИначеЕсли Решение = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Согласовано") Тогда 
			// Другие кандидаты
			Результат.СообщениеSMSОтказ.Получатели = Новый ФиксированныйМассив(ДругиеКандидатыМассив);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ОписаниеСообщенияПоШаблону()
	
	Описание = Новый Структура(
		"Написать,
		|Шаблон,
		|Получатели");
	
	Возврат Описание;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьОтклоненияДругихКандидатов(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ОтклонитьДругихКандидатов.Доступность = Форма.ЗакрыватьВакансию;
	Если Не Форма.ЗакрыватьВакансию Тогда
		Форма.ОтклонитьДругихКандидатов = Ложь;
		УстановитьДоступностьДругихКандидатов(Форма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьДругихКандидатов(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ДругиеКандидаты.ТолькоПросмотр = Не Форма.ОтклонитьДругихКандидатов;
	
	Элементы.НаписатьПисьмоКандидатамОбОтказе.Доступность = Форма.ОтклонитьДругихКандидатов;
	Элементы.ОтправитьSMSКандидатамОбОтказе.Доступность = Форма.ОтклонитьДругихКандидатов;
	
	Если Не Форма.ОтклонитьДругихКандидатов Тогда
		Форма.НаписатьПисьмоКандидатамОбОтказе = Ложь;
		Форма.ОтправитьSMSКандидатамОбОтказе = Ложь;
		УстановитьДоступностьШаблонаПисьмаОбОтказе(Форма);
		УстановитьДоступностьШаблонаSMSОбОтказе(Форма);
	КонецЕсли;
	
КонецПроцедуры

#Область ШаблоныСообщений

&НаКлиенте
Процедура НачатьФормированиеСообщенияПоШаблону(ВидСообщения)
	
	ШаблоныСообщенийКлиент.СформироватьСообщение(Кандидат, ВидСообщения, Неопределено, Решение); 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШаблонПоУмолчанию(Шаблон, Отбор)
	
	Шаблоны = ПодборПерсонала.ШаблоныСообщенийКандидатов(Отбор);
	Если Шаблоны.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Шаблон = Шаблоны[0].Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШаблонПисьмаПоУмолчанию(Шаблон, ВладелецШаблона)
	
	Отбор = Новый Структура("ВладелецШаблона, ПредназначенДляЭлектронныхПисем");
	Отбор.ВладелецШаблона = ВладелецШаблона;
	Отбор.ПредназначенДляЭлектронныхПисем = Истина;
	
	ЗаполнитьШаблонПоУмолчанию(Шаблон, Отбор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШаблонSMSПоУмолчанию(Шаблон, ВладелецШаблона)
	
	Отбор = Новый Структура("ВладелецШаблона, ПредназначенДляSMS");
	Отбор.ВладелецШаблона = ВладелецШаблона;
	Отбор.ПредназначенДляSMS = Истина;
	
	ЗаполнитьШаблонПоУмолчанию(Шаблон, Отбор);
	
КонецПроцедуры

#Область ШаблоныОтказа

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьШаблонаПисьмаОбОтказе(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ШаблонПисьмаОбОтказе.Доступность = Форма.НаписатьПисьмоКандидатамОбОтказе;
	Элементы.ШаблонПисьмаОбОтказе.АвтоОтметкаНезаполненного = Форма.НаписатьПисьмоКандидатамОбОтказе;
	Элементы.ШаблонПисьмаОбОтказе.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Форма.ШаблонПисьмаОбОтказе);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьШаблонаSMSОбОтказе(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ШаблонSMSОбОтказе.Доступность = Форма.ОтправитьSMSКандидатамОбОтказе;
	Элементы.ШаблонSMSОбОтказе.АвтоОтметкаНезаполненного = Форма.ОтправитьSMSКандидатамОбОтказе;
	Элементы.ШаблонSMSОбОтказе.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Форма.ШаблонSMSОбОтказе);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьШаблонаПисьмаОбОдобрении(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ШаблонПисьмаОбОдобрении.Доступность = Форма.НаписатьПисьмоКандидатамОбОдобрении;
	Элементы.ШаблонПисьмаОбОдобрении.АвтоОтметкаНезаполненного = Форма.НаписатьПисьмоКандидатамОбОдобрении;
	Элементы.ШаблонПисьмаОбОдобрении.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Форма.ШаблонПисьмаОбОдобрении);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьШаблонаSMSОбОдобрении(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ШаблонSMSОбОдобрении.Доступность = Форма.ОтправитьSMSКандидатамОбОдобрении;
	Элементы.ШаблонSMSОбОдобрении.АвтоОтметкаНезаполненного = Форма.ОтправитьSMSКандидатамОбОдобрении;
	Элементы.ШаблонSMSОбОдобрении.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Форма.ШаблонSMSОбОдобрении);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти
