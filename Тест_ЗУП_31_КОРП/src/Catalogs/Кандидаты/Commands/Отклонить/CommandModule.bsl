#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ПараметрыФормы = Новый Структура("Кандидаты, Решение, Источник");
	ПараметрыФормы.Кандидаты = ПараметрКоманды;
	ПараметрыФормы.Решение = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Отклонено");
	
	ПараметрыОповещения = Новый Структура("Источник, Кандидаты");
	ПараметрыОповещения.Источник = ПараметрыВыполненияКоманды.Источник;
	ПараметрыОповещения.Кандидаты = ПараметрКоманды;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОтклонитьКандидатовПослеРешения", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму(
		"Справочник.Кандидаты.Форма.ФормаРешенияПоКандидату", 
		ПараметрыФормы, 
		ПараметрыВыполненияКоманды.Источник, 
		ПараметрыВыполненияКоманды.Уникальность, 
		ПараметрыВыполненияКоманды.Окно, 
		, 
		ОбработчикОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОтклонитьКандидатовПослеРешения(РезультатВыбора, ПараметрыОповещения) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтклонитьКандидатовПослеРешенияНаСервере(ПараметрыОповещения.Кандидаты, РезультатВыбора);
	
	// Отражаем изменения в открытых формах.
	ФормаВладелец = ПараметрыОповещения.Источник;
	Если ФормаВладелец.Параметры.Свойство("Ключ") Тогда
		ФормаВладелец.Прочитать();
	КонецЕсли;
	ОповеститьОбИзменении(ТипЗнч("СправочникСсылка.Кандидаты"));
	
	ПараметрыОповещения.Вставить("Вакансии", РезультатВыбора.Вакансии);
	Оповестить("ОтклоненыКандидаты", ПараметрыОповещения, ПараметрыОповещения.Источник);
	
КонецПроцедуры

&НаСервере
Процедура ОтклонитьКандидатовПослеРешенияНаСервере(Кандидаты, РезультатВыбора)
	ПодборПерсонала.УстановитьРешениеПоКандидатам(Кандидаты, РезультатВыбора);
КонецПроцедуры

#КонецОбласти