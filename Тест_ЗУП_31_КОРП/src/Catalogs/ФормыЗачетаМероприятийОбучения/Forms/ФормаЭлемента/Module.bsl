#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокОценок,
		"Владелец",
		Объект.Ссылка,
		ВидСравненияКомпоновкиДанных.Равно,,
		Истина);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ТекущиеДанные = Элементы.СписокОценок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьНаСервере(ТекущиеДанные.Ссылка, Ложь);
	
	ОповеститьОбИзменении(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ТекущиеДанные = Элементы.СписокОценок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьНаСервере(ТекущиеДанные.Ссылка, Истина);
	
	ОповеститьОбИзменении(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийТаблицыФормыСписокОценок

&НаКлиенте
Процедура СписокОценокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Чтобы добавлять оценки, сначала нужно записать элемент.'"),,,, Отказ);
	    Возврат;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПереместитьНаСервере(ОценкаСсылка, Вверх)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОценкиОбучения.Ссылка КАК Ссылка,
		|	ОценкиОбучения.Балл КАК Балл
		|ИЗ
		|	Справочник.ОценкиОбучения КАК ОценкиОбучения
		|ГДЕ
		|	ОценкиОбучения.Владелец = &Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Балл УБЫВ";
	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаОценок = РезультатЗапроса.Выгрузить();

	НайденныеСтроки = ТаблицаОценок.НайтиСтроки(Новый Структура("Ссылка", ОценкаСсылка));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаОценки = НайденныеСтроки[0];
	ИндексСтроки = ТаблицаОценок.Индекс(СтрокаОценки);
	
	Если (Вверх И ИндексСтроки = 0)
		ИЛИ (Не Вверх И ИндексСтроки = ТаблицаОценок.Количество() - 1) Тогда
		
		Возврат;
	КонецЕсли;
	
	СтрокаЗамены = ТаблицаОценок[ИндексСтроки - ?(Вверх, 1, -1)];
	
	ОбучениеРазвитие.УстановитьБаллОценкеОбучения(СтрокаЗамены.Ссылка, СтрокаОценки.Балл);
	ОбучениеРазвитие.УстановитьБаллОценкеОбучения(СтрокаОценки.Ссылка, СтрокаЗамены.Балл);
	
КонецПроцедуры

#КонецОбласти 