
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("ПолноеНаименование");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = Данные.ПолноеНаименование;
	
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	ОхранаТрудаВызовСервера.ПричиныПроисшествийОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка);		
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Процедура выполняет первоначальное видов происшествий.
Процедура НачальноеЗаполнение() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЗначениеИстина
	|ИЗ
	|	Справочник.ПричиныПроисшествий КАК ПричиныПроисшествий";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	КлассификаторXML = Справочники.ПричиныПроисшествий.ПолучитьМакет("ПричиныПроисшествий").ПолучитьТекст();
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	Для Каждого СтрокаКлассификатора Из КлассификаторТаблица Цикл
		СправочникСсылка = Справочники.ПричиныПроисшествий.НайтиПоКоду(СтрокаКлассификатора.Code);
		Если Не ЗначениеЗаполнено(СправочникСсылка) Тогда
			НайденныеСтроки = КлассификаторТаблица.НайтиСтроки(Новый Структура("CodeParent", СтрокаКлассификатора.Code));
			Если НайденныеСтроки.Количество() = 0 Тогда
				СправочникОбъект = Справочники.ПричиныПроисшествий.СоздатьЭлемент();
			Иначе
				СправочникОбъект = Справочники.ПричиныПроисшествий.СоздатьГруппу();
			КонецЕсли;
			СправочникОбъект.Код = СтрокаКлассификатора.Code;
			СправочникОбъект.ПолноеНаименование = СтрокаКлассификатора.Title;
			СправочникОбъект.КодПоКлассификатору = СтрокаКлассификатора.CodeView;
			СправочникОбъект.Родитель = Справочники.ПричиныПроисшествий.НайтиПоКоду(СтрокаКлассификатора.CodeParent);
			
			СправочникОбъект.ДополнительныеСвойства.Вставить("ПодборИзКлассификатора");
			СправочникОбъект.ОбменДанными.Загрузка = Истина;
			СправочникОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает реквизиты справочника, которые образуют естественный ключ
//  для элементов справочника.
// Используется для сопоставления элементов механизмом «Выгрузка/загрузка областей данных».
//
// Возвращаемое значение: Массив(Строка) - массив имен реквизитов, образующих
//  естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Код");
	Результат.Добавить("КодПоКлассификатору");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли