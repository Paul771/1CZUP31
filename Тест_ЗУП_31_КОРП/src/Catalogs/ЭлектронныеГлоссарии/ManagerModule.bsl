#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Возвращает группу, в которой хранятся элементы глоссария.
// В случае ее отсутствия, создает новую.
//
Функция ГруппаПодчиненныхЭлементов(Знач Глоссарий, Знач ТипПодчиненногоЭлемента, Знач ЭлектронныйРесурс = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Глоссарий)
		ИЛИ НЕ ЗначениеЗаполнено(ТипПодчиненногоЭлемента) Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ГруппаПодчиненныхЭлементов = РегистрыСведений.ГруппыЭлементовЭлектронныхКурсов.ГруппаДляХраненияПодчиненныхЭлементов(Глоссарий, ТипПодчиненногоЭлемента);
	
	Если ГруппаПодчиненныхЭлементов = Неопределено Тогда
		
		ИмяСправочника = Метаданные.НайтиПоТипу(ТипПодчиненногоЭлемента).Имя;
		
		НоваяГруппаОбъект =  Справочники[ИмяСправочника].СоздатьГруппу();
		НоваяГруппаОбъект.Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Глоссарий, "Наименование");
	
		Если ЗначениеЗаполнено(ЭлектронныйРесурс) Тогда
			НоваяГруппаОбъект.Родитель = Справочники.ЭлектронныеКурсы.ГруппаДляХраненияПодчиненныхЭлементов(ЭлектронныйРесурс, ТипПодчиненногоЭлемента);	
		КонецЕсли;
		
		РазработкаЭлектронныхКурсовСлужебный.УстановитьПредпочитаемогоПоставщика(НоваяГруппаОбъект);

		НоваяГруппаОбъект.Записать();
		
		ГруппаПодчиненныхЭлементов = НоваяГруппаОбъект.Ссылка;
		
		РегистрыСведений.ГруппыЭлементовЭлектронныхКурсов.СохранитьГруппуДляХраненияПодчиненныхЭлементов(Глоссарий, ГруппаПодчиненныхЭлементов);		
				
	КонецЕсли;

	Возврат ГруппаПодчиненныхЭлементов;

КонецФункции

#КонецОбласти


#КонецЕсли
