#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	ЗначениеЯвляетсяДолжностьюЛетногоЭкипажа = 
		ПолучитьФункциональнуюОпцию("ИспользуетсяТрудЧленовЛетныхЭкипажей") И ЯвляетсяДолжностьюЛетногоЭкипажа;
		
	ЗначениеЯвляетсяШахтерскойДолжностью =
		ПолучитьФункциональнуюОпцию("ИспользуетсяТрудШахтеров") И ЯвляетсяШахтерскойДолжностью;
		
	ЗначениеЯвляетсяФармацевтическойДолжностью = 
		ПолучитьФункциональнуюОпцию("ИспользуетсяТрудФармацевтов") И ЯвляетсяФармацевтическойДолжностью;
		
	ТекстСообщения = "";
	
	Если ЗначениеЯвляетсяДолжностьюЛетногоЭкипажа И ЗначениеЯвляетсяШахтерскойДолжностью Тогда
		ТекстСообщения = НСтр("ru='члена летного экипажа и шахтера'");
	КонецЕсли;
	
	Если ЗначениеЯвляетсяДолжностьюЛетногоЭкипажа И ЗначениеЯвляетсяФармацевтическойДолжностью Тогда
		Если ПустаяСтрока(ТекстСообщения) Тогда
			ТекстСообщения = НСтр("ru='члена летного экипажа и фармацевта'");
		Иначе
			ТекстСообщения = СтрЗаменить(ТекстСообщения, " " + НСтр("ru='и'") + " ", ", ");
			ТекстСообщения = ТекстСообщения + " " + НСтр("ru='и фармацевта'");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЯвляетсяШахтерскойДолжностью И ЗначениеЯвляетсяФармацевтическойДолжностью Тогда
		Если ПустаяСтрока(ТекстСообщения) Тогда
			ТекстСообщения = НСтр("ru='шахтера и фармацевта'");
		ИначеЕсли НЕ ЗначениеЯвляетсяДолжностьюЛетногоЭкипажа И ЗначениеЯвляетсяФармацевтическойДолжностью Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, " " + Нстр("ru='и'") + " ", ", ");
			ТекстСообщения = ТекстСообщения + " " + НСтр("ru='и фармацевта'");
		КонецЕсли;
	КонецЕсли;
		
	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
		
		ТекстСообщения = НСТр("ru='Должность не может одновременно являться должностью'") + " " + ТекстСообщения + ".";
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Если НЕ ВведенаВШтатноеРасписание Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаВвода");
	КонецЕсли; 

	Если НЕ ИсключенаИзШтатногоРасписания Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаИсключения");
	КонецЕсли; 
	
	Если (Не ИсключенаИзШтатногоРасписания) И ПометкаУдаления Тогда
		ТекстСообщения = Нстр("ru = 'У помеченной на удаление должности нельзя снять флаг ""Исключена из штатного расписания""!'",);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ);
	КонецЕсли;	

	Если ЗначениеЗаполнено(ДатаИсключения) И ЗначениеЗаполнено(ДатаВвода) И ДатаВвода > ДатаИсключения Тогда
		ТекстСообщения = Нстр("ru = 'Дата ввода должности в штатное расписание не может быть больше даты исключения!'",);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ);	
	КонецЕсли;		

	Если ИсключенаИзШтатногоРасписания Тогда 
		ПроверкаИспользованияВШтатномРасписании(Отказ);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПроверкаИспользованияВШтатномРасписании(Отказ)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Должность", Ссылка);
	Запрос.УстановитьПараметр("ДатаИсключения", ДатаИсключения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтатноеРасписание.Наименование КАК ПозицияШтатногоРасписания,
	|	ШтатноеРасписание.Ссылка
	|ИЗ
	|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|ГДЕ
	|	ШтатноеРасписание.Должность = &Должность
	|	И НЕ ШтатноеРасписание.ГруппаПозицийПодразделения
	|	И НЕ(ШтатноеРасписание.Закрыта
	|				И ШтатноеРасписание.ДатаЗакрытия <= &ДатаИсключения)";
	
	Результат = Запрос.Выполнить();
		
	Если Не Результат.Пустой() Тогда
		
		ТекстСообщения = Нстр("ru = 'Должность ""%1"" не может быть исключена из штатного расписания, т.к. она используется в действующих позициях:'"); 
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения,
			Ссылка,
			); 
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.ИсключенаИзШтатногоРасписания" , , Отказ);

		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = Нстр("ru = '- позиция ""%1""'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения,
				Выборка.ПозицияШтатногоРасписания);
	        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.ИсключенаИзШтатногоРасписания" , , Отказ);
		КонецЦикла;	
		
	КонецЕсли;	    
		
КонецПроцедуры	

Процедура ПередЗаписью(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		Если ПометкаУдаления И ВведенаВШтатноеРасписание И (Не ИсключенаИзШтатногоРасписания) Тогда
			ТекстСообщения = Нстр("ru = 'Нельзя пометить на удаление действующую должность'",);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	
	КонецЕсли;
	
	Если ПустаяСтрока(НаименованиеКраткое) Тогда
		НаименованиеКраткое = Наименование;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДополнительныеСведенияКлассификатора(ДополнительныеСведения) Экспорт
	
	ЗаполнитьКатегорию = Истина;
	Для Каждого ДополнительноеСведение Из ДополнительныеСведения Цикл
		
		Если ДополнительноеСведение.Ключ = "Категория" Тогда
			
			ЗаполнитьКатегорию = Ложь;
			ОКПДТРКатегория = ДополнительноеСведение.Значение;
			
		ИначеЕсли ДополнительноеСведение.Ключ = "Код" Тогда
			
			Значение = СокрЛП(ДополнительноеСведение.Значение);
			Если Не ПустаяСтрока(Значение) Тогда
				
				ОКПДТРКЧ = Прав(Значение, 1);
				ОКПДТРКод = Лев(Значение, СтрДлина(Значение) - 1);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗаполнитьКатегорию Тогда
		ОКПДТРКатегория = "4";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
