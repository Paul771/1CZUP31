
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Заголовок,ФизическоеЛицоСсылка");
	
	ПрочитатьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если  ИмяСобытия = "ИзменениеДанныхМестаРаботы" И Параметр.ФизическоеЛицо = ФизическоеЛицоСсылка Тогда
		
		ОбработкаИзмененияДанныхОРабочемМестеНаСервере(Параметр.Сотрудник);
		
	ИначеЕсли ИмяСобытия = "ИзмененСоставРолейФизическогоЛица" 
		И ФизическоеЛицоСсылка = Источник Тогда
		
		РолиФизическогоЛица.Очистить();
		Для каждого СтруктураРоли Из Параметр Цикл
			
			НоваяСтрокаРоли = РолиФизическогоЛица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаРоли, СтруктураРоли);
			НоваяСтрокаРоли.ФизическоеЛицо = ФизическоеЛицоСсылка;
			
		КонецЦикла;
		
		РолиФизическогоЛица.Сортировать("Организация,Роль");
		
		СотрудникиКлиентСерверРасширенный.УстановитьИнформациюОДругихРоляхФизическогоЛица(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НовоеМестоРаботы(Команда)
	СотрудникиКлиент.ОткрытьМестоРаботы(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИнформациюОДругихРолях(Команда)
	
	МассивРолей = Новый Массив;
	Для каждого СтрокаРолиФизическогоЛица Из РолиФизическогоЛица Цикл
		
		Если СтрокаРолиФизическогоЛица.Роль = ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.Акционер")
			ИЛИ СтрокаРолиФизическогоЛица.Роль = ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.ПрочийПолучательДоходов")
			ИЛИ СтрокаРолиФизическогоЛица.Роль = ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.БывшийСотрудник")
			ИЛИ СтрокаРолиФизическогоЛица.Роль = ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.РаздатчикЗарплаты") Тогда
			
			СтруктураРоли = Новый Структура("Организация,Роль");
			ЗаполнитьЗначенияСвойств(СтруктураРоли, СтрокаРолиФизическогоЛица);
			МассивРолей.Добавить(СтруктураРоли);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыОткрытия = Новый Структура("ФизическоеЛицоСсылка,МассивРолей", ФизическоеЛицоСсылка, МассивРолей);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбораРолейФизическогоЛица", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте 
Процедура Подключаемый_ОткрытьФормуСотрудника(Команда)
	СотрудникиКлиент.ОткрытьФормуСотрудника(ЭтаФорма, Команда);	
КонецПроцедуры	

&НаКлиенте
Процедура Подключаемый_ДругиеМестаРаботы(Команда)

	СотрудникиКлиент.ОткрытьФормуСпискаМестРаботыФизическогоЛица(ФизическоеЛицоСсылка, ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьДанные()
	
	СотрудникиФормы.ЗаполнитьФормуМестамиРаботы(ЭтаФорма, "Работа", "НовоеМестоРаботы", , Истина);
	СотрудникиФормы.УстановитьПараметрыИнфоНадписиФормыФизЛица(ЭтаФорма);
	СотрудникиФормыРасширенный.ДополнитьФормуИнформациейОДругихРоляхФизическогоЛица(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОбработкаИзмененияДанныхОРабочемМестеНаСервере(ПараметрСотрудник)
	СотрудникиФормы.ОбработкаИзмененияДанныхОРабочемМесте(ЭтаФорма, ПараметрСотрудник, "Работа","НовоеМестоРаботы", Истина);
КонецПроцедуры

#КонецОбласти
