
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "Заголовок,ФизическоеЛицоСсылка,ИзФормыСотрудника");
	
	СотрудникиФормы.ПрочитатьДанныеИзХранилищаВФорму(
		ЭтотОбъект,
		СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы),
		Параметры.АдресВХранилище);
	
	СтажиСУправляемымРостом.ЗагрузитьЗначения(КадровыйУчетРасширенный.СтажиСУправляемымРостом());
	ПроинициализироватьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтотОбъект, ИмяФормы);
	СотрудникиКлиент.ПроверитьРежимТолькоПросмотраДополнительнойФормы(ЭтотОбъект, ИзФормыСотрудника);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "РедактированиеПроцентаСевернойНадбавки" 
		И ФизическоеЛицоСсылка = Источник Тогда
		
		ФизическоеЛицоПроцентСевернойНадбавкиОбработкаОповещения(ИмяСобытия, Параметр, Источник);
		
	КонецЕсли;
	
	Если ИмяСобытия = "ИзмененСтажФизическогоЛица" И Источник.ВладелецФормы = ЭтотОбъект Тогда
		ОбработатьИзменениеСтажаФизическогоЛица(Параметр.ДанныеСтажей);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьПроцентСевернойНадбавкиНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПроцентыСевернойНадбавкиИзменить();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСведенияОСтажах

&НаКлиенте
Процедура СведенияОСтажахВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СведенияОСтажахПредставлениеСтажа" Тогда
		
		Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
			Возврат;
		КонецЕсли;
		
		ДатаСведений = ОбщегоНазначенияКлиент.ДатаСеанса();
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ВидыСтажа = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекущиеДанные.ВидСтажа));
		
		КадровыйУчетРасширенныйКлиент.ОткрытьФормуРедактированияСтажейФизическогоЛица(
			ЭтотОбъект, ФизическоеЛицоСсылка, ДатаСведений, ВидыСтажа, СтажиФизическихЛиц, Заголовок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОСтажахПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСведенияОСтаже();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыТрудоваяДеятельностьФизическихЛиц

&НаКлиенте
Процедура ТрудоваяДеятельностьФизическихЛицПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТрудоваяДеятельностьФизическихЛицПередНачаломИзменения(Элемент, Отказ)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТрудоваяДеятельностьФизическихЛицПередУдалением(Элемент, Отказ)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТрудоваяДеятельностьФизическихЛицПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицоСсылка;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыНаградыФизическихЛиц

&НаКлиенте
Процедура НаградыФизическихЛицПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаградыФизическихЛицПередНачаломИзменения(Элемент, Отказ)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаградыФизическихЛицПередУдалением(Элемент, Отказ)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаградыФизическихЛицПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицоСсылка;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроинициализироватьФорму()
	
	СведенияОНакопленныхСтажах = Новый ФиксированноеСоответствие(КадровыйУчетРасширенныйВызовСервера.СведенияОСтажахФизическогоЛица(ФизическоеЛицоСсылка, ТекущаяДатаСеанса()));
	
	Если НЕ СтажиФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтотОбъект, "СтажиФизическихЛиц");
		СтажиФизическихЛицПрочитан = Истина;
	КонецЕсли;
	
	ЗаполнитьДанныеОСтаже();
	
	Если НЕ НаградыФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтотОбъект, "НаградыФизическихЛиц");
		НаградыФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	Если НЕ ТрудоваяДеятельностьФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтотОбъект, "ТрудоваяДеятельностьФизическихЛиц");
		ТрудоваяДеятельностьФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплатыРасширенная,ЧтениеДанныхДляНачисленияЗарплатыРасширенная") Тогда
		
		УстановитьПредставлениеПроцентаСевернойНадбавки();
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"НадписьПроцентСевернойНадбавки",
			"ГиперСсылка",
			Ложь);
			
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗакрытыйДокумент);
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("СведенияОСтажах");
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СведенияОСтажах.ДатаОтсчета");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОСтаже()
	
	Если СведенияОСтажах.Количество() = 0 Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВидыСтажа.Ссылка КАК ВидСтажа
			|ИЗ
			|	Справочник.ВидыСтажа КАК ВидыСтажа
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВидыСтажа.Наименование";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = СведенияОСтажах.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			СформироватьПредставлениеСтажа(НоваяСтрока, СведенияОНакопленныхСтажах, ТекущаяДатаСеанса());
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаСведенияОСтажах Из СведенияОСтажах Цикл
			СформироватьПредставлениеСтажа(СтрокаСведенияОСтажах, СведенияОНакопленныхСтажах, ТекущаяДатаСеанса());
		КонецЦикла;
		
	КонецЕсли;
	
	СтажиФизическихЛицВСведенияОСтажах();
	
КонецПроцедуры

&НаСервере
Процедура СтажиФизическихЛицВСведенияОСтажах()
	
	ТребуетЗаписи = Ложь;
	Для каждого СтрокаСтажа Из СведенияОСтажах Цикл
		
		НайденныеСтроки = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", СтрокаСтажа.ВидСтажа));
		Если НайденныеСтроки.Количество() <> 0 Тогда
			
			ДанныеСтажа = Неопределено;
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если ДанныеСтажа = Неопределено
					Или ДанныеСтажа.Период < НайденнаяСтрока.Период Тогда
					
					ДанныеСтажа = НайденнаяСтрока;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ЗаполнитьЗначенияСвойств(СтрокаСтажа, ДанныеСтажа);
			СтрокаСтажа.Лет = Цел(ДанныеСтажа.РазмерМесяцев / 12);
			СтрокаСтажа.Месяцев = ДанныеСтажа.РазмерМесяцев - СтрокаСтажа.Лет * 12;
			СтрокаСтажа.Дней = ДанныеСтажа.РазмерДней;
			
			СформироватьПредставлениеСтажа(СтрокаСтажа, СведенияОНакопленныхСтажах, ТекущаяДатаСеанса());
			
			Если СтрокаСтажа.ТребуетЗаписи Тогда
				ТребуетЗаписи = Истина;
				СтрокаСтажа.СостояниеРасчета = 1;
			ИначеЕсли СтрокаСтажа.Прерван Тогда
				СтрокаСтажа.СостояниеРасчета = 2;
			Иначе
				СтрокаСтажа.СостояниеРасчета = 0;
			КонецЕсли;
			
		Иначе
			СтрокаСтажа.СостояниеРасчета = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТребуетЗаписи Тогда
		
		ТекстПодсказки =
			Новый ФорматированнаяСтрока(
				БиблиотекаКартинок.Предупреждение,
				" ",
				НСтр("ru='В сведениях о стаже не учтены кадровые переводы. Информация обновится после записи карточки сотрудника.'"));
				
	Иначе
		ТекстПодсказки = "";
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
		ЭтотОбъект, "СведенияОСтажах",
		ТекстПодсказки);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтажиНеЗаданыГруппа", "Видимость", Не СтажиЗаданы(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСтажаФизическогоЛица(ДанныеСтажей, УстанавливатьМодифицированность = Истина)
	
	ТекущиеДанные = Элементы.СведенияОСтажах.ТекущиеДанные;
	Если УстанавливатьМодифицированность И ТекущиеДанные <> Неопределено Тогда
		
		ВидСтажа = ТекущиеДанные.ВидСтажа;
		СтарыеСтроки = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", ВидСтажа));
		Для Каждого УдаляемаяСтрока Из СтарыеСтроки Цикл
			СтажиФизическихЛиц.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
	Иначе
		ВидСтажа = Неопределено;
		СтажиФизическихЛиц.Очистить();
	КонецЕсли;
	
	Для каждого СтрокаДанныеСтажей Из ДанныеСтажей Цикл
		
		Если ВидСтажа <> Неопределено
			И СтрокаДанныеСтажей.ВидСтажа <> ВидСтажа Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрокаСтажиФизическихЛиц = СтажиФизическихЛиц.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСтажиФизическихЛиц, СтрокаДанныеСтажей);
		НоваяСтрокаСтажиФизическихЛиц.Период = СтрокаДанныеСтажей.Период;
		
		Если ВидСтажа <> Неопределено И СтажиСУправляемымРостом.НайтиПоЗначению(ВидСтажа) <> Неопределено Тогда
			НоваяСтрокаСтажиФизическихЛиц.ТребуетЗаписи = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	СтажиФизическихЛицВСведенияОСтажах();
	
	Если УстанавливатьМодифицированность Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПредставлениеСтажа(ДанныеСтажа, СведенияОНакопленныхСтажах, ДатаАктуальности)
	
	ПредставлениеСтажа = "";
	Если Не ЗначениеЗаполнено(ДанныеСтажа.ДатаОтсчета) Тогда
		ПредставлениеСтажа = НСтр("ru = 'Нажмите, чтобы заполнить'");
	КонецЕсли;
	
	Если ПредставлениеСтажа = "" Тогда 
		
		СведенияНакопленныхСтажей = СведенияОНакопленныхСтажах.Получить(ДанныеСтажа.ВидСтажа);
		Если СведенияНакопленныхСтажей <> Неопределено Тогда
			
			СведенияОСтаже = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СведенияНакопленныхСтажей);
			СведенияОСтаже.ДатаОтсчета = СведенияОСтаже.ПериодРегистрации;
			
			ПродолжительностьСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.ПродолжительностьСтажа(СведенияОСтаже, ДатаАктуальности);
			
		Иначе
			
			СведенияОСтаже = ЗарплатаКадрыРасширенныйКлиентСервер.СведенияОСтаже();
			СведенияОСтаже.ДатаОтсчета = ДанныеСтажа.ДатаОтсчета;
			СведенияОСтаже.Лет = ДанныеСтажа.Лет;
			СведенияОСтаже.Месяцев = ДанныеСтажа.Месяцев;
			СведенияОСтаже.Дней = ДанныеСтажа.Дней;
			СведенияОСтаже.ИсчисляетсяСДатыПриема = ДанныеСтажа.ИсчисляетсяСДатыПриема;
			СведенияОСтаже.Прерван = ДанныеСтажа.Прерван;
			
			ПродолжительностьСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.ПродолжительностьСтажа(СведенияОСтаже, ДатаАктуальности);
			
		КонецЕсли;
		
		Если ДанныеСтажа.Прерван Тогда
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'На %1 составил %2'"), 
				Формат(ДанныеСтажа.ДатаОтсчета, "ДЛФ=Д"),
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		ИначеЕсли ДанныеСтажа.ИсчисляетсяСДатыПриема Тогда
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'С момента приема на работу (%1) на %2 составил %3'"), 
				Формат(ДанныеСтажа.ДатаОтсчета, "ДЛФ=Д"),
				Формат(ДатаАктуальности, "ДЛФ=Д"),
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		Иначе
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По трудовой книжке на %1 составил %2'"), 
				Формат(ДатаАктуальности, "ДЛФ=Д"), 
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеСтажа.ПредставлениеСтажа = ПредставлениеСтажа;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСведенияОСтаже()
	
	ТекущиеДанные = Элементы.СведенияОСтажах.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ДатаОтсчета) Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокиСтажа = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", ТекущиеДанные.ВидСтажа));
	Для каждого СтрокаСтажа Из СтрокиСтажа Цикл
		СтажиФизическихЛиц.Удалить(СтрокаСтажа);
	КонецЦикла;
	
	ТекущиеДанные.Лет = 0;
	ТекущиеДанные.Месяцев = 0;
	ТекущиеДанные.Дней = 0;
	ТекущиеДанные.ИсчисляетсяСДатыПриема = Ложь;
	ТекущиеДанные.ДатаОтсчета = '00010101';
	
	СформироватьПредставлениеСтажа(ТекущиеДанные, СведенияОНакопленныхСтажах, ОбщегоНазначенияКлиент.ДатаСеанса());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтажиНеЗаданыГруппа", "Видимость", Не СтажиЗаданы(ЭтотОбъект));
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ) Экспорт
	
	Если Модифицированность Тогда
		
		Если Не Отказ Тогда
			
			Если ПроверитьЗаполнение() Тогда
				
				ВозвращаемыйПараметр = Новый Структура;
				ВозвращаемыйПараметр.Вставить("ИмяФормы", ИмяФормы);
				ВозвращаемыйПараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
				
				Оповестить(
					"ИзмененыДанныеДополнительнойФормы",
					ВозвращаемыйПараметр,
					ВладелецФормы);
				
			Иначе
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт

	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаОк;
	КонецЕсли;
	
	Отказ = Ложь;

	СохранитьДанные(Отказ);
	
	Если НЕ Отказ  Тогда
		
		Модифицированность = Ложь;
		Если ЗакрытьФорму И Открыта() Тогда
			Закрыть();
		Иначе
			ПодключитьОбработчикОжидания("ПослеСохраненияНаКлиенте", 0.5, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияНаКлиенте()
	
	ПослеСохраненияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеСохраненияНаСервере()
	
	Для Каждого Запись Из СтажиФизическихЛиц Цикл
		Запись.ТребуетЗаписи = Ложь;
	КонецЦикла;
	
	ПроинициализироватьФорму();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеКомандыИзменитьПроцентСевернойНадбавки(Форма) Экспорт
	ТекстНадписи = НСтр("ru = 'Изменить процент надбавки'");
	Если Форма.ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПроцентСевернойНадбавки = 0 Тогда
		ТекстНадписи = НСтр("ru = 'Задать процент надбавки'");
	КонецЕсли;
	Возврат ТекстНадписи
КонецФункции

&НаКлиенте
Процедура ФизическоеЛицоПроцентСевернойНадбавкиОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр.Свойство("ДатаСтажа") Тогда
		
		НайденныеСтроки = СведенияОСтажах.НайтиСтроки(Новый Структура("ВидСтажа", Параметр.ВидСтажа));
		Если НайденныеСтроки.Количество() > 0 Тогда 
			
			СтрокаСтажа = НайденныеСтроки[0];
			
			СтрокаСтажа.ДатаОтсчета = Параметр.ДатаСтажа;
			СтрокаСтажа.Лет = Цел(Параметр.МесяцевСтажа / 12);
			СтрокаСтажа.Месяцев = Параметр.МесяцевСтажа - СтрокаСтажа.Лет * 12;
			СтрокаСтажа.Дней = Параметр.ДнейСтажа;
			
			СформироватьПредставлениеСтажа(СтрокаСтажа, СведенияОНакопленныхСтажах, ОбщегоНазначенияКлиент.ДатаСеанса());
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметр.Свойство("ДанныеСтажей") Тогда
		ОбработатьИзменениеСтажаФизическогоЛица(Параметр.ДанныеСтажей, Ложь);
	КонецЕсли;
	
	Если Параметр.Свойство("ВидСтажаПрежний") Тогда
		
		НайденныеСтроки = СведенияОСтажах.НайтиСтроки(Новый Структура("ВидСтажа", Параметр.ВидСтажаПрежний));
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			СтрокаСтажа = НайденныеСтроки[0];
			
			СтрокаСтажа.ДатаОтсчета = '00010101';
			СтрокаСтажа.Период = СтрокаСтажа.ДатаОтсчета;
			
			СтрокаСтажа.Лет = 0;
			СтрокаСтажа.Месяцев = 0;
			СтрокаСтажа.Дней = 0;
			
			СтрокаСтажа.ИсчисляетсяСДатыПриема = Ложь;
			
			СформироватьПредставлениеСтажа(СтрокаСтажа, СведенияОНакопленныхСтажах, ОбщегоНазначенияКлиент.ДатаСеанса());
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПредставлениеПроцентаСевернойНадбавки();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеПроцентаСевернойНадбавки()
	
	ФизическоеЛицоПроцентСевернойНадбавкиТекст = СотрудникиФормыРасширенный.ПредставлениеПроцентаСевернойНадбавки(ФизическоеЛицоСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентыСевернойНадбавкиИзменить()
	
	ИзСотрудника = ТипЗнч(ВладелецФормы.Параметры.Ключ) = Тип("СправочникСсылка.Сотрудники");
	
	Если ИзСотрудника Тогда
		ФизлицоЗаблокировано = СотрудникиКлиент.ЗаблокироватьФизическоеЛицоПриРедактировании(ВладелецФормы, Ложь);
	Иначе
		ФизлицоЗаблокировано = Истина;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ФизическоеЛицо", ФизическоеЛицоСсылка);
	ПараметрыОткрытияФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр ИЛИ НЕ ФизлицоЗаблокировано);
	
	ПараметрыОткрытияФормы.Вставить("СтажиФизическихЛиц", СтажиФизическихЛиц);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаРедактированияПроцентаСевернойНадбавки", ПараметрыОткрытияФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтотОбъект);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтажиЗаданы(Форма)
	
	СтажиЗаданы = Ложь;
	
	Для Каждого СтрокаСтажа Из Форма.СведенияОСтажах Цикл 
		
		Если СтрокаСтажа.ИсчисляетсяСДатыПриема Или ЗначениеЗаполнено(СтрокаСтажа.ДатаОтсчета)
			Или СтрокаСтажа.Лет <> 0 Или СтрокаСтажа.Месяцев <> 0 Или СтрокаСтажа.Дней <> 0 Тогда 
			
			СтажиЗаданы = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтажиЗаданы;
	
КонецФункции

&НаКлиенте
Функция ЗаблокироватьОбъектВФормеВладельце()
	
	Возврат СотрудникиКлиент.ЗаблокироватьОбъектВФормеВладельцеДополнительнойФормы(ЭтотОбъект, ИзФормыСотрудника);
	
КонецФункции


#КонецОбласти
