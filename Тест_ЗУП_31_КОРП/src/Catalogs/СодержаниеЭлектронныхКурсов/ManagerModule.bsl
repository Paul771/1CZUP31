#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

Процедура Перезаписать(ЭлементСодержания) Экспорт

	ОбъектЭлементСодержания =  ЭлементСодержания.ПолучитьОбъект();
	// Наименование будет обновлено в обработчике ПередЗаписью модуля объекта

	ОбъектЭлементСодержания.Записать();
			
КонецПроцедуры

Функция ТипЭлементаПоСсылке(СсылкаНаЭлемент, ЭтоГруппа) Экспорт
	
	Если ЭтоГруппа Тогда		
		Возврат Перечисления.ТипыЭлементовСодержанияЭлектронногоКурса.Группа;		
	Иначе		
		ВызватьИсключение НСтр("ru = 'Тип элемента содержания не определен'");		
	КонецЕсли;	
	
КонецФункции

Функция ДобавитьЭлементСодержания(ЭлектронныйКурс, СсылкаНаЭлемент, Группа, ЭтоГруппа = Ложь, Наименование = Неопределено, ТипЭлемента = Неопределено) Экспорт
	Возврат Справочники.ЭлектронныеКурсы.ДобавитьЭлементСодержания(ЭлектронныйКурс, СсылкаНаЭлемент, Группа, ЭтоГруппа, Наименование, ТипЭлемента);
КонецФункции

Процедура УстановитьСнятьПометкуУдаленияПодчиненныхЭлементов(Знач ЭлементСодержания, Знач ПометкаУдаления, Знач ЭлектронныйКурс = Неопределено) Экспорт
	
	Если ЭлектронныйКурс = Неопределено Тогда
		ЭлектронныйКурс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементСодержания, "Владелец");
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
	
		// Подчиненные элементы
		
		ПодчиненныеЭлементы = РазработкаЭлектронныхКурсовСлужебный.ВсеСсылкиЭлементаСправочника(ЭлементСодержания, Истина);
		
		Для каждого ПодчиненныйЭлемент Из ПодчиненныеЭлементы Цикл
		
			Если ТипЗнч(ПодчиненныйЭлемент) = Тип("СправочникСсылка.ПоставщикиЭлектронныхКурсов") Тогда
				Продолжить; // поставщика курса не удаляем
			КонецЕсли;			
			
			ПодчиненныйЭлементОбъект  = ПодчиненныйЭлемент.ПолучитьОбъект();
			ПодчиненныйЭлементОбъект.УстановитьПометкуУдаления(ПометкаУдаления, Истина);
		
		КонецЦикла;		
		
		// Статистика изучения

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ИзучениеЭлектронногоКурса.Ссылка КАК Ссылка,
			|	ИзучениеЭлектронногоКурса.Учащийся КАК Учащийся
			|ИЗ
			|	Документ.ИзучениеЭлектронногоКурса КАК ИзучениеЭлектронногоКурса
			|ГДЕ
			|	ИзучениеЭлектронногоКурса.ЭлектронныйКурс = &ЭлектронныйКурс
			|	И ИзучениеЭлектронногоКурса.Проведен = ИСТИНА";
		
		Запрос.УстановитьПараметр("ЭлектронныйКурс", ЭлектронныйКурс);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Учащийся) Тогда
				Продолжить; // Для совместимости с 3.1, где были тестовые документы
			КонецЕсли;			
			ИзучениеЭлектронногоКурсаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ИзучениеЭлектронногоКурсаОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЦикла;	
		
		ЗафиксироватьТранзакцию();
		
	Исключение
 
 		ОтменитьТранзакцию();
		ЭлектронноеОбучениеСлужебный.ЗаписатьОшибкуВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
		
	КонецПопытки;
		
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
