
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ТипОбъектаДокументооборота", ТипОбъектаДокументооборота);
	Параметры.Свойство("ВариантПравилаЗаполненияРеквизитов", ВариантПравилаЗаполненияРеквизитов);
	Параметры.Свойство("ПредставлениеРеквизитаОбъектаПотребителя", ПредставлениеРеквизитаОбъектаПотребителя);
	Параметры.Свойство("ТипРеквизитаОбъектаПотребителя", ТипРеквизитаОбъектаПотребителя);
	Параметры.Свойство("ИмяРеквизитаОбъектаДокументооборота", ИмяРеквизитаОбъектаДокументооборота);
	Параметры.Свойство("ПредставлениеРеквизитаОбъектаДокументооборота", ПредставлениеРеквизитаОбъектаДокументооборота);
	Параметры.Свойство("ЗначениеРеквизитаПотребителя", ЗначениеРеквизитаПотребителя);
	Параметры.Свойство("ВычисляемоеВыражение", ВычисляемоеВыражение);
	Параметры.Свойство("ОбновлятьЗначение", ОбновлятьЗначение);
	Параметры.Свойство("РеквизитыОбъектаДокументооборота", РеквизитыОбъектаДокументооборота);
	
	Параметры.Свойство("ДополнительныйРеквизитДокументооборота", ДополнительныйРеквизитДокументооборота);
	Параметры.Свойство("ДополнительныйРеквизитДокументооборотаID", ДополнительныйРеквизитДокументооборотаID);
	Параметры.Свойство("ДополнительныйРеквизитДокументооборотаТип", ДополнительныйРеквизитДокументооборотаТип);
	Параметры.Свойство("ДополнительныйРеквизитОбъекта", ДополнительныйРеквизитОбъекта);
	Параметры.Свойство("ДополнительныйРеквизитОбъектаСвойство", ДополнительныйРеквизитОбъектаСвойство);
	
	Параметры.Свойство("Ключевой", Ключевой);
	
	РеквизитОбъекта = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта");
	УказанноеЗначение = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение");
	ВыражениеНаВстроенномЯзыке = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке");
	НеЗаполнять = ПредопределенноеЗначение("Перечисление.ВариантыПравилЗаполненияРеквизитов.ПустаяСсылка");
	
	ЗначениеРеквизитаПотребителя = ТипРеквизитаОбъектаПотребителя.ПривестиЗначение(ЗначениеРеквизитаПотребителя);
	
	// Настроим поле ввода для примитивных типов.
	ПервыйТип = ТипРеквизитаОбъектаПотребителя.Типы()[0];
	Если ПервыйТип = Тип("Число")
		Или ПервыйТип = Тип("Дата") Тогда
		Элементы.ЗначениеРеквизитаПотребителя.КнопкаРегулирования = Истина;
	КонецЕсли;
	
	СокращенноеНаименованиеКонфигурации = ИнтеграцияС1СДокументооборот.СокращенноеНаименованиеКонфигурации();
	Если ЗначениеЗаполнено(СокращенноеНаименованиеКонфигурации) Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Правило заполнения реквизита %1'"), СокращенноеНаименованиеКонфигурации);
	КонецЕсли;
	
	// Ограничим выбор вариантов заполнения и флажка Ключевой.
	Если ВариантПравилаЗаполненияРеквизитов = ВыражениеНаВстроенномЯзыке
		Или ВариантПравилаЗаполненияРеквизитов = РеквизитОбъекта
		Или ВариантПравилаЗаполненияРеквизитов = НеЗаполнять Тогда
		Элементы.Ключевой.Доступность = Ложь;
	Иначе
		Элементы.Ключевой.Доступность = Истина;
	КонецЕсли;
	ДоступенФункционалОбмен = ИнтеграцияС1СДокументооборотПовтИсп.ДоступенФункционалВерсииСервиса("1.3.2.3.CORP");
	Элементы.ОбновлятьЗначение.Видимость = ДоступенФункционалОбмен;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура КлючевойПриИзменении(Элемент)
	
	Если Ключевой Тогда
		ВариантПравилаЗаполненияРеквизитов = УказанноеЗначение;
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПравилаЗаполненияРеквизитовПриИзменении(Элемент)
	
	Если ВариантПравилаЗаполненияРеквизитов = ВыражениеНаВстроенномЯзыке
		Или ВариантПравилаЗаполненияРеквизитов = РеквизитОбъекта
		Или ВариантПравилаЗаполненияРеквизитов = НеЗаполнять Тогда
		Ключевой = Ложь;
		Элементы.Ключевой.Доступность = Ложь;
	Иначе
		Элементы.Ключевой.Доступность = Истина;
	КонецЕсли;
	
	ОбновлятьЗначение =
		ДоступенФункционалОбмен
		И (ОбновлятьЗначение Или ВариантПравилаЗаполненияРеквизитов = РеквизитОбъекта)
		И Не (ВариантПравилаЗаполненияРеквизитов = НеЗаполнять)
		И Не (ВариантПравилаЗаполненияРеквизитов = УказанноеЗначение);
		
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеРеквизитаОбъектаДокументооборотаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьРеквизитОбъектаДокументооборота();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеРеквизитаПотребителяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(ЗначениеРеквизитаПотребителя) = Тип("Число")
		Или ТипЗнч(ЗначениеРеквизитаПотребителя) = Тип("Дата") 
		Или ТипЗнч(ЗначениеРеквизитаПотребителя) = Тип("Булево") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ВыбратьЗначениеРеквизитаПотребителя(Элементы.ЗначениеРеквизитаПотребителя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВычисляемоеВыражениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыбратьВычисляемоеВыражение();
	
КонецПроцедуры
 
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяРеквизитаОбъектаДокументооборота");
	Результат.Вставить("ПредставлениеРеквизитаОбъектаДокументооборота");
	Результат.Вставить("ЗначениеРеквизитаПотребителя");
	Результат.Вставить("ВычисляемоеВыражение");
	Результат.Вставить("Картинка");
	
	Если ВариантПравилаЗаполненияРеквизитов = РеквизитОбъекта Тогда 
		Результат.ИмяРеквизитаОбъектаДокументооборота = ИмяРеквизитаОбъектаДокументооборота;
		Результат.ПредставлениеРеквизитаОбъектаДокументооборота = ПредставлениеРеквизитаОбъектаДокументооборота;
		Результат.Картинка = 1;
		
	ИначеЕсли ВариантПравилаЗаполненияРеквизитов = УказанноеЗначение Тогда 
		Результат.ЗначениеРеквизитаПотребителя = ЗначениеРеквизитаПотребителя;
		Результат.Картинка = 2;
		
	ИначеЕсли ВариантПравилаЗаполненияРеквизитов = ВыражениеНаВстроенномЯзыке Тогда 
		Результат.ВычисляемоеВыражение = ВычисляемоеВыражение;
		Результат.Картинка = 3;
		
	КонецЕсли;
	
	Результат.Вставить("ВариантПравилаЗаполненияРеквизитов", ВариантПравилаЗаполненияРеквизитов);
	Результат.Вставить("ОбновлятьЗначение", ОбновлятьЗначение);
	Результат.Вставить("ДополнительныйРеквизитДокументооборота", ДополнительныйРеквизитДокументооборота);
	Результат.Вставить("ДополнительныйРеквизитДокументооборотаID", ДополнительныйРеквизитДокументооборотаID);
	Результат.Вставить("ДополнительныйРеквизитДокументооборотаТип", ДополнительныйРеквизитДокументооборотаТип);
	Результат.Вставить("Ключевой", Ключевой);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьРеквизитОбъектаДокументооборота()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъектаДокументооборота", ТипОбъектаДокументооборота);
	ПараметрыФормы.Вставить("РеквизитыОбъектаДокументооборота", РеквизитыОбъектаДокументооборота);
	ПараметрыФормы.Вставить("ИмяРеквизитаОбъектаДокументооборота", ИмяРеквизитаОбъектаДокументооборота);
	ПараметрыФормы.Вставить("ПредставлениеРеквизитаОбъектаПотребителя", ПредставлениеРеквизитаОбъектаПотребителя);
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьРеквизитОбъектаДокументооборотаЗавершение", ЭтаФорма);
	
	ОткрытьФорму("Справочник.ПравилаИнтеграцииС1СДокументооборотом.Форма.ВыборРеквизитаДокументооборота",
		ПараметрыФормы, ЭтаФорма,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРеквизитОбъектаДокументооборотаЗавершение(Результат, ПараметрыОповещения) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") Тогда 
		Результат.Свойство("Имя", ИмяРеквизитаОбъектаДокументооборота);
		Результат.Свойство("Представление", ПредставлениеРеквизитаОбъектаДокументооборота);
		Результат.Свойство("ДополнительныйРеквизитДокументооборота", ДополнительныйРеквизитДокументооборота);
		Результат.Свойство("ДополнительныйРеквизитДокументооборотаID", ДополнительныйРеквизитДокументооборотаID);
		Результат.Свойство("ДополнительныйРеквизитДокументооборотаТип", ДополнительныйРеквизитДокументооборотаТип);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначениеРеквизитаПотребителя(Элемент);
	
	Типы = ТипРеквизитаОбъектаПотребителя.Типы();
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("ОписаниеТипа", ТипРеквизитаОбъектаПотребителя);
	ПараметрыВыбора.Вставить("ТекстРедактирования", Элемент.ТекстРедактирования);
	
	Если Типы.Количество() = 1 Тогда 
		ВыбратьЗначениеРеквизитаПотребителяЗавершениеВыбораТипа(Типы[0], ПараметрыВыбора);
	Иначе
		Оповещение = Новый ОписаниеОповещения(
			"ВыбратьЗначениеРеквизитаПотребителяЗавершениеВыбораТипа",
			ЭтаФорма,
			ПараметрыВыбора);
		СписокТипов = Новый СписокЗначений;
		СписокТипов.ЗагрузитьЗначения(Типы);
		ПоказатьВыборИзСписка(Оповещение, СписокТипов, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначениеРеквизитаПотребителяЗавершениеВыбораТипа(ЗначениеТипа, ПараметрыВыбора) Экспорт
	
	ОписаниеТипа = ПараметрыВыбора.ОписаниеТипа;
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьЗначениеРеквизитаПотребителяЗавершениеВводаЗначения", ЭтаФорма);
	
	Если ЗначениеТипа = Тип("Строка") Тогда 
		ЗначениеРеквизита = ПараметрыВыбора.ТекстРедактирования;
		Если ОписаниеТипа.КвалификаторыСтроки.Длина = 0 Или ОписаниеТипа.КвалификаторыСтроки.Длина > 40 Тогда
			Многострочность = Истина;
		Иначе
			Многострочность = Ложь;
		КонецЕсли;
		
		ПоказатьВводСтроки(Оповещение, ЗначениеРеквизита, 
			ПредставлениеРеквизитаОбъектаПотребителя,
			ОписаниеТипа.КвалификаторыСтроки.Длина, 
			Многострочность); 
		
	ИначеЕсли ЗначениеТипа = Тип("Число") Тогда 
		ЗначениеРеквизита = ЗначениеРеквизитаПотребителя;
		ПоказатьВводЧисла(Оповещение, ЗначениеРеквизита, 
			ПредставлениеРеквизитаОбъектаПотребителя, 
			ОписаниеТипа.КвалификаторыЧисла.Разрядность, 
			ОписаниеТипа.КвалификаторыЧисла.РазрядностьДробнойЧасти);
			
	ИначеЕсли ЗначениеТипа = Тип("Дата") Тогда 
		ЗначениеРеквизита = ЗначениеРеквизитаПотребителя;
		ПоказатьВводДаты(Оповещение, ЗначениеРеквизита, 
			ПредставлениеРеквизитаОбъектаПотребителя, 
			ОписаниеТипа.КвалификаторыДаты.ЧастиДаты); 
		
	ИначеЕсли ЗначениеТипа = Тип("Булево") Тогда
		ЗначениеРеквизита = ЗначениеРеквизитаПотребителя;
		ПоказатьВводЗначения(Оповещение, ЗначениеРеквизита, ПредставлениеРеквизитаОбъектаПотребителя, Тип("Булево"));
		
	Иначе
		ИмяОбъекта = ИмяОбъектаМетаданныхПоТипу(ЗначениеТипа);
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("ТекущаяСтрока", ЗначениеРеквизитаПотребителя);
		Если ИмяОбъекта = "Справочник.ЗначенияСвойствОбъектов" Тогда
			Отбор = Новый Структура("Владелец", ДополнительныйРеквизитОбъектаСвойство);
			ПараметрыФормы.Вставить("Отбор", Отбор);
		КонецЕсли; 
		ОткрытьФорму(ИмяОбъекта + ".ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,
			Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначениеРеквизитаПотребителяЗавершениеВводаЗначения(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗначениеРеквизитаПотребителя = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВычисляемоеВыражение();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВычисляемоеВыражение", ВычисляемоеВыражение);
	ПараметрыФормы.Вставить("ТипВыражения", "ПравилоЗагрузки");
	ПараметрыФормы.Вставить("ТипОбъектаДокументооборота", ТипОбъектаДокументооборота);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьВычисляемоеВыражениеЗавершение", ЭтаФорма);
	
	ОткрытьФорму("Справочник.ПравилаИнтеграцииС1СДокументооборотом.Форма.ВыражениеНаВстроенномЯзыке",
		ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВычисляемоеВыражениеЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда 
		ВычисляемоеВыражение = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.ПредставлениеРеквизитаОбъектаДокументооборота.Доступность = (ВариантПравилаЗаполненияРеквизитов = РеквизитОбъекта);
	Элементы.ПредставлениеРеквизитаОбъектаДокументооборота.АвтоОтметкаНезаполненного = 
		(ВариантПравилаЗаполненияРеквизитов = РеквизитОбъекта);
	Элементы.ПредставлениеРеквизитаОбъектаДокументооборота.ОтметкаНезаполненного = 
		(ВариантПравилаЗаполненияРеквизитов = РеквизитОбъекта) И Не ЗначениеЗаполнено(ПредставлениеРеквизитаОбъектаДокументооборота);
	
	Элементы.ЗначениеРеквизитаПотребителя.Доступность = (ВариантПравилаЗаполненияРеквизитов = УказанноеЗначение);
	Элементы.ЗначениеРеквизитаПотребителя.АвтоОтметкаНезаполненного = (ВариантПравилаЗаполненияРеквизитов = УказанноеЗначение);
	Элементы.ЗначениеРеквизитаПотребителя.ОтметкаНезаполненного = 
		(ВариантПравилаЗаполненияРеквизитов = УказанноеЗначение) И Не ЗначениеЗаполнено(ЗначениеРеквизитаПотребителя);
	
	Элементы.ВычисляемоеВыражение.Доступность = (ВариантПравилаЗаполненияРеквизитов = ВыражениеНаВстроенномЯзыке);
	Элементы.ВычисляемоеВыражение.АвтоОтметкаНезаполненного = (ВариантПравилаЗаполненияРеквизитов = ВыражениеНаВстроенномЯзыке);
	Элементы.ВычисляемоеВыражение.ОтметкаНезаполненного = 
		(ВариантПравилаЗаполненияРеквизитов = ВыражениеНаВстроенномЯзыке) И Не ЗначениеЗаполнено(ВычисляемоеВыражение);
	
	Элементы.ОбновлятьЗначение.Доступность = НЕ ВариантПравилаЗаполненияРеквизитов = УказанноеЗначение;
	ОбновлятьЗначение = ОбновлятьЗначение И НЕ ВариантПравилаЗаполненияРеквизитов = УказанноеЗначение;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ВариантПравилаЗаполненияРеквизитов = Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта Тогда 
		ПроверяемыеРеквизиты.Добавить("ПредставлениеРеквизитаОбъектаДокументооборота");
		
	ИначеЕсли ВариантПравилаЗаполненияРеквизитов = Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение Тогда 
		ПроверяемыеРеквизиты.Добавить("ЗначениеРеквизитаПотребителя");
		
	ИначеЕсли ВариантПравилаЗаполненияРеквизитов = Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке Тогда 
		ПроверяемыеРеквизиты.Добавить("ВычисляемоеВыражение");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИмяОбъектаМетаданныхПоТипу(ТипОбъекта)
	
	Возврат Метаданные.НайтиПоТипу(ТипОбъекта).ПолноеИмя();

КонецФункции

#КонецОбласти
