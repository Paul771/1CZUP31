
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Ключ.Пустая() Тогда
		Справочники.ВопросыДляСобеседования.ЗаполнитьДеревоФормы(КритерииОценкиДерево, Объект.Ссылка);
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ЭлементарныйВопрос", ПредопределенноеЗначение("ПланВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка"));
		ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
		Элементы.Ключи.ОтборСтрок = ОтборСтрок;
		УстановитьВидимостьЭлементовФормы(ЭтаФорма);
	КонецЕсли;
	
	ТипВопросаСтароеЗначение = Объект.ТипВопроса;
	
	ДоступноДобавлениеВопросов = ПравоДоступа("Добавление", Метаданные.Справочники.ВопросыДляСобеседования);
	Если Не ДоступноДобавлениеВопросов Тогда
		Элементы.КритерииОценкиДеревоДобавитьКритерий.Доступность = Ложь;
		Элементы.КритерииОценкиДеревоДобавитьКлюч.Доступность = Ложь;
		Элементы.КритерииОценкиДеревоВвестиКомментарий.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.PARLA
		Или Объект.ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.ТриПлюсаТриМинуса Тогда
		Элементы.КритерииОценкиДеревоДобавитьКритерий.Доступность = Ложь;
		Элементы.КритерииОценкиДеревоДобавитьКлюч.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() И Объект.ТипВопроса = ПредопределенноеЗначение("Перечисление.ТипыВопросовПоМетодуСИвановой.Мотивация") Тогда
		Объект.СпособОтображенияПодсказки = Перечисления.СпособыОтображенияПодсказок.КонтекстнаяПодсказка;
	КонецЕсли;
	
	ЭлектронноеИнтервью.УстановитьОформлениеДереваКритериевОценки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.КлючевыеВопросы.Очистить();
	Для каждого СтрокаДерева Из КритерииОценкиДерево.ПолучитьЭлементы() Цикл
		Если Не ЗначениеЗаполнено(СтрокаДерева.ЭлементарныйВопрос) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = Объект.КлючевыеВопросы.Добавить();
		НоваяСтрока.ЭлементарныйВопрос = СтрокаДерева.ЭлементарныйВопрос;
		НоваяСтрока.Предопределенный = СтрокаДерева.Предопределенный;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Для каждого СтрокаВопроса Из КритерииОценкиДерево.ПолучитьЭлементы() Цикл
		Порядок = 1;
		Для каждого СтрокаОтвета Из СтрокаВопроса.ПолучитьЭлементы() Цикл
			Если Не ЗначениеЗаполнено(СтрокаОтвета.Ответ) Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаОтвета.Порядок <> Порядок Тогда
				Ответ = СтрокаОтвета.Ответ.ПолучитьОбъект();
				Ответ.РеквизитДопУпорядочивания = Порядок;
				Ответ.Записать();
			КонецЕсли;
			Порядок = Порядок + 1;
		КонецЦикла;
		Если СтрокаВопроса.ТребуетсяКомментарий <> СтрокаВопроса.ЭлементарныйВопрос.ТребуетсяКомментарий
				ИЛИ СтрокаВопроса.ПояснениеКомментария <> СтрокаВопроса.ЭлементарныйВопрос.ПояснениеКомментария Тогда
			ВопросОбъект = СтрокаВопроса.ЭлементарныйВопрос.ПолучитьОбъект();
			ВопросОбъект.ТребуетсяКомментарий = СтрокаВопроса.ТребуетсяКомментарий;
			ВопросОбъект.ПояснениеКомментария = СтрокаВопроса.ПояснениеКомментария;
			ВопросОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты КАК ВопросШаблонаАнкеты,
		|	ИСТИНА КАК ОбновитьФормулировку
		|ПОМЕСТИТЬ ВТВопросыШаблоновАнкет
		|ИЗ
		|	РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Вакансии.ЭтапыРаботыСКандидатами КАК ВакансииЭтапыРаботыСКандидатами
		|		ПО ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.Владелец = ВакансииЭтапыРаботыСКандидатами.ШаблонАнкеты
		|ГДЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования = &ВопросДляСобеседования
		|	И НЕ ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.ПометкаУдаления
		|	И ВакансииЭтапыРаботыСКандидатами.Ссылка В(&ОбновляемыеОбъекты)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты,
		|	ИСТИНА
		|ИЗ
		|	РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрофилиДолжностей.ЭтапыРаботыСКандидатами КАК ПрофилиДолжностейЭтапыРаботыСКандидатами
		|		ПО ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.Владелец = ПрофилиДолжностейЭтапыРаботыСКандидатами.ШаблонАнкеты
		|ГДЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования = &ВопросДляСобеседования
		|	И НЕ ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.ПометкаУдаления
		|	И ПрофилиДолжностейЭтапыРаботыСКандидатами.Ссылка В(&ОбновляемыеОбъекты)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты,
		|	ИСТИНА
		|ИЗ
		|	РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Вакансии.ЭтапыРаботыСКандидатами КАК ВакансииЭтапыРаботыСКандидатами
		|		ПО ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.Владелец = ВакансииЭтапыРаботыСКандидатами.ШаблонАнкеты
		|ГДЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования = &ВопросДляСобеседования
		|	И НЕ ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.ПометкаУдаления
		|	И ВакансииЭтапыРаботыСКандидатами.Ссылка.ПрофильДолжности В(&ОбновляемыеОбъекты)
		|	И ВакансииЭтапыРаботыСКандидатами.Ссылка.СоответствуетПрофилюДолжности
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты,
		|	ЛОЖЬ
		|ИЗ
		|	РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|ГДЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования = &ВопросДляСобеседования
		|	И НЕ ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.ПометкаУдаления
		|	И НЕ ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.Подсказка ПОДОБНО &Подсказка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВопросыШаблоновАнкет.ВопросШаблонаАнкеты КАК ВопросШаблонаАнкеты,
		|	МАКСИМУМ(ВТВопросыШаблоновАнкет.ОбновитьФормулировку) КАК ОбновитьФормулировку
		|ИЗ
		|	ВТВопросыШаблоновАнкет КАК ВТВопросыШаблоновАнкет
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТВопросыШаблоновАнкет.ВопросШаблонаАнкеты";
	Запрос.УстановитьПараметр("ВопросДляСобеседования", Объект.Ссылка);
	Запрос.УстановитьПараметр("ОбновляемыеОбъекты", ОбъектыДляОбновления);
	ПодсказкаВопроса = Объект.Подсказка;
	Если Объект.ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.Мотивация Тогда
		ПодсказкаВопроса = ПодсказкаВопроса + "
							|" + НСтр("ru = 'Ответ вводить через кнопку ""Мотивация""'");
	КонецЕсли;
	Запрос.УстановитьПараметр("Подсказка", ПодсказкаВопроса);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ВопросОбъект = Выборка.ВопросШаблонаАнкеты.ПолучитьОбъект();
		Если Выборка.ОбновитьФормулировку Тогда
			ВопросОбъект.Формулировка = Объект.Формулировка;
		КонецЕсли;
		ВопросОбъект.Подсказка = ПодсказкаВопроса;
		ВопросОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписьВопроса", Новый Структура, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля ТипВопроса
//
&НаКлиенте
Процедура ТипВопросаПриИзменении(Элемент)
	
	Если Объект.ТипВопроса = ПредопределенноеЗначение("Перечисление.ТипыВопросовПоМетодуСИвановой.PARLA")
		ИЛИ Объект.ТипВопроса = ПредопределенноеЗначение("Перечисление.ТипыВопросовПоМетодуСИвановой.ТриПлюсаТриМинуса") Тогда
		
		Если Объект.ТипВопроса <> ТипВопросаСтароеЗначение
			И КритерииОценкиДерево.ПолучитьЭлементы().Количество() > 0 Тогда
			
			ТекстВопроса = НСтр("ru = 'При изменении типа вопроса
						   |критерии будут перезаполнены.
						   |
						   |Продолжить?'");
						   
			Оповещение = Новый ОписаниеОповещения("ТипВопросаПриИзмененииЗавершение", ЭтаФорма);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			
			ТипВопросаПриИзмененииНаСервере();
			ПерезаполнитьПоТипуВопроса();
			УстановитьВидимостьЭлементовФормы(ЭтаФорма);
			Для каждого ТекущаяСтрока Из КритерииОценкиДерево.ПолучитьЭлементы() Цикл
				Элементы.КритерииОценкиДерево.Развернуть(ТекущаяСтрока.ПолучитьИдентификатор(), Истина);
			КонецЦикла;
			
			Элементы.КритерииОценкиДеревоДобавитьКритерий.Доступность = Ложь;
			Элементы.КритерииОценкиДеревоДобавитьКлюч.Доступность = Ложь;
			
		КонецЕсли;
		
	Иначе
		
		ТипВопросаПриИзмененииНаСервере();
		ПерезаполнитьПоТипуВопроса();
		УстановитьВидимостьЭлементовФормы(ЭтаФорма);
		
		Элементы.КритерииОценкиДеревоДобавитьКритерий.Доступность = ДоступноДобавлениеВопросов;
		Элементы.КритерииОценкиДеревоДобавитьКлюч.Доступность = ДоступноДобавлениеВопросов;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКритерииОценкиДерево

&НаКлиенте
Процедура КритерииОценкиДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КритерииОценкиДеревоТребуетсяКомментарий" Тогда
		СтандартнаяОбработка = Ложь;
		ВвестиКомментарийТекущегоВопроса();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Наименование) Тогда
		ОбновитьДанныеВопроса(Элемент.ТекущаяСтрока);
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.Уровень = 1 Тогда
		ЭлементарныйВопрос = Элемент.ТекущиеДанные.ПолучитьРодителя().ЭлементарныйВопрос;
		ОтветНаВопрос = Элемент.ТекущиеДанные.Ответ;
		Если ЗначениеЗаполнено(ЭлементарныйВопрос) И ЗначениеЗаполнено(ОтветНаВопрос) Тогда
			Элементы.Ключи.ТолькоПросмотр = Ложь;
		Иначе
			Элементы.Ключи.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("КритерииОценкиДеревоПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.Предопределенный Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.Уровень = 0 Тогда
		ЭлементарныйВопрос = Элемент.ТекущиеДанные.ЭлементарныйВопрос;
		УдалитьСтрокиКлючей(ЭлементарныйВопрос);
	Иначе
		ЭлементарныйВопрос = Элемент.ТекущиеДанные.ПолучитьРодителя().ЭлементарныйВопрос;
		Ответ = Элемент.ТекущиеДанные.Ответ;
		УдалитьСтрокиКлючей(ЭлементарныйВопрос, Ответ);
		Если ЗначениеЗаполнено(Ответ) Тогда
			УдалитьОтветНаВопрос(Ответ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКлючи

&НаКлиенте
Процедура КлючиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	КритерииОценкиТекущиеДанные = Элементы.КритерииОценкиДерево.ТекущиеДанные;
		
	НоваяСтрока = Объект.Ключи.Добавить();
	НоваяСтрока.ЭлементарныйВопрос = КритерииОценкиТекущиеДанные.ПолучитьРодителя().ЭлементарныйВопрос;
	НоваяСтрока.ОтветНаВопрос = КритерииОценкиТекущиеДанные.Ответ;
	НоваяСтрока.Балл = 1;

	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ЭлементарныйВопрос", НоваяСтрока.ЭлементарныйВопрос); 
	СтруктураОтбора.Вставить("ОтветНаВопрос", НоваяСтрока.ОтветНаВопрос);
	ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
	Элементы.Ключи.ОтборСтрок = ОтборСтрок;
	Элементы.Ключи.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.Ключи.ТекущийЭлемент = Элементы.КлючиХарактеристикаПерсонала;
	Элементы.Ключи.ИзменитьСтроку();
	УстановитьКоличествоСтроки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КлючиПослеУдаления(Элемент)
	
	УстановитьКоличествоСтроки(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИОбновитьФормулировки(Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	ЗаписатьИОбновитьФормулировки(Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКритерий(Команда)
	
	Модифицированность = Истина;
	НоваяСтрока = КритерииОценкиДерево.ПолучитьЭлементы().Добавить();
	НоваяСтрока.Уровень = 0;
	Элементы.КритерииОценкиДерево.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.КритерииОценкиДерево.ИзменитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКлюч(Команда)
	
	ТекущиеДанные = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
			ИЛИ ТекущиеДанные.Предопределенный Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Уровень = 0 Тогда
		Родитель = ТекущиеДанные;
	Иначе
		Родитель = ТекущиеДанные.ПолучитьРодителя();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Родитель.Наименование) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Наименование критерия не заполнено'"));
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	НоваяСтрока = Родитель.ПолучитьЭлементы().Добавить();
	НоваяСтрока.Уровень = 1;
	Элементы.КритерииОценкиДерево.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.КритерииОценкиДерево.ИзменитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиКомментарий(Команда)
	
	ВвестиКомментарийТекущегоВопроса();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКоличествоСтроки(ФормаОбъекта, ТекущаяСтрока=Неопределено)
	
	Объект = ФормаОбъекта.Объект;
	Элементы = ФормаОбъекта.Элементы;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТекущаяСтрока = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	КонецЕсли; 
	
	ЭлементарныйВопрос = ТекущаяСтрока.ПолучитьРодителя().ЭлементарныйВопрос;
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ЭлементарныйВопрос", ЭлементарныйВопрос);
	СтруктураПоиска.Вставить("ОтветНаВопрос", ТекущаяСтрока.Ответ);
	Массив = Объект.Ключи.НайтиСтроки(СтруктураПоиска);
	ТекущаяСтрока.КоличествоКлючей = Массив.Количество();
	
КонецПроцедуры
 
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементовФормы(Форма)
	
	Если Форма.Объект.ТипВопроса = ПредопределенноеЗначение("Перечисление.ТипыВопросовПоМетодуСИвановой.Мотивация") Тогда
		Форма.Элементы.ГруппаВопросы.Видимость = Ложь;
	Иначе
		Форма.Элементы.ГруппаВопросы.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Продолжение процедуры ТипВопросаПриИзменении после закрытия вопроса о перезаполнении критериев.
// При согласии пользователя перезаполняет реквизиты по типу вопроса.
//
// Параметры 
//	Результат - КодВозвратаДиалога, Неопределено - ответ пользователя. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ТипВопросаПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ТипВопросаПриИзмененииНаСервере();
		ПерезаполнитьПоТипуВопроса();
		УстановитьВидимостьЭлементовФормы(ЭтаФорма);
		Для каждого ТекущаяСтрока Из КритерииОценкиДерево.ПолучитьЭлементы() Цикл
			Элементы.КритерииОценкиДерево.Развернуть(ТекущаяСтрока.ПолучитьИдентификатор(), Истина);
		КонецЦикла;
		
		Элементы.КритерииОценкиДеревоДобавитьКритерий.Доступность = Ложь;
		Элементы.КритерииОценкиДеревоДобавитьКлюч.Доступность = Ложь;
	Иначе
		Объект.ТипВопроса = ТипВопросаСтароеЗначение;
	КонецЕсли;
	
КонецПроцедуры

// Процедура обрабатывает изменение поля ТипВопроса на сервере
//
&НаСервере
Процедура ТипВопросаПриИзмененииНаСервере()
	
	Если Объект.ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.Мотивация Тогда
		Объект.СпособОтображенияПодсказки = Перечисления.СпособыОтображенияПодсказок.КонтекстнаяПодсказка;
	КонецЕсли;
	
	ТипВопросаСтароеЗначение = Объект.ТипВопроса;	
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьПоТипуВопроса()
	
	Объект.КлючевыеВопросы.Очистить();
	Объект.Ключи.Очистить();
	КритерииОценкиДерево.ПолучитьЭлементы().Очистить();
	
	СписокВопросов = СписокВопросов(Объект.ТипВопроса);
	Для каждого Вопрос Из СписокВопросов Цикл
		
		НоваяСтрокаВопрос = КритерииОценкиДерево.ПолучитьЭлементы().Добавить();
		НоваяСтрокаВопрос.Наименование = Вопрос;
		НоваяСтрокаВопрос.ЭлементарныйВопрос = Вопрос;
		НоваяСтрокаВопрос.Уровень = 0;
		НоваяСтрокаВопрос.Предопределенный = Истина;
		
		СписокОтветов = СписокОтветовНаВопрос(Объект.ТипВопроса, Вопрос);
		Порядок = 1;
		Для каждого Ответ Из СписокОтветов Цикл
			НоваяСтрокаОтвет = НоваяСтрокаВопрос.ПолучитьЭлементы().Добавить();
			НоваяСтрокаОтвет.Наименование = Ответ;
			НоваяСтрокаОтвет.ЭлементарныйВопрос = Вопрос;
			НоваяСтрокаОтвет.Ответ = Ответ;
			НоваяСтрокаОтвет.Уровень = 1;
			НоваяСтрокаОтвет.Порядок = Порядок;
			НоваяСтрокаОтвет.Предопределенный = Истина;
			Порядок = Порядок + 1;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура удаления ключей по ключевому вопросу
//
// Параметры:
//	ЭлементарныйВопрос - ПланыВидовХарактеристикСсылка.ВопросыДляАнкетирования - Ссылка на удаляемый ключевой вопрос.
//
&НаКлиенте
Процедура УдалитьСтрокиКлючей(ЭлементарныйВопрос, Ответ = Неопределено)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ЭлементарныйВопрос", ЭлементарныйВопрос);
	Если Ответ <> Неопределено Тогда
		СтруктураПоиска.Вставить("ОтветНаВопрос", Ответ);
	КонецЕсли;
	УдаляемыеСтрокиТаблицы = Объект.Ключи.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого УдаляемаяСтрока Из УдаляемыеСтрокиТаблицы Цикл
		Объект.Ключи.Удалить(Объект.Ключи.Индекс(УдаляемаяСтрока));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеВопроса(ИдентификаторСтроки)
	
	ТекущаяСтрока = КритерииОценкиДерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ТекущаяСтрока.Уровень = 0 Тогда
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ЭлементарныйВопрос) Тогда
			ЭлементарныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоздатьЭлемент();
			ЭлементарныйВопрос.Наименование = ТекущаяСтрока.Наименование;
			ЭлементарныйВопрос.Формулировка = ТекущаяСтрока.Наименование;
			ЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз;
			ЭлементарныйВопрос.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ВариантыОтветовАнкет");
			ЭлементарныйВопрос.ВидПереключателя = Перечисления.ВидыПереключателяВАнкетах.Тумблер;
			ЭлементарныйВопрос.Записать();
			ТекущаяСтрока.ЭлементарныйВопрос = ЭлементарныйВопрос.Ссылка;
		ИначеЕсли ТекущаяСтрока.ЭлементарныйВопрос.Формулировка <> ТекущаяСтрока.Наименование Тогда
			ЭлементарныйВопрос = ТекущаяСтрока.ЭлементарныйВопрос.ПолучитьОбъект();
			ЭлементарныйВопрос.Наименование = ТекущаяСтрока.Наименование;
			ЭлементарныйВопрос.Формулировка = ТекущаяСтрока.Наименование;
			ЭлементарныйВопрос.Записать();
		КонецЕсли;
		
	Иначе
		
		ЭлементарныйВопрос = ТекущаяСтрока.ПолучитьРодителя().ЭлементарныйВопрос;
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Ответ) Тогда
			Ответ = Справочники.ВариантыОтветовАнкет.СоздатьЭлемент();
			Ответ.Наименование = ТекущаяСтрока.Наименование;
			Ответ.Владелец = ЭлементарныйВопрос;
			Ответ.Записать();
			ТекущаяСтрока.Ответ = Ответ.Ссылка;
		ИначеЕсли ТекущаяСтрока.Ответ.Наименование <> ТекущаяСтрока.Наименование Тогда
			Ответ = ТекущаяСтрока.Ответ.ПолучитьОбъект();
			Ответ.Наименование = ТекущаяСтрока.Наименование;
			Ответ.Владелец = ЭлементарныйВопрос;
			Ответ.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КритерииОценкиДеревоПриАктивизацииСтрокиОбработчикОжидания()
	
	ТекущиеДанные = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.Ключи.ТолькоПросмотр = Истина;
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Уровень = 0 Тогда
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ЭлементарныйВопрос", ПредопределенноеЗначение("ПланВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка"));
		ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
		Элементы.Ключи.ОтборСтрок = ОтборСтрок;
		Элементы.Ключи.ТолькоПросмотр = Истина;
	Иначе
		ЭлементарныйВопрос = ТекущиеДанные.ПолучитьРодителя().ЭлементарныйВопрос;
		ОтветНаВопрос = ТекущиеДанные.Ответ;
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ЭлементарныйВопрос", ЭлементарныйВопрос); 
		СтруктураОтбора.Вставить("ОтветНаВопрос", ОтветНаВопрос);
		ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
		Элементы.Ключи.ОтборСтрок = ОтборСтрок;
		Если ЗначениеЗаполнено(ЭлементарныйВопрос) И ЗначениеЗаполнено(ОтветНаВопрос) Тогда
			Элементы.Ключи.ТолькоПросмотр = Ложь;
		Иначе
			Элементы.Ключи.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьОтветНаВопрос(Ответ)
	
	ОтветОбъект = Ответ.ПолучитьОбъект();
	ОтветОбъект.УстановитьПометкуУдаления(Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокВопросов(ТипВопроса)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВозвращаемоеЗначение = Новый Массив;
	ФормулировкиВопросов = Новый Массив;
	
	Родитель = ПланыВидовХарактеристик.ВопросыДляАнкетирования.НайтиПоНаименованию(Строка(ТипВопроса), Истина, ПланыВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка());
	Если НЕ ЗначениеЗаполнено(Родитель) Тогда
		РодительОбъект = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоздатьГруппу();
		РодительОбъект.Наименование = Строка(ТипВопроса);
		РодительОбъект.Записать();
		Родитель = Родитель.Ссылка;
	КонецЕсли;
	
	Если ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.ТриПлюсаТриМинуса Тогда
		
		ФормулировкиВопросов.Добавить(НСтр("ru = 'С чего начал'"));
		ФормулировкиВопросов.Добавить(НСтр("ru = 'Что назвал быстрее'"));
		ФормулировкиВопросов.Добавить(НСтр("ru = 'Чего назвал больше'"));
		
	ИначеЕсли ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.PARLA Тогда
		
		ФормулировкиВопросов.Добавить(НСтр("ru = 'Выводы с точки зрения обучения'"));
		ФормулировкиВопросов.Добавить(НСтр("ru = 'Выводы с точки зрения применения опыта'"));
		
	КонецЕсли;
	
	Для каждого Формулировка Из ФормулировкиВопросов Цикл
		Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.НайтиПоНаименованию(Формулировка, Истина, Родитель);
		Если НЕ ЗначениеЗаполнено(Вопрос) Тогда
			ВопросОбъект = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоздатьЭлемент();
			ВопросОбъект.Родитель = Родитель;
			ВопросОбъект.Наименование = Формулировка;
			ВопросОбъект.Формулировка = Формулировка;
			ВопросОбъект.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз;
			ВопросОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ВариантыОтветовАнкет");
			ВопросОбъект.ВидПереключателя = Перечисления.ВидыПереключателяВАнкетах.Тумблер;
			ВопросОбъект.Записать();
			Вопрос = ВопросОбъект.Ссылка;
		КонецЕсли;
		ВозвращаемоеЗначение.Добавить(Вопрос);
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаСервереБезКонтекста
Функция СписокОтветовНаВопрос(ТипВопроса, Вопрос)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВозвращаемоеЗначение = Новый Массив;
	ФормулировкиОтветов = Новый Массив;
	
	Если ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.ТриПлюсаТриМинуса Тогда
		
		Если Строка(Вопрос) = "Чего назвал больше" Тогда
			ФормулировкиОтветов.Добавить("Плюсы");
			ФормулировкиОтветов.Добавить("Минусы");
			ФормулировкиОтветов.Добавить("Одинаково");
		Иначе
			ФормулировкиОтветов.Добавить("Плюсы");
			ФормулировкиОтветов.Добавить("Минусы");
		КонецЕсли;
		
	ИначеЕсли ТипВопроса = Перечисления.ТипыВопросовПоМетодуСИвановой.PARLA Тогда
		
		ФормулировкиОтветов.Добавить("Правильные");
		ФормулировкиОтветов.Добавить("Неправильные");
		ФормулировкиОтветов.Добавить("Не делает выводов");
		
	КонецЕсли;
	
	Для каждого Формулировка Из ФормулировкиОтветов Цикл
		Ответ = Справочники.ВариантыОтветовАнкет.НайтиПоНаименованию(Формулировка, Истина,, Вопрос);
		Порядок = 1;
		Если НЕ ЗначениеЗаполнено(Ответ) Тогда
			ОтветОбъект = Справочники.ВариантыОтветовАнкет.СоздатьЭлемент();
			ОтветОбъект.Владелец = Вопрос;
			ОтветОбъект.Наименование = Формулировка;
			ОтветОбъект.РеквизитДопУпорядочивания = Порядок;
			ОтветОбъект.Записать();
			Ответ = ОтветОбъект.Ссылка;
			Порядок = Порядок + 1;
		КонецЕсли;
		ВозвращаемоеЗначение.Добавить(Ответ);
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаКлиенте
Процедура ВвестиКомментарийТекущегоВопроса()
	
	ТекущиеДанные = Элементы.КритерииОценкиДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Уровень = 0 Тогда
		Родитель = ТекущиеДанные;
	Иначе
		Родитель = ТекущиеДанные.ПолучитьРодителя();
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ТекущиеДанные", Родитель);
	Оповещение = Новый ОписаниеОповещения("ВвестиКомментарийТекущегоВопросаЗавершение", ЭтаФорма, ПараметрыОповещения);
	ПоказатьВводЗначения(Оповещение, Родитель.ПояснениеКомментария, "Комментарий", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(150)));
	
КонецПроцедуры

// Обработчик оповещения о завершении ввода комментария текущего вопроса.
// Заполняет комментарий текущего вопроса введенной строкой.
//
// Параметры 
//	Результат - Строка, Неопределено - введенное значение. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров, содержит текущие данные.
//
&НаКлиенте
Процедура ВвестиКомментарийТекущегоВопросаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ДополнительныеПараметры.ТекущиеДанные.ПояснениеКомментария = Результат;
	ДополнительныеПараметры.ТекущиеДанные.ТребуетсяКомментарий = НЕ ПустаяСтрока(Результат);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФормулировкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекущийОбъект Из Результат Цикл
		ОбъектыДляОбновления.Добавить(ТекущийОбъект);
	КонецЦикла;
	Если Записать() И ДополнительныеПараметры.ЗакрытьПослеЗаписи Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИОбновитьФормулировки(ЗакрытьПослеЗаписи)
	
	ОбъектыДляОбновления.Очистить();
	Если (Не Объект.Ссылка.Пустая()) И Объект.Формулировка <> СтараяФормулировка(Объект.Ссылка) Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ВопросДляСобеседования", Объект.Ссылка);
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ЗакрытьПослеЗаписи", ЗакрытьПослеЗаписи);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьФормулировкиЗавершение", ЭтотОбъект, ПараметрыОповещения);
		ОткрытьФорму("Справочник.ВопросыДляСобеседования.Форма.ФормаОбновленияФормулировок", ДополнительныеПараметры, ЭтотОбъект, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	КонецЕсли;
	
	Если Записать() И ЗакрытьПослеЗаписи Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтараяФормулировка(Ссылка)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Формулировка");	
	
КонецФункции

#КонецОбласти
