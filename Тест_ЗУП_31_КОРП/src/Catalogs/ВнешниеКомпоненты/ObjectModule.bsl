#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Если внешняя компонента используется, то необходим контроль уникальности идентификатора и версии объекта.
	Если Использование = Перечисления.ВариантыИспользованияВнешнихКомпонент.Используется Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		Запрос.УстановитьПараметр("Версия",        Версия);
		Запрос.УстановитьПараметр("Ссылка",        Ссылка);
		Запрос.Текст = 
		    "ВЫБРАТЬ ПЕРВЫЕ 1
			|	1
			|ИЗ
			|	Справочник.ВнешниеКомпоненты КАК ВнешниеКомпоненты
			|ГДЕ
			|	ВнешниеКомпоненты.Идентификатор = &Идентификатор
			|	И ВнешниеКомпоненты.Версия = &Версия
			|	И ВнешниеКомпоненты.Использование = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияВнешнихКомпонент.Используется)
			|	И ВнешниеКомпоненты.Ссылка <> &Ссылка";
			
		Конфликтующие = Запрос.Выполнить();
		
		Если Не Конфликтующие.Пустой() Тогда
			
			Отказ = Истина;
			                                                     
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Идентификатор ""%1"" и версия ""%2"", указанные для данной компоненты,
				           |уже используются другой компонентой.
				           |Для продолжения необходимо изменить использование с ""%3"" на ""%4"".'"),
				Идентификатор,
				Версия,
				Строка(Перечисления.ВариантыИспользованияВнешнихКомпонент.Используется),
				Строка(Перечисления.ВариантыИспользованияВнешнихКомпонент.Отключена));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Объект.Использование");
			
		КонецЕсли;
	КонецЕсли;
	
	Если ОбновлятьССайта Тогда
		
		// ОбновлятьССайта может быть установлен только у компоненты максимальной версии.
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		Запрос.Текст = 
		    "ВЫБРАТЬ
		    |	МАКСИМУМ(ВнешниеКомпоненты.ДатаВерсии) КАК ДатаВерсии
		    |ИЗ
		    |	Справочник.ВнешниеКомпоненты КАК ВнешниеКомпоненты
		    |ГДЕ
		    |	ВнешниеКомпоненты.Идентификатор = &Идентификатор";
			
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЭтоМаксимальнаяВерсия = (Выборка.ДатаВерсии = Null) Или (Выборка.ДатаВерсии = ДатаВерсии);
			
		Если Не ЭтоМаксимальнаяВерсия Тогда
			
			Отказ = Истина;
			
			ТекстОшибки = НСтр("ru = 'Автоматическое обновление может быть включено только для компоненты
				                     |последней версии. 
				                     |
				                     |Для продолжения необходимо отключить обновление с сайта.'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Объект.ОбновлятьССайта");
			
		КонецЕсли;
		
		// Не должно быть несколько объектов (в т.ч. разной версии, в т.ч. отключенных) с одним идентификатором
		// у которых одновременно включен ОбновлятьССайта.
		
		Если Не Отказ Тогда
		
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
			Запрос.УстановитьПараметр("Ссылка",        Ссылка);
			Запрос.Текст = 
			    "ВЫБРАТЬ ПЕРВЫЕ 1
			    |	1
			    |ИЗ
			    |	Справочник.ВнешниеКомпоненты КАК ВнешниеКомпоненты
			    |ГДЕ
			    |	ВнешниеКомпоненты.Идентификатор = &Идентификатор
			    |	И ВнешниеКомпоненты.ОбновлятьССайта
				|	И ВнешниеКомпоненты.Ссылка <> &Ссылка";
			
			Конфликтующие = Запрос.Выполнить();
			
			Если Не Конфликтующие.Пустой() Тогда
				
				Отказ = Истина;
				
				ТекстОшибки = НСтр("ru = 'Автоматическое обновление уже включено для другой версии компоненты.
					                     |
					                     |Для продолжения необходимо отключить обновление с сайта.'");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Объект.ОбновлятьССайта");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	// Связь реквизитов с пометкой удаления.
	Если ПометкаУдаления Тогда
		Использование = Перечисления.ВариантыИспользованияВнешнихКомпонент.Отключена;
	КонецЕсли;
	
	// Связь реквизитов с вариантом использования.
	Если Использование = Перечисления.ВариантыИспользованияВнешнихКомпонент.Отключена Тогда
		ОбновлятьССайта = Ложь;
	КонецЕсли;
	
	// Помещение двоичных данных компоненты
	ДвоичныеДанныеКомпоненты = Неопределено;
	Если ДополнительныеСвойства.Свойство("ДвоичныеДанныеКомпоненты", ДвоичныеДанныеКомпоненты) Тогда
		ХранилищеКомпоненты = Новый ХранилищеЗначения(ДвоичныеДанныеКомпоненты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
