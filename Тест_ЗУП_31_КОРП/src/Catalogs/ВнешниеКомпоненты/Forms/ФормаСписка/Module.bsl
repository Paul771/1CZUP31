
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не ВнешниеКомпонентыСлужебный.ДоступнаЗагрузкаССайта() Тогда 
		
		Элементы.ОбновлятьССайта.Видимость = Ложь;
		Элементы.ФормаОбновитьССайта.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользованиеОтборПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда 
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьССайта(Команда)
	
	ОбновитьКомпонентыССайта();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзФайла(Команда)
	
	ДанныеСтроки = Элементы.Список.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ДанныеСтроки.Ссылка);
	ПараметрыФормы.Вставить("ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии", Истина);
	ОткрытьФорму("Справочник.ВнешниеКомпоненты.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
	
	ДанныеСтроки = Элементы.Список.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВнешниеКомпонентыСлужебныйКлиент.СохранитьКомпонентуВФайл(ДанныеСтроки.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет обновление компонент с сайта
&НаКлиенте
Процедура ОбновитьКомпонентыССайта()
	
	МассивСсылок = Элементы.Список.ВыделенныеСтроки;
	
	Если МассивСсылок.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = НачатьОбновлениеКомпонентССайтаНаСервере(МассивСсылок);
	
	Если ДлительнаяОперация = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется обновление внешних компонент...'");
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	Оповещение = Новый ОписаниеОповещения("ОбновитьКомпонентыССайтаЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

// Продолжение процедуры ОбновитьКомпонентыССайта
&НаКлиенте
Процедура ОбновитьКомпонентыССайтаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	// Ответ: 
	// - Структура - Выполнено - результат в структуре.
	// - Неопределено - Отменено пользователем.
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Сообщения <> Неопределено Тогда
		Для каждого СообщениеПользователю Из Результат.Сообщения Цикл
			ПоказатьОповещениеПользователя(НСтр("ru = 'Обновление с сайта'"),,
				СообщениеПользователю.Текст, БиблиотекаКартинок.Информация32);
		КонецЦикла;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ТекстОшибки = НСтр("ru = 'Ошибка при обновлении с сайта: %1.'");
		ПоказатьОповещениеПользователя(НСтр("ru = 'Обновление с сайта'"),,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
				Результат.КраткоеПредставлениеОшибки),
			БиблиотекаКартинок.Ошибка32);
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда 
		Элементы.Список.Обновить();
		ПоказатьОповещениеПользователя(НСтр("ru = 'Обновление с сайта'"),,
			НСтр("ru = 'Обновление с сайта завершено.'"), БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////
// Серверная логика модели представления.

// Серверная логика обновления компоненты с сайта.
&НаСервере
Функция НачатьОбновлениеКомпонентССайтаНаСервере(МассивСсылок)
	
	Если Не ВнешниеКомпонентыСлужебный.ДоступнаЗагрузкаССайта() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если МассивСсылок.Количество() = 0 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление внешней компоненты.'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("ВнешниеКомпонентыСлужебный.ОбновитьКомпонентыССайта",
		МассивСсылок, ПараметрыВыполнения);
	
КонецФункции

/////////////////////////////////////////////////////////
// Представление данных на форме.

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ИспользованиеОтбор", ИспользованиеОтбор);
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	Если ПараметрыОтбора["ИспользованиеОтбор"] = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Использование",,,, Ложь);
	ИначеЕсли ПараметрыОтбора["ИспользованиеОтбор"] = 1 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Использование", Перечисления.ВариантыИспользованияВнешнихКомпонент.Используется,,, Истина);
	ИначеЕсли ПараметрыОтбора["ИспользованиеОтбор"] = 2 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Использование", Перечисления.ВариантыИспользованияВнешнихКомпонент.Отключена,,, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Список.УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = Список.УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Использование");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВариантыИспользованияВнешнихКомпонент.Отключена;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра(
		"TextColor", Метаданные.ЭлементыСтиля.ТекстЗапрещеннойЯчейкиЦвет.Значение);
	
КонецПроцедуры

#КонецОбласти