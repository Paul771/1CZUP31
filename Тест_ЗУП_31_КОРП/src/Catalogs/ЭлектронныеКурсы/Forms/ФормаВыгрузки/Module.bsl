#Область ОписаниеПеременных

&НаКлиенте
Перем ПодсказкиПоФорматам;

#КонецОбласти

#Область ОбработчикиСобытийФормы

// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;		
	
	// Заполняем таблицу курсов	
	
	Если ТипЗнч(Параметры.ЭлектронныеКурсы) <> Тип("Массив") Тогда
		ВызватьИсключение НСтр("ru = 'Неверный тип параметра списка электронных курсов'");
	КонецЕсли;
	
	МассивЭлектронныйКурсовДляВыгрузки = Новый Массив;
	
	Для каждого ЭлектронныйКурс Из Параметры.ЭлектронныеКурсы Цикл
			
		Если ТипЗнч(ЭлектронныйКурс) <> Тип("СправочникСсылка.ЭлектронныеКурсы")
			ИЛИ НЕ ЗначениеЗаполнено(ЭлектронныйКурс) Тогда
			
			Продолжить;
			
		КонецЕсли;			
		
		ДанныеКурса = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлектронныйКурс, "ЭтоГруппа, ПометкаУдаления");
		
		Если ДанныеКурса.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеКурса.ЭтоГруппа Тогда
	
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ЭлектронныеКурсы.Ссылка КАК ЭлектронныйКурс
				|ИЗ
				|	Справочник.ЭлектронныеКурсы КАК ЭлектронныеКурсы
				|ГДЕ
				|	ЭлектронныеКурсы.ЭтоГруппа = ЛОЖЬ
				|	И ЭлектронныеКурсы.ПометкаУдаления = ЛОЖЬ
				|	И ЭлектронныеКурсы.Ссылка В ИЕРАРХИИ(&Группа)";
			
			Запрос.УстановитьПараметр("Группа", ЭлектронныйКурс);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ЭлектронноеОбучениеСлужебныйКлиентСервер.ДобавитьВМассивУникальноеЗначение(МассивЭлектронныйКурсовДляВыгрузки, ВыборкаДетальныеЗаписи.ЭлектронныйКурс, Истина);
			КонецЦикла;

		Иначе			
			
			ЭлектронноеОбучениеСлужебныйКлиентСервер.ДобавитьВМассивУникальноеЗначение(МассивЭлектронныйКурсовДляВыгрузки, ЭлектронныйКурс, Истина);
			
		КонецЕсли;
	
	КонецЦикла;	
	
	Если МассивЭлектронныйКурсовДляВыгрузки.Количество() = 0 Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЭлектронныеКурсы.Ссылка КАК ЭлектронныйКурс
			|ИЗ
			|	Справочник.ЭлектронныеКурсы КАК ЭлектронныеКурсы
			|ГДЕ
			|	ЭлектронныеКурсы.ПометкаУдаления = ЛОЖЬ
			|	И ЭлектронныеКурсы.ЭтоГруппа = ЛОЖЬ";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивЭлектронныйКурсовДляВыгрузки.Добавить(ВыборкаДетальныеЗаписи.ЭлектронныйКурс);
		КонецЦикла;
		
	КонецЕсли;	
		
	Для каждого ЭлектронныйКурс Из МассивЭлектронныйКурсовДляВыгрузки Цикл	
		НоваяСтрока = ЭлектронныеКурсы.Добавить();
		НоваяСтрока.ЭлектронныйКурс = ЭлектронныйКурс;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ФорматВыгрузки) Тогда
		ФорматВыгрузки = ПредопределенноеЗначение("Перечисление.ФорматыВыгрузкиЭлектронныхКурсов.HTML");
	КонецЕсли;
	
	УстановитьПодсказкуПоФормату();
	
	#Если НЕ ВебКлиент Тогда
		
	Если СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ИнформационнаяБазаФайловая Тогда
		МожноВыгружатьВКаталогНаКлиенте = Истина;
	КонецЕсли;
		
	Если МожноВыгружатьВКаталогНаКлиенте Тогда
		
		Если ЗначениеЗаполнено(ПутьККаталогуВыгрузокНаКлиенте) Тогда			
			КаталогуВыгрузокНаКлиенте = Новый Файл(ПутьККаталогуВыгрузокНаКлиенте);
			Если НЕ КаталогуВыгрузокНаКлиенте.Существует()
				ИЛИ НЕ КаталогуВыгрузокНаКлиенте.ЭтоКаталог() Тогда
				ПутьККаталогуВыгрузокНаКлиенте = "";
			КонецЕсли;			
		КонецЕсли;		
		
		Если НЕ ЗначениеЗаполнено(ПутьККаталогуВыгрузокНаКлиенте) Тогда
			ПутьККаталогуВыгрузокНаКлиенте = КаталогДокументов();
		КонецЕсли;
		
	Иначе		
		
		Элементы.ПутьККаталогуВыгрузокНаКлиенте.Видимость = Ложь;
		
	КонецЕсли;	
	
	#Иначе
		
	Элементы.ПутьККаталогуВыгрузокНаКлиенте.Видимость = Ложь;
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ФорматВыгрузкиПриИзменении(Элемент)
	УстановитьПодсказкуПоФормату();
КонецПроцедуры

&НаКлиенте
Процедура ПутьККаталогуСВыгрузкамиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(ПутьККаталогуВыгрузокНаКлиенте) Тогда
		ЗапуститьПриложение(ПутьККаталогуВыгрузокНаКлиенте);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьККаталогуСВыгрузкамиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьКаталогДляВыгрузки();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыгрузитьНаДиск(Команда)	
	
	РезультатВыгрузки = ВыгрузитьНаДискНаСервере();
	
	Если ЗначениеЗаполнено(РезультатВыгрузки.Сообщение) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыгрузки.Сообщение);
	КонецЕсли;
	
	Для каждого Строка Из ЭлектронныеКурсы Цикл
		Если РезультатВыгрузки.ВыгруженныеЭлектронныеКурсы.Найти(Строка.ЭлектронныйКурс) <> Неопределено Тогда
			Строка.Выгружен = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(РезультатВыгрузки.ПутьККаталогуВыгрузки) Тогда
		ЗапуститьПриложение(РезультатВыгрузки.ПутьККаталогуВыгрузки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РезультатВыгрузки.АдресВоВременномХранилище) Тогда		
		
		#Если ВебКлиент Тогда
			
		ПолучитьФайл(РезультатВыгрузки.АдресВоВременномХранилище,РезультатВыгрузки.ИмяФайлаПакета + ".zip", Истина); 
			
		#Иначе
		
		МассивФайлов = Новый Массив;		
		МассивФайлов.Добавить(Новый ОписаниеПередаваемогоФайла(РезультатВыгрузки.ИмяФайлаПакета, РезультатВыгрузки.АдресВоВременномХранилище));
		
		ОписаниеОповещенияПолученияФайлов = Новый ОписаниеОповещения("СохранитьПродолжение", ЭтотОбъект);		
		
		ДиалогСохранения = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогСохранения.Заголовок = НСтр("ru = 'Сохранение архива с выгрузкой курсов'");
		ДиалогСохранения.МножественныйВыбор = Ложь;
		ДиалогСохранения.ПредварительныйПросмотр = Ложь;
		ДиалогСохранения.Фильтр = "Архив ZIP|*.zip";
		
		НачатьПолучениеФайлов(ОписаниеОповещенияПолученияФайлов, МассивФайлов, ДиалогСохранения, Истина);		
		
		#КонецЕсли	
		
		
	КонецЕсли;
	
КонецПроцедуры

// Продолжение процедуры (см. выше).
// 
&НаКлиенте
Процедура СохранитьПродолжение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	// Обработка не требуется.
	Возврат;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ВыгрузитьНаДискНаСервере()
	
	МассивЭлектронныхКурсов = Новый Массив;
	
	Для каждого Строка Из ЭлектронныеКурсы Цикл
		МассивЭлектронныхКурсов.Добавить(Строка.ЭлектронныйКурс);
		Строка.Выгружен = Ложь;
	КонецЦикла;
	
	Возврат РазработкаЭлектронныхКурсовСлужебный.ВыгрузитьНаДиск(МассивЭлектронныхКурсов, ФорматВыгрузки, ?(МожноВыгружатьВКаталогНаКлиенте, ПутьККаталогуВыгрузокНаКлиенте, ""), УникальныйИдентификатор);	
	
КонецФункции

&НаКлиенте
Процедура УстановитьПодсказкуПоФормату()
	Элементы.ФорматВыгрузки.Подсказка = ПодсказкиПоФорматам.Получить(ФорматВыгрузки);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКаталогДляВыгрузки()
	
	#Если НЕ ВебКлиент Тогда

	Если МожноВыгружатьВКаталогНаКлиенте Тогда
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогОткрытияФайла.Каталог = ПутьККаталогуВыгрузокНаКлиенте;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите каталог для выгрузки электронных курсов'");
		
		Если ДиалогОткрытияФайла.Выбрать() Тогда			
			ПутьККаталогуВыгрузокНаКлиенте = ДиалогОткрытияФайла.Каталог;			
			ПутьККаталогуВыгрузокНаКлиенте = ЭлектронноеОбучениеСлужебныйКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьККаталогуВыгрузокНаКлиенте);			
		КонецЕсли;		
		
	КонецЕсли;
	
	#КонецЕсли
		
КонецПроцедуры


#КонецОбласти


#Область Инициализация

ПодсказкиПоФорматам = Новый Соответствие;
ПодсказкиПоФорматам.Вставить(ПредопределенноеЗначение("Перечисление.ФорматыВыгрузкиЭлектронныхКурсов.ПустаяСсылка"), НСтр("ru = 'Формат выгрузки не выбран'"));
ПодсказкиПоФорматам.Вставить(ПредопределенноеЗначение("Перечисление.ФорматыВыгрузкиЭлектронныхКурсов.HTML"), НСтр("ru = 'Предназначен для изучения курса в браузере с любого компьютера или на сайте'"));
ПодсказкиПоФорматам.Вставить(ПредопределенноеЗначение("Перечисление.ФорматыВыгрузкиЭлектронныхКурсов.SCORM"), НСтр("ru = 'Предназначен для загрузки курса в стороннюю систему управления обучением'"));
ПодсказкиПоФорматам.Вставить(ПредопределенноеЗначение("Перечисление.ФорматыВыгрузкиЭлектронныхКурсов.ПолнаяКопия"), НСтр("ru = 'Предназначен для загрузки курса в другую базу 1С или резервного копирования'"));

#КонецОбласти

