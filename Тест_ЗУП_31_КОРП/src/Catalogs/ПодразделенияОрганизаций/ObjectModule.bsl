#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() Тогда
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Владелец") <> Владелец Тогда
			ВызватьИсключение НСтр("ru='Нельзя менять организацию - владельца элемента справочника ""Подразделения""'");;
		КонецЕсли;
	КонецЕсли;
	
	ПрежнееЗначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ОбособленноеПодразделение");
	Если ЭтоНовый() Или ОбособленноеПодразделение <> ПрежнееЗначение Тогда
		ДополнительныеСвойства.Вставить("ОбновитьИсториюРегистрацийВНалоговомОргане", Истина);
	КонецЕсли; 
	
	НастройкаПорядкаЭлементов.ЗаполнитьЗначениеРеквизитаУпорядочивания(ЭтотОбъект, Отказ);
	РеквизитИерархическогоУпорядочивания = РеквизитИерархическогоУпорядочивания();
	Если РеквизитДопУпорядочиванияИерархического <> РеквизитИерархическогоУпорядочивания Тогда
		РеквизитДопУпорядочиванияИерархического = РеквизитИерархическогоУпорядочивания;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ОбновитьИсториюРегистрацийВНалоговомОргане") Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		Если ОбособленноеПодразделение Тогда
			
			Набор = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.СоздатьНаборЗаписей();
			Набор.Отбор.СтруктурнаяЕдиница.Установить(Ссылка);
			
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				
				Запись = Набор.Добавить();
				Запись.Период = ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведенийСПериодомМесяц();
				Запись.СтруктурнаяЕдиница = Ссылка;
				Запись.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
				
			КонецЕсли;
			
			Набор.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			Набор.Записать();
			
		Иначе
			
			ПараметрыЗаполнения = Новый Структура("ГоловнаяСтруктурнаяЕдиница, ПодчиненныеСтруктурныеЕдиницы", Неопределено, Новый Массив);
			ПараметрыЗаполнения.ПодчиненныеСтруктурныеЕдиницы.Добавить(Ссылка);
			
			РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.ОбновитьПодчиненныеСтруктурныеЕдиницы(ПараметрыЗаполнения);
			
		КонецЕсли; 
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли; 
	
	ОбновитьРеквизитИерархическогоУпорядочивания(Ссылка, РеквизитДопУпорядочиванияИерархического);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадрыРасширенный.ОграниченияРегистрацииПоОрганизацииИПодразделению(ЭтотОбъект, Владелец);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РеквизитИерархическогоУпорядочивания()
	
	РеквизитИерархическогоУпорядочивания = Формат(РеквизитДопУпорядочивания, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
	ПроверяемыйРодитель = Родитель;
	Если ЗначениеЗаполнено(ПроверяемыйРодитель) Тогда
		ЗначенияРеквизитаРодителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПроверяемыйРодитель, "РеквизитДопУпорядочиванияИерархического");
		РеквизитИерархическогоУпорядочивания = ЗначенияРеквизитаРодителя + РеквизитИерархическогоУпорядочивания;
	КонецЕсли;
	
	Возврат РеквизитИерархическогоУпорядочивания;
	
КонецФункции

Процедура ОбновитьРеквизитИерархическогоУпорядочивания(ПодразделенияОрганизацийСсылка, РеквизитИерархическогоУпорядочивания)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Родитель = &ПодразделенияОрганизацийСсылка
	|	И НЕ ПодразделенияОрганизаций.РеквизитДопУпорядочиванияИерархического ПОДОБНО &РеквизитИерархическогоУпорядочивания";
	
	Запрос.УстановитьПараметр("ПодразделенияОрганизацийСсылка", ПодразделенияОрганизацийСсылка);
	Запрос.УстановитьПараметр("РеквизитИерархическогоУпорядочивания", РеквизитИерархическогоУпорядочивания + "%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ПодразделенияОрганизацийОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Попытка 
				ПодразделенияОрганизацийОбъект.Заблокировать();
			Исключение
				ТекстИсключенияЗаписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось изменить настройку упорядочивания для подразделения ""%1"" 
				|Возможно, подразделения редактируется другим пользователем'"),
				ПодразделенияОрганизацийОбъект.Наименование);
				ВызватьИсключение ТекстИсключенияЗаписи;
			КонецПопытки;
			ПодразделенияОрганизацийОбъект.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли