#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Подразделение") Тогда
		Подразделение = Параметры.Подразделение;
	КонецЕсли;
	Если Параметры.Свойство("ДатаНачала") Тогда
		ДатаНачала = Параметры.ДатаНачала;
	КонецЕсли;
	Если Параметры.Свойство("ДатаОкончания") Тогда
		ДатаОкончания = Параметры.ДатаОкончания;
	КонецЕсли;
	Если Параметры.Свойство("ТаблицаУжеПодобранныхМероприятий") Тогда
		Для каждого ПодобранноеМероприятие Из ПолучитьИзВременногоХранилища(Параметры.ТаблицаУжеПодобранныхМероприятий) Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаУжеПодобранныхМероприятий.Добавить(), ПодобранноеМероприятие);
		КонецЦикла; 
	КонецЕсли;
	
	ЗаполнитьСписокМероприятий();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокМероприятий

&НаКлиенте
Процедура СписокМероприятийВыборЗначения(Элемент, Значение, СтандартнаяОбработка)

	МассивВыбранныхЗначений = ОбработатьВыбранныеЗначения(Элементы.СписокМероприятий.ВыделенныеСтроки);
	ОповеститьОВыборе(МассивВыбранныхЗначений);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМероприятийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	МассивВыбранныхЗначений = ОбработатьВыбранныеЗначения(Элементы.СписокМероприятий.ВыделенныеСтроки);
	ОповеститьОВыборе(МассивВыбранныхЗначений);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует структуру для передачи выбранных значений.
//
&НаКлиенте
Функция ОбработатьВыбранныеЗначения(ЗначениеВыбора)

	МассивВыбранныхЗначений = Новый Массив;
	СписокФизическихЛиц = Новый Массив;
	
	Для каждого ВыбраннаяСтрока Из ЗначениеВыбора Цикл
		
		ТекущаяСтрока = СписокМероприятий.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
		Если ТекущаяСтрока.УжеПодобран Тогда
			Продолжить;
		КонецЕсли; 
		
		ВыбранныйЭлемент = Новый Структура("Сотрудник, ФизическоеЛицо, Мероприятие, ДатаНачала, ДатаОкончания, Подразделение, КоличествоУчебныхЧасов, СуммаРасходов");
		ЗаполнитьЗначенияСвойств(ВыбранныйЭлемент,ТекущаяСтрока);
		СписокФизическихЛиц.Добавить(ТекущаяСтрока.ФизическоеЛицо);
		МассивВыбранныхЗначений.Добавить(ВыбранныйЭлемент);
		
		НовыйПодобранныйЭлемент = ТаблицаУжеПодобранныхМероприятий.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйПодобранныйЭлемент,ТекущаяСтрока,"ФизическоеЛицо, Мероприятие, ДатаНачала");
		ТекущаяСтрока.УжеПодобран = Истина;
		
	КонецЦикла;
	
	ЗаполнитьСотрудниковПоФизическимЛицам(МассивВыбранныхЗначений, СписокФизическихЛиц);
	
	Возврат МассивВыбранныхЗначений;

КонецФункции

// Заполняет список мероприятий.
//
&НаСервере
Процедура ЗаполнитьСписокМероприятий()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИндивидуальныйПланРазвития.Подразделение КАК Подразделение,
		|	ИндивидуальныйПланРазвития.Владелец КАК ФизическоеЛицо,
		|	ИндивидуальныйПланРазвитияМероприятия.Мероприятие КАК Мероприятие,
		|	ИндивидуальныйПланРазвитияМероприятия.ДатаНачала КАК ДатаНачала,
		|	ИндивидуальныйПланРазвитияМероприятия.ДатаОкончания КАК ДатаОкончания,
		|	МероприятияОбученияРазвития.КоличествоУчебныхЧасов КАК КоличествоУчебныхЧасов,
		|	МероприятияОбученияРазвития.Стоимость КАК Стоимость
		|ПОМЕСТИТЬ Мероприятия
		|ИЗ
		|	Справочник.ИндивидуальныйПланРазвития.Мероприятия КАК ИндивидуальныйПланРазвитияМероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИндивидуальныйПланРазвития КАК ИндивидуальныйПланРазвития
		|		ПО ИндивидуальныйПланРазвитияМероприятия.Ссылка = ИндивидуальныйПланРазвития.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МероприятияОбученияРазвития КАК МероприятияОбученияРазвития
		|		ПО ИндивидуальныйПланРазвитияМероприятия.Мероприятие = МероприятияОбученияРазвития.Ссылка
		|ГДЕ
		|	НЕ ИндивидуальныйПланРазвития.ПометкаУдаления
		|	И (ИндивидуальныйПланРазвитияМероприятия.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
		|			ИЛИ ИндивидуальныйПланРазвитияМероприятия.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УжеПодобраны.ФизическоеЛицо,
		|	УжеПодобраны.Мероприятие,
		|	УжеПодобраны.ДатаНачала
		|ПОМЕСТИТЬ УжеПодобраны
		|ИЗ
		|	&УжеПодобраны КАК УжеПодобраны
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Мероприятия.Подразделение,
		|	Мероприятия.ФизическоеЛицо,
		|	Мероприятия.Мероприятие,
		|	Мероприятия.ДатаНачала,
		|	Мероприятия.ДатаОкончания,
		|	Мероприятия.КоличествоУчебныхЧасов КАК КоличествоУчебныхЧасов,
		|	Мероприятия.Стоимость КАК СуммаРасходов,
		|	ВЫБОР
		|		КОГДА УжеПодобраны.ФизическоеЛицо ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК УжеПодобран
		|ИЗ
		|	Мероприятия КАК Мероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ УжеПодобраны КАК УжеПодобраны
		|		ПО Мероприятия.ФизическоеЛицо = УжеПодобраны.ФизическоеЛицо
		|			И Мероприятия.Мероприятие = УжеПодобраны.Мероприятие
		|			И Мероприятия.ДатаНачала = УжеПодобраны.ДатаНачала";
		
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("УжеПодобраны", ТаблицаУжеПодобранныхМероприятий.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	
	СписокМероприятий.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСотрудниковПоФизическимЛицам(МассивВыбранныхЗначений, СписокФизическихЛиц)
	
	ПараметрыСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыСотрудников.СписокФизическихЛиц = СписокФизическихЛиц;
	
	ТаблицаСотрудниковИФизическихЛиц = КадровыйУчет.СотрудникиОрганизации(Истина,ПараметрыСотрудников);
	
	Для каждого ВыбраннаяСтрока Из МассивВыбранныхЗначений Цикл
		НайденныйСотрудник = ТаблицаСотрудниковИФизическихЛиц.НайтиСтроки(Новый Структура("ФизическоеЛицо", ВыбраннаяСтрока.ФизическоеЛицо));
		Если НайденныйСотрудник.Количество() > 0 Тогда
			ВыбраннаяСтрока.Сотрудник = НайденныйСотрудник[0].Сотрудник;
		Иначе
			ВыбраннаяСтрока.Сотрудник = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.Сотрудники.ПустаяСсылка");
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти



