
#Область ОписаниеПеременных

&НаКлиенте
Перем КодСостоянияЗапроса;

#КонецОбласти

#Область ОбработчикиСобытийФормы

// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;	
	
	НастройкиYouTube = РазработкаЭлектронныхКурсовСлужебныйПовтИсп.НастройкиYouTube();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	КодСостоянияЗапроса = Строка(Новый УникальныйИдентификатор()); // Контрольный параметр
	
	АдресДляПерехода = "https://accounts.google.com/o/oauth2/v2/auth?";
	АдресДляПерехода = АдресДляПерехода + "client_id=" + НастройкиYouTube.oauth_client_id + "&";
	АдресДляПерехода = АдресДляПерехода + "redirect_uri=urn:ietf:wg:oauth:2.0:oob:auto" + "&";
	АдресДляПерехода = АдресДляПерехода + "response_type=code" + "&";
	АдресДляПерехода = АдресДляПерехода + "scope=https://www.googleapis.com/auth/youtube" + "&";
	АдресДляПерехода = АдресДляПерехода + "state=" + КодСостоянияЗапроса;
	
	Браузер = АдресДляПерехода;	
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура БраузерДокументСформирован(Элемент)

	ЗаголовокДокумента = Элемент.Документ.title;	
	
	Если СтрНайти(ЗаголовокДокумента, "Success") = 1 Тогда
		
		Браузер = "about:blank";
		СтруктураЗаголовка = ИзучениеЭлектронныхКурсовСлужебныйКлиентСервер.СтруктураСтрокиПараметров(ЗаголовокДокумента, "Success ");
		
		Если СтруктураЗаголовка.Свойство("code")
			И СтруктураЗаголовка.Свойство("state") Тогда
			
			Если СтруктураЗаголовка.state <> КодСостоянияЗапроса Тогда
				ВызватьИсключение НСтр("ru = 'Параметр state имеет неверное значение'");
			КонецЕсли;
			
			КодДоступа = СтруктураЗаголовка.code;			
			
			ПодключитьОбработчикОжидания("ПроверитьКодДоступа", 0.1, Истина);
			
		Иначе
			
			ВызватьИсключение НСтр("ru = 'Отсутствуют обязательные параметры ответа с сервера авторизации'");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКодДоступа()
	
	НастройкиДоступа = ПолучитьНастройкиДоступа(КодДоступа);			
	Закрыть(НастройкиДоступа); 	
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ПолучитьНастройкиДоступа(КодДоступа)
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI("https://www.googleapis.com/oauth2/v4/token");
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,, 10, Новый ЗащищенноеСоединениеOpenSSL()); 

	HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");	
	
	ТелоЗапроса = "";
	ТелоЗапроса = ТелоЗапроса + "code=" + КодДоступа + "&";
	ТелоЗапроса = ТелоЗапроса + "client_id=" + НастройкиYouTube.oauth_client_id + "&";
	ТелоЗапроса = ТелоЗапроса + "client_secret=" + НастройкиYouTube.oauth_client_secret + "&";
	ТелоЗапроса = ТелоЗапроса + "redirect_uri=urn:ietf:wg:oauth:2.0:oob:auto" + "&";
	ТелоЗапроса = ТелоЗапроса + "grant_type=authorization_code";

	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса);

	ОтветСервера = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);

	Если ОтветСервера.КодСостояния = 200 Тогда			
		
		ОтветСервераСтрока = ОтветСервера.ПолучитьТелоКакСтроку();
		
		Чтение = Новый ЧтениеJSON;
	    Чтение.УстановитьСтроку(ОтветСервераСтрока);
		ОтветСервераСтруктура = ПрочитатьJSON(Чтение, Ложь);
	    Чтение.Закрыть();			
		
		Если ОтветСервераСтруктура.Свойство("refresh_token")
			И ОтветСервераСтруктура.Свойство("access_token") Тогда						
			РазработкаЭлектронныхКурсовСлужебный.СохранитьПерсональныеНастройкиYouTube(ОтветСервераСтруктура);
			Возврат ОтветСервераСтруктура;			
		Иначе						
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Ошибка запроса к удаленному серверу: %1'"), ОтветСервераСтрока);			
		КонецЕсли;
		
	Иначе		
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Ошибка запроса к удаленному серверу: %1'"), ОтветСервера.КодСостояния);		
	КонецЕсли;	
	
КонецФункции


#КонецОбласти

