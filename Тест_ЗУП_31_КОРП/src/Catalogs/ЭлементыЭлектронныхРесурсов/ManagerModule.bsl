#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

Функция ДанныеЭлементаДляРедактирования(ЭлементРесурса, ТипЭлемента = Неопределено, ИдентификаторФормы = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлементРесурса) Тогда
		ВызватьИсключение НСтр("ru = 'Элемент электронного ресурса не задан'");
	КонецЕсли;
	
	Если ТипЭлемента = Неопределено Тогда
		ТипЭлемента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементРесурса, "Тип");
	КонецЕсли;
	
	ИмяРеквизитаСДанными = "";
	
	Если ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Text Тогда
		
		КодДанных = "ТекстСтраницы";
		ИмяРеквизитаСДанными = "ХранилищеДанных";
		
	ИначеЕсли ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Document
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Audio
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.DataProcessor
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.File
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Folder
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Image
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Media
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Video
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Presentation Тогда
		
		КодДанных = "ДвоичныеДанные";
		ИмяРеквизитаСДанными = "ПрисоединенныйФайл";		
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Неизвестный тип элемента электронного ресурса'");
		
	КонецЕсли;	
	
	ДанныеЭлемента = ПроизвольныеДанныеЭлемента(ЭлементРесурса, ИмяРеквизитаСДанными, КодДанных, ИдентификаторФормы);
	
	Если ДанныеЭлемента = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Данные элемента электронного ресурса не найдены'");
	КонецЕсли;
	
	Возврат ДанныеЭлемента;
	
КонецФункции

Функция ДанныеЭлементаДляВыгрузки(ЭлементРесурса, ТипЭлемента = Неопределено, ИдентификаторФормы = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлементРесурса) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЭлемента = Неопределено Тогда
		ТипЭлемента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементРесурса, "Тип");
	КонецЕсли;
	
	Если ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Text Тогда
		
		Возврат ДанныеЭлементаДляРедактирования(ЭлементРесурса, ТипЭлемента, ИдентификаторФормы); // Совпадают
		
	ИначеЕсли ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Audio
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.File
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Image
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.DataProcessor
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Media Тогда

		ХранениеФайла = ДанныеЭлементаДляРедактирования(ЭлементРесурса, ТипЭлемента, ИдентификаторФормы); // Совпадают
		Возврат ПолучитьИзВременногоХранилища(ХранениеФайла);
		
	ИначеЕсли ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Video Тогда

		ФорматДляВыгрузки = ФорматВидеоФайлаДляВыгрузки(ЭлементРесурса);
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеЭлемента.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
			|	ДанныеЭлемента.КодДанных КАК КодДанных,
			|	ДанныеЭлемента.Расширение КАК Расширение
			|ИЗ
			|	Справочник.ЭлементыЭлектронныхРесурсов.ДанныеЭлемента КАК ДанныеЭлемента
			|ГДЕ
			|	ДанныеЭлемента.Ссылка = &ЭлементРесурса
			|	И ДанныеЭлемента.КодДанных = &ФорматВидео
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДанныеЭлемента.ПрисоединенныйФайл,
			|	ДанныеЭлемента.КодДанных,
			|	ДанныеЭлемента.Расширение
			|ИЗ
			|	Справочник.ЭлементыЭлектронныхРесурсов.ДанныеЭлемента КАК ДанныеЭлемента
			|ГДЕ
			|	ДанныеЭлемента.Ссылка = &ЭлементРесурса
			|	И ДанныеЭлемента.КодДанных = &КодДанныхОригинала";
		
		Запрос.УстановитьПараметр("КодДанныхОригинала", "ДвоичныеДанные");
		Запрос.УстановитьПараметр("ФорматВидео", ФорматДляВыгрузки);
		Запрос.УстановитьПараметр("ЭлементРесурса", ЭлементРесурса);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			ВызватьИсключение НСтр("ru = 'Данные видео не найдены'");
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда		
			ВыборкаДетальныеЗаписи.Следующий();
		Иначе
			ВыборкаДетальныеЗаписи.НайтиСледующий(ФорматДляВыгрузки, "КодДанных");
		КонецЕсли;
		
		ХранениеФайла = РаботаСФайлами.ДанныеФайла(ВыборкаДетальныеЗаписи.ПрисоединенныйФайл, ИдентификаторФормы, Истина).СсылкаНаДвоичныеДанныеФайла;
		Возврат ПолучитьИзВременногоХранилища(ХранениеФайла);
		
	ИначеЕсли ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Document
		ИЛИ ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Presentation Тогда
		
		Если ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Document Тогда
			КодДанных = "HTML";
		КонецЕсли;
		
		Если ТипЭлемента = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Presentation Тогда
			КодДанных = "IMAGES";
		КонецЕсли;		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЭлементыЭлектронныхРесурсовДанныеЭлемента.ПрисоединенныйФайл КАК ПрисоединенныйФайл
			|ИЗ
			|	Справочник.ЭлементыЭлектронныхРесурсов.ДанныеЭлемента КАК ЭлементыЭлектронныхРесурсовДанныеЭлемента
			|ГДЕ
			|	ЭлементыЭлектронныхРесурсовДанныеЭлемента.Ссылка = &ЭлементРесурса
			|	И ЭлементыЭлектронныхРесурсовДанныеЭлемента.КодДанных = &КодДанных";
		
		Запрос.УстановитьПараметр("КодДанных", КодДанных);
		Запрос.УстановитьПараметр("ЭлементРесурса", ЭлементРесурса);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			
			Возврат Неопределено;
			
		Иначе
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
			ВыборкаДетальныеЗаписи.Следующий();
			
			ХранениеФайла = РаботаСФайлами.ДанныеФайла(ВыборкаДетальныеЗаписи.ПрисоединенныйФайл, ИдентификаторФормы, Истина).СсылкаНаДвоичныеДанныеФайла;
			Возврат ПолучитьИзВременногоХранилища(ХранениеФайла);
			
		КонецЕсли;
			
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Ошибка получения данных для выгрузки: неизвестный тип элемента.'");
		
	КонецЕсли;			
	
КонецФункции

Функция ПроизвольныеДанныеЭлемента(ЭлементРесурса, ИмяРеквизитаСДанными, КодДанных, ИдентификаторФормы = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&РеквизитСДанными КАК Данные
		|ИЗ
		|	Справочник.ЭлементыЭлектронныхРесурсов.ДанныеЭлемента КАК ДанныеЭлемента
		|ГДЕ
		|	ДанныеЭлемента.Ссылка = &ЭлементРесурса
		|	И ДанныеЭлемента.КодДанных = &КодДанных";
	
	Запрос.УстановитьПараметр("КодДанных", КодДанных);
	Запрос.УстановитьПараметр("ЭлементРесурса", ЭлементРесурса);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РеквизитСДанными", "ДанныеЭлемента." + ИмяРеквизитаСДанными);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Если ИмяРеквизитаСДанными = "ХранилищеДанных" Тогда		
		Возврат ВыборкаДетальныеЗаписи.Данные.Получить();		
	ИначеЕсли ИмяРеквизитаСДанными = "ПрисоединенныйФайл" Тогда		
		Возврат РаботаСФайлами.ДанныеФайла(ВыборкаДетальныеЗаписи.Данные, ИдентификаторФормы, Истина).СсылкаНаДвоичныеДанныеФайла;			
	Иначе				
		ВызватьИсключение НСтр("ru = 'Неизвестный реквизит с данными элемента электронного ресурса'");		
	КонецЕсли;	
	
КонецФункции

// Изменяет имя файла, если необходимо.
// Примечание: необходимо обеспечить, чтобы функция не вызывалась
// для внешних файлов, так как это не имеет смысла.
//
Функция ИмяФайлаДляВыгрузки(Знач Файл, Знач ИмяФайла, Знач ТипФайла) Экспорт

	СписокСимволов = Новый СписокЗначений;
	СписокСимволов.Добавить("а","A");
	СписокСимволов.Добавить("б","B");
	СписокСимволов.Добавить("в","V");
	СписокСимволов.Добавить("г","G");
	СписокСимволов.Добавить("д","D");		
	СписокСимволов.Добавить("е","E");
	СписокСимволов.Добавить("ё","EO");
	СписокСимволов.Добавить("ж","ZH");
	СписокСимволов.Добавить("з","Z");
	СписокСимволов.Добавить("и","I");
	СписокСимволов.Добавить("й","Y");
	СписокСимволов.Добавить("к","K");
	СписокСимволов.Добавить("л","L");
	СписокСимволов.Добавить("м","M");
	СписокСимволов.Добавить("н","N");
	СписокСимволов.Добавить("о","O");
	СписокСимволов.Добавить("п","P");
	СписокСимволов.Добавить("р","R");
	СписокСимволов.Добавить("с","S");
	СписокСимволов.Добавить("т","T");
	СписокСимволов.Добавить("у","U");
	СписокСимволов.Добавить("ф","F");
	СписокСимволов.Добавить("х","H");
	СписокСимволов.Добавить("ц","TS");
	СписокСимволов.Добавить("ч","CH");
	СписокСимволов.Добавить("ш","SH");
	СписокСимволов.Добавить("щ","SCH");
	СписокСимволов.Добавить("ь","");
	СписокСимволов.Добавить("ы","Y");
	СписокСимволов.Добавить("ъ","");
	СписокСимволов.Добавить("э","E");
	СписокСимволов.Добавить("ю","YU");
	СписокСимволов.Добавить("я","YA");
	
	СписокСимволов.Добавить("№","N");
	
	ИмяФайла = НРег(ИмяФайла);
	
	Для Каждого Строка Из СписокСимволов Цикл  
	    ИмяФайла = СтрЗаменить(ИмяФайла, Строка.Значение, НРег(Строка.Представление));
	КонецЦикла;
	
	Если Лев(ИмяФайла, 7) = "folder_" Тогда
		
		// Сокращаем имя папки, если это папка, созданная при загрузке файлов
		
		СвойстваФайла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Файл, "ЭтоГруппа, Родитель, Владелец");
		
		Если СвойстваФайла.ЭтоГруппа Тогда
		
			СокращенноеИмя = Сред(ИмяФайла, 1, 6);
	
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЭлементыЭлектронныхКурсов.Ссылка
				|ИЗ
				|	Справочник.ЭлементыЭлектронныхРесурсов КАК ЭлементыЭлектронныхКурсов
				|ГДЕ
				|	ЭлементыЭлектронныхКурсов.Ссылка <> &Файл
				|	И ЭлементыЭлектронныхКурсов.ПометкаУдаления = ЛОЖЬ
				|	И ЭлементыЭлектронныхКурсов.Владелец = &Ресурс
				|	И ЭлементыЭлектронныхКурсов.Родитель = &Родитель
				|	И ЭлементыЭлектронныхКурсов.ЭтоГруппа = ИСТИНА
				|	И ЭлементыЭлектронныхКурсов.ИмяФайла = &СокращенноеИмяФайла";
			
			Запрос.УстановитьПараметр("Ресурс", СвойстваФайла.Владелец);
			Запрос.УстановитьПараметр("Родитель", СвойстваФайла.Родитель);
			Запрос.УстановитьПараметр("СокращенноеИмяФайла", СокращенноеИмя);
			Запрос.УстановитьПараметр("Файл", Файл);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если РезультатЗапроса.Пустой() Тогда
				ИмяФайла = СокращенноеИмя;				
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЕсли;
	
	// Заменяем расширение
	
	Если ТипФайла = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Video Тогда
		
		БазовыйФормат = БазовыйФорматВидеоФайла(ИмяФайла);
		
		ПредпочтительныйФормат = ФорматВидеоФайлаДляВыгрузки(Файл);
		
		Если ПредпочтительныйФормат <> БазовыйФормат Тогда			
			ИмяФайла = Лев(ИмяФайла, СтрДлина(ИмяФайла) - СтрДлина("."+БазовыйФормат)) + "." +НРег(ПредпочтительныйФормат);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипФайла = Перечисления.ТипыЭлементовЭлектронныхРесурсов.Document Тогда
		
		РасширениеФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла);
		ИмяФайла = Лев(ИмяФайла, СтрДлина(ИмяФайла) - СтрДлина("."+РасширениеФайла));
		
	КонецЕсли;
	
	Возврат ИмяФайла;
	
КонецФункции

Функция ФорматыВидеоФайловДляКонвертации(Знач ЭлементРесурсаСВидео = Неопределено) Экспорт
	
	// Получаем таблицу видео файлов
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭлементыЭлектронныхКурсов.Ссылка КАК ЭлементРесурса,
		|	ЭлементыЭлектронныхКурсов.ИмяФайла КАК ИмяФайла
		|ИЗ
		|	Справочник.ЭлементыЭлектронныхРесурсов КАК ЭлементыЭлектронныхКурсов
		|ГДЕ
		|	ЭлементыЭлектронныхКурсов.ПометкаУдаления = ЛОЖЬ
		|	И ЭлементыЭлектронныхКурсов.ЭтоГруппа = ЛОЖЬ
		|	И ЭлементыЭлектронныхКурсов.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыЭлементовЭлектронныхРесурсов.Video)
		|	И ЭлементыЭлектронныхКурсов.ЭтоВнешнийЭлемент = ЛОЖЬ
		|	И &ОтборПоСсылке";	
	
	МассивЭлементовСВидео = Новый Массив;
	
	Если ТипЗнч(ЭлементРесурсаСВидео) = Тип("Массив")
		ИЛИ ТипЗнч(ЭлементРесурсаСВидео) = Тип("ФиксированныйМассив") Тогда
		МассивЭлементовСВидео = ЭлементРесурсаСВидео;
	ИначеЕсли ТипЗнч(ЭлементРесурсаСВидео) = Тип("СправочникСсылка.ЭлементыЭлектронныхРесурсов") Тогда
		МассивЭлементовСВидео.Добавить(ЭлементРесурсаСВидео);
	КонецЕсли;
	
	Если МассивЭлементовСВидео.Количество() > 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоСсылке", "ЭлементыЭлектронныхКурсов.Ссылка В (&МассивЭлементовСВидео)");
		Запрос.Параметры.Вставить("МассивЭлементовСВидео", МассивЭлементовСВидео);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоСсылке", "ИСТИНА");
	КонецЕсли;
	
	ТаблицаФайлов = Запрос.Выполнить().Выгрузить();	
	
	// Выбираем форматы видео
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ВнешнийИсточник", ТаблицаФайлов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭлементыРесурсовСВидео.ЭлементРесурса КАК ЭлементРесурса
	|ПОМЕСТИТЬ ЭлементыРесурсовСВидео
	|ИЗ
	|	&ВнешнийИсточник КАК ЭлементыРесурсовСВидео
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЭлементыРесурсовСВидео.ЭлементРесурса";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЭлементов.КодДанных КАК КодДанных,
		|	ЭлементыРесурсовСВидео.ЭлементРесурса КАК ЭлементРесурса
		|ИЗ
		|	ЭлементыРесурсовСВидео КАК ЭлементыРесурсовСВидео
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭлементыЭлектронныхРесурсов.ДанныеЭлемента КАК ДанныеЭлементов
		|		ПО ЭлементыРесурсовСВидео.ЭлементРесурса = ДанныеЭлементов.Ссылка";
	
		
	ТаблицаФорматов = Запрос.Выполнить().Выгрузить();
	
	// Заполняем базовый формат
	
	ТаблицаФайлов.Колонки.Добавить("БазовыйФормат");
	
	Для каждого Строка Из ТаблицаФайлов Цикл	
		Строка.БазовыйФормат = БазовыйФорматВидеоФайла(Строка.ИмяФайла);
	КонецЦикла;		
	
	// Заполняем значения форматов
	
	ФорматыВидео = ДоступныеФорматыВидео();
	
	Для каждого Формат Из ФорматыВидео Цикл	
		ТаблицаФайлов.Колонки.Добавить(Формат);	
	КонецЦикла;
	
	Для каждого Строка Из ТаблицаФайлов Цикл	
		
		ФорматыФайла = ТаблицаФорматов.НайтиСтроки(Новый Структура("ЭлементРесурса", Строка.ЭлементРесурса));
		
		Для каждого СтрокаФФ Из ФорматыФайла Цикл
			
			Если ФорматыВидео.Найти(СтрокаФФ.КодДанных) <> Неопределено Тогда
				Строка[СтрокаФФ.КодДанных] = Истина;
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	// Возвращаем таблицу
	
	Возврат ТаблицаФайлов;		
		
КонецФункции

Функция ФорматВидеоФайлаДляВыгрузки(Знач ЭлементРесурсаСВидео) Экспорт
	
	ИмяФайла = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементРесурсаСВидео, "ИмяФайла");
	
	БазовыйФормат = Справочники.ЭлементыЭлектронныхРесурсов.БазовыйФорматВидеоФайла(ИмяФайла);
	
	ДопФорматыФайла = ДополнительныеФорматыВидео(ЭлементРесурсаСВидео);
	
	Если ДопФорматыФайла.Количество() = 0 Тогда
		Возврат БазовыйФормат;
	КонецЕсли;
	
	МассивФорматов = Новый Массив;
	
	Для каждого Строка Из ДопФорматыФайла Цикл	
		МассивФорматов.Добавить(Строка.Формат);	
	КонецЦикла;
	
	Если МассивФорматов.Найти(БазовыйФормат) = Неопределено Тогда
		МассивФорматов.Добавить(БазовыйФормат);
	КонецЕсли;
	
	ОбязательныйФормат = РазработкаЭлектронныхКурсовСлужебныйКлиентСервер.ОбязательныйФорматВидео();
	
	Если МассивФорматов.Найти(ОбязательныйФормат) <> Неопределено Тогда			
		Возврат ОбязательныйФормат;
	Иначе
		ВызватьИсключение НСтр("ru = 'Поддерживается только формат видео MP4'");
	КонецЕсли;	
	
КонецФункции

Функция ДополнительныеФорматыВидео(Знач ЭлементРесурсаСВидео) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭлементРесурсаСВидео) Тогда
		ВызватьИсключение НСтр("ru = 'Элемент ресурса с видео не задан'");
	КонецЕсли;
	
	ФорматыВидео = Справочники.ЭлементыЭлектронныхРесурсов.ДоступныеФорматыВидео();	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеЭлемента.Ссылка КАК ЭлементРесурса,
		|	ДанныеЭлемента.КодДанных КАК Формат
		|ИЗ
		|	Справочник.ЭлементыЭлектронныхРесурсов.ДанныеЭлемента КАК ДанныеЭлемента
		|ГДЕ
		|	ДанныеЭлемента.КодДанных В(&ФорматыВидео)
		|	И ДанныеЭлемента.Ссылка = &ЭлементРесурса";
	
	Запрос.УстановитьПараметр("ФорматыВидео", ФорматыВидео);
	Запрос.УстановитьПараметр("ЭлементРесурса", ЭлементРесурсаСВидео);
	
	ТаблицаФайлов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаФайлов;
	
КонецФункции

Функция БазовыйФорматВидеоФайла(Знач ИмяФайла) Экспорт
	
	Возврат ВРег(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла));
	
КонецФункции

Функция ДоступныеФорматыВидео() Экспорт
	
	Возврат РазработкаЭлектронныхКурсовСлужебныйКлиентСервер.ДоступныеФорматыВидео();
	
КонецФункции

Функция РасширениеМиниатюры(Знач ЭлементРесурсаСВидео) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЭлемента.Расширение КАК Расширение
		|ИЗ
		|	Справочник.ЭлементыЭлектронныхРесурсов.ДанныеЭлемента КАК ДанныеЭлемента
		|ГДЕ
		|	ДанныеЭлемента.Ссылка = &ЭлементРесурсаСВидео
		|	И ДанныеЭлемента.КодДанных = &КодДанных";
	
	Запрос.УстановитьПараметр("КодДанных", "Миниатюра");
	Запрос.УстановитьПараметр("ЭлементРесурсаСВидео", ЭлементРесурсаСВидео);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.Расширение;
	
КонецФункции

#КонецОбласти

#КонецЕсли
