#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет первоначальное заполнение классификатора.
Процедура НачальноеЗаполнение() Экспорт
	
	КлассификаторТаблица = Новый ТаблицаЗначений;
	КлассификаторТаблица.Колонки.Добавить("Код");
	КлассификаторТаблица.Колонки.Добавить("Наименование");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "01";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Муж'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "02";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Жена'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "03";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Отец'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "04";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Мать'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "05";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Сын'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "06";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Дочь'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "07";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Дедушка'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "08";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Бабушка'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "09";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Внук'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "10";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Внучка'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "20";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Брат'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "21";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Сестра'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "40";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Отчим'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "41";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Мачеха'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "42";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Пасынок'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "43";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Падчерица'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "50";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Тесть'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "51";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Теща'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "52";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Свекор'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "53";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Свекровь'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "54";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Зять'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "55";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Невестка (сноха)'");
	
	НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
	НоваяСтрокаКлассификатора.Код = "70";
	НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Другая степень родства'");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтепениРодстваФизическихЛиц.Наименование
	               |ИЗ
	               |	Справочник.СтепениРодстваФизическихЛиц КАК СтепениРодстваФизическихЛиц";
	
	ТаблицаСуществующих = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаКлассификатора Из КлассификаторТаблица Цикл
		Если ТаблицаСуществующих.Найти(СтрокаКлассификатора.Наименование,"Наименование")  = Неопределено Тогда
			СправочникОбъект = Справочники.СтепениРодстваФизическихЛиц.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(СправочникОбъект, СтрокаКлассификатора);
			СправочникОбъект.ДополнительныеСвойства.Вставить("ЗаписьОбщихДанных");
			СправочникОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает реквизиты справочника, которые образуют естественный ключ
//  для элементов справочника.
// Используется для сопоставления элементов механизмом «Выгрузка/загрузка областей данных».
//
// Возвращаемое значение: Массив(Строка) - массив имен реквизитов, образующих
//  естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Код");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли