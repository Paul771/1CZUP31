
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("ХарактеристикаПерсонала") Тогда
		Отказ = Истина;
		Возврат;
	Иначе
		ХарактеристикаПерсонала = Параметры.ХарактеристикаПерсонала;
	КонецЕсли;
	
	Элементы.ГруппыХарактеристикПерсоналаЗначение.ОграничениеТипа = ХарактеристикаПерсонала.ТипЗначения;
	
	// Заполним таблицу группами
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Характеристика", ХарактеристикаПерсонала);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ГруппыХарактеристикПерсоналаХарактеристикиПерсонала.Ссылка КАК ГруппаХарактеристик,
		|	ГруппыХарактеристикПерсоналаХарактеристикиПерсонала.Значение
		|ИЗ
		|	Справочник.ГруппыХарактеристикПерсонала.ХарактеристикиПерсонала КАК ГруппыХарактеристикПерсоналаХарактеристикиПерсонала
		|ГДЕ
		|	НЕ ГруппыХарактеристикПерсоналаХарактеристикиПерсонала.Ссылка.ПометкаУдаления
		|	И ГруппыХарактеристикПерсоналаХарактеристикиПерсонала.Характеристика = &Характеристика";
		
	ГруппыХарактеристикПерсонала.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВключитьВГруппу(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ВключитьВГруппуЗавершение", ЭтаФорма);
	ОткрытьФорму("Справочник.ГруппыХарактеристикПерсонала.ФормаВыбора",, ЭтаФорма, УникальныйИдентификатор,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПеренестиДанныеВГруппыХарактеристик();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыХарактеристикПерсоналаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик оповещения о закрытии формы выбора групп характеристик персонала.
// Добавляет выбранную группу характеристик персонала.
//
// Параметры 
//	Результат - СправочникСсылка.ГруппыХарактеристикПерсонала, Неопределено - ссылка на выбранную группу характеристик персонала. 
//	ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
&НаКлиенте
Процедура ВключитьВГруппуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	НовСтрока = ГруппыХарактеристикПерсонала.Добавить();
	НовСтрока.ГруппаХарактеристик = Результат;
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиДанныеВГруппыХарактеристик()
	
	ОбъектыГруппХарактеристик = Новый ТаблицаЗначений;
	ОбъектыГруппХарактеристик.Колонки.Добавить("Ссылка");
	ОбъектыГруппХарактеристик.Колонки.Добавить("Объект");
	ОбъектыГруппХарактеристик.Колонки.Добавить("Записывать", Новый ОписаниеТипов("Булево"));
	
	// Удалим лишние значения
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Характеристика", ХарактеристикаПерсонала);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ГруппыХарактеристикПерсоналаХарактеристикиПерсонала.Ссылка
		|ИЗ
		|	Справочник.ГруппыХарактеристикПерсонала.ХарактеристикиПерсонала КАК ГруппыХарактеристикПерсоналаХарактеристикиПерсонала
		|ГДЕ
		|	ГруппыХарактеристикПерсоналаХарактеристикиПерсонала.Характеристика = &Характеристика
		|	И НЕ ГруппыХарактеристикПерсоналаХарактеристикиПерсонала.Ссылка.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ГруппыХарактеристикПерсоналаХарактеристикиПерсонала.Ссылка";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		УдаляемыеСтроки = Новый Массив;
		СтрокаОбъектовГруппХарактеристик = ОбъектыГруппХарактеристик.Добавить();
		СтрокаОбъектовГруппХарактеристик.Ссылка = Выборка.Ссылка;
		СтрокаОбъектовГруппХарактеристик.Объект = Выборка.Ссылка.ПолучитьОбъект();
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Характеристика", ХарактеристикаПерсонала);
		СтрокиТекущейХарактеристики = СтрокаОбъектовГруппХарактеристик.Объект.ХарактеристикиПерсонала.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекущаяСтрока Из СтрокиТекущейХарактеристики Цикл
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ГруппаХарактеристик", Выборка.Ссылка);
			СтруктураПоиска.Вставить("Значение", ТекущаяСтрока.Значение);
			НайденныеСтроки = ГруппыХарактеристикПерсонала.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() = 0 Тогда
				УдаляемыеСтроки.Добавить(ТекущаяСтрока);
			КонецЕсли;
		КонецЦикла;
		
		// Удалим строки, которые подлежат удалению
		Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			СтрокаОбъектовГруппХарактеристик.Объект.ХарактеристикиПерсонала.Удалить(УдаляемаяСтрока);
			СтрокаОбъектовГруппХарактеристик.Записывать = Истина;
		КонецЦикла;
		
	КонецЦикла;
	
	// Запишем добавленные/измененные значения
	Для каждого ТекущаяСтрока Из ГруппыХарактеристикПерсонала Цикл
		
		СтрокаОбъектовГруппХарактеристик = ОбъектыГруппХарактеристик.Найти(ТекущаяСтрока.ГруппаХарактеристик, "Ссылка");
		Если СтрокаОбъектовГруппХарактеристик = Неопределено Тогда
			СтрокаОбъектовГруппХарактеристик = ОбъектыГруппХарактеристик.Добавить();
			СтрокаОбъектовГруппХарактеристик.Ссылка = ТекущаяСтрока.ГруппаХарактеристик;
			СтрокаОбъектовГруппХарактеристик.Объект = ТекущаяСтрока.ГруппаХарактеристик.ПолучитьОбъект();
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Характеристика", ХарактеристикаПерсонала);
		СтруктураПоиска.Вставить("Значение", ТекущаяСтрока.Значение); 
		НайденныеСтроки = СтрокаОбъектовГруппХарактеристик.Объект.ХарактеристикиПерсонала.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НовСтрока = СтрокаОбъектовГруппХарактеристик.Объект.ХарактеристикиПерсонала.Добавить();
			НовСтрока.Характеристика = ХарактеристикаПерсонала;
			НовСтрока.Значение = ТекущаяСтрока.Значение;
			НовСтрока.Вес = 1;
			СтрокаОбъектовГруппХарактеристик.Записывать = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	НачатьТранзакцию();
	Попытка
		Для каждого ТекущаяСтрока Из ОбъектыГруппХарактеристик Цикл
			Если ТекущаяСтрока.Записывать Тогда
				ТекущаяСтрока.Объект.Записать();
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Перенос характеристик персонала в группы'"), УровеньЖурналаРегистрации.Ошибка, 
			ТекущаяСтрока.Объект.Метаданные(), ТекущаяСтрока.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

