
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Не Параметры.Ключ.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеквизитыПроизвольныхКадровыхПриказов.Ссылка,
		|	РеквизитыПроизвольныхКадровыхПриказов.Наименование,
		|	РеквизитыПроизвольныхКадровыхПриказов.ТипЗначения,
		|	РеквизитыПроизвольныхКадровыхПриказов.ОбязательноДляЗаполнения,
		|	РеквизитыПроизвольныхКадровыхПриказов.РеквизитУпорядочивания КАК РеквизитУпорядочивания
		|ИЗ
		|	ПланВидовХарактеристик.РеквизитыПроизвольныхКадровыхПриказов КАК РеквизитыПроизвольныхКадровыхПриказов
		|ГДЕ
		|	РеквизитыПроизвольныхКадровыхПриказов.Шаблон = &Шаблон
		|	И НЕ РеквизитыПроизвольныхКадровыхПриказов.ИспользуетсяВТабличнойЧасти 
		|	И НЕ РеквизитыПроизвольныхКадровыхПриказов.ВАрхиве
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеквизитУпорядочивания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеквизитыПроизвольныхКадровыхПриказов.Ссылка,
		|	РеквизитыПроизвольныхКадровыхПриказов.Наименование,
		|	РеквизитыПроизвольныхКадровыхПриказов.ТипЗначения,
		|	РеквизитыПроизвольныхКадровыхПриказов.ОбязательноДляЗаполнения,
		|	РеквизитыПроизвольныхКадровыхПриказов.РеквизитУпорядочивания КАК РеквизитУпорядочивания
		|ИЗ
		|	ПланВидовХарактеристик.РеквизитыПроизвольныхКадровыхПриказов КАК РеквизитыПроизвольныхКадровыхПриказов
		|ГДЕ
		|	РеквизитыПроизвольныхКадровыхПриказов.Шаблон = &Шаблон
		|	И РеквизитыПроизвольныхКадровыхПриказов.ИспользуетсяВТабличнойЧасти 
		|	И НЕ РеквизитыПроизвольныхКадровыхПриказов.ВАрхиве
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеквизитУпорядочивания";
		
		Запрос.УстановитьПараметр("Шаблон", Объект.Ссылка);
		
		Результат = Запрос.ВыполнитьПакет();
		
		РеквизитыДокумента.Загрузить(Результат[0].Выгрузить());
		
		РеквизитыСпискаСотрудников.Загрузить(Результат[1].Выгрузить());		
		
	КонецЕсли;
	
	НесколькоСотрудников = ?(Объект.НесколькоСотрудников, 1, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроизвольныйКадровыйПриказЗначенияРеквизитов.Ссылка КАК Документ,
	|	ПроизвольныйКадровыйПриказЗначенияРеквизитов.Реквизит КАК Реквизит,
	|	ПроизвольныйКадровыйПриказЗначенияРеквизитов.Ссылка.Представление
	|ИЗ
	|	Документ.ПроизвольныйКадровыйПриказ.ЗначенияРеквизитов КАК ПроизвольныйКадровыйПриказЗначенияРеквизитов
	|ГДЕ
	|	ПроизвольныйКадровыйПриказЗначенияРеквизитов.Ссылка.Шаблон = &Шаблон
	|	И ПроизвольныйКадровыйПриказЗначенияРеквизитов.Реквизит В(&СписокРеквизитов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Реквизит,
	|	Документ
	|ИТОГИ ПО
	|	Реквизит
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроизвольныйКадровыйПриказЗначенияРеквизитов.Ссылка КАК Документ,
	|	ПроизвольныйКадровыйПриказЗначенияРеквизитов.Реквизит КАК Реквизит,
	|	ПроизвольныйКадровыйПриказЗначенияРеквизитов.Ссылка.Представление
	|ИЗ
	|	Документ.ПроизвольныйКадровыйПриказ.ЗначенияРеквизитов КАК ПроизвольныйКадровыйПриказЗначенияРеквизитов
	|ГДЕ
	|	ПроизвольныйКадровыйПриказЗначенияРеквизитов.Ссылка.Шаблон = &Шаблон
	|	И НЕ ПроизвольныйКадровыйПриказЗначенияРеквизитов.Реквизит В (&СписокРеквизитов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Реквизит,
	|	Документ
	|ИТОГИ ПО
	|	Реквизит
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроизвольныйКадровыйПриказ.Представление КАК Представление,
	|	ПроизвольныйКадровыйПриказ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПроизвольныйКадровыйПриказ КАК ПроизвольныйКадровыйПриказ
	|ГДЕ
	|	ПроизвольныйКадровыйПриказ.Шаблон = &Шаблон
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Шаблон", Объект.Ссылка);
	Запрос.УстановитьПараметр("СписокРеквизитов", УдаленныеРеквизиты);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаУдаленныеРеквизиты = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаУдаленныеРеквизиты.Следующий() Цикл
		
		ТекстОшибки = "";
		
		УдаляемыйРеквизит = ВыборкаУдаленныеРеквизиты.Реквизит;
		
		ВыборкаДокумент = ВыборкаУдаленныеРеквизиты.Выбрать();
		
		КоличествоДокументовВОшибке = 0;
		ТекстОшибкиДокументов = "";
		
		Пока ВыборкаДокумент.Следующий() Цикл
			
			КоличествоДокументовВОшибке = КоличествоДокументовВОшибке + 1;
			Если КоличествоДокументовВОшибке > 2 Тогда
				СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ТекстОшибкиДокументов, 2);
				ТекстОшибкиДокументов = ТекстОшибкиДокументов + " и других ";
				Прервать;
			КонецЕсли;
			ТекстОшибкиДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'") + ", ",
				ТекстОшибкиДокументов, ВыборкаДокумент.Представление);
		КонецЦикла;
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В документ%1 %2'"),
			?(КоличествоДокументовВОшибке > 1, "ах", "е"), ТекстОшибкиДокументов);
			
		ТекстОшибки = ТекстОшибки + НСтр("ru = 'используется удаляемый реквизит:'") + УдаляемыйРеквизит;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Объект.Ссылка, , , Отказ);
	
	КонецЦикла; 	
	
	ВыборкаРеквизиты = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРеквизиты.Следующий() Цикл
		
		ТекстОшибки = "";
		
		Реквизит = ВыборкаРеквизиты.Реквизит;
		
		ОписаниеРеквизитаНаФорме = НайтиРеквизит(Реквизит);
		
		Если ОписаниеРеквизитаНаФорме.ТипЗначения <> Реквизит.ТипЗначения Тогда
					
			ВыборкаДокумент = ВыборкаРеквизиты.Выбрать();
			
			КоличествоДокументовВОшибке = 0;
			ТекстОшибкиДокументов = "";
			
			Пока ВыборкаДокумент.Следующий() Цикл
				
				КоличествоДокументовВОшибке = КоличествоДокументовВОшибке + 1;
				Если КоличествоДокументовВОшибке > 2 Тогда
					СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ТекстОшибкиДокументов, 2);
					ТекстОшибкиДокументов = ТекстОшибкиДокументов + " и других ";
					Прервать;
				КонецЕсли;
				ТекстОшибкиДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'") + ", ",
					ТекстОшибкиДокументов, ВыборкаДокумент.Представление);
			КонецЦикла;
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В документ%1 %2'"),
				?(КоличествоДокументовВОшибке > 1, "ах", "е"), ТекстОшибкиДокументов);
				
			ТекстОшибки = ТекстОшибки + НСтр("ru = 'используется реквизит:'") + Реквизит +  НСтр("ru = '. Изменение типа значения невозможно.'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Объект.Ссылка, , , Отказ);
			
		КонецЕсли;	
			
	КонецЦикла; 
	
	Если Объект.Ссылка.НесколькоСотрудников <> Объект.НесколькоСотрудников 
		И Не Объект.НесколькоСотрудников Тогда
		
		ВыборкаДокументы = Результат[2].Выбрать();
		
		КоличествоДокументовВОшибке = 0;
		ТекстОшибкиДокументов = "";
		ТекстОшибки = "";

		Пока ВыборкаДокументы.Следующий() Цикл
							
			КоличествоДокументовВОшибке = КоличествоДокументовВОшибке + 1;
			Если КоличествоДокументовВОшибке > 2 Тогда
				СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ТекстОшибкиДокументов, 2);
				ТекстОшибкиДокументов = ТекстОшибкиДокументов + " и других ";
				Прервать;
			КонецЕсли;
			ТекстОшибкиДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'") + ", ",
				ТекстОшибкиДокументов, ВыборкаДокументы.Представление);
							
		КонецЦикла; 	
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В документ%1 %2'"),
				?(КоличествоДокументовВОшибке > 1, "ах", "е"), ТекстОшибкиДокументов);

		ТекстОшибки = ТекстОшибки + НСтр("ru = 'используется несколько сотрудников'");
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Объект.Ссылка, , , Отказ);
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьРеквизитНесколькоСотрудников();
		
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Индекс = 1;
	
	Для Каждого СтрокаТЗ Из РеквизитыДокумента Цикл
		
		Если Не (ЗначениеЗаполнено(СтрокаТЗ.Наименование) И ЗначениеЗаполнено(СтрокаТЗ.ТипЗначения)) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЗ.Ссылка) Тогда
			РеквизитОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		Иначе
			РеквизитОбъект = ПланыВидовХарактеристик.РеквизитыПроизвольныхКадровыхПриказов.СоздатьЭлемент();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(РеквизитОбъект, СтрокаТЗ);
		
		РеквизитОбъект.РеквизитУпорядочивания 	 	= Индекс;
		РеквизитОбъект.ИспользуетсяВТабличнойЧасти 	= Ложь;
		РеквизитОбъект.Шаблон						= ТекущийОбъект.Ссылка;
		
		РеквизитОбъект.Записать();			
		
		СтрокаТЗ.Ссылка = РеквизитОбъект.Ссылка;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	Индекс = 1;
	
	Для Каждого СтрокаТЗ Из РеквизитыСпискаСотрудников Цикл
		
		Если Не (ЗначениеЗаполнено(СтрокаТЗ.Наименование) И ЗначениеЗаполнено(СтрокаТЗ.ТипЗначения)) Тогда
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрокаТЗ.Ссылка) Тогда
			РеквизитОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		Иначе
			РеквизитОбъект = ПланыВидовХарактеристик.РеквизитыПроизвольныхКадровыхПриказов.СоздатьЭлемент();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(РеквизитОбъект, СтрокаТЗ);
		
		РеквизитОбъект.РеквизитУпорядочивания 		= Индекс;
		РеквизитОбъект.ИспользуетсяВТабличнойЧасти 	= Истина;
		РеквизитОбъект.Шаблон						= ТекущийОбъект.Ссылка;
		
		РеквизитОбъект.Записать();			
		
		СтрокаТЗ.Ссылка = РеквизитОбъект.Ссылка;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	Если ТипЗнч(УдаленныеРеквизиты) = Тип("ФиксированныйМассив") Тогда
		Для Каждого Реквизит Из УдаленныеРеквизиты Цикл
			УстановитьПризнакВАрхивеРеквизиту(Реквизит);	
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыОповещения = Новый Структура("Ссылка, Наименование, Представление, Родитель");
	ПараметрыОповещения.Ссылка = Объект.Ссылка;
	ПараметрыОповещения.Наименование = Объект.Наименование;
	ПараметрыОповещения.Представление = Объект.Наименование;
	ПараметрыОповещения.Родитель = Объект.Родитель;
	
	Оповестить("ИзмененВидДокументовПроизвольныйКадровыйПриказ", ПараметрыОповещения);
	
	ОбновитьИнтерфейс();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НесколькоСотрудниковПриИзменении(Элемент)
	
	УстановитьРеквизитНесколькоСотрудников();
	
	ОбновитьЭлементыФормы();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПодразделениеПриИзменении(Элемент)
	
	Объект.ПроверятьЗаполнениеПодразделения = Ложь;
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыДокумента

&НаКлиенте
Процедура РеквизитыДокументаПриАктивизацииПоля(Элемент)
	
	Если Элемент.ТекущийЭлемент.Имя = "РеквизитыДокументаТипЗначения" Тогда
		Элемент.ТекущийЭлемент.ДоступныеТипы = ДоступныеТипы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыДокументаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыДокументаПередНачаломИзменения(Элемент, Отказ)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыДокументаПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ЗначениеЗаполнено(ТекДанные.Ссылка) Тогда
		ДобавитьВМассивУдаленных(ТекДанные.Ссылка);
	КонецЕсли;
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура РеквизитыДокументаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Копирование Тогда
		Элемент.ТекущиеДанные.Ссылка = ПредопределенноеЗначение("ПланВидовХарактеристик.РеквизитыПроизвольныхКадровыхПриказов.ПустаяСсылка");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыСпискаСотрудников

&НаКлиенте
Процедура РеквизитыСпискаСотрудниковПриАктивизацииПоля(Элемент)
	
	Если Элемент.ТекущийЭлемент.Имя = "РеквизитыСпискаСотрудниковТипЗначения" Тогда
		Элемент.ТекущийЭлемент.ДоступныеТипы = ДоступныеТипы();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РеквизитыСпискаСотрудниковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыСпискаСотрудниковПередНачаломИзменения(Элемент, Отказ)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыСпискаСотрудниковПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ЗначениеЗаполнено(ТекДанные.Ссылка) Тогда
		ДобавитьВМассивУдаленных(ТекДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РеквизитыСпискаСотрудниковПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Копирование Тогда
		Элемент.ТекущиеДанные.Ссылка = ПредопределенноеЗначение("ПланВидовХарактеристик.РеквизитыПроизвольныхКадровыхПриказов.ПустаяСсылка");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПечатныеФормы(Команда)
		
	ПечатныеФормы = Новый Массив;
	Для Каждого СтрокаТабличнойЧасти Из Объект.ВнешниеПечатныеФормы Цикл
		ПечатныеФормы.Добавить(СтрокаТабличнойЧасти.ПечатнаяФорма);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура("Ссылка, ПечатныеФормы", Объект.Ссылка, ПечатныеФормы);
	Оповещение = Новый ОписаниеОповещения("ПечатныеФормыЗавершение", ЭтотОбъект);	
	ОткрытьФорму("Справочник.ШаблоныПроизвольныхКадровыхПриказов.Форма.ПечатныеФормы", ПараметрыФормы, ЭтаФорма, , , , 
		Оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьЭлементыФормы()
	
	Элементы.ГруппаТаблицаРеквизитыСпискаСотрудников.Доступность = Объект.НесколькоСотрудников;
	Элементы.ПроверятьЗаполнениеПодразделения.Доступность = Объект.ПоказыватьПодразделение;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатныеФормыЗавершение(ПечатныеФормы, ДополнительныеПараметры) Экспорт 
	
	Если ТипЗнч(ПечатныеФормы) = Тип("Массив") Тогда
		Объект.ВнешниеПечатныеФормы.Очистить();
		Для Каждого ПечатнаяФорма Из ПечатныеФормы Цикл
			НоваяСтрока = Объект.ВнешниеПечатныеФормы.Добавить();
			НоваяСтрока.ПечатнаяФорма = ПечатнаяФорма;
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДоступныеТипы()
	
	НовыйЭлемент = ПланыВидовХарактеристик.РеквизитыПроизвольныхКадровыхПриказов.СоздатьЭлемент();
	Возврат НовыйЭлемент.ТипЗначения;
	
КонецФункции

&НаСервере
Процедура УстановитьПризнакВАрхивеРеквизиту(Ссылка)
	
	РеквизитОбъект = Ссылка.ПолучитьОбъект();
	РеквизитОбъект.ВАрхиве = Истина;
	РеквизитОбъект.ОбменДанными.Загрузка = Истина;
	РеквизитОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВМассивУдаленных(Ссылка)
	
	Если ТипЗнч(УдаленныеРеквизиты) = Тип("ФиксированныйМассив") Тогда
		МассивРеквизитов = Новый Массив(УдаленныеРеквизиты);
	Иначе
		МассивРеквизитов = Новый Массив;
	КонецЕсли;
	
	МассивРеквизитов.Добавить(Ссылка);
	УдаленныеРеквизиты = Новый ФиксированныйМассив(МассивРеквизитов);
	
КонецПроцедуры

&НаСервере
Функция НайтиРеквизит(Реквизит)
	
	СтруктураРеквизита = Новый Структура("Наименование, ТипЗначения");
	
	Реквизиты = РеквизитыДокумента.НайтиСтроки(Новый Структура("Ссылка", Реквизит));
	Если Реквизиты.Количество() = 1 Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРеквизита, Реквизиты[0]);
		Возврат СтруктураРеквизита;
	КонецЕсли;
		
	Реквизиты = РеквизитыСпискаСотрудников.НайтиСтроки(Новый Структура("Ссылка", Реквизит));
	Если Реквизиты.Количество() = 1 Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРеквизита, Реквизиты[0]);
	КонецЕсли;
		
	Возврат СтруктураРеквизита;
	
КонецФункции

&НаСервере
Процедура УстановитьРеквизитНесколькоСотрудников()
	
	Объект.НесколькоСотрудников = НесколькоСотрудников = 1;
		
КонецПроцедуры

#КонецОбласти








