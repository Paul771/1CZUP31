
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("МножественныйВыбор") Тогда
		Элементы.ДеревоПометка.Видимость = Параметры.МножественныйВыбор;
		МножественныйВыбор = Параметры.МножественныйВыбор;
	КонецЕсли;
	
	Если Не Параметры.Свойство("Классификатор") Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоОбъект = РеквизитФормыВЗначение("Дерево", Тип("ДеревоЗначений"));
	
	ИспользуемыеСайты = Неопределено;
	Параметры.Свойство("ИспользуемыеСайты", ИспользуемыеСайты);
	
	ИнтеграцияРекрутинговыхСайтов.ЗаполнитьДерево(Параметры.Классификатор, ДеревоОбъект, ИспользуемыеСайты);
	
	СформироватьСписокВыбора(ДеревоОбъект);
	
	Если Параметры.Свойство("ВыбранныеСтроки") 
		И ЗначениеЗаполнено(Параметры.ВыбранныеСтроки) Тогда
		
		ПометитьВыбранныеСтроки(ДеревоОбъект, Параметры.ВыбранныеСтроки);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДеревоОбъект, "Дерево");
	
	Если Параметры.Классификатор = "areas" 
		Или Параметры.Классификатор = "towns" 
		Или Параметры.Классификатор = "areas_towns" Тогда
		Заголовок = НСтр("ru = 'Выбор города'");
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьИнфоНадпись();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПолеПоискаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПолеПоиска) Тогда
		Элементы.Дерево.ТекущаяСтрока = Число(ПолеПоиска);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДерева

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не МножественныйВыбор Тогда
		Если Элементы.Дерево.ТекущиеДанные <> Неопределено Тогда
			ДочерниеЭлементы = Элементы.Дерево.ТекущиеДанные.ПолучитьЭлементы();
			
			Если ДочерниеЭлементы.Количество() = 0 Тогда
				ВыбранныеСтроки = Новый СписокЗначений;
				ВыбранныеСтроки.Добавить(Элементы.Дерево.ТекущиеДанные.Идентификатор, Элементы.Дерево.ТекущиеДанные.Значение);
				Закрыть(ВыбранныеСтроки);
			КонецЕсли;
			
		Иначе
			Закрыть(Неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередНачаломИзменения(Элемент, Отказ)
	
	Если Не МножественныйВыбор Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ТекущиеДанные.Пометка = 2 Тогда
		ТекущиеДанные.Пометка = 0;
	КонецЕсли;
	
	УстановитьПометкуПодчиненных(ТекущиеДанные);
	УстановитьПометкуРодителя(ТекущиеДанные.ПолучитьРодителя(), Ложь);
	
	УстановитьИнфоНадпись();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	Если МножественныйВыбор Тогда
		ВыбранныеСтроки = ВыбранныеСтроки();
		Закрыть(ВыбранныеСтроки);
	Иначе
		Если Элементы.Дерево.ТекущиеДанные <> Неопределено Тогда
			ВыбранныеСтроки = Новый СписокЗначений;
			ВыбранныеСтроки.Добавить(Элементы.Дерево.ТекущиеДанные.Идентификатор, Элементы.Дерево.ТекущиеДанные.Значение);
			Закрыть(ВыбранныеСтроки);
		Иначе
			Закрыть(Неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПометитьВыбранныеСтроки(ДеревоОбъект, ВыбранныеСтроки)
	
	СоответствиеРодителей = Новый Соответствие;
	
	Для Каждого ВыбраннаяСтрока Из ВыбранныеСтроки Цикл
		
		Если ТипЗнч(ВыбраннаяСтрока.Значение) = Тип("Структура") Тогда
			ЗначениеПоиска = ВыбраннаяСтрока.Значение.ИдентификаторОбщий;
		Иначе
			ЗначениеПоиска = ВыбраннаяСтрока.Значение;
		КонецЕсли;
		
		СтрокаДерева = ДеревоОбъект.Строки.Найти(ЗначениеПоиска, "Идентификатор", Истина);
		
		Если СтрокаДерева <> Неопределено Тогда
			СтрокаДерева.Пометка = 1;
		КонецЕсли;
		
		Родитель = СтрокаДерева.Родитель;
		Если Родитель <> Неопределено Тогда
			СоответствиеРодителей.Вставить(Родитель);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Родитель Из СоответствиеРодителей Цикл
		УстановитьПометкуРодителя(Родитель.Ключ);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ВыбранныеСтроки()
	
	ВыбранныеСтроки = Новый СписокЗначений;
	
	ДеревоОбъект = РеквизитФормыВЗначение("Дерево", Тип("ДеревоЗначений"));
	
	Строки = ДеревоОбъект.Строки;
	
	ОбработатьСтроку(Строки, ВыбранныеСтроки);
	
	Возврат ВыбранныеСтроки;
	
КонецФункции 

&НаСервере
Процедура ОбработатьСтроку(Строки, ВыбранныеСтроки)
	
	Если Не ЗначениеЗаполнено(Строки) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Строки Цикл
	
		Если Строка.Пометка = 1 
			И Строка.Строки.Количество() = 0 Тогда
			
			Если Не ЗначениеЗаполнено(Строка.ИдентификаторДоп) Тогда
				ВыбранныеСтроки.Добавить(Строка.Идентификатор, Строка.Значение);
			Иначе
				
				Идентификаторы = Новый Структура(Строка.ИдентификаторДоп);
				Идентификаторы.Вставить("ИдентификаторОбщий", Строка.Идентификатор);
				
				ВыбранныеСтроки.Добавить(Идентификаторы, Строка.Значение);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Строки = Строка.Строки;
		ОбработатьСтроку(Строки, ВыбранныеСтроки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСписокВыбора(ДеревоОбъект)
	
	СписокВыбора = Элементы.ПолеПоиска.СписокВыбора;
	
	Номер = -1;
	ОбработатьСтрокуФормированиеСпискаВыбора(ДеревоОбъект.Строки, СписокВыбора, Номер);
	
	СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСтрокуФормированиеСпискаВыбора(Строки, СписокВыбора, Номер)
	  	
	Для Каждого ПодчиненнаяСтрока Из Строки Цикл
		Номер = Номер + 1;
		Если ПодчиненнаяСтрока.Строки.Количество() = 0 Тогда
			СписокВыбора.Добавить(Строка(Номер), ПодчиненнаяСтрока.Значение);
		КонецЕсли;
		ОбработатьСтрокуФормированиеСпискаВыбора(ПодчиненнаяСтрока.Строки, СписокВыбора, Номер);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнфоНадпись()
	
	ВыбранныеЭлементыИнфоНадпись = "";
	
	ВыбранныеСтроки = ВыбранныеСтроки();
	
	Для Каждого ВыбраннаяСтрока Из ВыбранныеСтроки Цикл
		ВыбранныеЭлементыИнфоНадпись = ВыбранныеЭлементыИнфоНадпись + ?(ВыбранныеЭлементыИнфоНадпись = "", "", ", ") + ВыбраннаяСтрока.Представление;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПометкуРодителя(Родитель, ЭтоДеревоЗначений = Истина)
	
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	БылиПометки = Ложь;
	БылиПустые = Ложь;
	
	Если ЭтоДеревоЗначений Тогда
		ДочерниеЭлементыРодителя = Родитель.Строки;
	Иначе
		ДочерниеЭлементыРодителя = Родитель.ПолучитьЭлементы();
	КонецЕсли;
	
	Для Каждого ДочернийЭлемент Из ДочерниеЭлементыРодителя Цикл
		
		БылиПометки = БылиПометки Или ДочернийЭлемент.Пометка;
		БылиПустые = БылиПустые Или Не ДочернийЭлемент.Пометка;
		
	КонецЦикла;
	
	Если БылиПометки И Не БылиПустые Тогда
		Родитель.Пометка = 1;
	ИначеЕсли БылиПометки И БылиПустые Тогда
		Родитель.Пометка = 2;
	Иначе
		Родитель.Пометка = 0;
	КонецЕсли;
	
	Если ЭтоДеревоЗначений Тогда
		Прародитель  = Родитель.Родитель;
	Иначе
		Прародитель = Родитель.ПолучитьРодителя();
	КонецЕсли;
	
	Если Прародитель <> Неопределено Тогда
		УстановитьПометкуРодителя(Прародитель, ЭтоДеревоЗначений);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуПодчиненных(Родитель)
	
	ДочерниеЭлементы = Родитель.ПолучитьЭлементы();
	
	Для Каждого ДочернийЭлемент Из ДочерниеЭлементы Цикл
		
		ДочернийЭлемент.Пометка = Родитель.Пометка;
		УстановитьПометкуПодчиненных(ДочернийЭлемент);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
