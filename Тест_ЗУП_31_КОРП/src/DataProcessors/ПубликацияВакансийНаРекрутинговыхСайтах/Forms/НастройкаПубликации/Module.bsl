
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Вакансия = Параметры.Вакансия;
	Сайт = Параметры.Сайт;
	ПервичнаяПубликация = ИнтеграцияРекрутинговыхСайтов.ПервичнаяПубликация(Вакансия, Сайт);
	
	Элементы.ДеревоНастроекВакансияВПрограмме.Видимость = Не ПервичнаяПубликация;
	Элементы.ДеревоНастроекПубликацияВакансии.Заголовок = Сайт;
	
	Элементы.ФормаКомандаОпубликовать.Видимость = ПервичнаяПубликация;
	Элементы.ФормаКомандаОбновитьПубликацию.Видимость = Не ПервичнаяПубликация;
	Элементы.ФормаКомандаОбновитьПубликацию.КнопкаПоУмолчанию = Не ПервичнаяПубликация;
	
	ОбновитьСсылкуНаВакансию();
	
	Если Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.RabotaMail() Тогда
		СайтДляЗагрузкиСправочников = ИнтеграцияРекрутинговыхСайтовКлиентСервер.HeadHunter();
	Иначе
		СайтДляЗагрузкиСправочников = Сайт;
	КонецЕсли;
	
	ИнтеграцияРекрутинговыхСайтов.ЗагрузитьКлассификаторы(СайтДляЗагрузкиСправочников);
	
	ВидыПолей = ИнтеграцияРекрутинговыхСайтов.ВидыПолей(Сайт, ПервичнаяПубликация);
	
	ЭлементыСМножественнымВыборомИзСписка = ВидыПолей.СМножественнымВыборомИзСписка;
	ЭлементыСОдиночнымВыборомИзСписка = ВидыПолей.СОдиночнымВыборомИзСписка;
	ЭлементыСоСпискомБезКлассификатора = ВидыПолей.СоСпискомБезКлассификатора;
	ЭлементыСоСпециальнойФормойРедактированияСписка = ВидыПолей.СоСпециальнойФормойРедактированияСписка;
	ЭлементыСМножественнымВыборомИзДерева = ВидыПолей.СМножественнымВыборомИзДерева;
	ЭлементыСОдиночнымВыборомИзДерева = ВидыПолей.СОдиночнымВыборомИзДерева;
	ЭлементыНедоступныеДляРедактирования = ВидыПолей.НедоступныеДляРедактирования;
	ЭлементыСТекстомВHTML = ВидыПолей.СТекстомВHTML;
	ЭлементыСМногострочнымВводом = ВидыПолей.СМногострочнымВводом;
	
	ОбновитьДерево();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОпубликовать(Команда)
	
	ОчиститьСообщения();
	
	Успешно = ОпубликоватьВакансию();
	Если Успешно Тогда
		ИнтеграцияРекрутинговыхСайтовКлиент.КомандаОпубликовать(ЭтаФорма);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьПубликацию(Команда)
	
	ОчиститьСообщения();
	
	Успешно = ОбновитьВакансиюНаСайте();
	Если Успешно Тогда
		ИнтеграцияРекрутинговыхСайтовКлиент.КомандаОбновитьПубликацию(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДерева

&НаКлиенте
Процедура ДеревоНастроекПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТипЗнч(ТекущиеДанные.Показатель) = Тип("СправочникСсылка.Вакансии") Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Ключ", ТекущиеДанные.Показатель);
			ОткрытьФорму("Справочник.Вакансии.Форма.ФормаЭлемента", СтруктураПараметров);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ТипРеквизита = "Строка" Тогда
		
		Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		
		Если ЭлементСодержитТекст(ТекущиеДанные.Путь, ЭлементыСМногострочнымВводом, ЭлементыСТекстомВHTML) Тогда
			Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.КнопкаВыбора = Истина;
			Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.РедактированиеТекста = Ложь;
		Иначе
			Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.КнопкаВыбора = Ложь;
			Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.РедактированиеТекста = Истина;
		КонецЕсли;
		
	ИначеЕсли ТекущиеДанные.ТипРеквизита = "Число" Тогда
		Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.ОграничениеТипа = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));
	ИначеЕсли ТекущиеДанные.ТипРеквизита = "Булево" Тогда
		Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.ОграничениеТипа = Новый ОписаниеТипов("Булево");
	ИначеЕсли ТекущиеДанные.ТипРеквизита = "Начало массива" 
		Или ТекущиеДанные.ТипРеквизита = "Начало объекта" Тогда
		
		Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
		Если ЗначениеЗаполнено(ЭлементыНедоступныеДляРедактирования)
			И ЭлементыНедоступныеДляРедактирования.Найти(ТекущиеДанные.Путь) <> Неопределено Тогда
			
			Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.КнопкаВыбора = Ложь;
		Иначе
			Элемент.ПодчиненныеЭлементы.ДеревоНастроекПубликацияВакансии.КнопкаВыбора = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПубликацияВакансииПриИзменении(Элемент)
	
	ПриИзмененииЗначенияПубликацииВакансии();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПубликацияВакансииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	СоответствиеПутиИКлассификатора = ИнтеграцияРекрутинговыхСайтовКлиентСервер.СоответствиеПутиИКлассификатораПоСайту(Сайт);
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭлементыНедоступныеДляРедактирования)
		И ЭлементыНедоступныеДляРедактирования.Найти(ТекущиеДанные.Путь) <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		Возврат;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭлементыСМножественнымВыборомИзДерева) 
		И ЭлементыСМножественнымВыборомИзДерева.Найти(ТекущиеДанные.Путь) <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Классификатор", СоответствиеПутиИКлассификатора.Получить(ТекущиеДанные.Путь)); 
		СтруктураПараметров.Вставить("МножественныйВыбор", Истина);
		СтруктураПараметров.Вставить("ВыбранныеСтроки", ТекущиеДанные.ПубликацияВакансии);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
		
		ИнтеграцияРекрутинговыхСайтовКлиент.ВыборИзДереваЗначений(ЭтаФорма, СтруктураПараметров, ДополнительныеПараметры);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭлементыСОдиночнымВыборомИзДерева)
		И ЭлементыСОдиночнымВыборомИзДерева.Найти(ТекущиеДанные.Путь) <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Классификатор", СоответствиеПутиИКлассификатора.Получить(ТекущиеДанные.Путь)); 
		СтруктураПараметров.Вставить("МножественныйВыбор", Ложь);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
		
		ИнтеграцияРекрутинговыхСайтовКлиент.ВыборИзДереваЗначений(ЭтаФорма, СтруктураПараметров, ДополнительныеПараметры);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭлементыСОдиночнымВыборомИзСписка) 
		И ЭлементыСОдиночнымВыборомИзСписка.Найти(ТекущиеДанные.Путь) <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокВыбора = СписокВыбораНаСервере(СоответствиеПутиИКлассификатора.Получить(ТекущиеДанные.Путь));
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
		ДополнительныеПараметры.Вставить("СписокВыбора", СписокВыбора);
		
		ИнтеграцияРекрутинговыхСайтовКлиент.ОдиночныйВыборИзСписка(ЭтаФорма, ДополнительныеПараметры);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭлементыСМножественнымВыборомИзСписка)
		И ЭлементыСМножественнымВыборомИзСписка.Найти(ТекущиеДанные.Путь) <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокВыбора = СписокВыбораНаСервере(СоответствиеПутиИКлассификатора.Получить(ТекущиеДанные.Путь));
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
		ДополнительныеПараметры.Вставить("СписокВыбора", СписокВыбора);
		
		ИнтеграцияРекрутинговыхСайтовКлиент.МножественныйВыборИзСписка(ЭтаФорма, ДополнительныеПараметры);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭлементыСоСпискомБезКлассификатора)
		И ЭлементыСоСпискомБезКлассификатора.Найти(ТекущиеДанные.Путь) <> Неопределено Тогда
		
		Если Элемент.Родитель.ТекущиеДанные.ПубликацияВакансии = Неопределено Тогда
			Элемент.Родитель.ТекущиеДанные.ПубликацияВакансии = Новый СписокЗначений;
		КонецЕсли;
		
		Элемент.Родитель.ТекущиеДанные.ПубликацияВакансии = Элемент.ОграничениеТипа.ПривестиЗначение(Элемент.Родитель.ТекущиеДанные.ПубликацияВакансии);
		Элемент.Родитель.ТекущиеДанные.ПубликацияВакансии.ТипЗначения = Новый ОписаниеТипов("Строка");
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭлементыСоСпециальнойФормойРедактированияСписка)
		И ЭлементыСоСпециальнойФормойРедактированияСписка.Найти(ТекущиеДанные.Путь) <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
		
		Если(ТекущиеДанные.Путь = "contacts.phones" 
			Или ТекущиеДанные.Путь = "phones") Тогда
			
			СписокТелефонов = Новый СписокЗначений;
			ИменаСвойств = ИнтеграцияРекрутинговыхСайтовКлиентСервер.ИменаСвойствТелефона(Сайт);
			
			Если ЗначениеЗаполнено(ТекущиеДанные.ПубликацияВакансии)
				И ЗначениеЗаполнено(ИменаСвойств) Тогда
				
				Для Каждого Телефон Из ТекущиеДанные.ПубликацияВакансии Цикл
					
					СтруктураТелефона = Новый Структура;
					СтруктураТелефона.Вставить("КодСтраны", Телефон.Значение[ИменаСвойств.КодСтраны]);
					СтруктураТелефона.Вставить("КодГорода", Телефон.Значение[ИменаСвойств.КодГорода]);
					СтруктураТелефона.Вставить("НомерТелефона", Телефон.Значение[ИменаСвойств.НомерТелефона]);
					СтруктураТелефона.Вставить("Комментарий", Телефон.Значение[ИменаСвойств.Комментарий]);
					
					СписокТелефонов.Добавить(СтруктураТелефона);
					
				КонецЦикла;
				
			КонецЕсли;
			
			ДополнительныеПараметры.Вставить("СписокТелефонов", СписокТелефонов);
			
			ИнтеграцияРекрутинговыхСайтовКлиент.РедактированияСпискаТелефонов(ЭтаФорма, ДополнительныеПараметры);
			
		ИначеЕсли (ТекущиеДанные.Путь = "languages" 
			Или ТекущиеДанные.Путь = "language") Тогда
			
			ЗнанияЯзыков = Новый СписокЗначений;
			ИменаСвойств = ИнтеграцияРекрутинговыхСайтовКлиентСервер.ИменаСвойствЗнанияЯзыка(Сайт);
			
			Если ЗначениеЗаполнено(ТекущиеДанные.ПубликацияВакансии)
				И ЗначениеЗаполнено(ИменаСвойств) Тогда
				
				Для Каждого ЗнаниеЯзыка Из ТекущиеДанные.ПубликацияВакансии Цикл
					
					ОбъектЯзык = ЗнаниеЯзыка.Значение[ИменаСвойств.ОбъектЯзык];
					ОбъектУровень = ЗнаниеЯзыка.Значение[ИменаСвойств.ОбъектУровень];
					
					Язык = Новый СписокЗначений;
					Язык.Добавить(ОбъектЯзык[ИменаСвойств.ИдЯзыка], ОбъектЯзык[ИменаСвойств.НазваниеЯзыка]);
					
					Уровень = Новый СписокЗначений;
					Уровень.Добавить(ОбъектУровень[ИменаСвойств.ИдУровня], ОбъектУровень[ИменаСвойств.НазваниеУровня]);
					
					СтруктураЗнанияЯзыка = Новый Структура;
					СтруктураЗнанияЯзыка.Вставить("Язык", Язык);
					СтруктураЗнанияЯзыка.Вставить("Уровень", Уровень);
					
					ЗнанияЯзыков.Добавить(СтруктураЗнанияЯзыка);
					
				КонецЦикла;
				
			КонецЕсли;
			
			ДополнительныеПараметры.Вставить("СписокЯзыков", ЗнанияЯзыков);
			ДополнительныеПараметры.Вставить("Сайт", Сайт);
			
			ИнтеграцияРекрутинговыхСайтовКлиент.РедактированиеУровняВладенияЯзыками(ЭтаФорма, ДополнительныеПараметры);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭлементСМногострочнымВводом(ТекущиеДанные.Путь, ЭлементыСМногострочнымВводом) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
		
		ИнтеграцияРекрутинговыхСайтовКлиент.РедактированиеМногострочногоТекста(ЭтаФорма, ДополнительныеПараметры);
		
	КонецЕсли;
	
	Если ЭлементСТекстомВHTML(ТекущиеДанные.Путь, ЭлементыСТекстомВHTML) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
		
		ИнтеграцияРекрутинговыхСайтовКлиент.РедактированиеТекстаВHTML(ЭтаФорма, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СсылкаНаВакансиюНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Заголовок) Тогда
		ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку(Элемент.Заголовок);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПоказатьВыборЭлементаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбранныхЗначений = Новый СписокЗначений;
	СписокВыбранныхЗначений.Добавить(ВыбранныйЭлемент.Значение, ВыбранныйЭлемент.Представление);
	ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансии = СписокВыбранныхЗначений;
	ПриИзмененииЗначенияПубликацииВакансии();
		
КонецПроцедуры

&НаКлиенте 
Процедура ПоказатьОтметкуЭлементовЗавершение(СписокЭлементов, ДополнительныеПараметры) Экспорт
	
	Если СписокЭлементов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбранныхЗначений = Новый СписокЗначений;
	Для Каждого ЭлементСписка Из СписокЭлементов Цикл
		
		Если ЭлементСписка.Пометка Тогда
			СписокВыбранныхЗначений.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЕсли;	
		
	КонецЦикла;	
	
	ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансии = СписокВыбранныхЗначений;
	ПриИзмененииЗначенияПубликацииВакансии();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзДереваЗначенийЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено 
		Или ВыбранныйЭлемент = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансии = ВыбранныйЭлемент;
	ПриИзмененииЗначенияПубликацииВакансии();
		
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеМногострочногоТекстаЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	Если Строка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансии = СократитьТекст(Строка);
	ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансииТекст = Строка;
	
	ПриИзмененииЗначенияПубликацииВакансии();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(МассивПолейВакансии)
	
	Дерево = РеквизитФормыВЗначение("ДеревоНастроек", Тип("ДеревоЗначений"));
	
	Дерево.Строки.Очистить();
	
	СтрокаВакансия = Дерево.Строки.Добавить();
	СтрокаВакансия.Показатель = Вакансия;
	СтрокаВакансия.ВакансияВПрограмме = Строка(Вакансия);
	СтрокаВакансия.ПубликацияВакансии = Строка(Вакансия);
	
	ДанныеПубликации = ДанныеПубликации(Вакансия, Сайт);
	
	Для Каждого Поле Из МассивПолейВакансии Цикл
		ВывестиСтрокуДерева(СтрокаВакансия.Строки, Поле, ДанныеПубликации);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоНастроек");
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокуДерева(Строки, Поле, ДанныеПубликации, ПутьРодителя = "")
	
	Если Не Поле.Использование Тогда
		Возврат;
	КонецЕсли;
	
	ПодчиненнаяСтрока = Строки.Добавить();
	ПодчиненнаяСтрока.Показатель = Поле.Описание;
	ПодчиненнаяСтрока.ТипРеквизита = Поле.ТипJSON;
	ПодчиненнаяСтрока.Путь = ?(ЗначениеЗаполнено(ПутьРодителя), "" + ПутьРодителя + ".", "") + Поле.Путь;
	ПодчиненнаяСтрока.ОбязательноеПоле = Поле.Обязательное;
	ПодчиненнаяСтрока.СвязанноеПолеПуть = Поле.СвязанноеПолеПуть;
	
	Если Поле.ТипJSON = ИнтеграцияРекрутинговыхСайтов.ТипЗначенияJSONНачалоОбъекта() 
		Или Поле.ТипJSON = ИнтеграцияРекрутинговыхСайтов.ТипЗначенияJSONНачалоМассива() 
		И ЗначениеЗаполнено(Поле.ПодчиненныеЭлементы) Тогда
		
		Если ЗначениеЗаполнено(Поле.ПодчиненныеЭлементы) Тогда
			
			Если Поле.ПодчиненныеЭлементы.Количество() = 1 Тогда
				ПодчиненнаяСтрока.Путь = ПодчиненнаяСтрока.Путь + "." + Поле.ПодчиненныеЭлементы[0].Путь;
			ИначеЕсли Поле.ПодчиненныеЭлементы.Количество() > 1 Тогда
				Для Каждого ПодчиненноеПоле Из Поле.ПодчиненныеЭлементы Цикл
					ВывестиСтрокуДерева(ПодчиненнаяСтрока.Строки, ПодчиненноеПоле, ДанныеПубликации, ПодчиненнаяСтрока.Путь);
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗначениеРеквизитаВакансии = РеквизитВакансииСоответствующийПолюПубликации(ПодчиненнаяСтрока.Путь);
	ПодчиненнаяСтрока.ВакансияВПрограмме = ЗначениеРеквизитаВакансии;
	
	Если ПервичнаяПубликация Тогда
		
		ПодчиненнаяСтрока.ПубликацияВакансии = ЗначениеРеквизитаВакансии;
		Если ТипЗнч(ЗначениеРеквизитаВакансии) = Тип("Строка") Тогда
			
			Если ЭлементСодержитТекст(Поле.Путь, ЭлементыСМногострочнымВводом, ЭлементыСТекстомВHTML) Тогда
				ПодчиненнаяСтрока.ПубликацияВакансии = СократитьТекст(ПодчиненнаяСтрока.ПубликацияВакансии);
			КонецЕсли;
			
			Если ЭлементСТекстомВHTML(Поле.Путь, ЭлементыСТекстомВHTML)Тогда
				ПодчиненнаяСтрока.ПубликацияВакансииТекст = ТекстВHTML(ЗначениеРеквизитаВакансии);
			Иначе
				ПодчиненнаяСтрока.ПубликацияВакансииТекст = ЗначениеРеквизитаВакансии;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если ДанныеПубликации.Количество() > 0 Тогда
			
			СтрокаДанных = ДанныеПубликации.Найти(ПодчиненнаяСтрока.Путь, "ПолеДанных");
			Если СтрокаДанных <> Неопределено Тогда
				
				ЗначениеИзРегистра = ИнтеграцияРекрутинговыхСайтов.ПарсерJSON(СтрокаДанных.Значение);
				
				Если ТипЗнч(ЗначениеИзРегистра) = Тип("Массив") Тогда
					ПодчиненнаяСтрока.ПубликацияВакансии = ИнтеграцияРекрутинговыхСайтов.СписокЗначенийПоМассивуСтруктур(ЗначениеИзРегистра);
				Иначе
					
					Если ПодчиненнаяСтрока.ТипРеквизита = "Число" Тогда
						ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
						ПодчиненнаяСтрока.ПубликацияВакансии = ОписаниеТипаЧисло.ПривестиЗначение(ЗначениеИзРегистра);
					ИначеЕсли ПодчиненнаяСтрока.ТипРеквизита = "Булево" Тогда
						ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
						ПодчиненнаяСтрока.ПубликацияВакансии = ОписаниеТипаБулево.ПривестиЗначение(ЗначениеИзРегистра);
					Иначе
						
						ПодчиненнаяСтрока.ПубликацияВакансииТекст = ЗначениеИзРегистра;
						
						Если ЭлементСодержитТекст(Поле.Путь, ЭлементыСМногострочнымВводом, ЭлементыСТекстомВHTML) Тогда
							
							Если ЭлементСТекстомВHTML(Поле.Путь, ЭлементыСТекстомВHTML) Тогда
								ЗначениеИзРегистра = ИзвлечьТекстИзHTML(ЗначениеИзРегистра);
							КонецЕсли;
							
							ЗначениеИзРегистра = СократитьТекст(ЗначениеИзРегистра);
							
						КонецЕсли;
						
						ПодчиненнаяСтрока.ПубликацияВакансии = ЗначениеИзРегистра;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РеквизитВакансииСоответствующийПолюПубликации(Путь)
	
	Возврат ИнтеграцияРекрутинговыхСайтов.РеквизитВакансииСоответствующийПолюПубликации(Путь, Вакансия);
	
КонецФункции

&НаСервере
Функция ОпубликоватьВакансию()
	
	Дерево = РеквизитФормыВЗначение("ДеревоНастроек", Тип("ДеревоЗначений"));
	
	Если ПроверитьЗаполнениеПолей(Дерево) Тогда
		Возврат ИнтеграцияРекрутинговыхСайтов.ОпубликоватьВакансию(Вакансия, Сайт, Дерево);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ДанныеПубликации(Вакансия, Сайт)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеПубликацииВакансий.ПолеДанных,
	|	ДанныеПубликацииВакансий.Значение
	|ИЗ
	|	РегистрСведений.ДанныеПубликацииВакансий КАК ДанныеПубликацииВакансий
	|ГДЕ
	|	ДанныеПубликацииВакансий.Вакансия = &Вакансия
	|	И ДанныеПубликацииВакансий.МестоПубликации = &МестоПубликации";
	
	Запрос.УстановитьПараметр("Вакансия", Вакансия);
	Запрос.УстановитьПараметр("МестоПубликации", Сайт);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Процедура ОбновитьДерево()
	
	Если Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.HeadHunter() 
		Или Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.RabotaMail() Тогда 
		
		МассивПолейВакансии = ИнтеграцияРекрутинговыхСайтов.ПоляВакансииHeadHunter(ПервичнаяПубликация);
		ЗаполнитьДерево(МассивПолейВакансии);
		
	ИначеЕсли Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.Rabota() Тогда
		
		МассивПолейВакансии = ИнтеграцияРекрутинговыхСайтов.ПоляВакансииRabota(ПервичнаяПубликация);
		ЗаполнитьДерево(МассивПолейВакансии);
		
	ИначеЕсли Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.SuperJob() Тогда
		
		МассивПолейВакансии = ИнтеграцияРекрутинговыхСайтов.ПоляВакансииSuperJob();
		ЗаполнитьДерево(МассивПолейВакансии);
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СписокВыбораНаСервере(Путь)
	Возврат ИнтеграцияРекрутинговыхСайтов.СписокВыбораПоКлассификатору(Сайт, Путь);
КонецФункции

&НаКлиенте
Процедура ОткрытьСпециальнуюФормуРедактированияСпискаТелефоновЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИменаСвойств = ИнтеграцияРекрутинговыхСайтовКлиентСервер.ИменаСвойствТелефона(Сайт);
	
	Если Результат <> Неопределено 
		И ТипЗнч(Результат) = Тип("СписокЗначений") Тогда
		
		СписокТелефонов = Новый СписокЗначений;
		Для Каждого НомерТелефона Из Результат Цикл
			
			СтруктураТелефона = Новый Структура;
			СтруктураТелефона.Вставить(ИменаСвойств.КодСтраны, НомерТелефона.Значение.КодСтраны);
			СтруктураТелефона.Вставить(ИменаСвойств.КодГорода, НомерТелефона.Значение.КодГорода);
			СтруктураТелефона.Вставить(ИменаСвойств.НомерТелефона, НомерТелефона.Значение.НомерТелефона);
			СтруктураТелефона.Вставить(ИменаСвойств.Комментарий, НомерТелефона.Значение.Комментарий);
			
			СписокТелефонов.Добавить(СтруктураТелефона, "" + НомерТелефона.Значение.КодСтраны + " (" +  НомерТелефона.Значение.КодГорода + ") " + НомерТелефона.Значение.НомерТелефона + ?(ЗначениеЗаполнено(НомерТелефона.Значение.Комментарий), " (" + НомерТелефона.Значение.Комментарий + ")", ""));
			
		КонецЦикла;
		
		ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансии = СписокТелефонов;
		ПриИзмененииЗначенияПубликацииВакансии();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСпециальнуюФормуРедактированияУровняВладенияЯзыкамиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИменаСвойств = ИнтеграцияРекрутинговыхСайтовКлиентСервер.ИменаСвойствЗнанияЯзыка(Сайт);
	
	Если Результат <> Неопределено 
		И ТипЗнч(Результат) = Тип("СписокЗначений") Тогда
		
		ЗнанияЯзыков = Новый СписокЗначений;
		Для Каждого ЗнаниеЯзыка Из Результат Цикл
			
			Язык = ЗнаниеЯзыка.Значение.Язык;
			Уровень = ЗнаниеЯзыка.Значение.Уровень;
			
			СтруктураЯзыка = Новый Структура;
			СтруктураЯзыка.Вставить(ИменаСвойств.ИдЯзыка, Язык[0].Значение);
			СтруктураЯзыка.Вставить(ИменаСвойств.НазваниеЯзыка, Язык[0].Представление);
			
			СтруктураУровня = Новый Структура;
			СтруктураУровня.Вставить(ИменаСвойств.ИдУровня, Уровень[0].Значение);
			СтруктураУровня.Вставить(ИменаСвойств.НазваниеУровня, Уровень[0].Представление);
			
			СтруктураЗнанияЯзыка = Новый Структура;
			СтруктураЗнанияЯзыка.Вставить(ИменаСвойств.ОбъектЯзык, СтруктураЯзыка);
			СтруктураЗнанияЯзыка.Вставить(ИменаСвойств.ОбъектУровень, СтруктураУровня);
			
			ЗнанияЯзыков.Добавить(СтруктураЗнанияЯзыка, СтрШаблон("%1 (%2)", Язык[0].Представление, Уровень[0].Представление));
			
		КонецЦикла;
		
		ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансии = ЗнанияЯзыков;
		ПриИзмененииЗначенияПубликацииВакансии();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеТекстаВHTMLЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) 
		И ТипЗнч(Результат) = Тип("Строка") Тогда
		
		ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансии = СократитьТекст(ИзвлечьТекстИзHTML(Результат));
		ДополнительныеПараметры.ТекущиеДанные.ПубликацияВакансииТекст = Результат;
		
		ПриИзмененииЗначенияПубликацииВакансии();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьВакансиюНаСайте()
	
	Дерево = РеквизитФормыВЗначение("ДеревоНастроек", Тип("ДеревоЗначений"));
	
	Если ПроверитьЗаполнениеПолей(Дерево) Тогда
		Возврат ИнтеграцияРекрутинговыхСайтов.ОбновитьВакансиюНаСайте(Вакансия, Сайт, Дерево);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверитьЗаполнениеПолей(Дерево)
	
	Отказ = Ложь;
	ОбязательныеПоляЗаполнены = Истина;
	СвязанныеПоля = Новый Соответствие;
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		
		Если ТипЗнч(СтрокаДерева.Показатель) <> Тип("СправочникСсылка.Вакансии") Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаДереваПодчиненная Из СтрокаДерева.Строки Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаДереваПодчиненная.ПубликацияВакансии) 
				И СтрокаДереваПодчиненная.ОбязательноеПоле Тогда
				ОбязательныеПоляЗаполнены = Ложь;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаДереваПодчиненная.СвязанноеПолеПуть) 
				И Не ЗначениеЗаполнено(СтрокаДереваПодчиненная.ПубликацияВакансии) Тогда
				
				СвязаннаяСтрока = СтрокаДерева.Строки.Найти(СтрокаДереваПодчиненная.СвязанноеПолеПуть, "Путь");
				Если СвязаннаяСтрока <> Неопределено 
					И Не ЗначениеЗаполнено(СвязаннаяСтрока.ПубликацияВакансии) Тогда
					
					Если СвязанныеПоля.Получить(СтрокаДереваПодчиненная.Показатель) = Неопределено Тогда 
						
						СвязанныеПоля.Вставить(СвязаннаяСтрока.Показатель, СтрокаДереваПодчиненная.Показатель);
						
						ТекстСообщения = СтрШаблон(НСтр("ru = 'Заполните поле ""%1"" или поле ""%2"".'"), СтрокаДереваПодчиненная.Показатель, СвязаннаяСтрока.Показатель);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если Не ОбязательныеПоляЗаполнены Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Заполните все обязательные поля.'"), , , , Отказ);
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Процедура ОбновитьСсылкуНаВакансию()
	
	Если ПервичнаяПубликация Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПубликацияВакансий.Вакансия,
	|	ПубликацияВакансий.МестоПубликации,
	|	ПубликацияВакансий.АдресПубликации
	|ИЗ
	|	РегистрСведений.ПубликацияВакансий КАК ПубликацияВакансий
	|ГДЕ
	|	ПубликацияВакансий.Вакансия = &Вакансия
	|	И ПубликацияВакансий.МестоПубликации = &МестоПубликации";
	
	Запрос.УстановитьПараметр("Вакансия", Вакансия);
	Запрос.УстановитьПараметр("МестоПубликации", Сайт);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Элементы.СсылкаНаВакансию.Заголовок = Выборка.АдресПубликации;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЗначенияПубликацииВакансии()
	
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.СтрокаИзменена = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредупреждениеОбУспешнойПубликацииЗавершение(ДополнительныеПараметры) Экспорт
	Оповестить("ПубликацияВакансии");
	Закрыть();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭлементСодержитТекст(ИмяЭлемента, ЭлементыСМногострочнымВводом, ЭлементыСТекстомВHTML)
	
	Возврат ЭлементСМногострочнымВводом(ИмяЭлемента, ЭлементыСМногострочнымВводом) 
		Или ЭлементСТекстомВHTML(ИмяЭлемента, ЭлементыСТекстомВHTML);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭлементСТекстомВHTML(ИмяЭлемента, ЭлементыСТекстомВHTML)
	
	Возврат ЗначениеЗаполнено(ЭлементыСТекстомВHTML) И ЭлементыСТекстомВHTML.Найти(ИмяЭлемента) <> Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭлементСМногострочнымВводом(ИмяЭлемента, ЭлементыСМногострочнымВводом)
	
	Возврат ЗначениеЗаполнено(ЭлементыСМногострочнымВводом) И ЭлементыСМногострочнымВводом.Найти(ИмяЭлемента) <> Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СократитьТекст(Знач ИсходныйТекст)
	
	Текст = СокрЛП(ИсходныйТекст);
	ДлинаТекста = СтрДлина(Текст);
	
	Если ДлинаТекста < 999 Тогда
		Возврат Текст;
	ИначеЕсли ДлинаТекста > 999 Тогда
		ДлинаТекста = 999;
		Текст = Лев(Текст, ДлинаТекста);
	КонецЕсли;
	
	ПозицияПробела = СтрНайти(Текст, " ", НаправлениеПоиска.СКонца);
	Если ДлинаТекста - ПозицияПробела < 3 Тогда
		ПозицияПробела = СтрНайти(Текст, " ", НаправлениеПоиска.СКонца, ПозицияПробела - 1);
	КонецЕсли;
	
	Текст = СтрШаблон("%1...", Сред(Текст, 1, ПозицияПробела));
	
	Возврат Текст;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИзвлечьТекстИзHTML(Знач ИсходныйТекст)
	
	Возврат ИнтеграцияРекрутинговыхСайтовКлиентСервер.ИзвлечьТекстИзHTML(ИсходныйТекст);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстВHTML(Знач ИсходныйТекст)
	
	Возврат СтрЗаменить(ИсходныйТекст, Символы.ПС, "<br>");
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Элемент.Отбор, "ДеревоНастроек.ОбязательноеПоле", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Элемент.Отбор, "ДеревоНастроек.ПубликацияВакансии", , ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоНастроекПубликацияВакансии.Имя);
	
КонецПроцедуры

#КонецОбласти
