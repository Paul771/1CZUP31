
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	НомерКолонки = Параметры.НомерКолонки;
	ПоказателиГрейда = Параметры.ПоказателиГрейда;
	ИспользованиеРазрешено = Параметры.ИспользованиеРазрешено;
	
	Заголовок = Строка(Параметры.НачислениеПоказатель);
	
	ВидРасчетаИнфо = ЗарплатаКадрыРасширенныйПовтИсп.ПолучитьИнформациюОВидеРасчета(Параметры.НачислениеПоказатель);
	
	МассивПоказателей = Новый Массив;
	Для Каждого ОписаниеПоказателя Из ВидРасчетаИнфо.Показатели Цикл 
		Если ОписаниеПоказателя.ЗапрашиватьПриВводе Тогда 
			МассивПоказателей.Добавить(ОписаниеПоказателя.Показатель);
		КонецЕсли;
	КонецЦикла;
	
	КоличествоПоказателей = ?(ВидРасчетаИнфо.Рассчитывается, МассивПоказателей.Количество(), 1);;
	
	Если Не ВидРасчетаИнфо.Рассчитывается Тогда 
		ДанныеПоказателя = Новый Структура("ЗначениеМин, ЗначениеМакс", Параметры.РазмерМин, Параметры.РазмерМакс);
		ПоказателиГрейда = Новый Соответствие;
		ПоказателиГрейда.Вставить(Справочники.ПоказателиРасчетаЗарплаты.ПустаяСсылка(), ДанныеПоказателя);
	КонецЕсли;
	
	ДополнитьФорму(ВидРасчетаИнфо, МассивПоказателей);
	
	ЗаполнитьТекущиеДанные(ВидРасчетаИнфо, МассивПоказателей, ПоказателиГрейда);
	
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользованиеРазрешеноПриИзменении(Элемент)

	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ДанныеНачисления = Новый Структура("НомерКолонки, ИспользованиеРазрешено, РазмерМин, РазмерМакс, ПоказателиГрейда");
	ЗаполнитьЗначенияСвойств(ДанныеНачисления, ЭтотОбъект);
	
	ПоказателиГрейда = Новый Соответствие;
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		Показатель = ЭтотОбъект["Показатель" + Сч];
		ЗначениеМин = ЭтотОбъект["Показатель" + Сч + "ЗначениеМин"];
		ЗначениеМакс = ЭтотОбъект["Показатель" + Сч + "ЗначениеМакс"];
		
		Если Не ЗначениеЗаполнено(Показатель) Тогда 
			ДанныеНачисления.РазмерМин = ЗначениеМин;
			ДанныеНачисления.РазмерМакс = ЗначениеМакс;
		Иначе 
			ПоказателиГрейда.Вставить(Показатель, Новый Структура("ЗначениеМин, ЗначениеМакс", ЗначениеМин, ЗначениеМакс));
		КонецЕсли;
		
	КонецЦикла;
	
	ДанныеНачисления.ПоказателиГрейда = ПоказателиГрейда;
	
	ОповеститьОВыборе(ДанныеНачисления);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДополнитьФорму(ВидРасчетаИнфо, МассивПоказателей)

	НаименованияПоказателей = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивПоказателей, "Наименование");
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(ЭтотОбъект, МассивИменРеквизитовФормы);
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		ПоказательРеквизит = Новый РеквизитФормы(
			"Показатель" + Сч, Новый ОписаниеТипов("СправочникСсылка.ПоказателиРасчетаЗарплаты"));
		ДобавляемыеРеквизиты.Добавить(ПоказательРеквизит);
		
		НаименованиеПоказателя = ?(ВидРасчетаИнфо.Рассчитывается, 
			НаименованияПоказателей[МассивПоказателей[Сч-1]], НСтр("ru = 'Фиксированная сумма'"));
			
		ЗначениеМинРеквизит = Новый РеквизитФормы("Показатель" + Сч + "ЗначениеМин",
			Справочники.ПоказателиРасчетаЗарплаты.ОписаниеТиповЗначенияПоказателяРасчетаЗарплаты(), , НаименованиеПоказателя + ", " + НСтр("ru = 'мин.'"));
		ДобавляемыеРеквизиты.Добавить(ЗначениеМинРеквизит);
		
		ЗначениеМаксРеквизит = Новый РеквизитФормы("Показатель" + Сч + "ЗначениеМакс", 
			Справочники.ПоказателиРасчетаЗарплаты.ОписаниеТиповЗначенияПоказателяРасчетаЗарплаты(), , НаименованиеПоказателя + ", " + НСтр("ru = 'макс.'"));
		ДобавляемыеРеквизиты.Добавить(ЗначениеМаксРеквизит);
		
	КонецЦикла;
	
	ЗарплатаКадры.ИзменитьРеквизитыФормы(ЭтотОбъект, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		Если Элементы.Найти("Показатель" + Сч + "ЗначениеМин") = Неопределено Тогда 
			Значение = Элементы.Добавить("Показатель" + Сч + "ЗначениеМин", Тип("ПолеФормы"), Элементы.ГруппаПоказатели);
			Значение.Вид = ВидПоляФормы.ПолеВвода;
			Значение.ПутьКДанным = "Показатель" + Сч + "ЗначениеМин";
			Значение.РастягиватьПоГоризонтали = Ложь;
		КонецЕсли;
		
		Если Элементы.Найти("Показатель" + Сч + "ЗначениеМакс") = Неопределено Тогда 
			Значение = Элементы.Добавить("Показатель" + Сч + "ЗначениеМакс", Тип("ПолеФормы"), Элементы.ГруппаПоказатели);
			Значение.Вид = ВидПоляФормы.ПолеВвода;
			Значение.ПутьКДанным = "Показатель" + Сч + "ЗначениеМакс";
			Значение.РастягиватьПоГоризонтали = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущиеДанные(ВидРасчетаИнфо, МассивПоказателей, ПоказателиГрейда)
	
	Для Сч = 1 По КоличествоПоказателей Цикл
		
		Показатель = ?(ВидРасчетаИнфо.Рассчитывается, МассивПоказателей[Сч-1], Справочники.ПоказателиРасчетаЗарплаты.ПустаяСсылка());
		ЭтотОбъект["Показатель" + Сч] = Показатель;
		
		Если ИспользованиеРазрешено И ПоказателиГрейда <> Неопределено Тогда
			ДанныеПоказателя = ПоказателиГрейда[Показатель];
			Если ДанныеПоказателя <> Неопределено Тогда 
				ЭтотОбъект["Показатель" + Сч + "ЗначениеМин"] = ДанныеПоказателя.ЗначениеМин;
				ЭтотОбъект["Показатель" + Сч + "ЗначениеМакс"] = ДанныеПоказателя.ЗначениеМакс;
			КонецЕсли;
		КонецЕсли;
		
		ТочностьПоказателя = 2;
		Если ЗначениеЗаполнено(Показатель) Тогда 
			СведенияОПоказателе = ЗарплатаКадрыРасширенный.СведенияОПоказателеРасчетаЗарплаты(Показатель);
		    ТочностьПоказателя = СведенияОПоказателе.Точность;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "Показатель" + Сч + "ЗначениеМин", "ФорматРедактирования", "ЧДЦ=" + ТочностьПоказателя);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "Показатель" + Сч + "ЗначениеМакс", "ФорматРедактирования", "ЧДЦ=" + ТочностьПоказателя);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ГруппаПоказатели", "Доступность", Форма.ИспользованиеРазрешено);
	
КонецПроцедуры

#КонецОбласти
