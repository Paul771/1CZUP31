
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПолучитьФункциональнуюОпцию("ВыполнятьРасчетЗарплатыПоПодразделениям") Тогда
		ВРазрезеПодразделений = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СозданиеВедомостейНаВыплатуЗарплаты", "ВРазрезеПодразделений", Истина);
	Иначе
		ВРазрезеПодразделений = Ложь;
	КонецЕсли;	
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
		ВРазрезеИсточников = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СозданиеВедомостейНаВыплатуЗарплаты", "ВРазрезеИсточников", Истина);
	Иначе
		ВРазрезеИсточников = Ложь;
	КонецЕсли;	
	
	Если ПолучитьФункциональнуюОпцию("ПроверятьЗаполнениеФинансированияВВедомостях") Тогда
		ВРазрезеИсточников = Истина;
		Элементы.ВРазрезеИсточников.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("РасчетныйДокумент", РасчетныйДокумент) Тогда
		
		Элементы.РасчетныйДокумент.ТолькоПросмотр = Истина;
		
		РасчетныйДокументПриИзмененииНаСервере()
		
	Иначе
		
		Элементы.РасчетныйДокумент.ТолькоПросмотр = Ложь;
		
		ТипыРасчетныхДокументов = Новый Массив;
		НачисленияУдержанияПоСотрудникамМетаданные = Метаданные.РегистрыНакопления.НачисленияУдержанияПоСотрудникам;
		ЗарплатаКВыплатеМетаданные = Метаданные.РегистрыНакопления.ЗарплатаКВыплате;
		Для Каждого ДокументМетаданные Из Метаданные.Документы Цикл
			Если ДокументМетаданные.Движения.Содержит(НачисленияУдержанияПоСотрудникамМетаданные) 
				И ДокументМетаданные.Движения.Содержит(ЗарплатаКВыплатеМетаданные) Тогда
				ТипыРасчетныхДокументов.Добавить(Тип("ДокументСсылка."+ДокументМетаданные.Имя))
			КонецЕсли	
		КонецЦикла;	
		Элементы.РасчетныйДокумент.ОграничениеТипа = Новый ОписаниеТипов(ТипыРасчетныхДокументов);
		
		ДатаВыплаты = ТекущаяДатаСеанса();
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РасчетныйДокументПриИзменении(Элемент)
	РасчетныйДокументПриИзмененииНаСервере()	
КонецПроцедуры

&НаКлиенте
Процедура СпособВыплатыПриИзменении(Элемент)
	СоздатьВедомости()
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	СоздатьВедомости();
КонецПроцедуры

&НаКлиенте
Процедура ВРазрезеПодразделенийПриИзменении(Элемент)
	СоздатьВедомости()
КонецПроцедуры

&НаКлиенте
Процедура ВРазрезеИсточниковПриИзменении(Элемент)
	СоздатьВедомости()
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ТаблицаВедомостейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВедомостейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьТекущуюВедомость();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьВедомостиВыполнить(Команда)
	СоздатьВедомости(Истина)
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВедомостьВыполнить(Команда)
	ОткрытьТекущуюВедомость();
КонецПроцедуры

&НаКлиенте
Процедура ПровестиВедомостиВыполнить(Команда)
	СохранитьВедомостиНаСервере(РежимЗаписиДокумента.Проведение);	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОтменаВыполнить(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РасчетныйДокументПриИзмененииНаСервере()
	
	ВидДокумента = Перечисления.ВидыДокументовМежрасчетныхНачислений.ПоДокументу(РасчетныйДокумент);
	
	ПараметрВыбораСпособаВыплаты = Новый ПараметрВыбора("Отбор.ВидДокументаОснования", ВидДокумента);
	ПараметрыВыбораСпособаВыплаты = Новый Массив();
	ПараметрыВыбораСпособаВыплаты.Добавить(ПараметрВыбораСпособаВыплаты);
	Элементы.СпособВыплаты.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораСпособаВыплаты);
	
	СпособВыплаты = ВзаиморасчетыССотрудниками.СпособВыплатыПоРасчетномуДокументу(РасчетныйДокумент);
	Если РасчетныйДокумент.Метаданные().Реквизиты.Найти("ПланируемаяДатаВыплаты") <> Неопределено Тогда
		ДатаВыплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "ПланируемаяДатаВыплаты");
	Иначе	
		ДатаВыплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "Дата");
	КонецЕсли;
	
	СоздатьВедомостиНаСервере(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВедомости(СообщитьПользователю = Ложь)
	ОчиститьСообщения();
	СоздатьВедомостиНаСервере(СообщитьПользователю);
КонецПроцедуры

&НаСервере
Процедура СоздатьВедомостиНаСервере(СообщитьПользователю)
	
	ПравилаПроверки = Новый СписокЗначений;
	ПравилаПроверки.Добавить("РасчетныйДокумент",	НСтр("ru='Не выбран документ'"));
	ПравилаПроверки.Добавить("СпособВыплаты",		НСтр("ru='Не указан способ выплаты'"));
	ПравилаПроверки.Добавить("ДатаВыплаты",			НСтр("ru='Не задана дата выплаты'"));

	МожноСоздатьВедомости = ЗарплатаКадрыКлиентСервер.СвойстваФормыЗаполнены(ЭтаФорма, ПравилаПроверки, СообщитьПользователю);

	Если МожноСоздатьВедомости Тогда
		
		ПараметрыСозданияВедомостей = Обработки.СозданиеВедомостейНаВыплатуЗарплаты.ПараметрыСозданияВедомостейПоРасчетномуДокументу();
		ПараметрыСозданияВедомостей.УникальныйИдентификаторФормы = УникальныйИдентификатор;
		ПараметрыСозданияВедомостей.СпособВыплаты			= СпособВыплаты;
		ПараметрыСозданияВедомостей.ДатаВыплаты				= ДатаВыплаты;
		ПараметрыСозданияВедомостей.ВРазрезеПодразделений	= ВРазрезеПодразделений;
		ПараметрыСозданияВедомостей.ВРазрезеИсточников		= ВРазрезеИсточников;
		
		СписокВедомостей = Обработки.СозданиеВедомостейНаВыплатуЗарплаты.СоздатьВедомостиПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСозданияВедомостей);
		
		Ведомости.Загрузить(СписокВедомостей);
		
	Иначе
		Ведомости.Очистить();
	КонецЕсли	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьТекущуюВедомость()
	
	ТекущиеДанные = Элементы.ТаблицаВедомостей.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы = Новый Структура("АдресВоВременномХранилище", ТекущиеДанные.Адрес);
		ОткрытьФорму("Обработка.СозданиеВедомостейНаВыплатуЗарплаты.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма);
	КонецЕсли	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВедомостиНаСервере(РежимЗаписи)	
	
	Обработки.СозданиеВедомостейНаВыплатуЗарплаты.СохранитьВедомостиНаСервере(Ведомости, РежимЗаписи);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СозданиеВедомостейНаВыплатуЗарплаты", "ВРазрезеПодразделений",ВРазрезеПодразделений);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СозданиеВедомостейНаВыплатуЗарплаты", "ВРазрезеИсточников",	ВРазрезеИсточников);
	
КонецПроцедуры	

#КонецОбласти
