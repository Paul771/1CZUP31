#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проверка_возможности_создания_ведомостей 

Функция МожноСоздатьВедомостиПоРасчетномуДокументу(РасчетныйДокумент) Экспорт
	
	// Создавать ведомости можно только по потенциально межрасчетным документам.
	ВидМежрасчетногоДокумента = Перечисления.ВидыДокументовМежрасчетныхНачислений.ПоДокументу(РасчетныйДокумент);
	Если ВидМежрасчетногоДокумента = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Документ нельзя выплачивать в межрасчет'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;	
	
	Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "Проведен") Тогда
		ТекстСообщения = НСтр("ru = 'Выплата возможна только по проведенному документу'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетныйДокумент", РасчетныйДокумент);
	
	// Должна быть указана выплата в межрасчет
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
 	|	1 КАК Один
 	|ИЗ
 	|	РегистрСведений.ПорядокВыплатыДокументов КАК ПорядокВыплатыДокументов
 	|ГДЕ
 	|	ПорядокВыплатыДокументов.ДокументОснование = &РасчетныйДокумент
 	|	И ПорядокВыплатыДокументов.ПорядокВыплаты = ЗНАЧЕНИЕ(Перечисление.ХарактерВыплатыЗарплаты.Межрасчет)";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой()Тогда
		ТекстСообщения = НСтр("ru = 'Документ не предназначен для выплаты в межрасчетный период'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;

	// Должны остаться суммы к выплате по документу.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеОстатки.СуммаКВыплатеОстаток
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате.Остатки(, ДокументОснование = &РасчетныйДокумент) КАК ЗарплатаКВыплатеОстатки
	|ГДЕ
	|	ЗарплатаКВыплатеОстатки.СуммаКВыплатеОстаток > 0";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой()Тогда
		ТекстСообщения = НСтр("ru = 'По документу не осталось сумм к выплате'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина
	
КонецФункции

#КонецОбласти

#Область Создание_ведомостей 

Функция ПараметрыСозданияВедомостейПоРасчетномуДокументу() Экспорт
	
	ПараметрыСозданияВедомостейПоРасчетномуДокументу = Новый Структура;
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("УникальныйИдентификаторФормы");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("СпособВыплаты");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ДатаВыплаты");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("Округление");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ВРазрезеПодразделений");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ВРазрезеИсточников");
	
	Возврат ПараметрыСозданияВедомостейПоРасчетномуДокументу;
	
КонецФункции

Функция СоздатьВедомостиПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания) Экспорт
	
	СписокВедомостей = НовыйСписокВедомостей();
	
	ВыборкаКлючейВедомостей = КлючиВедомостейПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания);
	
	Пока ВыборкаКлючейВедомостей.Следующий() Цикл
		
		Ведомость = НоваяВедомостьПоРасчетномуДокументу(РасчетныйДокумент, ВыборкаКлючейВедомостей, ПараметрыСоздания);
		
		Ведомость.ЗаполнитьЗарплату();
		
		Строка = СписокВедомостей.Добавить();
		Строка.Адрес = ПоместитьВоВременноеХранилище(ОбщегоНазначения.ЗначениеВСтрокуXML(Ведомость), ПараметрыСоздания.УникальныйИдентификаторФормы);
		Строка.Представление = ПредставлениеВедомости(Ведомость);
		
	КонецЦикла;
	
	Возврат СписокВедомостей	
	
КонецФункции

Функция НовыйСписокВедомостей()
	
	ТаблицаВедомостей = Новый ТаблицаЗначений;
	ТаблицаВедомостей.Колонки.Добавить("Адрес");
	ТаблицаВедомостей.Колонки.Добавить("Представление");
	
	Возврат ТаблицаВедомостей
	
КонецФункции

Функция КлючиВедомостейПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц; 
	
	Запрос.УстановитьПараметр("РасчетныйДокумент",		РасчетныйДокумент);
	Запрос.УстановитьПараметр("ДатаВыплаты",			ПараметрыСоздания.ДатаВыплаты);
	Запрос.УстановитьПараметр("ВРазрезеПодразделений",	ПараметрыСоздания.ВРазрезеПодразделений);
	Запрос.УстановитьПараметр("ВРазрезеИсточников",		ПараметрыСоздания.ВРазрезеИсточников);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗарплатаКВыплате.Сотрудник,
	|	&ДатаВыплаты КАК Период
	|ПОМЕСТИТЬ ВТСотрудникиИПериод
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
	|ГДЕ
	|	ЗарплатаКВыплате.Регистратор = &РасчетныйДокумент";
	
	Запрос.Выполнить();
	
	// Получаем кадровые данные сотрудников.
	ОписательВТ = 
		КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
			Запрос.МенеджерВременныхТаблиц,
			"ВТСотрудникиИПериод");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(
		ОписательВТ, Истина, "Подразделение, ВидМестаВыплаты, МестоВыплаты");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗарплатаКВыплате.Организация КАК Организация,
	|	ЗарплатаКВыплате.ПериодВзаиморасчетов КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА &ВРазрезеПодразделений
	|			ТОГДА КадровыеДанныеСотрудников.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА ЗарплатаКВыплате.СтатьяФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА ЗарплатаКВыплате.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.ВидМестаВыплаты, ЗНАЧЕНИЕ(Перечисление.ВидыМестВыплатыЗарплаты.Касса)) КАК ВидМестаВыплаты,
	|	ВЫБОР
	|		КОГДА КадровыеДанныеСотрудников.ВидМестаВыплаты ЕСТЬ НЕ NULL 
	|				И КадровыеДанныеСотрудников.МестоВыплаты ЕСТЬ НЕ NULL 
	|				И КадровыеДанныеСотрудников.МестоВыплаты <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеСотрудников.ВидМестаВыплаты = ЗНАЧЕНИЕ(Перечисление.ВидыМестВыплатыЗарплаты.БанковскийСчет)
	|						ТОГДА КадровыеДанныеСотрудников.МестоВыплаты.Банк
	|					ИНАЧЕ КадровыеДанныеСотрудников.МестоВыплаты
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|	КОНЕЦ КАК МестоВыплаты,
	|	СУММА(ЗарплатаКВыплате.СуммаКВыплате) КАК КВыплате
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО ЗарплатаКВыплате.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|ГДЕ
	|	ЗарплатаКВыплате.Регистратор = &РасчетныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплате.Организация,
	|	ЗарплатаКВыплате.ПериодВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &ВРазрезеПодразделений
	|			ТОГДА КадровыеДанныеСотрудников.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА ЗарплатаКВыплате.СтатьяФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА ЗарплатаКВыплате.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.ВидМестаВыплаты, ЗНАЧЕНИЕ(Перечисление.ВидыМестВыплатыЗарплаты.Касса)),
	|	ВЫБОР
	|		КОГДА КадровыеДанныеСотрудников.ВидМестаВыплаты ЕСТЬ НЕ NULL 
	|				И КадровыеДанныеСотрудников.МестоВыплаты ЕСТЬ НЕ NULL 
	|				И КадровыеДанныеСотрудников.МестоВыплаты <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ВЫБОР
	|					КОГДА КадровыеДанныеСотрудников.ВидМестаВыплаты = ЗНАЧЕНИЕ(Перечисление.ВидыМестВыплатыЗарплаты.БанковскийСчет)
	|						ТОГДА КадровыеДанныеСотрудников.МестоВыплаты.Банк
	|					ИНАЧЕ КадровыеДанныеСотрудников.МестоВыплаты
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодРегистрации,
	|	Подразделение,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	ВидМестаВыплаты,
	|	МестоВыплаты";
	
	ВыборкаЗарплатыКВыплатеПоРасчетномуДокументу = Запрос.Выполнить().Выбрать();

	Возврат ВыборкаЗарплатыКВыплатеПоРасчетномуДокументу
	
КонецФункции

Функция НоваяВедомостьПоРасчетномуДокументу(РасчетныйДокумент, КлючВедомости, ПараметрыСоздания)
	
	ДокументМенеджер = ВзаиморасчетыССотрудниками.МенеджерДокументаВедомостьПоВидуМестаВыплаты(КлючВедомости.ВидМестаВыплаты); 
	
	Ведомость = ДокументМенеджер.СоздатьДокумент();
	
	ДанныеЗаполнения = ВзаиморасчетыССотрудниками.ДанныеЗаполненияВедомости();
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения.Шапка, КлючВедомости);
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения.Шапка, ПараметрыСоздания);
	ДанныеЗаполнения.Шапка.Дата = ПараметрыСоздания.ДатаВыплаты;
	ДанныеЗаполнения.Основания.Добавить(РасчетныйДокумент);
	
	Ведомость.Заполнить(ДанныеЗаполнения);

	ИнформацияОСпособеВыплаты = ВзаиморасчетыССотрудникамиВызовСервераРасширенный.ИнформацияОСпособеВыплаты(ПараметрыСоздания.СпособВыплаты);
	ЗаполнитьЗначенияСвойств(Ведомость, ИнформацияОСпособеВыплаты.ПараметрыРасчета);

	Ведомость.СтатьяФинансирования	= КлючВедомости.СтатьяФинансирования;
	Ведомость.СтатьяРасходов		= КлючВедомости.СтатьяРасходов;
	
	Возврат Ведомость
	
КонецФункции
	
Функция ПредставлениеВедомости(Ведомость)
	
	ШаблонПредставления = НСтр("ru = '%1 на общую сумму %2 %3, сотрудников %4: %5'");
	
	Тип = Ведомость.Метаданные().Синоним;
	Сумма	= Ведомость.Зарплата.Итог("КВыплате");
	Валюта	= НСтр("ru = 'руб.'");
	Сотрудники = Ведомость.Зарплата.Выгрузить(, "Сотрудник");
	Сотрудники.Свернуть("Сотрудник");
	КоличествоСотрудников	= Сотрудники.Количество();
	КраткийСоставСотрудников= ЗарплатаКадры.КраткийСоставСотрудников(Ведомость.Зарплата.ВыгрузитьКолонку("Сотрудник"), Ведомость.Дата);
	
	ПредставлениеВедомости = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления, Тип, Сумма, Валюта, КоличествоСотрудников, КраткийСоставСотрудников);
	
	Возврат ПредставлениеВедомости
	
КонецФункции

#КонецОбласти

#Область Сохранение_ведомостей 

Процедура СохранитьВедомостиНаСервере(СписокВедомостей, РежимЗаписи)	Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого СтрокаСпискаВедомостей Из СписокВедомостей Цикл
			СтрокаXML = ПолучитьИзВременногоХранилища(СтрокаСпискаВедомостей.Адрес);
			Ведомость = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаXML);
			Ведомость.Записать(РежимЗаписи);
		КонецЦикла;	
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#КонецЕсли