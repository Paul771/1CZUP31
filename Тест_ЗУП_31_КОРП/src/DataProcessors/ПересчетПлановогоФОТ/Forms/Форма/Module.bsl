#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Сотрудник,ДатаПересчета");
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		ПрочитатьТекущийФОТСотрудника();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПересчета) Тогда
		ПересчитатьФОТСНачалаВремен = 1;
	КонецЕсли; 
	
	УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ПрочитатьТекущийФОТСотрудника();
	УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьФОТСНачалаВременПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСДатыПересчетаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьПересчетФОТ(Команда)
	
	ВыполнитьПересчетФОТНаКлиенте();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементовФормы(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ФормаОК",
		"Доступность",
		ЗначениеЗаполнено(Форма.Сотрудник) Или Форма.ПоВсемСотрудникам);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ДатаПересчета",
		"Доступность",
		Форма.ПересчитатьФОТСНачалаВремен = 1);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Сотрудник",
		"Доступность",
		Не Форма.ПоВсемСотрудникам);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервереБезКонтекста
Функция СообщенияФоновогоЗадания(ИдентификаторЗадания)
	
	СообщенияПользователю = Новый Массив;
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	Если ФоновоеЗадание <> Неопределено Тогда
		СообщенияПользователю = ФоновоеЗадание.ПолучитьСообщенияПользователю();
	КонецЕсли;
	
	Возврат СообщенияПользователю;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
				Состояние(НСтр("ru='Процесс пересчета планового ФОТ завершен'"));
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
				
				ПрочитатьТекущийФОТСотрудника();
				
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания",
					ПараметрыОбработчикаОжидания.ТекущийИнтервал,
					Истина);
			КонецЕсли;
				
		КонецЕсли;
		
	Исключение
		
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		
		СообщенияПользователю = СообщенияФоновогоЗадания(ИдентификаторЗадания);
		Если СообщенияПользователю <> Неопределено Тогда
			Для каждого СообщениеФоновогоЗадания Из СообщенияПользователю Цикл
				СообщениеФоновогоЗадания.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПересчетФОТНаКлиенте()
	
	ОчиститьСообщения();
	
	РезультатРаботыЗадания = ВыполнитьПересчетФОТНаСервере();
	
	Если Не РезультатРаботыЗадания.ЗаданиеВыполнено Тогда
		
		ИдентификаторЗадания = РезультатРаботыЗадания.ИдентификаторЗадания;
		АдресХранилища		 = РезультатРаботыЗадания.АдресХранилища;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		
	Иначе
		ПрочитатьТекущийФОТСотрудника();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПересчетФОТНаСервере()
	
	Если ПересчитатьФОТСНачалаВремен = 1 Тогда
		ДатаВыполненияПересчета = ДатаПересчета;
	Иначе
		ДатаВыполненияПересчета = '00010101';
	КонецЕсли;
	
	Если ПоВсемСотрудникам Тогда
		ПараметрыВыполнения = Новый Структура("ДатаВыполненияПересчета,Сотрудник", ДатаВыполненияПересчета, Неопределено);	
	Иначе	
		ПараметрыВыполнения = Новый Структура("ДатаВыполненияПересчета,Сотрудник", ДатаВыполненияПересчета, Сотрудник);
	КонецЕсли;	
	
	НаименованиеЗадания = НСтр("ru = 'Пересчет планового ФОТ'");
	
	РезультатРаботыЗадания = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"ПлановыеНачисленияСотрудников.ПересчитатьФОТПлановыхНачислений",
		ПараметрыВыполнения,
		НаименованиеЗадания);
	
	АдресХранилища = РезультатРаботыЗадания.АдресХранилища;
	
	Возврат РезультатРаботыЗадания;
	
КонецФункции

&НаСервере
Процедура ПрочитатьТекущийФОТСотрудника()
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Сотрудник, "ФОТ");
		Если КадровыеДанные.Количество() > 0 Тогда
			ТекущийФОТ = КадровыеДанные[0].ФОТ;
		Иначе
			ТекущийФОТ = 0;
		КонецЕсли;
		
	Иначе
		ТекущийФОТ = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемСотрудникамПриИзменении(Элемент)
	Если ПоВсемСотрудникам Тогда
		Сотрудник = Неопределено;
	КонецЕсли;
	
	УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти
