
#Область ОписаниеПеременных

// Хранение контекста взаимодействия с сервисом
&НаКлиенте
Перем КонтекстВзаимодействия Экспорт;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапускИПППриСтарте = Ложь;
	
	МониторИнтернетПоддержкиПереопределяемый.ИспользоватьОтображениеМонитораПриНачалеРаботы(
		ЗапускИПППриСтарте);
	
	Элементы.ГруппаНастройкаЗапускатьПриСтарте.Видимость = (ЗапускИПППриСтарте = Истина);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ИнтернетПоддержкаПользователей",
		"ХэшОбновленияИнформационногоОкна",
		Параметры.ХэшИнформацииМонитора);
	
	ЗаголовокПользователя = Строка(Параметры.login);
	
	Элементы.НадписьЛогина.Заголовок = ЗаголовокПользователя;
	Элементы.НадписьЛогина.Подсказка = НСтр("ru = 'Логин текущего пользователя Интернет-поддержки:'")
		+ " " + ЗаголовокПользователя;
	
	ФормированиеФормы(Параметры);
	
	НастройкаЗапуска = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ИнтернетПоддержкаПользователей",
		"ВсегдаПоказыватьПриСтартеПрограммы");
	
	Если НастройкаЗапуска = Неопределено Тогда
		НастройкаПоказПриСтарте = 0;
	ИначеЕсли НастройкаЗапуска = Истина Тогда
		ПоказыватьПриОбновлении = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ИнтернетПоддержкаПользователей",
			"ПоказПриСтартеТолькоПриИзменении");
		Если ПоказыватьПриОбновлении = Истина Тогда
			НастройкаПоказПриСтарте = 1;
		Иначе
			НастройкаПоказПриСтарте = 0;
		КонецЕсли;
	Иначе
		НастройкаПоказПриСтарте = 2;
	КонецЕсли;
	
	ПроверитьHTMLДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИнтернетПоддержкаПользователейКлиент.ОбработатьОткрытиеФормы(КонтекстВзаимодействия, ЭтотОбъект);
	
#Если ВебКлиент Тогда
	ПоказатьПредупреждение(,
		НСтр("ru = 'В веб-клиенте некоторые ссылки могут работать неправильно.
			|Приносим извинения за неудобства.'"),
		,
		НСтр("ru = 'Интернет-поддержка пользователей'"));
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ ПрограммноеЗакрытие Тогда
		ИнтернетПоддержкаПользователейКлиент.ЗавершитьБизнесПроцесс(КонтекстВзаимодействия, ЗавершениеРаботы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьВыходаНажатие(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ОбработатьВыходПользователя(КонтекстВзаимодействия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура HTMLДокументПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ДанныеАктивногоЭлемента = Элемент.Документ.activeElement;
	Если ДанныеАктивногоЭлемента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		КлассАктивногоЭлемента = ДанныеАктивногоЭлемента.HRef;
	Исключение
		Возврат;
	КонецПопытки;
	
	Попытка
		ТаргетЭлемента = ДанныеАктивногоЭлемента.target;
	Исключение
		ТаргетЭлемента = Неопределено;
	КонецПопытки;
	
	Попытка
		ЗаголовокЭлемента = ДанныеАктивногоЭлемента.innerHTML;
	Исключение
		ЗаголовокЭлемента = Неопределено;
	КонецПопытки;
	
	Если ТаргетЭлемента <> Неопределено Тогда
		
		Если НРег(СокрЛП(ТаргетЭлемента)) = "_blank" Тогда
			СтандартнаяОбработка = Ложь;
			ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
				КлассАктивногоЭлемента,
				ЗаголовокЭлемента);
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтрНайти(НРег(СокрЛП(КлассАктивногоЭлемента)),"openupdate") <> 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.ПолучениеОбновленийПрограммы") Тогда
			ПоказатьПредупреждение(
				,
				НСтр("ru = 'Отсутствует механизм автоматического обновления.'"));
			Возврат;
		КонецЕсли;
		
		
		МодульПолучениеОбновленийПрограммыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПолучениеОбновленийПрограммыКлиент");
		МодульПолучениеОбновленийПрограммыКлиент.ОбновитьПрограмму();
		
	ИначеЕсли СтрНайти(НРег(СокрЛП(КлассАктивногоЭлемента)), "problemupdate") <> 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		ТекстСообщения =
			НСтр("ru = 'При обновлении конфигурации на новый релиз возникли следующие проблемы:
				|<Опишите возникшие проблемы>.'");
		
		ЛогинПользователя = ИнтернетПоддержкаПользователейКлиентСервер.ЗначениеСессионногоПараметра(
			КонтекстВзаимодействия.КСКонтекст,
			"login");
		
		РегНомер = ИнтернетПоддержкаПользователейКлиентСервер.ЗначениеСессионногоПараметра(
			КонтекстВзаимодействия.КСКонтекст,
			"regnumber");
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения,
			ЛогинПользователя,
			РегНомер);
		
		ИнтернетПоддержкаПользователейКлиент.ОтправитьСообщениеВТехПоддержку(
			НСтр("ru = 'Интернет-поддержка. Обновление конфигурации.'"),
			ТекстСообщения,
			,
			,
			Новый Структура("Логин, Пароль",
				ЛогинПользователя,
				ИнтернетПоддержкаПользователейКлиентСервер.ЗначениеСессионногоПараметра(
					КонтекстВзаимодействия.КСКонтекст,
					"password")));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПоказПриСтартеПриИзменении(Элемент)
	
	НастройкаПоказПриСтартеПриИзмененииНаСервере(НастройкаПоказПриСтарте);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет адрес обозревателя
&НаСервере
Процедура ФормированиеФормы(ПараметрыФормы)
	
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УРЛ = Неопределено;
	ПараметрыФормы.Свойство("УРЛ", УРЛ);
	
	Если УРЛ <> Неопределено Тогда
		HTMLДокумент = УРЛ;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура НастройкаПоказПриСтартеПриИзмененииНаСервере(НастройкаПоказПриСтарте)
	
	Если НастройкаПоказПриСтарте = 0 Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ИнтернетПоддержкаПользователей",
			"ВсегдаПоказыватьПриСтартеПрограммы",
			Истина);
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ИнтернетПоддержкаПользователей",
			"ПоказПриСтартеТолькоПриИзменении",
			Ложь);
	ИначеЕсли НастройкаПоказПриСтарте = 1 Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ИнтернетПоддержкаПользователей",
			"ВсегдаПоказыватьПриСтартеПрограммы",
			Истина);
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ИнтернетПоддержкаПользователей",
			"ПоказПриСтартеТолькоПриИзменении",
			Истина);
	Иначе
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ИнтернетПоддержкаПользователей",
			"ВсегдаПоказыватьПриСтартеПрограммы",
			Ложь);
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ИнтернетПоддержкаПользователей",
			"ПоказПриСтартеТолькоПриИзменении",
			Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьHTMLДокумент()
	Если Не ЗначениеЗаполнено(HTMLДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "text/html; charset=utf-8");
	Заголовки.Вставить("User-Agent", "Mozilla/4.0 (compatible; MSIE 7.0)");
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ФорматОтвета", 1);
	ДопПараметры.Вставить("Метод",        "GET");
	ДопПараметры.Вставить("Заголовки",    Заголовки);
	ДопПараметры.Вставить("Таймаут",      30);
	
	Попытка
		ОтветСервера = ИнтернетПоддержкаПользователейКлиентСервер.ЗагрузитьСодержимоеИзИнтернет(HTMLДокумент, , , ДопПараметры);
		Если Не ЗначениеЗаполнено(ОтветСервера.КодОшибки) Тогда
			Содержимое = ОтветСервера.Содержимое;
			Если ТекстСодержитИнформациюОПредыдущихВерсиях(Содержимое) Тогда
				АдресСервера = ВыделитьАдресСервера(HTMLДокумент);
				Содержимое = ЗаменитьОтносительныеСсылкиНаАбсолютные(Содержимое, АдресСервера);
				Содержимое = УбратьИнформациюОбОбновлении(Содержимое);
				Если ЗначениеЗаполнено(Содержимое) Тогда
					HTMLДокумент = Содержимое;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Исключение
		// Действие не требуется.
	КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстСодержитИнформациюОПредыдущихВерсиях(Текст)
	Возврат СтрНайти(Текст, "3.1.2") > 0
		Или СтрНайти(Текст, "3.1.3") > 0
		Или СтрНайти(Текст, "3.1.4") > 0
		Или СтрНайти(Текст, "3.1.5") > 0;
КонецФункции

&НаСервереБезКонтекста
Функция ЗаменитьОтносительныеСсылкиНаАбсолютные(Исходник, АдресСервера)
	
	Содержимое = СтрЗаменить(Исходник, "=""/", "=""" + АдресСервера);
	
	ПереопределениеСтилей = "
	|<style type=""text/css"">
	|
	|.wrapper{
	|	background:url(""[АдресСервера]images/left_bg.gif"") repeat-y left;
	|}
	|.header{
	|	background:url(""[АдресСервера]images/top_bg.gif"") repeat-x top #ece6cc;
	|}
	|.update input{
	|	background:url(""[АдресСервера]images/button.jpg"") no-repeat;
	|}
	|.outerContent{
	|	background:url(""[АдресСервера]images/bg_right.gif"") right repeat-y #ffffff;
	|}
	|.content{
	|	background:url(""[АдресСервера]images/left_bg.gif"") repeat-y left #ffffff;
	|}
	|.alert .icon{
	|	background:url(""[АдресСервера]images/alert.png"") no-repeat center top;
	|}
	|.ok .icon{
	|	background:url(""[АдресСервера]images/ok.png"") no-repeat center top;
	|}
	|.info .icon{
	|	background:url(""[АдресСервера]images/info.png"") no-repeat center top;
	|}
	|.warning .icon{
	|	background:url(""[АдресСервера]images/warning.png"") no-repeat center top;
	|}
	|.regreports_ok .icon{
	|	background:url(""[АдресСервера]images/doc_ok.png"") no-repeat center top;
	|}
	|.regreports_warning .icon{
	|	background:url(""[АдресСервера]images/doc_war.png"") no-repeat center top;
	|}
	|.config_ok .icon{
	|	background:url(""[АдресСервера]images/config_ok.png"") no-repeat center top;
	|}
	|.config_warning .icon{
	|	background:url(""[АдресСервера]images/config_warning.png"") no-repeat center top;
	|}
	|.platform_ok .icon{
	|	background:url(""[АдресСервера]images/plat_ok.png"") no-repeat center top;
	|}
	|.platform_warning .icon{
	|	background:url(""[АдресСервера]images/plat_war.png"") no-repeat center top;
	|}
	|.footer{
	|	background:url(""[АдресСервера]images/left_bg.gif"") repeat-y left #f9f7f0;
	|}
	|.footer .icon{
	|	background:url(""[АдресСервера]images/info.png"") no-repeat center top;
	|}
	|.footer li{
	|	float:none;
	|	background:url(""[АдресСервера]images/li.gif"") no-repeat left 10px;
	|}
	|.rightside .newsTitle span{
	|	background:url(""[АдресСервера]images/gradient.png"") repeat-x;
	|}
	|*html .rightside .newsTitle span{
	|	filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='[АдресСервера]images/gradient.png', sizingMethod='scale');
	|}
	|.slider a{
	|	background:url(""[АдресСервера]images/arrow.png"") no-repeat right 5px;
	|}
	|
	|</style>
	|";
	ПереопределениеСтилей = СтрЗаменить(ПереопределениеСтилей, "[АдресСервера]", АдресСервера);
	Содержимое = СтрЗаменить(Содержимое, "</head>", ПереопределениеСтилей + "</head>");
	
	Возврат Содержимое;
КонецФункции

&НаСервереБезКонтекста
Функция УбратьИнформациюОбОбновлении(Исходник)
	// Получение объектной модели документа.
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(Исходник);
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	ЧтениеHTML.Закрыть();
	ЧтениеHTML = Неопределено;
	
	// Поиск узла DIV.
	ЗаменяемыйУзелDIV = Неопределено;
	КоллекцияЭлементовHTML = ДокументHTML.ПолучитьЭлементыПоИмени("h3");
	Для Каждого ЭлементHTML Из КоллекцияЭлементовHTML Цикл
		Если СтрокиСовпадают(ЭлементHTML.ТекстовоеСодержимое, НСтр("ru = 'Версия конфигурации устарела'")) Тогда
			РодительРодителя = ЭлементHTML.РодительскийУзел.РодительскийУзел;
			Если СтрокиСовпадают(РодительРодителя.ИмяКласса, "block config_warning") Тогда
				ЗаменяемыйУзелDIV = РодительРодителя;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗаменяемыйУзелDIV = Неопределено Тогда
		КоллекцияЭлементовHTML = ДокументHTML.ПолучитьЭлементыПоИмени("div");
		Для Каждого ЭлементHTML Из КоллекцияЭлементовHTML Цикл
			Если СтрокиСовпадают(ЭлементHTML.ИмяКласса, "block config_warning")
				И ТекстСодержитИнформациюОПредыдущихВерсиях(ЭлементHTML.ТекстовоеСодержимое) Тогда
				ЗаменяемыйУзелDIV = ЭлементHTML;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗаменяемыйУзелDIV = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	// Замена узла DIV.
	РодительЗаменяемогоУзла = ЗаменяемыйУзелDIV.РодительскийУзел;
	
	ВставляемыйФрагмент = 
	"<div class=""block ok"">
	|	<div class=""icon""></div>
	|	<div class=""text"">
	|		<h3>Версия конфигурации актуальна</h3>
	|		<p>Версия вашей конфигурации <span class=""weight"">" + Метаданные.Версия + "</span>, на настоящий момент это последняя опубликованная версия.</p>
	|	</div>
	|	<div class=""clear""></div>
	|</div>";
	
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(ВставляемыйФрагмент);
	ДополнительныйДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	ЧтениеHTML.Закрыть();
	ЧтениеHTML = Неопределено;
	
	ПрототипУзлаDIV = ДополнительныйДокументHTML.ПолучитьЭлементыПоИмени("body")[0].ПервыйДочерний;
	РодительЗаменяемогоУзла.ЗаменитьДочерний(ПрототипУзлаDIV.КлонироватьУзел(Истина), ЗаменяемыйУзелDIV);
	
	// Получение HTML.
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьHTML = Новый ЗаписьHTML;
	ЗаписьHTML.УстановитьСтроку();
	ЗаписьDOM.Записать(ДокументHTML, ЗаписьHTML);
	Возврат ЗаписьHTML.Закрыть();
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВыделитьАдресСервера(URL)
	Позиция1 = СтрНайти(URL, "://") + 3;
	Позиция2 = СтрНайти(URL, "/", , Позиция1);
	Возврат Лев(URL, Позиция2);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокиСовпадают(Строка1, Строка2)
	Возврат НРег(СтрЗаменить(Строка1, " ", "")) = НРег(СтрЗаменить(Строка2, " ", ""));
КонецФункции

#КонецОбласти
