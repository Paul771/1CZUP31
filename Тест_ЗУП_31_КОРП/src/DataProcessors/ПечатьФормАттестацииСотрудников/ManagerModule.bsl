#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда	
	
#Область СлужебныеПроцедурыИФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст
//                           ошибки).
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АттестационныйЛист") Тогда
		ТабличныйДокумент = ТабличныйДокументАттестационныйЛистСотрудника(МассивОбъектов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"АттестационныйЛист", НСтр("ru = 'Аттестационный лист'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область АттестационныйЛистСотрудника

Функция ТабличныйДокументАттестационныйЛистСотрудника(ПриказыОбАттестации, ОбъектыПечати)
	
	ВидАттестации = ВидАттестацииПриказовОбАттестации(ПриказыОбАттестации);
	
	Если ВидАттестации = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДокументРезультат = Неопределено;
	
	Если АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ВидАттестации) 
		И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		ДокументРезультат = Модуль.АттестационныеЛистыСотрудников(ПриказыОбАттестации, ОбъектыПечати);
		
	ИначеЕсли АттестацииСотрудников.ЭтоАттестацияМедицинскихРаботников(ВидАттестации) 
		И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.Медицина") Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("Медицина");
		ДокументРезультат = Модуль.АттестационныеЛистыСотрудников(ПриказыОбАттестации, ОбъектыПечати);
		
	ИначеЕсли АттестацииСотрудников.ТипАттестации(ВидАттестации) = Перечисления.ТипыАттестацииСотрудников.ПодтверждениеСоответствияДолжности Тогда
		
		ДокументРезультат = АттестационныеЛистыСоответствиеДолжности(ПриказыОбАттестации, ОбъектыПечати);
		
	ИначеЕсли АттестацииСотрудников.ТипАттестации(ВидАттестации) = Перечисления.ТипыАттестацииСотрудников.ПодтверждениеКвалификацииПоСпециальности Тогда
		
		ДокументРезультат = АттестационныеЛистыПодтверждениеКвалификации(ПриказыОбАттестации, ОбъектыПечати);
		
	КонецЕсли;
	
	Возврат	ДокументРезультат;
	
КонецФункции

#Область АттестационныеЛистыСотрудниковСоответствиеДолжности

Функция АттестационныеЛистыСоответствиеДолжности(ПриказыОбАттестации, ОбъектыПечати)
	
	ДокументРезультат = НовыйДокументРезультат("ПараметрыПечати_АттестационныйЛистСотрудника", ОриентацияСтраницы.Портрет);
	
	ДанныеДляПечати = ДанныеДляПечатиАттестационногоЛистаСоответствиеДолжности(ПриказыОбАттестации);
	
	СоставыКомиссий = АттестацииСотрудников.СоставыАттестационныхКомиссийПриказовОбАттестации(ПриказыОбАттестации);
	
	Пока ДанныеДляПечати.Следующий() Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 1 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		НомерПоПорядку 	= 1;
		
		СоставКомиссии = СоставыКомиссий.Получить(ДанныеДляПечати.Ссылка);
		
		ВывестиАттестационныйЛистСоответствиеДолжности(ДокументРезультат, ДанныеДляПечати, СоставКомиссии);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДанныеДляПечати.Ссылка);
		
	КонецЦикла;	
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура ВывестиАттестационныйЛистСоответствиеДолжности(ДокументРезультат, ДанныеДляПечати, СоставКомиссии)
	 		  
	ОбластиМакета = ОбластиМакетаАттестационныйЛистСотрудникаСоответствиеДолжности();

	ВывестиШапкуАттестационногоЛистаСоответствиеДолжности(ДокументРезультат, ОбластиМакета.ОбластьШапка, ДанныеДляПечати, СоставКомиссии);
	
	ВывестиЧленовКомиссииАттестационногоЛистаСоответствиеДолжности(ДокументРезультат, ОбластиМакета.ОбластьПервыйЧленКомиссии, ОбластиМакета.ОбластьЧленКомиссии, ДанныеДляПечати, СоставКомиссии);
	
	ВывестиПодвалАттестационногоЛистаСоответствиеДолжности(ДокументРезультат, ОбластиМакета.ОбластьПодвал, ДанныеДляПечати);
	
КонецПроцедуры

Процедура ВывестиШапкуАттестационногоЛистаСоответствиеДолжности(ДокументРезультат, ОбластьШапка, ДанныеДляПечати, СоставКомиссии)
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеДляПечати);
	
	ДанныеШапки = Новый Структура;
	ДанныеШапки.Вставить("НаименованиеОрганизации", 	НаименованиеОрганизации(ДанныеДляПечати));
	ДанныеШапки.Вставить("Образование", 				АттестацииСотрудников.ПредставлениеОбразованияСотрудникаДляАттестационногоЛиста(ДанныеДляПечати));
	ДанныеШапки.Вставить("ДолжностьИДатаНазначения", 	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 с %2", ДанныеДляПечати.Должность, Формат(ДанныеДляПечати.ДатаНачалаРаботыВДолжности, "ДЛФ=DD")));
	ДанныеШапки.Вставить("СтажРаботыВДолжности", 		"");
	ДанныеШапки.Вставить("ОбщийТрудовойСтаж", 			АттестацииСотрудников.ПредставлениеСтажаСотрудникаДляАттестационногоЛиста(ДанныеДляПечати.ОбщийСтажЛет, ДанныеДляПечати.ОбщийСтажМесяцев));
	ДанныеШапки.Вставить("ФИОПредседателя", 			АттестацииСотрудников.ФИОЧленаКомиссииПоРоли(СоставКомиссии, Перечисления.РолиЧленовАттестационнойКомиссии.Председатель, Истина));
	ДанныеШапки.Вставить("ФИОЗаместителяПредседателя", 	АттестацииСотрудников.ФИОЧленаКомиссииПоРоли(СоставКомиссии, Перечисления.РолиЧленовАттестационнойКомиссии.ЗаместительПредседателя, Истина));
	ДанныеШапки.Вставить("ФИОСекретаря", 				АттестацииСотрудников.ФИОЧленаКомиссииПоРоли(СоставКомиссии, Перечисления.РолиЧленовАттестационнойКомиссии.Секретарь, Истина));
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеШапки);
		
	ДокументРезультат.Вывести(ОбластьШапка);
	
КонецПроцедуры

Процедура ВывестиЧленовКомиссииАттестационногоЛистаСоответствиеДолжности(ДокументРезультат, ОбластьПервыйЧленКомиссии, ОбластьЧленКомиссии, ДанныеДляПечатиПриказаОбАттестации, СоставКомиссии)
	
	ДанныеЧленаКомиссии = Новый Структура;
	
	ПервыйЧленКомиссии = Истина;
	
	Для Каждого ЧленКомиссии Из СоставКомиссии Цикл
		
		Если ЧленКомиссии.РольВКомиссии <> Перечисления.РолиЧленовАттестационнойКомиссии.ЧленКомиссии Тогда
		     Продолжить;
		КонецЕсли;
		
		ДанныеЧленаКомиссии.Вставить("ФИОЧленаКомиссии", ЧленКомиссии.ФИОПолные);
		
		Если ПервыйЧленКомиссии Тогда
			ЗаполнитьЗначенияСвойств(ОбластьПервыйЧленКомиссии.Параметры, ДанныеЧленаКомиссии);
			ДокументРезультат.Вывести(ОбластьПервыйЧленКомиссии);
			ПервыйЧленКомиссии = Ложь;
		Иначе
			ЗаполнитьЗначенияСвойств(ОбластьЧленКомиссии.Параметры, ДанныеЧленаКомиссии);
			ДокументРезультат.Вывести(ОбластьЧленКомиссии);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиПодвалАттестационногоЛистаСоответствиеДолжности(ДокументРезультат, ОбластьПодвал, ДанныеДляПечати)
	
	ДанныеПодвала = Новый Структура;
	ДанныеПодвала.Вставить("ДатаПроведенияАттестации", Формат(ДанныеДляПечати.ДатаЗаседания, "ДЛФ=DD"));
	
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ДанныеПодвала);
	
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Функция ОбластиМакетаАттестационныйЛистСотрудникаСоответствиеДолжности()
	
	ОбластиМакета = Новый Структура;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьФормАттестацииСотрудников.ПФ_MXL_АттестационныйЛистСоответствиеДолжности");
	ОбластиМакета.Вставить("ОбластьШапка", 				Макет.ПолучитьОбласть("Шапка"));
	ОбластиМакета.Вставить("ОбластьПервыйЧленКомиссии", Макет.ПолучитьОбласть("ПервыйЧленКомиссии"));
	ОбластиМакета.Вставить("ОбластьЧленКомиссии", 		Макет.ПолучитьОбласть("ЧленКомиссии"));
	ОбластиМакета.Вставить("ОбластьПодвал", 			Макет.ПолучитьОбласть("Подвал"));
	
	Возврат ОбластиМакета;
	
КонецФункции

#Область ДанныеДляПечатиАттестационногоЛистаСоответствиеДолжности

Функция ДанныеДляПечатиАттестационногоЛистаСоответствиеДолжности(ПриказыОбАттестации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	НеобходимыеКадровыеДанные = ИменаКадровыхДанныхНеобходимыхДляПечатиАттестационногоЛистаСоответствиеДолжности();
	СоздатьВТСотрудникиПриказовОбАттестации(Запрос.МенеджерВременныхТаблиц, ПриказыОбАттестации);
	СоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, НеобходимыеКадровыеДанные);
	СоздатьВТКадровыеДанныеОтветственныхЛицОрганизации(Запрос.МенеджерВременныхТаблиц, ПриказыОбАттестации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриказОбАттестацииСотрудники.Ссылка КАК Ссылка,
	|	ПриказОбАттестацииСотрудники.Сотрудник КАК Сотрудник,
	|	ПриказОбАттестацииСотрудники.Подразделение,
	|	ПриказОбАттестацииСотрудники.Должность,
	|	ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания,
	|	Организации.НаименованиеПолное,
	|	Организации.НаименованиеСокращенное,
	|	ВТКадровыеДанныеСотрудников.ФИОПолные,
	|	ВТКадровыеДанныеСотрудников.ДатаРождения,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеУчебноеЗаведение,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеОкончание,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеСпециальность,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеКвалификация,
	|	ВТКадровыеДанныеСотрудников.УченаяСтепень,
	|	ВТКадровыеДанныеСотрудников.УченоеЗвание,
	|	ВТКадровыеДанныеСотрудников.ОбщийСтажЛет,
	|	ВТКадровыеДанныеСотрудников.ОбщийСтажМесяцев,
	|	ВТКадровыеДанныеСотрудников.ДатаПриема
	|ПОМЕСТИТЬ ВТАттестуемые
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников.Сотрудники КАК ПриказОбАттестацииСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииЗаседанияКомиссии
	|		ПО ПриказОбАттестацииСотрудники.Ссылка = ПриказОбАттестацииЗаседанияКомиссии.Ссылка
	|			И ПриказОбАттестацииСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииЗаседанияКомиссии.ИдентификаторСтрокиЗаседаниеКомиссии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|		ПО ПриказОбАттестацииСотрудники.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|			И (ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания = ВТКадровыеДанныеСотрудников.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПриказОбАттестацииСотрудники.Ссылка.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственныхЛицОрганизации КАК ВТКадровыеДанныеРуководителей
	|		ПО ПриказОбАттестацииСотрудники.Ссылка.Руководитель = ВТКадровыеДанныеРуководителей.ФизическоеЛицо
	|			И (ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания = ВТКадровыеДанныеРуководителей.Период)
	|ГДЕ
	|	ПриказОбАттестацииСотрудники.Ссылка В(&ПриказыОбАттестации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НаправлениеНаВнешнююАттестациюСотрудники.Ссылка,
	|	НаправлениеНаВнешнююАттестациюСотрудники.Сотрудник,
	|	НаправлениеНаВнешнююАттестациюСотрудники.Подразделение,
	|	НаправлениеНаВнешнююАттестациюСотрудники.Должность,
	|	НаправлениеНаВнешнююАттестациюСотрудники.ДатаАттестации,
	|	Организации.НаименованиеПолное,
	|	Организации.НаименованиеСокращенное,
	|	ВТКадровыеДанныеСотрудников.ФИОПолные,
	|	ВТКадровыеДанныеСотрудников.ДатаРождения,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеУчебноеЗаведение,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеОкончание,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеСпециальность,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеКвалификация,
	|	ВТКадровыеДанныеСотрудников.УченаяСтепень,
	|	ВТКадровыеДанныеСотрудников.УченоеЗвание,
	|	ВТКадровыеДанныеСотрудников.ОбщийСтажЛет,
	|	ВТКадровыеДанныеСотрудников.ОбщийСтажМесяцев,
	|	ВТКадровыеДанныеСотрудников.ДатаПриема
	|ИЗ
	|	Документ.НаправлениеНаВнешнююАттестацию.Сотрудники КАК НаправлениеНаВнешнююАттестациюСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|		ПО НаправлениеНаВнешнююАттестациюСотрудники.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|			И НаправлениеНаВнешнююАттестациюСотрудники.ДатаАттестации = ВТКадровыеДанныеСотрудников.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО НаправлениеНаВнешнююАттестациюСотрудники.Ссылка.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственныхЛицОрганизации КАК ВТКадровыеДанныеРуководителей
	|		ПО НаправлениеНаВнешнююАттестациюСотрудники.Ссылка.Руководитель = ВТКадровыеДанныеРуководителей.ФизическоеЛицо
	|			И НаправлениеНаВнешнююАттестациюСотрудники.ДатаАттестации = ВТКадровыеДанныеРуководителей.Период
	|ГДЕ
	|	НаправлениеНаВнешнююАттестациюСотрудники.Ссылка В(&ПриказыОбАттестации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КадроваяИсторияСотрудников.Период) КАК Период,
	|	ВТАттестуемые.Сотрудник
	|ПОМЕСТИТЬ КадроваяИсторияДО
	|ИЗ
	|	ВТАттестуемые КАК ВТАттестуемые
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|		ПО (КадроваяИсторияСотрудников.Сотрудник = ВТАттестуемые.Сотрудник)
	|			И (КадроваяИсторияСотрудников.Должность <> ВТАттестуемые.Должность)
	|			И (КадроваяИсторияСотрудников.Период < ВТАттестуемые.ДатаЗаседания)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТАттестуемые.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(КадроваяИсторияСотрудников.Период) КАК ДатаНачалаРаботыВДолжности,
	|	КадроваяИсторияДО.Сотрудник
	|ПОМЕСТИТЬ ВТДатыНачалаРаботыВДолжности
	|ИЗ
	|	КадроваяИсторияДО КАК КадроваяИсторияДО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|		ПО (КадроваяИсторияСотрудников.Сотрудник = КадроваяИсторияДО.Сотрудник)
	|			И (КадроваяИсторияСотрудников.Период > КадроваяИсторияДО.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	КадроваяИсторияДО.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТАттестуемые.Ссылка,
	|	ВТАттестуемые.Сотрудник,
	|	ВТАттестуемые.Подразделение,
	|	ВТАттестуемые.Должность,
	|	ВТАттестуемые.ДатаЗаседания,
	|	ВТАттестуемые.НаименованиеПолное,
	|	ВТАттестуемые.НаименованиеСокращенное,
	|	ВТАттестуемые.ФИОПолные,
	|	ВТАттестуемые.ДатаРождения,
	|	ВТАттестуемые.ВысшееОбразованиеУчебноеЗаведение,
	|	ВТАттестуемые.ВысшееОбразованиеОкончание,
	|	ВТАттестуемые.ВысшееОбразованиеСпециальность,
	|	ВТАттестуемые.ВысшееОбразованиеКвалификация,
	|	ВТАттестуемые.УченаяСтепень,
	|	ВТАттестуемые.УченоеЗвание,
	|	ВТАттестуемые.ОбщийСтажЛет,
	|	ВТАттестуемые.ОбщийСтажМесяцев,
	|	ВТАттестуемые.ДатаПриема,
	|	ЕСТЬNULL(ВТДатыНачалаРаботыВДолжности.ДатаНачалаРаботыВДолжности, ВТАттестуемые.ДатаПриема) КАК ДатаНачалаРаботыВДолжности
	|ИЗ
	|	ВТАттестуемые КАК ВТАттестуемые
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыНачалаРаботыВДолжности КАК ВТДатыНачалаРаботыВДолжности
	|		ПО ВТАттестуемые.Сотрудник = ВТДатыНачалаРаботыВДолжности.Сотрудник";
	
	Результат = Запрос.Выполнить();

	Возврат Результат.Выбрать();
	
КонецФункции

Функция ИменаКадровыхДанныхНеобходимыхДляПечатиАттестационногоЛистаСоответствиеДолжности()
	
	КадровыеДанные = "ФИОПолные,ДатаРождения";
	КадровыеДанные = КадровыеДанные + ",ВысшееОбразованиеУчебноеЗаведение,ВысшееОбразованиеОкончание,ВысшееОбразованиеСпециальность,ВысшееОбразованиеКвалификация,УченаяСтепень,УченоеЗвание";
	КадровыеДанные = КадровыеДанные + ",ОбщийСтажЛет,ОбщийСтажМесяцев,ДатаПриема";
	Возврат КадровыеДанные;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область АттестационныеЛистыПодтверждениеКвалификации

Функция АттестационныеЛистыПодтверждениеКвалификации(ПриказыОбАттестации, ОбъектыПечати)
	
	ДокументРезультат = НовыйДокументРезультат("ПараметрыПечати_АттестационныйЛистСотрудника", ОриентацияСтраницы.Портрет);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТСотрудникиПриказовОбАттестации(МенеджерВременныхТаблиц, ПриказыОбАттестации);

	ДанныеДляПечати = ДанныеДляПечатиАттестационногоЛистаПодтверждениеКвалификации(МенеджерВременныхТаблиц, ПриказыОбАттестации);
	
	СоставыКомиссий = АттестацииСотрудников.СоставыАттестационныхКомиссийПриказовОбАттестации(ПриказыОбАттестации);
	ОбразованияФизическихЛиц = ОбразованияФизическихЛицДляПечатиАттестационногоЛистаПодтверждениеКвалификации(МенеджерВременныхТаблиц);
	ТрудоваяДеятельностьФизическихЛиц = ТрудоваяДеятельностьФизическихЛицДляПечатиАттестационногоЛистаПодтверждениеКвалификации(МенеджерВременныхТаблиц);
	СпециальностиФизическихЛиц = СпециальностиФизическихЛицДляПечатиАттестационногоЛистаПодтверждениеКвалификации(МенеджерВременныхТаблиц);
	
	Пока ДанныеДляПечати.Следующий() Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 1 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		НомерПоПорядку 	= 1;
		
		КомплектДанных = КомплектДанныхДляПечатиАттестационногоЛистаПодтверждениеКвалификации(ДанныеДляПечати, ОбразованияФизическихЛиц, ТрудоваяДеятельностьФизическихЛиц, СпециальностиФизическихЛиц, СоставыКомиссий);
		
		ВывестиАттестационныйЛистПодтверждениеКвалификации(ДокументРезультат, КомплектДанных);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДанныеДляПечати.Ссылка);
		
	КонецЦикла;	
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура ВывестиАттестационныйЛистПодтверждениеКвалификации(ДокументРезультат, КомплектДанных)
	 		  
	ОбластиМакета = ОбластиМакетаАттестационныйЛистСотрудникаПодтверждениеКвалификации();

	ВывестиШапкуАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластиМакета.ОбластьШапка, КомплектДанных);
	
	ВывестиСведенияОбОбразованииАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластиМакета.ОбластьШапкаСведенийОбОбразовании, ОбластиМакета.ОбластьСтрокаОбразования, КомплектДанных);
	
	ВывестиСведенияОТрудовойДеятельностиАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластиМакета.ОбластьШапкаСведенийОТрудовойДеятельности, ОбластиМакета.ОбластьСтрокаТрудовойДеятельности, КомплектДанных);
	
	ВывестиПодвалАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластиМакета.ОбластьПодвал, КомплектДанных);
	
КонецПроцедуры

Процедура ВывестиШапкуАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластьШапка, КомплектДанных)
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, КомплектДанных.ДанныеДляПечати);
	ДокументРезультат.Вывести(ОбластьШапка);
	
КонецПроцедуры

#Область СведенияОбОбразованииАттестационногоЛистаПодтверждениеКвалификации 

Процедура ВывестиСведенияОбОбразованииАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластьШапкаСведенийОбОбразовании, ОбластьСтрокаОбразования, КомплектДанных)
	
	ВывестиШапкуСведенийОбОбразованииАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластьШапкаСведенийОбОбразовании, КомплектДанных);
	
	ВывестиСтрокиСведенийОбОбразованииАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластьСтрокаОбразования, КомплектДанных);
	
КонецПроцедуры

Процедура ВывестиШапкуСведенийОбОбразованииАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластьШапкаСведенийОбОбразовании, КомплектДанных)
	ДанныеДляПечати = КомплектДанных.ДанныеДляПечати;
	ДанныеОбОбразовании = Новый Структура;
	ДанныеОбОбразовании.Вставить("УчебноеЗаведение", 					ДанныеДляПечати.ВысшееОбразованиеУчебноеЗаведение);
	ДанныеОбОбразовании.Вставить("ГодОкончанияУчебы", 					Формат(ДанныеДляПечати.ВысшееОбразованиеОкончание, "ДФ=yyyy"));
	ДанныеОбОбразовании.Вставить("СпециальностьПоОбразованию", 			ДанныеДляПечати.ВысшееОбразованиеСпециальность);
	ДанныеОбОбразовании.Вставить("РеквизитыДокументаОбОбразовании",  	ПредставлениеДокументаОбОсновномОбразованииДляАттестационногоЛистаПодтверждениеКвалификации(ДанныеДляПечати));
	ДанныеОбОбразовании.Вставить("ДатаВыдачиДокументаОбОбразовании", 	Формат(ДанныеДляПечати.ВысшееОбразованиеДатаВыдачи, "ДЛФ=DD"));
	ЗаполнитьЗначенияСвойств(ОбластьШапкаСведенийОбОбразовании.Параметры, ДанныеОбОбразовании);
	ДокументРезультат.Вывести(ОбластьШапкаСведенийОбОбразовании);
КонецПроцедуры

Процедура ВывестиСтрокиСведенийОбОбразованииАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластьСтрокаОбразования, КомплектДанных)
	ОбразованияФизическогоЛица = КомплектДанных.ОбразованияФизическогоЛица;
	Если ОбразованияФизическогоЛица.Количество() > 0 Тогда
		ДанныеОбОбразовании = Новый Структура;
		Для Каждого ОбразованиеФизическогоЛица Из ОбразованияФизическогоЛица Цикл
			
			ДанныеОбОбразовании.Очистить();
			ДанныеОбОбразовании.Вставить("ВидОбразования", 			ПредставлениеВидаОбразованияДляАттестационногоЛистаПодтверждениеКвалификации(ОбразованиеФизическогоЛица));
			ДанныеОбОбразовании.Вставить("ПериодОбучения", 			ПредставлениеПериодаОбразованияДляАттестационногоЛистаПодтверждениеКвалификации(ОбразованиеФизическогоЛица));
			ДанныеОбОбразовании.Вставить("МестоОбучения", 			ОбразованиеФизическогоЛица.УчебноеЗаведение);
			ДанныеОбОбразовании.Вставить("НазваниеКурсаОбучения",  	ОбразованиеФизическогоЛица.НаименованиеКурса);
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаОбразования.Параметры, ДанныеОбОбразовании);
			
			ДокументРезультат.Вывести(ОбластьСтрокаОбразования);
			
		КонецЦикла; 
	Иначе	
		ДокументРезультат.Вывести(ОбластьСтрокаОбразования);
	КонецЕсли;
КонецПроцедуры
	
Функция ПредставлениеДокументаОбОсновномОбразованииДляАттестационногоЛистаПодтверждениеКвалификации(ДанныеДляПечати)
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2 %3", ДанныеДляПечати.ВысшееОбразованиеВидДокумента, ДанныеДляПечати.ВысшееОбразованиеСерия, ДанныеДляПечати.ВысшееОбразованиеНомер);	
	
КонецФункции

Функция ПредставлениеВидаОбразованияДляАттестационногоЛистаПодтверждениеКвалификации(ОбразованиеФизическогоЛица)
	
	ПредставлениеВидаОбразования = "";
	
	Если ЗначениеЗаполнено(ОбразованиеФизическогоЛица.ВидОбразования) Тогда
		ПредставлениеВидаОбразования = ОбразованиеФизическогоЛица.ВидПослевузовскогоОбразования;
	ИначеЕсли ЗначениеЗаполнено(ОбразованиеФизическогоЛица.ВидДополнительногоОбучения) Тогда
		ПредставлениеВидаОбразования = ОбразованиеФизическогоЛица.ВидДополнительногоОбучения;
	Иначе
		ПредставлениеВидаОбразования = Нстр("ru = 'Дополнительное образование'");
	КонецЕсли;
	
	Возврат ПредставлениеВидаОбразования;
	
КонецФункции

Функция ПредставлениеПериодаОбразованияДляАттестационногоЛистаПодтверждениеКвалификации(ОбразованиеФизическогоЛица)
	
	ПредставлениеПериодаОбразования = "";
	
	Если Год(ОбразованиеФизическогоЛица.Начало) <> Год(ОбразованиеФизическогоЛица.Окончание) Тогда
		ПредставлениеПериодаОбразования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 - %2гг.", Формат(ОбразованиеФизическогоЛица.Начало, "ДФ=yyyy"),Формат(ОбразованиеФизическогоЛица.Окончание, "ДФ=yyyy"));
	ИначеЕсли ЗначениеЗаполнено(ОбразованиеФизическогоЛица.Начало) Тогда
		ПредставлениеПериодаОбразования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1г.", Формат(ОбразованиеФизическогоЛица.Начало, "ДФ=yyyy"));
	КонецЕсли;
	
	Возврат ПредставлениеПериодаОбразования;	
	
КонецФункции

#КонецОбласти

Процедура ВывестиСведенияОТрудовойДеятельностиАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластьШапкаСведенийОТрудовойДеятельности, ОбластьСтрокаТрудовойДеятельности, КомплектДанных)

	ДокументРезультат.Вывести(ОбластьШапкаСведенийОТрудовойДеятельности);
	
	ТрудоваяДеятельностьФизическогоЛица = КомплектДанных.ТрудоваяДеятельностьФизическогоЛица;
	
	Если ТрудоваяДеятельностьФизическогоЛица.Количество() > 0 Тогда
		ДанныеОТрудовойДеятельности = Новый Структура;
		Для Каждого ПериодТрудовойДеятельности Из ТрудоваяДеятельностьФизическогоЛица Цикл
			
			ДанныеОТрудовойДеятельности.Очистить();
			ДанныеОТрудовойДеятельности.Вставить("ДатаНачалаТрудовойДеятельности", 			 ПериодТрудовойДеятельности.ДатаНачала);
			ДанныеОТрудовойДеятельности.Вставить("ДатаОкончанияТрудовойДеятельности", 		 ПериодТрудовойДеятельности.ДатаОкончания);
			ДанныеОТрудовойДеятельности.Вставить("ДолжностьОрганизацияТрудовойДеятельности", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1, %2", ПериодТрудовойДеятельности.Должность, ПериодТрудовойДеятельности.Организация));
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаТрудовойДеятельности.Параметры, ДанныеОТрудовойДеятельности);
			
			ДокументРезультат.Вывести(ОбластьСтрокаТрудовойДеятельности);
			
		КонецЦикла; 
	Иначе	
		ДокументРезультат.Вывести(ОбластьСтрокаТрудовойДеятельности);
	КонецЕсли;

КонецПроцедуры

#Область ПодвалАттестационногоЛистаПодтверждениеКвалификации

Процедура ВывестиПодвалАттестационногоЛистаПодтверждениеКвалификации(ДокументРезультат, ОбластьПодвал, КомплектДанных)
	
	ДанныеДляПечати = КомплектДанных.ДанныеДляПечати;
	СоставКомиссии = КомплектДанных.СоставКомиссии;
	
	СпециальностиФизическогоЛица = КомплектДанных.СпециальностиФизическогоЛица;
	
	ДанныеПодвала = Новый Структура;
	ДанныеПодвала.Вставить("ФИОНачальникаОтделаКадров", 			ДанныеДляПечати.ФИОНачальникаОтделаКадров);
	ДанныеПодвала.Вставить("ОбщийТрудовойСтаж", 					АттестацииСотрудников.ПредставлениеСтажаСотрудникаДляАттестационногоЛиста(ДанныеДляПечати.ОбщийСтажЛет, ДанныеДляПечати.ОбщийСтажМесяцев));
	ДанныеПодвала.Вставить("ПодтверждаемаяКатегория", 				ДанныеДляПечати.ПодтверждаемаяКатегория);
	ДанныеПодвала.Вставить("ПодтверждаемаяСпециальность", 			ДанныеДляПечати.ПодтверждаемаяСпециальность);
	ДанныеПодвала.Вставить("СтажРаботыПоСпециальности", 			"");
	ДанныеПодвала.Вставить("ИмеющаясяКвалификационнаяКатегория", 	ПредставлениеКвалификационнаяКатегорияПоСпециальности(СпециальностиФизическогоЛица, ДанныеДляПечати.ПодтверждаемаяСпециальность, ДанныеДляПечати.ДатаЗаседания));    
	ДанныеПодвала.Вставить("ДругиеКвалификационныеКатегории", 		ПредставлениеДругиеКвалификационныеКатегории(СпециальностиФизическогоЛица, ДанныеДляПечати.ПодтверждаемаяСпециальность, ДанныеДляПечати.ДатаЗаседания));
	ДанныеПодвала.Вставить("УченыеСтепениИЗвания", 					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1, %2", ДанныеДляПечати.УченаяСтепень, ДанныеДляПечати.УченоеЗвание));
	ДанныеПодвала.Вставить("СведенияОНаучныхТрудах", 				"");
	ДанныеПодвала.Вставить("СведенияОбИзобретениях", 				"");
	ДанныеПодвала.Вставить("ЗнаниеЯзыков", 							ДанныеДляПечати.ЗнанияЯзыков);
	ДанныеПодвала.Вставить("АдресДляИнформирования", 				ДанныеДляПечати.АдресДляИнформированияПредставление);
	ДанныеПодвала.Вставить("ТелефонМобильный", 						ДанныеДляПечати.ТелефонМобильныйПредставление);
	ДанныеПодвала.Вставить("ЭлектроннаяПочта", 						"");
	ДанныеПодвала.Вставить("ДолжностьРуководителя", 				ДанныеДляПечати.ДолжностьРуководителя);
	ДанныеПодвала.Вставить("ФИОРуководителя", 						ДанныеДляПечати.ФИОРуководителя);
	ДанныеПодвала.Вставить("ФИОСекретаря", 							АттестацииСотрудников.ФИОЧленаКомиссииПоРоли(СоставКомиссии, Перечисления.РолиЧленовАттестационнойКомиссии.Секретарь, Истина));

	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ДанныеПодвала);
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры

Функция ПредставлениеКвалификационнаяКатегорияПоСпециальности(СпециальностиФизическогоЛица, ПодтверждаемаяСпециальность, ДатаЗаседания)
	
	ИмеющаясяКвалификационнаяКатегория = НСтр("ru = 'Не имеет'");
	
	Для Каждого СпециальностьФизическогоЛица Из СпециальностиФизическогоЛица Цикл
		Если СпециальностьФизическогоЛица.Специальность = ПодтверждаемаяСпециальность 
			И КвалификационнаяКатегорияДействует(СпециальностьФизическогоЛица, ДатаЗаседания) Тогда
			ИмеющаясяКвалификационнаяКатегория = СпециальностьФизическогоЛица.РазрядКатегория;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИмеющаясяКвалификационнаяКатегория; 	
	
КонецФункции

Функция ПредставлениеДругиеКвалификационныеКатегории(СпециальностиФизическогоЛица, ПодтверждаемаяСпециальность, ДатаЗаседания)
	
	ДругиеКвалификационныеКатегории = "";
	
	Для Каждого СпециальностьФизическогоЛица Из СпециальностиФизическогоЛица Цикл
		Если СпециальностьФизическогоЛица.Специальность <> ПодтверждаемаяСпециальность 
			И ЗначениеЗаполнено(СпециальностьФизическогоЛица.РазрядКатегория)
			И КвалификационнаяКатегорияДействует(СпециальностьФизическогоЛица, ДатаЗаседания) Тогда
			ДругиеКвалификационныеКатегории = ДругиеКвалификационныеКатегории 
											+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 (%2)", СпециальностьФизическогоЛица.Специальность, СпециальностьФизическогоЛица.РазрядКатегория) 
											+ Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ДругиеКвалификационныеКатегории, 1);
	
	Если ПустаяСтрока(ДругиеКвалификационныеКатегории) Тогда
	  ДругиеКвалификационныеКатегории = НСтр("ru = 'Не имеет'");
	КонецЕсли;
	
	Возврат ДругиеКвалификационныеКатегории; 	
	
КонецФункции

Функция КвалификационнаяКатегорияДействует(СпециальностьФизическогоЛица, ДатаЗаседания)
	Возврат НЕ ЗначениеЗаполнено(СпециальностьФизическогоЛица.ДействуетПо) Или СпециальностьФизическогоЛица.ДействуетПо > ДатаЗаседания;
КонецФункции
	
#КонецОбласти 

Функция ОбластиМакетаАттестационныйЛистСотрудникаПодтверждениеКвалификации()
	
	ОбластиМакета = Новый Структура;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьФормАттестацииСотрудников.ПФ_MXL_АттестационныйЛистПодтверждениеКвалификации");
	ОбластиМакета.Вставить("ОбластьШапка", 								Макет.ПолучитьОбласть("Шапка"));
	ОбластиМакета.Вставить("ОбластьШапкаСведенийОбОбразовании", 		Макет.ПолучитьОбласть("ШапкаСведенийОбОбразовании"));
	ОбластиМакета.Вставить("ОбластьСтрокаОбразования", 					Макет.ПолучитьОбласть("СтрокаОбразования"));
	ОбластиМакета.Вставить("ОбластьШапкаСведенийОТрудовойДеятельности", Макет.ПолучитьОбласть("ШапкаСведенийОТрудовойДеятельности"));
	ОбластиМакета.Вставить("ОбластьСтрокаТрудовойДеятельности", 		Макет.ПолучитьОбласть("СтрокаТрудовойДеятельности"));
	ОбластиМакета.Вставить("ОбластьПодвал", 							Макет.ПолучитьОбласть("Подвал"));
	
	Возврат ОбластиМакета;
	
КонецФункции

Функция КомплектДанныхДляПечатиАттестационногоЛистаПодтверждениеКвалификации(ДанныеДляПечати, ОбразованияФизическихЛиц, ТрудоваяДеятельностьФизическихЛиц, СпециальностиФизическихЛиц, СоставыКомиссий)
	
	КомплектДанных = Новый Структура;
	
	Отбор = Новый Структура("ФизическоеЛицо", ДанныеДляПечати.ФизическоеЛицо);
	
	КомплектДанных.Вставить("ДанныеДляПечати", 						ДанныеДляПечати);
	КомплектДанных.Вставить("ОбразованияФизическогоЛица", 			ОбразованияФизическихЛиц.НайтиСтроки(Отбор));
	КомплектДанных.Вставить("ТрудоваяДеятельностьФизическогоЛица", 	ТрудоваяДеятельностьФизическихЛиц.НайтиСтроки(Отбор));
	КомплектДанных.Вставить("СпециальностиФизическогоЛица", 		СпециальностиФизическихЛиц.НайтиСтроки(Отбор));
	КомплектДанных.Вставить("СоставКомиссии", 						СоставыКомиссий.Получить(ДанныеДляПечати.Ссылка));

	Возврат КомплектДанных;

КонецФункции

#Область ДанныеДляПечатиАттестационногоЛистаПодтверждениеКвалификации

Функция ДанныеДляПечатиАттестационногоЛистаПодтверждениеКвалификации(МенеджерВременныхТаблиц, ПриказыОбАттестации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	НеобходимыеКадровыеДанные = ИменаКадровыхДанныхНеобходимыхДляПечатиАттестационногоЛистаПодтверждениеКвалификации();
	СоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, НеобходимыеКадровыеДанные);
	СоздатьВТКадровыеДанныеОтветственныхЛицОрганизации(Запрос.МенеджерВременныхТаблиц, ПриказыОбАттестации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриказОбАттестацииСотрудники.Ссылка КАК Ссылка,
	|	ПриказОбАттестацииСотрудники.Сотрудник КАК Сотрудник,
	|	ПриказОбАттестацииСотрудники.Подразделение,
	|	ПриказОбАттестацииСотрудники.Специальность КАК ПодтверждаемаяСпециальность,
	|	ПриказОбАттестацииСотрудники.Категория КАК ПодтверждаемаяКатегория,
	|	ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания,
	|	Организации.НаименованиеПолное,
	|	Организации.НаименованиеСокращенное,
	|	ВТКадровыеДанныеРуководителей.ИОФамилия КАК ФИОРуководителя,
	|	ПриказОбАттестацииСотрудники.Ссылка.ДолжностьРуководителя,
	|	ВТКадровыеДанныеНачальниковОтделаКадров.ИОФамилия КАК ФИОНачальникаОтделаКадров,
	|	ВТКадровыеДанныеСотрудников.ФИОПолные,
	|	ВТКадровыеДанныеСотрудников.ДатаРождения,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеУчебноеЗаведение,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеОкончание,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеВидДокумента,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеСерия,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеНомер,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеДатаВыдачи,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеСпециальность,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеКвалификация,
	|	ВТКадровыеДанныеСотрудников.УченаяСтепень,
	|	ВТКадровыеДанныеСотрудников.УченоеЗвание,
	|	ВТКадровыеДанныеСотрудников.ОбщийСтажЛет,
	|	ВТКадровыеДанныеСотрудников.ОбщийСтажМесяцев,
	|	ВТКадровыеДанныеСотрудников.ЗнанияЯзыков,
	|	ВТКадровыеДанныеСотрудников.ДатаПриема,
	|	ВТКадровыеДанныеСотрудников.АдресДляИнформированияПредставление,
	|	ВТКадровыеДанныеСотрудников.ТелефонМобильныйПредставление,
	|	ВТКадровыеДанныеСотрудников.ФизическоеЛицо
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников.Сотрудники КАК ПриказОбАттестацииСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииЗаседанияКомиссии
	|		ПО ПриказОбАттестацииСотрудники.Ссылка = ПриказОбАттестацииЗаседанияКомиссии.Ссылка
	|			И ПриказОбАттестацииСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииЗаседанияКомиссии.ИдентификаторСтрокиЗаседаниеКомиссии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|		ПО ПриказОбАттестацииСотрудники.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|			И (ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания = ВТКадровыеДанныеСотрудников.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПриказОбАттестацииСотрудники.Ссылка.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственныхЛицОрганизации КАК ВТКадровыеДанныеРуководителей
	|		ПО ПриказОбАттестацииСотрудники.Ссылка.Руководитель = ВТКадровыеДанныеРуководителей.ФизическоеЛицо
	|			И (ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания = ВТКадровыеДанныеРуководителей.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственныхЛицОрганизации КАК ВТКадровыеДанныеНачальниковОтделаКадров
	|		ПО ПриказОбАттестацииСотрудники.Ссылка.НачальникОтделаКадров = ВТКадровыеДанныеНачальниковОтделаКадров.ФизическоеЛицо
	|			И (ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания = ВТКадровыеДанныеНачальниковОтделаКадров.Период)
	|ГДЕ
	|	ПриказОбАттестацииСотрудники.Ссылка В(&ПриказыОбАттестации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НаправлениеНаВнешнююАттестацию.Ссылка,
	|	НаправлениеНаВнешнююАттестацию.Сотрудник,
	|	НаправлениеНаВнешнююАттестацию.Подразделение,
	|	НаправлениеНаВнешнююАттестацию.Специальность,
	|	НаправлениеНаВнешнююАттестацию.Категория,
	|	НаправлениеНаВнешнююАттестацию.ДатаАттестации,
	|	Организации.НаименованиеПолное,
	|	Организации.НаименованиеСокращенное,
	|	ВТКадровыеДанныеРуководителей.ИОФамилия,
	|	НаправлениеНаВнешнююАттестацию.Ссылка.ДолжностьРуководителя,
	|	ВТКадровыеДанныеНачальниковОтделаКадров.ИОФамилия,
	|	ВТКадровыеДанныеСотрудников.ФИОПолные,
	|	ВТКадровыеДанныеСотрудников.ДатаРождения,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеУчебноеЗаведение,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеОкончание,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеВидДокумента,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеСерия,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеНомер,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеДатаВыдачи,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеСпециальность,
	|	ВТКадровыеДанныеСотрудников.ВысшееОбразованиеКвалификация,
	|	ВТКадровыеДанныеСотрудников.УченаяСтепень,
	|	ВТКадровыеДанныеСотрудников.УченоеЗвание,
	|	ВТКадровыеДанныеСотрудников.ОбщийСтажЛет,
	|	ВТКадровыеДанныеСотрудников.ОбщийСтажМесяцев,
	|	ВТКадровыеДанныеСотрудников.ЗнанияЯзыков,
	|	ВТКадровыеДанныеСотрудников.ДатаПриема,
	|	ВТКадровыеДанныеСотрудников.АдресДляИнформированияПредставление,
	|	ВТКадровыеДанныеСотрудников.ТелефонМобильныйПредставление,
	|	ВТКадровыеДанныеСотрудников.ФизическоеЛицо
	|ИЗ
	|	Документ.НаправлениеНаВнешнююАттестацию.Сотрудники КАК НаправлениеНаВнешнююАттестацию
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|		ПО НаправлениеНаВнешнююАттестацию.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|			И НаправлениеНаВнешнююАттестацию.ДатаАттестации = ВТКадровыеДанныеСотрудников.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО НаправлениеНаВнешнююАттестацию.Ссылка.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственныхЛицОрганизации КАК ВТКадровыеДанныеРуководителей
	|		ПО НаправлениеНаВнешнююАттестацию.Ссылка.Руководитель = ВТКадровыеДанныеРуководителей.ФизическоеЛицо
	|			И НаправлениеНаВнешнююАттестацию.ДатаАттестации = ВТКадровыеДанныеРуководителей.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственныхЛицОрганизации КАК ВТКадровыеДанныеНачальниковОтделаКадров
	|		ПО НаправлениеНаВнешнююАттестацию.Ссылка.НачальникОтделаКадров = ВТКадровыеДанныеНачальниковОтделаКадров.ФизическоеЛицо
	|			И НаправлениеНаВнешнююАттестацию.ДатаАттестации = ВТКадровыеДанныеНачальниковОтделаКадров.Период
	|ГДЕ
	|	НаправлениеНаВнешнююАттестацию.Ссылка В(&ПриказыОбАттестации)";
	
	Результат = Запрос.Выполнить();

	Возврат Результат.Выбрать();
	
КонецФункции

Функция ИменаКадровыхДанныхНеобходимыхДляПечатиАттестационногоЛистаПодтверждениеКвалификации()
	
	КадровыеДанные = "ФизическоеЛицо,ФИОПолные,ДатаРождения,ЗнанияЯзыков,ДатаПриема,АдресДляИнформированияПредставление,ТелефонМобильныйПредставление";
	КадровыеДанные = КадровыеДанные + ",ВысшееОбразованиеУчебноеЗаведение,ВысшееОбразованиеОкончание,ВысшееОбразованиеСпециальность,ВысшееОбразованиеКвалификация,ВысшееОбразованиеВидДокумента,ВысшееОбразованиеСерия,ВысшееОбразованиеНомер,ВысшееОбразованиеДатаВыдачи,УченаяСтепень,УченоеЗвание";
	КадровыеДанные = КадровыеДанные + ",ОбщийСтажЛет,ОбщийСтажМесяцев";
	Возврат КадровыеДанные;

КонецФункции

Функция ОбразованияФизическихЛицДляПечатиАттестационногоЛистаПодтверждениеКвалификации(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбразованияФизическихЛиц.ФизическоеЛицо,
	|	ОбразованияФизическихЛиц.УчебноеЗаведение,
	|	ОбразованияФизическихЛиц.Начало,
	|	ОбразованияФизическихЛиц.Окончание,
	|	ОбразованияФизическихЛиц.Квалификация,
	|	ОбразованияФизическихЛиц.Специальность,
	|	ОбразованияФизическихЛиц.НаименованиеКурса,
	|	ОбразованияФизическихЛиц.ВидОбразования,
	|	ОбразованияФизическихЛиц.ВидПослевузовскогоОбразования,
	|	ОбразованияФизическихЛиц.ВидДополнительногоОбучения
	|ИЗ
	|	ВТОбразованияФизическихЛиц КАК ОбразованияФизическихЛиц
	|ГДЕ
	|	ОбразованияФизическихЛиц.ВидОбразования В (ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ВысшееОбразованиеПодготовкаКадровВысшейКвалификации), ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ПослевузовскоеОбразование))
	|	И ОбразованияФизическихЛиц.ВидПослевузовскогоОбразования <> ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОбразованияФизическихЛиц.ФизическоеЛицо,
	|	ОбразованияФизическихЛиц.УчебноеЗаведение,
	|	ОбразованияФизическихЛиц.Начало,
	|	ОбразованияФизическихЛиц.Окончание,
	|	ОбразованияФизическихЛиц.Квалификация,
	|	ОбразованияФизическихЛиц.Специальность,
	|	ОбразованияФизическихЛиц.НаименованиеКурса,
	|	ОбразованияФизическихЛиц.ВидОбразования,
	|	ОбразованияФизическихЛиц.ВидПослевузовскогоОбразования,
	|	ОбразованияФизическихЛиц.ВидДополнительногоОбучения
	|ИЗ
	|	ВТОбразованияФизическихЛиц КАК ОбразованияФизическихЛиц
	|ГДЕ
	|	ОбразованияФизическихЛиц.ВидДополнительногоОбучения В (ЗНАЧЕНИЕ(Перечисление.ВидыПрофессиональнойПодготовки.ПовышениеКвалификации), ЗНАЧЕНИЕ(Перечисление.ВидыПрофессиональнойПодготовки.Переподготовка))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОбразованияФизическихЛиц.ФизическоеЛицо,
	|	ОбразованияФизическихЛиц.УчебноеЗаведение,
	|	ОбразованияФизическихЛиц.Начало,
	|	ОбразованияФизическихЛиц.Окончание,
	|	ОбразованияФизическихЛиц.Квалификация,
	|	ОбразованияФизическихЛиц.Специальность,
	|	ОбразованияФизическихЛиц.НаименованиеКурса,
	|	ОбразованияФизическихЛиц.ВидОбразования,
	|	ОбразованияФизическихЛиц.ВидПослевузовскогоОбразования,
	|	ОбразованияФизическихЛиц.ВидДополнительногоОбучения
	|ИЗ
	|	ВТОбразованияФизическихЛиц КАК ОбразованияФизическихЛиц
	|ГДЕ
	|	ОбразованияФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ДополнительноеПрофессиональноеОбразование)
	|	И ОбразованияФизическихЛиц.Специальность <> ЗНАЧЕНИЕ(Справочник.КлассификаторСпециальностейПоОбразованию.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбразованияФизическихЛиц.ФизическоеЛицо,
	|	ОбразованияФизическихЛиц.Окончание";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ТрудоваяДеятельностьФизическихЛицДляПечатиАттестационногоЛистаПодтверждениеКвалификации(МенеджерВременныхТаблиц)
	
	ОписаниеВТ = Новый Структура("ИмяВременнойТаблицыОтборовФизическихЛиц,ИмяПоляФизическоеЛицо", "ВТСотрудники", "ФизическоеЛицо");
	Запрос = КадровыйУчетРасширенный.ЗапросВТТрудоваяДеятельностьФизическихЛиц(Истина, ОписаниеВТ);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТрудоваяДеятельностьФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТТрудоваяДеятельностьФизическихЛиц.ДатаНачала,
	|	ВТТрудоваяДеятельностьФизическихЛиц.ДатаОкончания,
	|	ВТТрудоваяДеятельностьФизическихЛиц.Организация,
	|	ВТТрудоваяДеятельностьФизическихЛиц.Должность
	|ИЗ
	|	ВТТрудоваяДеятельностьФизическихЛиц КАК ВТТрудоваяДеятельностьФизическихЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТТрудоваяДеятельностьФизическихЛиц.ФизическоеЛицо,
	|	ВТТрудоваяДеятельностьФизическихЛиц.ДатаНачала";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция СпециальностиФизическихЛицДляПечатиАттестационногоЛистаПодтверждениеКвалификации(МенеджерВременныхТаблиц)
	
	ОписаниеВТ = Новый Структура("ИмяВременнойТаблицыОтборовФизическихЛиц,ИмяПоляПериод,ИмяПоляФизическоеЛицо", "ВТСотрудники", "Период", "ФизическоеЛицо");
	Запрос = КадровыйУчетРасширенный.ЗапросВТСпециальностиФизическихЛиц(Истина, ОписаниеВТ);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСпециальностиФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТСпециальностиФизическихЛиц.Специальность,
	|	ВТСпециальностиФизическихЛиц.РазрядКатегория,
	|	ВТСпециальностиФизическихЛиц.ДействуетПо
	|ИЗ
	|	ВТСпециальностиФизическихЛиц КАК ВТСпециальностиФизическихЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТСпециальностиФизическихЛиц.ФизическоеЛицо";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции
	
#КонецОбласти

#КонецОбласти

Функция ВидАттестацииПриказовОбАттестации(ПриказыОбАттестации)
	
	ВидАттестации = Неопределено;
	
	ВидыАттестацийПриказовОбАттестации = ВидыАттестацииПриказовОбАттестации(ПриказыОбАттестации);
	
	Если НесколькоВидовАттестации(ВидыАттестацийПриказовОбАттестации) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Единовременная печать аттестационных листов по нескольким видам аттестации не поддерживается.'"));
	Иначе
		ВидыАттестацийПриказовОбАттестации.Следующий();
		ВидАттестации = ВидыАттестацийПриказовОбАттестации.ВидАттестации;	
	КонецЕсли;
	
	Возврат ВидАттестации	
	
КонецФункции

Функция ВидыАттестацииПриказовОбАттестации(ПриказыОбАттестации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриказОбАттестацииСотрудников.ВидАттестации
	|ПОМЕСТИТЬ ВТВидыАттестаций
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников КАК ПриказОбАттестацииСотрудников
	|ГДЕ
	|	ПриказОбАттестацииСотрудников.Ссылка В(&ПриказыОбАттестации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НаправлениеНаВнешнююАттестацию.ВидАттестации
	|ИЗ
	|	Документ.НаправлениеНаВнешнююАттестацию КАК НаправлениеНаВнешнююАттестацию
	|ГДЕ
	|	НаправлениеНаВнешнююАттестацию.Ссылка В(&ПриказыОбАттестации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыАттестаций.ВидАттестации
	|ИЗ
	|	ВТВидыАттестаций КАК ВТВидыАттестаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВидыАттестаций.ВидАттестации";
	
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	Результат = Запрос.Выполнить();

	Возврат Результат.Выбрать();
	
КонецФункции

Функция НесколькоВидовАттестации(ВидыАттестаций)
	
	Возврат ВидыАттестаций.Количество() > 1;

КонецФункции

#КонецОбласти

Процедура СоздатьВТСотрудникиПриказовОбАттестации(МенеджерВременныхТаблиц, ПриказыОбАттестации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриказОбАттестацииСотрудниковСотрудники.Сотрудник,
	|	ПриказОбАттестацииСотрудниковСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ДатаЗаседания КАК Период
	|ПОМЕСТИТЬ ВТСотрудникиПриказов
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников.Сотрудники КАК ПриказОбАттестацииСотрудниковСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииСотрудниковЗаседанияКомиссии
	|		ПО ПриказОбАттестацииСотрудниковСотрудники.Ссылка = ПриказОбАттестацииСотрудниковЗаседанияКомиссии.Ссылка
	|			И ПриказОбАттестацииСотрудниковСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ИдентификаторСтрокиЗаседаниеКомиссии
	|ГДЕ
	|	ПриказОбАттестацииСотрудниковСотрудники.Ссылка В(&ПриказыОбАттестации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаправлениеНаВнешнююАттестациюСотрудники.Сотрудник,
	|	НаправлениеНаВнешнююАттестациюСотрудники.Сотрудник.ФизическоеЛицо,
	|	НаправлениеНаВнешнююАттестациюСотрудники.ДатаАттестации
	|ИЗ
	|	Документ.НаправлениеНаВнешнююАттестацию.Сотрудники КАК НаправлениеНаВнешнююАттестациюСотрудники
	|ГДЕ
	|	НаправлениеНаВнешнююАттестациюСотрудники.Ссылка В(&ПриказыОбАттестации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСотрудникиПриказов.Сотрудник,
	|	ВТСотрудникиПриказов.ФизическоеЛицо,
	|	ВТСотрудникиПриказов.Период
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	ВТСотрудникиПриказов КАК ВТСотрудникиПриказов";
	
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, КадровыеДанные = "ФИОПолные")
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(Описатель, Истина, КадровыеДанные);
	
КонецПроцедуры

Процедура СоздатьВТКадровыеДанныеОтветственныхЛицОрганизации(МенеджерВременныхТаблиц, ПриказыОбАттестации, КадровыеДанные = "ФИОПолные,ИОФамилия")
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриказОбАттестацииСотрудников.Руководитель КАК ФизическоеЛицо,
	|	ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ДатаЗаседания КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаОбщийСписок
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииСотрудниковЗаседанияКомиссии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников КАК ПриказОбАттестацииСотрудников
	|		ПО ПриказОбАттестацииСотрудниковЗаседанияКомиссии.Ссылка = ПриказОбАттестацииСотрудников.Ссылка
	|ГДЕ
	|	ПриказОбАттестацииСотрудников.Ссылка В(&ПриказыОбАттестации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриказОбАттестацииСотрудников.НачальникОтделаКадров,
	|	ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ДатаЗаседания
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииСотрудниковЗаседанияКомиссии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников КАК ПриказОбАттестацииСотрудников
	|		ПО ПриказОбАттестацииСотрудниковЗаседанияКомиссии.Ссылка = ПриказОбАттестацииСотрудников.Ссылка
	|ГДЕ
	|	ПриказОбАттестацииСотрудников.Ссылка В(&ПриказыОбАттестации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаправлениеНаВнешнююАттестацию.Руководитель,
	|	НаправлениеНаВнешнююАттестациюСотрудники.ДатаАттестации
	|ИЗ
	|	Документ.НаправлениеНаВнешнююАттестацию.Сотрудники КАК НаправлениеНаВнешнююАттестациюСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НаправлениеНаВнешнююАттестацию КАК НаправлениеНаВнешнююАттестацию
	|		ПО НаправлениеНаВнешнююАттестациюСотрудники.Ссылка = НаправлениеНаВнешнююАттестацию.Ссылка
	|ГДЕ
	|	НаправлениеНаВнешнююАттестацию.Ссылка В(&ПриказыОбАттестации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаправлениеНаВнешнююАттестацию.НачальникОтделаКадров,
	|	НаправлениеНаВнешнююАттестациюСотрудники.ДатаАттестации
	|ИЗ
	|	Документ.НаправлениеНаВнешнююАттестацию.Сотрудники КАК НаправлениеНаВнешнююАттестациюСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НаправлениеНаВнешнююАттестацию КАК НаправлениеНаВнешнююАттестацию
	|		ПО НаправлениеНаВнешнююАттестациюСотрудники.Ссылка = НаправлениеНаВнешнююАттестацию.Ссылка
	|ГДЕ
	|	НаправлениеНаВнешнююАттестацию.Ссылка В(&ПриказыОбАттестации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТФизическиеЛицаОбщийСписок.ФизическоеЛицо,
	|	ВТФизическиеЛицаОбщийСписок.Период
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТФизическиеЛицаОбщийСписок КАК ВТФизическиеЛицаОбщийСписок
	|ГДЕ
	|	ВТФизическиеЛицаОбщийСписок.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	Запрос.Выполнить();
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	Описатель.ИмяВТКадровыеДанныеФизическихЛиц = "ВТКадровыеДанныеОтветственныхЛицОрганизации";
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(Описатель, Истина, "ФИОПолные,ИОФамилия");
	
КонецПроцедуры

Функция НовыйДокументРезультат(КлючПараметровПечати, Ориентация)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ДокументРезультат.ОриентацияСтраницы 	= Ориентация;
	ДокументРезультат.АвтоМасштаб 			= Истина;
	ДокументРезультат.КлючПараметровПечати 	= КлючПараметровПечати;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция НаименованиеОрганизации(Выборка)
	Возврат ?(ЗначениеЗаполнено(Выборка.НаименованиеПолное), Выборка.НаименованиеПолное, Выборка.НаименованиеСокращенное);
КонецФункции 
	
#КонецОбласти

#КонецЕсли