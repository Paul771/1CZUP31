
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПриПолученииДанныхНаСервере();
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанПодчиненныйДокумент" И Источник = ДокументОснованиеСсылка Тогда
		ПрочитатьИнформациюОДокументахЗамещения();
		УстановитьСвойстваЭлементовФормы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИнфоНадписьПодчиненныхОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПерейтиПоСсылке(НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнфоНадписьПодвалОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураСсылки = ЦепочкиДокументовКлиентСервер.СтруктураНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
	ДокументСсылка = ЦепочкиДокументовВызовСервера.ДокументПоСсылке(СтруктураСсылки.ИмяМетаданных, СтруктураСсылки.НавигационнаяСсылка);
	
	ПараметрыФормы = Новый Структура("ТекущийДокумент, СформироватьПриОткрытии", ДокументСсылка, Истина);
	ОткрытьФорму("Обработка.ЦепочкиКадровыхДокументов.Форма", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнфоНадписьОснованияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПерейтиПоСсылке(НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Замещение_Совмещение(Команда)
	СоздатьПодчиненныйДокумент("Совмещение");
КонецПроцедуры

&НаКлиенте
Процедура Замещение_Подработка(Команда)
	СоздатьПодчиненныйДокумент("НазначениеПодработки");
КонецПроцедуры

&НаКлиенте
Процедура Замещение_КадровыйПеревод(Команда)
	СоздатьПодчиненныйДокумент("КадровыйПеревод");
КонецПроцедуры

&НаКлиенте
Процедура Замещение_ПриемНаРаботу(Команда)
	СоздатьПодчиненныйДокумент("ПриемНаРаботу");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьПодчиненныйДокумент(ВидДокумента)

	Закрыть();
	
	ПараметрыФормы = Новый Структура;
	
	ЗаполнитьЗначенияЗаполненияНаСервере(ПараметрыФормы, ВидДокумента);
	ПараметрыФормы.Вставить("ДокументОснование", ДокументОснованиеСсылка);
	
	Если ВидДокумента = "КадровыйПеревод" Тогда
		ПараметрыФормы.Вставить("ПереводНаПозицию", ПозицияШР);
		Если ПараметрыФормы.ЗначенияЗаполнения.Свойство("Подразделение") Тогда
			ПараметрыФормы.Вставить("ПереводВПодразделение", ПараметрыФормы.ЗначенияЗаполнения.Подразделение);
		КонецЕсли;
		Если ПараметрыФормы.ЗначенияЗаполнения.Свойство("Должность") Тогда
			ПараметрыФормы.Вставить("ПереводНаДолжность", ПараметрыФормы.ЗначенияЗаполнения.Должность);
		КонецЕсли;
	КонецЕсли;
	
	ОткрытьФорму("Документ." + ВидДокумента + ".ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()

	ДокументОснованиеСсылка = Параметры.ДокументСсылка;
	
	Если Параметры.ФормироватьПараметрыПоСсылке Тогда
		УстановитьРеквизитыФормыПоДокументу();
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Сотрудник,ДатаНачала,ДатаОкончания");
	КонецЕсли;
	
	// Если позиция ШР передана явно - указываем ее, если нет, определяем по кадровым данным.
	Если ЗначениеЗаполнено(Параметры.ТекущаяПозицияШР) Тогда
		ПозицияШР = Параметры.ТекущаяПозицияШР;
	Иначе
		ПозицияШР = ДолжностьПоШтатномуРасписаниюСотрудника(Сотрудник, ДатаНачала);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаВводДокументов",
		"Доступность",
		НЕ Параметры.ФормироватьПараметрыПоСсылке);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДекорацияПодсказкаПодчиненных",
		"Видимость",
		НЕ Параметры.ФормироватьПараметрыПоСсылке);
	
	ВидОтсутствия = ЦепочкиДокументов.ОписаниеДокументовЗамещения(ДокументОснованиеСсылка).КраткоеНазваниеРодительныйПадеж;
	
	УстановитьСотрудникИО();
	
	ПрочитатьИнформациюОДокументахЗамещения();
		
КонецПроцедуры

&НаСервере
Процедура ПрочитатьИнформациюОДокументахЗамещения()

	МассивПодчиненныхДокументов = ОбщегоНазначения.ТаблицаЗначенийВМассив(ЦепочкиДокументов.ПодчиненныеДокументы(ДокументОснованиеСсылка));
	ПодчиненныеДокументы = Новый ФиксированныйМассив(МассивПодчиненныхДокументов);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()
	
	ЭтаФорма.Заголовок = НСтр("ru = 'Замещение на период'") + " " + ВидОтсутствия + " " + СотрудникИОРодительный;
	
	УстановитьИнфоНадписьОснования();
	УстановитьИнфоНадписьПодчиненных();
	УстановитьИнфоНадписьПодвал();
	
	УстановитьПодсказкиКомандам();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИнфоНадписьПодчиненных()

	СтрокиПодчиненных = МассивСтрокИнфоНадписиПодчиненных();
	ИнфоНадписьПодчиненных = Новый ФорматированнаяСтрока(СтрокиПодчиненных);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИнфоНадписьПодчиненных",
		"Видимость",
		СтрокиПодчиненных.Количество() > 0);
	
КонецПроцедуры

&НаСервере
Функция МассивСтрокИнфоНадписиПодчиненных()
	
	ТекстНадписи = Новый Массив;
	
	Если ПодчиненныеДокументы.Количество() = 0 Тогда
		Возврат ТекстНадписи;
	КонецЕсли;	
	
	ТекстНадписи.Добавить(НСтр("ru = 'Обязанности'"));
	ТекстНадписи.Добавить(" ");
	ТекстНадписи.Добавить(СотрудникИОРодительный);
	ТекстНадписи.Добавить(" ");
	Если ПодчиненныеДокументы.Количество() = 1 Тогда
		ТекстНадписи.Добавить(НСтр("ru = 'исполняет'"));
	Иначе	
		ТекстНадписи.Добавить(НСтр("ru = 'исполняют'"));
	КонецЕсли;
	ТекстНадписи.Добавить(" ");
	
	Для каждого ПодчиненныйДокумент Из ПодчиненныеДокументы Цикл
		Если ПодчиненныеДокументы.Найти(ПодчиненныйДокумент) <> 0 Тогда
			ТекстНадписи.Добавить(", ");
		КонецЕсли;
		
		СсылкаСотрудника = ЦепочкиДокументовФормы.ИнфоНавигационнаяСсылка("ОткрытьДокумент", ПодчиненныйДокумент.Подчиненный);
		
		ТекстСотрудника = ПодчиненныйДокумент.СотрудникПодчиненногоФамилияИО;
		ТекстСотрудника = ТекстСотрудника + " (";
		ТекстСотрудника = ТекстСотрудника + ЦепочкиДокументов.ОписаниеДокументовЗамещения(ПодчиненныйДокумент.Подчиненный).КраткоеНазваниеИменительныйПадеж;
		ТекстСотрудника = ТекстСотрудника + ")";
		ТекстНадписи.Добавить(Новый ФорматированнаяСтрока(ТекстСотрудника,,,, СсылкаСотрудника));
	КонецЦикла; 
	
	ТекстНадписи.Добавить(".");

	Возврат ТекстНадписи;
	
КонецФункции

&НаСервере
Процедура УстановитьИнфоНадписьОснования()

	СтрокиОснования = МассивСтрокИнфоНадписиОснования();
	ИнфоНадписьОснования = Новый ФорматированнаяСтрока(СтрокиОснования);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИнфоНадписьОснования",
		"Видимость",
		СтрокиОснования.Количество() > 0);
		
КонецПроцедуры

&НаСервере
Функция МассивСтрокИнфоНадписиОснования()
	
	ТекстНадписи = Новый Массив;
	
	ДокументыОснования = ЦепочкиДокументов.ДокументыОснования(ДокументОснованиеСсылка);
	Если ДокументыОснования.Количество() = 0 Тогда
		Возврат ТекстНадписи;
	КонецЕсли;
	
	ИнфоДокументОснование = ДокументыОснования[0];
	
	ТекстНадписи.Добавить(СотрудникИО);
	ТекстНадписи.Добавить(" ");
	ТекстНадписи.Добавить(НСтр("ru = 'замещает'"));
	ТекстНадписи.Добавить(" ");
	
	СсылкаСотрудника = ЦепочкиДокументовФормы.ИнфоНавигационнаяСсылка("ОткрытьДокумент", ИнфоДокументОснование.Основание);
	
	ТекстСотрудника = ИнфоДокументОснование.СотрудникОснованияФамилияИО;
	ТекстСотрудника = ЦепочкиДокументов.ФамилияИОПадеж(ТекстСотрудника, 4);
	ТекстСотрудника = ТекстСотрудника + " (";
	ТекстСотрудника = ТекстСотрудника + ЦепочкиДокументов.ОписаниеДокументовЗамещения(ИнфоДокументОснование.Основание).КраткоеНазваниеИменительныйПадеж;
	ТекстСотрудника = ТекстСотрудника + ")";
	ТекстНадписи.Добавить(Новый ФорматированнаяСтрока(ТекстСотрудника,,,, СсылкаСотрудника));
		
	ТекстНадписи.Добавить(".");

	Возврат ТекстНадписи;
	
КонецФункции

&НаСервере
Процедура УстановитьИнфоНадписьПодвал()

	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("Полную картину связей документов замещения Вы можете получить, сформировав ");
	
	СсылкаНаОтчет = ЦепочкиДокументовФормы.ИнфоНавигационнаяСсылка("ОткрытьОтчет", ДокументОснованиеСсылка);
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока("отчет",,,,СсылкаНаОтчет));
	
	ИнфоНадписьПодвал = Новый ФорматированнаяСтрока(МассивСтрок);
		
КонецПроцедуры

&НаСервере
Процедура УстановитьПодсказкиКомандам()

	Команды.Найти("Замещение_ПриемНаРаботу").Подсказка = 
		СтрЗаменить(Команды.Найти("Замещение_ПриемНаРаботу").Подсказка, "%ВидОтсутствия%", ВидОтсутствия);
	Команды.Найти("Замещение_КадровыйПеревод").Подсказка = 
		СтрЗаменить(Команды.Найти("Замещение_КадровыйПеревод").Подсказка, "%ВидОтсутствия%", ВидОтсутствия);
	Команды.Найти("Замещение_Совмещение").Подсказка = 
		СтрЗаменить(Команды.Найти("Замещение_Совмещение").Подсказка, "%ВидОтсутствия%", ВидОтсутствия);
	Команды.Найти("Замещение_Подработка").Подсказка = 
		СтрЗаменить(Команды.Найти("Замещение_Подработка").Подсказка, "%ВидОтсутствия%", ВидОтсутствия);
		
КонецПроцедуры

&НаСервере
Процедура УстановитьСотрудникИО()

	ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сотрудник, "ФизическоеЛицо");
	КадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(Ложь, ФизическоеЛицо, "ФамилияИО", ТекущаяДатаСеанса());
	
	Если КадровыеДанныеФизическихЛиц.Количество() > 0 Тогда
		СотрудникИО = КадровыеДанныеФизическихЛиц[0].ФамилияИО;
		СотрудникИОРодительный = ЦепочкиДокументов.ФамилияИОПадеж(СотрудникИО, 2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиПоСсылке(НавигационнаяСсылка)

	Закрыть();
	ЦепочкиДокументовКлиент.ОткрытьФормуДокументаЗамещения(ЭтаФорма, ЦепочкиДокументовКлиентСервер.СтруктураНавигационнойСсылки(НавигационнаяСсылка));

КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизитыФормыПоДокументу()

	ОписаниеДокумента = ЦепочкиДокументов.ОписаниеДокументовЗамещения(ДокументОснованиеСсылка);
	
	ТекстРеквизитов = ОписаниеДокумента.ИмяРеквизитаСотрудник + "," + ОписаниеДокумента.ИмяРеквизитаДатаНачалаСобытия + "," + ОписаниеДокумента.ИмяРеквизитаДатаОкончанияСобытия;
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснованиеСсылка, ТекстРеквизитов);
	
	Сотрудник = СтруктураРеквизитов[ОписаниеДокумента.ИмяРеквизитаСотрудник];
	ДатаНачала = СтруктураРеквизитов[ОписаниеДокумента.ИмяРеквизитаДатаНачалаСобытия];
	ДатаОкончания = СтруктураРеквизитов[ОписаниеДокумента.ИмяРеквизитаДатаОкончанияСобытия];

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияЗаполненияНаСервере(ПараметрыФормы, ВидДокумента)

	ЗначенияЗаполнения = Новый Структура;
	Если ЗначениеЗаполнено(ПозицияШР) Тогда
		СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПозицияШР, "Владелец, Подразделение, Должность");
		ЗначенияЗаполнения.Вставить("Организация", СтруктураРеквизитов.Владелец);
		ЗначенияЗаполнения.Вставить("Подразделение", СтруктураРеквизитов.Подразделение);
		ЗначенияЗаполнения.Вставить("Должность", СтруктураРеквизитов.Должность);
	КонецЕсли;
	
	Если ВидДокумента = "Совмещение" Тогда
		ЗначенияЗаполнения.Вставить("СовмещаемаяДолжность", ПозицияШР);
	Иначе
		ЗначенияЗаполнения.Вставить("ДолжностьПоШтатномуРасписанию", ПозицияШР);
	КонецЕсли;
	
	Если ВидДокумента = "НазначениеПодработки" ИЛИ ВидДокумента = "Совмещение" Тогда
		ЗначенияЗаполнения.Вставить("ОтсутствующийСотрудник", Сотрудник);
	КонецЕсли;
	
	Если ВидДокумента = "ПриемНаРаботу" Тогда
		ЗначенияЗаполнения.Вставить("ДатаПриема", ДатаНачала);
	Иначе
		ЗначенияЗаполнения.Вставить("ДатаНачала", ДатаНачала);
	КонецЕсли;
	
	Если ВидДокумента = "ПриемНаРаботу" Тогда
		ЗначенияЗаполнения.Вставить("ДатаЗавершенияТрудовогоДоговора", ДатаОкончания);
		Если ЗначениеЗаполнено(ДатаОкончания) Тогда
			ЗначенияЗаполнения.Вставить("СрочныйДоговор", Истина);
		КонецЕсли;
	Иначе
		ЗначенияЗаполнения.Вставить("ДатаОкончания", ДатаОкончания);
	КонецЕсли;
	
	Если ВидДокумента = "Совмещение" Тогда
		ЗначенияЗаполнения.Вставить("ПричинаСовмещения", ПредопределенноеЗначение("Перечисление.ПричиныСовмещения.СовмещениеПрофессийДолжностей"));
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
КонецПроцедуры

&НаСервере
Функция ДолжностьПоШтатномуРасписаниюСотрудника(Сотрудник, ДатаНачала)

	КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Ложь, Сотрудник, "ДолжностьПоШтатномуРасписанию", ДатаНачала);
	Если КадровыеДанные.Количество() > 0 Тогда
		Возврат КадровыеДанные[0].ДолжностьПоШтатномуРасписанию;
	Иначе
		Возврат ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ШтатноеРасписание.ПустаяСсылка");
	КонецЕсли;

КонецФункции

#КонецОбласти
