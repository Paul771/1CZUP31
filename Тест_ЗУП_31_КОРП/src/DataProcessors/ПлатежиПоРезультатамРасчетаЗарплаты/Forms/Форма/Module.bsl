
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияДляЗаполнения = Новый Структура("Организация, Месяц", "Организация", "МесяцНачисления");
	ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "МесяцНачисления", "МесяцНачисленияСтрокой");
	
	ОбновитьНаСервере();
	
	ВывестиКомандыПечати();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "МесяцНачисления", "МесяцНачисленияСтрокой");
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "МесяцНачисления", "МесяцНачисленияСтрокой", Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт 
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "МесяцНачисления", "МесяцНачисленияСтрокой", Направление);
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент,
	Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент,
	Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#Область ОбработчикиСобытийТаблицФормы

&НаКлиенте
Процедура ВыплатаЗарплатыНаличнымиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ВыплатаЗарплатыЧерезБанкВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Напечатать(Команда)
	ИмяМенеджераПечати = "Обработка.ПлатежиПоРезультатамРасчетаЗарплаты";
	
	ОбъектыПечати = Новый Массив;
	ОбъектыПечати.Добавить(Организация);
	ОбъектыПечати.Добавить(МесяцНачисления);
	ОбъектыПечати.Добавить(ОбщийИтог);
	ОбъектыПечати.Добавить(ВыплатаЗарплатыНаличными);
	ОбъектыПечати.Добавить(ВыплатаЗарплатыЧерезБанк);
	ОбъектыПечати.Добавить(Налоги);
	ОбъектыПечати.Добавить(СтраховыеВзносы);
	ОбъектыПечати.Добавить(УдержанияПоИсполнительнымДокументам);
	ОбъектыПечати.Добавить(УдержанияВПользуТретьихЛиц);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ИмяМенеджераПечати, Команда.Имя, ОбъектыПечати, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНаСервере()
	
	// Необходимость проверки обусловлена включением привилегированного режима.
	Если Не ЕстьДоступКДаннымОрганизации() Тогда
		
		ЭтаФорма.ВыплатаЗарплатыНаличными.Очистить();
		ЭтаФорма.ВыплатаЗарплатыЧерезБанк.Очистить();
		ЭтаФорма.Налоги.Очистить();
		ЭтаФорма.СтраховыеВзносы.Очистить();
		ЭтаФорма.УдержанияПоИсполнительнымДокументам.Очистить();
		ЭтаФорма.УдержанияВПользуТретьихЛиц.Очистить();
		ЭтаФорма.ИтогВыплатаЗарплатыНаличными = 0;
		ЭтаФорма.ИтогВыплатаЗарплатыЧерезБанк = 0;
		ЭтаФорма.ИтогНалоги = 0;
		ЭтаФорма.ИтогСтраховыеВзносы = 0;
		ЭтаФорма.ИтогУдержанияПоИсполнительнымДокументам = 0;
		ЭтаФорма.ИтогАгентаУдержанияПоИсполнительнымДокументам = 0;
		ЭтаФорма.ИтогУдержанияВПользуТретьихЛиц = 0;
		ЭтаФорма.ОбщийИтог = 0;
		
		СтрокаПодстановки = НСтр("ru = 'Получение данных организации %1 запрещено для текущего пользователя.'");
		СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаПодстановки, ЭтаФорма.Организация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
		
	КонецЕсли;

	ЭтаФорма.ОбщийИтог = 0;

	ЗаполнитьВыплатуЗарплатыНаличными();	
	ЗаполнитьВыплатуЗарплатыЧерезБанк();	
	ЗаполнитьВыплатуНалогов();          	
	ЗаполнитьВыплатуСтраховыхВзносов(); 	
	ЗаполнитьВыплатуУдержанийПоИсполнительнымДокументам();	
	ЗаполнитьВыплатуУдержанийВПользуТретьихЛиц();
		
КонецПроцедуры

&НаСервере
Процедура ВывестиКомандыПечати()
	КомандыПечати = Обработки.ПлатежиПоРезультатамРасчетаЗарплаты.КомандыПечати();
	КомандыПечати.Сортировать("Порядок, Представление");
	
	ОднаКоманда = (КомандыПечати.Количество() = 1);
	Для Каждого КомандаПечати Из КомандыПечати Цикл
		КомандаФормы = Команды.Добавить(КомандаПечати.Идентификатор);
		КомандаФормы.Действие = "Подключаемый_Напечатать";
		КомандаФормы.Заголовок = КомандаПечати.Представление;
		КомандаФормы.Подсказка = КомандаФормы.Заголовок;
		КомандаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
		Если ТипЗнч(КомандаПечати.Картинка) = Тип("Картинка") Тогда
			КомандаФормы.Картинка = КомандаПечати.Картинка;
		КонецЕсли;
		Если ОднаКоманда И КомандаФормы.Картинка.Вид = ВидКартинки.Пустая Тогда
			КомандаФормы.Картинка = Элементы.ПодменюПечать.Картинка;
		КонецЕсли;
		
		КнопкаФормы = Элементы.Добавить(КомандаФормы.Имя, Тип("КнопкаФормы"), Элементы.ПодменюПечать);
		КнопкаФормы.ИмяКоманды = КомандаФормы.Имя;
	КонецЦикла;
	
	Если ОднаКоманда Тогда
		Элементы.ПодменюПечать.Вид = ВидГруппыФормы.ГруппаКнопок;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЕстьДоступКДаннымОрганизации()
	
	Если ЭтаФорма.Организация = Справочники.Организации.ПустаяСсылка() Тогда
		Возврат Истина;
	КонецЕсли;	
		
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Объект
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|	И Организации.Ссылка = &Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);

	ЕстьДоступ = НЕ Запрос.Выполнить().Пустой();
	
	Возврат ЕстьДоступ;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьВыплатуЗарплатыНаличными()
	
	ЭтаФорма.ВыплатаЗарплатыНаличными.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВедомостьНаВыплатуЗарплатыВКассу.Касса = ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|			ТОГДА &КассаНеУказана
	|		ИНАЧЕ ВедомостьНаВыплатуЗарплатыВКассу.Касса
	|	КОНЕЦ КАК МестоВыплаты,
	|	ВедомостьНаВыплатуЗарплатыВКассу.СпособВыплаты КАК СпособВыплаты,
	|	ВедомостьНаВыплатуЗарплатыВКассу.СуммаПоДокументу КАК Сумма,
	|	ВедомостьНаВыплатуЗарплатыВКассу.Ссылка
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу КАК ВедомостьНаВыплатуЗарплатыВКассу
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВКассу.ПериодРегистрации = &ПериодРегистрации
	|	И ВедомостьНаВыплатуЗарплатыВКассу.Организация = &Организация
	|	И ВедомостьНаВыплатуЗарплатыВКассу.Проведен = ИСТИНА
	|	И ВедомостьНаВыплатуЗарплатыВКассу.СуммаПоДокументу <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВедомостьНаВыплатуЗарплатыРаздатчиком.Раздатчик,
	|	ВедомостьНаВыплатуЗарплатыРаздатчиком.СпособВыплаты,
	|	ВедомостьНаВыплатуЗарплатыРаздатчиком.СуммаПоДокументу,
	|	ВедомостьНаВыплатуЗарплатыРаздатчиком.Ссылка
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыРаздатчиком КАК ВедомостьНаВыплатуЗарплатыРаздатчиком
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыРаздатчиком.ПериодРегистрации = &ПериодРегистрации
	|	И ВедомостьНаВыплатуЗарплатыРаздатчиком.Организация = &Организация
	|	И ВедомостьНаВыплатуЗарплатыРаздатчиком.Проведен = ИСТИНА
	|	И ВедомостьНаВыплатуЗарплатыРаздатчиком.СуммаПоДокументу <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпособВыплаты,
	|	МестоВыплаты";
	
	Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ЭтаФорма.МесяцНачисления);
	Запрос.УстановитьПараметр("КассаНеУказана", "<" + НСтр("ru = 'Касса не указана'") + ">");
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		НоваяВыплата = ЭтаФорма.ВыплатаЗарплатыНаличными.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяВыплата, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	ИтогоКВыплате = ЭтаФорма.ВыплатаЗарплатыНаличными.Итог("Сумма");
	ЭтаФорма.ИтогВыплатаЗарплатыНаличными = ИтогоКВыплате;
	ЭтаФорма.ОбщийИтог = ЭтаФорма.ОбщийИтог + ИтогоКВыплате;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыплатуЗарплатыЧерезБанк()
	
	ЭтаФорма.ВыплатаЗарплатыЧерезБанк.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =  
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Сотрудники.Ссылка
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ВедомостьНаВыплатуЗарплатыВБанк.ЗарплатныйПроект = ЗНАЧЕНИЕ(Справочник.ЗарплатныеПроекты.ПустаяСсылка)
	|			ТОГДА &ЗарплатныйПроектНеУказан
	|		ИНАЧЕ ВедомостьНаВыплатуЗарплатыВБанк.ЗарплатныйПроект
	|	КОНЕЦ КАК МестоВыплаты,
	|	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты,
	|	ВедомостьНаВыплатуЗарплатыВБанк.СуммаПоДокументу КАК Сумма,
	|	ВедомостьНаВыплатуЗарплатыВБанк.Ссылка,
	|	NULL КАК НомерСчета,
	|	NULL КАК Банк,
	|	NULL КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТВедомости
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации = &ПериодРегистрации
	|	И ВедомостьНаВыплатуЗарплатыВБанк.Организация = &Организация
	|	И ВедомостьНаВыплатуЗарплатыВБанк.Проведен = ИСТИНА
	|	И ВедомостьНаВыплатуЗарплатыВБанк.СуммаПоДокументу <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка.СпособВыплаты,
	|	ВедомостьНаВыплатуЗарплатыПеречислением.КВыплате,
	|	ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка,
	|	ВедомостьНаВыплатуЗарплатыПеречислением.БанковскийСчет.НомерСчета,
	|	ВедомостьНаВыплатуЗарплатыПеречислением.БанковскийСчет.Банк.Наименование,
	|	ВедомостьНаВыплатуЗарплатыПеречислением.Сотрудник.ФизическоеЛицо
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Зарплата КАК ВедомостьНаВыплатуЗарплатыПеречислением
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|		ПО ВедомостьНаВыплатуЗарплатыПеречислением.Сотрудник.ФизическоеЛицо = БанковскиеСчетаКонтрагентов.Владелец
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыПеречислением.Сотрудник В
	|			(ВЫБРАТЬ
	|				Сотрудники.Ссылка
	|			ИЗ
	|				ВТСотрудники КАК Сотрудники)
	|	И ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка.ПериодРегистрации = &ПериодРегистрации
	|	И ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка.Организация = &Организация
	|	И ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка.Проведен = ИСТИНА
	|	И ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка.СуммаПоДокументу <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТВедомости.ФизическоеЛицо
	|ИЗ
	|	ВТВедомости КАК ВТВедомости
	|ГДЕ
	|	ВТВедомости.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВедомости.МестоВыплаты КАК МестоВыплаты,
	|	ВТВедомости.СпособВыплаты КАК СпособВыплаты,
	|	ВТВедомости.Сумма,
	|	ВТВедомости.Ссылка,
	|	ВТВедомости.НомерСчета,
	|	ВТВедомости.Банк КАК Банк,
	|	ВТВедомости.ФизическоеЛицо
	|ИЗ
	|	ВТВедомости КАК ВТВедомости
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпособВыплаты,
	|	МестоВыплаты,
	|	Банк";
	
	Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ЭтаФорма.МесяцНачисления);
	Запрос.УстановитьПараметр("ЗарплатныйПроектНеУказан", "<" + НСтр("ru = 'Зарплатный проект не указан'") + ">");
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаФизическиеЛица = РезультатЗапроса[2].Выгрузить();
	
	Если ВыборкаФизическиеЛица.Количество() > 0 Тогда
		ФизическиеЛицаВедомостей = ВыборкаФизическиеЛица.ВыгрузитьКолонку("ФизическоеЛицо");
		ДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(
			Истина, ФизическиеЛицаВедомостей,	"Фамилия,Имя,Отчество", НачалоМесяца(МесяцНачисления));
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[3].Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		
		НоваяВыплата = ЭтаФорма.ВыплатаЗарплатыЧерезБанк.Добавить();		
		
		ЗаполнитьЗначенияСвойств(НоваяВыплата, ВыборкаДетальныеЗаписи);
		
		Если ТипЗнч(НоваяВыплата.Ссылка) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыПеречислением") Тогда
			
			ФИОФизлица = "";
			
			ДанныеФизическогоЛица = ДанныеФизическихЛиц.Найти(ВыборкаДетальныеЗаписи.ФизическоеЛицо, "ФизическоеЛицо");
				
			Если ДанныеФизическогоЛица <> Неопределено Тогда
				СтруктураФИО = Новый Структура("Фамилия,Имя,Отчество");
				ЗаполнитьЗначенияСвойств(СтруктураФИО, ДанныеФизическогоЛица);
				ФИОФизлица = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(СтруктураФИО);
			КонецЕсли;
				
			СтрокаПодстановки = НСтр("ru = '%1 (%2)'");
			
			НоваяВыплата["МестоВыплаты"] = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				СтрокаПодстановки, ФИОФизлица, ВыборкаДетальныеЗаписи["Банк"]);
				
		КонецЕсли;
		
	КонецЦикла;
	
	ИтогоКВыплате = ЭтаФорма.ВыплатаЗарплатыЧерезБанк.Итог("Сумма");
	ЭтаФорма.ИтогВыплатаЗарплатыЧерезБанк = ИтогоКВыплате;
	ЭтаФорма.ОбщийИтог = ЭтаФорма.ОбщийИтог + ИтогоКВыплате;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыплатуУдержанийПоИсполнительнымДокументам()
	
	ЭтаФорма.УдержанияПоИсполнительнымДокументам.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =  
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛица.Ссылка
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БанковскиеСчетаКонтрагентов.Владелец КАК Владелец,
	|	МИНИМУМ(БанковскиеСчетаКонтрагентов.Ссылка) КАК СчетаКонтрагента
	|ПОМЕСТИТЬ ВТБанковскиеСчетаКонтрагентов
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|
	|СГРУППИРОВАТЬ ПО
	|	БанковскиеСчетаКонтрагентов.Владелец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УдержанияПоИсполнительнымДокументамОбороты.ПлатежныйАгент КАК ПлатежныйАгент,
	|	УдержанияПоИсполнительнымДокументамОбороты.Получатель КАК Получатель,
	|	УдержанияПоИсполнительнымДокументамОбороты.ИсполнительныйДокумент.АдресПолучателяПредставление КАК АдресПолучателя,
	|	УдержанияПоИсполнительнымДокументамОбороты.СуммаУдержанияОборот КАК Сумма,
	|	УдержанияПоИсполнительнымДокументамОбороты.СуммаВознагражденияПлатежногоАгентаОборот КАК ВознаграждениеАгента,
	|	ВТБанковскиеСчетаКонтрагентов.СчетаКонтрагента.Банк КАК БанкПолучателя,
	|	ВТБанковскиеСчетаКонтрагентов.СчетаКонтрагента.НомерСчета КАК СчетПолучателя,
	|	УдержанияПоИсполнительнымДокументамОбороты.ИсполнительныйДокумент.Номер КАК Номер,
	|	УдержанияПоИсполнительнымДокументамОбороты.ИсполнительныйДокумент.Дата КАК Дата
	|ИЗ
	|	РегистрНакопления.УдержанияПоИсполнительнымДокументам.Обороты(
	|			&ПериодРегистрации,
	|			КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
	|			Месяц,
	|			Организация = &Организация
	|				И ФизическоеЛицо В
	|					(ВЫБРАТЬ
	|						ФизическиеЛица.Ссылка
	|					ИЗ
	|						ВТФизическиеЛица КАК ФизическиеЛица)) КАК УдержанияПоИсполнительнымДокументамОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБанковскиеСчетаКонтрагентов КАК ВТБанковскиеСчетаКонтрагентов
	|		ПО УдержанияПоИсполнительнымДокументамОбороты.Получатель = ВТБанковскиеСчетаКонтрагентов.Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Получатель,
	|	Дата
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(ВознаграждениеАгента)
	|ПО
	|	Получатель,
	|	ПлатежныйАгент";
	
	Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ЭтаФорма.МесяцНачисления);
	
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаПолучатель = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Получатель");
	
	Пока ВыборкаПолучатель.Следующий() Цикл		
		
		ВыборкаАгент = ВыборкаПолучатель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПлатежныйАгент");
		
		Пока ВыборкаАгент.Следующий() Цикл		
			
			НоваяВыплата = ЭтаФорма.УдержанияПоИсполнительнымДокументам.Добавить();		
			ЗаполнитьЗначенияСвойств(НоваяВыплата, ВыборкаАгент);
			
			ВыборкаДетальныеЗаписи = ВыборкаАгент.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
				НоваяВыплата.ИсполнительныеЛисты = НСтр("ru = 'По документу'") + " ";
			ИначеЕсли ВыборкаДетальныеЗаписи.Количество() > 1 Тогда
				НоваяВыплата.ИсполнительныеЛисты = НСтр("ru = 'По документам'") + " ";
			КонецЕсли;			
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				НоваяВыплата.АдресПолучателя = ВыборкаДетальныеЗаписи.АдресПолучателя;
				
				СтрокаПодстановки = НСтр("ru = '%1 в %2'");

				Если СтрДлина(ВыборкаДетальныеЗаписи.СчетПолучателя) > 0 Тогда
					НоваяВыплата.СчетПолучателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						СтрокаПодстановки, ВыборкаДетальныеЗаписи.СчетПолучателя, ВыборкаДетальныеЗаписи.БанкПолучателя);
				КонецЕсли;					
				
				СтрокаПодстановки = НСтр("ru = '№ %1 от %2'");
				ПредставлениеИсполнительногоЛиста = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					СтрокаПодстановки, ВыборкаДетальныеЗаписи.Номер, Формат(ВыборкаДетальныеЗаписи.Дата, "ДЛФ=D"));
					
				НоваяВыплата.ИсполнительныеЛисты =
					НоваяВыплата.ИсполнительныеЛисты + ПредставлениеИсполнительногоЛиста + ", ";

			КонецЦикла;
			
			Если ВыборкаДетальныеЗаписи.Количество() >= 1 Тогда
				НоваяВыплата.ИсполнительныеЛисты = Лев(НоваяВыплата.ИсполнительныеЛисты,
					СтрДлина(НоваяВыплата.ИсполнительныеЛисты) - СтрДлина(", "));
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
	
	ИтогоКВыплате = ЭтаФорма.УдержанияПоИсполнительнымДокументам.Итог("Сумма");
	ИтогоКВыплатеАгенту = ЭтаФорма.УдержанияПоИсполнительнымДокументам.Итог("ВознаграждениеАгента");
	
	ЭтаФорма.ИтогУдержанияПоИсполнительнымДокументам = ИтогоКВыплате;
	ЭтаФорма.ИтогАгентаУдержанияПоИсполнительнымДокументам = ИтогоКВыплатеАгенту;
	
	ЭтаФорма.ОбщийИтог = ЭтаФорма.ОбщийИтог + ИтогоКВыплате + ИтогоКВыплатеАгенту;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыплатуНалогов()
	
	ЭтаФорма.Налоги.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ЭтаФорма.МесяцНачисления);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА НастройкиЗарплатаКадрыРасширенная.ВыплачиватьЗарплатуВПоследнийДеньМесяца
	|			ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ПериодРегистрации, МЕСЯЦ, 1), МЕСЯЦ), ДЕНЬ)
	|		КОГДА НастройкиЗарплатаКадрыРасширенная.ДатаВыплатыЗарплатыНеПозжеЧем = 0
	|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), ДЕНЬ, 6), ДЕНЬ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), ДЕНЬ, НастройкиЗарплатаКадрыРасширенная.ДатаВыплатыЗарплатыНеПозжеЧем + 1), ДЕНЬ)
	|	КОНЕЦ КАК ДатаЗавершенияВыплатыЗарплаты
	|ИЗ
	|	РегистрСведений.НастройкиЗарплатаКадрыРасширенная КАК НастройкиЗарплатаКадрыРасширенная
	|ГДЕ
	|	НастройкиЗарплатаКадрыРасширенная.Организация = &Организация";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если Не ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаВыборкиОстатков", ВыборкаДетальныеЗаписи.ДатаЗавершенияВыплатыЗарплаты);

	Запрос.Текст =  
	"ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане КАК НалоговыйОрган,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Остатки(&ДатаВыборкиОстатков, Организация = &Организация) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговыйОрган,
	|	МесяцНалоговогоПериода";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		НоваяВыплата = ЭтаФорма.Налоги.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяВыплата, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	ИтогоКВыплате = ЭтаФорма.Налоги.Итог("Сумма");
	ЭтаФорма.ИтогНалоги = ИтогоКВыплате;
	ЭтаФорма.ОбщийИтог = ЭтаФорма.ОбщийИтог + ИтогоКВыплате;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыплатуСтраховыхВзносов()
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(Организация);
	КонецЕсли;
	
	ЭтаФорма.СтраховыеВзносы.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников КАК ВидСтрахования,
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход КАК Сумма,
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников.Порядок КАК ВидОбязательногоСтрахованияСотрудниковПорядок
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Обороты(&ПериодРегистрации, КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), , Организация = &Организация) КАК РасчетыСФондамиПоСтраховымВзносамОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ТекстДобровольныеВзносы,
	|	СУММА(НачисленияУдержанияПоСотрудникам.Сумма),
	|	NULL
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолучателиУдержаний КАК ПолучателиУдержаний
	|		ПО НачисленияУдержанияПоСотрудникам.ДокументОснование = ПолучателиУдержаний.ДокументОснование
	|			И НачисленияУдержанияПоСотрудникам.Организация = ПолучателиУдержаний.Организация
	|			И НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = ПолучателиУдержаний.ФизическоеЛицо
	|ГДЕ
	|	НачисленияУдержанияПоСотрудникам.Период = &ПериодРегистрации
	|	И НачисленияУдержанияПоСотрудникам.Организация = &Организация
	|	И НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
	|	И ТИПЗНАЧЕНИЯ(НачисленияУдержанияПоСотрудникам.НачислениеУдержание) = ТИП(ПланВидовРасчета.Удержания)
	|	И НачисленияУдержанияПоСотрудникам.НачислениеУдержание.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДСВ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолучателиУдержаний.Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидОбязательногоСтрахованияСотрудниковПорядок";
	
	Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ЭтаФорма.МесяцНачисления);
	Запрос.УстановитьПараметр("ТекстДобровольныеВзносы", НСтр("ru = 'Добровольные страховые взносы'"));
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		НоваяВыплата = ЭтаФорма.СтраховыеВзносы.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяВыплата, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	ИтогоКВыплате = ЭтаФорма.СтраховыеВзносы.Итог("Сумма");
	ЭтаФорма.ИтогСтраховыеВзносы = ИтогоКВыплате;
	ЭтаФорма.ОбщийИтог = ЭтаФорма.ОбщийИтог + ИтогоКВыплате;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыплатуУдержанийВПользуТретьихЛиц()
	
	ЭтаФорма.УдержанияВПользуТретьихЛиц.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ПолучателиУдержаний.Контрагент КАК Контрагент,
	|	СУММА(НачисленияУдержанияПоСотрудникам.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолучателиУдержаний КАК ПолучателиУдержаний
	|		ПО НачисленияУдержанияПоСотрудникам.ДокументОснование = ПолучателиУдержаний.ДокументОснование
	|			И НачисленияУдержанияПоСотрудникам.Организация = ПолучателиУдержаний.Организация
	|			И НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = ПолучателиУдержаний.ФизическоеЛицо
	|ГДЕ
	|	НачисленияУдержанияПоСотрудникам.Период = &ПериодРегистрации
	|	И НачисленияУдержанияПоСотрудникам.Организация = &Организация
	|	И НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
	|	И ТИПЗНАЧЕНИЯ(НачисленияУдержанияПоСотрудникам.НачислениеУдержание) = ТИП(ПланВидовРасчета.Удержания)
	|	И (НачисленияУдержанияПоСотрудникам.НачислениеУдержание.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ПрофсоюзныеВзносы)
	|			ИЛИ НачисленияУдержанияПоСотрудникам.НачислениеУдержание.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДобровольныеВзносыВНПФ)
	|			ИЛИ НачисленияУдержанияПоСотрудникам.НачислениеУдержание.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ПрочееУдержаниеВПользуТретьихЛиц))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолучателиУдержаний.Контрагент";
	
	Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ЭтаФорма.МесяцНачисления);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		НоваяВыплата = ЭтаФорма.УдержанияВПользуТретьихЛиц.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяВыплата, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	ИтогоКВыплате = ЭтаФорма.УдержанияВПользуТретьихЛиц.Итог("Сумма");
	ЭтаФорма.ИтогУдержанияВПользуТретьихЛиц = ИтогоКВыплате;
	ЭтаФорма.ОбщийИтог = ЭтаФорма.ОбщийИтог + ИтогоКВыплате;
	
КонецПроцедуры

#КонецОбласти
