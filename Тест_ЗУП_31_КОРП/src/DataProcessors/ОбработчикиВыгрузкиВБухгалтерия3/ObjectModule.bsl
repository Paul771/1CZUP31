#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// Обработчики выгрузки конвертации ЗУП 3.0 --> БП 3.0 {4e10b998-284f-11e4-8cbb-e0cb4ed5f67c}.
// 
// Данный модуль содержит экспортные процедуры обработчиков событий конвертации 
// и предназначен для отладки правил обмена. После отладки рекомендуется
// скопировать текст модуля в буфер обмена и импортировать его в базу
// "Конвертация данных".
//
////////////////////////////////////////////////////////////////////////////////
// ИСПОЛЬЗУЕМЫЕ СОКРАЩЕНИЯ ИМЕН ПЕРЕМЕННЫХ (АББРЕВИАТУРЫ)
//
//  ПКО  - правило конвертации объектов.
//  ПКС  - правило конвертации свойств объектов.
//  ПКГС - правило конвертации группы свойств объектов.
//  ПВД  - правило выгрузки данных.
//  ПОД  - правило очистки данных.

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБРАБОТКИ
// Данный раздел изменять запрещено.

#Область ОписаниеПеременных

Перем Параметры;
Перем Алгоритмы;
Перем Запросы;
Перем УзелДляОбмена;
Перем ОбщиеПроцедурыФункции;

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ (ГЛОБАЛЬНЫЕ)
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПКО_ВедомостьНаВыплатуЗарплатыВБанк_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидМестаВыплаты");
	ВходящиеДанные.ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект;

КонецПроцедуры

Процедура ПКО_ВедомостьНаВыплатуЗарплатыВКассу_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидМестаВыплаты");
	ВходящиеДанные.ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.Касса;

КонецПроцедуры

Процедура ПКО_ВедомостьНаВыплатуЗарплатыПеречислением_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидМестаВыплаты");
	ВходящиеДанные.ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.БанковскийСчет;

КонецПроцедуры

Процедура ПКО_ВедомостьНаВыплатуЗарплатыРаздатчиком_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидМестаВыплаты");
	ВходящиеДанные.ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.Раздатчик;

КонецПроцедуры

Процедура ПКО_ВидыКонтактнойИнформации_ПередВыгрузкойОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, Отказ, КлючВыгружаемыхДанных, ЗапоминатьВыгруженные,
	НеЗамещатьОбъектПриЗагрузке, ВсеОбъектыВыгружены, ТолькоПолучитьУзелСсылки,
	Приемник, РежимЗаписи, РежимПроведения, НеСоздаватьЕслиНеНайден) Экспорт

	НеЗамещатьОбъектПриЗагрузке = Источник.Предопределенный;

КонецПроцедуры

Процедура ПКО_ВыдачаЗаймаСотрудникуБанк_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидОперации");
	ВходящиеДанные.ВидОперации = "ВыдачаЗаймаРаботнику";

КонецПроцедуры

Процедура ПКО_ВыдачаЗаймаСотрудникуКасса_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидОперации, Основание");
	ВходящиеДанные.ВидОперации	= "ВыдачаЗаймаРаботнику";
	ВходящиеДанные.Основание	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Договор займа №%1 от %2", Источник.Номер, Источник.Дата);

КонецПроцедуры

Процедура ПКО_ВыплатаДепонированнойЗарплатыБанк_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидОперации");
	ВходящиеДанные.ВидОперации	= "ВыплатаДепонентов";

КонецПроцедуры

Процедура ПКО_ВыплатаДепонированнойЗарплатыКасса_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидОперации");
	ВходящиеДанные.ВидОперации	= "ВыплатаДепонентов";

КонецПроцедуры

Процедура ПКО_ДоговорЗаймаСотрудникуБанк_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидОперации");
	ВходящиеДанные.ВидОперации = "ВыдачаЗаймаРаботнику";

КонецПроцедуры

Процедура ПКО_ДоговорЗаймаСотрудникуКасса_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидОперации, Основание");
	ВходящиеДанные.ВидОперации	= "ВыдачаЗаймаРаботнику";
	ВходящиеДанные.Основание	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Договор займа №%1 от %2", Источник.Номер, Источник.Дата);

КонецПроцедуры

Процедура ПКО_Организации_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	КПП = "";
	Если ЗначениеЗаполнено(Источник.РегистрацияВНалоговомОргане) Тогда
		ДанныеРегистрацииВНалоговомОргане = ЗарплатаКадрыВызовСервера.ДанныеРегистрацииВНалоговомОргане(Источник.Ссылка, Источник.РегистрацияВНалоговомОргане);
		
		КПП = ДанныеРегистрацииВНалоговомОргане.КПП;
	КонецЕсли;
	
	ВходящиеДанные = Новый Структура("КПП");
	ВходящиеДанные.КПП = КПП;

КонецПроцедуры

Процедура ПКО_ПогашениеЗаймаСотрудникуБанк_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидОперации");
	ВходящиеДанные.ВидОперации = "ВозвратЗаймаРаботником";

КонецПроцедуры

Процедура ПКО_ПогашениеЗаймаСотрудникуКасса_ПриВыгрузкеОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, КлючВыгружаемыхДанных, Отказ, СтандартнаяОбработка,
	Приемник, УзелСсылки) Экспорт

	ВходящиеДанные = Новый Структура("ВидОперации, Основание");
	ВходящиеДанные.ВидОперации	= "ВозвратЗаймаРаботником";
	ВходящиеДанные.Основание	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Договор займа №%1 от %2", Источник.Номер, Источник.Дата);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ СВОЙСТВ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПКС_ВедомостьНаВыплатуЗарплатыВБанк_Зарплата_ФизическоеЛицо_ПередВыгрузкойСвойства_10_31(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ВходящиеДанные.ФизическиеЛицаСотрудников.Получить(ОбъектКоллекции.Сотрудник);
	Если Значение = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ВедомостьНаВыплатуЗарплатыВКассу_Зарплата_ФизическоеЛицо_ПередВыгрузкойСвойства_10_32(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ВходящиеДанные.ФизическиеЛицаСотрудников.Получить(ОбъектКоллекции.Сотрудник);
	Если Значение = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ВедомостьНаВыплатуЗарплатыПеречислением_Зарплата_ФизическоеЛицо_ПередВыгрузкойСвойства_10_39(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ВходящиеДанные.ФизическиеЛицаСотрудников.Получить(ОбъектКоллекции.Сотрудник);
	Если Значение = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ВедомостьНаВыплатуЗарплатыРаздатчиком_Зарплата_ФизическоеЛицо_ПередВыгрузкойСвойства_10_37(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ВходящиеДанные.ФизическиеЛицаСотрудников.Получить(ОбъектКоллекции.Сотрудник);
	Если Значение = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ ГРУПП СВОЙСТВ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПКГС_ВедомостьНаВыплатуЗарплатыВБанк_Зарплата_ПередОбработкойВыгрузки_9_31(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, КоллекцияОбъектов, НеЗамещать, УзелКоллекцииСвойств, НеОчищать) Экспорт

	ВходящиеДанные.Вставить("ФизическиеЛицаСотрудников", ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ОбщегоНазначения.ВыгрузитьКолонку(Источник.Зарплата, "Сотрудник", Истина), "ФизическоеЛицо"));

КонецПроцедуры

Процедура ПКГС_ВедомостьНаВыплатуЗарплатыВБанк_Зарплата_ПередВыгрузкойСвойства_9_31(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, ОбъектКоллекции, УзелКоллекцииСвойств, УзелКоллекцииОбъектов) Экспорт

	ИсходящиеДанные = Новый Структура("ФизическоеЛицо");
	ИсходящиеДанные.ФизическоеЛицо = ВходящиеДанные.ФизическиеЛицаСотрудников.Получить(ОбъектКоллекции.Сотрудник);

КонецПроцедуры

Процедура ПКГС_ВедомостьНаВыплатуЗарплатыВКассу_Зарплата_ПередОбработкойВыгрузки_9_32(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, КоллекцияОбъектов, НеЗамещать, УзелКоллекцииСвойств, НеОчищать) Экспорт

	ВходящиеДанные.Вставить("ФизическиеЛицаСотрудников", ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ОбщегоНазначения.ВыгрузитьКолонку(Источник.Зарплата, "Сотрудник", Истина), "ФизическоеЛицо"));

КонецПроцедуры

Процедура ПКГС_ВедомостьНаВыплатуЗарплатыВКассу_Зарплата_ПередВыгрузкойСвойства_9_32(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, ОбъектКоллекции, УзелКоллекцииСвойств, УзелКоллекцииОбъектов) Экспорт

	ИсходящиеДанные = Новый Структура("ФизическоеЛицо");
	ИсходящиеДанные.ФизическоеЛицо = ВходящиеДанные.ФизическиеЛицаСотрудников.Получить(ОбъектКоллекции.Сотрудник);

КонецПроцедуры

Процедура ПКГС_ВедомостьНаВыплатуЗарплатыПеречислением_Зарплата_ПередОбработкойВыгрузки_9_39(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, КоллекцияОбъектов, НеЗамещать, УзелКоллекцииСвойств, НеОчищать) Экспорт

	ВходящиеДанные.Вставить("ФизическиеЛицаСотрудников", ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ОбщегоНазначения.ВыгрузитьКолонку(Источник.Зарплата, "Сотрудник", Истина), "ФизическоеЛицо"));

КонецПроцедуры

Процедура ПКГС_ВедомостьНаВыплатуЗарплатыПеречислением_Зарплата_ПередВыгрузкойСвойства_9_39(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, ОбъектКоллекции, УзелКоллекцииСвойств, УзелКоллекцииОбъектов) Экспорт

	ИсходящиеДанные = Новый Структура("ФизическоеЛицо");
	ИсходящиеДанные.ФизическоеЛицо = ВходящиеДанные.ФизическиеЛицаСотрудников.Получить(ОбъектКоллекции.Сотрудник);

КонецПроцедуры

Процедура ПКГС_ВедомостьНаВыплатуЗарплатыРаздатчиком_Зарплата_ПередОбработкойВыгрузки_9_37(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, КоллекцияОбъектов, НеЗамещать, УзелКоллекцииСвойств, НеОчищать) Экспорт

	ВходящиеДанные.Вставить("ФизическиеЛицаСотрудников", ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ОбщегоНазначения.ВыгрузитьКолонку(Источник.Зарплата, "Сотрудник", Истина), "ФизическоеЛицо"));

КонецПроцедуры

Процедура ПКГС_ВедомостьНаВыплатуЗарплатыРаздатчиком_Зарплата_ПередВыгрузкойСвойства_9_37(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, ОбъектКоллекции, УзелКоллекцииСвойств, УзелКоллекцииОбъектов) Экспорт

	ИсходящиеДанные = Новый Структура("ФизическоеЛицо");
	ИсходящиеДанные.ФизическоеЛицо = ВходящиеДанные.ФизическиеЛицаСотрудников.Получить(ОбъектКоллекции.Сотрудник);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ВЫГРУЗКИ ДАННЫХ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПВД_ВыдачаЗаймаСотруднику_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если Объект.ФормаРасчетов = Перечисления.ФормыОплаты.Безналичная Тогда
		ИмяПКО = "ВыдачаЗаймаСотрудникуБанк";
	Иначе
		ИмяПКО = "ВыдачаЗаймаСотрудникуКасса";
	КонецЕсли;

КонецПроцедуры

Процедура ПВД_ВыплатаДепонированнойЗарплаты_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если Объект.ФормаРасчетов = Перечисления.ФормыОплаты.Безналичная Тогда
		ИмяПКО = "ВыплатаДепонированнойЗарплатыБанк";
	Иначе
		ИмяПКО = "ВыплатаДепонированнойЗарплатыКасса";
	КонецЕсли;

КонецПроцедуры

Процедура ПВД_ДоговорЗаймаСотруднику_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если Объект.ФормаРасчетов = Перечисления.ФормыОплаты.Безналичная Тогда
		ИмяПКО = "ДоговорЗаймаСотрудникуБанк";
	Иначе
		ИмяПКО = "ДоговорЗаймаСотрудникуКасса";
	КонецЕсли;

КонецПроцедуры

Процедура ПВД_ПогашениеЗаймаСотруднику_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если Объект.ФормаРасчетов = Перечисления.ФормыОплаты.Безналичная Тогда
		ИмяПКО = "ПогашениеЗаймаСотрудникуБанк";
	Иначе
		ИмяПКО = "ПогашениеЗаймаСотрудникуКасса";
	КонецЕсли;

КонецПроцедуры

Процедура ПВД_ФизическиеЛица_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если Объект.ЭтоГруппа Тогда
		ИмяПКО = "ФизическиеЛицаГруппа";
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЧИСТКИ ДАННЫХ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ПАРАМЕТРОВ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// АЛГОРИТМЫ
// Данный раздел разрешено изменять.
// Также допустимо размещать процедуры с алгоритмами в любом из разделов выше.

#Область СлужебныеПроцедурыИФункции
// Данный раздел изменять запрещено.

// Служебная. Инициализирует переменные, необходимые для отладки.
//
// Параметры:
//  Владелец - Обработка КонвертацияОбъектовИнформационныхБаз.
//
Процедура ПодключитьОбработкуДляОтладки(Владелец) Экспорт

	Параметры            	 = Владелец.Параметры;
	ОбщиеПроцедурыФункции	 = Владелец;
	Запросы              	 = Владелец.Запросы;
	УзелДляОбмена		 	 = Владелец.УзелДляОбмена;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
