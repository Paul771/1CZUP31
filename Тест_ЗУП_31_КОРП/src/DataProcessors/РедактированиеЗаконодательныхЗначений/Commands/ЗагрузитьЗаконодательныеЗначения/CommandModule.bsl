#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = НСтр("ru = 'Выберите файл'");
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.Фильтр = НСтр("ru = 'Файл (*.zip)|*.zip'");
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.МножественныйВыбор = Ложь;
	
	Если ТипЗнч(ПараметрыВыполненияКоманды.Источник) = Тип("УправляемаяФорма") Тогда
		Идентификатор = ПараметрыВыполненияКоманды.Источник.УникальныйИдентификатор;
	Иначе
		Идентификатор = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьЗаконодательныеЗначенияПослеВыбораФайла", ЭтотОбъект, ПараметрыВыполненияКоманды);
	НачатьПомещениеФайлов(Оповещение,, Диалог, Истина, Идентификатор);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьЗаконодательныеЗначенияПослеВыбораФайла(ПомещенныеФайлы, ПараметрыВыполненияКоманды) Экспорт
	Если ТипЗнч(ПомещенныеФайлы) <> Тип("Массив") Или ПомещенныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	АдресАрхива = ПомещенныеФайлы[0].Хранение;
	ЗагрузитьЗаконодательныеЗначенияНаСервере(АдресАрхива);
	ПоказатьОповещениеПользователя(, , НСтр("ru = 'Законодательные значения загружены.'"), БиблиотекаКартинок.Успешно32);
	Оповестить("ВосстановленыНачальныеЗначения");
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗаконодательныеЗначенияНаСервере(АдресАрхива)
	МодульРаботаСКлассификаторамиПереопределяемый = ОбщегоНазначения.ОбщийМодуль("РаботаСКлассификаторамиПереопределяемый");
	
	КаталогВременныхФайлов = ОбщегоНазначения.СоздатьВременныйКаталог("HRMClassifiers");
	
	ПолноеИмяАрхива = КаталогВременныхФайлов + "HRMClassifiers.zip";
	
	ДвоичныеДанныеАрхива = ПолучитьИзВременногоХранилища(АдресАрхива);
	ДвоичныеДанныеАрхива.Записать(ПолноеИмяАрхива);
	
	ЧтениеZipФайла = Новый ЧтениеZipФайла(ПолноеИмяАрхива);
	ЧтениеZipФайла.ИзвлечьВсе(КаталогВременныхФайлов, РежимВосстановленияПутейФайловZIP.Восстанавливать);
	
	НеОбработанныеИдентификаторы = Новый Массив;
	
	ОписанияФайловАрхива = Новый ТаблицаЗначений;
	ОписанияФайловАрхива.Колонки.Добавить("Идентификатор",  Новый ОписаниеТипов("Строка"), НСтр("ru = 'Идентификатор классификатора в сервисе'"));
	ОписанияФайловАрхива.Колонки.Добавить("Версия",         Новый ОписаниеТипов("Число"), НСтр("ru = 'Номер версии классификатора'"));
	ОписанияФайловАрхива.Колонки.Добавить("ОписаниеВерсии", Новый ОписаниеТипов("Строка"), НСтр("ru = 'Описание изменений версии классификатора'"));
	ОписанияФайловАрхива.Колонки.Добавить("ИмяФайла",       Новый ОписаниеТипов("Строка"), НСтр("ru = 'Имя файла классификатора'"));
	
	НайденныеФайлы = НайтиФайлы(КаталогВременныхФайлов, "*_*");
	Для Каждого Файл Из НайденныеФайлы Цикл
		Фрагменты = СтрРазделить(Файл.ИмяБезРасширения, "_", Ложь);
		ОписаниеФайла = ОписанияФайловАрхива.Добавить();
		ОписаниеФайла.ИмяФайла = Файл.Имя;
		ОписаниеФайла.Идентификатор = Фрагменты[0];
		ОписаниеФайла.Версия = Число(Фрагменты[1]);
	КонецЦикла;
	
	Для Каждого ОписаниеФайла Из ОписанияФайловАрхива Цикл
		
		Обработан = Ложь;
		ДвоичныеДанные = Новый ДвоичныеДанные(КаталогВременныхФайлов + ОписаниеФайла.ИмяФайла);
		
		МодульРаботаСКлассификаторамиПереопределяемый.ПриЗагрузкеКлассификатора(
			ОписаниеФайла.Идентификатор,
			ОписаниеФайла.Версия,
			ПоместитьВоВременноеХранилище(ДвоичныеДанные),
			Обработан);
		
		Если Не Обработан Тогда
			НеОбработанныеИдентификаторы.Добавить(ОписаниеФайла.Идентификатор);
		КонецЕсли;
		
	КонецЦикла;
	
	Если НеОбработанныеИдентификаторы.Количество() > 0 Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В процедуре ""%1"" не обработаны идентификаторы ""%2"".'"),
			"РаботаСКлассификаторамиПереопределяемый.ПриЗагрузкеКлассификатора",
			СтрСоединить(НеОбработанныеИдентификаторы));
		ВызватьИсключение Текст;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
