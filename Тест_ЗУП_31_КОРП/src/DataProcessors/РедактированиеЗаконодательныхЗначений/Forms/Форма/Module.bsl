
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСобытия = "ОтредактированаИстория" И Параметр.Свойство("ИмяРегистра") Тогда
		Если Параметр.ИмяРегистра = "СтавкаРефинансированияЦБ" 
			Или Параметр.ИмяРегистра = "МинимальнаяОплатаТрудаРФ"
			Или Параметр.ИмяРегистра = "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты" 
			Или Параметр.ИмяРегистра = "РазмерыГосударственныхПособий"
			Или Параметр.ИмяРегистра = "ПредельнаяВеличинаБазыСтраховыхВзносов" Тогда
			РедактированиеПериодическихСведенийКлиент.ОбработкаОповещенияПоСтруктуре(ЭтаФорма, СтруктураВедущихОбъектов, ИмяСобытия, Параметр, Источник);
			
			ЭлементПериод = Элементы.Найти(Параметр.ИмяРегистра + "ПериодСтрокой");
			Если ЭлементПериод <> Неопределено Тогда
				ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, Параметр.ИмяРегистра + ".Период", Параметр.ИмяРегистра + "ПериодСтрокой");
				Возврат;
			КонецЕсли;
			
			ЭлементПериод = Элементы.Найти(Параметр.ИмяРегистра + "ПериодГод");
			Если ЭлементПериод <> Неопределено Тогда
				ЭтаФорма[Параметр.ИмяРегистра + "ПериодГод"] = Год(ЭтаФорма[Параметр.ИмяРегистра].Период);
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Параметр.ИмяРегистра = "ТарифыСтраховыхВзносов"  Или Параметр.ИмяРегистра = "РазмерВычетовНДФЛ" Тогда
			
			ПрочитанныеЗначенияПрежний = МассивЗаписейИстории(Источник, Параметр.ИмяРегистра, Ложь);
			ПрочитанныеЗначения = МассивЗаписейИстории(Источник, Параметр.ИмяРегистра);
			
			ОписаниеРегистра = ОписаниеРегистра(Параметр.ИмяРегистра);
			
			НаборИдентичен = РедактированиеПериодическихСведенийКлиент.КоллекцииНаборовИдентичны(ПрочитанныеЗначения, Параметр.МассивЗаписей, ОписаниеРегистра.СтруктураСтрокой);
			НаборИдентиченПервоначальному = РедактированиеПериодическихСведенийКлиент.КоллекцииНаборовИдентичны(ПрочитанныеЗначенияПрежний, Параметр.МассивЗаписей, ОписаниеРегистра.СтруктураСтрокой);
			
			Отбор = Новый Структура(ОписаниеРегистра.Измерение, Источник);
			ЗаписиДляУдаления = ЭтаФорма[Параметр.ИмяРегистра + "Измененные"].НайтиСтроки(Отбор);
			Для Каждого Запись Из ЗаписиДляУдаления Цикл
				ЭтаФорма[Параметр.ИмяРегистра + "Измененные"].Удалить(Запись);
			КонецЦикла;
			
			Если Не НаборИдентичен Тогда
				
				СтрокаСтреза = ЭтаФорма[Параметр.ИмяРегистра + "Срез"].НайтиСтроки(Отбор);
				СтрокаСтреза[0].Период = '00010101';
				СтрокаСтреза[0].Модифицированность = Ложь;
				Для Каждого Запись Из Параметр.МассивЗаписей Цикл
					
					Если Не НаборИдентиченПервоначальному Тогда
						ЗаполнитьЗначенияСвойств(ЭтаФорма[Параметр.ИмяРегистра + "Измененные"].Добавить(), Запись);
					КонецЕсли;
					
					Если Запись.Период >= СтрокаСтреза[0].Период И Год(Запись.Период) <=  ЭтаФорма[Параметр.ИмяРегистра + "ПериодГод"] Тогда
						ЗаполнитьЗначенияСвойств(СтрокаСтреза[0], Запись);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			Модифицированность = Модифицированность Или НЕ НаборИдентиченПервоначальному;
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ВосстановленыНачальныеЗначения" Тогда
		
		ПриПолученииДанныхНаСервере();
		
	ИначеЕсли ИмяСобытия = "ПрочитаныЗаконодательныеКонстанты" Тогда
		НаборыЗаписей = ПолучитьИзВременногоХранилища(Параметр);
		Для Каждого Регистр Из НаборыЗаписей Цикл
			Если ПустаяСтрока(ОписаниеРегистра(Регистр.Ключ).Измерение) Тогда
				СтруктураЗаписи = Новый Структура(ЭтаФорма[Регистр.Ключ + "Прежняя"]);
				СтруктураЗаписи.Период = '00010101';
				ЭтаФорма[Регистр.Ключ + "НаборЗаписей"].Очистить();
				ЭтаФорма[Регистр.Ключ + "НаборЗаписейПрочитан"] = Истина;
				Для Каждого Запись Из Регистр.Значение Цикл
					ЗаполнитьЗначенияСвойств(ЭтаФорма[Регистр.Ключ + "НаборЗаписей"].Добавить(), Запись);
					Если Запись.Период >= СтруктураЗаписи.Период Тогда
						ЗаполнитьЗначенияСвойств(СтруктураЗаписи, Запись);
					КонецЕсли;
				КонецЦикла;
				ЗаполнитьЗначенияСвойств(ЭтаФорма[Регистр.Ключ], СтруктураЗаписи);
				ЭтаФорма[Регистр.Ключ + "Прежняя"] = Новый ФиксированнаяСтруктура(СтруктураЗаписи);
				ЭтаФорма[Регистр.Ключ + "НоваяЗапись"] = Ложь;
				
				Если Элементы.Найти(Регистр.Ключ + "ПериодСтрокой") <> Неопределено Тогда 
					ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, Регистр.Ключ + ".Период", Регистр.Ключ + "ПериодСтрокой");
					
				ИначеЕсли Элементы.Найти(Регистр.Ключ + "ПериодГод") <> Неопределено Тогда
					ЭтаФорма[Регистр.Ключ + "ПериодГод"] = Год(ЭтаФорма[Регистр.Ключ].Период);
					
				КонецЕсли;
				
			Иначе
				ЭтаФорма[Регистр.Ключ + "Измененные"].Очистить();
				Для Каждого Запись Из Регистр.Значение Цикл
					ЗаполнитьЗначенияСвойств(ЭтаФорма[Регистр.Ключ + "Измененные"].Добавить(), Запись);
				КонецЦикла;
				
				Для Каждого Запись Из ЭтаФорма[Регистр.Ключ + "Срез"] Цикл
					Запись.Модифицированность = Ложь;
				КонецЦикла;
				ОбновитьСрез(Дата( ЭтаФорма[Регистр.Ключ + "ПериодГод"] ,1 ,1), Регистр.Ключ);
				
			КонецЕсли;
			
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтавкаРефинансированияЦБРазмерПриИзменении(Элемент)
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВводаПоСтруктуре(ЭтаФорма, "СтавкаРефинансированияЦБ", СтруктураВедущихОбъектов);
	Модифицированность = Модифицированность Или СтавкаРефинансированияЦБ.Размер <> СтавкаРефинансированияЦБПрежняя.Размер;
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаРефинансированияЦБПериодПриИзменении(Элемент)
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВводаПоСтруктуре(ЭтаФорма, "СтавкаРефинансированияЦБ", СтруктураВедущихОбъектов);
	Модифицированность = Модифицированность Или СтавкаРефинансированияЦБ.Период <> СтавкаРефинансированияЦБПрежняя.Период;
	
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяОплатаТрудаРФРазмерПриИзменении(Элемент)
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВводаПоСтруктуре(ЭтаФорма, "МинимальнаяОплатаТрудаРФ", СтруктураВедущихОбъектов);
	Модифицированность = Модифицированность Или МинимальнаяОплатаТрудаРФ.Размер <> МинимальнаяОплатаТрудаРФПрежняя.Размер;
	//Модифицированность = Модифицированность Или МинимальнаяОплатаТрудаРФ.Период <> МинимальнаяОплатаТрудаРФПрежняя.Период;
	
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяОплатаТрудаРФПериодСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "МинимальнаяОплатаТрудаРФ.Период", "МинимальнаяОплатаТрудаРФПериодСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяОплатаТрудаРФПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(
		ЭтаФорма,
		ЭтаФорма,
		"МинимальнаяОплатаТрудаРФ.Период",
		"МинимальнаяОплатаТрудаРФПериодСтрокой",
		,
		,
		МесяцПоУмолчанию());
	
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяОплатаТрудаРФПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(
		ЭтаФорма, "МинимальнаяОплатаТрудаРФ.Период", "МинимальнаяОплатаТрудаРФПериодСтрокой",
		Направление, Модифицированность, МесяцПоУмолчанию());
	
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяОплатаТрудаРФПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяОплатаТрудаРФПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры


&НаКлиенте
Процедура МаксимальныйРазмерЕжемесячнойСтраховойВыплатыРазмерПриИзменении(Элемент)
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВводаПоСтруктуре(ЭтаФорма, "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты", СтруктураВедущихОбъектов);
	Модифицированность = Модифицированность Или МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.Размер <> МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПрежняя.Размер;
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.Период", "МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(
		ЭтаФорма,
		ЭтаФорма,
		"МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.Период",
		"МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокой",
		,
		,
		МесяцПоУмолчанию());
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(
		ЭтаФорма, "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.Период", "МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокой",
		Направление, Модифицированность, МесяцПоУмолчанию());
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура РазмерГосударственныхПособийПриИзменении(НаименованиеПособия)
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВводаПоСтруктуре(ЭтаФорма, "РазмерыГосударственныхПособий", СтруктураВедущихОбъектов);
	Модифицированность = Модифицированность Или РазмерыГосударственныхПособий[НаименованиеПособия] <> РазмерыГосударственныхПособийПрежняя[НаименованиеПособия];
	
КонецПроцедуры

&НаКлиенте
Процедура ПредельнаяВеличинаБазыСтраховыхВзносовПриИзменении(НаименованиеПособия)
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВводаПоСтруктуре(ЭтаФорма, "ПредельнаяВеличинаБазыСтраховыхВзносов", СтруктураВедущихОбъектов);
	Модифицированность = Модифицированность Или ПредельнаяВеличинаБазыСтраховыхВзносов[НаименованиеПособия] <> ПредельнаяВеличинаБазыСтраховыхВзносовПрежняя[НаименованиеПособия];
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийПриПостановкеНаУчетВРанниеСрокиБеременностиПриИзменении(Элемент)
	РазмерГосударственныхПособийПриИзменении("ПриПостановкеНаУчетВРанниеСрокиБеременности");
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийПриРожденииРебенкаПриИзменении(Элемент)
	РазмерГосударственныхПособийПриИзменении("ПриРожденииРебенка");
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийМинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛетПриИзменении(Элемент)
	РазмерГосударственныхПособийПриИзменении("МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет");
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийМинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛетПриИзменении(Элемент)
	РазмерГосударственныхПособийПриИзменении("ПоУходуЗаПоследующимРебенкомДоПолутораЛет");
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийМаксимумПособияПоУходуЗаРебенкомДоПолутораЛетПриИзменении(Элемент)
	РазмерГосударственныхПособийПриИзменении("ПоУходуЗаРебенкомДоПолутораЛет");
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийПоУходуЗаРебенкомДоТрехЛетПриИзменении(Элемент)
	РазмерГосударственныхПособийПриИзменении("ПоУходуЗаРебенкомДоТрехЛет");
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийВСвязиСоСмертьюПриИзменении(Элемент)
	РазмерГосударственныхПособийПриИзменении("ВСвязиСоСмертью");
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийПериодСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "РазмерыГосударственныхПособий.Период", "РазмерыГосударственныхПособийПериодСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(
		ЭтаФорма,
		ЭтаФорма,
		"РазмерыГосударственныхПособий.Период",
		"РазмерыГосударственныхПособийПериодСтрокой",
		,
		,
		МесяцПоУмолчанию());
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(
		ЭтаФорма, "РазмерыГосударственныхПособий.Период", "РазмерыГосударственныхПособийПериодСтрокой",
		Направление, Модифицированность, МесяцПоУмолчанию());
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПредельнаяВеличинаБазыСтраховыхВзносовРазмерФССПриИзменении(Элемент)
	ПредельнаяВеличинаБазыСтраховыхВзносовПриИзменении("РазмерФСС");
КонецПроцедуры

&НаКлиенте
Процедура ПредельнаяВеличинаБазыСтраховыхВзносовРазмерПФРПриИзменении(Элемент)
	ПредельнаяВеличинаБазыСтраховыхВзносовПриИзменении("РазмерПФР");
КонецПроцедуры

&НаКлиенте
Процедура ПредельнаяВеличинаБазыСтраховыхВзносовРазмерФОМСПриИзменении(Элемент)
	ПредельнаяВеличинаБазыСтраховыхВзносовПриИзменении("РазмерФОМС")
КонецПроцедуры

&НаКлиенте
Процедура ПредельнаяВеличинаБазыСтраховыхВзносовПериодПриИзменении(Элемент)
	ПредельнаяВеличинаБазыСтраховыхВзносов.Период = Дата(ПредельнаяВеличинаБазыСтраховыхВзносовПериодГод, 1, 1);
КонецПроцедуры

&НаКлиенте
Процедура ПредельнаяВеличинаБазыСтраховыхВзносовПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ПредельнаяВеличинаБазыСтраховыхВзносов.Период = Дата(ПредельнаяВеличинаБазыСтраховыхВзносовПериодГод, 1, 1);
КонецПроцедуры

&НаКлиенте
Процедура ТарифыСтраховыхВзносовСрезВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТарифыСтраховыхВзносовСрезИстория" Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			МассивЗаписей = МассивЗаписейИстории(Элемент.ТекущиеДанные.ВидТарифа, "ТарифыСтраховыхВзносов"); 
			ВедущийОбъект = Элемент.ТекущиеДанные.ВидТарифа;
			
			ПараметрыФормы = Новый Структура("МассивЗаписей,ВедущийОбъект,ТолькоПросмотр", МассивЗаписей, ВедущийОбъект, ТолькоПросмотр);
			ОткрытьФорму("Обработка.РедактированиеЗаконодательныхЗначений.Форма.ТарифыСтраховыхВзносовРедактированиеИстории" , ПараметрыФормы, ЭтаФорма);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТарифыСтраховыхВзносовСрезПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Элемент.ТекущиеДанные.Модифицированность = Истина;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТарифыСтраховыхВзносовПериодГодПриИзменении(Элемент)
	ТарифыСтраховыхВзносовПериодГодПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТарифыСтраховыхВзносовПериодГодПриИзмененииНаСервере()
	ОбновитьСрез(Дата(ТарифыСтраховыхВзносовПериодГод, 1, 1), "ТарифыСтраховыхВзносов");
КонецПроцедуры

&НаКлиенте
Процедура РазмерВычетовНДФЛСрезПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Элемент.ТекущиеДанные.Модифицированность = Истина;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерВычетовНДФЛСрезВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "РазмерВычетовНДФЛСрезИстория" Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			МассивЗаписей = МассивЗаписейИстории(Элемент.ТекущиеДанные.КодВычета, "РазмерВычетовНДФЛ");
			ВедущийОбъект = Элемент.ТекущиеДанные.КодВычета;
			
			ПараметрыФормы = Новый Структура("МассивЗаписей,ВедущийОбъект,ТолькоПросмотр", МассивЗаписей, ВедущийОбъект, ТолькоПросмотр);
			ОткрытьФорму("Обработка.РедактированиеЗаконодательныхЗначений.Форма.РазмерВычетовНДФЛРедактированиеИстории" , ПараметрыФормы, ЭтаФорма);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерВычетовНДФЛПериодГодПриИзменении(Элемент)
	РазмерВычетовНДФЛПериодГодПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РазмерВычетовНДФЛПериодГодПриИзмененииНаСервере()
	ОбновитьСрез(Дата(РазмерВычетовНДФЛПериодГод, 1, 1), "РазмерВычетовНДФЛ");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СтавкаРефинансированияЦБИстория(Команда)
	ОткрытьИсторию("СтавкаРефинансированияЦБ");
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяОплатаТрудаРФИстория(Команда)
	ОткрытьИсторию("МинимальнаяОплатаТрудаРФ");
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйРазмерЕжемесячнойСтраховойВыплатыИстория(Команда)
	ОткрытьИсторию("МаксимальныйРазмерЕжемесячнойСтраховойВыплаты");
КонецПроцедуры

&НаКлиенте
Процедура РазмерыГосударственныхПособийИстория(Команда)
	ОткрытьИсторию("РазмерыГосударственныхПособий");
КонецПроцедуры

&НаКлиенте
Процедура ПредельнаяВеличинаБазыСтраховыхВзносовИстория(Команда)
	ОткрытьИсторию("ПредельнаяВеличинаБазыСтраховыхВзносов");
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	СохранитьИЗакрытьНаКлиенте(Ложь);
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере(НеЗакрыватьФорму = Истина)
	
	Если ЗаписатьСтавкаРефинансированияЦБ() И НеЗакрыватьФорму Тогда
		ПрочитатьСтавкаРефинансированияЦБ();
	КонецЕсли;
	
	Если ЗаписатьМинимальнаяОплатаТрудаРФ() И НеЗакрыватьФорму Тогда
		ПрочитатьМинимальнаяОплатаТрудаРФ();
	КонецЕсли;
	
	Если ЗаписатьМаксимальныйРазмерЕжемесячнойСтраховойВыплаты() И НеЗакрыватьФорму Тогда
		ПрочитатьМаксимальныйРазмерЕжемесячнойСтраховойВыплаты();
	КонецЕсли;
	
	Если ЗаписатьРазмерыГосударственныхПособий() И НеЗакрыватьФорму Тогда
		ПрочитатьРазмерыГосударственныхПособий();
	КонецЕсли;
	
	Если ЗаписатьПредельнаяВеличинаБазыСтраховыхВзносов() И НеЗакрыватьФорму Тогда
		ПрочитатьПредельнаяВеличинаБазыСтраховыхВзносов();
	КонецЕсли;
	
	ЗаписатьРазмерВычетовНДФЛ();
	ЗаписатьТарифыСтраховыхВзносов();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьИЗакрытьНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеОбщихДанных(Команда)
	
	Оповещение = Новый ОписаниеОповещения("РазрешитьРедактированиеОбщихДанныхЗавершение", ЭтотОбъект);
	Если ТолькоПросмотр Тогда
		ТекстВопроса = НСтр("ru ='Редактирование ''общих данных'' запрещено.
			|Если Вы разрешите редактирование общих данных,
			|то Ваша база не сможет перейти в сервис'");
		
		Кнопки = Новый СписокЗначений();
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, 	НСтр("ru = 'Отмена'"));
		Кнопки.Добавить(КодВозвратаДиалога.Да, 		НСтр("ru = 'Разрешить редактирование'"));
	Иначе
		
		ТекстВопроса = НСтр("ru = 'Редактирование ''общих данных'' уже разрешено.'");
		
		Кнопки = Новый СписокЗначений();
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, 	НСтр("ru = 'Отмена'"));
	КонецЕсли;
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Отмена, "Внимание");
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеОбщихДанныхЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	РазрешитьРедактированиеОбщихДанныхЗавершениеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеОбщихДанныхЗавершениеНаСервере()
	
	Константы.РазрешеноРедактированиеОбщихДанных.Установить(Истина);
	
	ТолькоПросмотр = Ложь;
	ОбновитьЭлементыФормыПоТекущимНастройкам();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	РедактированиеРазрешено = Пользователи.РолиДоступны("АдминистраторСистемы");
	Если РедактированиеРазрешено Тогда
		РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
		Если РежимРаботы.Автономный Или РежимРаботы.МодельСервиса Тогда
			РедактированиеРазрешено = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ТолькоПросмотр = Не (Константы.РазрешеноРедактированиеОбщихДанных.Получить() И РедактированиеРазрешено);
	
	ОбновитьЭлементыФормыПоТекущимНастройкам();
	
	СтавкаРефинансированияЦБНаборЗаписей.Очистить();
	СтавкаРефинансированияЦБНаборЗаписейПрочитан = Ложь;
	МинимальнаяОплатаТрудаРФНаборЗаписей.Очистить();
	МинимальнаяОплатаТрудаРФНаборЗаписейПрочитан = Ложь;
	МаксимальныйРазмерЕжемесячнойСтраховойВыплатыНаборЗаписей.Очистить();
	МаксимальныйРазмерЕжемесячнойСтраховойВыплатыНаборЗаписейПрочитан = Ложь;
	РазмерыГосударственныхПособийНаборЗаписей.Очистить();
	РазмерыГосударственныхПособийНаборЗаписейПрочитан = Ложь;
	ПредельнаяВеличинаБазыСтраховыхВзносовНаборЗаписей.Очистить();
	ПредельнаяВеличинаБазыСтраховыхВзносовНаборЗаписейПрочитан = Ложь;
	РазмерВычетовНДФЛНаборЗаписей.Очистить();
	РазмерВычетовНДФЛНаборЗаписейПрежний.Очистить();
	РазмерВычетовНДФЛНаборЗаписейПрочитан = Ложь;
	ТарифыСтраховыхВзносовНаборЗаписей.Очистить();
	ТарифыСтраховыхВзносовНаборЗаписейПрежний.Очистить();
	ТарифыСтраховыхВзносовНаборЗаписейПрочитан = Ложь;
	
	СтруктураВедущихОбъектов = Новый Структура;
	
	РедактированиеПериодическихСведений.ИнициализироватьЗаписьДляРедактированияВФормеПоСтруктуре(ЭтаФорма, "СтавкаРефинансированияЦБ", СтруктураВедущихОбъектов);
	РедактированиеПериодическихСведений.ИнициализироватьЗаписьДляРедактированияВФормеПоСтруктуре(ЭтаФорма, "МинимальнаяОплатаТрудаРФ", СтруктураВедущихОбъектов);
	РедактированиеПериодическихСведений.ИнициализироватьЗаписьДляРедактированияВФормеПоСтруктуре(ЭтаФорма, "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты", СтруктураВедущихОбъектов);
	РедактированиеПериодическихСведений.ИнициализироватьЗаписьДляРедактированияВФормеПоСтруктуре(ЭтаФорма, "РазмерыГосударственныхПособий", СтруктураВедущихОбъектов);
	РедактированиеПериодическихСведений.ИнициализироватьЗаписьДляРедактированияВФормеПоСтруктуре(ЭтаФорма, "ПредельнаяВеличинаБазыСтраховыхВзносов", СтруктураВедущихОбъектов);
	
	ПрочитатьСтавкаРефинансированияЦБ();
	ПрочитатьМинимальнаяОплатаТрудаРФ();
	ПрочитатьМаксимальныйРазмерЕжемесячнойСтраховойВыплаты();
	ПрочитатьРазмерыГосударственныхПособий();
	ПрочитатьПредельнаяВеличинаБазыСтраховыхВзносов();
	
	ТекущаяДата = ОбщегоНазначения.ТекущаяДатаПользователя();
	
	#Область РазмерВычетовНДФЛ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазмерВычетовНДФЛСрезПоследних.Период,
	|	РазмерВычетовНДФЛСрезПоследних.КодВычета,
	|	РазмерВычетовНДФЛСрезПоследних.Размер,
	|	РазмерВычетовНДФЛСрезПоследних.ОграничениеПоДоходам,
	|	ВЫРАЗИТЬ(""История изменений..."" КАК СТРОКА(20)) КАК История
	|ИЗ
	|	РегистрСведений.РазмерВычетовНДФЛ.СрезПоследних(&ТекущийГод, ) КАК РазмерВычетовНДФЛСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекущийГод", ТекущаяДата);
	РазмерВычетовНДФЛСрез.Загрузить(Запрос.Выполнить().Выгрузить());
	РазмерВычетовНДФЛПрежняя = Новый ФиксированнаяСтруктура("Период,КодВычета,Размер,ОграничениеПоДоходам");
	РазмерВычетовНДФЛПериодГод = Год(ТекущаяДата);
	
	#КонецОбласти
	
	#Область ТарифыСтраховыхВзносов
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТарифыСтраховыхВзносовСрезПоследних.Период КАК Период,
	|	ТарифыСтраховыхВзносовСрезПоследних.ВидТарифа КАК ВидТарифа,
	|	ТарифыСтраховыхВзносовСрезПоследних.ПФР КАК ПФР,
	|	ТарифыСтраховыхВзносовСрезПоследних.ФСС КАК ФСС,
	|	ТарифыСтраховыхВзносовСрезПоследних.ФССсИностранцев КАК ФССсИностранцев,
	|	ТарифыСтраховыхВзносовСрезПоследних.ФФОМС КАК ФФОМС,
	|	ВЫРАЗИТЬ(""История изменений..."" КАК СТРОКА(20)) КАК История
	|ИЗ
	|	РегистрСведений.ТарифыСтраховыхВзносов.СрезПоследних(&ТекущийГод, ) КАК ТарифыСтраховыхВзносовСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекущийГод", ТекущаяДата);
	ТарифыСтраховыхВзносовСрез.Загрузить(Запрос.Выполнить().Выгрузить());
	ТарифыСтраховыхВзносовПрежняя = Новый ФиксированнаяСтруктура("Период,ВидТарифа,ПФР,ФСС,ФССсИностранцев,ФФОМС");
	ТарифыСтраховыхВзносовПериодГод = Год(ТекущаяДата);
	
	#КонецОбласти
	
КонецПроцедуры

#Область ЧтениеЗапись

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведенийПоСтруктуре(ИмяРегистра, ВедущиеОбъекты) Экспорт
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписейПоСтруктуре(ЭтаФорма, ИмяРегистра, ВедущиеОбъекты);
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСтавкаРефинансированияЦБ()
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеПоСтруктуре (ЭтаФорма, "СтавкаРефинансированияЦБ", СтруктураВедущихОбъектов);
КонецПроцедуры

&НаСервере
Функция ЗаписатьСтавкаРефинансированияЦБ()
	
	ИзменилисьДанные = РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФормеПоСтруктуре(ЭтаФорма, "СтавкаРефинансированияЦБ", СтруктураВедущихОбъектов, ,Новый Структура("ЗаписьОбщихДанных"));
	
	Возврат ИзменилисьДанные;
	
КонецФункции

&НаСервере
Процедура ПрочитатьМинимальнаяОплатаТрудаРФ()
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеПоСтруктуре (ЭтаФорма, "МинимальнаяОплатаТрудаРФ", СтруктураВедущихОбъектов);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "МинимальнаяОплатаТрудаРФ.Период", "МинимальнаяОплатаТрудаРФПериодСтрокой");
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьМинимальнаяОплатаТрудаРФ()
	
	ИзменилисьДанные = РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФормеПоСтруктуре(ЭтаФорма, "МинимальнаяОплатаТрудаРФ", СтруктураВедущихОбъектов, ,Новый Структура("ЗаписьОбщихДанных"));
	
	Возврат ИзменилисьДанные;
	
КонецФункции

&НаСервере
Процедура ПрочитатьМаксимальныйРазмерЕжемесячнойСтраховойВыплаты()
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеПоСтруктуре (ЭтаФорма, "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты", СтруктураВедущихОбъектов);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.Период", "МаксимальныйРазмерЕжемесячнойСтраховойВыплатыПериодСтрокой");
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьМаксимальныйРазмерЕжемесячнойСтраховойВыплаты()
	
	ИзменилисьДанные = РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФормеПоСтруктуре(ЭтаФорма, "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты", СтруктураВедущихОбъектов, ,Новый Структура("ЗаписьОбщихДанных"));
	
	Возврат ИзменилисьДанные;
	
КонецФункции

&НаСервере
Процедура ПрочитатьРазмерыГосударственныхПособий()
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеПоСтруктуре (ЭтаФорма, "РазмерыГосударственныхПособий", СтруктураВедущихОбъектов);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "РазмерыГосударственныхПособий.Период", "РазмерыГосударственныхПособийПериодСтрокой");
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьРазмерыГосударственныхПособий()
	
	ИзменилисьДанные = РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФормеПоСтруктуре(ЭтаФорма, "РазмерыГосударственныхПособий", СтруктураВедущихОбъектов, ,Новый Структура("ЗаписьОбщихДанных"));
	
	Возврат ИзменилисьДанные;
	
КонецФункции

&НаСервере
Процедура ПрочитатьПредельнаяВеличинаБазыСтраховыхВзносов()
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеПоСтруктуре (ЭтаФорма, "ПредельнаяВеличинаБазыСтраховыхВзносов", СтруктураВедущихОбъектов);
	
	ПредельнаяВеличинаБазыСтраховыхВзносовПериодГод = Год(ПредельнаяВеличинаБазыСтраховыхВзносов.Период);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьПредельнаяВеличинаБазыСтраховыхВзносов()
	
	ИзменилисьДанные = РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФормеПоСтруктуре(ЭтаФорма, "ПредельнаяВеличинаБазыСтраховыхВзносов", СтруктураВедущихОбъектов, ,Новый Структура("ЗаписьОбщихДанных"));
	
	Возврат ИзменилисьДанные;
	
КонецФункции

&НаСервере
Процедура ЗаписатьРазмерВычетовНДФЛ()
	ЗаписатьРегистрСВедущимиОбъектами("РазмерВычетовНДФЛ");
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТарифыСтраховыхВзносов()
	ЗаписатьРегистрСВедущимиОбъектами("ТарифыСтраховыхВзносов");
КонецПроцедуры

&НаСервере
Процедура ОбновитьСрез(Период, ИмяРегистра)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Источник1", ЭтаФорма[ИмяРегистра + "Срез"].Выгрузить());
	Запрос.УстановитьПараметр("Источник2", ЭтаФОрма[ИмяРегистра + "Измененные"].Выгрузить());
	Запрос.УстановитьПараметр("Источник3", ЭтаФОрма[ИмяРегистра + "НаборЗаписейПрежний"].Выгрузить());
	Запрос.УстановитьПараметр("Период", Период);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Источник.Период,
	|	Источник.ВедущийОбъект,
	|	Источник.Модифицированность,
	|	Источник.Ресурсы
	|ПОМЕСТИТЬ ВТИсточник1
	|ИЗ
	|	&Источник1 КАК Источник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Источник.Период,
	|	Источник.ВедущийОбъект,
	|	Источник.Ресурсы
	|ПОМЕСТИТЬ ВТИсточник2
	|ИЗ
	|	&Источник2 КАК Источник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Источник.Период,
	|	Источник.ВедущийОбъект,
	|	Источник.Ресурсы
	|ПОМЕСТИТЬ ВТИсточник3
	|ИЗ
	|	&Источник3 КАК Источник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Источник.ВедущийОбъект,
	|	МАКСИМУМ(Источник.Период) КАК Период
	|ПОМЕСТИТЬ ВТИсточник2Срез
	|ИЗ
	|	ВТИсточник2 КАК Источник
	|ГДЕ
	|	Источник.Период <= &Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.ВедущийОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Источник.ВедущийОбъект,
	|	МАКСИМУМ(Источник.Период) КАК Период
	|ПОМЕСТИТЬ ВТИсточник3Срез
	|ИЗ
	|	ВТИсточник3 КАК Источник
	|ГДЕ
	|	Источник.Период <= &Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.ВедущийОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТИсточник1.ВедущийОбъект
	|ПОМЕСТИТЬ ВТОтборДляРегистра
	|ИЗ
	|	ВТИсточник1 КАК ВТИсточник1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсточник2Срез КАК ВТИсточник2Срез
	|		ПО ВТИсточник1.ВедущийОбъект = ВТИсточник2Срез.ВедущийОбъект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсточник3Срез КАК ВТИсточник3Срез
	|		ПО ВТИсточник1.ВедущийОбъект = ВТИсточник3Срез.ВедущийОбъект
	|ГДЕ
	|	ВТИсточник1.Модифицированность = ЛОЖЬ
	|	И ВТИсточник2Срез.ВедущийОбъект ЕСТЬ NULL 
	|	И ВТИсточник3Срез.ВедущийОбъект ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Источник.Период,
	|	Источник.ВедущийОбъект,
	|	Источник.Ресурсы
	|ПОМЕСТИТЬ ВТИсточник4
	|ИЗ
	|	ИмяРегистра_СрезПоследних КАК Источник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИсточник1.ВедущийОбъект,
	|	ВТИсточник1.Модифицированность,
	|	ВЫБОР
	|		КОГДА ВТИсточник1.Модифицированность
	|			ТОГДА ВТИсточник1.Ресурсы
	|		КОГДА ВТИсточник2.ВедущийОбъект ЕСТЬ НЕ NULL 
	|			ТОГДА ВТИсточник2.Ресурсы
	|		КОГДА ВТИсточник3.ВедущийОбъект ЕСТЬ НЕ NULL 
	|			ТОГДА ВТИсточник3.Ресурсы
	|		ИНАЧЕ ВТИсточник4.Ресурсы
	|	КОНЕЦ КАК Ресурсы
	|ИЗ
	|	ВТИсточник1 КАК ВТИсточник1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсточник2 КАК ВТИсточник2
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсточник2Срез КАК ВТИсточник2Срез
	|			ПО ВТИсточник2.ВедущийОбъект = ВТИсточник2Срез.ВедущийОбъект
	|				И ВТИсточник2.Период = ВТИсточник2Срез.Период
	|		ПО ВТИсточник1.ВедущийОбъект = ВТИсточник2.ВедущийОбъект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсточник3 КАК ВТИсточник3
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсточник3Срез КАК ВТИсточник3Срез
	|			ПО ВТИсточник3.ВедущийОбъект = ВТИсточник3Срез.ВедущийОбъект
	|				И ВТИсточник3.Период = ВТИсточник3Срез.Период
	|		ПО ВТИсточник1.ВедущийОбъект = ВТИсточник3.ВедущийОбъект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсточник4 КАК ВТИсточник4
	|		ПО ВТИсточник1.ВедущийОбъект = ВТИсточник4.ВедущийОбъект";
	
	ОписаниеРегистра = ОписаниеРегистра(ИмяРегистра);
	Ресурсы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ОписаниеРегистра.Ресурсы); 
	
	ИсточникРесурс = "";
	РезультатРесурс = "";
	ЗаготовкаРезультатаРесурса = 
	"ВЫБОР
	|		КОГДА ВТИсточник1.Модифицированность
	|			ТОГДА ВТИсточник1.Ресурсы
	|		КОГДА ВТИсточник2.ВедущийОбъект ЕСТЬ НЕ NULL 
	|			ТОГДА ВТИсточник2.Ресурсы
	|		КОГДА ВТИсточник3.ВедущийОбъект ЕСТЬ НЕ NULL 
	|			ТОГДА ВТИсточник3.Ресурсы
	|		ИНАЧЕ ВТИсточник4.Ресурсы
	|	КОНЕЦ КАК Ресурсы";
	
	Для Каждого Ресурс Из Ресурсы Цикл
		ИсточникРесурс = ИсточникРесурс + "Источник." + Ресурс + ",
		|";
		РезультатРесурс = РезультатРесурс + СтрЗаменить(ЗаготовкаРезультатаРесурса, "Ресурсы", Ресурс) + ",
		|";
	КонецЦикла;
	РезультатРесурс = РезультатРесурс + СтрЗаменить(ЗаготовкаРезультатаРесурса, "Ресурсы", "Период") + ",
	| ";
	РезультатРесурс = РезультатРесурс + "Выразить(""История изменений..."" КАК Строка(20)) КАК История" + "
	|";
	ИсточникРесурс = Лев(ИсточникРесурс, СтрДлина(ИсточникРесурс) - 2);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Источник.Ресурсы", ИсточникРесурс);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ЗаготовкаРезультатаРесурса, РезультатРесурс);
	
	ИмяРегистраСрез = "РегистрСведений." + ИмяРегистра + ".СрезПоследних(
	|			&Период,
	|			ВедущийОбъект В
	|				(ВЫБРАТЬ
	|					Источник.ВедущийОбъект
	|				ИЗ
	|					ВТОтборДляРегистра КАК Источник))";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяРегистра_СрезПоследних", ИмяРегистраСрез);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВедущийОбъект", ОписаниеРегистра.Измерение);
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	ЭтаФорма[ИмяРегистра + "Срез"].Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРегистрСВедущимиОбъектами(ИмяРегистра)
	
	ОписаниеРегистра = ОписаниеРегистра(ИмяРегистра);
	
	Для Каждого ЗаписьРегистра Из ЭтаФорма[ИмяРегистра + "Срез"] Цикл
		
		МассивЗаписей = ЭтаФорма[ИмяРегистра + "Измененные"].НайтиСтроки(Новый Структура(ОписаниеРегистра.Измерение, ЗаписьРегистра[ОписаниеРегистра.Измерение]));
		
		Если ЗаписьРегистра.Модифицированность = Истина Тогда
			НоваяСтрока = Новый Структура(ОписаниеРегистра.СтруктураСтрокой);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗаписьРегистра);
			НоваяСтрока.Период = Дата(ТарифыСтраховыхВзносовПериодГод, 1, 1);
			
			НовыйПериод = Истина;
			Если МассивЗаписей.Количество() = 0 Тогда
				МассивЗаписей = МассивЗаписейИсторииНаСервере(ЗаписьРегистра[ОписаниеРегистра.Измерение], ИмяРегистра);
			КонецЕсли;
			Для Каждого Запись Из МассивЗаписей Цикл
				Если Запись.Период = НоваяСтрока.Период Тогда
					НовыйПериод = Ложь;
					ЗаполнитьЗначенияСвойств(Запись, НоваяСтрока);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НовыйПериод Тогда
				МассивЗаписей.Добавить(НоваяСтрока);
			КонецЕсли;
		КонецЕсли;
		
		Если МассивЗаписей.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЭтаФорма[ИмяРегистра + "НаборЗаписейПрочитан"] = Истина;
		ЭтаФорма[ИмяРегистра + "НаборЗаписей"].Очистить();
		Для Каждого Запись Из МассивЗаписей Цикл
			ЗаполнитьЗначенияСвойств(ЭтаФорма[ИмяРегистра + "НаборЗаписей"].Добавить(), Запись);
		КонецЦикла;
		
		ДанныеИзменились = РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтаФорма, ИмяРегистра, ЗаписьРегистра[ОписаниеРегистра.Измерение], ОписаниеРегистра.ИменаКолонокИсключаемыхИзСравнения ,Новый Структура("ЗаписьОбщихДанных"));
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОткрытьИсторию(ИмяРегистра)
	
	МассивЗаписей = РедактированиеПериодическихСведенийКлиентСервер.МассивЗаписейИсторииПоСтруктуре(ЭтаФорма, ИмяРегистра, СтруктураВедущихОбъектов);
	ПараметрыФормы = Новый Структура("МассивЗаписей,СтруктураВедущихОбъектов,ТолькоПросмотр", МассивЗаписей, СтруктураВедущихОбъектов, ТолькоПросмотр);
	ОткрытьФорму("Обработка.РедактированиеЗаконодательныхЗначений.Форма." + ИмяРегистра + "РедактированиеИстории" , ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Функция МесяцПоУмолчанию()
	Возврат НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеРегистра(ИмяРегистра)
	
	Описание = Новый Структура("Измерение, Ресурсы, СтруктураСтрокой, ИменаКолонокИсключаемыхИзСравнения");
	
	Если ИмяРегистра = "РазмерВычетовНДФЛ" Тогда
		Описание.Измерение = "КодВычета";
		Описание.Ресурсы = "Размер,ОграничениеПоДоходам";
		Описание.ИменаКолонокИсключаемыхИзСравнения = "";
		
	ИначеЕсли ИмяРегистра = "ТарифыСтраховыхВзносов" Тогда
		Описание.Измерение = "ВидТарифа";
		Описание.Ресурсы = "ПФР,ФСС,ФССсИностранцев,ФФОМС";
		Описание.ИменаКолонокИсключаемыхИзСравнения = "ПФРНакопительная,ТФОМС";
		
	КонецЕсли;
	
	Описание.СтруктураСтрокой = "Период," + Описание.Измерение + "," + Описание.Ресурсы;
	
	Возврат Описание;
	
КонецФункции

&НаКлиенте
Функция МассивЗаписейИстории(ВедущийОбъект, ИмяРегистра, ДополнятьИзСреза = Истина)
	
	ОписаниеРегистра = ОписаниеРегистра(ИмяРегистра);
	
	МассивЗаписей = Новый Массив();
	
	Отбор = Новый Структура(ОписаниеРегистра.Измерение, ВедущийОбъект); 
	
	Если ДополнятьИзСреза Тогда 
		ИмяНабора = ИмяРегистра + "Измененные";
	Иначе
		ИмяНабора = ИмяРегистра + "НаборЗаписейПрежний";
	КонецЕсли;
	
	ПрочитанныеЗаписи = ЭтаФорма[ИмяНабора].НайтиСтроки(Отбор);
	Если ПрочитанныеЗаписи.Количество() = 0 Тогда
		МассивЗаписей = МассивЗаписейИсторииНаСервере(ВедущийОбъект, ИмяРегистра);
	Иначе
		Для Каждого Запись Из ПрочитанныеЗаписи Цикл
			НоваяСтрока = Новый Структура(ОписаниеРегистра.СтруктураСтрокой);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Запись);
			МассивЗаписей.Добавить(НоваяСтрока);
		КонецЦикла;
	КонецЕсли;
	
	Если ДополнятьИзСреза Тогда 
		СтрокаСтреза =  ЭтаФорма[ИмяРегистра + "Срез"].НайтиСтроки(Отбор);
		Если СтрокаСтреза[0].Модифицированность Тогда
			Если Год(СтрокаСтреза[0].Период) <> ЭтаФорма[ИмяРегистра + "ПериодГод"] Тогда
				НоваяСтрока = Новый Структура(ОписаниеРегистра.СтруктураСтрокой);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСтреза[0]);
				НоваяСтрока.Период = Дата(ЭтаФорма[ИмяРегистра + "ПериодГод"], 1, 1);
				МассивЗаписей.Добавить(НоваяСтрока);
			Иначе
				Для Каждого Запись Из МассивЗаписей Цикл
					Если Запись.Период = СтрокаСтреза[0].Период Тогда
						ЗаполнитьЗначенияСвойств(Запись, СтрокаСтреза[0]);
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат МассивЗаписей;
	
КонецФункции

&НаСервере
Функция МассивЗаписейИсторииНаСервере(ВедущийОбъект, ИмяРегистра)
	
	ОписаниеРегистра = ОписаниеРегистра(ИмяРегистра);
	
	ПрежниеЗаписи = ЭтаФорма[ИмяРегистра + "НаборЗаписейПрежний"].НайтиСтроки(Новый Структура(ОписаниеРегистра.Измерение, ВедущийОбъект)); 
	Если ПрежниеЗаписи.Количество() Тогда
		МассивЗаписей = Новый Массив();
		Для Каждого Запись Из ПрежниеЗаписи Цикл
			НоваяСтрока = Новый Структура(ОписаниеРегистра.СтруктураСтрокой);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Запись);
			МассивЗаписей.Добавить(НоваяСтрока);
		КонецЦикла;
		
		Возврат МассивЗаписей;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор[ОписаниеРегистра.Измерение].Установить(ВедущийОбъект);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		ЗаполнитьЗначенияСвойств(ЭтаФорма[ИмяРегистра + "Измененные"].Добавить(), Запись, ОписаниеРегистра.СтруктураСтрокой);
		ЗаполнитьЗначенияСвойств(ЭтаФорма[ИмяРегистра + "НаборЗаписейПрежний"].Добавить(), Запись, ОписаниеРегистра.СтруктураСтрокой);
	КонецЦикла;
	
	МассивЗаписей = ОбщегоНазначения.ТаблицаЗначенийВМассив(НаборЗаписей.Выгрузить());
	
	Возврат МассивЗаписей;
	
КонецФункции

&НаСервере
Процедура ОбновитьЭлементыФормыПоТекущимНастройкам()
	
	Элементы.ОдиночныеЗначения.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ГосударственныеПособияГруппа.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ПредельнаяВеличинаБазыСтраховыхВзносовГруппа.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.РазмерВычетовНДФЛГруппа.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ТарифыСтраховыхВзносовГруппа.ТолькоПросмотр = ТолькоПросмотр;
	
	Элементы.ФормаРазрешитьРедактированиеОбщихДанных.Доступность = РедактированиеРазрешено;
	Элементы.ФормаЗагрузитьЗаконодательныеЗначения.Доступность = РедактированиеРазрешено;
	Элементы.ФормаВосстановитьЗаконодательныеЗначенияПоУмолчанию.Доступность = РедактированиеРазрешено;
	
КонецПроцедуры

#Область Сохранение

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗаписатьНаСервере(Ложь);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт 
	
	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	Если Не Отказ И Открыта() Тогда
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено) Экспорт
	
	Если Не Модифицированность Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		Возврат;
	КонецЕсли; 
	ЗапроситьРежимИзмененияСтавкаРефинансированияЦБ(Отказ, ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияСтавкаРефинансированияЦБ(Отказ, ОповещениеЗавершения)
	
	ДатаИзменения = СтавкаРефинансированияЦБ.Период;
	
	ТекстКнопкиДа = НСтр("ru = 'Изменилась ставка рефинансирования'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru =  'При редактировании изменена ставка рефинансирования.
	|Если исправлена прежнее значение ставки (она была ошибочной), нажмите ""Исправлена ошибка"".
	|Если изменились сведения с %1, нажмите'") + " ""%2""",
	Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
	ТекстКнопкиДа);
	
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияМинимальнаяОплатаТрудаРФ", ЭтотОбъект, ОповещениеЗавершения);
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "СтавкаРефинансированияЦБ", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияМинимальнаяОплатаТрудаРФ(Отказ, ОповещениеЗавершения) Экспорт 
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ДатаИзменения = МинимальнаяОплатаТрудаРФ.Период;
	
	ТекстКнопкиДа = НСтр("ru = 'Изменилась минимальная оплата труда'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru =  'При редактировании изменена минимальная оплата труда.
	|Если исправлено прежнее значение (оно было ошибочно), нажмите ""Исправлена ошибка"".
	|Если изменились сведения с %1, нажмите'") + " ""%2""",
	Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
	ТекстКнопкиДа);
	
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияМаксимальныйРазмерЕжемесячнойСтраховойВыплаты", ЭтотОбъект, ОповещениеЗавершения);
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "МинимальнаяОплатаТрудаРФ", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияМаксимальныйРазмерЕжемесячнойСтраховойВыплаты(Отказ, ОповещениеЗавершения) Экспорт 
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ДатаИзменения = МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.Период;
	
	ТекстКнопкиДа = НСтр("ru = 'Изменилсья максимальный размер ежемесячной страховой выплаты'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru =  'При редактировании изменен максимальный размер ежемесячной страховой выплаты.
	|Если исправлено прежнее значение (оно была ошибочно), нажмите ""Исправлена ошибка"".
	|Если изменились сведения с %1, нажмите'") + " ""%2""",
	Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
	ТекстКнопкиДа);
	
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияРазмерыГосударственныхПособий", ЭтотОбъект, ОповещениеЗавершения);
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "МаксимальныйРазмерЕжемесячнойСтраховойВыплаты", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияРазмерыГосударственныхПособий(Отказ, ОповещениеЗавершения) Экспорт 
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ДатаИзменения = РазмерыГосударственныхпособий.Период;
	
	ТекстКнопкиДа = НСтр("ru = 'Изменились размеры пособий'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru =  'При редактировании изменены размеры государственных пособий.
	|Если исправлено прежнее значение (оно была ошибочно), нажмите ""Исправлена ошибка"".
	|Если изменились сведения с %1, нажмите'") + " ""%2""",
	Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
	ТекстКнопкиДа);
	
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияПредельнаяВеличинаБазыСтраховыхВзносов", ЭтотОбъект, ОповещениеЗавершения);
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "РазмерыГосударственныхПособий", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияПредельнаяВеличинаБазыСтраховыхВзносов(Отказ, ОповещениеЗавершения) Экспорт 
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ДатаИзменения = ПредельнаяВеличинаБазыСтраховыхВзносов.Период;
	
	ТекстКнопкиДа = НСтр("ru = 'Изменилась предельная величина базы страховых взносов'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru =  'При редактировании изменилась предельная величина базы страховых взносов.
	|Если исправлено прежнее значение (оно была ошибочно), нажмите ""Исправлена ошибка"".
	|Если изменились сведения с %1, нажмите'") + " ""%2""",
	Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
	ТекстКнопкиДа);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьДанныеЗавершение", ЭтотОбъект, ОповещениеЗавершения);
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "ПредельнаяВеличинаБазыСтраховыхВзносов", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) Экспорт  
	
	ЗаписатьНаСервере();
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
