
#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаСервере
Перем КлючевоеСловоЗагрузилось;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользуемыеСайты();
	ЗагрузитьКлассификаторы();
	ИнтегрированныеСайты = ИнтеграцияРекрутинговыхСайтов.ИспользуемыеСайты();
	
	Если МассивСайтов = Неопределено Тогда
		
		Если ЗначениеЗаполнено(ИнтегрированныеСайты) Тогда
			ТекстСообщения = НСтр("ru = 'Используемые рекрутинговые сайты не поддерживают поиск резюме в Интернете по решению компании.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Поиск резюме на рекрутинговых сайтах отключен в настройках.'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат;
		
	КонецЕсли;
	
	УстановитьВидимостьИнфоНадписи();
	
	Если Параметры.Свойство("КлючевоеСлово", Объект.КлючевоеСлово) Тогда
		КлючевоеСловоЗагрузилось = Истина;
	Иначе
		КлючевоеСловоЗагрузилось = Ложь;
	КонецЕсли;
	
	Параметры.Свойство("Вакансия", Вакансия);
	
	ИспользоватьКлючевоеСлово = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого Сайт Из МассивСайтов Цикл
		ИнтеграцияРекрутинговыхСайтовКлиент.ЗагрузкаКлассификаторов(Сайт);
	КонецЦикла;
	
	НастройкаДоступностиЭлементовФормы();
	УстановитьЗаголовокНадписиРегион();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыНастройкиДоступаКСайтам" Тогда
		ИспользуемыеСайты();
		СброситьФильтры();
		УстановитьЗаголовокНадписиРегион();
		НастройкаДоступностиЭлементовФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Настройки.Вставить("Сайт", МассивСайтов);
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если КлючевоеСловоЗагрузилось Тогда
		Настройки.Удалить("Объект.КлючевоеСлово");
	КонецЕсли;
	
	Если МассивСайтов = Неопределено Тогда
		ИспользуемыеСайты();
	КонецЕсли;
	
	СохраненныеСайты = Настройки.Получить("Сайт");
	Если СохраненныеСайты <> Неопределено Тогда 
		Если Не ОбщегоНазначения.КоллекцииИдентичны(МассивСайтов, СохраненныеСайты) Тогда
			Для каждого ЭлементОтбора Из Настройки Цикл
				Настройки.Удалить(ЭлементОтбора.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РегионНажатие(Элемент)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Классификатор", "areas_towns");
	СтруктураПараметров.Вставить("МножественныйВыбор", Истина);
	СтруктураПараметров.Вставить("ВыбранныеСтроки", Объект.Регион);
	СтруктураПараметров.Вставить("ИспользуемыеСайты", МассивСайтов);
	
	ИнтеграцияРекрутинговыхСайтовКлиент.РегионНажатие(ЭтаФорма, СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура УровеньОбразованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачалоОдиночногоВыбораИзСписка(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачалоОдиночногоВыбораИзСписка(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРазмещенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачалоОдиночногоВыбораИзСписка(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВозрастОтПриИзменении(Элемент)
	ИспользоватьВозрастДо = ИспользоватьВозрастОт;
	НастройкаДоступностиЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУровеньЗарплатыОтПриИзменении(Элемент)
	ИспользоватьУровеньЗарплатыДо = ИспользоватьУровеньЗарплатыОт;
	НастройкаДоступностиЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРегионПриИзменении(Элемент)
	НастройкаДоступностиЭлементовФормы();
	Объект.Регион.Очистить();
	УстановитьЗаголовокНадписиРегион();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПолПриИзменении(Элемент)
	НастройкаДоступностиЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУровеньОбразованияПриИзменении(Элемент)
	НастройкаДоступностиЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПериодРазмещенияПриИзменении(Элемент)
	НастройкаДоступностиЭлементовФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНайденныеКандидаты

&НаКлиенте
Процедура НайденныеКандидатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.НайденныеКандидатыПостраничная.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент.Имя = "НайденныеКандидатыПостраничнаяСсылкаНаРезюме" Тогда
		ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку(Элемент.ТекущиеДанные.СсылкаНаРезюме);
	Иначе
		ИнтеграцияРекрутинговыхСайтовКлиент.СоздатьКандидатаПоРезюме(ТекущиеДанные.ИдентификаторРезюме, ТекущиеДанные.ГдеНайден, Вакансия);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НайденныеКандидатыПостраничнаяПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НайденныеКандидатыПостраничнаяПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаНайти(Команда)
	
	Если Не ЗаполненыВсеКритерииПоиска() Тогда
		Возврат;
	КонецЕсли;
	
	НомерСтраницы = -1;
	РазмерСтраницы = 50;
	НомерПорцииHeadHunter = 0;
	НомерПорцииRabota = 0;
	НомерПорцииSuperJob = 0;
	ЗагруженоКандидатовHeadHunter = 0;
	ЗагруженоКандидатовRabota = 0;
	ЗагруженоКандидатовSuperJob = 0;
	ВсегоКандидатовHeadHunter = 0;
	ВсегоКандидатовRabota = 0;
	ВсегоКандидатовSuperJob = 0;
	
	НайтиВДлительнойОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСледующиеКандидаты(Команда)
	
	Если Объект.НайденныеКандидаты.Количество() < РазмерСтраницы * (НомерСтраницы + 2) Тогда
		НайтиВДлительнойОперации();
	Иначе
		НайтиКандидатовЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредыдущиеКандидаты(Команда)
	
	Если НомерСтраницы <= 0 Тогда
		Возврат;
	КонецЕсли;
	
	НомерСтраницы = НомерСтраницы - 1;
	ОтобразитьСтрокиПоНомеруСтраницы(НомерСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРасширенныйПоиск(Команда)
	
	Элементы.ГруппаОтбор.Видимость = Не Элементы.ГруппаОтбор.Видимость;
	Если Не Элементы.ГруппаОтбор.Видимость Тогда
		Элементы.КомандаРасширенныйПоиск.Заголовок = "Показать расширенный поиск"
	Иначе
		Элементы.КомандаРасширенныйПоиск.Заголовок = "Скрыть расширенный поиск"
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РегионНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено 
		Или ВыбранныйЭлемент = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Регион = ВыбранныйЭлемент;
	
	УстановитьЗаголовокНадписиРегион();
	
КонецПроцедуры

&НаСервере 
Функция СписокВыбораНаСервере(СтруктураПутей)
	Возврат ИнтеграцияРекрутинговыхСайтов.ОбъединенныйСписокВыбораПоКлассификаторам(СтруктураПутей, МассивСайтов);
КонецФункции

&НаКлиенте
Процедура ВыборИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбранныхЗначений = Новый СписокЗначений;
	СписокВыбранныхЗначений.Добавить(ВыбранныйЭлемент.Значение, ВыбранныйЭлемент.Представление);
	Объект[ДополнительныеПараметры.ИмяЭлемента] = СписокВыбранныхЗначений;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоОдиночногоВыбораИзСписка(Элемент) 
	
	СписокВыбора = СписокВыбораНаСервере(СоответствиеИмениПоляИПутей().Получить(Элемент.Имя));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлемента", Элемент.Имя);
	
	ИнтеграцияРекрутинговыхСайтовКлиент.НачалоОдиночногоВыбораИзСписка(ЭтаФорма, СписокВыбора, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере 
Функция НайтиКандидатовНаСервере()
	
	СтруктураОтбора = ИнтеграцияРекрутинговыхСайтовКлиентСервер.СтруктураОтбораКандидатов();
	Для Каждого КлючИЗначение Из СтруктураОтбора Цикл
		Если КлючИЗначение.Ключ = "ТолькоВНазвании"
			Или КлючИЗначение.Ключ = "СкрыватьРезюмеБезЗарплаты" Тогда
			СтруктураОтбора[КлючИЗначение.Ключ] = Объект[КлючИЗначение.Ключ];
		Иначе		
			Если ЭтаФорма["Использовать" + КлючИЗначение.Ключ] Тогда
				СтруктураОтбора[КлючИЗначение.Ключ] = Объект[КлючИЗначение.Ключ];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("СтруктураОтбора", СтруктураОтбора);
	ПараметрыПроцедуры.Вставить("ИспользуемыеСайты", МассивСайтов);
	ПараметрыПроцедуры.Вставить("ТаблицаНайденныхКандидатов", Объект.НайденныеКандидаты.Выгрузить());
	ПараметрыПроцедуры.Вставить("НомерПорцииHeadHunter", НомерПорцииHeadHunter);
	ПараметрыПроцедуры.Вставить("НомерПорцииRabota", НомерПорцииRabota);
	ПараметрыПроцедуры.Вставить("НомерПорцииSuperJob", НомерПорцииSuperJob);
	ПараметрыПроцедуры.Вставить("ВсегоКандидатовHeadHunter", ВсегоКандидатовHeadHunter);
	ПараметрыПроцедуры.Вставить("ВсегоКандидатовRabota", ВсегоКандидатовRabota);
	ПараметрыПроцедуры.Вставить("ВсегоКандидатовSuperJob", ВсегоКандидатовSuperJob);
	ПараметрыПроцедуры.Вставить("ЗагруженоКандидатовHeadHunter", ЗагруженоКандидатовHeadHunter);
	ПараметрыПроцедуры.Вставить("ЗагруженоКандидатовRabota", ЗагруженоКандидатовRabota);
	ПараметрыПроцедуры.Вставить("ЗагруженоКандидатовSuperJob", ЗагруженоКандидатовSuperJob);
	
	Результат = ИнтеграцияРекрутинговыхСайтов.НайтиКандидатов(ПараметрыПроцедуры, УникальныйИдентификатор, АдресХранилища);
	
	Если Результат.Статус = "Выполнено" Тогда
		ЗагрузитьТаблицуНаСервере();
		НайтиКандидатовЗавершение();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СформироватьИнформационнуюНадпись(НомерСтраницы)
	
	ВсегоКандидатов = ВсегоКандидатовHeadHunter +  ВсегоКандидатовRabota + ВсегоКандидатовSuperJob;
	ИнформационнаяНадпись = НСтр("ru = 'Показаны кандидаты с'") + " " + ((НомерСтраницы) * 50 + 1) + " " + НСтр("ru = 'по'") + " " + ((НомерСтраницы) * 50 + Мин(50, НайденныеКандидатыПостраничная.Количество())) + " " + НСтр("ru = 'из'") + " " + ВсегоКандидатов;
	Элементы.ИнформационнаяНадписьКоличествоКандидатов.Заголовок = ИнформационнаяНадпись;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СоответствиеИмениПоляИПутей()
	
	СоответствиеИмениПоляИПутей = Новый Соответствие;
	
	СтруктураПутей = Новый Структура;
	СтруктураПутей.Вставить("Путь", "gender");
	СтруктураПутей.Вставить("ПутьHeadHunter", "gender");
	СтруктураПутей.Вставить("ПутьRabota", "gender");
	СтруктураПутей.Вставить("ПутьSuperJob", "gender");
	СоответствиеИмениПоляИПутей.Вставить("Пол", СтруктураПутей);
	
	СтруктураПутей = Новый Структура;
	СтруктураПутей.Вставить("Путь", "education_level");
	СтруктураПутей.Вставить("ПутьHeadHunter", "education_level");
	СтруктураПутей.Вставить("ПутьRabota", "offer_educations");
	СтруктураПутей.Вставить("ПутьSuperJob", "education");
	СоответствиеИмениПоляИПутей.Вставить("УровеньОбразования", СтруктураПутей);
	
	СтруктураПутей = Новый Структура;
	СтруктураПутей.Вставить("Путь", "periods");
	СтруктураПутей.Вставить("ПутьHeadHunter", "periods");
	СтруктураПутей.Вставить("ПутьRabota", "periods");
	СтруктураПутей.Вставить("ПутьSuperJob", "periods");
	СоответствиеИмениПоляИПутей.Вставить("ПериодРазмещения", СтруктураПутей);
	
	Возврат СоответствиеИмениПоляИПутей;
	
КонецФункции

&НаСервере 
Функция ОтобразитьСтрокиПоНомеруСтраницы(НомерСтраницы)
	
	НачальныйИндекс = 50 * НомерСтраницы;
	КонечныйИндекс = 50 * (НомерСтраницы + 1);
	
	Если НачальныйИндекс < Объект.НайденныеКандидаты.Количество() Тогда
		НайденныеКандидатыПостраничная.Очистить();
	Иначе
		Возврат Ложь;
	КонецЕсли;
		
	Для Индекс = НачальныйИндекс По КонечныйИндекс - 1 Цикл
		
		Если Индекс >= Объект.НайденныеКандидаты.Количество() Тогда
			Прервать;
		КонецЕсли;
		
		НоваяСтрока = НайденныеКандидатыПостраничная.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Объект.НайденныеКандидаты[Индекс]);
		
	КонецЦикла;
	
	СформироватьИнформационнуюНадпись(НомерСтраницы);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура НайтиКандидатовЗавершение() 
		
	Если ОтобразитьСтрокиПоНомеруСтраницы(НомерСтраницы + 1) Тогда
		НомерСтраницы = НомерСтраницы + 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
				ЗагрузитьТаблицуНаСервере();
				НайтиКандидатовЗавершение();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания",
					ПараметрыОбработчикаОжидания.ТекущийИнтервал,
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		
		СообщенияПользователю = СообщенияФоновогоЗадания(ИдентификаторЗадания);
		Если СообщенияПользователю <> Неопределено Тогда
			Для каждого СообщениеФоновогоЗадания Из СообщенияПользователю Цикл
				СообщениеФоновогоЗадания.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервереБезКонтекста
Функция СообщенияФоновогоЗадания(ИдентификаторЗадания)
	
	СообщенияПользователю = Новый Массив;
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	Если ФоновоеЗадание <> Неопределено Тогда
		СообщенияПользователю = ФоновоеЗадание.ПолучитьСообщенияПользователю();
	КонецЕсли;
	
	Возврат СообщенияПользователю;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьТаблицуНаСервере()

	Если ЗначениеЗаполнено(АдресХранилища) Тогда
		СтруктураРезультата = ПолучитьИзВременногоХранилища(АдресХранилища);
	КонецЕсли;
	
	Если ТипЗнч(СтруктураРезультата) = Тип("Структура") Тогда
		
		Объект.НайденныеКандидаты.Загрузить(СтруктураРезультата.ТаблицаНайденныхКандидатов);
		НомерПорцииHeadHunter = СтруктураРезультата.НомерПорцииHeadHunter;
		НомерПорцииRabota = СтруктураРезультата.НомерПорцииRabota;
		НомерПорцииSuperJob = СтруктураРезультата.НомерПорцииSuperJob;
		ВсегоКандидатовHeadHunter = СтруктураРезультата.ВсегоКандидатовHeadHunter;
		ВсегоКандидатовRabota = СтруктураРезультата.ВсегоКандидатовRabota;
		ВсегоКандидатовSuperJob = СтруктураРезультата.ВсегоКандидатовSuperJob;
		ЗагруженоКандидатовHeadHunter = ЗагруженоКандидатовHeadHunter + СтруктураРезультата.ЗагруженоКандидатовHeadHunter;
		ЗагруженоКандидатовRabota = ЗагруженоКандидатовRabota + СтруктураРезультата.ЗагруженоКандидатовRabota;
		ЗагруженоКандидатовSuperJob = ЗагруженоКандидатовSuperJob + СтруктураРезультата.ЗагруженоКандидатовSuperJob;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НайтиВДлительнойОперации()
	
	Результат = НайтиКандидатовНаСервере();
	ИнтеграцияРекрутинговыхСайтовКлиент.НайтиВДлительнойОперации(ЭтаФорма, ФормаДлительнойОперации, Результат, АдресХранилища, ПараметрыОбработчикаОжидания, ИдентификаторЗадания);
	
КонецПроцедуры

&НаСервере
Процедура НастройкаДоступностиЭлементовФормы()
	
	Элементы.ВозрастОт.Доступность = ИспользоватьВозрастОт;
	Элементы.ВозрастДо.Доступность = ИспользоватьВозрастДо;
	Элементы.Регион.Видимость = ИспользоватьРегион;
	Элементы.УровеньЗарплатыОт.Доступность = ИспользоватьУровеньЗарплатыОт;
	Элементы.СкрыватьРезюмеБезЗарплаты.Доступность = ИспользоватьУровеньЗарплатыОт;
	Элементы.УровеньЗарплатыДо.Доступность = ИспользоватьУровеньЗарплатыДо;
	Элементы.Пол.Доступность = ИспользоватьПол;
	Элементы.УровеньОбразования.Доступность = ИспользоватьУровеньОбразования;
	Элементы.ПериодРазмещения.Доступность = ИспользоватьПериодРазмещения;
	Элементы.НайденныеКандидатыПостраничнаяГдеНайден.Видимость = МассивСайтов <> Неопределено И МассивСайтов.Количество() > 1;
	
КонецПроцедуры

&НаСервере
Функция ЗаполненыВсеКритерииПоиска() 
	
	Отказ = Ложь;
	Ошибки = Неопределено;
	
	Если Не ЗначениеЗаполнено(Объект.КлючевоеСлово) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.КлючевоеСлово", НСтр("ru = 'Поле ""Ключевое слово"" не заполнено'"), "");
	КонецЕсли;
		
	Если ИспользоватьВозрастОт 
		И Не ЗначениеЗаполнено(Объект.ВозрастОт) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.ВозрастОт", НСтр("ru = 'Поле ""Возраст от"" не заполнено'"), "");
	КонецЕсли;
	
	Если ИспользоватьВозрастДо 
		И Не ЗначениеЗаполнено(Объект.ВозрастДо) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.ВозрастДо", НСтр("ru = 'Поле ""Возраст до"" не заполнено'"), "");
	КонецЕсли;
	
	Если ИспользоватьРегион 
		И Не ЗначениеЗаполнено(Объект.Регион) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.Регион", НСтр("ru = 'Поле ""Город"" не заполнено'"), "");
	КонецЕсли;

	Если ИспользоватьУровеньЗарплатыОт 
		И Не ЗначениеЗаполнено(Объект.УровеньЗарплатыОт) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.УровеньЗарплатыОт", НСтр("ru = 'Поле ""Зарплата от"" не заполнено'"), "");
	КонецЕсли;
	
	Если ИспользоватьУровеньЗарплатыДо 
		И Не ЗначениеЗаполнено(Объект.УровеньЗарплатыДо) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.УровеньЗарплатыДо", НСтр("ru = 'Поле ""Зарплата до"" не заполнено'"), "");
	КонецЕсли;
	
	Если ИспользоватьПол 
		И Не ЗначениеЗаполнено(Объект.Пол) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.Пол", НСтр("ru = 'Поле ""Пол"" не заполнено'"), "");
	КонецЕсли;

	Если ИспользоватьУровеньОбразования 
		И Не ЗначениеЗаполнено(Объект.УровеньОбразования) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.УровеньОбразования", НСтр("ru = 'Поле ""Уровень образования"" не заполнено'"), "");
	КонецЕсли;

	Если ИспользоватьПериодРазмещения 
		И Не ЗначениеЗаполнено(Объект.ПериодРазмещения) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.ПериодРазмещения", НСтр("ru = 'Поле ""Период размещения"" не заполнено'"), "");
	КонецЕсли;  
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Процедура УстановитьЗаголовокНадписиРегион()
	
	Элементы.Регион.Заголовок = "";
	Если Объект.Регион.Количество() = 0 Тогда
		Элементы.Регион.Заголовок = НСтр("ru = 'Заполнить'");
	Иначе
		Для Каждого Регион Из Объект.Регион Цикл
			Элементы.Регион.Заголовок = Элементы.Регион.Заголовок + Регион.Представление + ", ";
		КонецЦикла;
		Элементы.Регион.Заголовок = Лев(Элементы.Регион.Заголовок, СтрДлина(Элементы.Регион.Заголовок) - 2);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИнфоНадписи()
	
	ИспользуемыеСайты = ИнтеграцияРекрутинговыхСайтов.ИспользуемыеСайты();
	HeadHunter = ИнтеграцияРекрутинговыхСайтовКлиентСервер.HeadHunter();
	ТекущаяДата = ТекущаяДатаСеанса();
	
	Если ЗначениеЗаполнено(ИспользуемыеСайты) Тогда
		Элементы.ИнфоНадписьГруппа.Видимость = ИспользуемыеСайты.Найти(HeadHunter) <> Неопределено И ТекущаяДата < Дата(2018, 1, 1);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИспользуемыеСайты()
	
	МассивСайтов = Обработки.ПоискРезюмеВИнтернете.ИспользуемыеСайтыПриПоиске();
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьФильтры()
	
	Объект.Пол.Очистить();
	Объект.Регион.Очистить();
	Объект.УровеньОбразования.Очистить();
	Объект.ПериодРазмещения.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьКлассификаторы()
	
	Обработки.ПоискРезюмеВИнтернете.ЗагрузитьОбщиеСправочники();
	
КонецПроцедуры

#КонецОбласти
