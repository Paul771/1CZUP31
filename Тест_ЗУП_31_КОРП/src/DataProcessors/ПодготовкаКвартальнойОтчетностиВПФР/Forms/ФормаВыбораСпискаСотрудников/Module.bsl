#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка запроса списка для случаев использования возможностей кадрового учета
	УстановитьЗапросСписка();
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Сотрудники (%1)'"), 
		Параметры.Отбор.Организация);
		
	ОтчетныйПериод = Параметры.ОтчетныйПериод;		
		
	КорректируемыйПериод = ПерсонифицированныйУчетКлиентСервер.ПредшествующийОтчетныйПериодПерсУчета(ОтчетныйПериод);
	
	КорректируемыйПериодСтрока = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(КорректируемыйПериод);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КорректируемыйПериодСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	Если Не ((КорректируемыйПериод = '20100101' И Направление = -1) Или (КорректируемыйПериод = ДобавитьМесяц(ОтчетныйПериод, - 3) И Направление = 1))  Тогда
		ПерсонифицированныйУчетКлиент.ОтчетныйПериодРегулирование(КорректируемыйПериод, КорректируемыйПериодСтрока, Направление);
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ВыбранныеСотруднки.НайтиСтроки(Новый Структура("ФизическоеЛицо", ВыбраннаяСтрока)).Количество() = 0 Тогда
		НоваяСтрока = ВыбранныеСотруднки.Добавить();
		НоваяСтрока.ФизическоеЛицо = ВыбраннаяСтрока;
	КонецЕсли;			
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	МассивФизЛиц = Новый Массив;
	
	Для Каждого ВыбраннаяСтрока Из ВыбранныеСотруднки Цикл 
		МассивФизЛиц.Добавить(ВыбраннаяСтрока.ФизическоеЛицо);
	КонецЦикла;	
	
	Закрыть(Новый Структура("КорректируемыйПериод, МассивФизЛиц", КорректируемыйПериод, МассивФизЛиц));
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура УстановитьЗапросСписка()
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		
		Список.ТекстЗапроса =
			"ВЫБРАТЬ
			|	СправочникФизическиеЛица.Ссылка КАК Ссылка,
			|	СправочникФизическиеЛица.ПометкаУдаления КАК ПометкаУдаления,
			|	СправочникФизическиеЛица.Предопределенный КАК Предопределенный,
			|	СправочникФизическиеЛица.Родитель КАК Родитель,
			|	СправочникФизическиеЛица.ЭтоГруппа КАК ЭтоГруппа,
			|	СправочникФизическиеЛица.Код КАК Код,
			|	СправочникФизическиеЛица.Наименование КАК Наименование,
			|	СправочникФизическиеЛица.ДатаРождения КАК ДатаРождения,
			|	СправочникФизическиеЛица.ИНН КАК ИНН,
			|	СправочникФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
			|	ОсновныеСотрудникиФизическихЛиц.Сотрудник.Код КАК ТабельныйНомер,
			|	КадроваяИсторияСотрудниковИнтервальный.Организация КАК Филиал,
			|	КадроваяИсторияСотрудниковИнтервальный.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК СправочникФизическиеЛица
			|		ПО ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = СправочникФизическиеЛица.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудниковИнтервальный КАК КадроваяИсторияСотрудниковИнтервальный
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = КадроваяИсторияСотрудниковИнтервальный.Сотрудник
			|			И (КадроваяИсторияСотрудниковИнтервальный.ДатаНачала В
			|				(ВЫБРАТЬ ПЕРВЫЕ 1
			|					Т.ДатаНачала
			|				ИЗ
			|					РегистрСведений.КадроваяИсторияСотрудниковИнтервальный КАК Т
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|					И ОсновныеСотрудникиФизическихЛиц.ДатаОкончания МЕЖДУ Т.ДатаНачала И Т.ДатаОкончания
			|				УПОРЯДОЧИТЬ ПО
			|					Т.ДатаНачала УБЫВ))
			|ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ДатаОкончания = &МаксимальнаяДатаНачалоДня";
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Список, "МаксимальнаяДатаНачалоДня", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()), Истина);
		
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти
