#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗначенияДляЗаполнения  = Новый Структура("Организация", "Организация");	
	ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = ЗарплатаКадры.ПерваяДоступнаяОрганизация();
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ЛьготыСотрудников");
		Модуль.УстановитьЗаголовокГруппыУправленияПерерасчетами(ЭтаФорма);
	КонецЕсли;
	
	ЗаполнитьПерерасчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НачислениеЗарплаты" Тогда
		ЗаполнитьПерерасчетыЗарплаты();
	ИначеЕсли ИмяСобытия = "ДокументБольничныйЛистПослеЗаписи"
		Или ИмяСобытия = "ЗаписьДокументаКомандировка"
		Или ИмяСобытия = "Запись_ОплатаДнейУходаЗаДетьмиИнвалидами" 
		Или ИмяСобытия = "Запись_ОплатаПоСреднемуЗаработку" 
		Или ИмяСобытия = "ЗаписанДокументОтпуск" 
		Или ИмяСобытия = "Запись_ОтпускПоУходуЗаРебенком"
		Или ИмяСобытия = "Запись_ПереводНаОплатуПоСреднемуЗаработку"
		Или ИмяСобытия = "Запись_Увольнение"
		Или ИмяСобытия = "Запись_УвольнениеСписком" Тогда
		
		ЗаполнитьПерерасчетыСреднегоЗаработка();
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаДекорацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗарегистрироватьПерерасчетыЗарплаты" Тогда
		ЗарегистрироватьНеобходимостьПерерасчетаЗарплаты();
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЗарегистрироватьПерерасчетыУдержаний" Тогда
		ЗарегистрироватьНеобходимостьПерерасчетаУдержаний();
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ЗарегистрироватьПерерасчетыЛьгот" Тогда
		ЗарегистрироватьНеобходимостьПерерасчетаЛьгот();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаЗарплата

&НаКлиенте
Процедура ТаблицаЗарплатаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаЗарплатаСотрудник" Тогда
		ПоказатьЗначение(, ТаблицаЗарплата.НайтиПоИдентификатору(ВыбраннаяСтрока)["Сотрудник"]);
	ИначеЕсли Поле.Имя = "ТаблицаЗарплатаПричина" Тогда
		ОткрытьПричиныПерерасчетаЗарплаты(Элемент);
	Иначе
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Сотрудник", Элементы.ТаблицаЗарплата.ТекущиеДанные.Сотрудник);
		ПараметрыОткрытия.Вставить("ПериодДействия", Элементы.ТаблицаЗарплата.ТекущиеДанные.Период);
		
		ОткрытьФорму("Обработка.УправлениеПерерасчетами.Форма.ПодробнееОПерерасчетах", ПараметрыОткрытия, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗарплатаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ЗарегистрироватьНеобходимостьПерерасчетаЗарплаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗарплатаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ВыделенныеСтроки = Элементы.ТаблицаЗарплата.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		
		Если ВыделенныеСтроки.Количество() = 1 Тогда
			
			ТекущиеДанные = ТаблицаЗарплата.НайтиПоИдентификатору(ВыделенныеСтроки[0]);
			
			Если ТекущиеДанные.ПерерасчетНачислений И ТекущиеДанные.ПерерасчетЛьгот И ТекущиеДанные.ПерерасчетУдержаний Тогда
				
				ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перерасчета зарплаты и удержаний'")
					+ Символы.ПС + НСтр("ru='сотрудника'") + " %1 " + НСтр("ru='в'") + " %2 " + НСтр("ru='года'") + "?";
				
			ИначеЕсли ТекущиеДанные.ПерерасчетНачислений И ТекущиеДанные.ПерерасчетЛьгот И Не ТекущиеДанные.ПерерасчетУдержаний Тогда
				
				ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перерасчета зарплаты'")
					+ Символы.ПС + НСтр("ru='сотрудника'") + " %1 " + НСтр("ru='в'") + " %2 " + НСтр("ru='года'") + "?";
				
			ИначеЕсли ТекущиеДанные.ПерерасчетНачислений И Не ТекущиеДанные.ПерерасчетЛьгот И Не ТекущиеДанные.ПерерасчетУдержаний Тогда
				
				ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перерасчета начислений'")
					+ Символы.ПС + НСтр("ru='сотрудника'") + " %1 " + НСтр("ru='в'") + " %2 " + НСтр("ru='года'") + "?";
				
			ИначеЕсли Не ТекущиеДанные.ПерерасчетНачислений И ТекущиеДанные.ПерерасчетЛьгот И Не ТекущиеДанные.ПерерасчетУдержаний Тогда
				
				ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перерасчета льгот'")
					+ Символы.ПС + НСтр("ru='сотрудника'") + " %1 " + НСтр("ru='в'") + " %2 " + НСтр("ru='года'") + "?";
				
			ИначеЕсли Не ТекущиеДанные.ПерерасчетНачислений И Не ТекущиеДанные.ПерерасчетЛьгот И ТекущиеДанные.ПерерасчетУдержаний Тогда
				
				ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перерасчета удержаний'")
					+ Символы.ПС + НСтр("ru='сотрудника'") + " %1 " + НСтр("ru='в'") + " %2 " + НСтр("ru='года'") + "?";
				
			ИначеЕсли ТекущиеДанные.ПерерасчетНачислений И Не ТекущиеДанные.ПерерасчетЛьгот И ТекущиеДанные.ПерерасчетУдержаний Тогда
				
				ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перерасчета начислений и удержаний'")
					+ Символы.ПС + НСтр("ru='сотрудника'") + " %1 " + НСтр("ru='в'") + " %2 " + НСтр("ru='года'") + "?";
				
			ИначеЕсли Не ТекущиеДанные.ПерерасчетНачислений И ТекущиеДанные.ПерерасчетЛьгот И ТекущиеДанные.ПерерасчетУдержаний Тогда
				
				ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перерасчета льгот и удержаний'")
					+ Символы.ПС + НСтр("ru='сотрудника'") + " %1 " + НСтр("ru='в'") + " %2 " + НСтр("ru='года'") + "?";
				
			КонецЕсли;
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстВопроса,
				ТекущиеДанные.Сотрудник,
				Формат(ТекущиеДанные.Период, "ДФ='МММ гггг'"));
			
		Иначе
			ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перерасчета зарплаты (удержаний)?'")
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура("УдаляемыеСтроки", ВыделенныеСтроки);
		
		Оповещение = Новый ОписаниеОповещения("ТаблицаЗарплатаПередУдалениемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСреднийЗаработок

&НаКлиенте
Процедура ТаблицаСреднийЗаработокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаСреднийЗаработокСотрудник" Тогда
		ПоказатьЗначение(, ТаблицаСреднийЗаработок.НайтиПоИдентификатору(ВыбраннаяСтрока)["Сотрудник"]);
	ИначеЕсли Поле.Имя = "ТаблицаСреднийЗаработокДокумент" Тогда
		
		ТекущиеДанные = ТаблицаСреднийЗаработок.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Ключ",  ТекущиеДанные.Документ);
		ПараметрыОткрытия.Вставить("Сотрудник",  ТекущиеДанные.Сотрудник);
		
		ОткрытьФормуОбъекта(ТекущиеДанные.Документ, ПараметрыОткрытия);
		
	ИначеЕсли Поле.Имя = "ТаблицаСреднийЗаработокПричина" Тогда
		ОткрытьПричиныПерерасчетаЗарплаты(Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСреднийЗаработокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ВыделенныеСтроки = Элементы.ТаблицаСреднийЗаработок.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		
		Если ВыделенныеСтроки.Количество() = 1 Тогда
			
			ТекущиеДанные = ТаблицаСреднийЗаработок.НайтиПоИдентификатору(ВыделенныеСтроки[0]);
			
			ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перезаполнения сведений о среднем заработке и перерасчете документа'") + Символы.ПС + "%1 " + НСтр("ru='по сотруднику'") + " %2?";
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстВопроса,
				ТекущиеДанные.Документ,
				ТекущиеДанные.Сотрудник);
			
		Иначе
			ТекстВопроса = НСтр("ru='Удалить сведения о необходимости перезаполнения сведений о среднем заработке и перерасчете документов'") + "?";
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура("УдаляемыеСтроки", ВыделенныеСтроки);
		
		Оповещение = Новый ОписаниеОповещения("ТаблицаСреднийЗаработокПередУдалениемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьПерерасчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоначислитьСейчас(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаЗарплата.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		РасчетЗарплатыРасширенныйКлиент.ДоначислитьЗарплатуСейчас(Организация, ТекущиеДанные.Период);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Исправить(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаСреднийЗаработок.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИсправлениеДокументовЗарплатаКадрыКлиент.Исправить(ТекущиеДанные.Документ, ИмяОбъектаМетаданных(ТекущиеДанные.Документ));
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура Пересчитать(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаСреднийЗаработок.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Документ", ТекущиеДанные.Документ);
		ДополнительныеПараметры.Вставить("Сотрудник", ТекущиеДанные.Сотрудник);
		
		Если ТекущиеДанные.Период < ОткрытыйПериодВыплатыЗарплаты(Организация, ТекущиеДанные.Сотрудник) Тогда
			
			ТекстВопроса = НСтр("ru='Зарплата за %1 г. уже выплачена. При пересчете документа изменится сальдо
				|расчетов с сотрудником %2. Чтобы избежать этого выберите команду ""Исправить""
				|Все равно пересчитать документ?'");
				
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстВопроса,
				Формат(ТекущиеДанные.Период, "ДФ='МММ гггг'"),
				ТекущиеДанные.Сотрудник);
			
			Оповещение = Новый ОписаниеОповещения("ПересчитатьЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
			
		Иначе
			ПересчитатьЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПерерасчетЗарплаты(Команда)
	
	ЗарегистрироватьНеобходимостьПерерасчетаЗарплаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПерерасчетыЛьгот(Команда)
	
	ЗарегистрироватьНеобходимостьПерерасчетаЛьгот();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПерерасчетУдержаний(Команда)
	
	ЗарегистрироватьНеобходимостьПерерасчетаУдержаний();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗарегистрироватьНеобходимостьПерерасчетаЗарплаты()
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Организация", Организация);
		
		Оповещение = Новый ОписаниеОповещения("ЗарегистрироватьНеобходимостьПерерасчетаЗарплатыЗавершение", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.УправлениеПерерасчетами.Форма.ФормаНовойЗаписиПерерасчетовЗарплаты", ПараметрыОткрытия, ЭтаФорма, , , , Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьНеобходимостьПерерасчетаУдержаний()
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Организация", Организация);
		
		Оповещение = Новый ОписаниеОповещения("ЗарегистрироватьНеобходимостьПерерасчетаЗарплатыЗавершение", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.УправлениеПерерасчетами.Форма.ФормаНовойЗаписиПерерасчетовУдержаний", ПараметрыОткрытия, ЭтаФорма, , , , Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьНеобходимостьПерерасчетаЛьгот()
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
		
		МодульЛьготыСотрудниковКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЛьготыСотрудниковКлиент");
		МодульЛьготыСотрудниковКлиент.ОткрытьФормуНовойЗаписиПерерасчетовЛьгот(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьНеобходимостьПерерасчетаЗарплатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗаполнитьПерерасчетыЗарплаты(Результат.Сотрудник, Результат.Период);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Ключ", ДополнительныеПараметры.Документ);
		ПараметрыОткрытия.Вставить("ВыполнитьПерезаполнениеСведенийОСреднемЗаработке", Истина);
		ПараметрыОткрытия.Вставить("Сотрудник", ДополнительныеПараметры.Сотрудник);
		
		ОткрытьФормуОбъекта(ДополнительныеПараметры.Документ, ПараметрыОткрытия);
			
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиПользователя", "Организация", Организация);
	ЗаполнитьПерерасчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗарплатаПередУдалениемЗавершение(Результат, ДополнительныеСвойства) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УдалитьПерерасчетыТаблицыЗарплаты(ДополнительныеСвойства.УдаляемыеСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПерерасчетыТаблицыЗарплаты(УдаляемыеСтроки)
	
	Если УдаляемыеСтроки.Количество() > 0 Тогда
		
		Для каждого ИдентификаторУдаляемойСтроки Из УдаляемыеСтроки Цикл
			
			ТекущиеДанные = ТаблицаЗарплата.НайтиПоИдентификатору(ИдентификаторУдаляемойСтроки);
			Если ТекущиеДанные <> Неопределено Тогда
				
				НаборЗаписей = РегистрыСведений.ПерерасчетЗарплаты.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Организация.Установить(Организация);
				НаборЗаписей.Отбор.Сотрудник.Установить(ТекущиеДанные.Сотрудник);
				НаборЗаписей.Отбор.ПериодДействия.Установить(ТекущиеДанные.Период);
				НаборЗаписей.Отбор.ДокументНачисления.Установить(ТекущиеДанные.ДокументНачисления);
				
				НаборЗаписей.Записать();
				
				НаборЗаписей = РегистрыСведений.ПерерасчетУдержаний.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Организация.Установить(Организация);
				НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ТекущиеДанные.ФизическоеЛицо);
				НаборЗаписей.Отбор.ПериодДействия.Установить(ТекущиеДанные.Период);
				НаборЗаписей.Отбор.ДокументНачисления.Установить(ТекущиеДанные.ДокументНачисления);
				
				НаборЗаписей.Записать();
				
				Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
					Модуль = ОбщегоНазначения.ОбщийМодуль("ЛьготыСотрудников");
					Модуль.УдалитьЗаписьПерерасчетов(ТекущиеДанные.Период, ТекущиеДанные.Сотрудник, Организация, ТекущиеДанные.ДокументНачисления);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаполнитьПерерасчетыЗарплаты();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСреднийЗаработокПередУдалениемЗавершение(Результат, ДополнительныеСвойства) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УдалитьПерерасчетыТаблицыСреднийЗаработок(ДополнительныеСвойства.УдаляемыеСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПерерасчетыТаблицыСреднийЗаработок(УдаляемыеСтроки)
	
	Если УдаляемыеСтроки.Количество() > 0 Тогда
		
		Для каждого ИдентификаторУдаляемойСтроки Из УдаляемыеСтроки Цикл
			
			ТекущиеДанные = ТаблицаСреднийЗаработок.НайтиПоИдентификатору(ИдентификаторУдаляемойСтроки);
			Если ТекущиеДанные <> Неопределено Тогда
				
				НаборЗаписей = РегистрыСведений.ПерерасчетСреднегоЗаработка.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Организация.Установить(Организация);
				НаборЗаписей.Отбор.Сотрудник.Установить(ТекущиеДанные.Сотрудник);
				НаборЗаписей.Отбор.ДокументСреднегоЗаработка.Установить(ТекущиеДанные.Документ);
				
				НаборЗаписей.Записать();
				
			КонецЕсли; 
			
		КонецЦикла;
			
		ЗаполнитьПерерасчетыСреднегоЗаработка();
				
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПерерасчеты()
	
	ЗаполнитьПерерасчетыЗарплаты();
	ЗаполнитьПерерасчетыСреднегоЗаработка();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПерерасчетыЗарплаты(Сотрудник = Неопределено, Период = Неопределено)
	
	ТаблицаЗарплата.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПерерасчетЗарплаты.Организация,
		|	ПерерасчетЗарплаты.Сотрудник КАК Сотрудник,
		|	ПерерасчетЗарплаты.ФизическоеЛицо,
		|	ПерерасчетЗарплаты.ПериодДействия КАК ПериодДействия,
		|	ПерерасчетЗарплаты.Основание КАК Основание,
		|	ПерерасчетЗарплаты.ДокументНачисления КАК ДокументНачисления,
		|	ИСТИНА КАК ПерерасчетНачислений,
		|	ЛОЖЬ КАК ПерерасчетЛьгот,
		|	ЛОЖЬ КАК ПерерасчетУдержаний
		|ПОМЕСТИТЬ ВТПерерасчеты
		|ИЗ
		|	РегистрСведений.ПерерасчетЗарплаты КАК ПерерасчетЗарплаты
		|ГДЕ
		|	ПерерасчетЗарплаты.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПерерасчетУдержаний.Организация,
		|	NULL,
		|	ПерерасчетУдержаний.ФизическоеЛицо,
		|	ПерерасчетУдержаний.ПериодДействия,
		|	ПерерасчетУдержаний.Основание,
		|	ПерерасчетУдержаний.ДокументНачисления,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА
		|ИЗ
		|	РегистрСведений.ПерерасчетУдержаний КАК ПерерасчетУдержаний
		|ГДЕ
		|	ПерерасчетУдержаний.Организация = &Организация";
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ЛьготыСотрудников");
		Модуль.ДобавитьОбъединениеСПерерасчетамиЛьгот(Запрос.Текст);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПерерасчетЗарплаты.Организация КАК Организация,
		|	ЕСТЬNULL(МАКСИМУМ(ПерерасчетЗарплаты.Сотрудник), МАКСИМУМ(ДанныеСотрудников.Сотрудник)) КАК Сотрудник,
		|	ПерерасчетЗарплаты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПерерасчетЗарплаты.ПериодДействия КАК ПериодДействия,
		|	ПерерасчетЗарплаты.Основание КАК Основание,
		|	ПерерасчетЗарплаты.ДокументНачисления КАК ДокументНачисления,
		|	МАКСИМУМ(ПерерасчетЗарплаты.ПерерасчетНачислений) КАК ПерерасчетНачислений,
		|	МАКСИМУМ(ПерерасчетЗарплаты.ПерерасчетЛьгот) КАК ПерерасчетЛьгот,
		|	МАКСИМУМ(ПерерасчетЗарплаты.ПерерасчетУдержаний) КАК ПерерасчетУдержаний
		|ИЗ
		|	ВТПерерасчеты КАК ПерерасчетЗарплаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ДанныеСотрудников
		|		ПО ПерерасчетЗарплаты.ФизическоеЛицо = ДанныеСотрудников.ФизическоеЛицо
		|			И ПерерасчетЗарплаты.Организация.ГоловнаяОрганизация = ДанныеСотрудников.ГоловнаяОрганизация
		|			И (ПерерасчетЗарплаты.ПериодДействия МЕЖДУ ДанныеСотрудников.ДатаНачала И ДанныеСотрудников.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПерерасчетЗарплаты.Организация,
		|	ПерерасчетЗарплаты.ФизическоеЛицо,
		|	ПерерасчетЗарплаты.ПериодДействия,
		|	ПерерасчетЗарплаты.Основание,
		|	ПерерасчетЗарплаты.ДокументНачисления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЕСТЬNULL(МАКСИМУМ(ПерерасчетЗарплаты.Сотрудник), МАКСИМУМ(ДанныеСотрудников.Сотрудник)),
		|	ПерерасчетЗарплаты.ПериодДействия,
		|	ПерерасчетЗарплаты.ДокументНачисления,
		|	ПерерасчетЗарплаты.Основание";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			Пока Выборка.СледующийПоЗначениюПоля("ПериодДействия") Цикл
				
				Пока Выборка.СледующийПоЗначениюПоля("ДокументНачисления") Цикл
					
					НоваяСтрока = ТаблицаЗарплата.Добавить();
					НоваяСтрока.Сотрудник = Выборка.Сотрудник;
					НоваяСтрока.ФизическоеЛицо = Выборка.ФизическоеЛицо;
					НоваяСтрока.Период = Выборка.ПериодДействия;
					НоваяСтрока.ДокументНачисления = Выборка.ДокументНачисления;
					
					Пока Выборка.Следующий() Цикл
						
						ПерерасчетЗарплаты.ДобавитьПричинуПерерасчета(НоваяСтрока.Причина, Выборка.Основание);
						
						Если Выборка.ПерерасчетНачислений Тогда
							НоваяСтрока.ПерерасчетНачислений = Истина;
						КонецЕсли;
						
						Если Выборка.ПерерасчетЛьгот Тогда
							НоваяСтрока.ПерерасчетЛьгот = Истина;
						КонецЕсли;
						
						Если Выборка.ПерерасчетУдержаний Тогда
							НоваяСтрока.ПерерасчетУдержаний = Истина;
						КонецЕсли;
					
					КонецЦикла;
					
					НоваяСтрока.ПричинаНеизвестна = НоваяСтрока.Причина.Количество() = 0;
					
					Если Сотрудник = НоваяСтрока.Сотрудник
						И Период = НоваяСтрока.Период Тогда
						
						Элементы.ТаблицаЗарплата.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТаблицаЗарплата.Количество() = 0 Тогда
		
		ТекстДекорации = НСтр("ru='Причин для перерасчета и доначисления зарплаты нет'");
		Если ЗначениеЗаполнено(Организация) Тогда
			
			ТекстДекорации = Новый ФорматированнаяСтрока(
				ТекстДекорации + " (",
				Новый ФорматированнаяСтрока(НСтр("ru='зарегистрировать необходимость перерасчета или доначисления зарплаты'"), , , , "ЗарегистрироватьПерерасчетыЗарплаты"));
			
			Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
				
				ИмяОпции = "ИспользоватьЛьготыСотрудников";
				Если ПолучитьФункциональнуюОпциюФормы(ИмяОпции) Тогда
					
					ТекстДекорации = Новый ФорматированнаяСтрока(
						ТекстДекорации,
						", ",
						Новый ФорматированнаяСтрока(НСтр("ru='льгот'"), , , , "ЗарегистрироватьПерерасчетыЛьгот"));
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТекстДекорации = Новый ФорматированнаяСтрока(
				ТекстДекорации,
				" " + НСтр("ru='или'") + " ",
				Новый ФорматированнаяСтрока(НСтр("ru='удержаний'"), , , , "ЗарегистрироватьПерерасчетыУдержаний"),
				")");
			
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ЗарплатаДекорация",
			"Заголовок",
			ТекстДекорации);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗарплатаДекорация",
		"Видимость",
		ТаблицаЗарплата.Количество() = 0);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ТаблицаЗарплатаГруппа",
		"Видимость",
		ТаблицаЗарплата.Количество() <> 0);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПерерасчетыСреднегоЗаработка()
	
	ТаблицаСреднийЗаработок.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПерерасчетСреднегоЗаработка.Организация,
		|	ПерерасчетСреднегоЗаработка.Сотрудник КАК Сотрудник,
		|	ПерерасчетСреднегоЗаработка.ДокументСреднегоЗаработка КАК ДокументСреднегоЗаработка,
		|	ПерерасчетСреднегоЗаработка.ДокументСреднегоЗаработка.ПериодРегистрации КАК ПериодРегистрации,
		|	ПерерасчетСреднегоЗаработка.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	РегистрСведений.ПерерасчетСреднегоЗаработка КАК ПерерасчетСреднегоЗаработка
		|ГДЕ
		|	ПерерасчетСреднегоЗаработка.Организация = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	ДокументСреднегоЗаработка,
		|	ПериодРегистрации,
		|	ДокументОснование";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			Пока Выборка.СледующийПоЗначениюПоля("ДокументСреднегоЗаработка") Цикл
					
				Пока Выборка.СледующийПоЗначениюПоля("ПериодРегистрации") Цикл
					
					НоваяСтрока = ТаблицаСреднийЗаработок.Добавить();
					НоваяСтрока.Сотрудник = Выборка.Сотрудник;
					НоваяСтрока.Документ = Выборка.ДокументСреднегоЗаработка;
					НоваяСтрока.Период = Выборка.ПериодРегистрации;
					Пока Выборка.Следующий() Цикл
						ПерерасчетЗарплаты.ДобавитьПричинуПерерасчета(НоваяСтрока.Причина, Выборка.ДокументОснование);
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СреднийЗаработокДекорация",
		"Видимость",
		ТаблицаСреднийЗаработок.Количество() = 0);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ТаблицаСреднийЗаработокГруппа",
		"Видимость",
		ТаблицаСреднийЗаработок.Количество() <> 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныПерерасчетаЗарплаты(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено
		И ТекущиеДанные.Причина.Количество() > 0 Тогда
		
		Если ТекущиеДанные.Причина.Количество() = 1 Тогда
			ОткрытьПричиныПерерасчетаЗарплатыЗавершение(ТекущиеДанные.Причина[0]);
		Иначе
			
			Оповещение = Новый ОписаниеОповещения("ОткрытьПричиныПерерасчетаЗарплатыЗавершение", ЭтотОбъект);
			ПоказатьВыборИзСписка(Оповещение, ТекущиеДанные.Причина, Элемент);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныПерерасчетаЗарплатыЗавершение(Результат, ДополнительныеСвойства = Неопределено) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОткрытьФормуОбъекта(Результат.Значение);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОбъекта(СсылкаНаОбъект, ПараметрыОткрытия = Неопределено)
	
	Если ПараметрыОткрытия = Неопределено Тогда
		ПараметрыОткрытия = Новый Структура("Ключ", СсылкаНаОбъект);
	КонецЕсли; 
	
	ОткрытьФорму("Документ." + ИмяОбъектаМетаданных(СсылкаНаОбъект) + ".ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОткрытыйПериодВыплатыЗарплаты(Организация, Сотрудник = Неопределено)
	
	ОткрытыйПериод = '00010101';
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
		
	Если Сотрудник = Неопределено Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	МАКСИМУМ(ЗарплатаКВыплате.ПериодВзаиморасчетов) КАК ПериодВзаиморасчетов
			|ИЗ
			|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
			|ГДЕ
			|	ЗарплатаКВыплате.Организация = &Организация
			|	И ЗарплатаКВыплате.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)";
		
	Иначе
		
		Если ТипЗнч(Сотрудник) = Тип("СправочникСсылка.Сотрудники") Тогда
			Запрос.УстановитьПараметр("Сотрудники", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник));
		Иначе
			Запрос.УстановитьПараметр("Сотрудники", Сотрудник);
		КонецЕсли;
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ЗарплатаКВыплате.Сотрудник,
			|	МАКСИМУМ(ЗарплатаКВыплате.ПериодВзаиморасчетов) КАК ПериодВзаиморасчетов
			|ИЗ
			|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
			|ГДЕ
			|	ЗарплатаКВыплате.Организация = &Организация
			|	И ЗарплатаКВыплате.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|	И ЗарплатаКВыплате.Сотрудник В(&Сотрудники)
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗарплатаКВыплате.Сотрудник";
		
	КонецЕсли; 
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ОткрытыйПериод = КонецМесяца(Выборка.ПериодВзаиморасчетов) + 1;
		
	КонецЕсли; 
		
	Возврат ОткрытыйПериод;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяОбъектаМетаданных(Ссылка)
	
	Возврат Ссылка.Метаданные().Имя;
	
КонецФункции

#КонецОбласти
