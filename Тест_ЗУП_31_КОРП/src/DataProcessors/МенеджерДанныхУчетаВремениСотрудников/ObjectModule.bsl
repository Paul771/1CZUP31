#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем МенеджерВременныхТаблиц;
Перем ДатаАктуальности;

Перем ВременныеТаблицыКУничтожению;

Перем ВТИсточникиДанныхУчетаВремени;
Перем ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная;
Перем ВТПодневныеДанныеУчетаВремени;
Перем ВТИсходныйНаборСотрудникиМесяцы;
Перем ВТИнициализированныеИсточникиФактическихДанных;

Перем ИнициализированныеВременныеТаблицы;
Перем ИменаВременныхТаблиц;

Перем РежимПовторногоИспользованияВременныхТаблиц;
Перем ОписаниеНабораСотрудников;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ИнициализированныйМенеджерВременныхТаблиц() Экспорт
	Возврат МенеджерВременныхТаблиц;	
КонецФункции	

// Возвращает описание таблицы наборов видо времени (примером такой таблицы является ПланВидовРасчета.Начисления.ВидыВремени).
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя таблицы
//			ИмяПоляКлюч - имя поля ключ набора видо времени (для таблицы  ПланВидовРасчета.Начисления.ВидыВремени - это Ссылка) 
//			ИмяПоляВидВремени - строка
//			ИмяПоляУчитыватьТолькоПраздники - строка.
// 
Функция ОписаниеТаблицыНаборовВидовВремени() Экспорт
	ОписаниеТаблицы = Новый Структура;
	ОписаниеТаблицы.Вставить("ИмяТаблицы");
	ОписаниеТаблицы.Вставить("ИмяПоляКлюч");
	ОписаниеТаблицы.Вставить("ИмяПоляВидВремени");
	ОписаниеТаблицы.Вставить("ИмяПоляУчитыватьТолькоПраздники");
	
	Возврат ОписаниеТаблицы;
КонецФункции

// Возвращает описание отбора
//
// Возвращаемое значение - структура с полями
//			ЛевоеЗначение - имя поля в таблице, по которому нужно выполянть отбор
//			ПравоеЗначение - значение с которым будет сравниваться левое значение
//				может быть полем таблицы, параметром (в этом случае передается в формате &<ИмяПараметра>)
//				или может быть незадано, если левое значение имеет тип Булево
//			ПараметрПравоеЗначение - в случае, если правоче значение - параметр - в этом поле содержится значение параметра. В остальных случаях не заполняется.
// 
Функция ОписаниеОтбораПоТаблицеФильтру() Экспорт
	ОписаниеОтбора = Новый Структура;
	
	ОписаниеОтбора.Вставить("ЛевоеЗначение", "");
	ОписаниеОтбора.Вставить("ПравоеЗначение", "");
	ОписаниеОтбора.Вставить("ПараметрПравоеЗначение", Неопределено);
	
	Возврат ОписаниеОтбора;
КонецФункции	

#Область МетодыПолученияИстчониковДанныхУчетаВремени

// Возвращает описание таблицы-фильтра для меода СоздатьВТИсточникиДанныхУчетаВремениНаДаты.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДата
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
// 
Функция ОписаниеФильтраВТИсточникиДанныхУчетаВремениНаДаты() Экспорт 
	ОписаниеФильтра = Новый Структура;
	
	ОписаниеФильтра.Вставить("ИмяТаблицы");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДата");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;
КонецФункции

// Создает временную таблицу, содеращую источник данных учета времени на даты
//	Таблица содержит поля:
//		Сотрудник
//		ИсточникДанныхФактическогоВремени
//		ПериодРегистрацииФактическогоВремени
//		ПериодРегистрацииНормыВремени
//		ОбщийГрафик
//		СуммированныйУчетРабочегоВремени - булево.
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТИсточникиДанныхУчетаВремениНаДаты
//		ИмяВТРезультат - имя результирующей ВТ.
// 
Процедура СоздатьВТИсточникиДанныхУчетаВремениНаДаты(ОписаниеФильтра, ИмяВТРезультат = "ВТИсточникиДанныхУчетаВремениНаДаты") Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеФильтра.ИмяТаблицы, ОписаниеФильтра.ИмяПоляСотрудник, ОписаниеФильтра.ИмяПоляДата, ОписаниеФильтра.ИмяПоляДата);
	КонецЕсли;	
	
	СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная();
	
	Запрос = СоздатьЗапрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаФильтр.Сотрудник КАК Сотрудник,
	|	ТаблицаФильтр.Дата КАК Дата,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ИсточникДанныхФактическогоВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ИсточникДанныхНормыВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ПериодРегистрацииФактическогоВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ПериодРегистрацииНормыВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ВремяВведеноСводно,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ОбщийГрафик,
	|	ЕСТЬNULL(ГрафикиРаботыСотрудников.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТТаблицаФильтр КАК ТаблицаФильтр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная КАК ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыСотрудников КАК ГрафикиРаботыСотрудников
	|			ПО ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ОбщийГрафик = ГрафикиРаботыСотрудников.Ссылка
	|		ПО ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.Сотрудник = ТаблицаФильтр.Сотрудник
	|			И (ТаблицаФильтр.Дата МЕЖДУ ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаНачала И ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаОкончания)";
	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаФильтр", ОписаниеФильтра.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Сотрудник", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Дата", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляДата);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	
	Запрос.Выполнить();
	
	УничтожитьВременныеТаблицы();
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для меода СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремени.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
// 
Функция ОписаниеФильтраВТИнтервалыДействияИсточниковДанныхУчетаВремени() Экспорт 
	ОписаниеФильтра = Новый Структура;
	
	ОписаниеФильтра.Вставить("ИмяТаблицы");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;
КонецФункции

// Создает временную таблицу, содержащую источники данных и интервады их действия
//	Таблица содержит поля:
//		Сотрудник
//		ДатаНачала
//		ДатаОкончания
//		ИсточникДанныхФактическогоВремени
//		ПериодРегистрацииФактическогоВремени
//		ПериодРегистрацииНормыВремени
//		ОбщийГрафик
//		СуммированныйУчетРабочегоВремени - булево.
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТИсточникиДанныхУчетаВремениНаДаты
//		ИмяВТРезультат - имя результирующей ВТ.
// 
Процедура СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремени(ОписаниеФильтра, ИмяВТРезультат = "ВТИнтервалыДействияИсточниковДанныхУчетаВремени") Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеФильтра.ИмяТаблицы, ОписаниеФильтра.ИмяПоляСотрудник, ОписаниеФильтра.ИмяПоляНачала, ОписаниеФильтра.ИмяПоляДатаОкончания);
	КонецЕсли;
	
	СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная();
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаФильтр.Сотрудник,
	|	ВЫБОР
	|		КОГДА ТаблицаФильтр.ДатаНачала < ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаНачала
	|			ТОГДА ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаНачала
	|		ИНАЧЕ ТаблицаФильтр.ДатаНачала
	|	КОНЕЦ КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА ТаблицаФильтр.ДатаОкончания > ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаОкончания
	|			ТОГДА ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаОкончания
	|		ИНАЧЕ ТаблицаФильтр.ДатаОкончания
	|	КОНЕЦ КАК ДатаОкончания,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ОбщийГрафик,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ИсточникДанныхФактическогоВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ИсточникДанныхНормыВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ПериодРегистрацииФактическогоВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ПериодРегистрацииНормыВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ВремяВведеноСводно,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ПроизводственныйКалендарь,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ИсточникДанныхПолнойНормыВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.СуммированныйУчетРабочегоВремени
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТТаблицаФильтр КАК ТаблицаФильтр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная КАК ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная
	|		ПО ТаблицаФильтр.Сотрудник = ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.Сотрудник
	|			И (ТаблицаФильтр.ДатаНачала МЕЖДУ ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаНачала И ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаОкончания
	|				ИЛИ ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаНачала МЕЖДУ ТаблицаФильтр.ДатаНачала И ТаблицаФильтр.ДатаОкончания)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаФильтр", ОписаниеФильтра.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Сотрудник", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ДатаНачала", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляДатаНачала);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ДатаОкончания", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляДатаОкончания);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат",  ИмяВТРезультат);
	
	Запрос.Выполнить();
	
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для меода СоздатьВТПериодыИзмененияИсточниковДанныхУчетаВремени.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДата
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
// 
Функция ОписаниеФильтраВТПериодыИзмененияИсточниковДанныхУчетаВремени() Экспорт 
	ОписаниеФильтра = Новый Структура;
	ОписаниеФильтра.Вставить("ИмяТаблицы");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;
КонецФункции

// Создает временную таблицу, содеращую даты изменения источников данным по сотрудникам
//	Таблица содержит поля:
//		Сотрудник
//		Период
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТПериодыИзмененияИсточниковДанныхУчетаВремени
//		ИмяВТРезультат - имя результирующей ВТ.
// 
Процедура СоздатьВТПериодыИзмененияИсточниковДанныхУчетаВремени(ОписаниеФильтра, ИмяВТРезультат = "ВТПериодыИзмененияИсточниковДанныхУчетаВремени") Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеФильтра.ИмяТаблицы, ОписаниеФильтра.ИмяПоляСотрудник, ОписаниеФильтра.ИмяПоляДатаНачала, ОписаниеФильтра.ИмяПоляДатаОкончания);
	КонецЕсли;	

	СоздатьВТИстчоникиДанныхУчетаВремени();
	
	Запрос = СоздатьЗапрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаФильтр.Сотрудник,
	|	ПериодыИзмененияИсточниковДанных.Период
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТТаблицаФильтр КАК ТаблицаФильтр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсточникиДанныхУчетаВремени КАК ПериодыИзмененияИсточниковДанных
	|		ПО ТаблицаФильтр.Сотрудник = ПериодыИзмененияИсточниковДанных.Сотрудник
	|			И ТаблицаФильтр.ДатаНачала <= ПериодыИзмененияИсточниковДанных.Период
	|			И ТаблицаФильтр.ДатаОкончания >= ПериодыИзмененияИсточниковДанных.Период
	|			И (ПериодыИзмененияИсточниковДанных.СобытиеИзменение)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаФильтр", ОписаниеФильтра.ИмяТаблицы); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Сотрудник", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ДатаНачала", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляДатаНачала);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ДатаОкончания", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляДатаОкончания);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	
	Запрос.Выполнить();	
	
	УничтожитьВременныеТаблицы();
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для метода СоздатьВТСуммированныйУчетПоСотрудникам.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДата
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
// 
Функция ОписаниеФильтраВТСуммированныйУчетПоСотрудникам() Экспорт 
	ОписаниеФильтра = Новый Структура;
	
	ОписаниеФильтра.Вставить("ИмяТаблицы");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДата");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;	
КонецФункции

// Создает временную таблицу, содеращую признаки суммированного учета времени по сотрудникам
//	Таблица содержит поля:
//		Сотрудник
//		Дата
//		СуммированныйУчетРабочегоВремени
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТИсточникиДанныхУчетаВремениНаДаты
//		ИмяВТРезультат - имя результирующей ВТ.
// 
Процедура СоздатьВТСуммированныйУчетПоСотрудникам(ОписаниеФильтра, ИмяВТРезультат = "ВТСуммированныйУчетПоСотрудникам") Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеФильтра.ИмяТаблицы, ОписаниеФильтра.ИмяПоляСотрудник, ОписаниеФильтра.ИмяПоляДата, ОписаниеФильтра.ИмяПоляДата);
	КонецЕсли;
	
	СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная();
	
	Запрос = СоздатьЗапрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаФильтр.Сотрудник КАК Сотрудник,
	|	ТаблицаФильтр.Дата КАК Дата,
	|	ЕСТЬNULL(ГрафикиРаботыСотрудников.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТТаблицаФильтр КАК ТаблицаФильтр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная КАК ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыСотрудников КАК ГрафикиРаботыСотрудников
	|			ПО ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ОбщийГрафик = ГрафикиРаботыСотрудников.Ссылка
	|		ПО ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.Сотрудник = ТаблицаФильтр.Сотрудник
	|			И (ТаблицаФильтр.Дата МЕЖДУ ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаНачала И ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаОкончания)";
	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаФильтр", ОписаниеФильтра.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Сотрудник", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Дата", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляДата);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	
	Запрос.Выполнить();
	
	УничтожитьВременныеТаблицы();

КонецПроцедуры	

Функция ОписаниеФильтраВТАктальностьИсточниковДанныхУчетаВремени() Экспорт 
	
КонецФункции

Процедура СоздатьВТАктальностьИсточниковДанныхУчетаВремени(ОписаниеФильтра) Экспорт
	
КонецПроцедуры	

#КонецОбласти

#Область МетодыПолученияЗарегистрированныхНаборовВидовВремени

// Возвращает описание таблицы-фильтра для метода СоздатьВТЗарегистрированныеНаборыВидовВремени.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
// 
Функция ОписаниеФильтраВТЗарегистрированныеНаборыВидовВремени() Экспорт 
	ОписаниеФильтра = Новый Структура;
	ОписаниеФильтра.Вставить("ИмяТаблицы", "");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ИмяПоляДатаОкончания");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;	
КонецФункции	

// Создает временную таблицу, содеращую ключи наборов видов времени, которые были зарегистрированы
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		ДатаНачала
//		ДатаОкончания
//		КлючНабораВидовВремени
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТИсточникиДанныхУчетаВремениНаДаты
//		ОписаниеТаблицыНаборовВидовВремени - см. ОписаниеТаблицыНаборовВидовВремени.
//			описание таблицы наборов видо времени. В данном случае,в таблице должны быть только те наборы 
//			видов времени, которые нас интересуют (например - только наборы видов времени выстреливающих начислений)
//		ИмяВТРезультат - имя результирующей ВТ.
// 
Процедура СоздатьВТЗарегистрированныеНаборыВидовВремени(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ИмяВТРезультат = "ВТЗарегистрированныеНаборыВидовВремени") Экспорт
	ПараметрыПостроенияЗапроса = ПараметрыПостроенияЗапросаВТЗарегистрированныеНаборовВидовВремениСлужебная();	
	
	ПараметрыПостроенияЗапроса.ИспользоватьСвязьПоКлючуНаборов = Ложь;
	ПараметрыПостроенияЗапроса.ИспользоватьУсловиеЗарегистрированыЧасы = Ложь;
	ПараметрыПостроенияЗапроса.ИмяВТРезультат = ИмяВТРезультат;

	СоздатьВТЗарегистрированныеНаборыВидовВремениСлужебная(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ПараметрыПостроенияЗапроса);
	
	УничтожитьВременныеТаблицы();
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для метода СоздатьВТНаличиеЗарегистрированныхНаборовВидовВремениВИтервале.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			ИмяПоляКлючНабораВидовВремени
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
// 
Функция ОписаниеФильтраВТНаличиеЗарегистрированныхНаборовВидовВремениВИтервале() Экспорт 
	ОписаниеФильтра = Новый Структура;
	ОписаниеФильтра.Вставить("ИмяТаблицы", "");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	//ОписаниеФильтра.Вставить("ИмяПоляКлючНабораВидовВремени", "ИмяПоляДатаОкончания");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;	
КонецФункции	

// Создает временную таблицу, содеращую ключи наборов видов времени, по которым были зарегистрированы данные
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		ДатаНачала
//		ДатаОкончания
//		КлючНабораВидовВремени
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТИсточникиДанныхУчетаВремениНаДаты
//		ОписаниеТаблицыНаборовВидовВремени - см. ОписаниеФильтраВТНаличиеЗарегистрированныхНаборовВидовВремениВИтервале.
//			описание таблицы наборов видо времени. В данном случае,в таблице должны все возможные наборы видо времени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТНаличиеЗарегистрированныхНаборовВидовВремениВИтервале(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ИмяВТРезультат = "ВТНаличиеЗарегистрированныхНаборовВидовВремениВИтервале") Экспорт
	ПараметрыПостроенияЗапроса = ПараметрыПостроенияЗапросаВТЗарегистрированныеНаборовВидовВремениСлужебная();	
	
	ПараметрыПостроенияЗапроса.ИспользоватьСвязьПоКлючуНаборов = Истина;
	ПараметрыПостроенияЗапроса.ИспользоватьУсловиеЗарегистрированыЧасы = Ложь;
	ПараметрыПостроенияЗапроса.ИмяВТРезультат = ИмяВТРезультат;

	СоздатьВТЗарегистрированныеНаборыВидовВремениСлужебная(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ПараметрыПостроенияЗапроса);
	
	УничтожитьВременныеТаблицы();
	
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для метода СоздатьВТНаличиеЗарегистрированныхЧасовПоНаборамВидовВремени.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			ИмяПоляКлючНабораВидовВремени
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТНаличиеЗарегистрированныхЧасовПоНаборамВидовВремени() Экспорт 
	ОписаниеФильтра = Новый Структура;
	ОписаниеФильтра.Вставить("ИмяТаблицы", "");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ИмяПоляДатаОкончания");
	ОписаниеФильтра.Вставить("ИмяПоляКлючНабораВидовВремени", "ИмяПоляДатаОкончания");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;		
КонецФункции

// Создает временную таблицу, содеращую ключи наборов видов времени, по которым были зарегистрированы данные
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		ДатаНачала
//		ДатаОкончания
//		КлючНабораВидовВремени
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТИсточникиДанныхУчетаВремениНаДаты
//		ОписаниеТаблицыНаборовВидовВремени - см. ОписаниеФильтраВТНаличиеЗарегистрированныхЧасовПоНаборамВидовВремени.
//			описание таблицы наборов видо времени. В данном случае,в таблице должны все возможные наборы видо времени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТНаличиеЗарегистрированныхЧасовПоНаборамВидовВремени(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ИмяВТРезультат = "ВТНаличиеЗарегистрированныхЧасовПоНаборамВидовВремени") Экспорт
	ПараметрыПостроенияЗапроса = ПараметрыПостроенияЗапросаВТЗарегистрированныеНаборовВидовВремениСлужебная();	
	
	ПараметрыПостроенияЗапроса.ИспользоватьСвязьПоКлючуНаборов = Истина;
	ПараметрыПостроенияЗапроса.ИспользоватьУсловиеЗарегистрированыЧасы = Истина;
	ПараметрыПостроенияЗапроса.ИмяВТРезультат = ИмяВТРезультат;

	СоздатьВТЗарегистрированныеНаборыВидовВремениСлужебная(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ПараметрыПостроенияЗапроса);
	
	УничтожитьВременныеТаблицы();
	
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для метода СоздатьВТДатыРегистрацииНаборовВидовВремени.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			ИмяПоляКлючНабораВидовВремени
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТДатыРегистрацииНаборовВидовВремени() Экспорт 
	ОписаниеФильтра = Новый Структура;
	ОписаниеФильтра.Вставить("ИмяТаблицы", "");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ИмяПоляДатаОкончания");
	ОписаниеФильтра.Вставить("ИмяПоляКлючНабораВидовВремени", "ИмяПоляДатаОкончания");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;		
КонецФункции

// Создает временную таблицу, содеращую даты регистрации наборов видов времени
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		ДатаНачала
//		ДатаОкончания
//		Дата
//		ВремяВчасах
//		ВЦеломЗаПериод
//		КлючНабораВидовВремени
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТИсточникиДанныхУчетаВремениНаДаты
//		ОписаниеТаблицыНаборовВидовВремени - см. ОписаниеФильтраВТДатыРегистрацииНаборовВидовВремени.
//			описание таблицы наборов видо времени. В данном случае,в таблице должны все возможные наборы видов времени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТДатыРегистрацииНаборовВидовВремени(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ИмяВТРезультат = "ВТДатыРегистрацииНаборовВидовВремени") Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеТаблицыФильтра.ИмяТаблицы, ОписаниеТаблицыФильтра.ИмяПоляСотрудник, ОписаниеТаблицыФильтра.ИмяПоляДатаНачала, ОписаниеТаблицыФильтра.ИмяПоляДатаОкончания);
	КонецЕсли;
	
	СоздатьВТПодневныеДанныеУчетаВремениПоИнициализированнымДанным();
		
	СоздатьВТПериодыПолученияВидовВремениПоИсточникамДанных(ОписаниеТаблицыФильтра);
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыПолученияданныхПоИсточникамДанных.Сотрудник,
	|	ДатыПолученияданныхПоИсточникамДанных.Месяц,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных КАК ДатаНачала,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИсходногоПериодаПолученияДанных КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|			ТОГДА ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных
	|		ИНАЧЕ ПодневныеДанныеУчетаВремени.Дата
	|	КОНЕЦ КАК Дата,
	|	ДатыПолученияданныхПоИсточникамДанных.КлючНабораВидовВремени,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ПодневныеДанныеУчетаВремени.ДополнительноеЗначение = 0
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ВремяВчасах,
	|	МАКСИМУМ(ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод) КАК ВЦеломЗаПериод
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТПериодыПолученияВидовВремениПоИсточникамДанных КАК ДатыПолученияданныхПоИсточникамДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаНаборовВидовВремени КАК ТаблицаНаборовВидовВремени
	|		ПО ДатыПолученияданныхПоИсточникамДанных.КлючНабораВидовВремени = ТаблицаНаборовВидовВремени.Ключ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодневныеДанныеУчетаВремени КАК ПодневныеДанныеУчетаВремени
	|		ПО (ПодневныеДанныеУчетаВремени.ИсточникДанных = ДатыПолученияданныхПоИсточникамДанных.ИсточникДанныхФактическогоВремени)
	|			И (ПодневныеДанныеУчетаВремени.ОбщийГрафик = ДатыПолученияданныхПоИсточникамДанных.ОбщийГрафик)
	|			И (ПодневныеДанныеУчетаВремени.ПериодРегистрации = ДатыПолученияданныхПоИсточникамДанных.ПериодРегистрацииФактическогоВремени)
	|			И (ПодневныеДанныеУчетаВремени.Месяц = ДатыПолученияданныхПоИсточникамДанных.Месяц)
	|			И (ПодневныеДанныеУчетаВремени.ВидУчетаВремени = ТаблицаНаборовВидовВремени.ВидВремени)
	|			И (ПодневныеДанныеУчетаВремени.Дата МЕЖДУ ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИнтервалаПоиска И ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИнтервалаПоиска
	|				ИЛИ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|					И НЕ ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники)
	|			И (ПодневныеДанныеУчетаВремени.Праздник = ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники
	|				ИЛИ НЕ ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыПолученияданныхПоИсточникамДанных.Сотрудник,
	|	ДатыПолученияданныхПоИсточникамДанных.Месяц,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИсходногоПериодаПолученияДанных,
	|	ДатыПолученияданныхПоИсточникамДанных.КлючНабораВидовВремени,
	|	ВЫБОР
	|		КОГДА ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|			ТОГДА ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных
	|		ИНАЧЕ ПодневныеДанныеУчетаВремени.Дата
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПодневныеДанныеУчетаВремени", ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники", "ТаблицаНаборовВидовВремени." + ОписаниеТаблицыНаборовВидовВремени.ИмяПоляУчитыватьТолькоПраздники);
		
	УстнановитьПоляОписанияНаборовВидовВремениВЗапрос(Запрос.Текст, ОписаниеТаблицыНаборовВидовВремени);
	
	ДобавитьВременныеТаблицыКУничтожению("ВТПериодыПолученияВидовВремениПоИсточникамДанных");
	
	Запрос.Выполнить();
	
	УничтожитьВременныеТаблицы();	
	
КонецПроцедуры

// Возвращает описание таблицы-фильтра для метода СоздатьВТДатыРегистрацииСпискаВидовВремени.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТДатыРегистрацииСпискаВидовВремени() Экспорт
	ОписаниеФильтра = Новый Структура;
	ОписаниеФильтра.Вставить("ИмяТаблицы", "");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ИмяПоляДатаОкончания");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;		
КонецФункции	

// Создает временную таблицу, содеращую даты регистрации видов времени из переданного списка
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		ДатаНачала
//		ДатаОкончания
//		Дата
//		ВремяВчасах
//		ВЦеломЗаПериод
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТДатыРегистрацииСпискаВидовВремени
//		СписокВидовВремени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТДатыРегистрацииСпискаВидовВремени(ОписаниеТаблицыФильтра, СписокВидовВремени, ИмяВТРезультат = "ВТДатыРегистрацииСпискаВидовВремени") Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеТаблицыФильтра.ИмяТаблицы, ОписаниеТаблицыФильтра.ИмяПоляСотрудник, ОписаниеТаблицыФильтра.ИмяПоляДатаНачала, ОписаниеТаблицыФильтра.ИмяПоляДатаОкончания);
	КонецЕсли;
	
	СоздатьВТПодневныеДанныеУчетаВремениПоИнициализированнымДанным();
		
	СоздатьВТПериодыПолученияВидовВремениПоИсточникамДанных(ОписаниеТаблицыФильтра);
	
	Запрос = СоздатьЗапрос();
	Запрос.УстановитьПараметр("СписокВидовВремени", СписокВидовВремени);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыПолученияданныхПоИсточникамДанных.Сотрудник,
	|	ДатыПолученияданныхПоИсточникамДанных.Месяц,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных КАК ДатаНачала,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИсходногоПериодаПолученияДанных КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|			ТОГДА ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных
	|		ИНАЧЕ ПодневныеДанныеУчетаВремени.Дата
	|	КОНЕЦ КАК Дата,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ПодневныеДанныеУчетаВремени.ДополнительноеЗначение = 0
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ВремяВчасах
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТПериодыПолученияВидовВремениПоИсточникамДанных КАК ДатыПолученияданныхПоИсточникамДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодневныеДанныеУчетаВремени КАК ПодневныеДанныеУчетаВремени
	|		ПО (ПодневныеДанныеУчетаВремени.ИсточникДанных = ДатыПолученияданныхПоИсточникамДанных.ИсточникДанныхФактическогоВремени)
	|			И (ПодневныеДанныеУчетаВремени.ОбщийГрафик = ДатыПолученияданныхПоИсточникамДанных.ОбщийГрафик)
	|			И (ПодневныеДанныеУчетаВремени.ПериодРегистрации = ДатыПолученияданныхПоИсточникамДанных.ПериодРегистрацииФактическогоВремени)
	|			И (ПодневныеДанныеУчетаВремени.Месяц = ДатыПолученияданныхПоИсточникамДанных.Месяц)
	|			И (ПодневныеДанныеУчетаВремени.ВидУчетаВремени В (&СписокВидовВремени))
	|			И (ПодневныеДанныеУчетаВремени.Дата МЕЖДУ ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИнтервалаПоиска И ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИнтервалаПоиска
	|				ИЛИ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыПолученияданныхПоИсточникамДанных.Сотрудник,
	|	ДатыПолученияданныхПоИсточникамДанных.Месяц,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИсходногоПериодаПолученияДанных,
	|	ДатыПолученияданныхПоИсточникамДанных.КлючНабораВидовВремени,
	|	ВЫБОР
	|		КОГДА ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|			ТОГДА ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных
	|		ИНАЧЕ ПодневныеДанныеУчетаВремени.Дата
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПодневныеДанныеУчетаВремени", ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	
	ДобавитьВременныеТаблицыКУничтожению("ВТПериодыПолученияВидовВремениПоИсточникамДанных");
	
	Запрос.Выполнить();
	
	УничтожитьВременныеТаблицы();		
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для метода СоздатьВТПериодыДействияНаборовВидовВремени.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			ИмяПоляКлючНабораВидовВремени
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТПериодыДействияНаборовВидовВремени() Экспорт 
	ОписаниеФильтра = Новый Структура;
	ОписаниеФильтра.Вставить("ИмяТаблицы", "");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ИмяПоляДатаОкончания");
	ОписаниеФильтра.Вставить("ИмяПоляКлючНабораВидовВремени", "ИмяПоляДатаОкончания");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;		
КонецФункции

// Создает временную таблицу, содеращую даты регистрации видо времени из переданного списка
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		ДатаНачалаИсходная
//		ДатаОкончанияИсходная
//		ДатаНачала
//		ДатаОкончания
//		Дата
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТДатыРегистрацииСпискаВидовВремени
//		СписокВидовВремени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТПериодыДействияНаборовВидовВремени(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ИмяВТРезультат = "ВТПериодыДействияНаборовВидовВремени") Экспорт
	ПараметрыПостроененияЗапроса = ПараметрыПостроенияЗапросаВТДатыРегистрацииНаборовВидовВремениСлужебная();
	
	ПараметрыПостроененияЗапроса.УчитыватьВыходныеДни = Ложь;
	ПараметрыПостроененияЗапроса.ИмяВТРезультат = "ВТДатыРегистрацииНаборовВидовВремениСлужебная";

	СоздатьВТДатыРегистрацииНаборовВидовВремениСлужебная(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени,  ПараметрыПостроененияЗапроса);
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.Месяц,
	|	ВложенныйЗапрос.ДатаНачала,
	|	ВложенныйЗапрос.ДатаОкончания,
	|	ВложенныйЗапрос.КлючНабораВидовВремени,
	|	ВложенныйЗапрос.Дата,
	|	СУММА(ВложенныйЗапрос.ПризнакДатыНачалаИнтервала) КАК ПризнакДатыНачалаИнтервала,
	|	СУММА(ВложенныйЗапрос.ПризнакДатыОкончанияИнтервала) КАК ПризнакДатыОкончанияИнтервала
	|ПОМЕСТИТЬ ВТГранициыИнтерваловДействияНаборовВидовВремени
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДатыРегистрацииНаборовВидовВремени.Сотрудник КАК Сотрудник,
	|		ДатыРегистрацииНаборовВидовВремени.Месяц КАК Месяц,
	|		ДатыРегистрацииНаборовВидовВремени.ДатаНачала КАК ДатаНачала,
	|		ДатыРегистрацииНаборовВидовВремени.ДатаОкончания КАК ДатаОкончания,
	|		ДатыРегистрацииНаборовВидовВремени.КлючНабораВидовВремени КАК КлючНабораВидовВремени,
	|		ДатыРегистрацииНаборовВидовВремени.Дата КАК Дата,
	|		1 КАК ПризнакДатыНачалаИнтервала,
	|		1 КАК ПризнакДатыОкончанияИнтервала
	|	ИЗ
	|		ВТДатыРегистрацииНаборовВидовВремениСлужебная КАК ДатыРегистрацииНаборовВидовВремени
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТДатыРегистрацииНаборовВидовВремени.Сотрудник,
	|		ВТДатыРегистрацииНаборовВидовВремени.Месяц,
	|		ВТДатыРегистрацииНаборовВидовВремени.ДатаНачала,
	|		ВТДатыРегистрацииНаборовВидовВремени.ДатаОкончания,
	|		ВТДатыРегистрацииНаборовВидовВремени.КлючНабораВидовВремени,
	|		ДОБАВИТЬКДАТЕ(ВТДатыРегистрацииНаборовВидовВремени.Дата, ДЕНЬ, 1),
	|		-1,
	|		0
	|	ИЗ
	|		ВТДатыРегистрацииНаборовВидовВремениСлужебная КАК ВТДатыРегистрацииНаборовВидовВремени
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТДатыРегистрацииНаборовВидовВремени.Сотрудник,
	|		ВТДатыРегистрацииНаборовВидовВремени.Месяц,
	|		ВТДатыРегистрацииНаборовВидовВремени.ДатаНачала,
	|		ВТДатыРегистрацииНаборовВидовВремени.ДатаОкончания,
	|		ВТДатыРегистрацииНаборовВидовВремени.КлючНабораВидовВремени,
	|		ДОБАВИТЬКДАТЕ(ВТДатыРегистрацииНаборовВидовВремени.Дата, ДЕНЬ, -1),
	|		0,
	|		-1
	|	ИЗ
	|		ВТДатыРегистрацииНаборовВидовВремениСлужебная КАК ВТДатыРегистрацииНаборовВидовВремени) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.Месяц,
	|	ВложенныйЗапрос.ДатаНачала,
	|	ВложенныйЗапрос.ДатаОкончания,
	|	ВложенныйЗапрос.КлючНабораВидовВремени,
	|	ВложенныйЗапрос.Дата
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВложенныйЗапрос.ПризнакДатыНачалаИнтервала) > 0
	|		ИЛИ СУММА(ВложенныйЗапрос.ПризнакДатыОкончанияИнтервала) > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыНачалаИнтервалов.Сотрудник,
	|	ДатыНачалаИнтервалов.Месяц,
	|	ДатыНачалаИнтервалов.ДатаНачала КАК ДатаНачалаИсходная,
	|	ДатыНачалаИнтервалов.ДатаОкончания КАК ДатаОкончанияИсходная,
	|	ДатыНачалаИнтервалов.КлючНабораВидовВремени,
	|	ДатыНачалаИнтервалов.Дата КАК ДатаНачала,
	|	МИНИМУМ(КОНЕЦПЕРИОДА(ДатыОкончанияИнтервалов.Дата, ДЕНЬ)) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТГранициыИнтерваловДействияНаборовВидовВремени КАК ДатыНачалаИнтервалов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТГранициыИнтерваловДействияНаборовВидовВремени КАК ДатыОкончанияИнтервалов
	|		ПО (ДатыНачалаИнтервалов.ПризнакДатыНачалаИнтервала > 0)
	|			И (ДатыОкончанияИнтервалов.ПризнакДатыОкончанияИнтервала > 0)
	|			И ДатыНачалаИнтервалов.Дата <= ДатыОкончанияИнтервалов.Дата
	|			И ДатыНачалаИнтервалов.Сотрудник = ДатыОкончанияИнтервалов.Сотрудник
	|			И ДатыНачалаИнтервалов.Месяц = ДатыОкончанияИнтервалов.Месяц
	|			И ДатыНачалаИнтервалов.ДатаНачала = ДатыОкончанияИнтервалов.ДатаНачала
	|			И ДатыНачалаИнтервалов.ДатаОкончания = ДатыОкончанияИнтервалов.ДатаОкончания
	|			И ДатыНачалаИнтервалов.КлючНабораВидовВремени = ДатыОкончанияИнтервалов.КлючНабораВидовВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыНачалаИнтервалов.Сотрудник,
	|	ДатыНачалаИнтервалов.Месяц,
	|	ДатыНачалаИнтервалов.ДатаНачала,
	|	ДатыНачалаИнтервалов.ДатаОкончания,
	|	ДатыНачалаИнтервалов.КлючНабораВидовВремени,
	|	ДатыНачалаИнтервалов.Дата";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);

	Запрос.Выполнить();
	
	
	ДобавитьВременныеТаблицыКУничтожению("ВТГранициыИнтерваловДействияНаборовВидовВремени, ВТДатыРегистрацииНаборовВидовВремениСлужебная");
	
	УничтожитьВременныеТаблицы();
КонецПроцедуры	

#КонецОбласти

#Область МетодыПолученияНормыВремениПоСотрудникам

// Возвращает описание таблицы-фильтра для метода СоздатьВТНормаВремениСотрудников
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляПериод
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТНормаВремениСотрудников() Экспорт 
	ОписаниеФильтра = Новый Структура;
	
	ОписаниеФильтра.Вставить("ИмяТаблицы");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляПериод", "Период");
	
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	ОписаниеФильтра.Вставить("КлючевыеПоля", Новый Массив);
	
	Возврат ОписаниеФильтра;
КонецФункции

// Создает временную таблицу, содеращую нормы времени	
//
//	Таблица содержит поля:
//		Сотрудник
//		Период
//		Месяц
//		НормаДнейКалендаряМесяц,
//		НормаЧасовКалендаряМесяц,
//		НормаДнейКалендаряМесяц,
//		НормаДнейКалендаряГод,
//		НормаЧасовКалендаряГод,
//		НормаДнейГрафикаМесяц,
//		НормаЧасовГрафикаМесяц,
//		НормаДнейПолногоГрафикаМесяц,
//		НормаЧасовПолногоГрафикаМесяц,
//		ГрафикРаботы,
//		ПроизводственныйКалендарь
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТНормаВремениСотрудников
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТНормаВремениСотрудников(ОписаниеФильтра, ИмяВТРезультат = "ВТНормаВремениСотрудников") Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеФильтра.ИмяТаблицы, ОписаниеФильтра.ИмяПоляСотрудник, ОписаниеФильтра.ИмяПоляПериод, ОписаниеФильтра.ИмяПоляПериод);
	КонецЕсли;
	
	СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная();
	
	Запрос = СоздатьЗапрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаФильтр.Сотрудник КАК Сотрудник,
	|	ТаблицаФильтр.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ТаблицаФильтр.Период, МЕСЯЦ) КАК Месяц,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ИсточникДанныхНормыВремени КАК ИсточникДанныхНормыВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ИсточникДанныхПолнойНормыВремени КАК ИсточникДанныхПолнойНормыВремени,
	|	ВЫБОР
	|		КОГДА ОписаниеГрафиков.ГрафикПолногоРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыСотрудников.ПустаяСсылка)
	|			ТОГДА ОписаниеГрафиков.ДлительностьРабочейНедели
	|		ИНАЧЕ ЕСТЬNULL(ОписаниеГрафиков.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели, 0)
	|	КОНЕЦ КАК ДлительностьРабочейНеделиЧасов,
	|	5 КАК ДлительностьРабочейНеделиДней,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ПроизводственныйКалендарь,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ПериодРегистрацииНормыВремени
	|ПОМЕСТИТЬ ВТИстчоникиДанныхНормыВремени
	|ИЗ
	|	ВТТаблицаФильтр КАК ТаблицаФильтр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная КАК ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыСотрудников КАК ОписаниеГрафиков
	|			ПО ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ОбщийГрафик = ОписаниеГрафиков.Ссылка
	|		ПО (ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.Сотрудник = ТаблицаФильтр.Сотрудник)
	|			И (ТаблицаФильтр.Период МЕЖДУ ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаНачала И ИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная.ДатаОкончания)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИстчоникиДанныхНормыВремени.ПроизводственныйКалендарь,
	|	ИстчоникиДанныхНормыВремени.Месяц
	|ПОМЕСТИТЬ ВТРазличныеИстчоникиДанныхНормыВремениКалендарей
	|ИЗ
	|	ВТИстчоникиДанныхНормыВремени КАК ИстчоникиДанныхНормыВремени";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаФильтр", ОписаниеФильтра.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Сотрудник", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Период", "ТаблицаФильтр." + ОписаниеФильтра.ИмяПоляПериод);
	
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТИстчоникиДанныхНормыВремени, ВТРазличныеИстчоникиДанныхНормыВремениКалендарей");
	
	ОписаниеИстчониковДанныхНормы = ОписаниеИстчониковДанныхВТНормаВремениПоИстчоникамДанныхСлужебная();
	ОписаниеИстчониковДанныхНормы.ИмяТаблицы = "ВТИстчоникиДанныхНормыВремени";
	ОписаниеИстчониковДанныхНормы.ИмяПоляИсточникДанныхНормыВремени = "ИсточникДанныхНормыВремени";
	ОписаниеИстчониковДанныхНормы.ИмяПоляИсточникДанныхПолнойНормыВремени = "ИсточникДанныхПолнойНормыВремени";
	ОписаниеИстчониковДанныхНормы.ИмяПоляМесяц = "Месяц";
	ОписаниеИстчониковДанныхНормы.ИмяПоляПериодРегистрацииВремени = "ПериодРегистрацииНормыВремени";
	
	СоздатьВТНормаВремениПоИстчоникамДанныхСлужебная(ОписаниеИстчониковДанныхНормы, "ВТДанныеГрафиковРаботы");
	

	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|					И (ДанныеПроизводственногоКалендаря.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Календари.Месяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(Календари.Месяц, МЕСЯЦ))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РабочиеДниМесяца,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|					И (ДанныеПроизводственногоКалендаря.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Календари.Месяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(Календари.Месяц, МЕСЯЦ))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПредпраздничныеДниМесяца,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|					И (ДанныеПроизводственногоКалендаря.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Календари.Месяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(Календари.Месяц, МЕСЯЦ))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|					И (ДанныеПроизводственногоКалендаря.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Календари.Месяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(Календари.Месяц, МЕСЯЦ))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НормаДнейКалендаряМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РабочиеДниГода,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПредпраздничныеДниГода,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НормаДнейКалендаряГод,
	|	Календари.ПроизводственныйКалендарь,
	|	Календари.Месяц
	|ПОМЕСТИТЬ ВТДанныеКалендарей
	|ИЗ
	|	ВТРазличныеИстчоникиДанныхНормыВремениКалендарей КАК Календари
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|		ПО Календари.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
	|			И (ДанныеПроизводственногоКалендаря.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Календари.Месяц, ГОД) И КОНЕЦПЕРИОДА(Календари.Месяц, ГОД))
	|			И (ДанныеПроизводственногоКалендаря.ВидДня В (ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий), ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)))
	|
	|СГРУППИРОВАТЬ ПО
	|	Календари.ПроизводственныйКалендарь,
	|	Календари.Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикиРаботыСотрудников.Сотрудник,
	|	ГрафикиРаботыСотрудников.Период,
	|	ДанныеКалендарей.НормаДнейКалендаряМесяц КАК НормаДнейКалендаряМесяц,
	|	ВЫБОР
	|		КОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиЧасов ЕСТЬ NULL 
	|				ИЛИ ДанныеКалендарей.НормаДнейКалендаряМесяц ЕСТЬ NULL 
	|			ТОГДА NULL
	|		КОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиДней = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиЧасов / ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиДней * ДанныеКалендарей.НормаДнейКалендаряМесяц > ДанныеКалендарей.ПредпраздничныеДниМесяца
	|					ТОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиЧасов / ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиДней * ДанныеКалендарей.НормаДнейКалендаряМесяц - ДанныеКалендарей.ПредпраздничныеДниМесяца
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК НормаЧасовКалендаряМесяц,
	|	ДанныеКалендарей.НормаДнейКалендаряГод КАК НормаДнейКалендаряГод,
	|	ВЫБОР
	|		КОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиЧасов ЕСТЬ NULL 
	|				ИЛИ ДанныеКалендарей.НормаДнейКалендаряГод ЕСТЬ NULL 
	|			ТОГДА NULL
	|		КОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиДней = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиЧасов / ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиДней * ДанныеКалендарей.НормаДнейКалендаряГод > ДанныеКалендарей.ПредпраздничныеДниГода
	|					ТОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиЧасов / ГрафикиРаботыСотрудников.ДлительностьРабочейНеделиДней * ДанныеКалендарей.НормаДнейКалендаряГод - ДанныеКалендарей.ПредпраздничныеДниГода
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК НормаЧасовКалендаряГод,
	|	ДанныеГрафиков.НормаДней КАК НормаДнейГрафикаМесяц,
	|	ДанныеГрафиков.НормаЧасов КАК НормаЧасовГрафикаМесяц,
	|	ДанныеГрафиков.НормаДнейПолная КАК НормаДнейПолногоГрафикаМесяц,
	|	ДанныеГрафиков.НормаЧасовПолная КАК НормаЧасовПолногоГрафикаМесяц,
	|	ГрафикиРаботыСотрудников.ИсточникДанныхНормыВремени КАК ГрафикРаботы,
	|	ГрафикиРаботыСотрудников.ПроизводственныйКалендарь,
	|	ГрафикиРаботыСотрудников.Месяц
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТИстчоникиДанныхНормыВремени КАК ГрафикиРаботыСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеГрафиковРаботы КАК ДанныеГрафиков
	|		ПО ГрафикиРаботыСотрудников.ИсточникДанныхНормыВремени = ДанныеГрафиков.ИсточникДанных
	|			И ГрафикиРаботыСотрудников.Месяц = ДанныеГрафиков.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеКалендарей КАК ДанныеКалендарей
	|		ПО ГрафикиРаботыСотрудников.ПроизводственныйКалендарь = ДанныеКалендарей.ПроизводственныйКалендарь
	|			И ГрафикиРаботыСотрудников.Месяц = ДанныеКалендарей.Месяц";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	
	Запрос.УстановитьПараметр("РабочееВремя", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РабочееВремя"));
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТДанныеКалендарей, ВТДанныеГрафиковРаботы");
	
	УничтожитьВременныеТаблицы();
	
	ПараметрыПроверкиНормыВремени = УчетРабочегоВремениРасширенный.ПараметрыДляПроверитьЗаполнениеНормыВремени(ИмяВТРезультат, "Месяц");
	
	УчетРабочегоВремениРасширенный.ДобавитьОписаниеПоляНормыВремени(ПараметрыПроверкиНормыВремени, "НормаДнейГрафикаМесяц", "ГрафикРаботы");
	УчетРабочегоВремениРасширенный.ДобавитьОписаниеПоляНормыВремени(ПараметрыПроверкиНормыВремени, "НормаДнейКалендаряМесяц", "ПроизводственныйКалендарь");
	
	УчетРабочегоВремениРасширенный.ПроверитьЗаполнениеНормыВремени(МенеджерВременныхТаблиц, ПараметрыПроверкиНормыВремени);	
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для метода СоздатьВТДанныеПроизводственногоКалендаряПоСотрудникам.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//			ИмяПоляДатаНачала
//			ДатаОкончания
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТДанныеПроизводственногоКалендаряПоСотрудникам() Экспорт 
	ОписаниеФильтра = Новый Структура;
	
	ОписаниеФильтра.Вставить("ИмяТаблицы");
	ОписаниеФильтра.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	
	Возврат ОписаниеФильтра;
КонецФункции

// Создает временную таблицу, содеращую данные календария
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		ДатаНачала
//		ДатаОкончания
//		ДнейПоПятидневке
//		ЧасовПоПятидневке,
//		ДнейПоШестидневке,
//		ДнейКалендарных,
//		ДнейКалендарныхБезУчетаПраздников,
//		Праздников
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТДанныеПроизводственногоКалендаряПоСотрудникам
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТДанныеПроизводственногоКалендаряПоСотрудникам(ОписаниеФильтра, ИмяВТРезультат = "ВТДанныеПроизводственногоКалендаряПоСотрудникам") Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеФильтра.ИмяТаблицы, ОписаниеФильтра.ИмяПоляСотрудник, ОписаниеФильтра.ИмяПоляДатаНачала, ОписаниеФильтра.ИмяПоляДатаОкончания);
	КонецЕсли;
	
	СоздатьВТПериодыПолученияВидовВремениПоИсточникамДанных(ОписаниеФильтра);
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДнейПоПятидневке,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|				ТОГДА 8
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА 7
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЧасовПоПятидневке,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДнейПоШестидневке,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДнейКалендарных,
	|	ПериодыПроизводственныхКалендарей.ДатаНачалаИсходногоПериодаПолученияДанных КАК ДатаНачала,
	|	ПериодыПроизводственныхКалендарей.ДатаОкончанияИсходногоПериодаПолученияДанных КАК ДатаОкончания,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДанныеПроизводственногоКалендаря.ВидДня ЕСТЬ NULL 
	|					И ДанныеПроизводственногоКалендаря.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДнейКалендарныхБезУчетаПраздников,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Праздников,
	|	ПериодыПроизводственныхКалендарей.Сотрудник
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТПериодыПолученияВидовВремениПоИсточникамДанных КАК ПериодыПроизводственныхКалендарей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|		ПО ПериодыПроизводственныхКалендарей.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
	|			И ПериодыПроизводственныхКалендарей.ДатаНачалаИнтервалаПоиска <= ДанныеПроизводственногоКалендаря.Дата
	|			И ПериодыПроизводственныхКалендарей.ДатаОкончанияИнтервалаПоиска >= ДанныеПроизводственногоКалендаря.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыПроизводственныхКалендарей.Сотрудник,
	|	ПериодыПроизводственныхКалендарей.ДатаНачалаИсходногоПериодаПолученияДанных,
	|	ПериодыПроизводственныхКалендарей.ДатаОкончанияИсходногоПериодаПолученияДанных";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	
	Запрос.Выполнить();	
	
	ДобавитьВременныеТаблицыКУничтожению("ВТПериодыПолученияВидовВремениПоИсточникамДанных");
	
	УничтожитьВременныеТаблицы();
	
КонецПроцедуры

#КонецОбласти

#Область МетодыПолученияДанныхОВремениПоИсточникамДанных

// Возвращает описание таблицы-фильтра для метода СоздатьВТЗарегистрированноеВремяПоНаборамВидовВремени.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//          ИмяПоляИсточникДанных
//			ИмяПоляПериодРегистрацииВремени
//			ИмяПоляОбщийГрафик
//			ИмяПоляКлючНабораВидовВремени
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			ИмяПоляМесяц
//          КлючевыеПоля - массив полей, котореы будут добавлены из таблицы-фильтра в результирующую таблицу
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТЗарегистрированноеВремяПоНаборамВидовВремени() Экспорт 
	ОписаниеИсточников = Новый Структура;
	
	ОписаниеИсточников.Вставить("ИмяТаблицы", "");
	ОписаниеИсточников.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеИсточников.Вставить("ИмяПоляИсточникДанных", "ИсчтоникДанных");
	ОписаниеИсточников.Вставить("ИмяПоляПериодРегистрацииВремени", "ПериодРегистрации");
	ОписаниеИсточников.Вставить("ИмяПоляОбщийГрафик", "ОбщийГрафик");
	ОписаниеИсточников.Вставить("ИмяПоляМесяц", "Месяц");
	ОписаниеИсточников.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеИсточников.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	ОписаниеИсточников.Вставить("ИмяПоляКлючНабораВидовВремени", "");
	
	ОписаниеИсточников.Вставить("КлючевыеПоля", Новый Массив);
	
	ОписаниеИсточников.Вставить("Отбор", Новый Массив);
		
	Возврат ОписаниеИсточников;
КонецФункции

// Создает временную таблицу, содеращую данные о зарегистрированном времени, суммированные в разрезе ключевых полей
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		Дней
//		Часов
//		ЧасовВПределах2Часов
//		ВЦеломЗаПериод - булево, признак того, что время было введено совдно
//      КлючевыеПоля - поля из таблицы фильтра, которые были описаны как ключевые.
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеИсточниковДанных
//		ОписаниеТаблицыНаборовВидовВремени - см. ОписаниеФильтраВТДатыРегистрацииНаборовВидовВремени.
//			описание таблицы наборов видо времени. В данном случае,в таблице должны все возможные наборы видов времени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТЗарегистрированноеВремяПоНаборамВидовВремени(ОписаниеИсточниковДанных, ОписаниеТаблицыНаборовВидовВремени, ИмяВТРезультат = "ВТЗарегистрированноеВремяПоНаборамВидовВремени") Экспорт	
	
	ОписаниеИсточниковДанныхСлужебная = ОписаниеИсточниковДанныхВТЗарегистрированноеВремяПоНаборамВидовВремениСлужебная();
	ЗаполнитьЗначенияСвойств(ОписаниеИсточниковДанныхСлужебная, ОписаниеИсточниковДанных);
	ОписаниеИсточниковДанныхСлужебная.ИмяПоляДатаНачалаГруппировка = ОписаниеИсточниковДанных.ИмяПоляДатаНачала;
	ОписаниеИсточниковДанныхСлужебная.ИмяПоляДатаОкончанияГруппировка = ОписаниеИсточниковДанных.ИмяПоляДатаОкончания;	
	
	ПараметрыПостроенияЗапроса = ПараметрыПолученияВТЗарегистрированноеВремяПоНаборамВидовВремени();
	
	СоздатьВТЗарегистрированноеВремяПоНаборамВидовВремениСлужебная(
		ОписаниеИсточниковДанныхСлужебная, 
		ОписаниеТаблицыНаборовВидовВремени, 
		ПараметрыПостроенияЗапроса,
		ИмяВТРезультат);
	
	УничтожитьВременныеТаблицы();	
	
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для метода СоздатьВТОтработаноВсего
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//          ИмяПоляИсточникДанных
//			ИмяПоляПериодРегистрацииВремени
//			ИмяПоляОбщийГрафик
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			ИмяПоляМесяц
//			КлючевыеПоля - массив полей, котореы будут добавлены из таблицы-фильтра в результирующую таблицу
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТОтработаноВсего() Экспорт 
	ОписаниеИсточников = Новый Структура;
	
	ОписаниеИсточников.Вставить("ИмяТаблицы", "");
	ОписаниеИсточников.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеИсточников.Вставить("ИмяПоляИсточникДанных", "ИсчтоникДанных");
	ОписаниеИсточников.Вставить("ИмяПоляПериодРегистрацииВремени", "ПериодРегистрации");
	ОписаниеИсточников.Вставить("ИмяПоляМесяц", "Месяц");
	ОписаниеИсточников.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеИсточников.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	ОписаниеИсточников.Вставить("ИмяПоляОбщийГрафик", "ОбщийГрафик");
	ОписаниеИсточников.Вставить("КлючевыеПоля", Новый Массив);
	
	ОписаниеИсточников.Вставить("Отбор", Новый Массив);

	Возврат ОписаниеИсточников;	
КонецФункции

// Создает временную таблицу, содеращую данные о зарегистрированном рабочем времени, суммированные в разрезе ключевых полей
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		Сотрудник
//		Дней
//		Часов
//		ВЦеломЗаПериод
//		КлючевыеПоля - массив полей, котореы будут добавлены из таблицы-фильтра в результирующую таблицу.
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеИсточниковДанных
//		ОписаниеТаблицыНаборовВидовВремени - см. ОписаниеФильтраВТДатыРегистрацииНаборовВидовВремени.
//			описание таблицы наборов видо времени. В данном случае,в таблице должны все возможные наборы видов времени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТОтработаноВсего(ОписаниеИсточниковДанных, ИмяВТРезультат = "ВТОтработаноВсего") Экспорт
	СоздатьВТПодневныеДанныеУчетаВремени(ОписаниеИсточниковДанных);	
	
	Запрос = СоздатьЗапрос();
	Запрос.УстановитьПараметр("РабочееВремя", Справочники.ВидыИспользованияРабочегоВремени.РабочееВремя);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеОВремениПоДатам.Сотрудник,
	|	ДанныеОВремениПоДатам.КлючевыеПоля,
	|	СУММА(ДанныеОВремениПоДатам.Дней) КАК Дней,
	|	МАКСИМУМ(ДанныеОВремениПоДатам.ВЦеломЗаПериод) КАК ВЦеломЗаПериод,
	|	СУММА(ДанныеОВремениПоДатам.Часов) КАК Часов
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаИсходныхИсточниковДанных.Сотрудник КАК Сотрудник,
	|		ТаблицаИсходныхИсточниковДанных.Месяц КАК Месяц,
	|		ТаблицаИсходныхИсточниковДанных.ДатаНачала КАК ДатаНачала,
	|		ТаблицаИсходныхИсточниковДанных.ДатаОкончания КАК ДатаОкончания,
	|		ТаблицаИсходныхИсточниковДанных.ИсточникДанных КАК ИсточникДанных,
	|		ТаблицаИсходныхИсточниковДанных.КлючевыеПоля КАК КлючевыеПоля,
	|		МАКСИМУМ(ПодневныеДанныеУчетаВремени.ОсновноеЗначение) КАК Дней,
	|		МАКСИМУМ(ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод) КАК ВЦеломЗаПериод,
	|		ПодневныеДанныеУчетаВремени.Дата КАК Дата,
	|		СУММА(ПодневныеДанныеУчетаВремени.ДополнительноеЗначение) КАК Часов
	|	ИЗ
	|		ВТТаблицаИсходныхИсточниковДанных КАК ТаблицаИсходныхИсточниковДанных
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПодневныеДанныеУчетаВремени КАК ПодневныеДанныеУчетаВремени
	|			ПО ТаблицаИсходныхИсточниковДанных.ИсточникДанных = ПодневныеДанныеУчетаВремени.ИсточникДанных
	|				И ТаблицаИсходныхИсточниковДанных.ОбщийГрафик = ПодневныеДанныеУчетаВремени.ОбщийГрафик
	|				И ТаблицаИсходныхИсточниковДанных.Месяц = ПодневныеДанныеУчетаВремени.Месяц
	|				И ТаблицаИсходныхИсточниковДанных.ПериодРегистрации = ПодневныеДанныеУчетаВремени.ПериодРегистрации
	|				И (НЕ ПодневныеДанныеУчетаВремени.ВидУчетаВремени = &РабочееВремя)
	|				И (ПодневныеДанныеУчетаВремени.ВидУчетаВремени.РабочееВремя)
	|				И (ПодневныеДанныеУчетаВремени.Дата МЕЖДУ ТаблицаИсходныхИсточниковДанных.ДатаНачала И ТаблицаИсходныхИсточниковДанных.ДатаОкончания
	|					ИЛИ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаИсходныхИсточниковДанных.Сотрудник,
	|		ТаблицаИсходныхИсточниковДанных.Месяц,
	|		ТаблицаИсходныхИсточниковДанных.ДатаНачала,
	|		ТаблицаИсходныхИсточниковДанных.ДатаОкончания,
	|		ТаблицаИсходныхИсточниковДанных.ИсточникДанных,
	|		ТаблицаИсходныхИсточниковДанных.КлючевыеПоля,
	|		ПодневныеДанныеУчетаВремени.Дата) КАК ДанныеОВремениПоДатам
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОВремениПоДатам.Сотрудник,
	|	ДанныеОВремениПоДатам.КлючевыеПоля";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаИсходныхИсточниковДанных", ОписаниеИсточниковДанных.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.Сотрудник", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.Месяц", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляМесяц);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ДатаНачала", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляДатаНачала);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ДатаОкончания", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляДатаОкончания);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ИсточникДанных", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляИсточникДанных);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ОбщийГрафик", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляОбщийГрафик);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ПериодРегистрации", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляПериодРегистрацииВремени);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПодневныеДанныеУчетаВремени", ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени));

	ДобавтьКлючевыеПоляВТекстЗапроса(Запрос.Текст, ОписаниеИсточниковДанных.КлючевыеПоля, "ТаблицаИсходныхИсточниковДанных");
	ДобавтьКлючевыеПоляВТекстЗапроса(Запрос.Текст, ОписаниеИсточниковДанных.КлючевыеПоля, "ДанныеОВремениПоДатам");

	Запрос.Выполнить();
	
	УничтожитьВременныеТаблицы();
	
КонецПроцедуры

// Возвращает описание таблицы-фильтра для метода СоздатьВТОтработанноеВремяПоТерриториямУсловиямТруда.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//          ИмяПоляИсточникДанных
//			ИмяПоляПериодРегистрацииВремени
//			ИмяПоляОбщийГрафик
//			ИмяПоляДатаНачала
//			ИмяПоляДатаОкончания
//			ИмяПоляМесяц
//			ИмяПоляКлючСтроки
//			ИмяПоляКлючНабораВидовВремени
//			КлючевыеПоля - массив полей, котореы будут добавлены из таблицы-фильтра в результирующую таблицу
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТОтработанноеВремяПоТерриториямУсловиямТруда() Экспорт 
	ОписаниеИсточников = Новый Структура;
	
	ОписаниеИсточников.Вставить("ИмяТаблицы", "");
	ОписаниеИсточников.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеИсточников.Вставить("ИмяПоляИсточникДанных", "ИсточникДанных");
	ОписаниеИсточников.Вставить("ИмяПоляПериодРегистрацииВремени", "ПериодРегистрации");
	ОписаниеИсточников.Вставить("ИмяПоляОбщийГрафик", "ОбщийГрафик");
	ОписаниеИсточников.Вставить("ИмяПоляМесяц", "Месяц");
	ОписаниеИсточников.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеИсточников.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	ОписаниеИсточников.Вставить("ИмяПоляКлючНабораВидовВремени", "");
	ОписаниеИсточников.Вставить("ИмяПоляКлючСтроки", Неопределено);
	
	ОписаниеИсточников.Вставить("КлючевыеПоля", Новый Массив);
	ОписаниеИсточников.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеИсточников;
		
КонецФункции

// Создает временную таблицу, содеращую данные о зарегистрированном рабочем времени, суммированные в разрезе ключевых полей
//	в запрашиваемых интервалах по сотрудникам, территорий и условий труда.
//
//	Таблица содержит поля:
//		Сотрудник
//		Территория
//		УсловияТруда
//		Дней
//		Часов
//		ВЦеломЗаПериод
//		КлючевыеПоля - массив полей, котореы будут добавлены из таблицы-фильтра в результирующую таблицу.
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеИсточниковДанных
//		ОписаниеТаблицыНаборовВидовВремени - см. ОписаниеФильтраВТОтработанноеВремяПоТерриториямУсловиямТруда.
//			описание таблицы наборов видо времени. В данном случае,в таблице должны все возможные наборы видов времени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТОтработанноеВремяПоТерриториямУсловиямТруда(ОписаниеИсточниковДанных, ОписаниеТаблицыНаборовВидовВремени, ИмяВТРезультат = "ВТОтработанноеВремяПоТерриториямУсловиямТруда") Экспорт
	СоздатьВТПодневныеДанныеУчетаВремени(ОписаниеИсточниковДанных);	
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	ИсточникДанных.Сотрудник КАК Сотрудник,
	|	ИсточникДанных.Месяц КАК Месяц,
	|	МИНИМУМ(ИсточникДанных.ДатаНачала) КАК ДатаНачала,
	|	МАКСИМУМ(ИсточникДанных.ДатаОкончания) КАК ДатаОкончания,
	|	ИсточникДанных.ПериодРегистрацииВремени КАК ПериодРегистрацииВремени
	|ПОМЕСТИТЬ УчетВремени_ВТСотрудникиМесяцыПолученияТерриторий
	|ИЗ
	|	ВТИсточникДанных КАК ИсточникДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Сотрудник,
	|	ИсточникДанных.Месяц,
	|	ИсточникДанных.ПериодРегистрацииВремени";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТИсточникДанных", ОписаниеИсточниковДанных.ИмяТаблицы); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсточникДанных.Сотрудник", "ИсточникДанных." + ОписаниеИсточниковДанных.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсточникДанных.Месяц", "ИсточникДанных." + ОписаниеИсточниковДанных.ИмяПоляМесяц);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсточникДанных.ДатаНачала", "ИсточникДанных." + ОписаниеИсточниковДанных.ИмяПоляДатаНачала);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсточникДанных.ДатаОкончания", "ИсточникДанных." + ОписаниеИсточниковДанных.ИмяПоляДатаОкончания);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсточникДанных.ИмяПоляПериодРегистрацииВремени", "ИсточникДанных." + ОписаниеИсточниковДанных.ИмяПоляПериодРегистрацииВремени);
	
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("УчетВремени_ВТСотрудникиМесяцыПолученияТерриторий");
	
	ОписаниеФильтаПолученияПериодовТерриторий = УчетРабочегоВремениРасширенный.ОписаниеТаблицыОтбораДляЗапросВТПериодыДействияТерриторий();
	ОписаниеФильтаПолученияПериодовТерриторий.ИмяТаблицы = "УчетВремени_ВТСотрудникиМесяцыПолученияТерриторий";
	ОписаниеФильтаПолученияПериодовТерриторий.ИмяПоляПериодРегистрации = "ПериодРегистрацииВремени";
	
	ОписаниеИсточникаДанныхОВремени = УчетРабочегоВремениРасширенный.ОписаниеИсточникаДанныхОВремениДляЗапросВТПериоды();
	ОписаниеИсточникаДанныхОВремени.ИмяТаблицы = ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени); 
	ОписаниеИсточникаДанныхОВремени.ИмяПоляСотрудник = "ИсточникДанных";
	
	УчетРабочегоВремениРасширенный.СоздатьВТПериодыТерриторий(
		Ложь,
		МенеджерВременныхТаблиц, 
		ОписаниеФильтаПолученияПериодовТерриторий, 
		ОписаниеИсточникаДанныхОВремени, 
		"УчетВремени_ВТПериодыТерриторий");
		
	ДобавитьВременныеТаблицыКУничтожению("УчетВремени_ВТПериодыТерриторий");	
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаИсходныхИсточниковДанных.Сотрудник КАК Сотрудник,
	|	ТаблицаИсходныхИсточниковДанных.Месяц КАК Месяц,
	|	ВЫБОР
	|		КОГДА ТаблицаИсходныхИсточниковДанных.ДатаНачала < ПериодыТерриторий.ДатаНачала
	|			ТОГДА ПериодыТерриторий.ДатаНачала
	|		ИНАЧЕ ТаблицаИсходныхИсточниковДанных.ДатаНачала
	|	КОНЕЦ КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА ПериодыТерриторий.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаИсходныхИсточниковДанных.ДатаОкончания
	|		КОГДА ТаблицаИсходныхИсточниковДанных.ДатаОкончания > ПериодыТерриторий.ДатаОкончания
	|			ТОГДА ПериодыТерриторий.ДатаОкончания
	|		ИНАЧЕ ТаблицаИсходныхИсточниковДанных.ДатаОкончания
	|	КОНЕЦ КАК ДатаОкончания,
	|	ТаблицаИсходныхИсточниковДанных.ИсточникДанных КАК ИсточникДанных,
	|	ТаблицаИсходныхИсточниковДанных.ПериодРегистрации КАК ПериодРегистрации,
	|	ПериодыТерриторий.Территория КАК Территория,
	|	ТаблицаИсходныхИсточниковДанных.КлючНабораВидовВремени КАК КлючНабораВидовВремени,
	|	ТаблицаИсходныхИсточниковДанных.КлючевыеПоля,
	|	ТаблицаИсходныхИсточниковДанных.ОбщийГрафик КАК ОбщийГрафик,
	|	ТаблицаИсходныхИсточниковДанных.ДатаНачала КАК ДатаНачалаИсходная,
	|	ТаблицаИсходныхИсточниковДанных.ДатаОкончания КАК ДатаОкончанияИсходная
	|ПОМЕСТИТЬ ВТИсточникиПолученияДанныхПоТерриториям
	|ИЗ
	|	ВТТаблицаИсходныхИсточниковДанных КАК ТаблицаИсходныхИсточниковДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетВремени_ВТПериодыТерриторий КАК ПериодыТерриторий
	|		ПО ТаблицаИсходныхИсточниковДанных.Сотрудник = ПериодыТерриторий.Сотрудник
	|			И (ТаблицаИсходныхИсточниковДанных.ДатаНачала МЕЖДУ ПериодыТерриторий.ДатаНачала И ПериодыТерриторий.ДатаОкончания
	|				ИЛИ ПериодыТерриторий.ДатаНачала МЕЖДУ ТаблицаИсходныхИсточниковДанных.ДатаНачала И ТаблицаИсходныхИсточниковДанных.ДатаОкончания)";
	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаИсходныхИсточниковДанных", ОписаниеИсточниковДанных.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.Сотрудник", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.Месяц", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляМесяц);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ДатаНачала", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляДатаНачала);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ДатаОкончания", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляДатаОкончания);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.КлючНабораВидовВремени", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляКлючНабораВидовВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ИсточникДанных", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляИсточникДанных);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ПериодРегистрации", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляПериодРегистрацииВремени);		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ОбщийГрафик", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляОбщийГрафик);
	
	ДобавтьКлючевыеПоляВТекстЗапроса(Запрос.Текст, ОписаниеИсточниковДанных.КлючевыеПоля, "ТаблицаИсходныхИсточниковДанных");
	
	Запрос.Выполнить();
	
	ОписаниеИсточниковДанныхСлужебная = ОписаниеИсточниковДанныхВТЗарегистрированноеВремяПоНаборамВидовВремениСлужебная();
	ОписаниеИсточниковДанныхСлужебная.ИмяТаблицы = "ВТИсточникиПолученияДанныхПоТерриториям";
	ОписаниеИсточниковДанныхСлужебная.ИмяПоляДатаНачалаГруппировка = "ДатаНачалаИсходная";
	ОписаниеИсточниковДанныхСлужебная.ИмяПоляДатаОкончанияГруппировка = "ДатаОкончанияИсходная";
	ОписаниеИсточниковДанныхСлужебная.КлючевыеПоля = ОписаниеИсточниковДанных.КлючевыеПоля;
	
	ПараметрыПолученияДанных = ПараметрыПолученияВТЗарегистрированноеВремяПоНаборамВидовВремени();
	
	ПараметрыПолученияДанных.ОбновлятьПодневныеДанные = Ложь;
	ПараметрыПолученияДанных.ФормироватьВРазрезеТерриторий = Истина;
	ПараметрыПолученияДанных.ФормироватьВРазрезеУсловияТруда = Истина;
	ПараметрыПолученияДанных.ДляПустыхНаборовВидовВремениУчитыватьТолькоРабочееВремя = Ложь;
		
	СоздатьВТЗарегистрированноеВремяПоНаборамВидовВремениСлужебная(ОписаниеИсточниковДанныхСлужебная, ОписаниеТаблицыНаборовВидовВремени, ПараметрыПолученияДанных, ИмяВТРезультат);
	
	ДобавитьВременныеТаблицыКУничтожению("ВТИсточникиПолученияДанныхПоТерриториям");
	
	УничтожитьВременныеТаблицы();
КонецПроцедуры

// Возвращает описание таблицы-фильтра для метода СоздатьВТНормаВремениПоИсточникамДанных.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляСотрудник
//          ИмяПоляИсточникДанных
//			ИмяПоляИсточникДанныхФактическогоВремени
//			ИмяПоляМесяц
//			ИмяПоляПериодРегистрацииВремени
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру.
//
Функция ОписаниеФильтраВТНормаВремениПоИсточникамДанных() Экспорт
	ОписаниеИсточниковДанных = Новый Структура;
	
	ОписаниеИсточниковДанных.Вставить("ИмяТаблицы", "");
	ОписаниеИсточниковДанных.Вставить("ИмяПоляИсточникДанныхНормыВремени", "");
	ОписаниеИсточниковДанных.Вставить("ИмяПоляИсточникДанныхФактическогоВремени", "");
	ОписаниеИсточниковДанных.Вставить("ИмяПоляМесяц", "");
	ОписаниеИсточниковДанных.Вставить("ИмяПоляПериодРегистрацииВремени", "");
	
	Возврат ОписаниеИсточниковДанных;	
КонецФункции	

// Создает временную таблицу, содеращую данные о номе времени
//	в запрашиваемых интервалах по сотрудникам, территорий и условий труда.
//
//	Таблица содержит поля:
//		Сотрудник
//		ИсточникДанных
//		ПериодРегистрации
//		Месяц
//		НормаДней
//		НормаЧасов
//		НормаДнейПолняа
//		НормаЧасовПолная
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеИсточниковДанных
//		ОписаниеТаблицыНаборовВидовВремени - см. ОписаниеФильтраВТОтработанноеВремяПоТерриториямУсловиямТруда.
//			описание таблицы наборов видо времени. В данном случае,в таблице должны все возможные наборы видов времени 
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТНормаВремениПоИсточникамДанных(ОписаниеИстчониковДанных, ИмяВТРезультат = "ВТНормаВремениПоИсточникамДанных") Экспорт
	Запрос = СоздатьЗапрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени КАК ИсточникДанныхНормыВремениДляПолученияДанных,
	|	ВЫБОР
	|		КОГДА ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени ССЫЛКА Справочник.ГрафикиРаботыСотрудников
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени.ГрафикПолногоРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыСотрудников.ПустаяСсылка)
	|						ТОГДА ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени
	|					ИНАЧЕ ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени.ГрафикПолногоРабочегоВремени
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени
	|	КОНЕЦ КАК ИсточникДанныхПолнойНормыВремениДляПолученияДанных,
	|	ТаблицаИсточниковДанных.ПериодРегистрации КАК ПериодРегистрацииДляПолученияДанных,
	|	ТаблицаИсточниковДанных.Месяц КАК Месяц,
	|	ТаблицаИсточниковДанных.ИсточникДанныхФактическогоВремени КАК ИсточникДанныхФактическогоВремени,
	|	ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени КАК ИсточникДанныхНормыВремени,
	|	ТаблицаИсточниковДанных.ПериодРегистрации КАК ПериодРегистрацииВремени
	|ПОМЕСТИТЬ ВТИсточникиДанныхНормыВремени
	|ИЗ
	|	ВТТаблицаИсточниковДанных КАК ТаблицаИсточниковДанных";
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаИсточниковДанных", ОписаниеИстчониковДанных.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточниковДанных.ИсточникДанныхФактическогоВремени", "ТаблицаИсточниковДанных." + ОписаниеИстчониковДанных.ИмяПоляИсточникДанныхФактическогоВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени", "ТаблицаИсточниковДанных." + ОписаниеИстчониковДанных.ИмяПоляИсточникДанныхНормыВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточниковДанных.Месяц", "ТаблицаИсточниковДанных." + ОписаниеИстчониковДанных.ИмяПоляМесяц);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточниковДанных.ПериодРегистрации", "ТаблицаИсточниковДанных." + ОписаниеИстчониковДанных.ИмяПоляПериодРегистрацииВремени);
	
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТИсточникиДанныхНормыВремени");
	
	ОписаниеИсточниковНормыДополненная = ОписаниеИстчониковДанныхВТНормаВремениПоИстчоникамДанныхСлужебная();
	ОписаниеИсточниковНормыДополненная.ИмяТаблицы = "ВТИсточникиДанныхНормыВремени";
	ОписаниеИсточниковНормыДополненная.ИмяПоляИсточникДанныхНормыВремени = "ИсточникДанныхНормыВремениДляПолученияДанных";
	ОписаниеИсточниковНормыДополненная.ИмяПоляИсточникДанныхПолнойНормыВремени = "ИсточникДанныхПолнойНормыВремениДляПолученияДанных";
	ОписаниеИсточниковНормыДополненная.ИмяПоляМесяц = "Месяц";
	ОписаниеИсточниковНормыДополненная.ИмяПоляПериодРегистрацииВремени = "ПериодРегистрацииДляПолученияДанных";
	
	ОписаниеИсточниковНормыДополненная.КлючевыеПоля.Добавить("ИсточникДанныхФактическогоВремени");
	ОписаниеИсточниковНормыДополненная.КлючевыеПоля.Добавить("ИсточникДанныхНормыВремени");
	ОписаниеИсточниковНормыДополненная.КлючевыеПоля.Добавить("ПериодРегистрацииВремени");
	
	СоздатьВТНормаВремениПоИстчоникамДанныхСлужебная(ОписаниеИсточниковНормыДополненная, ИмяВТРезультат);
	
	УничтожитьВременныеТаблицы();
КонецПроцедуры	

// Возвращает описание таблицы-фильтра для метода СоздатьВТДанныеПроизводственногоКалендаряПоОбщимГрафикам.
//
// Возвращаемое значение - структура с полями
//			ИмяТаблицы - имя временной таблицы
//			ИмяПоляОбщийГрафик
//			ИмяПоляДатаНачала
//			ДатаОкончания
//			Отбор - массив структур созданных методом ОписаниеОтбораПоТаблицеФильтру
//			КлючевыеПоля - массив полей, котореы будут добавлены из таблицы-фильтра в результирующую таблицу.
//
Функция ОписаниеФильтраВТДанныеПроизводственногоКалендаряПоОбщимГрафикам() Экспорт 
	ОписаниеФильтра = Новый Структура;
	
	ОписаниеФильтра.Вставить("ИмяТаблицы");
	ОписаниеФильтра.Вставить("ИмяПоляОбщийГрафик", "ОбщийГрафик");
	ОписаниеФильтра.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеФильтра.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	ОписаниеФильтра.Вставить("КлючевыеПоля", Новый Массив);
	ОписаниеФильтра.Вставить("Отбор", Новый Массив);
	
	Возврат ОписаниеФильтра;
КонецФункции

// Создает временную таблицу, содеращую данные календария
//	в запрашиваемых интервалах по сотрудникам.
//
//	Таблица содержит поля:
//		ОбщийГрафик
//		ДатаНачала
//		ДатаОкончания
//		ДнейПоПятидневке
//		ЧасовПоПятидневке,
//		ДнейПоШестидневке,
//		ДнейКалендарных,
//		ДнейКалендарныхБезУчетаПраздников,
//		Праздников
//
// Параметры
//		ОписаниеФильтра - см. ОписаниеФильтраВТДанныеПроизводственногоКалендаряПоОбщимГрафикам
//		ИмяВТРезультат - имя результирующей ВТ.
//
Процедура СоздатьВТДанныеПроизводственногоКалендаряПоОбщимГрафикам(ОписаниеФильтра, ИмяВТРезультат = "ВТДанныеПроизводственногоКалендаряПоОбщимГрафикам") Экспорт	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыПроизводственныхКалендарей.КлючевыеПоля КАК КлючевыеПоля,
	|	ПериодыПроизводственныхКалендарей.ОбщийГрафик КАК ОбщийГрафик,
	|	ПериодыПроизводственныхКалендарей.ДатаНачала КАК ДатаНачала,
	|	ПериодыПроизводственныхКалендарей.ДатаОкончания КАК ДатаОкончания,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДнейПоПятидневке,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|				ТОГДА 8
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА 7
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЧасовПоПятидневке,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДнейПоШестидневке,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДнейКалендарных,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДанныеПроизводственногоКалендаря.ВидДня ЕСТЬ NULL
	|					И ДанныеПроизводственногоКалендаря.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДнейКалендарныхБезУчетаПраздников,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Праздников
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТФильтр КАК ПериодыПроизводственныхКалендарей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|		ПО ПериодыПроизводственныхКалендарей.ОбщийГрафик.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
	|			И ПериодыПроизводственныхКалендарей.ДатаНачала <= ДанныеПроизводственногоКалендаря.Дата
	|			И ПериодыПроизводственныхКалендарей.ДатаОкончания >= ДанныеПроизводственногоКалендаря.Дата
	|ГДЕ
	|	&УсловиеОтбораТаблицыИстчоникаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыПроизводственныхКалендарей.ОбщийГрафик,
	|	ПериодыПроизводственныхКалендарей.ДатаНачала,
	|	ПериодыПроизводственныхКалендарей.ДатаОкончания,
	|	ПериодыПроизводственныхКалендарей.КлючевыеПоля";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТФильтр", ОписаниеФильтра.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПериодыПроизводственныхКалендарей.ОбщийГрафик", "ПериодыПроизводственныхКалендарей." + ОписаниеФильтра.ИмяПоляОбщийГрафик);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПериодыПроизводственныхКалендарей.ДатаНачала", "ПериодыПроизводственныхКалендарей." + ОписаниеФильтра.ИмяПоляДатаНачала);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПериодыПроизводственныхКалендарей.ДатаОкончания", "ПериодыПроизводственныхКалендарей." + ОписаниеФильтра.ИмяПоляДатаОкончания);
	
	ДобавтьКлючевыеПоляВТекстЗапроса(Запрос.Текст, ОписаниеФильтра.КлючевыеПоля, "ПериодыПроизводственныхКалендарей"); 
	УстановитьУсловияОтбораВЗапрос(Запрос, ОписаниеФильтра.Отбор, "ПериодыПроизводственныхКалендарей");
	
	Запрос.Выполнить();	
	
	УничтожитьВременныеТаблицы();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область МетодыИнициализации

Процедура УстнановитьОписаниеНабораСотрудников(ИмяТаблицы, ИмяПоляСотрудник, ИмяПоляДатаНачала, ИмяПоляДатаОкончания)
	ОписаниеНабораСотрудников = УчетРабочегоВремениРасширенный.ОписаниеНабораСотрудниковДляИнициализацииМенеджераДанных();
	
	ОписаниеНабораСотрудников.ТипИсточникаДанных = Тип("МенеджерВременныхТаблиц");
	ОписаниеНабораСотрудников.ТаблицаИстчоникДанных = ИмяТаблицы;
	ОписаниеНабораСотрудников.ИмяПоляСотрудник = ИмяПоляСотрудник;
	ОписаниеНабораСотрудников.ИмяПоляДатаНачала = ИмяПоляДатаНачала;
	ОписаниеНабораСотрудников.ИмяПоляДатаОкончания = ИмяПоляДатаОкончания;	
КонецПроцедуры	
	
Функция ОписаниеИсходногоНабораСотрудников()
	ОписаниеИсходногоНабора = Новый Структура;
	ОписаниеИсходногоНабора.Вставить("ТаблицаИстчоникДанных");
	ОписаниеИсходногоНабора.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеИсходногоНабора.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеИсходногоНабора.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	
	Возврат ОписаниеИсходногоНабора;
КонецФункции	

Процедура УстановитьДатуАктуальности(УстанавливаемаяДата) Экспорт
	ДатаАктуальности = УстанавливаемаяДата;
КонецПроцедуры	

Процедура УстановитьМенеджерВременныхТаблиц(УстанавливыйМенеджерВременныхТаблиц) Экспорт
	МенеджерВременныхТаблиц = УстанавливыйМенеджерВременныхТаблиц;
КонецПроцедуры	

Процедура УстановитьИсходныйНаборСотрудников(ОписаниеИсходногоНабора) Экспорт
	РежимПовторногоИспользованияВременныхТаблиц = Истина;
	
	Если ОписаниеИсходногоНабора.ТипИсточникаДанных = Тип("МенеджерВременныхТаблиц") Тогда
		УстановитьИсходныйНаборСотрудниковПоВременнойТаблице(ОписаниеИсходногоНабора);	
	Иначе
		УстановитьИсходныйНаборСотрудниковПоТаблицеЗначений(ОписаниеИсходногоНабора);	
	КонецЕсли;	
	
	УничтожитьВременныеТаблицы();
КонецПроцедуры	

Процедура УстановитьИсходныйНаборСотрудниковПоТаблицеЗначений(ОписаниеИсходногоНабора)
	Запрос = СоздатьЗапрос();
	
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ОписаниеИсходногоНабора.ТаблицаИстчоникДанных);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.ДатаНачала КАК ДатаНачала,
	|	ТаблицаСотрудников.ДатаОкончания КАК ДатаОкончания 
	|ПОМЕСТИТЬ ВТИсходныйНаборСотрудников
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаСотрудников.Сотрудник", ОписаниеИсходногоНабора.ИмяПоляСотрудник); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаСотрудников.ДатаНачала", ОписаниеИсходногоНабора.ИмяПоляДатаНачала); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаСотрудников.ДатаОкончания", ОписаниеИсходногоНабора.ИмяПоляДатаОкончания); 

	Запрос.Выполнить();
		
	ДобавитьВременныеТаблицыКУничтожению("ВТИсходныйНаборСотрудников");
	
	ОписаниеИсходногоНабораВТ = ОписаниеИсходногоНабораСотрудников();
	ОписаниеИсходногоНабораВТ.ТаблицаИстчоникДанных = "ВТИсходныйНаборСотрудников";
	
	УстановитьИсходныйНаборСотрудниковПоВременнойТаблице(ОписаниеИсходногоНабораВТ);	
	
	УничтожитьВременныеТаблицы();
КонецПроцедуры

Процедура УстановитьИсходныйНаборСотрудниковПоВременнойТаблице(ОписаниеИсходногоНабора)
	Если ВременнаяТаблицаИнициализирована(ВТИсходныйНаборСотрудникиМесяцы) Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос = СоздатьЗапрос();
	
	ДатаНачала = '00010101';
	ДатаОкончания = '00010101';
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ИсходныйНаборСотрудников.ДатаНачала) КАК ДатаНачала,
	|	МАКСИМУМ(ИсходныйНаборСотрудников.ДатаОкончания) КАК ДатаОкончания
	|ИЗ
	|	ВТИсходныйНаборСотрудников КАК ИсходныйНаборСотрудников";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТИсходныйНаборСотрудников", ОписаниеИсходногоНабора.ТаблицаИстчоникДанных); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсходныйНаборСотрудников.ДатаНачала", ОписаниеИсходногоНабора.ИмяПоляДатаНачала); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсходныйНаборСотрудников.ДатаОкончания", ОписаниеИсходногоНабора.ИмяПоляДатаОкончания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.ДатаНачала) Тогда
			ДатаНачала = Выборка.ДатаНачала;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда
			ДатаОкончания = Выборка.ДатаОкончания;
		КонецЕсли;
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(МенеджерВременныхТаблиц, НачалоМесяца(ДатаНачала), НачалоМесяца(ДатаОкончания), "МЕСЯЦ", "Месяц", "УчетВремени_ВТМесяцы");
	
	ДобавитьВременныеТаблицыКУничтожению("УчетВремени_ВТМесяцы");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныйНаборСотрудников.Сотрудник КАК Сотрудник,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА Месяцы.Месяц < ИсходныйНаборСотрудников.ДатаНачала
	|				ТОГДА ИсходныйНаборСотрудников.ДатаНачала
	|			ИНАЧЕ Месяцы.Месяц
	|		КОНЕЦ) КАК ДатаНачала,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КОНЕЦПЕРИОДА(Месяцы.Месяц, МЕСЯЦ) > ИсходныйНаборСотрудников.ДатаОкончания
	|				ТОГДА ИсходныйНаборСотрудников.ДатаОкончания
	|			ИНАЧЕ КОНЕЦПЕРИОДА(Месяцы.Месяц, МЕСЯЦ)
	|		КОНЕЦ) КАК ДатаОкончания,
	|	Месяцы.Месяц КАК Месяц
	|ПОМЕСТИТЬ ВТИсходныйНаборСотрудникиМесяцы
	|ИЗ
	|	ВТИсходныйНаборСотрудников КАК ИсходныйНаборСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УчетВремени_ВТМесяцы КАК Месяцы
	|		ПО (Месяцы.Месяц МЕЖДУ НАЧАЛОПЕРИОДА(ИсходныйНаборСотрудников.ДатаНачала, МЕСЯЦ) И КОНЕЦПЕРИОДА(ИсходныйНаборСотрудников.ДатаОкончания, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходныйНаборСотрудников.Сотрудник,
	|	Месяцы.Месяц";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТИсходныйНаборСотрудников", ОписаниеИсходногоНабора.ТаблицаИстчоникДанных); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсходныйНаборСотрудников.Сотрудник", ОписаниеИсходногоНабора.ИмяПоляСотрудник); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсходныйНаборСотрудников.ДатаНачала", ОписаниеИсходногоНабора.ИмяПоляДатаНачала); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсходныйНаборСотрудников.ДатаОкончания", ОписаниеИсходногоНабора.ИмяПоляДатаОкончания); 
	
	Запрос.Выполнить();
	
	УстановитьПризнакИнциализированностиВременнойТаблицы(ВТИсходныйНаборСотрудникиМесяцы, ВТИсходныйНаборСотрудникиМесяцы);
КонецПроцедуры

#КонецОбласти

#Область СозданиеВспомогательныхВременныхТаблиц

Процедура СоздатьВТИстчоникиДанныхУчетаВремени() Экспорт
	Если ВременнаяТаблицаИнициализирована(ВТИсточникиДанныхУчетаВремени) Тогда
		Возврат;
	КонецЕсли;	
	
	СоздатьВТГрафикРаботыСотрудников();
	СоздатьВТПараметрыЗарегистрированныхДанныхУчетаВремени();
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГрафикРаботыСотрудников.Сотрудник,
	|	ПараметрыЗарегистрированныхДанныхУчетаВремени.Месяц,
	|	ГрафикРаботыСотрудников.Период,
	|	ГрафикРаботыСотрудников.ГрафикРаботы КАК ОбщийГрафик,
	|	ВЫБОР
	|		КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.ЗарегистрированыИндивдуальныеСведения
	|			ТОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.Сотрудник
	|		ИНАЧЕ ГрафикРаботыСотрудников.ГрафикРаботы
	|	КОНЕЦ КАК ИсточникДанныхФактическогоВремени,
	|	ВЫБОР
	|		КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.ЗарегистрированыИндивдуальныеСведенияОНорме
	|			ТОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.Сотрудник
	|		ИНАЧЕ ГрафикРаботыСотрудников.ГрафикРаботы
	|	КОНЕЦ КАК ИсточникДанныхНормыВремени,
	|	ВЫБОР
	|		КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.ЗарегистрированыИндивдуальныеСведения
	|			ТОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.ПериодРегистрации
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ПериодРегистрацииФактическогоВремени,
	|	ВЫБОР
	|		КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.ЗарегистрированыИндивдуальныеСведенияОНорме
	|			ТОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.ПериодРегистрации
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ПериодРегистрацииНормыВремени,
	|	ПараметрыЗарегистрированныхДанныхУчетаВремени.ВремяВведеноСводно,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ГрафикРаботыСотрудников.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ГрафикРаботыСотрудников.ПериодЗаписи, ДЕНЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СобытиеИзменение,
	|	СвойстваГрафиков.ПроизводственныйКалендарь,
	|	ПараметрыЗарегистрированныхДанныхУчетаВремени.ДатаОкончания,
	|	ВЫБОР
	|		КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.ЗарегистрированыИндивдуальныеСведенияОНорме
	|			ТОГДА ПараметрыЗарегистрированныхДанныхУчетаВремени.Сотрудник
	|		КОГДА СвойстваГрафиков.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыСотрудников.ПустаяСсылка)
	|			ТОГДА СвойстваГрафиков.ГрафикПолногоРабочегоВремени
	|		ИНАЧЕ ГрафикРаботыСотрудников.ГрафикРаботы
	|	КОНЕЦ КАК ИсточникДанныхПолнойНормыВремени,
	|	СвойстваГрафиков.СуммированныйУчетРабочегоВремени
	|ПОМЕСТИТЬ ВТИсточникиДанныхУчетаВремени
	|ИЗ
	|	УчетВремени_ВТГрафикРаботыСотрудников КАК ГрафикРаботыСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПараметрыЗарегистрированныхДанныхУчетаВремени КАК ПараметрыЗарегистрированныхДанныхУчетаВремени
	|		ПО ГрафикРаботыСотрудников.Сотрудник = ПараметрыЗарегистрированныхДанныхУчетаВремени.Сотрудник
	|			И (НАЧАЛОПЕРИОДА(ГрафикРаботыСотрудников.Период, МЕСЯЦ) = ПараметрыЗарегистрированныхДанныхУчетаВремени.Месяц)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыСотрудников КАК СвойстваГрафиков
	|		ПО ГрафикРаботыСотрудников.ГрафикРаботы = СвойстваГрафиков.Ссылка";
	
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТПараметрыЗарегистрированныхДанныхУчетаВремени");
	
	УстановитьПризнакИнциализированностиВременнойТаблицы(ВТИсточникиДанныхУчетаВремени, ВТИсточникиДанныхУчетаВремени);
КонецПроцедуры	

Процедура СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная()
	Если ВременнаяТаблицаИнициализирована(ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная) Тогда
		Возврат;
	КонецЕсли;	
	
	СоздатьВТИстчоникиДанныхУчетаВремени();
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсточникиДанныхУчетаВремени.Сотрудник,
	|	ИсточникиДанныхУчетаВремени.Месяц,
	|	ИсточникиДанныхУчетаВремени.Период КАК ДатаНачала,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ИсточникиДанныхУчетаВремениСлед.Период ЕСТЬ NULL 
	|				ТОГДА ИсточникиДанныхУчетаВремени.ДатаОкончания
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(ИсточникиДанныхУчетаВремениСлед.Период, СЕКУНДА, -1)
	|		КОНЕЦ) КАК ДатаОкончания,
	|	ИсточникиДанныхУчетаВремени.ОбщийГрафик,
	|	ИсточникиДанныхУчетаВремени.ИсточникДанныхФактическогоВремени,
	|	ИсточникиДанныхУчетаВремени.ИсточникДанныхНормыВремени,
	|	ИсточникиДанныхУчетаВремени.ПериодРегистрацииФактическогоВремени,
	|	ИсточникиДанныхУчетаВремени.ПериодРегистрацииНормыВремени,
	|	ИсточникиДанныхУчетаВремени.ВремяВведеноСводно,
	|	ИсточникиДанныхУчетаВремени.ПроизводственныйКалендарь,
	|	ИсточникиДанныхУчетаВремени.ИсточникДанныхПолнойНормыВремени,
	|	ИсточникиДанныхУчетаВремени.СуммированныйУчетРабочегоВремени
	|ПОМЕСТИТЬ ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная
	|ИЗ
	|	ВТИсточникиДанныхУчетаВремени КАК ИсточникиДанныхУчетаВремени
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсточникиДанныхУчетаВремени КАК ИсточникиДанныхУчетаВремениСлед
	|		ПО ИсточникиДанныхУчетаВремени.Сотрудник = ИсточникиДанныхУчетаВремениСлед.Сотрудник
	|			И ИсточникиДанныхУчетаВремени.Месяц = ИсточникиДанныхУчетаВремениСлед.Месяц
	|			И ИсточникиДанныхУчетаВремени.Период < ИсточникиДанныхУчетаВремениСлед.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникиДанныхУчетаВремени.Сотрудник,
	|	ИсточникиДанныхУчетаВремени.Месяц,
	|	ИсточникиДанныхУчетаВремени.Период,
	|	ИсточникиДанныхУчетаВремени.ОбщийГрафик,
	|	ИсточникиДанныхУчетаВремени.ИсточникДанныхФактическогоВремени,
	|	ИсточникиДанныхУчетаВремени.ИсточникДанныхНормыВремени,
	|	ИсточникиДанныхУчетаВремени.ПериодРегистрацииФактическогоВремени,
	|	ИсточникиДанныхУчетаВремени.ПериодРегистрацииНормыВремени,
	|	ИсточникиДанныхУчетаВремени.ВремяВведеноСводно,
	|	ИсточникиДанныхУчетаВремени.ПроизводственныйКалендарь,
	|	ИсточникиДанныхУчетаВремени.ИсточникДанныхПолнойНормыВремени,
	|	ИсточникиДанныхУчетаВремени.СуммированныйУчетРабочегоВремени";
	
	Запрос.Выполнить();
	
	УстановитьПризнакИнциализированностиВременнойТаблицы(ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная, ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная);
КонецПроцедуры	

Процедура СоздатьВТГрафикРаботыСотрудников()
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстановитьИсходныйНаборСотрудниковПоВременнойТаблице(ОписаниеНабораСотрудников);
	КонецЕсли;
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТИсходныйНаборСотрудникиМесяцы", "Сотрудник");
	
	ПараметрыПолученияДанных = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ПараметрыПолученияДанных.ВключатьЗаписиНаНачалоПериода = Истина;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"ГрафикРаботыСотрудников", 
		МенеджерВременныхТаблиц, 
		Ложь, 
		ОписаниеФильтра,
		ПараметрыПолученияДанных,
		"УчетВремени_ВТГрафикРаботыСотрудников");
		
	ДобавитьВременныеТаблицыКУничтожению("УчетВремени_ВТГрафикРаботыСотрудников");	
КонецПроцедуры	

Процедура СоздатьВТПараметрыЗарегистрированныхДанныхУчетаВремени()
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстановитьИсходныйНаборСотрудниковПоВременнойТаблице(ОписаниеНабораСотрудников);
	КонецЕсли;	
	
	Запрос = СоздатьЗапрос();
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("ВидыДанныхВытесняющиеСовдноеВремя", УчетРабочегоВремениРасширенный.ВидыДанныхВытесняющиеСводноеВремя());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныйНаборСотрудникиМесяцы.Сотрудник,
	|	ИсходныйНаборСотрудникиМесяцы.Месяц,
	|	МАКСИМУМ(ЕСТЬNULL(ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников.ПериодРегистрации, ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодРегистрации,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ДанныеИндивидуальныхГрафиков)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЗарегистрированыИндивдуальныеСведенияОНорме,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников.Месяц ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЗарегистрированыИндивдуальныеСведения,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВЫБОР
	|					КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.СводныеДанные)
	|						ТОГДА 1
	|					КОГДА ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников.ВидДанных В (&ВидыДанныхВытесняющиеСовдноеВремя)
	|						ТОГДА 2
	|					ИНАЧЕ 0
	|				КОНЕЦ) = 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВремяВведеноСводно,
	|	ИсходныйНаборСотрудникиМесяцы.ДатаОкончания
	|ПОМЕСТИТЬ ВТПараметрыЗарегистрированныхДанныхУчетаВремени
	|ИЗ
	|	ВТИсходныйНаборСотрудникиМесяцы КАК ИсходныйНаборСотрудникиМесяцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников КАК ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников
	|		ПО ИсходныйНаборСотрудникиМесяцы.Сотрудник = ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников.Сотрудник
	|			И ИсходныйНаборСотрудникиМесяцы.Месяц = ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников.Месяц
	|			И (ПараметрыЗарегистрированныхДанныхУчетаВремениСотрудников.ПериодРегистрации <= &ДатаАктуальности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходныйНаборСотрудникиМесяцы.Сотрудник,
	|	ИсходныйНаборСотрудникиМесяцы.Месяц,
	|	ИсходныйНаборСотрудникиМесяцы.ДатаОкончания";
	
	Запрос.Выполнить();
КонецПроцедуры	

Функция ПараметрыПостроенияЗапросаВТЗарегистрированныеНаборовВидовВремениСлужебная()
	ПараметрыПостроения = Новый Структура;
	ПараметрыПостроения.Вставить("ИспользоватьСвязьПоКлючуНаборов", Ложь);
	ПараметрыПостроения.Вставить("ИспользоватьУсловиеЗарегистрированыЧасы", Ложь);
	ПараметрыПостроения.Вставить("ИмяВТРезультат", "");
	
	Возврат ПараметрыПостроения;	
КонецФункции	

Процедура СоздатьВТЗарегистрированныеНаборыВидовВремениСлужебная(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовИдовВремени, ПараметрыПостроенияЗапроса) Экспорт
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		УстнановитьОписаниеНабораСотрудников(ОписаниеТаблицыФильтра.ИмяТаблицы, ОписаниеТаблицыФильтра.ИмяПоляСотрудник, ОписаниеТаблицыФильтра.ИмяПоляДатаНачала, ОписаниеТаблицыФильтра.ИмяПоляДатаОкончания);
	КонецЕсли;
	
	СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная();
	СоздатьВТПодневныеДанныеУчетаВремениПоИнициализированнымДанным();
	
	СоздатьВТПериодыПолученияВидовВремениПоИсточникамДанных(ОписаниеТаблицыФильтра);	
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДатыПолученияданныхПоИсточникамДанных.Сотрудник,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных КАК ДатаНачала,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИсходногоПериодаПолученияДанных КАК ДатаОкончания,
	|	ТаблицаНаборовВидовВремени.Ключ КАК КлючНабораВидовВремени
	|ПОМЕСТИТЬ ВТНаличиеЗарегистрированныхНаборовВидовВремени
	|ИЗ
	|	ВТПериодыПолученияВидовВремениПоИсточникамДанных КАК ДатыПолученияданныхПоИсточникамДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаНаборовВидовВремени КАК ТаблицаНаборовВидовВремени
	|		ПО (&УсловиеСвязиПоКлючуНаборов)
	|			И (1 В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					1 КАК Поле1
	|				ИЗ
	|					ВТПодневныеДанныеУчетаВремени КАК ПодневныеДанныеУчетаВремени
	|				ГДЕ
	|					ПодневныеДанныеУчетаВремени.ИсточникДанных = ДатыПолученияданныхПоИсточникамДанных.ИсточникДанныхФактическогоВремени
	|					И ПодневныеДанныеУчетаВремени.ОбщийГрафик = ДатыПолученияданныхПоИсточникамДанных.ОбщийГрафик
	|					И ПодневныеДанныеУчетаВремени.ПериодРегистрации = ДатыПолученияданныхПоИсточникамДанных.ПериодРегистрацииФактическогоВремени
	|					И ПодневныеДанныеУчетаВремени.Месяц = ДатыПолученияданныхПоИсточникамДанных.Месяц
	|					И ПодневныеДанныеУчетаВремени.ВидУчетаВремени = ТаблицаНаборовВидовВремени.ВидВремени
	|					И (ПодневныеДанныеУчетаВремени.Дата МЕЖДУ ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИнтервалаПоиска И ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИнтервалаПоиска
	|							И НЕ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|						ИЛИ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|							И НЕ ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники)
	|					И (ПодневныеДанныеУчетаВремени.Праздник = ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники
	|						ИЛИ НЕ ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники)
	|					И &УсловиеВремяВЧасах))";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПодневныеДанныеУчетаВремени", ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени));
	
	УстнановитьПоляОписанияНаборовВидовВремениВЗапрос(Запрос.Текст, ОписаниеТаблицыНаборовИдовВремени);
	
	Если ПараметрыПостроенияЗапроса.ИспользоватьСвязьПоКлючуНаборов Тогда
		УсловиеСвязиПоКлючуНаборовВидовВремени = "ДатыПолученияданныхПоИсточникамДанных.КлючНабораВидовВремени = ТаблицаНаборовВидовВремени." + ОписаниеТаблицыНаборовИдовВремени.ИмяПоляКлюч;
	Иначе                                                      	
		УсловиеСвязиПоКлючуНаборовВидовВремени = "ИСТИНА";
	КонецЕсли;	
	
	Если ПараметрыПостроенияЗапроса.ИспользоватьУсловиеЗарегистрированыЧасы Тогда
		ТекстУсловияТолькоВремяВчасах = "ПодневныеДанныеУчетаВремени.ДополнительноеЗначение > 0";
	Иначе
		ТекстУсловияТолькоВремяВчасах = "ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеВремяВЧасах", ТекстУсловияТолькоВремяВчасах);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеСвязиПоКлючуНаборов", УсловиеСвязиПоКлючуНаборовВидовВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНаличиеЗарегистрированныхНаборовВидовВремени", ПараметрыПостроенияЗапроса.ИмяВТРезультат);

	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТПериодыПолученияВидовВремениПоИсточникамДанных");
КонецПроцедуры	
	
Функция ПараметрыПостроенияЗапросаВТДатыРегистрацииНаборовВидовВремениСлужебная()
	ПараметрыПостроения = Новый Структура;
	ПараметрыПостроения.Вставить("УчитыватьВыходныеДни", Ложь);
	ПараметрыПостроения.Вставить("ИмяВТРезультат", "");
	
	Возврат ПараметрыПостроения;	
КонецФункции	

Процедура СоздатьВТДатыРегистрацииНаборовВидовВремениСлужебная(ОписаниеТаблицыФильтра, ОписаниеТаблицыНаборовВидовВремени, ПараметрыПостроенияЗапроса)
	СоздатьВТПодневныеДанныеУчетаВремениПоИнициализированнымДанным();
		
	СоздатьВТПериодыПолученияВидовВремениПоИсточникамДанных(ОписаниеТаблицыФильтра);
	
	ВидВремениВыходной = Справочники.ВидыИспользованияРабочегоВремени.ВыходныеДни;
	
	Запрос = СоздатьЗапрос();
	Запрос.УстановитьПараметр("Выходной", ВидВремениВыходной);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыПолученияданныхПоИсточникамДанных.Сотрудник,
	|	ДатыПолученияданныхПоИсточникамДанных.Месяц,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных КАК ДатаНачала,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИсходногоПериодаПолученияДанных КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|			ТОГДА ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных
	|		ИНАЧЕ ПодневныеДанныеУчетаВремени.Дата
	|	КОНЕЦ КАК Дата,
	|	ДатыПолученияданныхПоИсточникамДанных.КлючНабораВидовВремени,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ПодневныеДанныеУчетаВремени.ДополнительноеЗначение = 0
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ВремяВчасах,
	|	МАКСИМУМ(ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод) КАК ВЦеломЗаПериод,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ПодневныеДанныеУчетаВремени.ВидУчетаВремени = &Выходной
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЭтоВыходнойДень
	|ПОМЕСТИТЬ ВТДатыРегистрацииНаборовВидовВремениСлужебная
	|ИЗ
	|	ВТПериодыПолученияВидовВремениПоИсточникамДанных КАК ДатыПолученияданныхПоИсточникамДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаНаборовВидовВремени КАК ТаблицаНаборовВидовВремени
	|		ПО ДатыПолученияданныхПоИсточникамДанных.КлючНабораВидовВремени = ТаблицаНаборовВидовВремени.Ключ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодневныеДанныеУчетаВремени КАК ПодневныеДанныеУчетаВремени
	|		ПО (ПодневныеДанныеУчетаВремени.ИсточникДанных = ДатыПолученияданныхПоИсточникамДанных.ИсточникДанныхФактическогоВремени)
	|			И (ПодневныеДанныеУчетаВремени.ОбщийГрафик = ДатыПолученияданныхПоИсточникамДанных.ОбщийГрафик)
	|			И (ПодневныеДанныеУчетаВремени.ПериодРегистрации = ДатыПолученияданныхПоИсточникамДанных.ПериодРегистрацииФактическогоВремени)
	|			И (ПодневныеДанныеУчетаВремени.Месяц = ДатыПолученияданныхПоИсточникамДанных.Месяц)
	|			И (&УсловиеВидВремени)
	|			И (ПодневныеДанныеУчетаВремени.Дата МЕЖДУ ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИнтервалаПоиска И ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИнтервалаПоиска
	|					И НЕ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|				ИЛИ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|					И НЕ ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники)
	|			И (ПодневныеДанныеУчетаВремени.Праздник = ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники
	|				ИЛИ НЕ ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыПолученияданныхПоИсточникамДанных.Сотрудник,
	|	ДатыПолученияданныхПоИсточникамДанных.Месяц,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных,
	|	ДатыПолученияданныхПоИсточникамДанных.ДатаОкончанияИсходногоПериодаПолученияДанных,
	|	ДатыПолученияданныхПоИсточникамДанных.КлючНабораВидовВремени,
	|	ВЫБОР
	|		КОГДА ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|			ТОГДА ДатыПолученияданныхПоИсточникамДанных.ДатаНачалаИсходногоПериодаПолученияДанных
	|		ИНАЧЕ ПодневныеДанныеУчетаВремени.Дата
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПодневныеДанныеУчетаВремени", ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени));
		
	УстнановитьПоляОписанияНаборовВидовВремениВЗапрос(Запрос.Текст, ОписаниеТаблицыНаборовВидовВремени);
	
	Если ПараметрыПостроенияЗапроса.УчитыватьВыходныеДни Тогда
		ТекстУсловияВидВремени = "(ПодневныеДанныеУчетаВремени.ВидУчетаВремени = ТаблицаНаборовВидовВремени.ВидВремени ИЛИ ПодневныеДанныеУчетаВремени.ВидУчетаВремени = &Выходной)";
	Иначе
		ТекстУсловияВидВремени = "ПодневныеДанныеУчетаВремени.ВидУчетаВремени = ТаблицаНаборовВидовВремени.ВидВремени";
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеВидВремени", ТекстУсловияВидВремени);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТДатыРегистрацииНаборовВидовВремениСлужебная", ПараметрыПостроенияЗапроса.ИмяВТРезультат);
	
	ДобавитьВременныеТаблицыКУничтожению("ВТПериодыПолученияВидовВремениПоИсточникамДанных");
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТПериодыПолученияВидовВремениПоИсточникамДанных(ОписаниеТаблицыФильтра)
	СоздатьВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная();
	
	Запрос = СоздатьЗапрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнтервалыДействияИсточниковДанныхУчетаВремени.Сотрудник,
	|	ТаблицаФильтр.КлючНабораВидовВремени КАК КлючНабораВидовВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремени.ИсточникДанныхФактическогоВремени,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремени.ОбщийГрафик,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремени.Месяц,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремени.ПериодРегистрацииФактическогоВремени,
	|	ВЫБОР
	|		КОГДА ТаблицаФильтр.ДатаНачала < ИнтервалыДействияИсточниковДанныхУчетаВремени.ДатаНачала
	|			ТОГДА ИнтервалыДействияИсточниковДанныхУчетаВремени.ДатаНачала
	|		ИНАЧЕ ТаблицаФильтр.ДатаНачала
	|	КОНЕЦ КАК ДатаНачалаИнтервалаПоиска,
	|	ВЫБОР
	|		КОГДА ТаблицаФильтр.ДатаОкончания > ИнтервалыДействияИсточниковДанныхУчетаВремени.ДатаОкончания
	|			ТОГДА ИнтервалыДействияИсточниковДанныхУчетаВремени.ДатаОкончания
	|		ИНАЧЕ ТаблицаФильтр.ДатаОкончания
	|	КОНЕЦ КАК ДатаОкончанияИнтервалаПоиска,
	|	ТаблицаФильтр.ДатаНачала КАК ДатаНачалаИсходногоПериодаПолученияДанных,
	|	ТаблицаФильтр.ДатаОкончания КАК ДатаОкончанияИсходногоПериодаПолученияДанных,
	|	ИнтервалыДействияИсточниковДанныхУчетаВремени.ПроизводственныйКалендарь
	|ПОМЕСТИТЬ ВТПериодыПолученияВидовВремениПоИсточникамДанных
	|ИЗ
	|	ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная КАК ИнтервалыДействияИсточниковДанныхУчетаВремени
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаФильтр КАК ТаблицаФильтр
	|		ПО ИнтервалыДействияИсточниковДанныхУчетаВремени.Сотрудник = ТаблицаФильтр.Сотрудник
	|			И (ИнтервалыДействияИсточниковДанныхУчетаВремени.ДатаНачала МЕЖДУ ТаблицаФильтр.ДатаНачала И ТаблицаФильтр.ДатаОкончания
	|				ИЛИ ТаблицаФильтр.ДатаНачала МЕЖДУ ИнтервалыДействияИсточниковДанныхУчетаВремени.ДатаНачала И ИнтервалыДействияИсточниковДанныхУчетаВремени.ДатаОкончания)
	|			И (&УсловиеОтбораТаблицыИстчоникаДанных)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаФильтр", ОписаниеТаблицыФильтра.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ДатаНачала", "ТаблицаФильтр." + ОписаниеТаблицыФильтра.ИмяПоляДатаНачала);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ДатаОкончания", "ТаблицаФильтр." + ОписаниеТаблицыФильтра.ИмяПоляДатаОкончания);
	
	Если ОписаниеТаблицыФильтра.Свойство("ИмяПоляКлючНабораВидовВремени") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.КлючНабораВидовВремени", "ТаблицаФильтр." + ОписаниеТаблицыФильтра.ИмяПоляКлючНабораВидовВремени);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.КлючНабораВидовВремени", "ИСТИНА");
	КонецЕсли;
	
	Если ОписаниеТаблицыФильтра.Свойство("Отбор") Тогда
		Отбор = ОписаниеТаблицыФильтра.Отбор;
	Иначе
		Отбор = Новый Массив;
	КонецЕсли;	
	
	УстановитьУсловияОтбораВЗапрос(Запрос, Отбор, "ТаблицаФильтр");
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТПодневныеДанныеУчетаВремениПоИнициализированнымДанным()
	Если ВременнаяТаблицаИнициализирована(ВТПодневныеДанныеУчетаВремени) Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьВТИстчоникиДанныхУчетаВремени();
	
	Запрос = СоздатьЗапрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсточникиДанныхУчетаВремени.Месяц,
	|	ИсточникиДанныхУчетаВремени.ИсточникДанныхФактическогоВремени КАК ИсточникДанных,
	|	ИсточникиДанныхУчетаВремени.ПериодРегистрацииФактическогоВремени КАК ПериодРегистрации,
	|	ИсточникиДанныхУчетаВремени.ОбщийГрафик,
	|	ЕСТЬNULL(ИсточникиДанныхУчетаВремени.ПроизводственныйКалендарь, ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)) КАК ПроизводственныйКалендарь
	|ПОМЕСТИТЬ ВТРазличныеИсточникиДанных
	|ИЗ
	|	ВТИсточникиДанныхУчетаВремени КАК ИсточникиДанныхУчетаВремени";
	
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТРазличныеИсточникиДанных");
	
	ОписаниеТаблицыИстчониковДанных = ОписаниеТаблицыИсточниковДанных();
	ОписаниеТаблицыИстчониковДанных.ИмяТаблицы = "ВТРазличныеИсточникиДанных";
	ОписаниеТаблицыИстчониковДанных.ИмяПоляМесяц = "Месяц";
	ОписаниеТаблицыИстчониковДанных.ИмяПоляИсточникДанных = "ИсточникДанных";
	ОписаниеТаблицыИстчониковДанных.ИмяПоляПериодРегистрацииВремени = "ПериодРегистрации";
	ОписаниеТаблицыИстчониковДанных.ИмяПоляОбщийГрафик = "ОбщийГрафик";
	
	СоздатьВТПодневныеДанныеУчетаВремени(ОписаниеТаблицыИстчониковДанных);
	
КонецПроцедуры

Функция ОписаниеТаблицыИсточниковДанных()
	ОписаниеТаблицы = Новый Структура();
	ОписаниеТаблицы.Вставить("ИмяТаблицы");
	ОписаниеТаблицы.Вставить("ИмяПоляМесяц", "Месяц");
	ОписаниеТаблицы.Вставить("ИмяПоляИсточникДанных");
	ОписаниеТаблицы.Вставить("ИмяПоляПериодРегистрацииВремени");
	ОписаниеТаблицы.Вставить("ИмяПоляОбщийГрафик");
	
	ОписаниеТаблицы.Вставить("Отбор", Новый Массив);
	
	
	Возврат ОписаниеТаблицы;
КонецФункции

Процедура СоздатьВТПодневныеДанныеУчетаВремени(ОписаниеТаблицыИстчониковДанных)
	СоздатьВТИсточникиФактическихДанныхДляИнициализации(ОписаниеТаблицыИстчониковДанных);
	
	ДобавитьВременныеТаблицыКУничтожению("ВТИсточникиФактическихДанныхДляИнициализации");
	ДобавитьВременныеТаблицыКУничтожению("ВТКалендарияДляИнциализации");
	
	Если Не НеобходимаИнициализацияФактическихДанныхУчетаВремени() Тогда
		Возврат;
	КонецЕсли;
	
	Если ВременнаяТаблицаИнициализирована(ВТПодневныеДанныеУчетаВремени) Тогда
		ИспользоватьРанееПолученныеДанные = Истина;
	Иначе
		ИспользоватьРанееПолученныеДанные = Ложь;
	КонецЕсли;	
	
	СоздатьВТПраздичныеДни();
	
	Запрос = СоздатьЗапрос();	
	
	// Определим сотрудников по которым еще не софрмированы инд. свдения
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НеИнициализированныеИстчоникиДанных.ИсточникДанных КАК Сотрудник,
	|	НеИнициализированныеИстчоникиДанных.Месяц КАК ПериодДействия,
	|	НеИнициализированныеИстчоникиДанных.ПериодРегистрации
	|ИЗ
	|	ВТИсточникиФактическихДанныхДляИнициализации КАК НеИнициализированныеИстчоникиДанных
	|ГДЕ
	|	НеИнициализированныеИстчоникиДанных.ИсточникДанных ССЫЛКА Справочник.Сотрудники
	|	И НЕ 1 В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					1 КАК поле
	|				ИЗ
	|					РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|				ГДЕ
	|					ГрафикиРаботыПоВидамВремени.ГрафикРаботы = НеИнициализированныеИстчоникиДанных.ИсточникДанных
	|					И ГрафикиРаботыПоВидамВремени.Месяц = НеИнициализированныеИстчоникиДанных.Месяц
	|					И ГрафикиРаботыПоВидамВремени.ПериодРегистрации = НеИнициализированныеИстчоникиДанных.ПериодРегистрации)";
	
	ТаблицаСотрудников = Запрос.Выполнить().Выгрузить();
	
	ТаблицаСотрудников.Сортировать("ПериодДействия");
	
	Если ТаблицаСотрудников.Количество() > 0 Тогда
		МинимальнаяДата = НачалоМесяца(ТаблицаСотрудников[0].ПериодДействия);
		МаксимальнаяДата = КонецМесяца(ТаблицаСотрудников[ТаблицаСотрудников.Количество() - 1].ПериодДействия);
		
		УчетРабочегоВремениРасширенный.СформироватьЗаписиРабочегоВремениСотрудников(ТаблицаСотрудников, МинимальнаяДата, МаксимальнаяДата);
	КонецЕсли;	
	
	ТекстЗапросаПодневынеДанные = 
	"ВЫБРАТЬ
	|	НеИнициализированныеИстчоникиДанных.ИсточникДанных КАК ИсточникДанных,
	|	НеИнициализированныеИстчоникиДанных.Месяц КАК Месяц,
	|	НеИнициализированныеИстчоникиДанных.ПериодРегистрации КАК ПериодРегистрации,
	|	НеИнициализированныеИстчоникиДанных.ОбщийГрафик КАК ОбщийГрафик,
	|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени КАК ВидУчетаВремени,
	|	ГрафикиРаботыПоВидамВремени.Дата КАК Дата,
	|	ГрафикиРаботыПоВидамВремени.ВЦеломЗаПериод КАК ВЦеломЗаПериод,
	|	ГрафикиРаботыПоВидамВремени.Территория КАК Территория,
	|	ГрафикиРаботыПоВидамВремени.УсловияТруда КАК УсловияТруда,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначение КАК ОсновноеЗначение,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение КАК ДополнительноеЗначение,
	|	ВЫБОР
	|		КОГДА ПраздничныеДни.Дата ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Праздник
	|ПОМЕСТИТЬ ВТПодневныеДанныеУчетаВремени
	|ИЗ
	|	ВТИсточникиФактическихДанныхДляИнициализации КАК НеИнициализированныеИстчоникиДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО НеИнициализированныеИстчоникиДанных.ИсточникДанных = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И НеИнициализированныеИстчоникиДанных.Месяц = ГрафикиРаботыПоВидамВремени.Месяц
	|			И НеИнициализированныеИстчоникиДанных.ПериодРегистрации = ГрафикиРаботыПоВидамВремени.ПериодРегистрации
	|			И (ГрафикиРаботыПоВидамВремени.ВремяВЧасах = ЛОЖЬ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраздничныеДни КАК ПраздничныеДни
	|		ПО НеИнициализированныеИстчоникиДанных.ПроизводственныйКалендарь = ПраздничныеДни.ПроизводственныйКалендарь
	|			И (ГрафикиРаботыПоВидамВремени.Дата = ПраздничныеДни.Дата)
	|			И (ГрафикиРаботыПоВидамВремени.ПереходящаяЧастьТекущейСмены = ПраздничныеДни.ПереходящаяЧастьТекущейСмены)";
	
	ТекстЗапросаПодневынеДанные = СтрЗаменить(ТекстЗапросаПодневынеДанные, "ВТПодневныеДанныеУчетаВремени", НовоеИмяИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени));
	
	Если ИспользоватьРанееПолученныеДанные Тогда
		ТекстЗапросаПодневынеДанныеРанееПолученные = 
		"ВЫБРАТЬ
		|	ПодневныеДанныеУчетаВремени.ИсточникДанных,
		|	ПодневныеДанныеУчетаВремени.Месяц,
		|	ПодневныеДанныеУчетаВремени.ПериодРегистрации,
		|	ПодневныеДанныеУчетаВремени.ОбщийГрафик,
		|	ПодневныеДанныеУчетаВремени.ВидУчетаВремени,
		|	ПодневныеДанныеУчетаВремени.Дата,
		|	ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод,
		|	ПодневныеДанныеУчетаВремени.Территория,
		|	ПодневныеДанныеУчетаВремени.УсловияТруда,
		|	ПодневныеДанныеУчетаВремени.ОсновноеЗначение,
		|	ПодневныеДанныеУчетаВремени.ДополнительноеЗначение,
		|	ПодневныеДанныеУчетаВремени.Праздник
		|ИЗ
		|	ВТРанееПолученныеПодневныеДанныеУчетаВремени КАК ПодневныеДанныеУчетаВремени";	
		
		ТекущееИмяВТПодневныеДанныеУчетаВремени = ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени);
		
		ИспользоватьРанееПолученныеДанные = СтрЗаменить(ТекстЗапросаПодневынеДанныеРанееПолученные, "ВТРанееПолученныеПодневныеДанныеУчетаВремени", ТекущееИмяВТПодневныеДанныеУчетаВремени);
		
		ДобавитьОбъединениеВТекстЗапроса(ТекстЗапросаПодневынеДанные, ИспользоватьРанееПолученныеДанные);
		
		ДобавитьВременныеТаблицыКУничтожению(ТекущееИмяВТПодневныеДанныеУчетаВремени);
	КонецЕсли;
	
	ДобавитьИндексерованиеВТекстЗапроса(ТекстЗапросаПодневынеДанные, "НеИнициализированныеИстчоникиДанных.ИсточникДанных, НеИнициализированныеИстчоникиДанных.Месяц, НеИнициализированныеИстчоникиДанных.ПериодРегистрации, ГрафикиРаботыПоВидамВремени.ВидУчетаВремени");
	
	Запрос.Текст = ТекстЗапросаПодневынеДанные;
	
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТПраздничныеДни");
	
	УстановитьПризнакИнциализированностиВременнойТаблицы(ВТПодневныеДанныеУчетаВремени, НовоеИмяИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени));
	
	УстнановитьИнициализированныеИсточникиФакттическихДанных();
	
КонецПроцедуры

Процедура СоздатьВТПраздичныеДни()
	Запрос = СоздатьЗапрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственныеКалендари.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь,
	|	ПроизводственныеКалендари.Месяц КАК Месяц,
	|	ДанныеПроизводственногоКалендаря.Дата КАК Дата,
	|	ЛОЖЬ КАК ПереходящаяЧастьТекущейСмены
	|ПОМЕСТИТЬ ВТПраздничныеДни
	|ИЗ
	|	ВТКалендарияДляИнциализации КАК ПроизводственныеКалендари
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|		ПО ПроизводственныеКалендари.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
	|			И ПроизводственныеКалендари.НачалоМесяца <= ДанныеПроизводственногоКалендаря.Дата
	|			И ПроизводственныеКалендари.КонецМесяца >= ДанныеПроизводственногоКалендаря.Дата
	|			И (ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроизводственныеКалендари.ПроизводственныйКалендарь,
	|	ПроизводственныеКалендари.Месяц,
	|	ДОБАВИТЬКДАТЕ(ДанныеПроизводственногоКалендаря.Дата, ДЕНЬ, -1),
	|	ИСТИНА
	|ИЗ
	|	ВТКалендарияДляИнциализации КАК ПроизводственныеКалендари
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|		ПО ПроизводственныеКалендари.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
	|			И (ДОБАВИТЬКДАТЕ(ПроизводственныеКалендари.НачалоМесяца, ДЕНЬ, 1) <= ДанныеПроизводственногоКалендаря.Дата)
	|			И (ДОБАВИТЬКДАТЕ(ПроизводственныеКалендари.КонецМесяца, ДЕНЬ, 1) >= ДанныеПроизводственногоКалендаря.Дата)
	|			И (ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник))";
		
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТИсточникиФактическихДанныхДляИнициализации(ОписаниеТаблицыИстчониковДанных)
		
	Запрос = СоздатьЗапрос();	
	
	Если ВременнаяТаблицаИнициализирована(ВТИнициализированныеИсточникиФактическихДанных) Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаФильтр.Месяц КАК Месяц,
		|	НАЧАЛОПЕРИОДА(ТаблицаФильтр.Месяц, МЕСЯЦ) КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ТаблицаФильтр.Месяц, МЕСЯЦ) КАК ДатаОкончания,
		|	ТаблицаФильтр.ИсточникДанных КАК ИсточникДанных,
		|	ТаблицаФильтр.ОбщийГрафик КАК ОбщийГрафик,
		|	ТаблицаФильтр.ПериодРегистрации КАК ПериодРегистрации,
		|	ЕСТЬNULL(ГрафикиРаботыСотрудников.ПроизводственныйКалендарь, ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)) КАК ПроизводственныйКалендарь
		|ПОМЕСТИТЬ ВТИсточникиФактическихДанныхДляИнициализации
		|ИЗ
		|	ВТТаблицаФильтр КАК ТаблицаФильтр
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыСотрудников КАК ГрафикиРаботыСотрудников
		|		ПО ТаблицаФильтр.ОбщийГрафик = ГрафикиРаботыСотрудников.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнициализированныеИстчоникиДанных КАК ИнициализированныеИстчоникиДанных
		|		ПО ТаблицаФильтр.ИсточникДанных = ИнициализированныеИстчоникиДанных.ИсточникДанных
		|			И ТаблицаФильтр.Месяц = ИнициализированныеИстчоникиДанных.Месяц
		|			И ТаблицаФильтр.ПериодРегистрации = ИнициализированныеИстчоникиДанных.ПериодРегистрации
		|			И ТаблицаФильтр.ОбщийГрафик = ИнициализированныеИстчоникиДанных.ОбщийГрафик
		|ГДЕ
		|	ИнициализированныеИстчоникиДанных.ИсточникДанных ЕСТЬ NULL
		|	И НЕ ТаблицаФильтр.ОбщийГрафик ЕСТЬ NULL
		|	И ТаблицаФильтр.ОбщийГрафик <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыСотрудников.ПустаяСсылка)
		|	И ТаблицаФильтр.ИсточникДанных <> НЕОПРЕДЕЛЕНО
		|	И &УсловиеОтбораТаблицыИстчоникаДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсточникиФактическихДанныхДляИнициализации.Месяц КАК Месяц,
		|	ИсточникиФактическихДанныхДляИнициализации.ДатаНачала КАК НачалоМесяца,
		|	ИсточникиФактическихДанныхДляИнициализации.ДатаОкончания КАК КонецМесяца,
		|	ИсточникиФактическихДанныхДляИнициализации.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
		|ПОМЕСТИТЬ ВТКалендарияДляИнциализации
		|ИЗ
		|	ВТИсточникиФактическихДанныхДляИнициализации КАК ИсточникиФактическихДанныхДляИнициализации";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТИнициализированныеИстчоникиДанных", ТекущееИмяВременнойТаблицы(ВТИнициализированныеИсточникиФактическихДанных));
	Иначе			
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаФильтр.Месяц КАК Месяц,
		|	НАЧАЛОПЕРИОДА(ТаблицаФильтр.Месяц, МЕСЯЦ) КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ТаблицаФильтр.Месяц, МЕСЯЦ) КАК ДатаОкончания,
		|	ТаблицаФильтр.ИсточникДанных КАК ИсточникДанных,
		|	ТаблицаФильтр.ОбщийГрафик КАК ОбщийГрафик,
		|	ТаблицаФильтр.ПериодРегистрации КАК ПериодРегистрации,
		|	ЕСТЬNULL(ГрафикиРаботыСотрудников.ПроизводственныйКалендарь, ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)) КАК ПроизводственныйКалендарь
		|ПОМЕСТИТЬ ВТИсточникиФактическихДанныхДляИнициализации
		|ИЗ
		|	ВТТаблицаФильтр КАК ТаблицаФильтр
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыСотрудников КАК ГрафикиРаботыСотрудников
		|		ПО ТаблицаФильтр.ОбщийГрафик = ГрафикиРаботыСотрудников.Ссылка
		|ГДЕ
		|	&УсловиеОтбораТаблицыИстчоникаДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсточникиФактическихДанныхДляИнициализации.Месяц,
		|	ИсточникиФактическихДанныхДляИнициализации.ПроизводственныйКалендарь,
		|	ИсточникиФактическихДанныхДляИнициализации.ДатаНачала КАК НачалоМесяца,
		|	ИсточникиФактическихДанныхДляИнициализации.ДатаОкончания КАК КонецМесяца
		|ПОМЕСТИТЬ ВТКалендарияДляИнциализации
		|ИЗ
		|	ВТИсточникиФактическихДанныхДляИнициализации КАК ИсточникиФактическихДанныхДляИнициализации";	
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаФильтр", ОписаниеТаблицыИстчониковДанных.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.Месяц", "ТаблицаФильтр." + ОписаниеТаблицыИстчониковДанных.ИмяПоляМесяц);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ИсточникДанных", "ТаблицаФильтр." + ОписаниеТаблицыИстчониковДанных.ИмяПоляИсточникДанных);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ОбщийГрафик", "ТаблицаФильтр." + ОписаниеТаблицыИстчониковДанных.ИмяПоляОбщийГрафик);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаФильтр.ПериодРегистрации", "ТаблицаФильтр." + ОписаниеТаблицыИстчониковДанных.ИмяПоляПериодРегистрацииВремени);
	
	
	УстановитьУсловияОтбораВЗапрос(Запрос, ОписаниеТаблицыИстчониковДанных.Отбор, "ТаблицаФильтр");
	
	Запрос.Выполнить();
		
КонецПроцедуры	

Процедура УстнановитьИнициализированныеИсточникиФакттическихДанных()
	Запрос = СоздатьЗапрос();
	
	Если Не ВременнаяТаблицаИнициализирована(ВТИнициализированныеИсточникиФактическихДанных) Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсточникиФактическихДанныхДляИнициализации.Месяц,
		|	ИсточникиФактическихДанныхДляИнициализации.ИсточникДанных,
		|	ИсточникиФактическихДанныхДляИнициализации.ПериодРегистрации,
		|	ИсточникиФактическихДанныхДляИнициализации.ОбщийГрафик
		|ПОМЕСТИТЬ ВТИнициализированныеИсточникиФактическихДанных
		|ИЗ
		|	ВТИсточникиФактическихДанныхДляИнициализации КАК ИсточникиФактическихДанныхДляИнициализации";
		
		НовоеИмяВТИнициализированныеИсточникиФактическихДанных = ВТИнициализированныеИсточникиФактическихДанных;	
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсточникиФактическихДанныхДляИнициализации.Месяц,
		|	ИсточникиФактическихДанныхДляИнициализации.ИсточникДанных,
		|	ИсточникиФактическихДанныхДляИнициализации.ПериодРегистрации,
		|	ИсточникиФактическихДанныхДляИнициализации.ОбщийГрафик
		|ПОМЕСТИТЬ ВТНовыеИнициализированныеИсточникиФактическихДанных
		|ИЗ
		|	ВТРанееИнициализированныеИсточникиФактическихДанных КАК ИсточникиФактическихДанныхДляИнициализации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИсточникиФактическихДанныхДляИнициализации.Месяц,
		|	ИсточникиФактическихДанныхДляИнициализации.ИсточникДанных,
		|	ИсточникиФактическихДанныхДляИнициализации.ПериодРегистрации,
		|	ИсточникиФактическихДанныхДляИнициализации.ОбщийГрафик
		|ИЗ
		|	ВТИсточникиФактическихДанныхДляИнициализации КАК ИсточникиФактическихДанныхДляИнициализации";
		
		ТекущееИмяВТИнициализированныеИстчоникиДанных = ТекущееИмяВременнойТаблицы(ВТИнициализированныеИсточникиФактическихДанных);
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРанееИнициализированныеИсточникиФактическихДанных", ТекущееИмяВТИнициализированныеИстчоникиДанных);
		
		НовоеИмяВТИнициализированныеИсточникиФактическихДанных = НовоеИмяИмяВременнойТаблицы(ВТИнициализированныеИсточникиФактическихДанных);	
		
		ДобавитьВременныеТаблицыКУничтожению(ТекущееИмяВТИнициализированныеИстчоникиДанных);

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНовыеИнициализированныеИсточникиФактическихДанных", НовоеИмяВТИнициализированныеИсточникиФактическихДанных);
	КонецЕсли;	
	
	Запрос.Выполнить();
	
	УстановитьПризнакИнциализированностиВременнойТаблицы(ВТИнициализированныеИсточникиФактическихДанных, НовоеИмяВТИнициализированныеИсточникиФактическихДанных);
	
КонецПроцедуры	

Функция НеобходимаИнициализацияФактическихДанныхУчетаВремени()
	Результат = Ложь;
	
	Если Не ВременнаяТаблицаИнициализирована(ВТПодневныеДанныеУчетаВремени) Тогда
		Результат = Истина;
	Иначе
		Запрос = СоздатьЗапрос();
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсточникиФактическихДанныхДляИнициализации.Месяц
		|ИЗ
		|	ВТИсточникиФактическихДанныхДляИнициализации КАК ИсточникиФактическихДанныхДляИнициализации";
		
		Результат = Не Запрос.Выполнить().Пустой();
	КонецЕсли;	
	
	Возврат Результат;
КонецФункции	

Функция ОписаниеИсточниковДанныхВТЗарегистрированноеВремяПоНаборамВидовВремениСлужебная() Экспорт 
	ОписаниеИсточников = Новый Структура;
	
	ОписаниеИсточников.Вставить("ИмяТаблицы", "");
	ОписаниеИсточников.Вставить("ИмяПоляСотрудник", "Сотрудник");
	ОписаниеИсточников.Вставить("ИмяПоляИсточникДанных", "ИсточникДанных");
	ОписаниеИсточников.Вставить("ИмяПоляПериодРегистрацииВремени", "ПериодРегистрации");
	ОписаниеИсточников.Вставить("ИмяПоляОбщийГрафик", "ОбщийГрафик");
	ОписаниеИсточников.Вставить("ИмяПоляМесяц", "Месяц");
	ОписаниеИсточников.Вставить("ИмяПоляДатаНачала", "ДатаНачала");
	ОписаниеИсточников.Вставить("ИмяПоляДатаОкончания", "ДатаОкончания");
	ОписаниеИсточников.Вставить("ИмяПоляДатаНачалаГруппировка", "ДатаНачала");
	ОписаниеИсточников.Вставить("ИмяПоляДатаОкончанияГруппировка", "ДатаОкончания");
	ОписаниеИсточников.Вставить("ИмяПоляКлючНабораВидовВремени", "КлючНабораВидовВремени");
	ОписаниеИсточников.Вставить("ИмяПоляТерритория", "Территория");
	
	ОписаниеИсточников.Вставить("КлючевыеПоля", Новый Массив);
	
	ОписаниеИсточников.Вставить("Отбор", Новый Массив);

	
	Возврат ОписаниеИсточников;
КонецФункции

Функция ПараметрыПолученияВТЗарегистрированноеВремяПоНаборамВидовВремени() Экспорт
	ПараметрыПолучения = Новый Структура;
	
	ПараметрыПолучения.Вставить("ОбновлятьПодневныеДанные", Истина);
	ПараметрыПолучения.Вставить("ФормироватьВРазрезеТерриторий", Ложь);
	ПараметрыПолучения.Вставить("ФормироватьВРазрезеУсловияТруда", Ложь);
	ПараметрыПолучения.Вставить("ФормироватьВРазрезеУсловияТруда", Ложь);
	ПараметрыПолучения.Вставить("ДляПустыхНаборовВидовВремениУчитыватьТолькоРабочееВремя", Истина);
	
	Возврат  ПараметрыПолучения;
	
КонецФункции

Процедура СоздатьВТЗарегистрированноеВремяПоНаборамВидовВремениСлужебная(ОписаниеИсточниковДанных, ОписаниеТаблицыНаборовВидовВремени, ПараметрыПолученияДанных, ИмяВТРезультат) Экспорт	
	Если ПараметрыПолученияДанных.ОбновлятьПодневныеДанные Тогда
		СоздатьВТПодневныеДанныеУчетаВремени(ОписаниеИсточниковДанных);	
	КонецЕсли;	
	
	Запрос = СоздатьЗапрос();
	Запрос.УстановитьПараметр("РабочееВремя", Справочники.ВидыИспользованияРабочегоВремени.РабочееВремя);
	Запрос.УстановитьПараметр("Выходные",  Справочники.ВидыИспользованияРабочегоВремени.ВыходныеДни);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНаборовВидовВремени.Ключ КАК Ключ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаНаборовВидовВремени.ВидВремени = &РабочееВремя
	|					ИЛИ ТаблицаНаборовВидовВремени.ВидВремени.РабочееВремя
	|					ИЛИ ТаблицаНаборовВидовВремени.ВидВремени.ОсновноеВремя = &Выходные
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК РабочееВремя
	|ПОМЕСТИТЬ ВТСвойстваНаборовВидовВремени
	|ИЗ
	|	ВТТаблицаНаборовВидовВремени КАК ТаблицаНаборовВидовВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНаборовВидовВремени.Ключ
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаНаборовВидовВремени", ОписаниеТаблицыНаборовВидовВремени.ИмяТаблицы); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаНаборовВидовВремени.Ключ", "ТаблицаНаборовВидовВремени." + ОписаниеТаблицыНаборовВидовВремени.ИмяПоляКлюч); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаНаборовВидовВремени.ВидВремени", "ТаблицаНаборовВидовВремени." + ОписаниеТаблицыНаборовВидовВремени.ИмяПоляВидВремени); 
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеОВремениПоДатам.КлючевыеПоля,
	|	ДанныеОВремениПоДатам.Территория,
	|	ДанныеОВремениПоДатам.УсловияТруда,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ДанныеОВремениПоДатам.ЗарегистрипрованоВремяПоНабору)
	|			ТОГДА СУММА(ДанныеОВремениПоДатам.Дней)
	|		ИНАЧЕ СУММА(ДанныеОВремениПоДатам.ДнейРабочееВремя)
	|	КОНЕЦ КАК Дней,
	|	МАКСИМУМ(ДанныеОВремениПоДатам.ВЦеломЗаПериод) КАК ВЦеломЗаПериод,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ДанныеОВремениПоДатам.ЗарегистрипрованоВремяПоНабору)
	|			ТОГДА СУММА(ДанныеОВремениПоДатам.Часов)
	|		ИНАЧЕ СУММА(ДанныеОВремениПоДатам.ЧасовРабочееВремя)
	|	КОНЕЦ КАК Часов,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ДанныеОВремениПоДатам.ЗарегистрипрованоВремяПоНабору)
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА ДанныеОВремениПоДатам.Часов >= 2
	|							ТОГДА 2
	|						ИНАЧЕ ДанныеОВремениПоДатам.Часов
	|					КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЧасовВПределах2Часов
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаИсходныхИсточниковДанных.Сотрудник КАК Сотрудник,
	|		ТаблицаИсходныхИсточниковДанных.Месяц КАК Месяц,
	|		ТаблицаИсходныхИсточниковДанных.КлючНабораВидовВремени КАК КлючНабораВидовВремени,
	|		ТаблицаИсходныхИсточниковДанных.ИсточникДанных КАК ИсточникДанных,
	|		ТаблицаИсходныхИсточниковДанных.КлючевыеПоля КАК КлючевыеПоля,
	|		ПодневныеДанныеУчетаВремени.Территория КАК Территория,
	|		ПодневныеДанныеУчетаВремени.УсловияТруда КАК УсловияТруда,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ТаблицаНаборовВидовВремени.ВидВремени = ПодневныеДанныеУчетаВремени.ВидУчетаВремени
	|						ИЛИ СвойстваНаборовВидовВремени.РабочееВремя
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ) КАК ЗарегистрипрованоВремяПоНабору,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ТаблицаНаборовВидовВремени.ВидВремени = ПодневныеДанныеУчетаВремени.ВидУчетаВремени
	|					ТОГДА ЕСТЬNULL(ПодневныеДанныеУчетаВремени.ОсновноеЗначение, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Дней,
	|		МАКСИМУМ(ЕСТЬNULL(ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод, ЛОЖЬ)) КАК ВЦеломЗаПериод,
	|		СУММА(ВЫБОР
	|				КОГДА ТаблицаНаборовВидовВремени.ВидВремени = ПодневныеДанныеУчетаВремени.ВидУчетаВремени
	|					ТОГДА ЕСТЬNULL(ПодневныеДанныеУчетаВремени.ДополнительноеЗначение, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Часов,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА &УсловиеУчитыватьТолькоРабочееВремя
	|					ТОГДА ЕСТЬNULL(ПодневныеДанныеУчетаВремени.ОсновноеЗначение, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ДнейРабочееВремя,
	|		СУММА(ВЫБОР
	|				КОГДА &УсловиеУчитыватьТолькоРабочееВремя
	|					ТОГДА ЕСТЬNULL(ПодневныеДанныеУчетаВремени.ДополнительноеЗначение, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЧасовРабочееВремя,
	|		ТаблицаИсходныхИсточниковДанных.ПериодРегистрации КАК ПериодРегистрацииВремени,
	|		ТаблицаИсходныхИсточниковДанных.ОбщийГрафик КАК ОбщийГрафик
	|	ИЗ
	|		ВТТаблицаИсходныхИсточниковДанных КАК ТаблицаИсходныхИсточниковДанных
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаНаборовВидовВремени КАК ТаблицаНаборовВидовВремени
	|			ПО ТаблицаИсходныхИсточниковДанных.КлючНабораВидовВремени = ТаблицаНаборовВидовВремени.Ключ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСвойстваНаборовВидовВремени КАК СвойстваНаборовВидовВремени
	|			ПО ТаблицаИсходныхИсточниковДанных.КлючНабораВидовВремени = СвойстваНаборовВидовВремени.Ключ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПодневныеДанныеУчетаВремени КАК ПодневныеДанныеУчетаВремени
	|			ПО ТаблицаИсходныхИсточниковДанных.ИсточникДанных = ПодневныеДанныеУчетаВремени.ИсточникДанных
	|				И ТаблицаИсходныхИсточниковДанных.Месяц = ПодневныеДанныеУчетаВремени.Месяц
	|				И ТаблицаИсходныхИсточниковДанных.ОбщийГрафик = ПодневныеДанныеУчетаВремени.ОбщийГрафик
	|				И ТаблицаИсходныхИсточниковДанных.ПериодРегистрации = ПодневныеДанныеУчетаВремени.ПериодРегистрации
	|				И (ТаблицаНаборовВидовВремени.ВидВремени = ПодневныеДанныеУчетаВремени.ВидУчетаВремени
	|					ИЛИ &УсловиеУчитыватьТолькоРабочееВремя)
	|				И (ПодневныеДанныеУчетаВремени.Дата МЕЖДУ ТаблицаИсходныхИсточниковДанных.ДатаНачала И ТаблицаИсходныхИсточниковДанных.ДатаОкончания
	|						И НЕ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|					ИЛИ ПодневныеДанныеУчетаВремени.ВЦеломЗаПериод
	|						И НЕ ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники)
	|				И (ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники = ПодневныеДанныеУчетаВремени.Праздник
	|					ИЛИ НЕ ЕСТЬNULL(ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники, ЛОЖЬ))
	|				И (&УсловиеОтбораТаблицыИстчоникаДанных)
	|	ГДЕ
	|		&УсловиеОтбораТаблицыИстчоникаДанных
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаИсходныхИсточниковДанных.Сотрудник,
	|		ТаблицаИсходныхИсточниковДанных.Месяц,
	|		ТаблицаИсходныхИсточниковДанных.ДатаНачала,
	|		ТаблицаИсходныхИсточниковДанных.ДатаОкончания,
	|		ТаблицаИсходныхИсточниковДанных.КлючНабораВидовВремени,
	|		ПодневныеДанныеУчетаВремени.Территория,
	|		ПодневныеДанныеУчетаВремени.УсловияТруда,
	|		ТаблицаИсходныхИсточниковДанных.ИсточникДанных,
	|		ТаблицаИсходныхИсточниковДанных.КлючевыеПоля,
	|		ПодневныеДанныеУчетаВремени.Дата,
	|		ТаблицаИсходныхИсточниковДанных.ПериодРегистрации,
	|		ТаблицаИсходныхИсточниковДанных.ОбщийГрафик) КАК ДанныеОВремениПоДатам
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОВремениПоДатам.КлючевыеПоля,
	|	ДанныеОВремениПоДатам.Территория,
	|	ДанныеОВремениПоДатам.УсловияТруда";
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаИсходныхИсточниковДанных", ОписаниеИсточниковДанных.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.Сотрудник", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.Месяц", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляМесяц);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ДатаНачала", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляДатаНачала);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ДатаОкончания", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляДатаОкончания);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.КлючНабораВидовВремени", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляКлючНабораВидовВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ИсточникДанных", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляИсточникДанных);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ПериодРегистрации", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляПериодРегистрацииВремени);		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсходныхИсточниковДанных.ОбщийГрафик", "ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляОбщийГрафик);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПодневныеДанныеУчетаВремени", ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени));
	
	Если ПараметрыПолученияДанных.ДляПустыхНаборовВидовВремениУчитыватьТолькоРабочееВремя Тогда
		ТекстУсловияУчитыватьТолькоРабочееВремя = "(НЕ ЕСТЬNULL(СвойстваНаборовВидовВремени.РабочееВремя, ЛОЖЬ) И ПодневныеДанныеУчетаВремени.ВидУчетаВремени = &РабочееВремя)";
	Иначе
		ТекстУсловияУчитыватьТолькоРабочееВремя = 
		"ВЫБОР 
		|	КОГДА НЕ СвойстваНаборовВидовВремени.РабочееВремя И ПодневныеДанныеУчетаВремени.ВидУчетаВремени = &РабочееВремя 
		|		ТОГДА ИСТИНА
		|	КОГДА СвойстваНаборовВидовВремени.Ключ ЕСТЬ NULL И ПодневныеДанныеУчетаВремени.ВидУчетаВремени <> &РабочееВремя
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|КОНЕЦ";
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеУчитыватьТолькоРабочееВремя", ТекстУсловияУчитыватьТолькоРабочееВремя);
	
	ДобавтьКлючевыеПоляВТекстЗапроса(Запрос.Текст, ОписаниеИсточниковДанных.КлючевыеПоля, "ТаблицаИсходныхИсточниковДанных");
	ДобавтьКлючевыеПоляВТекстЗапроса(Запрос.Текст, ОписаниеИсточниковДанных.КлючевыеПоля, "ДанныеОВремениПоДатам");
		
	УстановитьУсловияОтбораВЗапрос(Запрос, ОписаниеИсточниковДанных.Отбор, "ТаблицаИсходныхИсточниковДанных");
		
	Если ПараметрыПолученияДанных.ФормироватьВРазрезеТерриторий Тогда
		ТекстПоляТерритория = "ВЫБОР 
							  |	КОГДА ПодневныеДанныеУчетаВремени.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) 
							  |		ТОГДА ПодневныеДанныеУчетаВремени.Территория
							  |	ИНАЧЕ ТаблицаИсходныхИсточниковДанных." + ОписаниеИсточниковДанных.ИмяПоляТерритория + "
							  |КОНЕЦ";	
	Иначе	
		ТекстПоляТерритория = "ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПодневныеДанныеУчетаВремени.Территория", ТекстПоляТерритория);

	
	Если Не ПараметрыПолученияДанных.ФормироватьВРазрезеУсловияТруда Тогда
		ТекстПоляУсловияТруда = "ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)";
	Иначе
		ТекстПоляУсловияТруда = "ЕСТЬNULL(ПодневныеДанныеУчетаВремени.УсловияТруда, ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка))";	
	КонецЕсли;		
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПодневныеДанныеУчетаВремени.УсловияТруда", ТекстПоляУсловияТруда);		
	
	УстнановитьПоляОписанияНаборовВидовВремениВЗапрос(Запрос.Текст, ОписаниеТаблицыНаборовВидовВремени);

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРезультат);
	
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТСвойстваНаборовВидовВремени");	
КонецПроцедуры	

Функция ОписаниеИстчониковДанныхВТНормаВремениПоИстчоникамДанныхСлужебная()
	ОписаниеИсточниковДанных = Новый Структура;
	
	ОписаниеИсточниковДанных.Вставить("ИмяТаблицы", "");
	ОписаниеИсточниковДанных.Вставить("ИмяПоляИсточникДанныхНормыВремени", "");
	ОписаниеИсточниковДанных.Вставить("ИмяПоляИсточникДанныхПолнойНормыВремени", "");
	ОписаниеИсточниковДанных.Вставить("ИмяПоляМесяц", "");
	ОписаниеИсточниковДанных.Вставить("ИмяПоляПериодРегистрацииВремени", "");
	
	ОписаниеИсточниковДанных.Вставить("КлючевыеПоля", Новый Массив);

	Возврат ОписаниеИсточниковДанных;		
КонецФункции	

Процедура СоздатьВТНормаВремениПоИстчоникамДанныхСлужебная(ОписаниеИстчониковДанных, ИмяВТРеузультат)
	
	Запрос = СоздатьЗапрос();
	Запрос.УстановитьПараметр("РабочееВремя", Справочники.ВидыИспользованияРабочегоВремени.РабочееВремя);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИстчониковДанных.ИсточникДанныхНормыВремени КАК ИсточникДанных,
	|	ТаблицаИстчониковДанных.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаИстчониковДанных.Месяц КАК Месяц,
	|	ВЫБОР
	|		КОГДА ТаблицаИстчониковДанных.ИсточникДанныхНормыВремени ССЫЛКА Справочник.Сотрудники
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИндивидуальныйГрафик
	|ПОМЕСТИТЬ ВТРазличныеИстчоникиДанныхНормыВремени
	|ИЗ
	|	ВТТаблицаИстчониковДанных КАК ТаблицаИстчониковДанных
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИстчониковДанных.ИсточникДанныхПолнойНормыВремени,
	|	ТаблицаИстчониковДанных.ПериодРегистрации,
	|	ТаблицаИстчониковДанных.Месяц,
	|	ЛОЖЬ
	|ИЗ
	|	ВТТаблицаИстчониковДанных КАК ТаблицаИстчониковДанных
	|ГДЕ
	|	ТаблицаИстчониковДанных.ИсточникДанныхПолнойНормыВремени <> ТаблицаИстчониковДанных.ИсточникДанныхНормыВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикиРаботы.ИсточникДанных КАК Сотрудник,
	|	ГрафикиРаботы.Месяц КАК ПериодДействия,
	|	ГрафикиРаботы.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	ВТРазличныеИстчоникиДанныхНормыВремени КАК ГрафикиРаботы
	|ГДЕ
	|	ГрафикиРаботы.ИндивидуальныйГрафик
	|	И НЕ 1 В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					1 КАК Поле
	|				ИЗ
	|					РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|				ГДЕ
	|					ГрафикиРаботыПоВидамВремени.ГрафикРаботы = ГрафикиРаботы.ИсточникДанных
	|					И ГрафикиРаботыПоВидамВремени.Месяц = ГрафикиРаботы.Месяц
	|					И ГрафикиРаботыПоВидамВремени.ПериодРегистрации = ГрафикиРаботы.ПериодРегистрации)";
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаИстчониковДанных", ОписаниеИстчониковДанных.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИстчониковДанных.ИсточникДанныхНормыВремени", "ТаблицаИстчониковДанных." + ОписаниеИстчониковДанных.ИмяПоляИсточникДанныхНормыВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИстчониковДанных.ИсточникДанныхПолнойНормыВремени", "ТаблицаИстчониковДанных." + ОписаниеИстчониковДанных.ИмяПоляИсточникДанныхПолнойНормыВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИстчониковДанных.Месяц", "ТаблицаИстчониковДанных." + ОписаниеИстчониковДанных.ИмяПоляМесяц);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИстчониковДанных.ПериодРегистрации", "ТаблицаИстчониковДанных." + ОписаниеИстчониковДанных.ИмяПоляПериодРегистрацииВремени);

	
	ТаблицаСотрудников = Запрос.Выполнить().Выгрузить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТРазличныеИстчоникиДанныхНормыВремени");
	
	ТаблицаСотрудников.Сортировать("ПериодДействия");
	
	Если ТаблицаСотрудников.Количество() > 0 Тогда
		МинимальнаяДата = НачалоМесяца(ТаблицаСотрудников[0].ПериодДействия);
		МаксимальнаяДата = КонецМесяца(ТаблицаСотрудников[ТаблицаСотрудников.Количество() - 1].ПериодДействия);
		                                          
		УчетРабочегоВремениРасширенный.СформироватьЗаписиРабочегоВремениСотрудников(ТаблицаСотрудников, МинимальнаяДата, МаксимальнаяДата);
	КонецЕсли;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазличныеИстчоникиДанныхНормыВремени.ИсточникДанных,
	|	РазличныеИстчоникиДанныхНормыВремени.ПериодРегистрации,
	|	РазличныеИстчоникиДанныхНормыВремени.Месяц,
	|	СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма) КАК НормаДней,
	|	СУММА(ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма) КАК НормаЧасов
	|ПОМЕСТИТЬ ВТНормаВремениПоРазличнымИсточникамДанных
	|ИЗ
	|	ВТРазличныеИстчоникиДанныхНормыВремени КАК РазличныеИстчоникиДанныхНормыВремени
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО РазличныеИстчоникиДанныхНормыВремени.ИсточникДанных = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И РазличныеИстчоникиДанныхНормыВремени.ПериодРегистрации = ГрафикиРаботыПоВидамВремени.ПериодРегистрации
	|			И РазличныеИстчоникиДанныхНормыВремени.Месяц = ГрафикиРаботыПоВидамВремени.Месяц
	|			И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = &РабочееВремя)
	|			И (НЕ ГрафикиРаботыПоВидамВремени.ВремяВЧасах)
	|
	|СГРУППИРОВАТЬ ПО
	|	РазличныеИстчоникиДанныхНормыВремени.ИсточникДанных,
	|	РазличныеИстчоникиДанныхНормыВремени.ПериодРегистрации,
	|	РазличныеИстчоникиДанныхНормыВремени.Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИсточниковДанных.КлючевыеПоля,
	|	ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени КАК ИсточникДанных,
	|	ТаблицаИсточниковДанных.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаИсточниковДанных.Месяц КАК Месяц,
	|	НормаВремени.НормаДней КАК НормаДней,
	|	НормаВремени.НормаЧасов КАК НормаЧасов,
	|	НормаВремениПолная.НормаДней КАК НормаДнейПолная,
	|	НормаВремениПолная.НормаЧасов КАК НормаЧасовПолная
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТТаблицаИстчониковДанных КАК ТаблицаИсточниковДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНормаВремениПоРазличнымИсточникамДанных КАК НормаВремениПолная
	|		ПО ТаблицаИсточниковДанных.ИсточникДанныхПолнойНормыВремени = НормаВремениПолная.ИсточникДанных
	|			И ТаблицаИсточниковДанных.ПериодРегистрации = НормаВремениПолная.ПериодРегистрации
	|			И ТаблицаИсточниковДанных.Месяц = НормаВремениПолная.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНормаВремениПоРазличнымИсточникамДанных КАК НормаВремени
	|		ПО ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени = НормаВремени.ИсточникДанных
	|			И ТаблицаИсточниковДанных.ПериодРегистрации = НормаВремени.ПериодРегистрации
	|			И ТаблицаИсточниковДанных.Месяц = НормаВремени.Месяц";

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТТаблицаИстчониковДанных", ОписаниеИстчониковДанных.ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточниковДанных.ИсточникДанныхНормыВремени", "ТаблицаИсточниковДанных." + ОписаниеИстчониковДанных.ИмяПоляИсточникДанныхНормыВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточниковДанных.ИсточникДанныхПолнойНормыВремени", "ТаблицаИсточниковДанных." + ОписаниеИстчониковДанных.ИмяПоляИсточникДанныхПолнойНормыВремени);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточниковДанных.Месяц", "ТаблицаИсточниковДанных." + ОписаниеИстчониковДанных.ИмяПоляМесяц);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточниковДанных.ПериодРегистрации", "ТаблицаИсточниковДанных." + ОписаниеИстчониковДанных.ИмяПоляПериодРегистрацииВремени);

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРезультат", ИмяВТРеузультат);	
	
	ДобавтьКлючевыеПоляВТекстЗапроса(Запрос.Текст, ОписаниеИстчониковДанных.КлючевыеПоля, "ТаблицаИсточниковДанных");
	
	Запрос.Выполнить();
	
	ДобавитьВременныеТаблицыКУничтожению("ВТНормаВремениПоРазличнымИсточникамДанных");

КонецПроцедуры	

Функция СохраняемыеТаблицы() Экспорт
	СохраняемыеТаблицы = Новый Соответствие;
	
	СохраняемыеТаблицы.Вставить(ВТИсточникиДанныхУчетаВремени, Истина);
	СохраняемыеТаблицы.Вставить(ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная, Истина);
	СохраняемыеТаблицы.Вставить(ВТПодневныеДанныеУчетаВремени, Истина);  
	СохраняемыеТаблицы.Вставить("ВТИсходныйНаборСотрудникиМесяцы", Истина);
	
	СохраняемыеТаблицы.Вставить(ТекущееИмяВременнойТаблицы(ВТПодневныеДанныеУчетаВремени), Истина);
	СохраняемыеТаблицы.Вставить(ТекущееИмяВременнойТаблицы(ВТИнициализированныеИсточникиФактическихДанных), Истина);
	
	Возврат СохраняемыеТаблицы;
КонецФункции	

#КонецОбласти

#Область СервисныеМетоды

Функция СоздатьЗапрос()
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
КонецФункции	

Процедура ДобавитьВременныеТаблицыКУничтожению(ИменаВременныхТаблиц)
	МассивИменТаблиц = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаВременныхТаблиц, ",");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВременныеТаблицыКУничтожению, МассивИменТаблиц);	
КонецПроцедуры	

Процедура УничтожитьВременныеТаблицы()
	Если Не РежимПовторногоИспользованияВременныхТаблиц Тогда
		Для Каждого ИнициализированнаяТаблица Из ИнициализированныеВременныеТаблицы Цикл
			Если ИнициализированнаяТаблица.Значение = Истина Тогда
				ВременныеТаблицыКУничтожению.Добавить(ИменаВременныхТаблиц[ИнициализированнаяТаблица.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		ИнициализированныеВременныеТаблицы.Очистить();
		ИменаВременныхТаблиц.Очистить();
	КонецЕсли;	
		
	Запрос = СоздатьЗапрос();
	
	Для Каждого УничтожаемаяТаблица Из ВременныеТаблицыКУничтожению Цикл
		Запрос.Текст = "УНИЧТОЖИТЬ " + УничтожаемаяТаблица;
		Запрос.Выполнить();
	КонецЦикла;	
	
	ВременныеТаблицыКУничтожению.Очистить();
КонецПроцедуры	

Функция ВременнаяТаблицаИнициализирована(ВременнаяТаблица)
	Возврат ИнициализированныеВременныеТаблицы[ВременнаяТаблица] = Истина;	
КонецФункции   

Процедура УстановитьПризнакИнциализированностиВременнойТаблицы(ПсевдонимТаблицы, ИмяТаблицы)
	ИнициализированныеВременныеТаблицы.Вставить(ПсевдонимТаблицы, Истина);	
	ИменаВременныхТаблиц.Вставить(ПсевдонимТаблицы, ИмяТаблицы);
КонецПроцедуры	

Процедура ДобавитьОбъединениеВТекстЗапроса(ТекстЗапросаПрименик, ТекстОбъединяемогоЗапроса)
	ТекстЗапросаПрименик = ТекстЗапросаПрименик + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|" +
	ТекстОбъединяемогоЗапроса;	
КонецПроцедуры	

Процедура ДобавитьИндексерованиеВТекстЗапроса(ТекстЗапроса, ПоляДляИндексирования)
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПоляДляИндексирования, ",");
	
	ТекстИндексируемыхПолей = "";
	
	Для Каждого Поле Из МассивПолей Цикл
		ТекстИндексируемыхПолей = ТекстИндексируемыхПолей + "
		|	" + Поле + ",";	
	КонецЦикла;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО"
	+ Сред(ТекстИндексируемыхПолей, 1, СтрДлина(ТекстИндексируемыхПолей) - 1);
КонецПроцедуры	

Функция ТекущееИмяВременнойТаблицы(ПсевдонимТаблицы)
	ИмяВТ = ИменаВременныхТаблиц.Получить(ПсевдонимТаблицы);
	
	Если ИмяВТ = Неопределено Тогда
		ИмяВТ = ПсевдонимТаблицы;	
	КонецЕсли;		
	
	Возврат ИмяВТ;
КонецФункции	

Функция НовоеИмяИмяВременнойТаблицы(ПсевдонимТаблицы)
	ТекущееИмяВТ = ИменаВременныхТаблиц.Получить(ПсевдонимТаблицы);
	
	Если ТекущееИмяВТ = Неопределено Тогда
		НовоеИмяВТ = ПсевдонимТаблицы;	
	ИначеЕсли Прав(ТекущееИмяВТ, 3) = "Доп" Тогда
		НовоеИмяВТ = Сред(ТекущееИмяВТ, 1, СтрДлина(ТекущееИмяВТ) - 3);
	Иначе 
		НовоеИмяВТ = ТекущееИмяВТ + "Доп";
	КонецЕсли;	
	
	Возврат НовоеИмяВТ;
КонецФункции

Функция УстнановитьПоляОписанияНаборовВидовВремениВЗапрос(ТекстЗапроса, ОписаниеТаблицыНаборовВидовВремени)
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТТаблицаНаборовВидовВремени", ОписаниеТаблицыНаборовВидовВремени.ИмяТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаНаборовВидовВремени.Ключ", "ТаблицаНаборовВидовВремени." + ОписаниеТаблицыНаборовВидовВремени.ИмяПоляКлюч);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаНаборовВидовВремени.ВидВремени", "ТаблицаНаборовВидовВремени." + ОписаниеТаблицыНаборовВидовВремени.ИмяПоляВидВремени);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаНаборовВидовВремени.УчитыватьТолькоПраздники", "ТаблицаНаборовВидовВремени." + ОписаниеТаблицыНаборовВидовВремени.ИмяПоляУчитыватьТолькоПраздники);
КонецФункции

Функция УстановитьУсловияОтбораВЗапрос(Запрос, Отбор, ПсевдонимТаблицы)
	Если Отбор.Количество() > 0 Тогда
		ТекстУсловияОтбор = "";
		
		Для Каждого ЭлементОтбора Из Отбор Цикл 
			ТекстУсловияОтбор = "И " + ПсевдонимТаблицы + "." + ЭлементОтбора.ЛевоеЗначение; 
			
			Если ЭлементОтбора.ПараметрПравоеЗначение <> Неопределено Тогда
				ТекстУсловияОтбор = ТекстУсловияОтбор + " = " +  ЭлементОтбора.ПравоеЗначение;
				Запрос.УстановитьПараметр(ЭлементОтбора.ПравоеЗначение, ЭлементОтбора.ПараметрПравоеЗначение);
			ИначеЕсли Не ПустаяСтрока(ЭлементОтбора.ПравоеЗначение) Тогда
				ТекстУсловияОтбор = ТекстУсловияОтбор + " = " + ПсевдонимТаблицы + "." + ЭлементОтбора.ПравоеЗначение;	
			КонецЕсли;				
		КонецЦикла;	
		
		ТекстУсловияОтбор = Сред(ТекстУсловияОтбор, 3);
	Иначе
		ТекстУсловияОтбор = "ИСТИНА";	
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораТаблицыИстчоникаДанных", ТекстУсловияОтбор);	
КонецФункции	

Функция ДобавтьКлючевыеПоляВТекстЗапроса(ТекстЗапроса, КлючевыеПоля, ПсевдонимТаблицы)
	Если КлючевыеПоля.Количество() > 0 Тогда
		ТекстКолючевыеПоля = "";
		
		Для Каждого Поле Из КлючевыеПоля Цикл
			ТекстКолючевыеПоля = ТекстКолючевыеПоля + ",
			|	" + ПсевдонимТаблицы + "." + Поле;
		КонецЦикла;	
		
		ТекстКолючевыеПоля = Сред(ТекстКолючевыеПоля, 2);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПсевдонимТаблицы + ".КлючевыеПоля КАК КлючевыеПоля", ТекстКолючевыеПоля);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПсевдонимТаблицы + ".КлючевыеПоля", ТекстКолючевыеПоля);
			
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПсевдонимТаблицы + ".КлючевыеПоля КАК КлючевыеПоля", "ИСТИНА КАК КлючевыеПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПсевдонимТаблицы + ".КлючевыеПоля", "ИСТИНА КАК КлючевыеПоля");
	КонецЕсли;		
КонецФункции	

#КонецОбласти

#КонецОбласти

#Область Инициализация

ВТИсточникиДанныхУчетаВремени = "ВТИсточникиДанныхУчетаВремени";
ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная = "ВТИнтервалыДействияИсточниковДанныхУчетаВремениСлужебная";
ВТПодневныеДанныеУчетаВремени = "ВТПодневныеДанныеУчетаВремени";
ВТИсходныйНаборСотрудникиМесяцы = "ВТИсходныйНаборСотрудникиМесяцы";
ВТИнициализированныеИсточникиФактическихДанных = "ВТИнициализированныеИсточникиФактическихДанных";

ИнициализированныеВременныеТаблицы = Новый Соответствие;
ИменаВременныхТаблиц = Новый Соответствие;

ВременныеТаблицыКУничтожению = Новый Массив;

РежимПовторногоИспользованияВременныхТаблиц = Ложь;

#КонецОбласти

#КонецЕсли
