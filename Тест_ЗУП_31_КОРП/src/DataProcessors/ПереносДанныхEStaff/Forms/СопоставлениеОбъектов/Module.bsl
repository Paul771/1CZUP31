
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	КлючОписания = Параметры.КлючОписания;
	СоздаватьНовые = Параметры.СоздаватьНовые;
	
	АдресОписанийИОбъектов = Параметры.АдресОписанийИОбъектов;
	АдресТаблицыСоответствия = Параметры.АдресТаблицыСоответствия;
	
	ПодготовитьФорму(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ВернутьсяВНачало Тогда
		ПроверитьЗаполнениеФормы(Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	СохранитьТаблицуСоответствийНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСоответствия

&НаКлиенте
Процедура ТаблицаСоответствийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ЭтоСопоставлениеФизическихЛиц И Поле.Имя <> "ТаблицаСоответствияСоздается" Тогда
		
		ПроверитьОднофамильцев(СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияСоздаетсяПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаСоответствия.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Создается 
		И ЗначениеЗаполнено(ТекущиеДанные.ОбъектСсылка) Тогда
		
		ТекущиеДанные.ОбъектСсылка = Неопределено;
		ТекущиеДанные.Заполняется = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияОбъектСсылкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаСоответствия.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СоздаватьНовые Тогда
		ТекущиеДанные.Создается = Не ЗначениеЗаполнено(ТекущиеДанные.ОбъектСсылка);
	КонецЕсли;
	
	ТекущиеДанные.Заполняется = ТекущиеДанные.Создается;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подтвердить(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОтменитьСоответствияЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Все установленные соответствия будут потеряны. 
		|Вернуться к заданию параметров загрузки?'");
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСоответствияОбъектСсылка.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСоответствияСоздается.ПутьКДанным);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФорму(Отказ)
	
	ОписанияИОбъекты = ПолучитьИзВременногоХранилища(АдресОписанийИОбъектов);
	ОписаниеИОбъектыПоКлючу = ОписанияИОбъекты[КлючОписания];
	Описание = ОписаниеИОбъектыПоКлючу.Описание;
	
	ЭтоСопоставлениеФизическихЛиц = (КлючОписания = ПереносДанныхEStaffКлиентСервер.КлючФизическогоЛица());
	
	ТаблицаСоответствия.Загрузить(ПолучитьИзВременногоХранилища(АдресТаблицыСоответствия));
	
	Если Не СоздаватьНовые Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаСоответствия Цикл
			СтрокаТаблицы.Создается = Ложь;
		КонецЦикла;
		
	КонецЕсли;
	
	ИмяТаблицыОбъектов = Описание.ИмяТаблицы;
	ОписаниеТипаОбъекта = Описание.ОписаниеТипа;
	
	МетаданныеСправочника = Метаданные.Справочники[ИмяТаблицыОбъектов];
	ЗаголовокДляВывода = МетаданныеСправочника.ПредставлениеОбъекта;
	ПредставлениеСписка = МетаданныеСправочника.Синоним;
	
	Элементы.ТаблицаСоответствияОбъектСсылка.Заголовок = ЗаголовокДляВывода;
	Элементы.ТаблицаСоответствияНаименование.Заголовок = СтрШаблон(НСтр("ru = '%1 E-Staff Рекрутер'"), ЗаголовокДляВывода);
	
	Элементы.ТаблицаСоответствияОбъектСсылка.ВыбиратьТип = Ложь;
	Элементы.ТаблицаСоответствияОбъектСсылка.ОграничениеТипа = ОписаниеТипаОбъекта;
	
	Если Не СоздаватьНовые Тогда
		Элементы.ТаблицаСоответствияСоздается.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьТекстПояснений(ЗаголовокДляВывода, ПредставлениеСписка);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьТаблицуСоответствийНаСервере()
	
	Обработки.ПереносДанныхEStaff.СохранитьТаблицуСоответствий(ТаблицаСоответствия, АдресОписанийИОбъектов, КлючОписания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОднофамильцев(СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаСоответствия.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(ТекущиеДанные.Наименование);

	ПараметрыПроверки = СотрудникиВызовСервера.ПодобратьСписокФизЛиц(
		ТекущиеДанные.ОбъектСсылка,
		СтруктураФИО.Фамилия,
		СтруктураФИО.Имя,
		СтруктураФИО.Отчество);
	
	Если ПараметрыПроверки.ФизическоеЛицоУникально Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ЗаголовокФормы, ТекстИнформационнойНадписи, ДанныеФизическихЛиц");
	ПараметрыОткрытия.Вставить("Фамилия", СтруктураФИО.Фамилия);
	ПараметрыОткрытия.Вставить("Имя", СтруктураФИО.Имя);
	ПараметрыОткрытия.Вставить("Отчество", СтруктураФИО.Отчество);
	
	Если ПараметрыПроверки.ДанныеФизическихЛиц.Количество() = 1 Тогда
		
		ПараметрыОткрытия.ЗаголовокФормы = НСтр("ru='Найден человек с похожим именем'");
		ПараметрыОткрытия.ТекстИнформационнойНадписи = 
			НСтр("ru='Если есть уверенность в соответствии, нажмите «Да, это тот, кто мне нужен».
				|Если это однофамилец, нажмите «Нет, это другой человек».'");
		
	Иначе
		
		ПараметрыОткрытия.ЗаголовокФормы = НСтр("ru='Найдены люди с похожими именами.'");
		ПараметрыОткрытия.ТекстИнформационнойНадписи = 
			НСтр("ru='Если разыскиваемый в приведенном списке людей, выберите его и нажмите «Отмеченный человек тот, кто мне нужен».
				|Если все приведенные в списке однофамильцы, нажмите «Нет, это другой человек».'");
		
	КонецЕсли;
	
	ПараметрыОткрытия.ДанныеФизическихЛиц = ПараметрыПроверки.ДанныеФизическихЛиц;
	
	Оповещение = Новый ОписаниеОповещения("ПроверкаОднофамильцевЗавершение", ЭтотОбъект, Новый Структура("ТекущаяСтрока", Элементы.ТаблицаСоответствия.ТекущаяСтрока));
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФизическиеЛицаСПохожимиДанными", ПараметрыОткрытия, ЭтотОбъект, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаОднофамильцевЗавершение(РезультатВыбора, ДопПараметры) Экспорт 
	
	Если РезультатВыбора = Неопределено Или РезультатВыбора.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ТаблицаСоответствия.НайтиПоИдентификатору(ДопПараметры.ТекущаяСтрока);
	ТекущиеДанные.ОбъектСсылка = РезультатВыбора;
	ТекущиеДанные.Создается = Ложь;
	ТекущиеДанные.Заполняется = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеФормы(Отказ)
	
	ОчиститьСообщения();
	
	Для Каждого СтрокаСоответствия Из ТаблицаСоответствия Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаСоответствия.ОбъектСсылка) 
			И (Не СоздаватьНовые Или Не СтрокаСоответствия.Создается) Тогда
			
			ТекстСообщения = НСтр("ru = 'Необходимо задать соответствие объектам.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСоответствияЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВернутьсяВНачало = Истина;
	
	Закрыть(Новый Структура("ВернутьсяВНачало", ВернутьсяВНачало));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстПояснений(ПредставлениеОбъекта, ПредставлениеСписка)
	
	ПредставлениеСоздается = НСтр("ru = 'создана'");
	ПредставлениеНовый = НСтр("ru = 'новая'");
	ПредставлениеИсходный = НСтр("ru = 'исходная'");
	
	Если КлючОписания = ПереносДанныхEStaffКлиентСервер.КлючПодразделения()
		Или КлючОписания = ПереносДанныхEStaffКлиентСервер.КлючФизическогоЛица() Тогда
		
		ПредставлениеСоздается = НСтр("ru = 'создано'");
		ПредставлениеНовый = НСтр("ru = 'новое'");
		ПредставлениеИсходный = НСтр("ru = 'исходное'");
		
	ИначеЕсли (КлючОписания = ПереносДанныхEStaffКлиентСервер.КлючЯзыка()
		Или КлючОписания = ПереносДанныхEStaffКлиентСервер.КлючКандидата() 
		Или КлючОписания = ПереносДанныхEStaffКлиентСервер.КлючПользователя() 
		Или КлючОписания = ПереносДанныхEStaffКлиентСервер.КлючИсточникаИнформации()) Тогда 
		
		ПредставлениеСоздается = НСтр("ru = 'создан'");
		ПредставлениеНовый = НСтр("ru = 'новый'");
		ПредставлениеИсходный = НСтр("ru = 'исходный'");
		
	КонецЕсли;
	
	ПредставлениеОбъекта = НРег(ПредставлениеОбъекта);
	
	ПредставлениеСписка = НРег(ПредставлениеСписка);
	ПредставлениеСписка = ?(КлючОписания = ПереносДанныхEStaffКлиентСервер.КлючПозиции(), НСтр("ru = 'позиции штатного расписания'"), ПредставлениеСписка);
	
	ЗаголовокНачало = СтрШаблон(НСтр("ru = 'Если в программе уже есть %1, соответствующие загружаемым из E-Staff'"), 
		ПредставлениеСписка);
		
	ЗаголовокОкончание = СтрШаблон(НСтр("ru = ', выберите их в соответствующей строке. В противном случае будет %1 %2 %3.'"), 
		ПредставлениеСоздается,
		ПредставлениеНовый,
		ПредставлениеОбъекта);
	
	Элементы.ТекстПояснения.Видимость = СоздаватьНовые;
	Элементы.ТекстПояснения.Заголовок = СтрШаблон("%1%2", ЗаголовокНачало, ЗаголовокОкончание);
	
	ПредставлениеДействияСоздается = СтрШаблон(НСтр("ru = 'Создается %1'"), ПредставлениеНовый);
	ПредставлениеДействияИспользуется = СтрШаблон(НСтр("ru = 'Используется %1'"), ПредставлениеИсходный);
	
	Элементы.ТаблицаСоответствияСоздается.СписокВыбора.Очистить();
	Элементы.ТаблицаСоответствияСоздается.СписокВыбора.Добавить(Истина, ПредставлениеДействияСоздается);
	Элементы.ТаблицаСоответствияСоздается.СписокВыбора.Добавить(Ложь, ПредставлениеДействияИспользуется);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСоответствияСоздается.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСоответствияСоздается.ПутьКДанным);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ПредставлениеДействияСоздается);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСоответствияСоздается.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСоответствияСоздается.ПутьКДанным);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ПредставлениеДействияИспользуется);
	
КонецПроцедуры

#КонецОбласти