
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
		ВРазрезеИсточников = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СозданиеВедомостейНаВыплатуЗарплаты", "ВРазрезеИсточников", Истина);
	Иначе
		ВРазрезеИсточников = Ложь;
	КонецЕсли;	
	
	Если ПолучитьФункциональнуюОпцию("ПроверятьЗаполнениеФинансированияВВедомостях") Тогда
		ВРазрезеИсточников = Истина;
		Элементы.ВРазрезеИсточников.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("РасчетныйДокумент", РасчетныйДокумент) Тогда
		Элементы.РасчетныйДокумент.ТолькоПросмотр = Истина;
		РасчетныйДокументПриИзмененииНаСервере()
	Иначе
		Элементы.РасчетныйДокумент.ТолькоПросмотр = Ложь;
		ДатаВыплаты = ТекущаяДатаСеанса();
	КонецЕсли;
	
	УстановитьВидимостьЗарплатногоПроекта();
	ПорядокВыплатыПеречисление = 1;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РасчетныйДокументПриИзменении(Элемент)
	РасчетныйДокументПриИзмененииНаСервере()	
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	СоздатьВедомости();
КонецПроцедуры


&НаКлиенте
Процедура ВРазрезеИсточниковПриИзменении(Элемент)
	СоздатьВедомости()
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ТаблицаВедомостейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьВедомостиВыполнить(Команда)
	СоздатьВедомости(Ложь)
КонецПроцедуры

&НаКлиенте
Процедура ПровестиВедомостиВыполнить(Команда)
	СохранитьВедомостиНаСервере(РежимЗаписиДокумента.Проведение);	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОтменаВыполнить(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РасчетныйДокументПриИзмененииНаСервере()
	
	Если РасчетныйДокумент.Метаданные().Реквизиты.Найти("ПланируемаяДатаВыплаты") <> Неопределено Тогда
		ДатаВыплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "ПланируемаяДатаВыплаты");
	ИначеЕсли РасчетныйДокумент.Метаданные().Реквизиты.Найти("ДатаВыплаты") <> Неопределено Тогда
		ДатаВыплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "ДатаВыплаты");	
	Иначе	
		ДатаВыплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "Дата");
	КонецЕсли;
	
	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "Организация");
	ПодобратьЗарплатныйПроект();
	
	СоздатьВедомостиНаСервере(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьЗарплатныйПроект()

	Если ЗначениеЗаполнено(ЗарплатныйПроект) И Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗарплатныйПроект, "Организация") Тогда
		Возврат;
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗарплатныеПроекты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЗарплатныеПроекты КАК ЗарплатныеПроекты
		|ГДЕ
		|	ЗарплатныеПроекты.Организация = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ЗарплатныйПроект = Неопределено;
		Иначе
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ЗарплатныйПроект = Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЗарплатногоПроекта()

	ЗарплатныйПроектДоступен = (ПорядокВыплатыБанк = 1);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ЗарплатныйПроект","Доступность",ЗарплатныйПроектДоступен);

КонецПроцедуры


&НаКлиенте
Процедура СоздатьВедомости(СообщитьПользователю = Ложь)
	ОчиститьСообщения();
	СоздатьВедомостиНаСервере(СообщитьПользователю);
КонецПроцедуры

&НаСервере
Процедура СоздатьВедомостиНаСервере(СообщитьПользователю)
	
	УстановитьВидимостьЗарплатногоПроекта();
	
	ПравилаПроверки = Новый СписокЗначений;
	ПравилаПроверки.Добавить("РасчетныйДокумент",	НСтр("ru='Не выбран документ'"));
	ПравилаПроверки.Добавить("ДатаВыплаты",			НСтр("ru='Не задана дата выплаты'"));
	
	Если ПорядокВыплатыКасса = 1 Тогда
		ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.Касса;
	ИначеЕсли ПорядокВыплатыБанк = 1 Тогда
		ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект;
		ПравилаПроверки.Добавить("ЗарплатныйПроект", НСтр("ru='Не указан зарплатный проект'"));
	Иначе
		ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.БанковскийСчет;
	КонецЕсли;

	МожноСоздатьВедомости = ЗарплатаКадрыКлиентСервер.СвойстваФормыЗаполнены(ЭтаФорма, ПравилаПроверки, СообщитьПользователю);

	Если МожноСоздатьВедомости Тогда
		
		ПараметрыСозданияВедомостей = Обработки.СозданиеВедомостейПрочихДоходов.ПараметрыСозданияВедомостейПоРасчетномуДокументу();
		ПараметрыСозданияВедомостей.УникальныйИдентификаторФормы = УникальныйИдентификатор;
		ПараметрыСозданияВедомостей.ДатаВыплаты				= ДатаВыплаты;
		ПараметрыСозданияВедомостей.ВРазрезеИсточников		= ВРазрезеИсточников;
		ПараметрыСозданияВедомостей.ВидМестаВыплаты			= ВидМестаВыплаты;
		ПараметрыСозданияВедомостей.ЗарплатныйПроект        = ЗарплатныйПроект;
		
		СписокВедомостей = Обработки.СозданиеВедомостейПрочихДоходов.СоздатьВедомостиПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСозданияВедомостей);
		
		Ведомости.Загрузить(СписокВедомостей);
		
	Иначе
		Ведомости.Очистить();
	КонецЕсли	
	
КонецПроцедуры


&НаСервере
Процедура СохранитьВедомостиНаСервере(РежимЗаписи)	
	
	Обработки.СозданиеВедомостейПрочихДоходов.СохранитьВедомостиНаСервере(Ведомости, РежимЗаписи);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СозданиеВедомостейПрочихДоходов", "ВРазрезеИсточников", ВРазрезеИсточников);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПорядокВыплатыПеречислениеПриИзменении(Элемент)
	ПорядокВыплатыПеречисление = 1;
	ПорядокВыплатыКасса        = 0;
	ПорядокВыплатыБанк         = 0;
	СоздатьВедомости(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПорядокВыплатыКассаПриИзменении(Элемент)
	ПорядокВыплатыПеречисление = 0;
	ПорядокВыплатыКасса        = 1;
	ПорядокВыплатыБанк         = 0;
	СоздатьВедомости(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПорядокВыплатыБанкПриИзменении(Элемент)
	ПорядокВыплатыПеречисление = 0;
	ПорядокВыплатыКасса        = 0;
	ПорядокВыплатыБанк         = 1;
	СоздатьВедомости(Истина);
КонецПроцедуры


#КонецОбласти
