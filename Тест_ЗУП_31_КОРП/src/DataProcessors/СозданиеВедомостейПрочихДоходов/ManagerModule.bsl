#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проверка_возможности_создания_ведомостей 

Функция МожноСоздатьВедомостиПоРасчетномуДокументу(РасчетныйДокумент) Экспорт
	
	Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "Проведен") Тогда
		ТекстСообщения = НСтр("ru = 'Выплата возможна только по проведенному документу'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетныйДокумент", РасчетныйДокумент);
	
	// Должны остаться суммы к выплате по документу.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Остатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентамиАкционерами.Остатки(, ДокументОснование = &РасчетныйДокумент) КАК Остатки
	|ГДЕ
	|	Остатки.СуммаВзаиморасчетовОстаток > 0";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой()Тогда
		ТекстСообщения = НСтр("ru = 'По документу не осталось сумм к выплате'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина
	
КонецФункции

#КонецОбласти

#Область Создание_ведомостей 

Функция ПараметрыСозданияВедомостейПоРасчетномуДокументу() Экспорт
	
	ПараметрыСозданияВедомостейПоРасчетномуДокументу = Новый Структура;
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("УникальныйИдентификаторФормы");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ДатаВыплаты");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ВРазрезеИсточников");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ВидМестаВыплаты");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ЗарплатныйПроект");
	
	Возврат ПараметрыСозданияВедомостейПоРасчетномуДокументу;
	
КонецФункции

Функция СоздатьВедомостиПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания) Экспорт
	
	СписокВедомостей = НовыйСписокВедомостей();
	
	ВыборкаКлючейВедомостей = КлючиВедомостейПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания);
	
	Пока ВыборкаКлючейВедомостей.Следующий() Цикл
		
		Ведомость = НоваяВедомостьПоРасчетномуДокументу(РасчетныйДокумент, ВыборкаКлючейВедомостей, ПараметрыСоздания);
		Если Ведомость = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Ведомость.ЗаполнитьВыплаты();
		
		Строка = СписокВедомостей.Добавить();
		Строка.Адрес = ПоместитьВоВременноеХранилище(ОбщегоНазначения.ЗначениеВСтрокуXML(Ведомость), ПараметрыСоздания.УникальныйИдентификаторФормы);
		Строка.Представление = ПредставлениеВедомости(Ведомость);
		
	КонецЦикла;
	
	Возврат СписокВедомостей	
	
КонецФункции

Функция НовыйСписокВедомостей()
	
	ТаблицаВедомостей = Новый ТаблицаЗначений;
	ТаблицаВедомостей.Колонки.Добавить("Адрес");
	ТаблицаВедомостей.Колонки.Добавить("Представление");
	
	Возврат ТаблицаВедомостей
	
КонецФункции

Функция КлючиВедомостейПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания)
	
	СпособВыплаты = ОбщегоНазначения.МенеджерОбъектаПоСсылке(РасчетныйДокумент).СпособВыплатыПрочихДоходов();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетныйДокумент",  РасчетныйДокумент);
	Запрос.УстановитьПараметр("ВРазрезеИсточников", ПараметрыСоздания.ВРазрезеИсточников);
	Запрос.УстановитьПараметр("СпособВыплаты", СпособВыплаты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Взаиморасчеты.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Взаиморасчеты.СпособРасчетов = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетовСФизическимиЛицами.ДивидендыСотрудникам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыПрочихДоходов.ДивидендыСотрудникам)
	|		КОГДА Взаиморасчеты.СпособРасчетов = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетовСФизическимиЛицами.Дивиденды)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыПрочихДоходов.Дивиденды)
	|		ИНАЧЕ &СпособВыплаты
	|	КОНЕЦ КАК СпособВыплаты,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА Взаиморасчеты.СтатьяФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА Взаиморасчеты.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяРасходов,
	|	Взаиморасчеты.Период КАК ПериодРегистрации
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентамиАкционерами КАК Взаиморасчеты
	|ГДЕ
	|	Взаиморасчеты.Регистратор = &РасчетныйДокумент";
	
	ВыборкаПоРасчетномуДокументу = Запрос.Выполнить().Выбрать();

	Возврат ВыборкаПоРасчетномуДокументу
	
КонецФункции

Функция НоваяВедомостьПоРасчетномуДокументу(РасчетныйДокумент, КлючВедомости, ПараметрыСоздания)
	
	ДокументМенеджер = ВзаиморасчетыПоПрочимДоходам.МенеджерДокументаВедомостьПоВидуМестаВыплаты(ПараметрыСоздания.ВидМестаВыплаты); 
	Если ДокументМенеджер = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Ведомость = ДокументМенеджер.СоздатьДокумент();
	
	ДанныеЗаполнения = ВзаиморасчетыПоПрочимДоходам.ДанныеЗаполненияВедомости();
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения.Шапка, КлючВедомости);
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения.Шапка, ПараметрыСоздания);
	ДанныеЗаполнения.Шапка.Дата = ПараметрыСоздания.ДатаВыплаты;
	ДанныеЗаполнения.Основания.Добавить(РасчетныйДокумент);
	
	Ведомость.Заполнить(ДанныеЗаполнения);

	Ведомость.СтатьяФинансирования	= КлючВедомости.СтатьяФинансирования;
	Ведомость.СтатьяРасходов		= КлючВедомости.СтатьяРасходов;
	
	Возврат Ведомость
	
КонецФункции
	
Функция ПредставлениеВедомости(Ведомость)
	
	ШаблонПредставления = НСтр("ru = '%1 на общую сумму %2 %3, сотрудников %4: %5'");
	
	Тип = "Ведомость";
	Сумма	= Ведомость.Выплаты.Итог("КВыплате");
	Валюта	= НСтр("ru = 'руб.'");
	ПолучателиВыплат = Ведомость.Выплаты.Выгрузить(, "ФизическоеЛицо");
	ПолучателиВыплат.Свернуть("ФизическоеЛицо");
	КоличествоПолучателей	= ПолучателиВыплат.Количество();
	КраткийСостав = ЗарплатаКадры.КраткийСоставФизЛиц(Ведомость.Выплаты.ВыгрузитьКолонку("ФизическоеЛицо"), Ведомость.Дата);
	
	ПредставлениеВедомости = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления, Тип, Сумма, Валюта, КоличествоПолучателей, КраткийСостав);
	
	Возврат ПредставлениеВедомости
	
КонецФункции

#КонецОбласти

#Область Сохранение_ведомостей 

Процедура СохранитьВедомостиНаСервере(СписокВедомостей, РежимЗаписи)	Экспорт
	
	НачатьТранзакцию();
	
	Для Каждого СтрокаСпискаВедомостей Из СписокВедомостей Цикл
		СтрокаXML = ПолучитьИзВременногоХранилища(СтрокаСпискаВедомостей.Адрес);
		Ведомость = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаXML);
		Ведомость.Записать(РежимЗаписи);
	КонецЦикла;	
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#КонецЕсли