#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначенияДляЗаполнения = Новый Структура("Месяц",  "Месяц");
	ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НазначениеПоказателейЭффективности" Тогда
	 	ПриПолученииДанныхНаСервере();
	ИначеЕсли ИмяСобытия = "Запись_ПланПоказателейЭффективностиПодразделения" Тогда
		ПриПолученииДанныхНаСервере();
	ИначеЕсли ИмяСобытия = "Запись_ПланПоказателейЭффективностиПозиции" Тогда
		ПриПолученииДанныхНаСервере();
	ИначеЕсли ИмяСобытия = "Запись_ПланПоказателейЭффективностиСотрудника" Тогда
		ОбновитьПоказателиСотрудника(КодВозвратаДиалога.ОК, Параметр);
	ИначеЕсли ИмяСобытия = "Запись_ПланПоказателяЭффективностиПодразделений" Тогда
		ПриПолученииДанныхНаСервере();
	ИначеЕсли ИмяСобытия = "Запись_ПланПоказателяЭффективностиПозиций" Тогда
		ПриПолученииДанныхНаСервере();
	ИначеЕсли ИмяСобытия = "Запись_ФактПоказателейЭффективностиПодразделения" Тогда
		ПриПолученииДанныхНаСервере();
	ИначеЕсли ИмяСобытия = "Запись_ФактПоказателейЭффективностиСотрудника" Тогда
		ОбновитьПоказателиСотрудника(КодВозвратаДиалога.ОК, Параметр);
	ИначеЕсли ИмяСобытия = "Запись_ФактПоказателяЭффективностиПодразделений" Тогда
		ПриПолученииДанныхНаСервере();
	ИначеЕсли ИмяСобытия = "Запись_ФактПоказателяЭффективностиСотрудников" Тогда
		ОбновитьПоказателиСотрудника(КодВозвратаДиалога.ОК, Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцСтрокойПриИзменении(Элемент)
	МесяцПриИзмененииНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("МесяцСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Месяц", "МесяцСтрокой",, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Месяц", "МесяцСтрокой", Направление);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцНачисленияПриИзменении", 0.3, Истина);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоСотрудников

&НаКлиенте
Процедура ДеревоСотрудниковПриАктивизацииСтроки(Элемент)
	
	УстановитьОтборОценкамПоказателей(ЭтаФорма, Элементы.ДеревоСотрудников.ТекущиеДанные);
	СформироватьСтрокуВладельцаПоказателя(ЭтаФорма, Элементы.ДеревоСотрудников.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСотрудниковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "ДеревоСотрудниковЗначениеСтроки" Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, Элемент.ТекущиеДанные.ЗначениеСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаОценокПоказателейСотрудников

&НаКлиенте
Процедура ТаблицаОценокПоказателейСотрудниковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаОценокПоказателейСотрудниковПланПоказателя"
		ИЛИ Поле.Имя = "ТаблицаОценокПоказателейСотрудниковФактПоказателя" Тогда
		ОткрытьРегистраторПланаФакта(Элемент, Поле);
	ИначеЕсли Поле.Имя = "ТаблицаОценокПоказателейСотрудниковПоказатель" Тогда
		ОткрытьРегистраторНазначения(Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОценокПоказателейСотрудниковПриАктивизацииСтроки(Элемент)
	СформироватьСтрокуРасшифровкиОценкиПоказателя(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВвестиПланПоказателей(Команда)
	ОткрытьНовыйПланСотрудникаНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ВвестиФактПоказателей(Команда)
	ОткрытьНовыйФактСотрудникаНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()

	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Месяц", "МесяцСтрокой");
	ЦветаСтиляПоясняющийТекст = ЦветаСтиля.ПоясняющийТекст;
	
	ЗаполнитьДанныеОбОкончательномРасчете();
	
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцНачисленияПриИзменении()
	МесяцПриИзмененииНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	МесяцПриИзмененииНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура МесяцПриИзмененииНаКлиенте()
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

#Область ОценкиПоказателей

&НаСервере
Процедура ЗаполнитьДанныеОбОкончательномРасчете()

	Если Не ЗначениеЗаполнено(ПодразделениеОтбор)
		ИЛИ Не ЗначениеЗаполнено(Месяц) Тогда
		
		Возврат;
	КонецЕсли;
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Подразделение
		|ПОМЕСТИТЬ ВТПодразделенияОтбор
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Ссылка В ИЕРАРХИИ(&Подразделение)";
	Запрос.УстановитьПараметр("Подразделение", ПодразделениеОтбор);
	
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТПодразделенияОтбор");
	
	ОрганизационнаяСтруктура.СоздатьВТПозицииПодразделений(Запрос.МенеджерВременныхТаблиц, "ВТПодразделенияОтбор");
	УдалитьВТ.Добавить("ВТПозицииПодразделений");
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТПозицииПодразделений.Позиция КАК Позиция
		|ИЗ
		|	ВТПозицииПодразделений КАК ВТПозицииПодразделений";
	
	РезультатПозиций = Запрос.Выполнить();
	
	МассивПозиций = РезультатПозиций.Выгрузить().ВыгрузитьКолонку("Позиция");
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.НачалоПериода = Месяц;
	ПараметрыПолученияСотрудников.ОкончаниеПериода = Месяц;
	ПараметрыПолученияСотрудников.КадровыеДанные = "ДолжностьПоШтатномуРасписанию";
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		ПараметрыПолученияСотрудников.Отборы, "ДолжностьПоШтатномуРасписанию", "В", МассивПозиций);
	
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников);
	
	Запрос.Текст = 
	    "ВЫБРАТЬ
	    |	КадровыеДанныеСотрудников.Сотрудник КАК ЗначениеСтроки,
	    |	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
	    |	ВТОтобранныеПозиции.Позиция КАК Позиция,
	    |	ВТОтобранныеПозиции.Подразделение КАК Подразделение
	    |ПОМЕСТИТЬ ВТСотрудники
	    |ИЗ
	    |	ВТПозицииПодразделений КАК ВТОтобранныеПозиции
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК КадровыеДанныеСотрудников
	    |		ПО ВТОтобранныеПозиции.Позиция = КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию
	    |			И (&Период = НАЧАЛОПЕРИОДА(КадровыеДанныеСотрудников.Период, ДЕНЬ))
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	    |	&Период КАК Период,
	    |	ВТСотрудники.Сотрудник КАК Сотрудник
	    |ПОМЕСТИТЬ ВТСотрудникиОтбор
	    |ИЗ
	    |	ВТСотрудники КАК ВТСотрудники
	    |ГДЕ
	    |	ВТСотрудники.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ВТСотрудники.ЗначениеСтроки КАК ЗначениеСтроки,
	    |	ВТСотрудники.Сотрудник КАК Сотрудник,
	    |	ВТСотрудники.Позиция КАК Позиция,
	    |	ВТСотрудники.Подразделение КАК Подразделение
	    |ИЗ
	    |	ВТСотрудники КАК ВТСотрудники
	    |ИТОГИ ПО
	    |	Подразделение ИЕРАРХИЯ
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТСотрудникиОрганизации
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТСотрудники";
	
	УдалитьВТ.Добавить("ВТСотрудникиОтбор");
	Запрос.УстановитьПараметр("Период", Месяц);
	
	РезультатДерево = Запрос.Выполнить();			   
	
	ЗаполнитьТаблицуОценокПоказателейСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиОтбор");
	
	ЗаполнитьДеревоСотрудников(РезультатДерево);
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОценокПоказателейСотрудников(МенеджерВременныхТаблиц, ИмяОтбора)
	
	ТаблицаОценокПоказателейСотрудников.Очистить();
	ЗаполнитьТаблицаОценокПоказателейСотрудников(МенеджерВременныхТаблиц, ИмяОтбора);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоСотрудников(РезультатДерево)

	ДеревоСотрудников.ПолучитьЭлементы().Очистить();
	
	ДеревоРезультат = РезультатДерево.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ДополнитьДеревоСотрудников(ДеревоРезультат, ДеревоСотрудников);
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьДеревоСотрудников(ДеревоИсточник, ДеревоПриемник)
	
	СтрокиПриемника = ДеревоПриемник.ПолучитьЭлементы();
	
	Для Каждого СтрокаИсточника Из ДеревоИсточник.Строки Цикл
		ЗначениеСтроки = ?(ЗначениеЗаполнено(СтрокаИсточника.Сотрудник), СтрокаИсточника.Сотрудник, СтрокаИсточника.Подразделение);
			
		Если ТипЗнч(ДеревоПриемник) = Тип("ДанныеФормыЭлементДерева") И ДеревоПриемник.ЗначениеСтроки = ЗначениеСтроки Тогда 
			ДополнитьДеревоСотрудников(СтрокаИсточника, ДеревоПриемник);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаИсточника Из ДеревоИсточник.Строки Цикл
		
		ЗначениеСтроки = ?(ЗначениеЗаполнено(СтрокаИсточника.Сотрудник), СтрокаИсточника.Сотрудник, СтрокаИсточника.Подразделение);
		КартинкаСтроки = ?(ЗначениеЗаполнено(СтрокаИсточника.Сотрудник), 2, 1);
			
		Если ТипЗнч(ДеревоПриемник) = Тип("ДанныеФормыЭлементДерева") И ДеревоПриемник.ЗначениеСтроки = ЗначениеСтроки Тогда 
			Продолжить;
		КонецЕсли;
		
		СтрокаПриемника = СтрокиПриемника.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПриемника, СтрокаИсточника);
		СтрокаПриемника.ЗначениеСтроки = ЗначениеСтроки;
		СтрокаПриемника.КартинкаСтроки = КартинкаСтроки;
		ЗаполнитьИтоговуюОценкуПоказателяСотрудника(СтрокаПриемника);
		
		ДополнитьДеревоСотрудников(СтрокаИсточника, СтрокаПриемника);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборОценкамПоказателей(Форма, ТекущиеДанные = Неопределено)
	
	Если ТекущиеДанные = Неопределено Или Не ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
		Форма.Элементы.ТаблицаОценокПоказателейСотрудников.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка"));
	Иначе
		Форма.Элементы.ТаблицаОценокПоказателейСотрудников.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", ТекущиеДанные.Сотрудник);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИтоговуюОценкуПоказателяСотрудника(ТекущиеДанные)

	Если Не ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	ИтоговаяОценкаПоказателя = 0;
	ТекущиеДанные.ПолностьюРассчитан = Истина;
	
	НайденныеСтроки = ТаблицаОценокПоказателейСотрудников.НайтиСтроки(Новый Структура("Сотрудник", ТекущиеДанные.Сотрудник));
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		ТекущиеДанные.ВладелецПоказателя = НайденнаяСтрока.ВладелецПоказателя;
		Если НайденнаяСтрока.Рассчитан Тогда
			ИтоговаяОценкаПоказателя = ИтоговаяОценкаПоказателя + НайденнаяСтрока.УдельнаяОценкаПоказателя;
			ТекущиеДанные.ЕстьРассчитанныеЗначения = Истина;
		Иначе
			ТекущиеДанные.ПолностьюРассчитан = Ложь;
		КонецЕсли;
	КонецЦикла; 
	
	ТекущиеДанные.ИтоговаяОценкаПоказателя = Окр(ИтоговаяОценкаПоказателя, 2);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьСтрокуВладельцаПоказателя(Форма, ТекущиеДанные)

	МассивСтрок = Новый Массив;
	
	Если ТекущиеДанные = Неопределено
		ИЛИ Не ЗначениеЗаполнено(ТекущиеДанные.ВладелецПоказателя) Тогда
		
		Форма.СтрокаВладельцаПоказателя = Новый ФорматированнаяСтрока(МассивСтрок);
		Возврат;
	КонецЕсли;

	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Сотрудник работает на позиции'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Строка(ТекущиеДанные.Позиция)));
	МассивСтрок.Добавить(Символы.ПС);
	
	Если ТипЗнч(ТекущиеДанные.ВладелецПоказателя) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		ТекстВладельца = НСтр("ru = 'подразделение'");
	Иначе
		ТекстВладельца = НСтр("ru = 'позицию'");
	КонецЕсли;
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Набор показателей, действующих на него, назначен на %1'"), ТекстВладельца),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Строка(ТекущиеДанные.ВладелецПоказателя)));
	
	Форма.СтрокаВладельцаПоказателя = Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьСтрокуРасшифровкиОценкиПоказателя(Форма)

	МассивСтрок = Новый Массив;
	
	ТекущиеДанные = Форма.Элементы.ТаблицаОценокПоказателейСотрудников.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
		ИЛИ Не ТекущиеДанные.Рассчитан Тогда
		
		Форма.СтрокаРасшифровкиОценкиПоказателя = Новый ФорматированнаяСтрока(МассивСтрок);
		Возврат;
	КонецЕсли;
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Итоговая оценка показателя:'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Формат(ТекущиеДанные.УдельнаяОценкаПоказателя, "ЧН=0,00")));
	МассивСтрок.Добавить(" = ");
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Формат(ТекущиеДанные.ОценкаПоказателя, "ЧН=0,00")));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = '(оценка показателя)'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(" * ");
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Формат(ТекущиеДанные.УдельныйВес, "ЧН=0,00")));
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = '(доля показателя в итоговой оценке).'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Символы.ПС);
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Значение показателя'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(" - ",, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Формат(ТекущиеДанные.ЗначениеПоказателя, "ЧН=0,00")));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(", ",, Форма.ЦветаСтиляПоясняющийТекст));
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'располагается на отрезке шкалы'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(" ");
	
	ТекстШкалы = """" + КлючевыеПоказателиЭффективностиКлиентСервер.ТекстШкалыПоОтрезку(ТекущиеДанные.ЗначениеОт, ТекущиеДанные.ЗначениеДо) + """";
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ТекстШкалы));
	МассивСтрок.Добавить(Символы.ПС);
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Оценка показателя, рассчитанная по данному отрезку шкалы значений'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(" - ",, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Формат(ТекущиеДанные.ОценкаПоказателя, "ЧН=0,00")));
	МассивСтрок.Добавить(".");
	МассивСтрок.Добавить(Символы.ПС);
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Вес показателя'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(" - ",, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Формат(ТекущиеДанные.Вес, "ЧН=0")));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(". ",, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Доля показателя в итоговой оценке'"),, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(" - ",, Форма.ЦветаСтиляПоясняющийТекст));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Формат(ТекущиеДанные.УдельныйВес, "ЧН=0,00")));
	МассивСтрок.Добавить(".");
	
	Форма.СтрокаРасшифровкиОценкиПоказателя = Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументНаКлиенте(ТекущиеДанныеРегистратор, ОповещениеОЗакрытии)

	Если Не ЗначениеЗаполнено(ТекущиеДанныеРегистратор) Тогда
		Возврат;
	КонецЕсли;

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ", ТекущиеДанныеРегистратор);
	
	ОткрытьФорму("Документ." + ИмяДокументаНаСервере(ТекущиеДанныеРегистратор) + ".Форма.ФормаДокумента", СтруктураПараметров, ЭтотОбъект, УникальныйИдентификатор,,, ОповещениеОЗакрытии);

КонецПроцедуры

&НаСервере
Функция ИмяДокументаНаСервере(ДокументСсылка)
	Возврат ДокументСсылка.Метаданные().Имя;
КонецФункции

&НаКлиенте
Процедура ОткрытьНовыйПланСотрудникаНаКлиенте()

	ОтборСтрок = Элементы.ТаблицаОценокПоказателейСотрудников.ОтборСтрок;
	Сотрудник = ОтборСтрок.Сотрудник;
	
	Показатели = Новый Массив;
	
	СтрокиСотрудника = ТаблицаОценокПоказателейСотрудников.НайтиСтроки(Новый Структура(ОтборСтрок));
	Для каждого СтрокаСотрудника Из СтрокиСотрудника Цикл
		Если ЗначениеЗаполнено(СтрокаСотрудника.ПланПоказателя) ИЛИ Не СтрокаСотрудника.ТребуетсяВводПлана Тогда
			Продолжить;
		КонецЕсли;
		Показатели.Добавить(СтрокаСотрудника.Показатель);
	КонецЦикла; 
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения(Сотрудник, Показатели));
	
	ОткрытьФорму("Документ.ПланПоказателейЭффективностиСотрудника.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНовыйФактСотрудникаНаКлиенте()

	ОтборСтрок = Элементы.ТаблицаОценокПоказателейСотрудников.ОтборСтрок;
	Сотрудник = ОтборСтрок.Сотрудник;
	
	Показатели = Новый Массив;
	
	СтрокиСотрудника = ТаблицаОценокПоказателейСотрудников.НайтиСтроки(Новый Структура(ОтборСтрок));
	Для каждого СтрокаСотрудника Из СтрокиСотрудника Цикл
		Если ЗначениеЗаполнено(СтрокаСотрудника.ФактПоказателя) Тогда
			Продолжить;
		КонецЕсли;
		Показатели.Добавить(СтрокаСотрудника.Показатель);
	КонецЦикла; 
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения(Сотрудник, Показатели));
	
	ОткрытьФорму("Документ.ФактПоказателейЭффективностиСотрудника.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Функция ЗначенияЗаполнения(Сотрудник, Показатели)

	ЗначенияЗаполнения = Новый Структура;
	
	ЗначенияЗаполнения.Вставить("Период", Месяц);
	ЗначенияЗаполнения.Вставить("Подразделение", ПодразделениеОтбор);
	ЗначенияЗаполнения.Вставить("Сотрудник", Сотрудник);
	ЗначенияЗаполнения.Вставить("Показатели", Показатели);
	
	Возврат ЗначенияЗаполнения;

КонецФункции

&НаКлиенте
Процедура ОбновитьПоказателиСотрудника(Результат, ДополнительныеПараметры = Неопределено) Экспорт

	Сотрудник = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "Сотрудники");
	Если Сотрудник = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Сотрудник) = Тип("Массив") Тогда
		СотрудникПараметр = Сотрудник;
	Иначе
		СотрудникПараметр = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник);
	КонецЕсли;
	
	ОбновитьПоказателиСотрудникаНаСервере(СотрудникПараметр);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПоказателиСотрудникаНаСервере(Сотрудники)
	
	ТаблицаОтбор = Новый ТаблицаЗначений;
	ТаблицаОтбор.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТаблицаОтбор.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	Для каждого Сотрудник Из Сотрудники Цикл
		НоваяСтрока = ТаблицаОтбор.Добавить();
		НоваяСтрока.Период = Месяц;
		НоваяСтрока.Сотрудник = Сотрудник;
		// Очистка старых строк.
		УдаляемыеСтроки = ТаблицаОценокПоказателейСотрудников.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
		Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			ТаблицаОценокПоказателейСотрудников.Удалить(УдаляемаяСтрока);
		КонецЦикла;
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОтбор.Период КАК период,
		|	ТаблицаОтбор.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТСотрудникиОтбор
		|ИЗ
		|	&ТаблицаОтбор КАК ТаблицаОтбор";
	Запрос.УстановитьПараметр("ТаблицаОтбор", ТаблицаОтбор);
	
	Запрос.Выполнить();
	
	ЗаполнитьТаблицаОценокПоказателейСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиОтбор");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистраторНазначения(Элемент)

	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ", ТекущиеДанные.РегистраторПоказателя);
	
	ОткрытьФорму("Документ.НазначениеПоказателейЭффективности.Форма.ФормаДокумента", СтруктураПараметров, ЭтотОбъект, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистраторПланаФакта(Элемент, Поле)

	ОтборСтрок = Элементы.ТаблицаОценокПоказателейСотрудников.ОтборСтрок;
	Если ОтборСтрок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Сотрудник", ОтборСтрок.Сотрудник);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбновитьПоказателиСотрудника", ЭтотОбъект, ДополнительныеПараметры);
	
	Если Поле.Имя = "ТаблицаОценокПоказателейСотрудниковПланПоказателя" Тогда
		ОткрытьДокументНаКлиенте(Элемент.ТекущиеДанные.РегистраторПлана, ОповещениеОЗакрытии);
	ИначеЕсли Поле.Имя = "ТаблицаОценокПоказателейСотрудниковФактПоказателя" Тогда
		ОткрытьДокументНаКлиенте(Элемент.ТекущиеДанные.РегистраторФакта, ОповещениеОЗакрытии);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицаОценокПоказателейСотрудников(МенеджерВременныхТаблиц, ИмяОтбора)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	КлючевыеПоказателиЭффективности.СоздатьВТОценкиПоказателейСотрудников(Запрос.МенеджерВременныхТаблиц, ИмяОтбора);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОценкиПоказателейСотрудников.Сотрудник КАК Сотрудник,
		|	ОценкиПоказателейСотрудников.Показатель КАК Показатель,
		|	ОценкиПоказателейСотрудников.РегистраторНазначенияПоказателей КАК РегистраторПоказателя,
		|	ОценкиПоказателейСотрудников.ТребуетсяВводПлана КАК ТребуетсяВводПлана,
		|	ОценкиПоказателейСотрудников.ВладелецПоказателя КАК ВладелецПоказателя,
		|	ОценкиПоказателейСотрудников.Вес КАК Вес,
		|	ОценкиПоказателейСотрудников.УдельныйВес КАК УдельныйВес,
		|	ОценкиПоказателейСотрудников.ЗначениеПоказателя КАК ЗначениеПоказателя,
		|	ОценкиПоказателейСотрудников.ЗначениеОт КАК ЗначениеОт,
		|	ОценкиПоказателейСотрудников.ЗначениеДо КАК ЗначениеДо,
		|	ОценкиПоказателейСотрудников.ПлановоеЗначение КАК ПланПоказателя,
		|	ОценкиПоказателейСотрудников.ФактическоеЗначение КАК ФактПоказателя,
		|	ОценкиПоказателейСотрудников.ОценкаПоказателя КАК ОценкаПоказателя,
		|	ОценкиПоказателейСотрудников.УдельнаяОценкаПоказателя КАК УдельнаяОценкаПоказателя,
		|	ОценкиПоказателейСотрудников.РегистраторПлановогоЗначения КАК РегистраторПлана,
		|	ОценкиПоказателейСотрудников.РегистраторФактическогоЗначения КАК РегистраторФакта,
		|	ВЫБОР
		|		КОГДА ОценкиПоказателейСотрудников.УдельнаяОценкаПоказателя ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Рассчитан
		|ИЗ
		|	ВТОценкиПоказателейСотрудников КАК ОценкиПоказателейСотрудников";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаОценокПоказателейСотрудников.Добавить(), Выборка);
	КонецЦикла;
	
	УстановитьОтборОценкамПоказателей(ЭтаФорма);

КонецПроцедуры

#КонецОбласти
