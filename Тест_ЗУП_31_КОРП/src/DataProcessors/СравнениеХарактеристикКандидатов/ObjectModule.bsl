
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает данные для формирования отчета по сравнению характеристик кандидатов.
//
// Параметры 
//	Вакансия - СправочникСсылка.Вакансии - вакансия, для которой формируется отчет. 
//	СписокФизЛиц - СписокЗначений - список отбираемых физлиц.
//	СписокЭтапов - СписокЗначений - список этапов работы, по которым сравниваются характеристики.
//
// ВозвращаемоеЗначение:
//   Структура - структура данных формируемого отчета.
//
Функция ДанныеОтчета(Вакансия, СписокФизЛиц, СписокЭтапов) Экспорт 
	
	ОтбираемыеХарактеристики = Новый Массив;
	ИспользоватьОтборПоЭтапам = Ложь;
	Если СписокЭтапов.Количество() > 0 Тогда
		ИспользоватьОтборПоЭтапам = Истина;
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВакансииЭтапыРаботыСКандидатами.Ссылка,
			|	ВакансииЭтапыРаботыСКандидатами.ЭтапРаботы,
			|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос
			|ПОМЕСТИТЬ ВТВопросыЭтапов
			|ИЗ
			|	Справочник.Вакансии.ЭтапыРаботыСКандидатами КАК ВакансииЭтапыРаботыСКандидатами
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
			|		ПО ВакансииЭтапыРаботыСКандидатами.ШаблонАнкеты = ВопросыШаблонаАнкеты.Владелец
			|			И (НЕ ВопросыШаблонаАнкеты.ЭтоГруппа)
			|			И (НЕ ВопросыШаблонаАнкеты.ПометкаУдаления)
			|ГДЕ
			|	ВакансииЭтапыРаботыСКандидатами.Ссылка = &Ссылка
			|	И ВакансииЭтапыРаботыСКандидатами.ЭтапРаботы В(&ЭтапыРаботы)
			|	И ВопросыШаблонаАнкеты.ЭлементарныйВопрос <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВакансииЭтапыРаботыСКандидатами.Ссылка,
			|	ВакансииЭтапыРаботыСКандидатами.ЭтапРаботы,
			|	ВопросыШаблонаАнкетыСоставКомплексногоВопроса.ЭлементарныйВопрос
			|ИЗ
			|	Справочник.Вакансии.ЭтапыРаботыСКандидатами КАК ВакансииЭтапыРаботыСКандидатами
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВопросыШаблонаАнкеты.СоставКомплексногоВопроса КАК ВопросыШаблонаАнкетыСоставКомплексногоВопроса
			|		ПО ВакансииЭтапыРаботыСКандидатами.ШаблонАнкеты = ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка.Владелец
			|			И (НЕ ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка.ПометкаУдаления)
			|ГДЕ
			|	ВакансииЭтапыРаботыСКандидатами.Ссылка = &Ссылка
			|	И ВакансииЭтапыРаботыСКандидатами.ЭтапРаботы В(&ЭтапыРаботы)
			|	И ВопросыШаблонаАнкетыСоставКомплексногоВопроса.ЭлементарныйВопрос <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала
			|ИЗ
			|	ВТВопросыЭтапов КАК ВопросыЭтапов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаВопросовДляСобеседования КАК НастройкаВопросовДляСобеседования
			|		ПО (ВЫБОР
			|				КОГДА ВопросыЭтапов.Ссылка.СоответствуетПрофилюДолжности
			|					ТОГДА ВопросыЭтапов.Ссылка.ПрофильДолжности
			|				ИНАЧЕ ВопросыЭтапов.Ссылка
			|			КОНЕЦ = НастройкаВопросовДляСобеседования.Объект)
			|			И ВопросыЭтапов.ЭлементарныйВопрос = НастройкаВопросовДляСобеседования.ЭлементарныйВопрос";
		Запрос.УстановитьПараметр("Ссылка", Вакансия);
		Запрос.УстановитьПараметр("ЭтапыРаботы", СписокЭтапов);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОтбираемыеХарактеристики.Добавить(Выборка.ХарактеристикаПерсонала);
		КонецЦикла;
	КонецЕсли;
	ТаблицаПредставленийХарактеристик = Новый ТаблицаЗначений;
	ТаблицаПредставленийХарактеристик.Колонки.Добавить("Характеристика");
	ТаблицаПредставленийХарактеристик.Колонки.Добавить("ЗначенияСтрокой");
	ТЗХарактеристик = Вакансия.ХарактеристикиПерсонала.Выгрузить();
	ТЗХарактеристик.Свернуть("Характеристика");
	
	Для Каждого ТекущаяСтрока Из ТЗХарактеристик Цикл
		НоваяСтрока = ТаблицаПредставленийХарактеристик.Добавить();
		НоваяСтрока.Характеристика = ТекущаяСтрока.Характеристика;
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Характеристика", ТекущаяСтрока.Характеристика);
		СтрокиЗначений = Вакансия.ХарактеристикиПерсонала.НайтиСтроки(СтруктураПоиска);
		ЗначенияСтрокой = "";
		Для Каждого СтрокаЗначения Из СтрокиЗначений Цикл
			ЗначенияСтрокой = СокрЛП(ЗначенияСтрокой) + ?(ЗначенияСтрокой = "", "", ", ") + СокрЛП(Строка(СтрокаЗначения.Значение));
		КонецЦикла;
		НоваяСтрока.ЗначенияСтрокой = ЗначенияСтрокой;
	КонецЦикла;
	
	ОценкиПоХарактеристикам = ЭлектронноеИнтервью.ОценкиФизическихЛицПоХарактеристикам(Вакансия, СписокФизЛиц, ОтбираемыеХарактеристики, ИспользоватьОтборПоЭтапам);
	Данные = ОценкиПоХарактеристикам.Данные;
	ТаблицаИтогов = ОценкиПоХарактеристикам.ТаблицаИтогов;
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("СовпадаютБаллы", Новый ОписаниеТипов("Булево"));
	ТЗ.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ХарактеристикиПерсонала"));
	ТЗ.Колонки.Добавить("ТребованияПредставление", Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("Требования", Метаданные.ПланыВидовХарактеристик.ХарактеристикиПерсонала.Тип);
		
	СчетчикФизЛиц = 1;
	Для Каждого ТекущаяСтрока Из ТаблицаИтогов Цикл
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.ФизическоеЛицо) Тогда
			Продолжить;
		КонецЕсли;
		ТЗ.Колонки.Добавить("Кандидат" + Строка(СчетчикФизЛиц), Метаданные.ПланыВидовХарактеристик.ХарактеристикиПерсонала.Тип);
		ТЗ.Колонки.Добавить("Кандидат" + Строка(СчетчикФизЛиц) + "Балл", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		СчетчикФизЛиц = СчетчикФизЛиц + 1;
	КонецЦикла;
	ТЗ.Колонки.Добавить("КандидатБаллСлужебный", Новый ОписаниеТипов("Строка"));

	ТаблицаХарактеристик = Данные.Скопировать();
	ТаблицаХарактеристик.Свернуть("Характеристика");
	
	Для Каждого ТекущаяХарактеристика Из ТаблицаХарактеристик Цикл
		
		Если Не ЗначениеЗаполнено(ТекущаяХарактеристика.Характеристика) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТЗ.Добавить();
		НоваяСтрока.Характеристика = ТекущаяХарактеристика.Характеристика;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Характеристика", НоваяСтрока.Характеристика);
		НайденныеСтроки = ТаблицаПредставленийХарактеристик.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество()>0 Тогда
			НоваяСтрока.ТребованияПредставление = НайденныеСтроки[0].ЗначенияСтрокой;
		КонецЕсли; 
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Характеристика", НоваяСтрока.Характеристика);
		НайденныеСтроки = Данные.НайтиСтроки(СтруктураПоиска);
		НоваяСтрока.Требования = НайденныеСтроки[0].ОсновноеЗначение;
		
		СчетчикФизЛиц = 1;
		
		Для Каждого ТекущаяСтрока Из ТаблицаИтогов Цикл
			Если Не ЗначениеЗаполнено(ТекущаяСтрока.ФизическоеЛицо) Тогда
				Продолжить;
			КонецЕсли;
			СтруктураПоискаФизЛица = Новый Структура;
			СтруктураПоискаФизЛица.Вставить("Характеристика", НоваяСтрока.Характеристика);
			СтруктураПоискаФизЛица.Вставить("ФизическоеЛицо", ТекущаяСтрока.ФизическоеЛицо);
			НайденныеСтроки = Данные.НайтиСтроки(СтруктураПоискаФизЛица);
			Если НайденныеСтроки.Количество() > 0 Тогда
				НоваяСтрока["Кандидат" + Строка(СчетчикФизЛиц)] = НайденныеСтроки[0].Значение;
	            НоваяСтрока["Кандидат" + Строка(СчетчикФизЛиц) + "Балл"] = НайденныеСтроки[0].Оценка;
			КонецЕсли;
			СчетчикФизЛиц = СчетчикФизЛиц + 1;
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АнкетыКандидатов.Кандидат КАК Кандидат,
	|	МотиваторыВАнкетах.Мотиватор КАК Мотиватор,
	|	СУММА(МотиваторыВАнкетах.Количество) КАК Количество
	|ИЗ
	|	РегистрСведений.АнкетыКандидатов КАК АнкетыКандидатов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МотиваторыВАнкетах КАК МотиваторыВАнкетах
	|		ПО АнкетыКандидатов.Анкета = МотиваторыВАнкетах.Анкета
	|ГДЕ
	|	АнкетыКандидатов.Вакансия = &Вакансия
	|	И АнкетыКандидатов.ФизическоеЛицо В(&СписокФизЛиц)
	|
	|СГРУППИРОВАТЬ ПО
	|	АнкетыКандидатов.Кандидат,
	|	МотиваторыВАнкетах.Мотиватор";
	Запрос.УстановитьПараметр("Вакансия", Вакансия);
	Запрос.УстановитьПараметр("СписокФизЛиц", СписокФизЛиц);
	ДанныеМотиваторов = Запрос.Выполнить().Выгрузить();
	
	ТаблицаМотиваторовПоФизлицам = ДанныеМотиваторов.Скопировать();
	ТаблицаМотиваторовПоФизлицам.Свернуть("Кандидат");
		
	ТЗМотиваторов = Новый ТаблицаЗначений;
	ТЗМотиваторов.Колонки.Добавить("Мотиватор");
	СчетчикФизЛиц = 1;
	Для Каждого ТекущаяСтрока Из ТаблицаМотиваторовПоФизлицам Цикл
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.Кандидат) Тогда
			Продолжить;
		КонецЕсли;
		ТЗМотиваторов.Колонки.Добавить("Кандидат" + Строка(СчетчикФизЛиц), Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		СчетчикФизЛиц = СчетчикФизЛиц + 1;
	КонецЦикла;
	
	ТаблицаМотиваторов = ДанныеМотиваторов.Скопировать();
	ТаблицаМотиваторов.Свернуть("Мотиватор");
	
	Для Каждого ТекущийМотиватор Из ТаблицаМотиваторов Цикл
		
		Если Не ЗначениеЗаполнено(ТекущийМотиватор.Мотиватор) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТЗМотиваторов.Добавить();
		НоваяСтрока.Мотиватор = ТекущийМотиватор.Мотиватор;
		
		СчетчикФизЛиц = 1;
		Для Каждого ТекущаяСтрока Из ТаблицаМотиваторовПоФизлицам Цикл
			Если Не ЗначениеЗаполнено(ТекущаяСтрока.Кандидат) Тогда
				Продолжить;
			КонецЕсли;
			СтруктураПоискаФизЛица = Новый Структура;
			СтруктураПоискаФизЛица.Вставить("Мотиватор", НоваяСтрока.Мотиватор);
			СтруктураПоискаФизЛица.Вставить("Кандидат", ТекущаяСтрока.Кандидат);
			НайденныеСтроки = ДанныеМотиваторов.НайтиСтроки(СтруктураПоискаФизЛица);
			Если НайденныеСтроки.Количество() > 0 Тогда
				НоваяСтрока["Кандидат" + Строка(СчетчикФизЛиц)] = НайденныеСтроки[0].Количество;
	        КонецЕсли;
			СчетчикФизЛиц = СчетчикФизЛиц + 1;
		КонецЦикла;
		
	КонецЦикла;
		
	Структура = Новый Структура;
	Структура.Вставить("ТаблицаИтогов", ТаблицаИтогов);
	Структура.Вставить("ТЗ", ТЗ);
	Структура.Вставить("ТЗМотиваторов", ТЗМотиваторов);
	Структура.Вставить("ТЗМотиваторовПоКандидатам", ТаблицаМотиваторовПоФизлицам);
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти

#КонецЕсли
