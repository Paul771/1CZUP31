#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныйЭлемент = Неопределено;
	Параметры.Свойство("ВыбранныйЭлемент", ВыбранныйЭлемент);
	
	Если Параметры.СписокЗначенийДляВыбора <> Неопределено
		И Параметры.СписокЗначенийДляВыбора.Количество() > 0 Тогда
		
		ЭлементыДерева = Дерево.ПолучитьЭлементы();
		Для Каждого Элемент Из Параметры.СписокЗначенийДляВыбора Цикл
			НоваяСтрока = ЭлементыДерева.Добавить();
			НоваяСтрока.Наименование = Элемент.Значение.Name;
			НоваяСтрока.ID = Элемент.Значение.ID;
			НоваяСтрока.Тип = Элемент.Значение.Type;
			НоваяСтрока.Картинка = ИнтеграцияС1СДокументооборотПереопределяемый.ИндексКартинкиЭлемента();
		КонецЦикла;
		
		Элементы.ФормаНайти.Видимость = Ложь;
		Элементы.ФормаОтменитьПоиск.Видимость = Ложь;
		Элементы.ДеревоКонтекстноеМенюНайти.Видимость = Ложь;
		Элементы.ДеревоКонтекстноеМенюОтменитьПоиск.Видимость = Ложь;
		
	Иначе
		ТипОбъектаВыбора = Параметры.ТипОбъектаВыбора;
		Отбор = Параметры.Отбор;
		
		ЗаполнитьДеревоПапок(Дерево.ПолучитьЭлементы(), , , ВыбранныйЭлемент); // корневые папки
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда 
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Элементы.ФормаСоздать.Видимость = (ТипОбъектаВыбора = "DMInternalDocumentFolder");
	
	ВыборГрупп = Параметры.ВыборГрупп;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДерево

&НаКлиенте
Процедура ДеревоВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Дерево.НайтиПоИдентификатору(Значение);
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЭтоГруппа И Не ВыборГрупп Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите элемент, а не группу.'"));
		Возврат;
	КонецЕсли;
		
	Результат = Новый Структура;
	Результат.Вставить("РеквизитID",  ТекущиеДанные.ID);
	Результат.Вставить("РеквизитТип", ТекущиеДанные.Тип);
	Результат.Вставить("РеквизитПредставление", ТекущиеДанные.Наименование);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередРазворачиванием(Элемент, Строка, Отказ)
	
	Лист = Дерево.НайтиПоИдентификатору(Строка);
	
	Если Лист = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Лист.ПодпапкиСчитаны Тогда
		ЗаполнитьДеревоПапокПоИдентификатору(Строка, Лист.ID);
		Лист.ПодпапкиСчитаны = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НайтиВыполнить(Команда)
	
	Оповещение = Новый ОписаниеОповещения("НайтиВыполнитьЗавершение", ЭтаФорма);
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.ПоискВСписке",,,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиВыполнитьЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ЗаполнитьДеревоПапокОтКорня(, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоиск(Команда)
	
	// отменяем режим поиска
	ЗаполнитьДеревоПапокОтКорня(""); // корневые папки
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЭтоГруппа И Не ВыборГрупп Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите элемент, а не группу.'"));
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("РеквизитID",  ТекущиеДанные.ID);
	Результат.Вставить("РеквизитТип", ТекущиеДанные.Тип);
	Результат.Вставить("РеквизитПредставление", ТекущиеДанные.Наименование);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьЗавершение",
		ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		ПараметрыФормы.Вставить("РодительID",  ТекущиеДанные.ID);
		ПараметрыФормы.Вставить("РодительТип", ТекущиеДанные.Тип);
		ПараметрыФормы.Вставить("Родитель", ТекущиеДанные.Наименование);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.ПапкаВнутреннихДокументов",
		ПараметрыФормы,
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоПапок(ВеткаДерева, ИдентификаторПапки = "", СтрокаПоиска = Неопределено,
	ВыбранныйЭлемент = Неопределено)
	
	ВеткаДерева.Очистить();
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	
	СписокУсловий = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListQuery");
	
	Если ЗначениеЗаполнено(ИдентификаторПапки) Тогда
		
		РодительИд = ИнтеграцияС1СДокументооборот.СоздатьObjectID(Прокси, ИдентификаторПапки, ТипОбъектаВыбора);
		
		Условие = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListCondition");
		Условие.property = "Parent";
		Условие.value = РодительИд;
		Если Условие.Свойства().Получить("comparisonOperator") <> Неопределено Тогда
			Условие.comparisonOperator = "=";
		КонецЕсли;
		
		СписокУсловий.conditions.Добавить(Условие);
		
	КонецЕсли;
	
	Если СтрокаПоиска <> Неопределено Тогда
		Условие = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListCondition");
		Условие.property = "Name";
		Условие.value = СтрокаПоиска;
		СписокУсловий.conditions.Добавить(Условие);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбранныйЭлемент) Тогда
		Условие = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListCondition");
		Условие.property = "SelectedItem"; // имеет смысл только для иерархического справочника
		РодительИд = ИнтеграцияС1СДокументооборот.СоздатьObjectID(Прокси, ВыбранныйЭлемент, ТипОбъектаВыбора);
		Условие.value = РодительИд;
		
		СписокУсловий.conditions.Добавить(Условие);
	КонецЕсли;
	
	Если ТипЗнч(Отбор) = Тип("Структура") Тогда 
		Для Каждого СтрокаОтбора Из Отбор Цикл
			Условие = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMObjectListCondition");
			Условие.property = СтрокаОтбора.Ключ;
			
			Если ТипЗнч(СтрокаОтбора.Значение) = Тип("Структура") Тогда
				Условие.value =	ИнтеграцияС1СДокументооборот.СоздатьObjectID(Прокси, СтрокаОтбора.Значение.id, СтрокаОтбора.Значение.type);
			Иначе
				Условие.value = СтрокаОтбора.Значение;
			КонецЕсли;
		
			СписокУсловий.conditions.Добавить(Условие);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetObjectListRequest");
	Запрос.type = ТипОбъектаВыбора;
	Запрос.query = СписокУсловий;
	
	Результат = Прокси.execute(Запрос);
	ИнтеграцияС1СДокументооборот.ПроверитьВозвратВебСервиса(Прокси, Результат);
	
	Если Не ЗначениеЗаполнено(ВыбранныйЭлемент) Тогда
		
		Для Каждого Элемент Из Результат.items Цикл
			Если Элемент.Установлено("parentId") Тогда
				ИдентификаторРодителяЭлемента = Элемент.parentId.id;
			Иначе
				ИдентификаторРодителяЭлемента = "";
			КонецЕсли;
			Если ИдентификаторПапки = ИдентификаторРодителяЭлемента
				Или ЗначениеЗаполнено(СтрокаПоиска) Тогда
				НоваяСтрока = ВеткаДерева.Добавить();
				ЗаполнитьЭлементДерева(НоваяСтрока, Элемент, СтрокаПоиска);
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		// заполним дерево - для каждого уровня нужные элементы вставим и восстановим текущую строку.
		ЕстьДочерниеЭлементы = Ложь;
		ИдентификаторВеткиВыбранногоЭлемента = Неопределено;
		ЗаполнитьУровеньДерева(ВеткаДерева, "", Результат.items, СтрокаПоиска, ЕстьДочерниеЭлементы,
			ВыбранныйЭлемент, ИдентификаторВеткиВыбранногоЭлемента); // "" - корень
			
		Если ИдентификаторВеткиВыбранногоЭлемента <> Неопределено Тогда
			Элементы.Дерево.ТекущаяСтрока = ИдентификаторВеткиВыбранногоЭлемента;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУровеньДерева(ВеткаДерева, ИдентификаторРодителя, ЭлементыXDTO, СтрокаПоиска, ЕстьДочерниеЭлементы,
	ВыбранныйЭлемент, ИдентификаторВеткиВыбранногоЭлемента)
	
	ЕстьДочерниеЭлементы = Ложь;
	
	Для Каждого Элемент Из ЭлементыXDTO Цикл
		
		Если (Элемент.parentID <> Неопределено И Элемент.parentID.id = ИдентификаторРодителя)
			ИЛИ (Элемент.parentID = Неопределено И ИдентификаторРодителя = "") Тогда
		
			НоваяСтрока = ВеткаДерева.Добавить();
			ЗаполнитьЭлементДерева(НоваяСтрока, Элемент, СтрокаПоиска, Ложь);
			ЕстьДочерниеЭлементы = Истина;
			
			Если НоваяСтрока.ID = ВыбранныйЭлемент Тогда
				ИдентификаторВеткиВыбранногоЭлемента = НоваяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
			
			ЕстьДочерниеЭлементыУПодветки = Ложь;
			ЗаполнитьУровеньДерева(НоваяСтрока.ПолучитьЭлементы(), Элемент.object.objectId.id, ЭлементыXDTO, 
				СтрокаПоиска, ЕстьДочерниеЭлементыУПодветки, ВыбранныйЭлемент, ИдентификаторВеткиВыбранногоЭлемента);
				
			Если ЕстьДочерниеЭлементыУПодветки Тогда
				НоваяСтрока.ПодпапкиСчитаны = Истина;
			Иначе	
				Если Элемент.canHaveChildren И (СтрокаПоиска = Неопределено) Тогда
					НоваяСтрока.ПодпапкиСчитаны = Ложь;
					ФиктивныйЛист = НоваяСтрока.ПолучитьЭлементы().Добавить(); // чтобы появился плюсик
				Иначе
					НоваяСтрока.ПодпапкиСчитаны = Истина;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементДерева(НоваяСтрока, Элемент, СтрокаПоиска, СоздаватьФиктивныйЛист = Истина)
	
	НоваяСтрока.Наименование = Элемент.object.name;
	НоваяСтрока.ID = Элемент.object.objectId.id;
	НоваяСтрока.Тип = Элемент.object.objectId.type;
	НоваяСтрока.ЭтоГруппа = Элемент.isFolder;
	
	Если ТипОбъектаВыбора = "DMFileFolder" ИЛИ ТипОбъектаВыбора = "DMInternalDocumentFolder" Тогда
		НоваяСтрока.Картинка = 0;
	Иначе
		Если Элемент.isFolder Тогда
			НоваяСтрока.Картинка = 0;
		Иначе	
			НоваяСтрока.Картинка = ИнтеграцияС1СДокументооборотПереопределяемый.ИндексКартинкиЭлемента();
		КонецЕсли;
	КонецЕсли;
	
	Если СоздаватьФиктивныйЛист Тогда
		Если Элемент.canHaveChildren И (СтрокаПоиска = Неопределено) Тогда
			НоваяСтрока.ПодпапкиСчитаны = Ложь;
			ФиктивныйЛист = НоваяСтрока.ПолучитьЭлементы().Добавить(); // чтобы появился плюсик
		Иначе
			НоваяСтрока.ПодпапкиСчитаны = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПапокПоИдентификатору(ИдентификаторЭлементаДерева, ИдентификаторПапки)
	
	Лист = Дерево.НайтиПоИдентификатору(ИдентификаторЭлементаДерева);
	
	Если Лист = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДеревоПапок(Лист.ПолучитьЭлементы(), Лист.ID);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПапокОтКорня(ИдентификаторПапки = Неопределено, СтрокаПоиска = Неопределено)
	
	ЗаполнитьДеревоПапок(Дерево.ПолучитьЭлементы(), ИдентификаторПапки, СтрокаПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗавершение(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ОбновитьДеревоИАктивизировать(Результат.ID);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоИАктивизировать(ВыбранныйЭлемент)
	
	ЗаполнитьДеревоПапок(Дерево.ПолучитьЭлементы(), , , ВыбранныйЭлемент);
	
КонецПроцедуры

#КонецОбласти
