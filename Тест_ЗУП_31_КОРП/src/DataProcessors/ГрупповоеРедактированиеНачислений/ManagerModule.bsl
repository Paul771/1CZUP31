#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Функция КомандыПечати() Экспорт
	КомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
	
	// Облагаемая база НДФЛ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ОблагаемаяБазаНДФЛ";
	КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;
	КомандаПечати.Порядок = 10;
	КомандаПечати.Представление = НСтр("ru = 'Облагаемая база НДФЛ'");
	
	// Состав среднего заработка (командировки, отпуска и др.).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "СоставСреднегоЗаработкаОбщего";
	КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;
	КомандаПечати.Порядок = 20;
	КомандаПечати.Представление = НСтр("ru = 'Состав среднего заработка (командировки, отпуска и др.)'");
	
	// Состав среднего заработка (расчет пособий по правилам до 1 января 2011 года).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "СоставСреднегоЗаработкаФСС";
	КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;
	КомандаПечати.Порядок = 30;
	КомандаПечати.Представление = НСтр("ru = 'Состав среднего заработка (расчет пособий по правилам до 1 января 2011 года)'");
	
	// Расчетная база ПФР, ФСС, ФОМС.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "РасчетнаяБазаСтраховыхВзносов";
	КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;
	КомандаПечати.Порядок = 40;
	КомандаПечати.Представление = НСтр("ru = 'Расчетная база ПФР, ФСС, ФОМС'");
	
	// Статистическая отчетность.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "СтатистическаяОтчетность";
	КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;
	КомандаПечати.Порядок = 50;
	КомандаПечати.Представление = НСтр("ru = 'Статистическая отчетность'");
	
	// Состав ФОТ.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "СоставФОТ";
	КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;
	КомандаПечати.Порядок = 50;
	КомандаПечати.Представление = НСтр("ru = 'Состав ФОТ'");
	
	Возврат КомандыПечати;
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст
//                           ошибки).
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ГрупповоеРедактированиеНачислений.ПФ_MXL_СписокНачислений");
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОблагаемаяБазаНДФЛ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОблагаемаяБазаНДФЛ",
			НСтр("ru = 'Список начислений'"),
			ПечатнаяФормаБазаНДФЛ(Макет, "ОблагаемаяБазаНДФЛ", ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СоставСреднегоЗаработкаОбщего") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СоставСреднегоЗаработкаОбщего",
			НСтр("ru = 'Список начислений'"),
			ПечатнаяФормаБазаСреднегоЗаработкаОбщего(Макет, "СоставСреднегоЗаработкаОбщего", ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СоставСреднегоЗаработкаФСС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СоставСреднегоЗаработкаФСС",
			НСтр("ru = 'Список начислений'"),
			ПечатнаяФормаБазаСреднегоЗаработкаФСС(Макет, "СоставСреднегоЗаработкаФСС", ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетнаяБазаСтраховыхВзносов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РасчетнаяБазаСтраховыхВзносов",
			НСтр("ru = 'Список начислений'"),
			ПечатнаяФормаБазаСтраховыхВзносов(Макет, "РасчетнаяБазаСтраховыхВзносов", ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СтатистическаяОтчетность") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СтатистическаяОтчетность",
			НСтр("ru = 'Список начислений'"),
			ПечатнаяФормаСтатистическаяОтчетность(Макет, "СтатистическаяОтчетность", ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СоставФОТ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СоставФОТ",
			НСтр("ru = 'Состав ФОТ'"),
			ПечатнаяФормаСоставФОТ(Макет, "СоставФОТ", ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

#Область ПроцедурыПечатиСписковНачислений

Функция ПечатнаяФормаБазаНДФЛ(Макет, ЗаголовокСписка, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписокНачислений";
	ТабДокумент.Защита = Ложь;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаВидРасчета = Макет.ПолучитьОбласть("Шапка|ВидРасчета");
	ОбластьШапкаКодДоходаНДФЛ = Макет.ПолучитьОбласть("Шапка|КодДоходаНДФЛ");
	ОбластьСтрокаВидРасчета = Макет.ПолучитьОбласть("СтрокаТаблицы|ВидРасчета");
	ОбластьСтрокаКодДоходаНДФЛ = Макет.ПолучитьОбласть("СтрокаТаблицы|КодДоходаНДФЛ");
	
	ДанныеДляПечати = ОблагаемаяБазаНДФЛ();
	
	ОбластьЗаголовок.Параметры.ЗаголовокСписка = НСтр("ru = 'Облагаемая база НДФЛ'");
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ТабДокумент.Вывести(ОбластьШапкаВидРасчета);
	ТабДокумент.Присоединить(ОбластьШапкаКодДоходаНДФЛ);
	
	Выборка = ДанныеДляПечати.ОблагаетсяНДФЛ.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ОбластьСтрокаВидРасчета.Параметры.ВидРасчета = Выборка.ВидРасчетаНаименование;
		ОбластьСтрокаКодДоходаНДФЛ.Параметры.КодДоходаНДФЛ = Выборка.КодДоходаНДФЛСтрока;
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьСтрокаВидРасчета) Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрокаВидРасчета);
		ТабДокумент.Присоединить(ОбластьСтрокаКодДоходаНДФЛ);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, Выборка.ВидРасчета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатнаяФормаБазаСреднегоЗаработкаОбщего(Макет, ЗаголовокСписка, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписокНачислений";
	ТабДокумент.Защита = Ложь;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаВидРасчета = Макет.ПолучитьОбласть("Шапка|ВидРасчета");
	ОбластьШапкаУчетНачислений = Макет.ПолучитьОбласть("Шапка|УчетНачислений");
	ОбластьШапкаИндексируется = Макет.ПолучитьОбласть("Шапка|Индексируется");
	ОбластьСтрокаВидРасчета = Макет.ПолучитьОбласть("СтрокаТаблицы|ВидРасчета");
	ОбластьСтрокаУчетНачислений = Макет.ПолучитьОбласть("СтрокаТаблицы|УчетНачислений");
	ОбластьСтрокаИндексируется = Макет.ПолучитьОбласть("СтрокаТаблицы|Индексируется");
	
	ДанныеДляПечати = СоставСреднегоЗаработкаОбщего();
	
	ОбластьЗаголовок.Параметры.ЗаголовокСписка = НСтр("ru = 'Состав среднего заработка (командировки, отпуска и др.)'");
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ТабДокумент.Вывести(ОбластьШапкаВидРасчета);
	ТабДокумент.Присоединить(ОбластьШапкаУчетНачислений);
	ТабДокумент.Присоединить(ОбластьШапкаИндексируется);
	
	Выборка = ДанныеДляПечати.ВходитВСоставСреднегоЗаработка.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ОбластьСтрокаВидРасчета.Параметры.ВидРасчета = Выборка.ВидРасчетаНаименование;
		ОбластьСтрокаУчетНачислений.Параметры.УчетНачислений = Выборка.УчетНачисленийВСреднемЗаработкеОбщий;
		ОбластьСтрокаИндексируется.Параметры.Индексируется = Выборка.Индексируется;
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьСтрокаВидРасчета) Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрокаВидРасчета);
		ТабДокумент.Присоединить(ОбластьСтрокаУчетНачислений);
		ТабДокумент.Присоединить(ОбластьСтрокаИндексируется);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, Выборка.ВидРасчета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатнаяФормаБазаСреднегоЗаработкаФСС(Макет, ЗаголовокСписка, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписокНачислений";
	ТабДокумент.Защита = Ложь;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаВидРасчета = Макет.ПолучитьОбласть("Шапка|ВидРасчета");
	ОбластьСтрокаВидРасчета = Макет.ПолучитьОбласть("СтрокаТаблицы|ВидРасчета");
	
	ДанныеДляПечати = СоставСреднегоЗаработкаФСС();
	
	ОбластьЗаголовок.Параметры.ЗаголовокСписка = НСтр("ru = 'Состав среднего заработка (расчет пособий по правилам до 1 января 2011 года)'");
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ТабДокумент.Вывести(ОбластьШапкаВидРасчета);
	
	Выборка = ДанныеДляПечати.ВходитВСоставСреднегоЗаработка.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ОбластьСтрокаВидРасчета.Параметры.ВидРасчета = Выборка.ВидРасчетаНаименование;
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьСтрокаВидРасчета) Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрокаВидРасчета);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, Выборка.ВидРасчета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатнаяФормаБазаСтраховыхВзносов(Макет,ЗаголовокСписка, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписокНачислений";
	ТабДокумент.Защита = Ложь;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаВидРасчета = Макет.ПолучитьОбласть("Шапка|ВидРасчета");
	ОбластьШапкаКодДоходаСтраховыеВзносы = Макет.ПолучитьОбласть("Шапка|КодДоходаСтраховыеВзносы");
	ОбластьСтрокаВидРасчета = Макет.ПолучитьОбласть("СтрокаТаблицы|ВидРасчета");
	ОбластьСтрокаКодДоходаСтраховыеВзносы = Макет.ПолучитьОбласть("СтрокаТаблицы|КодДоходаСтраховыеВзносы");
	
	ДанныеДляПечати = РасчетнаяБазаСтраховыхВзносов();
	
	ОбластьЗаголовок.Параметры.ЗаголовокСписка = НСтр("ru = 'Расчетная база ПФР, ФСС, ФОМС'");
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ТабДокумент.Вывести(ОбластьШапкаВидРасчета);
	ТабДокумент.Присоединить(ОбластьШапкаКодДоходаСтраховыеВзносы);
	
	Выборка = ДанныеДляПечати.ОблагаетсяЦеликом.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ОбластьСтрокаВидРасчета.Параметры.ВидРасчета = Выборка.ВидРасчетаНаименование;
		ОбластьСтрокаКодДоходаСтраховыеВзносы.Параметры.КодДоходаСтраховыеВзносы = Выборка.КодДоходаСтраховыеВзносыНаименование;
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьСтрокаВидРасчета) Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрокаВидРасчета);
		ТабДокумент.Присоединить(ОбластьСтрокаКодДоходаСтраховыеВзносы);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, Выборка.ВидРасчета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатнаяФормаСтатистическаяОтчетность(Макет, ЗаголовокСписка, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписокНачислений";
	ТабДокумент.Защита = Ложь;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаВидРасчета = Макет.ПолучитьОбласть("Шапка|ВидРасчета");
	ОбластьШапкаКатегорияСтатистическогоНаблюдения = Макет.ПолучитьОбласть("Шапка|СтатистическаяОтчетность");
	ОбластьСтрокаВидРасчета = Макет.ПолучитьОбласть("СтрокаТаблицы|ВидРасчета");
	ОбластьСтрокаКатегорияСтатистическогоНаблюдения = Макет.ПолучитьОбласть("СтрокаТаблицы|СтатистическаяОтчетность");
	
	ДанныеДляПечати = СтатистическаяОтчетность();
	
	ОбластьЗаголовок.Параметры.ЗаголовокСписка = НСтр("ru = 'Статистическая отчетность'");
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ТабДокумент.Вывести(ОбластьШапкаВидРасчета);
	ТабДокумент.Присоединить(ОбластьШапкаКатегорияСтатистическогоНаблюдения);
	
	Выборка = ДанныеДляПечати.СтатистическаяОтчетность.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ОбластьСтрокаВидРасчета.Параметры.ВидРасчета = Выборка.ВидРасчетаНаименование;
		ОбластьСтрокаКатегорияСтатистическогоНаблюдения.Параметры.КатегорияСтатистическогоНаблюдения = Выборка.КатегорияСтатистическогоНаблюдения;
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьСтрокаВидРасчета) Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрокаВидРасчета);
		ТабДокумент.Присоединить(ОбластьСтрокаКатегорияСтатистическогоНаблюдения);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, Выборка.ВидРасчета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатнаяФормаСоставФОТ(Макет, ЗаголовокСписка, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СоставФОТ";
	ТабДокумент.Защита = Ложь;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаВидРасчета = Макет.ПолучитьОбласть("Шапка|ВидРасчета");
	ОбластьСтрокаВидРасчета = Макет.ПолучитьОбласть("СтрокаТаблицы|ВидРасчета");
	
	ДанныеДляПечати = СоставФОТ();
	
	ОбластьЗаголовок.Параметры.ЗаголовокСписка = НСтр("ru = 'Состав ФОТ'");
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ТабДокумент.Вывести(ОбластьШапкаВидРасчета);
	
	Выборка = ДанныеДляПечати.ВходятВФОТ.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ОбластьСтрокаВидРасчета.Параметры.ВидРасчета = Выборка.ВидРасчетаНаименование;
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьСтрокаВидРасчета) Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрокаВидРасчета);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, Выборка.ВидРасчета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ОблагаемаяБазаНДФЛ() Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	Начисления.КодДоходаНДФЛ КАК КодДоходаНДФЛ,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени,
	               |	Начисления.Наименование КАК ВидРасчетаНаименование,
	               |	Начисления.КодДоходаНДФЛ.Код КАК КодДоходаНДФЛСтрока
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.КодДоходаНДФЛ <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию) КАК КодДоходаНДФЛ,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.КодДоходаНДФЛ = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания";
				   
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	БазаНДФЛ = Новый Структура;
	БазаНДФЛ.Вставить("ОблагаетсяНДФЛ", РезультатыЗапроса[0]);
	БазаНДФЛ.Вставить("НеОблагаетсяНДФЛ", РезультатыЗапроса[1]);
	
	Возврат БазаНДФЛ;
	
КонецФункции	

Функция СоставСреднегоЗаработкаОбщего() Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	НачисленияСреднийЗаработокОбщий.Ссылка КАК ВидРасчета,
	               |	НачисленияСреднийЗаработокОбщий.Значение КАК УчетНачисленийВСреднемЗаработкеОбщий,
	               |	НачисленияСреднийЗаработокОбщий.Индексируется КАК Индексируется
	               |ПОМЕСТИТЬ ВТСреднийЗаработокОбщий
	               |ИЗ
	               |	ПланВидовРасчета.Начисления.СреднийЗаработокОбщий КАК НачисленияСреднийЗаработокОбщий
	               |ГДЕ
	               |	НачисленияСреднийЗаработокОбщий.Значение <> ЗНАЧЕНИЕ(Перечисление.УчетНачисленийВСреднемЗаработкеОбщий.НеВключать)
	               |	И НачисленияСреднийЗаработокОбщий.ПорядокРасчета = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаСреднегоЗаработкаОбщий.Постановление2010)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТСреднийЗаработокОбщий.ВидРасчета КАК ВидРасчета,
	               |	ВТСреднийЗаработокОбщий.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
	               |	ВТСреднийЗаработокОбщий.УчетНачисленийВСреднемЗаработкеОбщий КАК УчетНачисленийВСреднемЗаработкеОбщий,
	               |	ВТСреднийЗаработокОбщий.Индексируется КАК Индексируется,
	               |	ВТСреднийЗаработокОбщий.ВидРасчета.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	ВТСреднийЗаработокОбщий.ВидРасчета.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени
	               |ИЗ
	               |	ВТСреднийЗаработокОбщий КАК ВТСреднийЗаработокОбщий
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	ЗНАЧЕНИЕ(Перечисление.УчетНачисленийВСреднемЗаработкеОбщий.ОбщийЗаработок) КАК УчетНачисленийВСреднемЗаработкеОбщий,
	               |	ЛОЖЬ КАК Индексируется,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	НЕ Начисления.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ВТСреднийЗаработокОбщий.ВидРасчета
	               |				ИЗ
	               |					ВТСреднийЗаработокОбщий КАК ВТСреднийЗаработокОбщий)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания";
				   
	РезультатыЗапроса = Запрос.ВыполнитьПакет();			   
	
	БазаСреднегоЗаработкаОбщего = Новый Структура;
	БазаСреднегоЗаработкаОбщего.Вставить("ВходитВСоставСреднегоЗаработка", РезультатыЗапроса[1]);
	БазаСреднегоЗаработкаОбщего.Вставить("НеВходитВСоставСреднегоЗаработка", РезультатыЗапроса[2]);
	
	Возврат БазаСреднегоЗаработкаОбщего;
	
КонецФункции

Функция СоставСреднегоЗаработкаФСС() Экспорт 

	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	НачисленияСреднийЗаработокФСС.Ссылка КАК ВидРасчета
	               |ПОМЕСТИТЬ ВТСреднийЗаработокФСС2010
	               |ИЗ
	               |	ПланВидовРасчета.Начисления.СреднийЗаработокФСС КАК НачисленияСреднийЗаработокФСС
	               |ГДЕ
	               |	НачисленияСреднийЗаработокФСС.ПорядокРасчета = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2010)
	               |	И НачисленияСреднийЗаработокФСС.Значение = ЗНАЧЕНИЕ(Перечисление.УчетНачисленийВСреднемЗаработкеФСС.Включать)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТСреднийЗаработокФСС2010.ВидРасчета КАК ВидРасчета,
	               |	ВТСреднийЗаработокФСС2010.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
	               |	ВТСреднийЗаработокФСС2010.ВидРасчета.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени,
	               |	ВТСреднийЗаработокФСС2010.ВидРасчета.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
	               |ИЗ
	               |	ВТСреднийЗаработокФСС2010 КАК ВТСреднийЗаработокФСС2010
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	НЕ Начисления.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ВТСреднийЗаработокФСС2010.ВидРасчета
	               |				ИЗ
	               |					ВТСреднийЗаработокФСС2010 КАК ВТСреднийЗаработокФСС2010)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания";
				   
	РезультатыЗапроса = Запрос.ВыполнитьПакет();			   
	
	БазаСреднегоЗаработкаФСС = Новый Структура;
	БазаСреднегоЗаработкаФСС.Вставить("ВходитВСоставСреднегоЗаработка", РезультатыЗапроса[1]);
	БазаСреднегоЗаработкаФСС.Вставить("НеВходитВСоставСреднегоЗаработка", РезультатыЗапроса[2]);
	
	Возврат БазаСреднегоЗаработкаФСС;
	
КонецФункции

Функция РасчетнаяБазаСтраховыхВзносов() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	Начисления.Наименование КАК ВидРасчетаНаименование,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени,
	               |	Начисления.КодДоходаСтраховыеВзносы КАК КодДоходаСтраховыеВзносы,
	               |	Начисления.КодДоходаСтраховыеВзносы.Наименование КАК КодДоходаСтраховыеВзносыНаименование,
	               |	ИСТИНА КАК ТолькоПросмотр
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.КодДоходаСтраховыеВзносы.ВходитВБазуПФР = ИСТИНА
	               |	И Начисления.КодДоходаСтраховыеВзносы.ВходитВБазуФСС = ИСТИНА
	               |	И Начисления.КодДоходаСтраховыеВзносы.ВходитВБазуФОМС = ИСТИНА
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени,
	               |	Начисления.КодДоходаСтраховыеВзносы КАК КодДоходаСтраховыеВзносы,
	               |	ИСТИНА КАК ТолькоПросмотр
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.КодДоходаСтраховыеВзносы.ВходитВБазуПФР = ЛОЖЬ
	               |	И Начисления.КодДоходаСтраховыеВзносы.ВходитВБазуФСС = ЛОЖЬ
	               |	И Начисления.КодДоходаСтраховыеВзносы.ВходитВБазуФОМС = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания";
				   
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	БазаСтраховыхВзносов = Новый Структура;
	БазаСтраховыхВзносов.Вставить("ОблагаетсяЦеликом", РезультатыЗапроса[0]);
	БазаСтраховыхВзносов.Вставить("НеОблагается", РезультатыЗапроса[1]);
	
	Возврат БазаСтраховыхВзносов;
	
КонецФункции

Функция СтатистическаяОтчетность() Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	Начисления.КатегорияСтатистическогоНаблюдения КАК КатегорияСтатистическогоНаблюдения,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени,
	               |	Начисления.Наименование КАК ВидРасчетаНаименование
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.КатегорияСтатистическогоНаблюдения <> ЗНАЧЕНИЕ(Перечисление.КатегорииСтатистическогоНаблюдения.ПустаяСсылка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	Начисления.КатегорияСтатистическогоНаблюдения КАК КатегорияСтатистическогоНаблюдения,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.КатегорияСтатистическогоНаблюдения = ЗНАЧЕНИЕ(Перечисление.КатегорииСтатистическогоНаблюдения.ПустаяСсылка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания";
				   
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	БазаНДФЛ = Новый Структура;
	БазаНДФЛ.Вставить("СтатистическаяОтчетность", РезультатыЗапроса[0]);
	БазаНДФЛ.Вставить("НеСтатистическаяОтчетность", РезультатыЗапроса[1]);
	
	Возврат БазаНДФЛ;
	
КонецФункции	

Функция СоставФОТ() Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени,
	               |	Начисления.Наименование КАК ВидРасчетаНаименование
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.СпособВыполненияНачисления В(&СпособВыполненияНачисления)
	               |	И Начисления.ВключатьВФОТ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Начисления.Ссылка КАК ВидРасчета,
	               |	Начисления.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисленияИлиНеоплаченногоВремени,
	               |	Начисления.Наименование КАК ВидРасчетаНаименование
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.СпособВыполненияНачисления В(&СпособВыполненияНачисления)
	               |	И НЕ Начисления.ВключатьВФОТ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитДопУпорядочивания";
				   
	СпособыВыполненияНачисления = Новый Массив;
	СпособыВыполненияНачисления.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВыполненияНачислений.ЕжемесячноПриОкончательномРасчете"));
	СпособыВыполненияНачисления.Добавить(ПредопределенноеЗначение("Перечисление.СпособыВыполненияНачислений.ВЗаданныхМесяцахПриОкончательномРасчете"));
	Запрос.УстановитьПараметр("СпособВыполненияНачисления", СпособыВыполненияНачисления);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	СоставФОТ = Новый Структура;
	СоставФОТ.Вставить("ВходятВФОТ", РезультатыЗапроса[0]);
	СоставФОТ.Вставить("НеВходятВФОТ", РезультатыЗапроса[1]);
	
	Возврат СоставФОТ;
	
КонецФункции	

#КонецОбласти

#КонецОбласти

#КонецЕсли