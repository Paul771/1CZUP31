#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции
	
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаПоРасчетуСуммыДоплатыПособия") Тогда
		ТабличныйДокумент = ТабличныйДокументСправкаПоРасчетуСуммыДоплатыПособия(МассивОбъектов, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СправкаПоРасчетуСуммыДоплатыПособия", "Справка по расчету суммы доплаты пособия", ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

#Область ТабличныйДокументСправкаПоРасчетуСуммыДоплатыПособия

Функция ТабличныйДокументСправкаПоРасчетуСуммыДоплатыПособия(МассивОбъектов, ОбъектыПечати) 
	
	Ошибки = Неопределено;
	 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Организация,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДокументОснование,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.КодПричиныПерерасчета,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерЛисткаНетрудоспособности КАК НомерВходящегоДокумента,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаЛисткаНетрудоспособности,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.РайонныйКоэффициент КАК РК,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.МРОТ * ЗаявлениеСотрудникаНаВыплатуПособия.РазмерСтавки КАК ДоляМРОТ,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФамилияПолучателя + "" "" + ЗаявлениеСотрудникаНаВыплатуПособия.ИмяПолучателя + "" "" + ЗаявлениеСотрудникаНаВыплатуПособия.ОтчествоПолучателя КАК ФИОСотрудника,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ИННПолучателя КАК ИНН,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СНИЛСПолучателя КАК СНИЛССотрудника,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРожденияПолучателя КАК ДатаРождения,
	|	ВЫБОР
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ТипЗанятостиРаботника <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
	|			ТОГДА ""V""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Основное,
	|	ВЫБОР
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ТипЗанятостиРаботника = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
	|			ТОГДА ""V""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Совместительство,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СреднийЗаработокЗаРасчетныйПериод,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ПорядокРасчетаСреднегоЗаработка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ЗаработокПервыйГодРасчета + ЗаявлениеСотрудникаНаВыплатуПособия.ЗаработокВторойГодРасчета КАК ЗаработокВсего,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Перерасчет
	|ПОМЕСТИТЬ ДанныеДокументов
	|ИЗ
	|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|ГДЕ
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	Документы.БольничныйЛист.СоздатьВТДанныеБольничныхЛистов(Запрос.МенеджерВременныхТаблиц, "ДанныеДокументов", "ДокументОснование");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.ДокументОснование,
	|	ДанныеДокументов.КодПричиныПерерасчета,
	|	ДанныеДокументов.НомерВходящегоДокумента,
	|	ДанныеДокументов.ДатаЛисткаНетрудоспособности,
	|	ДанныеДокументов.РК,
	|	ДанныеДокументов.ДоляМРОТ,
	|	ДанныеДокументов.ФИОСотрудника,
	|	ДанныеДокументов.ИНН,
	|	ДанныеДокументов.СНИЛССотрудника,
	|	ДанныеДокументов.ДатаРождения,
	|	ДанныеДокументов.Основное,
	|	ДанныеДокументов.Совместительство,
	|	ДанныеДокументов.НаименованиеОрганизации,
	|	ДанныеДокументов.СреднийЗаработокЗаРасчетныйПериод,
	|	ДанныеДокументов.ПорядокРасчетаСреднегоЗаработка,
	|	ДанныеДокументов.ЗаработокВсего,
	|	ДанныеДокументов.Перерасчет,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.ДатаНачалаОплаты, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачалаОплаты,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.ДатаОкончанияОплаты, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияОплаты,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.ВыплатаЗаСчетФедеральногоБюджета, ЛОЖЬ) КАК ВыплатаЗаСчетФедеральногоБюджета,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.ЗаСчетФСС, 0) КАК ЗаСчетФСС,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.УсловияИсчисленияКод1, """") КАК УсловияИсчисленияКод1,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.УсловияИсчисленияКод2, """") КАК УсловияИсчисленияКод2,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.УсловияИсчисленияКод3, """") КАК УсловияИсчисленияКод3,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.СтажБезНестраховыхПериодовЛет, 0) КАК СтажБезНестраховыхПериодовЛет,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.СтажБезНестраховыхПериодовСтажМесяцев, 0) КАК СтажБезНестраховыхПериодовСтажМесяцев,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.ЛетСтажа, 0) КАК ЛетСтажа,
	|	ЕСТЬNULL(ВТДанныеБольничныхЛистов.МесяцевСтажа, 0) КАК МесяцевСтажа
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеБольничныхЛистов КАК ВТДанныеБольничныхЛистов
	|		ПО ДанныеДокументов.ДокументОснование = ВТДанныеБольничныхЛистов.Ссылка";

	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ЗаявлениеСотрудникаНаВыплатуПособия";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьПрямыеВыплатыПособийСоциальногоСтрахованияФСС.ПФ_MXL_СправкаПоРасчетуСуммыДоплатыПособия");
	
	ДанныеОрганизаций = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.Перерасчет Тогда
			Текст = Нстр("ru = '%1 не является перерасчетом пособия за счет ФСС. Справка-расчет суммы доплаты пособия возможна только для перерасчетов.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.Ссылка); 
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Ссылка", Текст, Неопределено);	
			Продолжить;
		КонецЕсли;

		Если Не ЗначениеЗаполнено(Выборка.КодПричиныПерерасчета) 
			Или Выборка.КодПричиныПерерасчета = 0 Тогда
			Текст = Нстр("ru = 'В %1 не указан код причины перерасчета.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.Ссылка); 
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Ссылка", Текст, Неопределено);	
			Продолжить;
		КонецЕсли;
		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КодПричиныПерерасчета, Макет, "КодПричиныПерерасчета_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.НомерВходящегоДокумента, Макет, "Номер_", 9);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ФИОСотрудника, Макет, "ФИО_Получателя_", 42);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.НаименованиеОрганизации, Макет, "НаименованиеОрганизации_", 29);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.Основное, Макет, "Основное", 1);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.Совместительство, Макет, "Совместительство", 1);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ИНН, Макет, "ИНН_", 12);
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.СНИЛССотрудника, Макет, "СтраховойНомер_", 14);
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаРождения,"ДФ=dd-MM-yyyy"), Макет, "ДатаРождения_", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(Выборка.ЛетСтажа < 10," ","") + Строка(Выборка.ЛетСтажа), Макет, "СтажЛет_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(Выборка.МесяцевСтажа < 10," ","") + Строка(Выборка.МесяцевСтажа), Макет, "СтажМесяцев_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ПустаяСтрока(Выборка.УсловияИсчисленияКод1), "", Выборка.УсловияИсчисленияКод1) + ?(ПустаяСтрока(Выборка.УсловияИсчисленияКод2), "", Выборка.УсловияИсчисленияКод2) + ?(ПустаяСтрока(Выборка.УсловияИсчисленияКод3), "", Выборка.УсловияИсчисленияКод3), Макет, "УсловияИсчисленияКод_", 6);
		Если Выборка.ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ОснованияФинансированияПособияФедеральнымБюджетом.ЗачетНестраховыхПериодов Тогда
			ЛетСтажа = 0;
			МесяцевСтажа = 0;
			
			РазностьСтажей 	= УчетПособийСоциальногоСтрахования.ПодсчитатьРазностьСтажейВГодахИМесяцах(Выборка.ЛетСтажа,
																										Выборка.МесяцевСтажа, 
																										Выборка.СтажБезНестраховыхПериодовЛет, 
																										Выборка.СтажБезНестраховыхПериодовСтажМесяцев);
			ЛетСтажа 		= РазностьСтажей.РазностьЛет;
			МесяцевСтажа 	= РазностьСтажей.РазностьМесяцев;

			Если ЛетСтажа > 0 Или МесяцевСтажа > 0 Тогда
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ЛетСтажа < 10," ","") + Строка(ЛетСтажа), Макет, "НестраховыеПериодыЛет_", 2);
				ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(МесяцевСтажа < 10," ","") + Строка(МесяцевСтажа), Макет, "НестраховыеПериодыМесяцев_", 2);
			КонецЕсли;
		КонецЕсли;
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаНачалаОплаты,"ДФ=dd-MM-yyyy"), Макет, "ДатаНачалаОплаты_", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаОкончанияОплаты,"ДФ=dd-MM-yyyy"), Макет, "ДатаОкончания_", 10);
		Если ЗначениеЗаполнено(Выборка.ЗаСчетФСС) Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ЗаСчетФСС, 9), Макет, "ЗаСчетФСС_", 9);
		КонецЕсли;
		
		Если Выборка.ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ЗаработокВсего, 10), Макет, "СреднийЗаработок_", 10);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(Выборка.СреднийЗаработокЗаРасчетныйПериод, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
		Иначе
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ДоляМРОТ * 24, 10), Макет, "СреднийЗаработок_", 10);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(Выборка.ДоляМРОТ * 24 / 730, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
		КонецЕсли;
		
		ДанныеОрганизации = ДанныеОрганизаций.Получить(Выборка.Организация);
		Если ДанныеОрганизации = Неопределено Тогда
			
			ДанныеОрганизации = Новый Структура("РегистрационныйНомерФСС,КодПодчиненностиФСС,ДополнительныйКодФСС,Руководитель,ГлавныйБухгалтер");
			
			РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Организация, "РегистрационныйНомерФСС, КодПодчиненностиФСС, ДополнительныйКодФСС");
			ДанныеОрганизации.РегистрационныйНомерФСС  = РеквизитыОрганизации.РегистрационныйНомерФСС;
			ДанныеОрганизации.КодПодчиненностиФСС  = РеквизитыОрганизации.КодПодчиненностиФСС;
			ДанныеОрганизации.ДополнительныйКодФСС  = РеквизитыОрганизации.ДополнительныйКодФСС;
			
			ЗаполняемыеЗначения = Новый Структура("Организация,Руководитель,ГлавныйБухгалтер", Выборка.Организация);
			ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗаполняемыеЗначения);
			
			СписокФизлицРуководства = Новый Массив;
			Если ЗначениеЗаполнено(ЗаполняемыеЗначения.Руководитель) Тогда
				СписокФизлицРуководства.Добавить(ЗаполняемыеЗначения.Руководитель);
			КонецЕсли;
			Если ЗначениеЗаполнено(ЗаполняемыеЗначения.ГлавныйБухгалтер) Тогда
				СписокФизлицРуководства.Добавить(ЗаполняемыеЗначения.ГлавныйБухгалтер);
			КонецЕсли;
			
			КадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, СписокФизлицРуководства, "ФамилияИО");
			
			Если ЗначениеЗаполнено(ЗаполняемыеЗначения.Руководитель) Тогда
				ФИО = КадровыеДанныеФизическихЛиц.Найти(ЗаполняемыеЗначения.Руководитель, "ФизическоеЛицо");
				ДанныеОрганизации.Руководитель = ?(ФИО <> Неопределено, ФИО.ФамилияИО,"");
			КонецЕсли;
			Если ЗначениеЗаполнено(ЗаполняемыеЗначения.ГлавныйБухгалтер) Тогда
				ФИО = КадровыеДанныеФизическихЛиц.Найти(ЗаполняемыеЗначения.ГлавныйБухгалтер, "ФизическоеЛицо");
				ДанныеОрганизации.ГлавныйБухгалтер = ?(ФИО <> Неопределено, ФИО.ФамилияИО,"");
		КонецЕсли;
			
			ДанныеОрганизаций.Вставить(Выборка.Организация, ДанныеОрганизации);
			
		КонецЕсли;

		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.РегистрационныйНомерФСС, Макет, "РегистрационныйНомер_", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.ДополнительныйКодФСС, Макет, "ДополнительныйКод_", 10);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.КодПодчиненностиФСС, Макет, "КодПодчиненности_", 5);
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.Руководитель, Макет, "ФИОруководителя_", 20);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДанныеОрганизации.ГлавныйБухгалтер, Макет, "ФИОбухгалтера_", 20);
		
		ТабличныйДокумент.Вывести(Макет);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
	Возврат ТабличныйДокумент
	
КонецФункции // ПечатьСправкаПоРасчетуСуммыДоплатыПособия()

Функция СуммаДляПечатиПоБуквенно(Сумма, Длина)

	Возврат СтрЗаменить(Прав("                  " + Формат(Сумма, "ЧЦ=" + Длина + "; ЧДЦ=2; ЧРД=.; ЧН=' .  '; ЧГ=0"), Длина),".","р")	

КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли