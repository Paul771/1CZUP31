
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Выполняет поиск документов по заданным параметрам отбора.
//
// Параметры:
//	Организация
//	ФизическоеЛицо
//	Страхователь
//	Год
//
// Возвращаемое значение — массив документов.
//
Функция ВходящиеСправкиОЗаработкеПоОтбору(Организация, ФизическоеЛицо, Страхователь, Год) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВходящаяСправка.Ссылка
	|ИЗ
	|	Документ.ВходящаяСправкаОЗаработкеДляРасчетаПособий.ДанныеОЗаработке КАК ТаблицаДанныеОЗаработке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВходящаяСправкаОЗаработкеДляРасчетаПособий КАК ВходящаяСправка
	|		ПО ТаблицаДанныеОЗаработке.Ссылка = ВходящаяСправка.Ссылка
	|			И (ВходящаяСправка.Организация = &Организация)
	|			И (ВходящаяСправка.ФизическоеЛицо = &ФизическоеЛицо)
	|			И (ВходящаяСправка.Страхователь = &Страхователь)
	|			И (ТаблицаДанныеОЗаработке.РасчетныйГод = &Год)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("Страхователь", Страхователь);
	Запрос.УстановитьПараметр("Год", Год);
	
	ВходящиеСправки = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ВходящиеСправки.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ВходящиеСправки;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ВходящаяСправкаОЗаработкеДляРасчетаПособий;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическоеЛицоВШапке(МетаданныеДокумента);
	
КонецФункции

// См. ЗащитаПерсональныхДанныхПереопределяемый.ЗаполнитьСведенияОПерсональныхДанных.
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект          = "Документ.ВходящаяСправкаОЗаработкеДляРасчетаПособий";
	НовыеСведения.ПоляРегистрации = "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа     = "ДанныеОЗаработке.Заработок";
	НовыеСведения.ОбластьДанных   = "Доходы";
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли