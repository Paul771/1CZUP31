#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный",
			"Объект.Организация",
			"Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
		
		Объект.РеестрСоставил = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ответственный, "ФизическоеЛицо");
		
		ПриПолученииДанныхНаСервере("Объект");
		
		Объект.СтатусДокумента = Перечисления.СтатусыЗаявленийИРеестровНаВыплатуПособий.ВРаботе;
		
	КонецЕсли;
	
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодПричиныНетрудоспособности(Элементы.КодПричиныНетрудоспособности);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодПричиныНетрудоспособности(Элементы.ВторойКодПричиныНетрудоспособности);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораДополнительныйКодПричиныНетрудоспособности(Элементы.ДополнительныйКодПричиныНетрудоспособности);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодНарушенияРежима(Элементы.КодНарушенияРежима);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораГруппаИнвалидности(Элементы.ГруппаИнвалидности);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораИное(Элементы.НовыйСтатусНетрудоспособного);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод1);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод2);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораКодУсловийИсчисления(Элементы.УсловияИсчисленияКод3);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораТипРодственнойСвязи(Элементы.ПоУходуРодственнаяСвязь1);
	ПрямыеВыплатыПособийСоциальногоСтрахованияФормы.ЗаполнитьСписокВыбораТипРодственнойСвязи(Элементы.ПоУходуРодственнаяСвязь2);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// РегламентированнаяОтчетность
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект, "ФСС");
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОтметитьКакПрочтенное(Объект.Ссылка);
	// Конец РегламентированнаяОтчетность
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ФиксацияСохранитьРеквизитыФормыФикс(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ФиксацияЗаполнитьИдентификаторыФиксТЧ(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// РегламентированнаяОтчетность
	СохранитьСтатусОтправки(ЭтотОбъект, Объект.Ссылка);
	// Конец РегламентированнаяОтчетность
	
	ФиксацияЗаполнитьРеквизитыФормыФикс(ТекущийОбъект);
	ФиксацияУстановитьОбъектЗафиксирован();
	ФиксацияОбновитьФиксациюВФорме();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ДокументОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ОбработатьСообщенияПользователю(ДокументОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ДокументБольничныйЛистПослеЗаписи" Тогда
		СтрокиСИзменившимсяБольничным = Объект.СведенияНеобходимыеДляНазначенияПособий.НайтиСтроки(Новый Структура("ПервичныйДокумент", Параметр.Ссылка));
		Если СтрокиСИзменившимсяБольничным.Количество() > 0 Тогда
			
			МассивДокументов = Новый Массив;
			
			Для каждого СтрокаСИзменившимсяБольничным Из СтрокиСИзменившимсяБольничным Цикл
				МассивДокументов.Добавить(СтрокаСИзменившимсяБольничным.Заявление);
			КонецЦикла;
			
			ОбновитьВторичныеДанныеДокумента(Ложь, Истина, МассивДокументов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидПособияПриИзменении(Элемент)
	УстановитьСтраницы(Элементы, Объект.ВидРеестра);
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура МедицинскаяОрганизацияПриИзменении(Элемент)
	Идентификатор = ЭтотОбъект.Элементы["СведенияНеобходимыеДляНазначенияПособий"].ТекущаяСтрока;
	
	МедицинскаяОрганизацияПриИзмененииНаСервере(Идентификатор);
	
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "МедицинскаяОрганизация", 				Идентификатор);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "НаименованиеМедицинскойОрганизации", 	Идентификатор);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "АдресМедицинскойОрганизации", 		Идентификатор);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, "ОГРНМедицинскойОрганизации", 			Идентификатор);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСведенияНеобходимыеДляНазначенияПособий

&НаКлиенте
Процедура СведенияНеобходимыеДляНазначенияПособийПриАктивизацииСтроки(Элемент)
	ИдентификаторСтроки = Элементы.СведенияНеобходимыеДляНазначенияПособий.ТекущаяСтрока;
	Если ИдентификаторСтроки <> Неопределено Тогда
		СведенияНеобходимыеДляНазначенияПособийПриАктивизацииСтрокиНаСервере(ИдентификаторСтроки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СведенияНеобходимыеДляНазначенияПособийЗаявлениеПриИзменении(Элемент)
	ЗаполнитьСтрокуСведений(Элементы.СведенияНеобходимыеДляНазначенияПособий.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СведенияНеобходимыеДляНазначенияПособийПослеУдаления(Элемент)
	СведенияНеобходимыеДляНазначенияПособийПослеУдаленияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СведенияНеобходимыеДляНазначенияПособийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	СведенияНеобходимыеДляНазначенияПособийПриОкончанииРедактированияНаСервере(Элементы.СведенияНеобходимыеДляНазначенияПособий.ТекущаяСтрока);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	Обработчик = Новый ОписаниеОповещения("ОтправитьВКонтролирующийОрганПослеПроверки", ЭтотОбъект);
	ЗаписатьИПроверитьПоРегламентуФСС(Обработчик, РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	Обработчик = Новый ОписаниеОповещения("ПроверитьВИнтернетеПослеПроверки", ЭтотОбъект);
	ЗаписатьИПроверитьПоРегламентуФСС(Обработчик, РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Не ЗначениеЗаполнено(Объект.ВидРеестра) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указан вид реестра.'"), , "ВидРеестра", "Объект");
		Возврат;
	КонецЕсли;
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьФайл(Команда)
	Обработчик = Новый ОписаниеОповещения("ЗаписатьФайлДокументаПослеПроверки", ЭтотОбъект);
	ЗаписатьИПроверитьПоРегламентуФСС(Обработчик, РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсеИсправления(Команда)
	ОтменитьВсеИсправленияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВторичныеДанные(Команда)
	ОбновитьВторичныеДанныеДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьФайл(Команда)
	Обработчик = Новый ОписаниеОповещения("ПоказатьФайлПослеПроверки", ЭтотОбъект);
	ЗаписатьИПроверитьПоРегламентуФСС(Обработчик, РежимЗаписиДокумента.Проведение);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
	ФиксацияВторичныхДанныхВДокументахФормы.ИнициализироватьМеханизмФиксацииРеквизитов(ЭтотОбъект, ТекущийОбъект);
	ОписаниеЭлементов = ФиксацияЭлементыОбработчикаЗафиксироватьИзменение(ЭтотОбъект["ПараметрыФиксацииВторичныхДанных"]);
	ФиксацияВторичныхДанныхВДокументахФормы.ПодключитьОбработчикиФиксацииИзмененийРеквизитов(ЭтотОбъект, ОписаниеЭлементов);
	
	ДополнитьФорму();
	ОбновитьВторичныеДанныеДокумента();
	ФиксацияОбновитьФиксациюВФорме();
КонецПроцедуры

#Область РаботаСФормой

&НаСервере
Процедура МедицинскаяОрганизацияПриИзмененииНаСервере(ИдентификаторСтроки)
	
	ТекущееЗаявление = Объект.СведенияНеобходимыеДляНазначенияПособий.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если ТекущееЗаявление = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияРеквизитовМедицинскойОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущееЗаявление.МедицинскаяОрганизация, "Наименование,ОГРН,Адрес");
	ТекущееЗаявление.НаименованиеМедицинскойОрганизации = ЗначенияРеквизитовМедицинскойОрганизации.Наименование;
	ТекущееЗаявление.АдресМедицинскойОрганизации = ЗначенияРеквизитовМедицинскойОрганизации.Адрес;
	ТекущееЗаявление.ОГРНМедицинскойОрганизации = ЗначенияРеквизитовМедицинскойОрганизации.ОГРН;
	
КонецПроцедуры

&НаСервере
Функция ОбъектЗафиксирован() Экспорт
	
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ОбъектЗафиксирован();
	
КонецФункции

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СброситьФиксациюИзмененийРеквизитовПоОснованиюЗаполнения(ЭтотОбъект, "Организация");
	ОбновитьВторичныеДанныеДокумента(Истина, Ложь);
	ФиксацияОбновитьФиксациюВФорме();
	// РегламентированнаяОтчетность
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект, "ФСС");
	// Конец РегламентированнаяОтчетность
КонецПроцедуры

&НаСервере
Процедура СведенияНеобходимыеДляНазначенияПособийПриАктивизацииСтрокиНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.СведенияНеобходимыеДляНазначенияПособий.НайтиПоИдентификатору(ИдентификаторСтроки);
	ОтключитьПредупреждения = ТекущаяСтрока = Неопределено Или Не ЗначениеЗаполнено(ТекущаяСтрока.Заявление);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьОтображениеПредупрежденийТЧ(
		ЭтотОбъект,
		"СведенияНеобходимыеДляНазначенияПособий",
		ИдентификаторСтроки,
		ОтключитьПредупреждения);
КонецПроцедуры

&НаСервере
Процедура СведенияНеобходимыеДляНазначенияПособийПриОкончанииРедактированияНаСервере(ИдентификаторСтроки)
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СброситьФиксациюИзмененийРеквизитовПоОснованиюЗаполнения(
		ЭтотОбъект,
		"ПервичныйДокумент",
		ИдентификаторСтроки);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СброситьФиксациюИзмененийРеквизитовПоОснованиюЗаполнения(
		ЭтотОбъект,
		"МедицинскаяОрганизация",
		ИдентификаторСтроки);
КонецПроцедуры

&НаСервере
Процедура СведенияНеобходимыеДляНазначенияПособийПослеУдаленияНаСервере()
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ДополнитьФорму()
	ЗарплатаКадры.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтотОбъект);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	УстановитьСтраницы(Элементы, Объект.ВидРеестра);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницы(Элементы, ВидРеестра)
	
	Если ВидРеестра = ПредопределенноеЗначение("Перечисление.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕдиновременныеПособияПриРожденииРебенка") Тогда
		Элементы.СтраницыДанныеСтроки.ТекущаяСтраница = Элементы.СтраницыДанныеСтроки.ПодчиненныеЭлементы.СтраницаЕдиновременноеПриРождении;
		Элементы.СведенияНеобходимыеДляНазначенияПособийПервичныйДокумент.Видимость = Ложь;
	ИначеЕсли ВидРеестра = ПредопределенноеЗначение("Перечисление.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияВставшимНаУчетВРанниеСроки") Тогда
		Элементы.СтраницыДанныеСтроки.ТекущаяСтраница = Элементы.СтраницыДанныеСтроки.ПодчиненныеЭлементы.СтраницаПособияВставшимНаУчетВРанниеСроки;
		Элементы.СведенияНеобходимыеДляНазначенияПособийПервичныйДокумент.Видимость = Ложь;
	ИначеЕсли ВидРеестра = ПредопределенноеЗначение("Перечисление.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности") Тогда
		Элементы.СтраницыДанныеСтроки.ТекущаяСтраница = Элементы.СтраницыДанныеСтроки.ПодчиненныеЭлементы.СтраницаНетрудоспособность;
		Элементы.СведенияНеобходимыеДляНазначенияПособийПервичныйДокумент.Видимость = Истина;
	ИначеЕсли ВидРеестра = ПредопределенноеЗначение("Перечисление.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком") Тогда
		Элементы.СтраницыДанныеСтроки.ТекущаяСтраница = Элементы.СтраницыДанныеСтроки.ПодчиненныеЭлементы.СтраницаЕжемесячноеПособиеПоУходуЗаРебенком;
		Элементы.СведенияНеобходимыеДляНазначенияПособийПервичныйДокумент.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИменаРеквизитовСтрокиНаФорме()
	СписокРеквизитов = Новый СписокЗначений;
	СписокРеквизитов.Добавить("НомерЛисткаНетрудоспособности");
	СписокРеквизитов.Добавить("НомерПервичногоЛисткаНетрудоспособности");
	СписокРеквизитов.Добавить("ДатаВыдачиЛисткаНетрудоспособности");
	СписокРеквизитов.Добавить("ЯвляетсяПервичнымЛисткомНетрудоспособности");
	СписокРеквизитов.Добавить("ЭтоЭЛН");
	СписокРеквизитов.Добавить("ПредоставленДубликатЛисткаНетрудоспособности");
	СписокРеквизитов.Добавить("ДатаВыдачиЛисткаНетрудоспособности");
	СписокРеквизитов.Добавить("МедицинскаяОрганизация");
	СписокРеквизитов.Добавить("АдресМедицинскойОрганизации");
	СписокРеквизитов.Добавить("ОГРНМедицинскойОрганизации");
	СписокРеквизитов.Добавить("НомерЛисткаПоОсновномуМестуРаботы");
	СписокРеквизитов.Добавить("ДатаИзмененияКодаПричиныНетрудоспособности");
	СписокРеквизитов.Добавить("ДатаОкончанияПутевки");
	СписокРеквизитов.Добавить("НомерПутевки");
	СписокРеквизитов.Добавить("ОГРН_Санатория");
	СписокРеквизитов.Добавить("КодПричиныНетрудоспособности");
	СписокРеквизитов.Добавить("ДополнительныйКодПричиныНетрудоспособности");
	СписокРеквизитов.Добавить("ВторойКодПричиныНетрудоспособности");
	СписокРеквизитов.Добавить("ПоУходуВозрастЛет1");
	СписокРеквизитов.Добавить("ПоУходуВозрастМесяцев1");
	СписокРеквизитов.Добавить("ПоУходуРодственнаяСвязь1");
	СписокРеквизитов.Добавить("ПоУходуФИО1");
	СписокРеквизитов.Добавить("ПоУходуИспользованоДней1");
	СписокРеквизитов.Добавить("ПоУходуВозрастЛет2");
	СписокРеквизитов.Добавить("ПоУходуВозрастМесяцев2");
	СписокРеквизитов.Добавить("ПоУходуРодственнаяСвязь2");
	СписокРеквизитов.Добавить("ПоУходуФИО2");
	СписокРеквизитов.Добавить("ПоУходуИспользованоДней2");
	СписокРеквизитов.Добавить("ПоставленаНаУчетВРанниеСрокиБеременности");
	СписокРеквизитов.Добавить("КодНарушенияРежима");
	СписокРеквизитов.Добавить("ДатаНарушенияРежима");
	СписокРеквизитов.Добавить("ПериодНахожденияВСтационареСРебенкомС");
	СписокРеквизитов.Добавить("ПериодНахожденияВСтационареСРебенкомПо");
	СписокРеквизитов.Добавить("ДатаНаправленияВБюроМСЭ");
	СписокРеквизитов.Добавить("ДатаРегистрацииДокументовМСЭ");
	СписокРеквизитов.Добавить("ДатаОсвидетельствованияМСЭ");
	СписокРеквизитов.Добавить("ОсвобождениеДатаНачала1");
	СписокРеквизитов.Добавить("ОсвобождениеДатаОкончания1");
	СписокРеквизитов.Добавить("ОсвобождениеДолжностьВрача1");
	СписокРеквизитов.Добавить("ОсвобождениеФИОВрача1");
	СписокРеквизитов.Добавить("ОсвобождениеИдентификационныйНомерВрача1");
	СписокРеквизитов.Добавить("ОсвобождениеФИОВрачаПредседателяВК1");
	СписокРеквизитов.Добавить("ОсвобождениеДолжностьВрачаПредседателяВК1");
	СписокРеквизитов.Добавить("ОсвобождениеИдентификационныйНомерВрачаПредседателяВК1");
	СписокРеквизитов.Добавить("ОсвобождениеДатаНачала2");
	СписокРеквизитов.Добавить("ОсвобождениеДатаОкончания2");
	СписокРеквизитов.Добавить("ОсвобождениеДолжностьВрача2");
	СписокРеквизитов.Добавить("ОсвобождениеФИОВрача2");
	СписокРеквизитов.Добавить("ОсвобождениеИдентификационныйНомерВрача2");
	СписокРеквизитов.Добавить("ОсвобождениеФИОВрачаПредседателяВК2");
	СписокРеквизитов.Добавить("ОсвобождениеДолжностьВрачаПредседателяВК2");
	СписокРеквизитов.Добавить("ОсвобождениеИдентификационныйНомерВрачаПредседателяВК2");
	СписокРеквизитов.Добавить("ОсвобождениеДатаНачала3");
	СписокРеквизитов.Добавить("ОсвобождениеДатаОкончания3");
	СписокРеквизитов.Добавить("ОсвобождениеДолжностьВрача3");
	СписокРеквизитов.Добавить("ОсвобождениеФИОВрача3");
	СписокРеквизитов.Добавить("ОсвобождениеИдентификационныйНомерВрача3");
	СписокРеквизитов.Добавить("ОсвобождениеФИОВрачаПредседателяВК3");
	СписокРеквизитов.Добавить("ОсвобождениеДолжностьВрачаПредседателяВК3");
	СписокРеквизитов.Добавить("ОсвобождениеИдентификационныйНомерВрачаПредседателяВК3");
	СписокРеквизитов.Добавить("ПриступитьКРаботеС");
	СписокРеквизитов.Добавить("ДатаНовыйСтатусНетрудоспособного");
	СписокРеквизитов.Добавить("НовыйСтатусНетрудоспособного");
	СписокРеквизитов.Добавить("НомерЛисткаПродолжения");
	СписокРеквизитов.Добавить("УсловияИсчисленияКод1");
	СписокРеквизитов.Добавить("УсловияИсчисленияКод2");
	СписокРеквизитов.Добавить("УсловияИсчисленияКод3");
	СписокРеквизитов.Добавить("ДатаАктаН1");
	СписокРеквизитов.Добавить("ДатаНачалаРаботы");
	СписокРеквизитов.Добавить("ОчередностьРожденияРебенка");
	СписокРеквизитов.Добавить("ОдновременныйУходЗаНесколькимиДетьми");
	СписокРеквизитов.Добавить("ДатаРожденияРебенка");
	СписокРеквизитов.Добавить("ВидПодтверждающегоДокумента");
	СписокРеквизитов.Добавить("НаименованиеПодтверждающегоДокумента");
	СписокРеквизитов.Добавить("ДатаДокумента");
	СписокРеквизитов.Добавить("СерияДокумента");
	СписокРеквизитов.Добавить("НомерДокумента");
	СписокРеквизитов.Добавить("НаличиеРешенияСудаОЛишенииПрав");
	СписокРеквизитов.Добавить("ФамилияРебенка");
	СписокРеквизитов.Добавить("ИмяРебенка");
	СписокРеквизитов.Добавить("ОтчествоРебенка");
	
	Возврат СписокРеквизитов
КонецФункции

&НаСервере
Процедура ОбработатьСообщенияПользователю(ДокументОбъект, Сообщения = Неопределено)
	Если Сообщения = Неопределено Тогда
		Сообщения = ПолучитьСообщенияПользователю(Ложь);
	КонецЕсли;
	Для Каждого Сообщение Из Сообщения Цикл
		// Привязка сообщений к объекту.
		Если Не ЗначениеЗаполнено(Сообщение.КлючДанных)
			И Не ЗначениеЗаполнено(Сообщение.ПутьКДанным)
			И Не СтрНачинаетсяС(Сообщение.Поле, "Объект.") Тогда
			Сообщение.ПутьКДанным = "Объект";
		КонецЕсли;
		// Адаптация к специфике редактирования данных в форме.
		НачалоСкобки = СтрНайти(Сообщение.Поле, "[");
		Если НачалоСкобки = 0 Тогда
			Продолжить;
		КонецЕсли;
		ОкончаниеСкобки = СтрНайти(Сообщение.Поле, "].");
		Если НачалоСкобки > ОкончаниеСкобки Тогда
			Продолжить;
		КонецЕсли;
		ИмяТаблицы   = Лев(Сообщение.Поле, НачалоСкобки - 1);
		ИндексСтроки = Сред(Сообщение.Поле, НачалоСкобки + 1, ОкончаниеСкобки - НачалоСкобки - 1);
		ИмяРеквизита = Сред(Сообщение.Поле, ОкончаниеСкобки + 2);
		Если ИмяТаблицы = "СведенияНеобходимыеДляНазначенияПособий"
			И ИмяРеквизита <> "НомерСтроки"
			И ИмяРеквизита <> "Сотрудник"
			И ИмяРеквизита <> "ПервичныйДокумент"
			И ИмяРеквизита <> "Заявление" Тогда
			СтрокаТаблицы = ДокументОбъект.СведенияНеобходимыеДляНазначенияПособий[Число(ИндексСтроки)];
			Если (ИмяРеквизита = "ПорядокРасчетаСреднегоЗаработка"
				Или ИмяРеквизита = "ДатаНачалаТрудовогоДоговораПолучателя")
				И ЗначениеЗаполнено(СтрокаТаблицы.Заявление) Тогда
				Сообщение.Поле = ИмяРеквизита;
				Сообщение.КлючДанных = СтрокаТаблицы.Заявление;
			ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицы.ПервичныйДокумент) Тогда
				Сообщение.Поле = ИмяРеквизита;
				Сообщение.КлючДанных = СтрокаТаблицы.ПервичныйДокумент;
			Иначе
				Сообщение.Поле = ИмяТаблицы + "[" + ИндексСтроки + "].НомерСтроки";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДокумента

&НаСервере
Процедура ЗаполнитьНаСервере()
	Запрос = ПрямыеВыплатыПособийСоциальногоСтрахования.ЗапросРеестраПрямыхВыплатПоПервичнымДокументам(Объект, Неопределено, Неопределено);
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	Объект.СведенияНеобходимыеДляНазначенияПособий.Загрузить(ТаблицаЗначений);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуСведений(Идентификатор)
	ТекущаяСтрока = Объект.СведенияНеобходимыеДляНазначенияПособий.НайтиПоИдентификатору(Идентификатор);
	
	СписокРеквизитов = ИменаРеквизитовСтрокиНаФорме();
	Для Каждого Реквизит Из СписокРеквизитов Цикл
		ТекущаяСтрока[Реквизит.Значение] = Неопределено;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.Заявление) Тогда
		Запрос = ПрямыеВыплатыПособийСоциальногоСтрахования.ЗапросРеестраПрямыхВыплатПоПервичнымДокументам(Объект, ТекущаяСтрока.Заявление, Неопределено);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПроверкиЗаполненияПоРегламентуФСС

&НаКлиенте
Процедура ЗаписатьИПроверитьПоРегламентуФСС(ОбработчикЗавершения, РежимЗаписи)
	ОчиститьСообщения();
	
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписи);
	Если Не Записать(ПараметрыЗаписи) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ПроверитьЗаполнениеПоРегламентуФСС();
	
	Если РезультатПроверки.Успех Тогда
		ВыполнитьОбработкуОповещения(ОбработчикЗавершения, Ложь);
	Иначе
		Обработчик = Новый ОписаниеОповещения("ПроверитьПослеОтветаНаВопрос", ЭтотОбъект, ОбработчикЗавершения);
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'В документе обнаружены ошибки (%1).
				|Продолжить (не рекомендуется)?'"),
			РезультатПроверки.КоличествоОшибок);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, НСтр("ru = 'Предупреждение'"));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеПоРегламентуФСС()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Успех = ДокументОбъект.ПроверитьЗаполнениеПоРегламентуФСС();
	Сообщения = ПолучитьСообщенияПользователю(Ложь);
	ОбработатьСообщенияПользователю(ДокументОбъект, Сообщения);
	Возврат Новый Структура("Успех, КоличествоОшибок", Успех, Сообщения.Количество());
КонецФункции

&НаКлиенте
Процедура ПроверитьПослеОтветаНаВопрос(Ответ, ОбработчикЗавершения) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьОбработкуОповещения(ОбработчикЗавершения, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область РаботаСXML

&НаСервереБезКонтекста
Функция ТекстФайлаНаСервере(Ссылка, Отказ)
	ОписаниеФайлаНаСервере = Документы.РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПолучитьОписаниеФайла(Ссылка, Отказ);
	Возврат ОписаниеФайлаНаСервере.ТекстФайла;
КонецФункции

&НаКлиенте
Процедура ПоказатьФайлПослеПроверки(ЕстьОшибки, ПустойПараметр) Экспорт
	Отказ = Ложь;
	ТекстФайла = ТекстФайлаНаСервере(Объект.Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстФайла);
	ТекстовыйДокумент.Показать(, Нстр("ru = 'Файл сведений'"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьФайлДокументаПослеПроверки(ЕстьОшибки, ПустойПараметр) Экспорт
	УчетПособийСоциальногоСтрахованияКлиент.ВыгрузитьДокументОтчетности(Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область КлючевыеРеквизитыЗаполненияФормы

// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	Массив = Новый Массив;
	Массив.Добавить("Объект.СведенияНеобходимыеДляНазначенияПособий");
	Возврат Массив
КонецФункции

// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация",	Нстр("ru = 'организации'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "ВидПособия",	Нстр("ru = 'вида реестра'")));
	Возврат Массив
КонецФункции

#КонецОбласти

#Область МеханизмФиксацииИзменений

&НаСервере
Функция ФиксацияОписаниеФормы(ПараметрыФиксацииВторичныхДанных) Экспорт
	ОписаниеФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеФормы();
	
	ОписаниеЭлементовФормы = Новый Соответствие();
	ОписаниеЭлементаФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеЭлементаФормы();
	ОписаниеЭлементаФормы.ПрефиксПути = "Объект";
	ОписаниеЭлементаФормы.ПрефиксПутиТекущиеДанные = "Элементы.СведенияНеобходимыеДляНазначенияПособий.ТекущиеДанные";
	Для Каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		ОписаниеЭлементовФормы.Вставить(ОписаниеФиксацииРеквизита.Ключ, ОписаниеЭлементаФормы);
	КонецЦикла;
	ОписаниеФормы.Вставить("ОписаниеЭлементовФормы", ОписаниеЭлементовФормы);
	
	ОписаниеФормы.Вставить("ФормаРедактируетсяПослеФиксации", Ложь);
	Возврат ОписаниеФормы;
КонецФункции

&НаСервере
Функция ФиксацияЭлементыОбработчикаЗафиксироватьИзменение(ПараметрыФиксацииВторичныхДанных)
	ИсключаемыеРеквизиты = Новый Массив;
	ИсключаемыеРеквизиты.Добавить("МедицинскаяОрганизация");
	
	БыстрыйПоискРеквизитов = Новый Соответствие; // Ключ - имя элемента, значение - имя реквизита.
	Для Каждого КлючИЗначение Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		ИмяРеквизита = КлючИЗначение.Значение.ИмяРеквизита;
		Если ИсключаемыеРеквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Элементы.Найти(ИмяРеквизита) <> Неопределено Тогда
			БыстрыйПоискРеквизитов.Вставить(ИмяРеквизита, ИмяРеквизита);
		ИначеЕсли Элементы.Найти(КлючИЗначение.Ключ) <> Неопределено Тогда
			БыстрыйПоискРеквизитов.Вставить(КлючИЗначение.Ключ, ИмяРеквизита);
		КонецЕсли;
	КонецЦикла;
	
	Возврат БыстрыйПоискРеквизитов;
КонецФункции

&НаСервере
Процедура ФиксацияОбновитьФиксациюВФорме()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ФиксацияЗаполнитьРеквизитыФормыФикс(ТекущийОбъект)
	ФиксацияВторичныхДанныхВДокументахФормы.ЗаполнитьРеквизитыФормыФикс(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ФиксацияЗаполнитьИдентификаторыФиксТЧ(Форма)
	ОписанияТЧ = Форма["ПараметрыФиксацииВторичныхДанных"]["ОписанияТЧ"];
	Для каждого ОписаниеТЧ Из ОписанияТЧ Цикл
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗаполнитьИдентификаторыФиксТЧ(Форма.Объект[ОписаниеТЧ.Ключ]);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ФиксацияСохранитьРеквизитыФормыФикс(Форма, ТекущийОбъект)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СохранитьРеквизитыФормыФикс(Форма, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Функция ФиксацияПодготовленныйДокумент()
	ФиксацияЗаполнитьИдентификаторыФиксТЧ(ЭтотОбъект);
	ПодготовленныйДокумент = РеквизитФормыВЗначение("Объект");
	ФиксацияСохранитьРеквизитыФормыФикс(ЭтотОбъект, ПодготовленныйДокумент);
	Возврат ПодготовленныйДокумент;
КонецФункции

&НаСервере
Процедура ФиксацияУстановитьОбъектЗафиксирован();
	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьОбъектЗафиксирован(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьВторичныеДанныеДокумента(ДанныеОрганизации = Истина, ДанныеОПособиях = Истина, МассивПервичныхДокументов = Неопределено)
	Если ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбъектФормыЗафиксирован(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Документ = ФиксацияПодготовленныйДокумент();
	Если Документ.ОбновитьВторичныеДанныеДокумента(ДанныеОрганизации, ДанныеОПособиях, МассивПервичныхДокументов) Тогда
		Если Не Документ.ЭтоНовый() Тогда
			ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Истина);
		КонецЕсли;
		ЗначениеВРеквизитФормы(Документ, "Объект");
	КонецЕсли;
	
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
КонецПроцедуры

&НаСервере
Процедура ОтменитьВсеИсправленияНаСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОчиститьФиксациюИзменений(ЭтотОбъект, Объект);
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
	ОбновитьВторичныеДанныеДокумента();
	ФиксацияОбновитьФиксациюВФорме();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(Элемент, СтандартнаяОбработка = Ложь) Экспорт
	ТекущаяСтрока = Элементы.СведенияНеобходимыеДляНазначенияПособий.ТекущаяСтрока;
	ОписаниеЭлементов = ФиксацияЭлементыОбработчикаЗафиксироватьИзменение(ЭтотОбъект["ПараметрыФиксацииВторичныхДанных"]);
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(ЭтотОбъект, Элемент, ОписаниеЭлементов, ТекущаяСтрока);
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область РегламентированнаяОтчетность

// РегламентированнаяОтчетность
&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган", ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФСС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru='Вы уверены, что реестр уже сдан?'"));
	
	ИнтерфейсыВзаимодействияБРОКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьСтатусОтправки(Форма, Ссылка)
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("СсылкаНаОбъект", Ссылка);
	
	ИнтерфейсыВзаимодействияБРО.СохранитьСтатусОтправки(СтруктураПараметров);
КонецПроцедуры
// Конец РегламентированнаяОтчетность

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрганПослеПроверки(ЕстьОшибки, ПустойПараметр) Экспорт
	// РегламентированнаяОтчетность
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект, "ФСС");
	// Конец РегламентированнаяОтчетность
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернетеПослеПроверки(ЕстьОшибки, ПустойПараметр) Экспорт
	// РегламентированнаяОтчетность
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект, "ФСС");
	// Конец РегламентированнаяОтчетность
КонецПроцедуры

#КонецОбласти

#КонецОбласти
