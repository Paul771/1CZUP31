#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПриказОбАттестацииСотрудников;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

#Область ДобавитьКомандыПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьАттестацииСотрудников") Тогда
		
		ДобавитьКомандуПечатиГрафикаАттестации(КомандыПечати);
		
		ДобавитьКомандуПечатиПриказаОПроведенииАттестации(КомандыПечати);
		
		ДобавитьКомандуПечатиИзвещенияСотрудников(КомандыПечати);
		
		ДобавитьКомандуПечатиИзвещенияОтветственных(КомандыПечати);
		
		АттестацииСотрудников.ДобавитьКомандуПечатиАттестационногоЛиста(КомандыПечати);
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.Медицина") Тогда
			
			Модуль = ОбщегоНазначения.ОбщийМодуль("Медицина");
			Модуль.ДобавитьКомандыПечатиПриказаОбАттестации(КомандыПечати);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКомандуПечатиПриказаОПроведенииАттестации(КомандыПечати)
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_ПриказОПроведенииАттестацииСотрудников";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о проведении аттестации'");
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

Процедура ДобавитьКомандуПечатиГрафикаАттестации(КомандыПечати)
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_ГрафикАттестацииСотрудников";
	КомандаПечати.Представление = НСтр("ru = 'График аттестации сотрудников'");
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

Процедура ДобавитьКомандуПечатиИзвещенияСотрудников(КомандыПечати)
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_ИзвещениеСотрудникаОДатеИМестеАттестации";
	КомандаПечати.Представление = НСтр("ru = 'Извещения сотрудников о дате и месте аттестации'");
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

Процедура ДобавитьКомандуПечатиИзвещенияОтветственных(КомандыПечати)
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_ИзвещениеОтветственныхОПредоставленииДокументов";
	КомандаПечати.Представление = НСтр("ru = 'Извещения ответственных о предоставлении документов'");
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

#КонецОбласти

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст
//                           ошибки).
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПриказОПроведенииАттестацииСотрудников") Тогда
		ТабличныйДокумент = ТабличныйДокументПриказОПроведенииАттестации(МассивОбъектов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_ПриказОПроведенииАттестацииСотрудников", НСтр("ru = 'Приказ о проведении аттестации'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ГрафикАттестацииСотрудников") Тогда
		ТабличныйДокумент = ТабличныйДокументГрафикАттестацииСотрудников(МассивОбъектов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_ГрафикАттестацииСотрудников", НСтр("ru = 'График аттестации сотрудников'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ИзвещениеСотрудникаОДатеИМестеАттестации") Тогда
		ТабличныйДокумент = ТабличныйДокументИзвещениеСотрудникаОДатеИМестеАттестации(МассивОбъектов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ИзвещениеСотрудникаОДатеИМестеАттестации", НСтр("ru = 'Извещения сотрудников о дате и месте аттестации'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ИзвещениеОтветственныхОПредоставленииДокументов") Тогда
		ТабличныйДокумент = ТабличныйДокументИзвещениеОтветственныхОПредоставленииДокументов(МассивОбъектов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ИзвещениеОтветственныхОПредоставленииДокументов", НСтр("ru = 'Извещения ответственных о предоставлении документов'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ПриказОбАттестацииИГрафикАттестации

#Область ПриказОПроведенииАттестации

Функция ТабличныйДокументПриказОПроведенииАттестации(ПриказыОбАттестации, ОбъектыПечати)
	
	ДокументРезультат = НовыйДокументРезультат("ПараметрыПечати_ПриказОПроведенииАттестации", ОриентацияСтраницы.Портрет);
	
	Макет 			= УправлениеПечатью.МакетПечатнойФормы("Документ.ПриказОбАттестацииСотрудников.ПФ_MXL_ПриказОПроведенииАттестации");
	ОбластьПриказ 	= Макет.ПолучитьОбласть("Приказ");
	
	ДанныеДляПечати = ДанныеДляПечатиПриказаОбАттестации(ПриказыОбАттестации);
	
	СоставыКомиссий = АттестацииСотрудников.СоставыАттестационныхКомиссийПриказовОбАттестации(ПриказыОбАттестации);

	Пока ДанныеДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 1 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		СоставКомиссии = СоставыКомиссий.Получить(ДанныеДляПечати.Ссылка);
		
		ВывестиПриказОПроведенииАттестации(ДокументРезультат, ОбластьПриказ, ДанныеДляПечати, СоставКомиссии);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДанныеДляПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура ВывестиПриказОПроведенииАттестации(ДокументРезультат, ОбластьПриказ, ДанныеДляПечати, СоставКомиссии)
		
	ДанныеПриказа = Новый Структура;
	ДанныеПриказа.Вставить("НаименованиеОрганизации", 				НаименованиеОрганизации(ДанныеДляПечати));
	ДанныеПриказа.Вставить("НомерПриказа", 							ДанныеДляПечати.НомерПриказа);
	ДанныеПриказа.Вставить("ДатаПриказа", 							Формат(ДанныеДляПечати.ДатаПриказа, "ДЛФ=DD"));
	ДанныеПриказа.Вставить("ПодразделенияИДаты", 					"");
	
	ПредставлениеСоставаКомиссии = ПредставлениеСоставаКомиссии(СоставКомиссии);	
	ДанныеПриказа.Вставить("СоставКомиссии", 						ПредставлениеСоставаКомиссии);
	
	ДанныеПриказа.Вставить("ДатаПредставленияХарактеристик", 		"");
	ДанныеПриказа.Вставить("ДатаПредставленияМатериаловДиректору", 	"");
	ДанныеПриказа.Вставить("ДолжностьРуководителя", 				ДанныеДляПечати.ДолжностьРуководителя);
	ДанныеПриказа.Вставить("ФИОРуководителя", 						ДанныеДляПечати.ФИОРуководителя);
	ДанныеПриказа.Вставить("ФИОНачальникаОтделаКадров", 			ДанныеДляПечати.ФИОНачальникаОтделаКадров);
	
	ЗаполнитьЗначенияСвойств(ОбластьПриказ.Параметры, ДанныеПриказа);
	
	ДокументРезультат.Вывести(ОбластьПриказ);
	
КонецПроцедуры

Функция ПредставлениеСоставаКомиссии(СоставКомиссии)
	
	ПредставлениеСоставаКомиссии = "";
	 
	Для каждого УчастникКомиссии Из СоставКомиссии Цикл
		
		ПредставлениеУчастникаКомиссии = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 - %2", УчастникКомиссии.ФИОПолные, УчастникКомиссии.РольВКомиссии);
		
		ПредставлениеСоставаКомиссии = ПредставлениеСоставаКомиссии + ПредставлениеУчастникаКомиссии + Символы.ПС; 
	
	КонецЦикла;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ПредставлениеСоставаКомиссии, 1);
	
	Возврат ПредставлениеСоставаКомиссии;
	
КонецФункции

#КонецОбласти

#Область ГрафикАттестацииСотрудников

Функция ТабличныйДокументГрафикАттестацииСотрудников(МассивСсылок, ОбъектыПечати)
	
	ДокументРезультат = НовыйДокументРезультат("ПараметрыПечати_ГрафикАттестацииСотрудников", ОриентацияСтраницы.Ландшафт);
	
	ДанныеДляПечати = ДанныеДляПечатиПриказаОбАттестации(МассивСсылок);
	
	Пока ДанныеДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ОбластиМакетаГрафика = ОбластиМакетаГрафикАттестацииСотрудников(ДанныеДляПечати.ВидАттестации);
		
		Если ДокументРезультат.ВысотаТаблицы > 1 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ВывестиГрафикАттестацииСотрудников(ДокументРезультат, ОбластиМакетаГрафика, ДанныеДляПечати);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДанныеДляПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура ВывестиГрафикАттестацииСотрудников(ДокументРезультат, ОбластиМакетаГрафика, ДанныеДляПечати)
	
	ВывестиШапкуГрафикаАттестацииСотрудников(ДокументРезультат, ОбластиМакетаГрафика.ОбластьШапка, ДанныеДляПечати);
	
	ВывестиСтрокиГрафикаАттестацииСотрудников(ДокументРезультат, ОбластиМакетаГрафика.ОбластьСтрока, ДанныеДляПечати);
	
	ВывестиПодвалГрафикаАттестацииСотрудников(ДокументРезультат, ОбластиМакетаГрафика.ОбластьПодвал, ДанныеДляПечати);
	
КонецПроцедуры

Процедура ВывестиШапкуГрафикаАттестацииСотрудников(ДокументРезультат, ОбластьШапка, ДанныеДляПечати)
	
	ДанныеШапки = Новый Структура;
	ДанныеШапки.Вставить("НаименованиеОрганизации", НаименованиеОрганизации(ДанныеДляПечати));
	ДанныеШапки.Вставить("НомерПриказа", 			ДанныеДляПечати.НомерПриказа);
	ДанныеШапки.Вставить("ДатаПриказа", 			Формат(ДанныеДляПечати.ДатаПриказа, "ДЛФ=DD"));
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеШапки);
	
	ДокументРезультат.Вывести(ОбластьШапка);
	
КонецПроцедуры

Процедура ВывестиСтрокиГрафикаАттестацииСотрудников(ДокументРезультат, ОбластьСтрока, ДанныеДляПечати)
	
	НомерПоПорядку 	= 1;
	
	Пока ДанныеДляПечати.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ДанныеДляПечати);
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Новый Структура("НомерПоПорядку", НомерПоПорядку));
		ДокументРезультат.Вывести(ОбластьСтрока);
		НомерПоПорядку = НомерПоПорядку + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиПодвалГрафикаАттестацииСотрудников(ДокументРезультат, ОбластьПодвал, ДанныеДляПечати)
	
	ДанныеПодвала = Новый Структура;
	ДанныеПодвала.Вставить("ФИОРуководителя", 			ДанныеДляПечати.ФИОРуководителя);
	ДанныеПодвала.Вставить("ДолжностьРуководителя", 	ДанныеДляПечати.ДолжностьРуководителя);
	ДанныеПодвала.Вставить("ФИОНачальникаОтделаКадров", ДанныеДляПечати.ФИОНачальникаОтделаКадров);
	
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ДанныеПодвала);
	
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Функция ОбластиМакетаГрафикАттестацииСотрудников(ВидАттестации)
	
	ОбластиМакета = Новый Структура;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") 
		И АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ВидАттестации) Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		ОбластиМакета = Модуль.ОбластиМакетаГрафикАттестацииСотрудников();		
		
	Иначе		
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриказОбАттестацииСотрудников.ПФ_MXL_ГрафикАттестацииСотрудников");
		ОбластиМакета.Вставить("ОбластьШапка", Макет.ПолучитьОбласть("Шапка"));
		ОбластиМакета.Вставить("ОбластьСтрока", Макет.ПолучитьОбласть("Строка"));
		ОбластиМакета.Вставить("ОбластьПодвал", Макет.ПолучитьОбласть("Подвал"));
		
	КонецЕсли;
	
	Возврат ОбластиМакета;
	
КонецФункции
	
#КонецОбласти

Функция ДанныеДляПечатиПриказаОбАттестации(МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	СоздатьВТСотрудникиПриказовОбАттестации(Запрос.МенеджерВременныхТаблиц, МассивСсылок);
	СоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ФИОПолные");
	СоздатьВТКадровыеДанныеОтветственных(Запрос.МенеджерВременныхТаблиц, МассивСсылок, "ФИОПолные");
	СоздатьВТКадровыеДанныеОтветственныхЛицОрганизации(Запрос.МенеджерВременныхТаблиц, МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриказОбАттестации.Ссылка КАК Ссылка,
	|	ПриказОбАттестацииСотрудники.Сотрудник КАК Сотрудник,
	|	ПриказОбАттестацииСотрудники.ВремяАттестации,
	|	ПриказОбАттестацииСотрудники.Подразделение,
	|	ПриказОбАттестацииСотрудники.Должность,
	|	ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания,
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.Ответственный,
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.ДатаПредставленияДокументов,
	|	Организации.НаименованиеПолное,
	|	Организации.НаименованиеСокращенное,
	|	ВТКадровыеДанныеСотрудников.ФИОПолные КАК ФИОСотрудника,
	|	ВТКадровыеДанныеОтветственных.ФИОПолные КАК ФИООтветственного,
	|	ВТКадровыеДанныеРуководителей.ИОФамилия КАК ФИОРуководителя,
	|	ВТКадровыеДанныеНачальниковОтделаКадров.ИОФамилия КАК ФИОНачальникаОтделаКадров,
	|	ПриказОбАттестации.ДолжностьРуководителя,
	|	ПриказОбАттестации.Номер КАК НомерПриказа,
	|	ПриказОбАттестации.Дата КАК ДатаПриказа,
	|	ПриказОбАттестации.ВидАттестации
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников КАК ПриказОбАттестации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.Сотрудники КАК ПриказОбАттестацииСотрудники
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииЗаседанияКомиссии
	|			ПО ПриказОбАттестацииСотрудники.Ссылка = ПриказОбАттестацииЗаседанияКомиссии.Ссылка
	|				И ПриказОбАттестацииСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииЗаседанияКомиссии.ИдентификаторСтрокиЗаседаниеКомиссии
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.ГрафикПредоставленияДокументов КАК ПриказОбАттестацииГрафикПредоставленияДокументов
	|			ПО ПриказОбАттестацииСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииГрафикПредоставленияДокументов.ИдентификаторСтрокиЗаседаниеКомиссии
	|				И ПриказОбАттестацииСотрудники.Подразделение = ПриказОбАттестацииГрафикПредоставленияДокументов.Подразделение
	|				И ПриказОбАттестацииСотрудники.Ссылка = ПриказОбАттестацииГрафикПредоставленияДокументов.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|			ПО ПриказОбАттестацииСотрудники.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|				И (ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания = ВТКадровыеДанныеСотрудников.Период)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственных КАК ВТКадровыеДанныеОтветственных
	|			ПО (ПриказОбАттестацииГрафикПредоставленияДокументов.Ответственный = ВТКадровыеДанныеОтветственных.Сотрудник)
	|				И (ПриказОбАттестацииГрафикПредоставленияДокументов.ДатаПредставленияДокументов = ВТКадровыеДанныеОтветственных.Период)
	|		ПО (ПриказОбАттестацииСотрудники.Ссылка = ПриказОбАттестации.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственныхЛицОрганизации КАК ВТКадровыеДанныеРуководителей
	|		ПО ПриказОбАттестации.Руководитель = ВТКадровыеДанныеРуководителей.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственныхЛицОрганизации КАК ВТКадровыеДанныеНачальниковОтделаКадров
	|		ПО ПриказОбАттестации.НачальникОтделаКадров = ВТКадровыеДанныеНачальниковОтделаКадров.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПриказОбАттестации.Организация = Организации.Ссылка
	|ГДЕ
	|	ПриказОбАттестации.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ФИОСотрудника";
	
	Результат 	= Запрос.Выполнить();

	Возврат Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

#КонецОбласти

#Область ИзвещениеСотрудникаОДатеИМестеАттестации

Функция ТабличныйДокументИзвещениеСотрудникаОДатеИМестеАттестации(ПриказыОбАттестации, ОбъектыПечати)
	
	ДокументРезультат = НовыйДокументРезультат("ПараметрыПечати_ИзвещениеСотрудникаОДатеИМестеАттестации", ОриентацияСтраницы.Портрет);

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриказОбАттестацииСотрудников.ПФ_MXL_ИзвещениеСотрудникаОДатеИМестеАттестации");
	ОбластьИзвещение = Макет.ПолучитьОбласть("Извещение");
	
	ДанныеДляПечати = ДанныеДляПечатиИзвещенияСотрудников(ПриказыОбАттестации);
	
	СоставыКомиссий = АттестацииСотрудников.СоставыАттестационныхКомиссийПриказовОбАттестации(ПриказыОбАттестации);
	
	Пока ДанныеДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачалоДокумента = ДокументРезультат.ВысотаТаблицы + 1;
		ПервыйСотрудник = Истина;
		  
		СоставКомиссии = СоставыКомиссий.Получить(ДанныеДляПечати.Ссылка);
		
		Пока ДанныеДляПечати.Следующий() Цикл
			
			НомерСтрокиНачалоСотрудника = ДокументРезультат.ВысотаТаблицы + 1;
			Если Не ПервыйСотрудник Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйСотрудник = Ложь;
			КонецЕсли;
			
			ВывестиИзвещениеСотрудникаОДатеИМестеАттестации(ДокументРезультат, ОбластьИзвещение, ДанныеДляПечати, СоставКомиссии);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачалоСотрудника, ОбъектыПечати, ДанныеДляПечати.Сотрудник);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачалоДокумента, ОбъектыПечати, ДанныеДляПечати.Ссылка);
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура ВывестиИзвещениеСотрудникаОДатеИМестеАттестации(ДокументРезультат, ОбластьИзвещение, ДанныеДляПечати, СоставКомиссии)
	
	ЗаполнитьЗначенияСвойств(ОбластьИзвещение.Параметры, ДанныеДляПечати);

	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Организация", 	НаименованиеОрганизации(ДанныеДляПечати));
	СтруктураЗаполнения.Вставить("ДатаЗаседания", 	Формат(ДанныеДляПечати.ДатаЗаседания, "ДЛФ=D"));
	СтруктураЗаполнения.Вставить("ВремяАттестации", Формат(ДанныеДляПечати.ВремяАттестации, "ДФ=HH:mm"));
	СтруктураЗаполнения.Вставить("Обращение", 		ОбращениеКСотруднику(ДанныеДляПечати));
	СтруктураЗаполнения.Вставить("ФИОСекретаря", 	АттестацииСотрудников.ФИОЧленаКомиссииПоРоли(СоставКомиссии, Перечисления.РолиЧленовАттестационнойКомиссии.Секретарь));
	ЗаполнитьЗначенияСвойств(ОбластьИзвещение.Параметры, СтруктураЗаполнения);
	
	ДокументРезультат.Вывести(ОбластьИзвещение);
	
КонецПроцедуры

Функция ДанныеДляПечатиИзвещенияСотрудников(ПриказыОбАттестации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	СоздатьВТСотрудникиПриказовОбАттестации(Запрос.МенеджерВременныхТаблиц, ПриказыОбАттестации);
	СоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ФИОПолные,ИОФамилия,Пол");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриказОбАттестацииСотрудниковСотрудники.Ссылка КАК Ссылка,
	|	ПриказОбАттестацииСотрудниковСотрудники.Сотрудник,
	|	ПриказОбАттестацииСотрудниковСотрудники.ВремяАттестации,
	|	ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ДатаЗаседания,
	|	ВЫРАЗИТЬ(ПриказОбАттестацииСотрудниковЗаседанияКомиссии.МестоПроведенияЗаседания КАК СТРОКА(1000)) КАК МестоПроведенияЗаседания,
	|	ВТКадровыеДанныеСотрудников.ФИОПолные КАК ФИОСотрудника,
	|	ВТКадровыеДанныеСотрудников.Пол КАК Пол,
	|	ВТКадровыеДанныеСотрудников.ИОФамилия КАК ФамилияИОСотрудника,
	|	Организации.НаименованиеПолное,
	|	Организации.НаименованиеСокращенное
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников КАК ПриказОбАттестацииСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.Сотрудники КАК ПриказОбАттестацииСотрудниковСотрудники
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииСотрудниковЗаседанияКомиссии
	|			ПО (ПриказОбАттестацииСотрудниковЗаседанияКомиссии.Ссылка = ПриказОбАттестацииСотрудниковСотрудники.Ссылка)
	|				И (ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииСотрудниковСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|			ПО ПриказОбАттестацииСотрудниковСотрудники.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|				И (ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ДатаЗаседания = ВТКадровыеДанныеСотрудников.Период)
	|		ПО (ПриказОбАттестацииСотрудниковСотрудники.Ссылка = ПриказОбАттестацииСотрудников.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПриказОбАттестацииСотрудников.Организация = Организации.Ссылка
	|ГДЕ
	|	ПриказОбАттестацииСотрудников.Ссылка В(&ПриказыОбАттестации)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
                                   
	Возврат Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

#КонецОбласти

#Область ИзвещениеОтветственныхОПредоставленииДокументов

Функция ТабличныйДокументИзвещениеОтветственныхОПредоставленииДокументов(ПриказыОбАттестации, ОбъектыПечати)
	
	ДокументРезультат = НовыйДокументРезультат("ПараметрыПечати_ИзвещениеОтветственныхОПредоставленииДокументов", ОриентацияСтраницы.Портрет);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриказОбАттестацииСотрудников.ПФ_MXL_ИзвещениеОтветственныхОПредоставленииДокументов");
	ОбластьШапка 					= Макет.ПолучитьОбласть("ИзвещениеШапка");
	ОбластьШапкаЗаседания			= Макет.ПолучитьОбласть("ШапкаЗаседания");
	ОбластьАттестуемый 				= Макет.ПолучитьОбласть("Аттестуемый");
	ОбластьПодвал 					= Макет.ПолучитьОбласть("ИзвещениеПодвал");

	ДанныеДляПечати = ДанныеДляПечатиИзвещенияОтветственных(ПриказыОбАттестации);
	
	СоставыКомиссий = АттестацииСотрудников.СоставыАттестационныхКомиссийПриказовОбАттестации(ПриказыОбАттестации);
	
	Пока ДанныеДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачалоДокумента = ДокументРезультат.ВысотаТаблицы + 1;
		ПервыйОтветственный = Истина;
		
		СоставКомиссии = СоставыКомиссий.Получить(ДанныеДляПечати.Ссылка);

		Пока ДанныеДляПечати.СледующийПоЗначениюПоля("Ответственный") Цикл
			
			НомерСтрокиНачалоОтветственный = ДокументРезультат.ВысотаТаблицы + 1;
			Если Не ПервыйОтветственный Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйОтветственный = Ложь;
			КонецЕсли;
			
			ВывестиШапкуИзвещенияОтветственных(ДокументРезультат, ОбластьШапка, ДанныеДляПечати);
			
			Пока ДанныеДляПечати.СледующийПоЗначениюПоля("ДатаЗаседания") Цикл
				
				ВывестиШапкуЗаседанияИзвещенияОтветственных(ДокументРезультат, ОбластьШапкаЗаседания, ДанныеДляПечати);
				
				НомерПоПорядку 	= 1;
				
				Пока ДанныеДляПечати.Следующий() Цикл
					
					Если НЕ ЗначениеЗаполнено(ДанныеДляПечати.Сотрудник) Тогда
						Продолжить;   
					КонецЕсли;
					
					ВывестиАттестуемогоИзвещенияОтветственных(ДокументРезультат, ОбластьАттестуемый, ДанныеДляПечати, НомерПоПорядку);
					
					НомерПоПорядку = НомерПоПорядку + 1;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ВывестиПодвалИзвещенияОтветственных(ДокументРезультат, ОбластьПодвал, ДанныеДляПечати, СоставКомиссии);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачалоОтветственный, ОбъектыПечати, ДанныеДляПечати.Ответственный);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачалоДокумента, ОбъектыПечати, ДанныеДляПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура ВывестиШапкуИзвещенияОтветственных(ДокументРезультат, ОбластьШапка, ДанныеДляПечати)
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеДляПечати); 
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Организация", НаименованиеОрганизации(ДанныеДляПечати));
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, СтруктураЗаполнения);
	ДокументРезультат.Вывести(ОбластьШапка);
	
КонецПроцедуры

Процедура ВывестиШапкуЗаседанияИзвещенияОтветственных(ДокументРезультат, ОбластьСрокПредоставления, ДанныеДляПечати)
	
	СтруктураЗаполнения = Новый Структура("ДатаПредставленияДокументов");
	СтруктураЗаполнения.ДатаПредставленияДокументов = Формат(ДанныеДляПечати.ДатаПредставленияДокументов, "ДЛФ=D");
	ЗаполнитьЗначенияСвойств(ОбластьСрокПредоставления.Параметры, СтруктураЗаполнения);
	ДокументРезультат.Вывести(ОбластьСрокПредоставления);
	
КонецПроцедуры

Процедура ВывестиАттестуемогоИзвещенияОтветственных(ДокументРезультат, ОбластьАттестуемый, ДанныеДляПечати, НомерПоПорядку)
	
	ЗаполнитьЗначенияСвойств(ОбластьАттестуемый.Параметры, ДанныеДляПечати); 
	ЗаполнитьЗначенияСвойств(ОбластьАттестуемый.Параметры, Новый Структура("НомерПоПорядку", НомерПоПорядку));
	ДокументРезультат.Вывести(ОбластьАттестуемый);
	
КонецПроцедуры

Процедура ВывестиПодвалИзвещенияОтветственных(ДокументРезультат, ОбластьПодвал, ДанныеДляПечати, СоставКомиссии)
	
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ДанныеДляПечати); 
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ФИОСекретаря", АттестацииСотрудников.ФИОЧленаКомиссииПоРоли(СоставКомиссии, Перечисления.РолиЧленовАттестационнойКомиссии.Секретарь));
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, СтруктураЗаполнения);
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Функция ДанныеДляПечатиИзвещенияОтветственных(ПриказыОбАттестации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	СоздатьВТСотрудникиПриказовОбАттестации(Запрос.МенеджерВременныхТаблиц, ПриказыОбАттестации);
	СоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ФИОПолные");
	СоздатьВТКадровыеДанныеОтветственных(Запрос.МенеджерВременныхТаблиц, ПриказыОбАттестации, "ФИОПолные,ИОФамилия");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.Ссылка КАК Ссылка,
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.Подразделение,
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.Ответственный КАК Ответственный,
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.ДатаПредставленияДокументов,
	|	ПриказОбАттестацииСотрудники.Сотрудник,
	|	ПриказОбАттестацииСотрудники.Должность,
	|	ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания КАК ДатаЗаседания,
	|	ВТКадровыеДанныеСотрудников.ФИОПолные КАК ФИОСотрудника,
	|	ВТКадровыеДанныеОтветственных.ФИОПолные КАК ФИООтветственного,
	|	ВТКадровыеДанныеОтветственных.ИОФамилия КАК ФамилияИООтветственного,
	|	Организации.НаименованиеПолное,
	|	Организации.НаименованиеСокращенное
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников.ГрафикПредоставленияДокументов КАК ПриказОбАттестацииГрафикПредоставленияДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.Сотрудники КАК ПриказОбАттестацииСотрудники
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииЗаседанияКомиссии
	|			ПО ПриказОбАттестацииСотрудники.Ссылка = ПриказОбАттестацииЗаседанияКомиссии.Ссылка
	|				И ПриказОбАттестацииСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииЗаседанияКомиссии.ИдентификаторСтрокиЗаседаниеКомиссии
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|			ПО ПриказОбАттестацииСотрудники.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|				И (ПриказОбАттестацииЗаседанияКомиссии.ДатаЗаседания = ВТКадровыеДанныеСотрудников.Период)
	|		ПО ПриказОбАттестацииГрафикПредоставленияДокументов.Ссылка = ПриказОбАттестацииСотрудники.Ссылка
	|			И ПриказОбАттестацииГрафикПредоставленияДокументов.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии
	|			И ПриказОбАттестацииГрафикПредоставленияДокументов.Подразделение = ПриказОбАттестацииСотрудники.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеОтветственных КАК ВТКадровыеДанныеОтветственных
	|		ПО ПриказОбАттестацииГрафикПредоставленияДокументов.Ответственный = ВТКадровыеДанныеОтветственных.Сотрудник
	|			И ПриказОбАттестацииГрафикПредоставленияДокументов.ДатаПредставленияДокументов = ВТКадровыеДанныеОтветственных.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников КАК ПриказОбАттестации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО ПриказОбАттестации.Организация = Организации.Ссылка
	|		ПО ПриказОбАттестацииГрафикПредоставленияДокументов.Ссылка = ПриказОбАттестации.Ссылка
	|ГДЕ
	|	ПриказОбАттестации.Ссылка В(&ПриказыОбАттестации)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Ответственный,
	|	ДатаЗаседания";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

#КонецОбласти

#Область СлужебныеФункцииПечати

Процедура СоздатьВТСотрудникиПриказовОбАттестации(МенеджерВременныхТаблиц, ПриказыОбАттестации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриказОбАттестацииСотрудниковСотрудники.Сотрудник,
	|	ПриказОбАттестацииСотрудниковСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ДатаЗаседания КАК Период
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников.Сотрудники КАК ПриказОбАттестацииСотрудниковСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбАттестацииСотрудников.ЗаседанияКомиссии КАК ПриказОбАттестацииСотрудниковЗаседанияКомиссии
	|		ПО ПриказОбАттестацииСотрудниковСотрудники.Ссылка = ПриказОбАттестацииСотрудниковЗаседанияКомиссии.Ссылка
	|			И ПриказОбАттестацииСотрудниковСотрудники.ИдентификаторСтрокиЗаседаниеКомиссии = ПриказОбАттестацииСотрудниковЗаседанияКомиссии.ИдентификаторСтрокиЗаседаниеКомиссии
	|ГДЕ
	|	ПриказОбАттестацииСотрудниковСотрудники.Ссылка В(&ПриказыОбАттестации)";
	
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, КадровыеДанные = "ФИОПолные")
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(Описатель, Истина, КадровыеДанные);
	
КонецПроцедуры

Процедура СоздатьВТКадровыеДанныеОтветственных(МенеджерВременныхТаблиц, ПриказыОбАттестации, КадровыеДанные = "ФИОПолные")
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.Ответственный КАК Сотрудник,
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.ДатаПредставленияДокументов КАК Период
	|ПОМЕСТИТЬ ВТОтветственные
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников.ГрафикПредоставленияДокументов КАК ПриказОбАттестацииГрафикПредоставленияДокументов
	|ГДЕ
	|	ПриказОбАттестацииГрафикПредоставленияДокументов.Ссылка В(&ПриказыОбАттестации)";
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	Запрос.Выполнить();
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТОтветственные");
	Описатель.ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеОтветственных";
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(Описатель, Истина, КадровыеДанные);
	
КонецПроцедуры

Процедура СоздатьВТКадровыеДанныеОтветственныхЛицОрганизации(МенеджерВременныхТаблиц, ПриказыОбАттестации, КадровыеДанные = "ФИОПолные,ИОФамилия")
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриказОбАттестацииСотрудников.Руководитель КАК ФизическоеЛицо,
	|	ПриказОбАттестацииСотрудников.Дата КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаОбщийСписок
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников КАК ПриказОбАттестацииСотрудников
	|ГДЕ
	|	ПриказОбАттестацииСотрудников.Ссылка В(&ПриказыОбАттестации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриказОбАттестацииСотрудников.НачальникОтделаКадров,
	|	ПриказОбАттестацииСотрудников.Дата
	|ИЗ
	|	Документ.ПриказОбАттестацииСотрудников КАК ПриказОбАттестацииСотрудников
	|ГДЕ
	|	ПриказОбАттестацииСотрудников.Ссылка В(&ПриказыОбАттестации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТФизическиеЛицаОбщийСписок.ФизическоеЛицо,
	|	ВТФизическиеЛицаОбщийСписок.Период
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТФизическиеЛицаОбщийСписок КАК ВТФизическиеЛицаОбщийСписок
	|ГДЕ
	|	ВТФизическиеЛицаОбщийСписок.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТФизическиеЛицаОбщийСписок.ФизическоеЛицо,
	|	ВТФизическиеЛицаОбщийСписок.Период";
	
	Запрос.УстановитьПараметр("ПриказыОбАттестации", ПриказыОбАттестации);
	
	Запрос.Выполнить();
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	Описатель.ИмяВТКадровыеДанныеФизическихЛиц = "ВТКадровыеДанныеОтветственныхЛицОрганизации";
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(Описатель, Истина, "ФИОПолные,ИОФамилия");
	
КонецПроцедуры

Функция НовыйДокументРезультат(КлючПараметровПечати, Ориентация)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ДокументРезультат.ОриентацияСтраницы 	= Ориентация;
	ДокументРезультат.АвтоМасштаб 			= Истина;
	ДокументРезультат.КлючПараметровПечати 	= КлючПараметровПечати;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция НаименованиеОрганизации(Выборка)
	Возврат ?(ЗначениеЗаполнено(Выборка.НаименованиеПолное), Выборка.НаименованиеПолное, Выборка.НаименованиеСокращенное);
КонецФункции 

Функция ОбращениеКСотруднику(Выборка)
	
	Обращение 		= НСтр("ru = 'Уважаемый (ая)'");
	ОбращениеМуж 	= НСтр("ru = 'Уважаемый'");
	ОбращениеЖен 	= НСтр("ru = 'Уважаемая'");
	
	Возврат ?(НЕ ЗначениеЗаполнено(Выборка.Пол), Обращение, ?(Выборка.Пол = Перечисления.ПолФизическогоЛица.Мужской, ОбращениеМуж, ОбращениеЖен));
	
КонецФункции
	
#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
