#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ВозвратСотрудникомЗадолженности;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьПериодыВзаиморасчетовЗадолженностей() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Отбираем документы с пустыми периодами взаиморасчетов в ТЧ Задолженности
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задолженности.Ссылка КАК Ссылка,
	|	Задолженности.Ссылка.Проведен КАК Проведен
	|ПОМЕСТИТЬ ВТОбновляемыеДокументы
	|ИЗ
	|	Документ.ВозвратСотрудникомЗадолженности.Задолженности КАК Задолженности
	|ГДЕ
	|	Задолженности.ПериодВзаиморасчетов = ДАТАВРЕМЯ(1, 1, 1)";
	Запрос.Выполнить();
	
	// В проведенных документах переносим движения в табличную часть
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗарплатаКВыплате.Регистратор КАК Ссылка,
	|	ЗарплатаКВыплате.Сотрудник КАК Сотрудник,
	|	ЗарплатаКВыплате.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|	ЗарплатаКВыплате.Подразделение КАК Подразделение,
	|	ЗарплатаКВыплате.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ЗарплатаКВыплате.СтатьяРасходов КАК СтатьяРасходов,
	|	ЗарплатаКВыплате.ДокументОснование КАК ДокументОснование,
	|	СУММА(ЗарплатаКВыплате.СуммаКВыплате) КАК СуммаКВыплате
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
	|ГДЕ
	|	ЗарплатаКВыплате.Регистратор В
	|			(ВЫБРАТЬ
	|				ОбновляемыеДокументы.Ссылка
	|			ИЗ
	|				ВТОбновляемыеДокументы КАК ОбновляемыеДокументы
	|			ГДЕ
	|				ОбновляемыеДокументы.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплате.Регистратор,
	|	ЗарплатаКВыплате.Сотрудник,
	|	ЗарплатаКВыплате.ПериодВзаиморасчетов,
	|	ЗарплатаКВыплате.Подразделение,
	|	ЗарплатаКВыплате.СтатьяФинансирования,
	|	ЗарплатаКВыплате.СтатьяРасходов,
	|	ЗарплатаКВыплате.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗарплатаКВыплате.Регистратор,
	|	ЗарплатаКВыплате.Сотрудник,
	|	ЗарплатаКВыплате.ПериодВзаиморасчетов,
	|	ЗарплатаКВыплате.Подразделение,
	|	ЗарплатаКВыплате.СтатьяФинансирования,
	|	ЗарплатаКВыплате.СтатьяРасходов,
	|	ЗарплатаКВыплате.ДокументОснование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ВозвратЗадолженности = Выборка.Ссылка.ПолучитьОбъект();
		
		ВозвратЗадолженности.Задолженности.Очистить();
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаЗадолженности = ВозвратЗадолженности.Задолженности.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЗадолженности, Выборка);
			СтрокаЗадолженности.Сумма = - Выборка.СуммаКВыплате
			
		КонецЦикла;
		
		ВозвратЗадолженности.ОбменДанными.Загрузка = Истина;
		ВозвратЗадолженности.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
	// В непроведенных документах заполняем период взаиморасчетов из шапки документа
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбновляемыеДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	ВТОбновляемыеДокументы КАК ОбновляемыеДокументы
	|ГДЕ
	|	НЕ ОбновляемыеДокументы.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВозвратЗадолженности = Выборка.Ссылка.ПолучитьОбъект();
		
		Для Каждого СтрокаЗадолженности Из ВозвратЗадолженности.Задолженности Цикл
			СтрокаЗадолженности.ПериодВзаиморасчетов = ВозвратЗадолженности.ПериодРегистрации;
		КонецЦикла;
		
		ВозвратЗадолженности.ОбменДанными.Загрузка = Истина;
		ВозвратЗадолженности.Записать();
		
	КонецЦикла;
	
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#КонецЕсли