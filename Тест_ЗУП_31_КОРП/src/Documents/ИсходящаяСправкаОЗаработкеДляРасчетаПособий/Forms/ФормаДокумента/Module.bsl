
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Ответственный", 
		"Объект.Ответственный");
		
		Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
			Если Не Параметры.Свойство("Организация", Объект.Организация) Тогда
				ЗначенияДляЗаполнения.Вставить("Организация", "Объект.Организация");
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			Параметры.Свойство("Сотрудник", Объект.Сотрудник);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.ГодС) Тогда
			Параметры.Свойство("ГодС", Объект.ГодС);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.ГодПо) Тогда
			Если Не Параметры.Свойство("ГодПо", Объект.ГодПо) Тогда
				ЗначенияДляЗаполнения.Вставить("Год", "Объект.ГодПо");
			КонецЕсли;
		КонецЕсли;
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
		
		Если ЗначениеЗаполнено(Объект.ГодПо) И Не ЗначениеЗаполнено(Объект.ГодС) Тогда
			Объект.ГодС = Объект.ГодПо - 2;
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере("Объект");
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			СотрудникПриИзмененииНаСервере();
		КонецЕсли; 
		
	КонецЕсли;
	
	ДоработатьАдрес();
	ОбработатьОтображениеПоясненийАдреса();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужбаФормы");
		Модуль.УстановитьПараметрыВыбораСотрудников(ЭтаФорма, "Сотрудник");
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Проведен", ЭтотОбъект.Объект.Проведен);
	ПараметрыОповещения.Вставить("ПомеченНаУдаление", ЭтотОбъект.Объект.ПометкаУдаления);
	ПараметрыОповещения.Вставить("Результат", ЭтотОбъект.Объект.Ссылка);
	ПараметрыОповещения.Вставить("Ответственный", ЭтотОбъект.Объект.Ответственный);
	ПараметрыОповещения.Вставить("ДатаДокумента", ЭтотОбъект.Объект.Дата);
	ПараметрыОповещения.Вставить("НомерДокумента", ЭтотОбъект.Объект.Номер);
	ПараметрыОповещения.Вставить("Сотрудник", ЭтотОбъект.Объект.Сотрудник);
	Оповестить("ПослеЗаписиОбъектаСвязанногоСПереводомКДругомуРаботодателю", ПараметрыОповещения, ЭтотОбъект);
	Оповестить("Запись_ИсходящаяСправкаОЗаработкеДляРасчетаПособий", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ФиксацияЗаполнитьИдентификаторыФиксТЧ(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)   
	ФиксацияСохранитьРеквизитыФормыФикс(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Ложь);	
	ФиксацияЗаполнитьРеквизитыФормыФикс(ЭтотОбъект.Объект);
	ФиксацияУстановитьОбъектЗафиксирован();
	ФиксацияОбновитьФиксациюВФорме();
	УстановитьПредставлениеАдреса();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеДанныхФизическогоЛица" Тогда
		ОбновитьВторичныеДанныеДокумента(Ложь, Истина, Ложь, Ложь);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	СотрудникПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ГодСПриИзменении(Элемент)
	ЗаполнитьДанныеСправкиНаСервере();
	ПриИзмененииПериодаЗаполненияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ГодПоПриИзменении(Элемент)
	ПриИзмененииПериодаЗаполненияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	УстановитьИнфоОДокументеУдостоверяющемЛичностьНадпись();
	ФиксацияЗафиксироватьИзменениеРеквизита("ВидДокумента");
КонецПроцедуры

&НаКлиенте
Процедура СерияДокументаПриИзменении(Элемент)
	УстановитьИнфоОДокументеУдостоверяющемЛичностьНадпись();
	ФиксацияЗафиксироватьИзменениеРеквизита("СерияДокумента");
КонецПроцедуры

&НаКлиенте
Процедура НомерДокументаПриИзменении(Элемент)
	УстановитьИнфоОДокументеУдостоверяющемЛичностьНадпись();
	ФиксацияЗафиксироватьИзменениеРеквизита("НомерДокумента");
КонецПроцедуры

&НаКлиенте
Процедура КемВыданДокументПриИзменении(Элемент)
	УстановитьИнфоОДокументеУдостоверяющемЛичностьНадпись();
	ФиксацияЗафиксироватьИзменениеРеквизита("КемВыданДокумент");
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыдачиДокументаПриИзменении(Элемент)
	УстановитьИнфоОДокументеУдостоверяющемЛичностьНадпись();
	ФиксацияЗафиксироватьИзменениеРеквизита("ДатаВыдачиДокумента");
КонецПроцедуры

#Область ОбработчикиСобытийТаблицыФормыДанныеОЗаработке

&НаКлиенте
Процедура ДанныеОЗаработкеПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьОтображениеПредупрежденийТЧ_ДанныеОЗаработке", 0.2, Истина);	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеОЗаработкеРасчетныйГодПриИзменении(Элемент)
	ФиксацияУстановитьФиксациюИзмененийГруппыРеквизитов("ДанныеОЗаработке", ЭтотОбъект.ТекущийЭлемент.ТекущаяСтрока);
	ДанныеОЗаработкеРасчетныйГодПриИзмененииНаСервере(ЭтотОбъект.ТекущийЭлемент.ТекущиеДанные.РасчетныйГод);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаполнитьДанныеСправки(Команда)
	ЗаполнитьДанныеСправкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсеИсправления(Команда) 
	ОтменитьВсеИсправленияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьДанныеОЗаработке(Команда)
	ОбновитьДанныеОЗаработкеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПояснениеНажатие(Элемент, СтандартнаяОбработка = Ложь)
	
	СтандартнаяОбработка = Ложь;
	
	Подсказка = Элемент.Подсказка;
	Если Не ПустаяСтрока(Элемент.Заголовок) И Элемент.Заголовок <> "Ошибка" И Элемент.Заголовок <> "Почему?" И Элемент.Заголовок <> Подсказка Тогда
		
		Подсказка = СтрПолучитьСтроку(Элемент.Заголовок, 1) + Символы.ПС + Подсказка;
		
	КонецЕсли;
	
	ПоказатьПредупреждение(, Подсказка);
	
КонецПроцедуры
 
&НаКлиенте
Процедура РедактироватьКарточкуСотрудника(Команда)
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Ключ", Объект.Сотрудник);
		ФормаСотрудника = ОткрытьФорму("Справочник.Сотрудники.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИсправленияДанныхСотрудника(Команда)
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Сотрудник");
	ОбновитьВторичныеДанныеДокумента(Ложь, Истина, Ложь, Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
	
	УстановитьИнфоОДокументеУдостоверяющемЛичностьНадпись();
	
	ФиксацияВторичныхДанныхВДокументахФормы.ИнициализироватьМеханизмФиксацииРеквизитов(ЭтотОбъект, ТекущийОбъект);
	ФиксацияВторичныхДанныхВДокументахФормы.ПодключитьОбработчикиФиксацииИзмененийРеквизитов(ЭтотОбъект, ФиксацияЭлементыОбработчикаЗафиксироватьИзменение());
	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Ложь);	

	ОбновитьВторичныеДанныеДокумента(Истина, Истина, Истина, Ложь);
	
	ФиксацияОбновитьФиксациюВФорме();
	  
	УстановитьОбязательностьЗаполненияПолейЗависящихОтОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСправкиНаСервере()

	Документ = ФиксацияПодготовленныйДокумент();
	
	Документ.ЗаполнитьДанныеСправки();
	
	ЗначениеВРеквизитФормы(Документ, "Объект");
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
	
	УстановитьИнфоОДокументеУдостоверяющемЛичностьНадпись();
	
КонецПроцедуры
 
&НаСервере
Процедура ОбновитьДанныеОЗаработкеНаСервере(Год = Неопределено)
	Документ = ФиксацияПодготовленныйДокумент();
	
	Если Документ.ОбновитьДанныеОЗаработкеИДняхОтсутствия(Неопределено, Год) Тогда
		Если НЕ Документ.ЭтоНовый() Тогда
			ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Истина);	
		КонецЕсли;
		ЗначениеВРеквизитФормы(Документ, "Объект");
	КонецЕсли;	
	
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
КонецПроцедуры

&НаСервере
Процедура ОтменитьВсеИсправленияНаСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОчиститьФиксациюИзменений(ЭтотОбъект, Объект);
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
	ФиксацияОбновитьФиксациюВФорме();
	ОбновитьВторичныеДанныеДокумента(Истина, Истина, Истина, Истина);
    ОбработатьОтображениеПоясненийАдреса();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОчиститьФиксациюИзменений(ЭтотОбъект, Объект);
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
	ФиксацияОбновитьФиксациюВФорме();
	ОбновитьВторичныеДанныеДокумента(Истина, Истина, Истина, Истина);
    ОбработатьОтображениеПоясненийАдреса();
	ЗаполнитьДанныеСправкиНаСервере();
	
	УстановитьОбязательностьЗаполненияПолейЗависящихОтОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОбязательностьЗаполненияПолейЗависящихОтОрганизации()
	
	ЗаполнениеОбязательно = ЗарплатаКадрыПовтИсп.ЭтоЮридическоеЛицо(Объект.Организация);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "ДолжностьРуководителя", 	"АвтоОтметкаНезаполненного", 	ЗаполнениеОбязательно);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "ДолжностьРуководителя", 	"ОтметкаНезаполненного", 		ЗаполнениеОбязательно И Не ЗначениеЗаполнено(Объект.ДолжностьРуководителя));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "ГлавныйБухгалтер", 		"АвтоОтметкаНезаполненного", 	ЗаполнениеОбязательно);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "ГлавныйБухгалтер", 		"ОтметкаНезаполненного", 		ЗаполнениеОбязательно И Не ЗначениеЗаполнено(Объект.ГлавныйБухгалтер));
	
КонецПроцедуры
 
&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Сотрудник");
	ОбновитьВторичныеДанныеДокумента(Ложь, Истина, Истина, Истина);
	ЗаполнитьДанныеСправкиНаСервере();
    ОбработатьОтображениеПоясненийАдреса();
КонецПроцедуры

&НаСервере 
Процедура ПриИзмененииПериодаЗаполненияНаСервере()
	Если НЕ ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбъектФормыЗафиксирован(ЭтотОбъект) Тогда
		ЗаполнитьДанныеСправкиНаСервере();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица"));
	ПараметрыОткрытия.Вставить("ЗначенияПолей", Объект.АдресПоПрописке);
	
	Оповещение = Новый ОписаниеОповещения("АдресЗавершениеВыбора", ЭтотОбъект);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресЗавершениеВыбора(РезультатОткрытияФормы, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(РезультатОткрытияФормы)<>Тип("Структура") Тогда
		// не было изменений в данных
		Возврат;
	КонецЕсли;
	
	Объект.АдресПоПрописке = РезультатОткрытияФормы.КонтактнаяИнформация;
	ФиксацияЗафиксироватьИзменениеРеквизита("АдресПоПрописке");
	АдресПоПрописке = РезультатОткрытияФормы.Представление;
	Модифицированность = Истина;
	ОбработатьОтображениеПоясненийАдреса();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеАдреса()
	
	Если Не ПустаяСтрока(Объект.АдресПоПрописке) Тогда
		СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
		Объект.АдресПоПрописке,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица"));
		УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, ЭтотОбъект.АдресПоПрописке);
	Иначе
		ЭтотОбъект.АдресПоПрописке = НСтр("ru = '<Не заполнен>'");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДоработатьАдрес()
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	НовыйРеквизит = Новый РеквизитФормы("АдресПоПропискеИнфоКартинка", Новый ОписаниеТипов("Картинка"));
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
	НовыйРеквизит = Новый РеквизитФормы("АдресПоПропискеИнфоКартинкаПодсказка", Новый ОписаниеТипов("Картинка"));
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
	НовыйРеквизит = Новый РеквизитФормы("АдресПоПропискеИнфоТекстДополнительный", Новый ОписаниеТипов("Строка"));
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	ГруппаПоясненияАдреса = Элементы.Найти("ГруппаПоясненияАдреса");
	Картинка = Элементы.Добавить("АдресПоПропискеИнфоКартинка", Тип("ПолеФормы"), ГруппаПоясненияАдреса);
	Картинка.Вид = ВидПоляФормы.ПолеКартинки;
	Картинка.ПутьКДанным = "АдресПоПропискеИнфоКартинка";
	Картинка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Картинка.РастягиватьПоВертикали = Ложь;
	Картинка.РастягиватьПоГоризонтали = Ложь;
	Картинка.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	Картинка.Ширина = 3;
	Картинка.Высота = 1;
	Картинка.ГиперСсылка = Истина;
	Картинка.УстановитьДействие("Нажатие", "Подключаемый_ПояснениеНажатие");
	
	Надпись = Элементы.Добавить("АдресПоПропискеИнфоТекстДополнительный", Тип("ПолеФормы"), ГруппаПоясненияАдреса);
	Надпись.Вид = ВидПоляФормы.ПолеНадписи;
	Надпись.ПутьКДанным = "АдресПоПропискеИнфоТекстДополнительный";
	Надпись.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Надпись.Высота = 1;
	Надпись.Ширина = 50;
	Надпись.РастягиватьПоВертикали = Ложь;
	Надпись.РастягиватьПоГоризонтали = Ложь;
	Надпись.Заголовок = НСтр("ru = 'Ошибка'");
	Надпись.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
	
	КартинкаПодсказка = Элементы.Добавить("АдресПоПропискеИнфоКартинкаПодсказка", Тип("ПолеФормы"), ГруппаПоясненияАдреса);
	КартинкаПодсказка.Вид = ВидПоляФормы.ПолеКартинки;
	КартинкаПодсказка.ПутьКДанным = "АдресПоПропискеИнфоКартинкаПодсказка";
	КартинкаПодсказка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КартинкаПодсказка.РастягиватьПоВертикали = Ложь;
	КартинкаПодсказка.РастягиватьПоГоризонтали = Ложь;
	КартинкаПодсказка.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	КартинкаПодсказка.Ширина = 3;
	КартинкаПодсказка.Высота = 1;
	КартинкаПодсказка.ГиперСсылка = Истина;
	КартинкаПодсказка.УстановитьДействие("Нажатие", "Подключаемый_ПояснениеНажатие");
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьОтображениеПоясненийАдреса()
	
	Адрес 			= ЭтотОбъект.АдресПоПрописке;
	СписокПолей 	= Объект.АдресПоПрописке;
	Элемент 		= ЭтотОбъект.Элементы["АдресПоПрописке"];
	ВидАдреса 		= Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица;
	
	УправлениеКонтактнойИнформациейЗарплатаКадры.УстановитьОтображениеПоляАдреса(Адрес, СписокПолей, Элемент, ЭтотОбъект, ВидАдреса);	
 
КонецПроцедуры

&НаСервере
Процедура ДанныеОЗаработкеРасчетныйГодПриИзмененииНаСервере(Знач Год)
	ОбновитьДанныеОЗаработкеНаСервере(Год);
КонецПроцедуры
 
&НаСервере
Процедура УстановитьИнфоОДокументеУдостоверяющемЛичностьНадпись(ТекущийОбъект = Неопределено)
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = Объект;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Сотрудник) Тогда
		
		ТекущиеУдостоверенияЛичности = КадровыйУчетФормы.ТекущиеУдостоверенияЛичностиСотрудников(ТекущийОбъект.Сотрудник, КонецГода(Дата(ТекущийОбъект.ГодПо, 1, 1)));
		
		ИнфоОДокументеУдостоверяющемЛичностьНадпись = КадровыйУчетФормы.ИнфоНадписьОДокументеУдостоверяющемЛичность(
			ТекущиеУдостоверенияЛичности, ТекущийОбъект.Сотрудник, ТекущийОбъект.ВидДокумента, ТекущийОбъект.СерияДокумента, ТекущийОбъект.НомерДокумента);
			
	Иначе
		
		ИнфоОДокументеУдостоверяющемЛичностьНадпись = "";
		
	КонецЕсли;
	
	Если ПустаяСтрока(ИнфоОДокументеУдостоверяющемЛичностьНадпись) Тогда
		ИнфоОДокументеУдостоверяющемЛичностьКартинка = Новый Картинка;
	Иначе
		ИнфоОДокументеУдостоверяющемЛичностьКартинка = БиблиотекаКартинок.Предупреждение;
	КонецЕсли;
		
КонецПроцедуры
 
&НаСервере
Функция ОбъектЗафиксирован() Экспорт
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Возврат ДокументОбъект.ОбъектЗафиксирован();
	
КонецФункции

////////////////////////////////
// Механизм фиксации изменений.

&НаСервере
Функция ФиксацияОписаниеФормы(ПараметрыФиксацииВторичныхДанных) Экспорт
	
	ОписаниеФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеФормы();
	
	ОписаниеЭлементовФормы = Новый Соответствие();
	ОписаниеЭлементаФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеЭлементаФормы();
	
	ОписаниеЭлементаФормы.ПрефиксПути = "Объект";
	
	Для каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		ОписаниеЭлементовФормы.Вставить(ОписаниеФиксацииРеквизита.Ключ, ОписаниеЭлементаФормы);
	КонецЦикла;
	
	// Т.к. "Адрес по прописке" редактируется через рек-т формы, укажем ему особые пути к данным.
	ПустоеОписаниеЭлементовФормы = Новый Соответствие();
	ПустоеОписаниеЭлементовФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеЭлементаФормы();
	ОписаниеЭлементовФормы.Вставить("АдресПоПрописке", ПустоеОписаниеЭлементовФормы);
	
	ОписаниеФормы.Вставить("ОписаниеЭлементовФормы", ОписаниеЭлементовФормы);
	
	Возврат ОписаниеФормы;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ФиксацияЭлементыОбработчикаЗафиксироватьИзменение()
	
	ОписаниеЭлементов = Новый Соответствие;
	ОписаниеЭлементов.Вставить("НаименованиеТерриториальногоОрганаФСС",		"НаименованиеТерриториальногоОрганаФСС");
	ОписаниеЭлементов.Вставить("Руководитель",								"Руководитель");
	ОписаниеЭлементов.Вставить("ГлавныйБухгалтер",							"ГлавныйБухгалтер");
	ОписаниеЭлементов.Вставить("ДолжностьРуководителя",						"ДолжностьРуководителя");
	ОписаниеЭлементов.Вставить("ТелефонОрганизации",						"ТелефонОрганизации");
	ОписаниеЭлементов.Вставить("РегистрационныйНомерФСС",					"РегистрационныйНомерФСС");
	ОписаниеЭлементов.Вставить("ДополнительныйКодФСС",						"ДополнительныйКодФСС");
	ОписаниеЭлементов.Вставить("КодПодчиненностиФСС",						"КодПодчиненностиФСС");
	
	// Данные сотрудника
	ОписаниеЭлементов.Вставить("Фамилия",									"Фамилия");
	ОписаниеЭлементов.Вставить("Имя",										"Имя");
	ОписаниеЭлементов.Вставить("Отчество",									"Отчество");
	ОписаниеЭлементов.Вставить("СтраховойНомерПФР",							"СтраховойНомерПФР");
	ОписаниеЭлементов.Вставить("АдресПоПрописке",							"АдресПоПрописке");
	ОписаниеЭлементов.Вставить("АдресПредставление",						"АдресПредставление");
	ОписаниеЭлементов.Вставить("ПериодРаботыС",								"УдалитьПериодРаботыС");
	ОписаниеЭлементов.Вставить("ПериодРаботыПо",							"УдалитьПериодРаботыПо");
	
	// Данные о заработке
	ОписаниеЭлементов.Вставить("ДанныеОЗаработкеЗаработок",					"Заработок");
	ОписаниеЭлементов.Вставить("ДанныеОЗаработкеДнейБолезниУходаЗаДетьми",	"УдалитьДнейБолезниУходаЗаДетьми");
          	
	// Данные о заработке
	ОписаниеЭлементов.Вставить("ДниБолезниУходаЗаДетьмиДни",				"Дни");
	ОписаниеЭлементов.Вставить("ДниБолезниУходаЗаДетьмиНаименованиеПериода","НаименованиеПериода");
    ОписаниеЭлементов.Вставить("ДниБолезниУходаЗаДетьмиПериодПо",			"ПериодПо");

	Возврат	ОписаниеЭлементов
КонецФункции

&НаКлиенте
Процедура ФиксацияЗафиксироватьИзменениеРеквизита(ИмяРеквизита, ТекущаяСтрока = 0)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтотОбъект, ИмяРеквизита, ТекущаяСтрока)
КонецПроцедуры

&НаКлиенте
Процедура ФиксацияУстановитьФиксациюИзмененийГруппыРеквизитов(ИмяГруппы, ТекущаяСтрока = 0)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.УстановитьФиксациюИзмененийГруппыРеквизитов(ЭтотОбъект, ИмяГруппы, ТекущаяСтрока);   
КонецПроцедуры

&НаСервере
Процедура ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения(ОснованиеЗаполнения, ТекущаяСтрока = 0)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СброситьФиксациюИзмененийРеквизитовПоОснованиюЗаполнения(ЭтотОбъект, ОснованиеЗаполнения, ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ФиксацияОбновитьФиксациюВФорме()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ФиксацияЗаполнитьРеквизитыФормыФикс(ТекущийОбъект)
	ФиксацияВторичныхДанныхВДокументахФормы.ЗаполнитьРеквизитыФормыФикс(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры	
     
&НаКлиентеНаСервереБезКонтекста
Процедура ФиксацияЗаполнитьИдентификаторыФиксТЧ(Форма);
	ИменаРеквизитовИЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИменаСлужебныхРеквизитовИЭлементовМеханизмаФиксацииДанных();
	ОписанияТЧ = Форма[ИменаРеквизитовИЭлементов.Получить("ПараметрыФиксацииВторичныхДанных")]["ОписанияТЧ"];
	Для каждого ОписаниеТЧ Из ОписанияТЧ Цикл
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗаполнитьИдентификаторыФиксТЧ(Форма.Объект[ОписаниеТЧ.Ключ]);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ФиксацияСохранитьРеквизитыФормыФикс(Форма, ТекущийОбъект)   
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СохранитьРеквизитыФормыФикс(Форма, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Функция ФиксацияПодготовленныйДокумент()
	
	ФиксацияЗаполнитьИдентификаторыФиксТЧ(ЭтотОбъект);
	ПодготовленныйДокумент = РеквизитФормыВЗначение("Объект");
	ФиксацияСохранитьРеквизитыФормыФикс(ЭтотОбъект, ПодготовленныйДокумент);
	
	Возврат ПодготовленныйДокумент;
КонецФункции 
   
&НаСервере
Процедура ФиксацияУстановитьОбъектЗафиксирован();
	 ФиксацияВторичныхДанныхВДокументахФормы.УстановитьОбъектЗафиксирован(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьВторичныеДанныеДокумента(ДанныеОрганизации = Истина, ДанныеСотрудника = Истина, ДанныеОЗаработке = Истина, ОбновлятьБезусловно = Истина) Экспорт
	
	Документ = ФиксацияПодготовленныйДокумент();
	
	Если Документ.ОбновитьВторичныеДанныеДокумента(ДанныеОрганизации, ДанныеСотрудника, ДанныеОЗаработке, ОбновлятьБезусловно) Тогда
		Если НЕ Документ.ЭтоНовый() Тогда
			ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Истина);	
		КонецЕсли;
		ЗначениеВРеквизитФормы(Документ, "Объект");
	КонецЕсли;	
	
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
	УстановитьПредставлениеАдреса();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(Элемент, СтандартнаяОбработка = Ложь) Экспорт
	Если ТипЗнч(ЭтотОбъект.ТекущийЭлемент) = Тип("ТаблицаФормы")  Тогда
		ТекущаяСтрока = ЭтотОбъект.ТекущийЭлемент.ТекущаяСтрока;
	Иначе	
		ТекущаяСтрока = 0;
	КонецЕсли;
	
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(ЭтотОбъект, Элемент, ФиксацияЭлементыОбработчикаЗафиксироватьИзменение(), ТекущаяСтрока);
КонецПроцедуры

// Механизм фиксации изменений.
////////////////////////////////

&НаКлиенте
Процедура ОбновитьОтображениеПредупрежденийТЧ_ДанныеОЗаработке()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьОтображениеПредупрежденийТЧ(ЭтотОбъект, "ДанныеОЗаработке", Элементы.ДанныеОЗаработке.ТекущаяСтрока);
КонецПроцедуры

#КонецОбласти
