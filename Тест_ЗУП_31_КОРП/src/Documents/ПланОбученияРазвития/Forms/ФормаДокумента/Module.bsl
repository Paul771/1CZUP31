#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Начальное заполнение
	Если Параметры.Ключ.Пустая() Тогда
		ЗначенияДляЗаполнения = Новый Структура("Ответственный", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
	КонецЕсли;
	
	ПриПолученииДанныхНаСервере();
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ПланОбученияРазвития", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СогласованПриИзменении(Элемент)
	
	Если Объект.Согласован Тогда
		Объект.Утвердил = ПользователиКлиентСервер.ТекущийПользователь();
	Иначе
		Объект.Утвердил = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	КонецЕсли;
	
	УстановитьСвойстваЭлементаУтвердил(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовПодвалаФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМероприятия

&НаКлиенте
Процедура МероприятияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "МероприятияНомерЗаявки" Тогда
		
		Если ЗначениеЗаполнено(Элементы.Мероприятия.ТекущиеДанные.Заявка) Тогда
			ПараметрыФормы = Новый Структура("Ключ",Элементы.Мероприятия.ТекущиеДанные.Заявка);
			ОткрытьФорму("Документ.ЗаявкаНаВключениеВПланОбучения.Форма.ФормаДокумента",ПараметрыФормы);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоставитьОтборСотрудникам(Элемент.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Элемент.ТекущиеДанные.НомерСтрокиМероприятия = СледующийНомерСтрокиМероприятия;
		АктивноеМероприятие = СледующийНомерСтрокиМероприятия;
		СледующийНомерСтрокиМероприятия = СледующийНомерСтрокиМероприятия + 1;
		
		ПоставитьОтборСотрудникам(Элемент.ТекущиеДанные);
		
	КонецЕсли;
	
	Если Копирование Тогда
		Элемент.ТекущиеДанные.НомерЗаявки = "";
		Элемент.ТекущиеДанные.Заявка = ПредопределенноеЗначение("Документ.ЗаявкаНаВключениеВПланОбучения.ПустаяСсылка");
		Элемент.ТекущиеДанные.КоличествоСотрудников = 0;
		Элемент.ТекущиеДанные.КоличествоВычисляется = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятияКоличествоСотрудниковПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Мероприятия.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьКоличествоВычисляетсяСтроки(ЭтаФорма, ТекущиеДанные);
	РассчитатьСуммуМероприятия(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятияПередУдалением(Элемент, Отказ)
	
	УдалитьСотрудниковМероприятия();
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Для каждого ВыбранноеМероприятие Из ВыбранноеЗначение Цикл
	
		НовоеМероприятие = Объект.Мероприятия.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеМероприятие, ВыбранноеМероприятие);
		НовоеМероприятие.НомерСтрокиМероприятия = СледующийНомерСтрокиМероприятия;
		СледующийНомерСтрокиМероприятия = СледующийНомерСтрокиМероприятия + 1;
		
		Если ВыбранноеМероприятие.Свойство("Сотрудник") Тогда
			НовыйСотрудник = Объект.Сотрудники.Добавить();
			НовыйСотрудник.НомерСтрокиМероприятия = НовоеМероприятие.НомерСтрокиМероприятия;
			НовыйСотрудник.Сотрудник = ВыбранноеМероприятие.Сотрудник;
		Иначе
			ЗаполнитьСотрудниковПоПодобраннойЗаявке(НовоеМероприятие.Заявка, НовоеМероприятие.НомерСтрокиМероприятия);
		КонецЕсли;
		
		УстановитьВторичныеРеквизитыСтрокиПоМероприятию(НовоеМероприятие);
		УстановитьКоличествоСотрудниковВТабличнойЧастиМероприятия(НовоеМероприятие.НомерСтрокиМероприятия);
		
		Если ВыбранноеМероприятие.Свойство("СуммаРасходов") И ВыбранноеМероприятие.СуммаРасходов > 0 Тогда
			НовоеМероприятие.СуммаРасходов = ВыбранноеМероприятие.СуммаРасходов;
		КонецЕсли;
		
	КонецЦикла; 
	
	ЗаполнитьДополнительныеРеквизитыМероприятия();
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятияМероприятиеПриИзменении(Элемент)
	
	УстановитьВторичныеРеквизитыСтрокиПоМероприятию(Элементы.Мероприятия.ТекущиеДанные);
	РассчитатьСуммуМероприятия(Элементы.Мероприятия.ТекущиеДанные);
	РассчитатьКоличествоУчебныхЧасовМероприятия(Элементы.Мероприятия.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСотрудники

&НаКлиенте
Процедура СотрудникиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ УстановленОтборПоМероприятию() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры
 
&НаКлиенте
Процедура СотрудникиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат
	КонецЕсли;
	Если НоваяСтрока Тогда
		ЗаполнитьЗначенияСвойств(Элемент.ТекущиеДанные, Элемент.ОтборСтрок);
		УстановитьКоличествоСотрудниковВТабличнойЧастиМероприятия(Элемент.ОтборСтрок.НомерСтрокиМероприятия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Для каждого ВыбранныйСотрудник Из ВыбранноеЗначение Цикл
		
		СтруктураПоиска = Новый Структура("НомерСтрокиМероприятия, Сотрудник",
			АктивноеМероприятие,ВыбранныйСотрудник);
			
			Если Объект.Сотрудники.НайтиСтроки(СтруктураПоиска).Количество()=0 Тогда
				
				НовыйСотрудник = Объект.Сотрудники.Добавить();
				НовыйСотрудник.Сотрудник = ВыбранныйСотрудник;
				НовыйСотрудник.НомерСтрокиМероприятия = Элементы.Сотрудники.ОтборСтрок.НомерСтрокиМероприятия;
				
				Модифицированность = Истина;
				
				УстановитьКоличествоСотрудниковВТабличнойЧастиМероприятия(Элемент.ОтборСтрок.НомерСтрокиМероприятия);
				
			КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПослеУдаления(Элемент)
	
	УстановитьКоличествоСотрудниковВТабличнойЧастиМероприятия(Элемент.ОтборСтрок.НомерСтрокиМероприятия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьСотрудников(Команда)
	
	Если УстановленОтборПоМероприятию() Тогда
		КадровыйУчетКлиент.ВыбратьСотрудниковРаботающихНаДатуПоПараметрамОткрытияФормыСписка(
			Элементы.Сотрудники,,,,,АдресСпискаПодобранныхСотрудников());
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьМероприятияПоЗаявкам(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("СписокУжеПодобранныхЗаявок", АдресСпискаПодобранныхЗаявок());
	ПараметрыФормы.Вставить("ТолькоПроведенные", Истина);
	ПараметрыФормы.Вставить("ЗаявкаВыполнена", Ложь);
	ПараметрыФормы.Вставить("РегистраторИсключение", Объект.Ссылка);
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ПараметрыФормы.Вставить("Подразделение",Объект.Подразделение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДатаНачалаПланирования) Тогда
		ПараметрыФормы.Вставить("ДатаНачала",Объект.ДатаНачалаПланирования);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДатаОкончанияПланирования) Тогда
		ПараметрыФормы.Вставить("ДатаОкончания",Объект.ДатаОкончанияПланирования);
	КонецЕсли;
	ОткрытьФорму("Документ.ЗаявкаНаВключениеВПланОбучения.Форма.ФормаСписка", ПараметрыФормы, Элементы.Мероприятия, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьМероприятияПоИПР(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("ДатаНачала",Объект.ДатаНачалаПланирования);
	ПараметрыФормы.Вставить("ДатаОкончания",Объект.ДатаОкончанияПланирования);
	ПараметрыФормы.Вставить("ТаблицаУжеПодобранныхМероприятий",АдресСпискаПодобранныхМероприятий());
	
	ОткрытьФорму("Справочник.ИндивидуальныйПланРазвития.Форма.ФормаВыбораМероприятийИПР",ПараметрыФормы, Элементы.Мероприятия, УникальныйИдентификатор);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()

	ЗаполнитьДополнительныеРеквизитыМероприятия();
	
	УстановитьСледующийНомерСтрокиМероприятия();
	УстановитьСвойстваЭлементовФормы(ЭтаФорма);

КонецПроцедуры


&НаКлиенте
Процедура ПоставитьОтборСотрудникам(ТекущиеДанные)

	АктивноеМероприятие = ТекущиеДанные.НомерСтрокиМероприятия;
	Элементы.Сотрудники.ОтборСтрок = Новый ФиксированнаяСтруктура("НомерСтрокиМероприятия",АктивноеМероприятие);	

КонецПроцедуры

#Область УстановкаСвойствЭлементовФормы

// Устанавливает свойства реквизитов формы.
//
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваЭлементовФормы(Форма)
	УстановитьСвойстваЭлементаУтвердил(Форма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваЭлементаУтвердил(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Утвердил",
		"Доступность",
		Форма.Объект.Согласован);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция АдресСпискаПодобранныхСотрудников()
	
	СписокСотрудниковПоМероприятию = Объект.Сотрудники.Выгрузить().НайтиСтроки(Новый Структура("НомерСтрокиМероприятия",АктивноеМероприятие));
	
	МассивСотрудников = Новый Массив;
	
	Для каждого Сотрудник Из СписокСотрудниковПоМероприятию Цикл
		МассивСотрудников.Добавить(Сотрудник.Сотрудник);
	КонецЦикла; 
	
	Возврат ПоместитьВоВременноеХранилище(МассивСотрудников, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция АдресСпискаПодобранныхМероприятий()
	
	ТаблицаУжеПодобранныхМероприятий = Новый ТаблицаЗначений;
	ТаблицаУжеПодобранныхМероприятий.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаУжеПодобранныхМероприятий.Колонки.Добавить("Мероприятие", Новый ОписаниеТипов("СправочникСсылка.МероприятияОбученияРазвития"));
	ТаблицаУжеПодобранныхМероприятий.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	
	Для каждого Мероприятие Из Объект.Мероприятия Цикл
		НайденныеСотрудники = Объект.Сотрудники.НайтиСтроки(Новый Структура("НомерСтрокиМероприятия", Мероприятие.НомерСтрокиМероприятия));
		Для каждого Сотрудник Из НайденныеСотрудники Цикл
			НоваяСтрокаТЗ = ТаблицаУжеПодобранныхМероприятий.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТЗ, Мероприятие);
			НоваяСтрокаТЗ.ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сотрудник.Сотрудник, "ФизическоеЛицо");
		КонецЦикла; 
	КонецЦикла; 
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаУжеПодобранныхМероприятий, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция АдресСпискаПодобранныхЗаявок()
	
	МассивЗаявок = Новый Массив();
	
	Для каждого Мероприятие Из Объект.Мероприятия Цикл
		Если ЗначениеЗаполнено(Мероприятие.Заявка) Тогда
			МассивЗаявок.Добавить(Мероприятие.Заявка);
		КонецЕсли;
	КонецЦикла; 
	
	Возврат ПоместитьВоВременноеХранилище(МассивЗаявок, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСотрудниковПоПодобраннойЗаявке(Заявка,НомерСтрокиМероприятия)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаНаВключениеВПланОбученияСотрудники.Сотрудник
		|ИЗ
		|	Документ.ЗаявкаНаВключениеВПланОбучения.Сотрудники КАК ЗаявкаНаВключениеВПланОбученияСотрудники
		|ГДЕ
		|	ЗаявкаНаВключениеВПланОбученияСотрудники.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Заявка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовыйСотрудник = Объект.Сотрудники.Добавить();
		НовыйСотрудник.НомерСтрокиМероприятия = НомерСтрокиМероприятия;
		НовыйСотрудник.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УдалитьСотрудниковМероприятия()

	УдаляемыеСотрудники = Объект.Сотрудники.НайтиСтроки(Новый Структура("НомерСтрокиМероприятия", АктивноеМероприятие));
		
	Для каждого УдаляемыйСотрудник Из УдаляемыеСотрудники Цикл
		Объект.Сотрудники.Удалить(УдаляемыйСотрудник);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДополнительныеРеквизитыМероприятия()

	Для каждого Мероприятие Из Объект.Мероприятия Цикл
		
		Если ЗначениеЗаполнено(Мероприятие.Заявка) Тогда
			Мероприятие.НомерЗаявки = Строка(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Мероприятие.Заявка,"Номер"));
		КонецЕсли;
		
		УстановитьКоличествоВычисляетсяСтроки(ЭтаФорма, Мероприятие);
		УстановитьВторичныеРеквизитыСтрокиПоМероприятию(Мероприятие);
		
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура УстановитьСледующийНомерСтрокиМероприятия()

	СледующийНомерСтрокиМероприятия = 1;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланОбученияРазвитияМероприятия.НомерСтрокиМероприятия КАК НомерСтрокиМероприятия
		|ПОМЕСТИТЬ ВТСтроки
		|ИЗ
		|	Документ.ПланОбученияРазвития.Мероприятия КАК ПланОбученияРазвитияМероприятия
		|ГДЕ
		|	ПланОбученияРазвитияМероприятия.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТСтроки.НомерСтрокиМероприятия) КАК НомерСтрокиМероприятия
		|ИЗ
		|	ВТСтроки КАК ВТСтроки";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			СледующийНомерСтрокиМероприятия = СледующийНомерСтрокиМероприятия + РезультатЗапроса.Выгрузить()[0].НомерСтрокиМероприятия;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция УстановленОтборПоМероприятию()

	Сотрудники = Элементы.Сотрудники;
	
	ОтборПоМероприятию = Сотрудники.ОтборСтрок <> Неопределено И ЗначениеЗаполнено(Сотрудники.ОтборСтрок["НомерСтрокиМероприятия"]);
	Если НЕ ОтборПоМероприятию Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано мероприятие'"));
	КонецЕсли;
	Возврат ОтборПоМероприятию;

КонецФункции

&НаКлиенте
Процедура УстановитьКоличествоСотрудниковВТабличнойЧастиМероприятия(НомерСтрокиМероприятия)

	МероприятияТекущиеДанные = Объект.Мероприятия.НайтиСтроки(Новый Структура("НомерСтрокиМероприятия", НомерСтрокиМероприятия));
	
	Если МероприятияТекущиеДанные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаМероприятия = МероприятияТекущиеДанные[0];
	КоличествоСотрудников = Объект.Сотрудники.НайтиСтроки(Новый Структура("НомерСтрокиМероприятия", НомерСтрокиМероприятия)).Количество();
	
	СтрокаМероприятия.КоличествоВычисляется = СтрокаМероприятия.КоличествоВычисляется
												ИЛИ (КоличествоСотрудников >= СтрокаМероприятия.КоличествоСотрудников);
	
	Если СтрокаМероприятия.КоличествоВычисляется Тогда
		СтрокаМероприятия.КоличествоСотрудников = КоличествоСотрудников;
		РассчитатьСуммуМероприятия(СтрокаМероприятия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКоличествоВычисляетсяСтроки(Форма, ТекущаяСтрокаМероприятия)

		НайденныеСотрудники = Форма.Объект.Сотрудники.НайтиСтроки(Новый Структура("НомерСтрокиМероприятия", ТекущаяСтрокаМероприятия.НомерСтрокиМероприятия)); 
		ТекущаяСтрокаМероприятия.КоличествоВычисляется = (НайденныеСотрудники.Количество() = ТекущаяСтрокаМероприятия.КоличествоСотрудников);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВторичныеРеквизитыСтрокиПоМероприятию(ТекущиеДанные)

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Мероприятие) Тогда
		Возврат;
	КонецЕсли;
	
	МероприятиеСтруктураРеквизитов = РеквизитыМероприятия(ТекущиеДанные.Мероприятие, "Стоимость, СпособОпределенияСтоимости");
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, МероприятиеСтруктураРеквизитов);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьСуммуМероприятия(ТекущиеДанные)

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.СпособОпределенияСтоимости = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСуммыРасходовНаПерсонал.СуммаКратнаКоличествуСотрудников") Тогда
		Сотрудников = ТекущиеДанные.КоличествоСотрудников;
	Иначе
		Сотрудников = 1;
	КонецЕсли;

	ТекущиеДанные.СуммаРасходов = ТекущиеДанные.Стоимость * Сотрудников;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьКоличествоУчебныхЧасовМероприятия(ТекущиеДанные)

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Мероприятие) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.КоличествоУчебныхЧасов) Тогда
		МероприятиеСтруктураРеквизитов = РеквизитыМероприятия(ТекущиеДанные.Мероприятие, "КоличествоУчебныхЧасов");
		ТекущиеДанные.КоличествоУчебныхЧасов = МероприятиеСтруктураРеквизитов.КоличествоУчебныхЧасов;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция РеквизитыМероприятия(МероприятиеСсылка, ИменаРеквизитов)
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(МероприятиеСсылка, ИменаРеквизитов);
КонецФункции

#КонецОбласти


