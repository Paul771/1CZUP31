#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = Документы.ПланОбученияРазвития.ПолучитьДанныеДляПроведения(Ссылка);
	
	ОбучениеРазвитие.СформироватьДвиженияПланаПоМероприятиям(Движения, ДанныеДляПроведения.ПлановыеДвиженияМероприятий);
	ОбучениеРазвитие.СформироватьДвиженияПланаПоСотрудникам(Движения, ДанныеДляПроведения.ПлановыеДвиженияСотрудников);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Согласован = Ложь;
		Утвердил = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	КонецЕсли;
	
	Для каждого Мероприятие Из Мероприятия Цикл
		
		// Рассчитываем сумму по каждому сотруднику.
		СотрудникиМероприятия = Сотрудники.НайтиСтроки(Новый Структура("НомерСтрокиМероприятия",Мероприятие.НомерСтрокиМероприятия));
		
		Если СотрудникиМероприятия.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаНаЧеловека = Окр(Мероприятие.СуммаРасходов / СотрудникиМероприятия.Количество(),2);
		Остаток = Мероприятие.СуммаРасходов - СуммаНаЧеловека*СотрудникиМероприятия.Количество();
		Для каждого Сотрудник Из СотрудникиМероприятия Цикл
			Сотрудник.СуммаНаСотрудника = СуммаНаЧеловека + ?(Сотрудник = СотрудникиМероприятия[СотрудникиМероприятия.Количество()-1],Остаток,0);
		КонецЦикла; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаПланирования, "Объект.ДатаНачалаПланирования", Отказ, НСтр("ru='Начало периода планирования'"), , , Ложь);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ПересекаютсяПериодыПланирования() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Уже существуют планы обучения, введенные в этом периоде. Пожалуйста, проверьте даты планирования.'"),
			ЭтотОбъект,
			"ДатаНачалаПланирования",,
			Отказ);
		МассивНепроверяемыхРеквизитов.Добавить("ДатаНачалаПланирования"); 		
		МассивНепроверяемыхРеквизитов.Добавить("ДатаОкончанияПланирования"); 
	КонецЕсли;
	
	// Проверка периодов мероприятий
	Для каждого Мероприятие Из Мероприятия Цикл
		Если НЕ ЗначениеЗаполнено(Мероприятие.ДатаНачала)
			ИЛИ Мероприятие.ДатаНачала > Мероприятие.ДатаОкончания
			ИЛИ Мероприятие.ДатаНачала < ДатаНачалаПланирования
			ИЛИ Мероприятие.ДатаНачала > ДатаОкончанияПланирования Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭтотОбъект,
				НСтр("ru ='Неверно заполнен период.'"),
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Мероприятия[%1].ДатаНачала", Мероприятия.Индекс(Мероприятие)),,
				Отказ);
				
		ИначеЕсли НЕ ЗначениеЗаполнено(Мероприятие.ДатаОкончания)
			ИЛИ Мероприятие.ДатаОкончания < ДатаНачалаПланирования
			ИЛИ Мероприятие.ДатаОкончания > ДатаОкончанияПланирования Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭтотОбъект,
				НСтр("ru ='Неверно заполнен период.'"),
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Мероприятия[%1].ДатаОкончания", Мероприятия.Индекс(Мероприятие)),,
				Отказ);
			
		КонецЕсли;
	КонецЦикла; 

	Если НЕ Согласован Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Утвердил");
	КонецЕсли;
	
	ПроверитьПодчиненнуюТабличнуюЧастьСотрудниковНаДублиФизическихЛиц(Отказ);
	
	МассивНепроверяемыхРеквизитов.Добавить("Мероприятие.ДатаНачала");
	МассивНепроверяемыхРеквизитов.Добавить("Мероприятие.ДатаОкончания");

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("Сотрудники", "Сотрудник"));
	
	Возврат ОбменДаннымиЗарплатаКадрыРасширенный.ОграниченияРегистрацииПоПодразделениюИСотрудникам(ЭтотОбъект, Подразделение, МассивПараметров, ДатаНачалаПланирования);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПересекаютсяПериодыПланирования()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланОбученияПоМероприятиям.Мероприятие
		|ИЗ
		|	РегистрСведений.ПланОбученияПоМероприятиям КАК ПланОбученияПоМероприятиям
		|ГДЕ
		|	ПланОбученияПоМероприятиям.Подразделение = &Подразделение
		|	И ПланОбученияПоМероприятиям.ДатаНачалаПланирования <= &ДатаОкончанияПланирования
		|	И ПланОбученияПоМероприятиям.ДатаОкончанияПланирования >= &ДатаНачалаПланирования
		|	И ПланОбученияПоМероприятиям.Регистратор <> &Ссылка";
	
	Запрос.УстановитьПараметр("ДатаНачалаПланирования", ДатаНачалаПланирования);
	Запрос.УстановитьПараметр("ДатаОкончанияПланирования", ДатаОкончанияПланирования);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции

Процедура ПроверитьПодчиненнуюТабличнуюЧастьСотрудниковНаДублиФизическихЛиц(Отказ)

	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники.ВыгрузитьКолонку("Сотрудник"), "ФизическоеЛицо");
	
	Для каждого СтрокаМероприятия Из Мероприятия Цикл
		НайденныеСотрудники = Сотрудники.НайтиСтроки(Новый Структура("НомерСтрокиМероприятия", СтрокаМероприятия.НомерСтрокиМероприятия));
		СписокФизическихЛиц = Новый Соответствие;
		
		Для каждого СтрокаСотрудника Из НайденныеСотрудники Цикл
			ФизическоеЛицо = ФизическиеЛицаСотрудников[СтрокаСотрудника.Сотрудник];
			Если СписокФизическихЛиц.Получить(ФизическоеЛицо) = Неопределено Тогда
				СписокФизическихЛиц.Вставить(ФизическоеЛицо, Истина);
				Продолжить;
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru ='%1 уже подобран в данное мероприятие.'"), СтрокаСотрудника.Сотрудник),
				ЭтотОбъект,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Мероприятия[%1].Мероприятие", Мероприятия.Индекс(СтрокаМероприятия)),,
				Отказ);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли