#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	ОписаниеСостава = ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента();
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	ОписаниеСостава.ИспользоватьКраткийСостав = Ложь;
	ОписаниеСостава.ИспользоватьОграничениеДоступа = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	
	ЗарплатаКадрыСоставДокументов.ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(
		ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц,
		"Пострадавшие",
		"Пострадавший");
		
	Возврат ОписаниеСостава;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Протокол опроса
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.ПротоколОпросаУчастникаНесчастногоСлучая";
	КомандаПечати.Идентификатор = "ПФ_MXL_ПротоколОпроса";
	КомандаПечати.Представление = НСтр("ru = 'Протокол опроса'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПротоколОпроса") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ПротоколОпроса",
			НСтр("ru = 'Протокол опроса'"), ПечатьПротоколаОпроса(МассивОбъектов, ОбъектыПечати), ,
			"Документ.ПротоколОпросаУчастникаНесчастногоСлучая.ПФ_MXL_ПротоколОпроса");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьПротоколаОпроса(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПротоколОпросаУчастникаНесчастногоСлучая_ПротоколОпроса";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПротоколОпросаУчастникаНесчастногоСлучая.ПФ_MXL_ПротоколОпроса");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Раздел1_1 = Макет.ПолучитьОбласть("Раздел1_1");
		Раздел1_2 = Макет.ПолучитьОбласть("Раздел1_2");
		Раздел1_3 = Макет.ПолучитьОбласть("Раздел1_3");
		РазделТипПострадавший = Макет.ПолучитьОбласть("ТипПострадавший");
		РазделТипОчевидец = Макет.ПолучитьОбласть("ТипОчевидец");
		РазделТипДолжностноеЛицо = Макет.ПолучитьОбласть("ТипДолжностноеЛицо");
		Раздел2 = Макет.ПолучитьОбласть("Раздел2");
		Раздел3 = Макет.ПолучитьОбласть("Раздел3");
		Раздел4 = Макет.ПолучитьОбласть("Раздел4");
		Раздел5 = Макет.ПолучитьОбласть("Раздел5");
		Раздел6 = Макет.ПолучитьОбласть("Раздел6");
		Раздел7 = Макет.ПолучитьОбласть("Раздел7");
		ДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
		ДопПодпись = Макет.ПолучитьОбласть("ДопПодпись");
		
		////////////////////////////////////////////////
		// Область 1_1
		
		Раздел1_1.Параметры.Заполнить(ДанныеДокумента);
		
		ТабличныйДокумент.Вывести(Раздел1_1);
		
		/////////////////////////////////////////////////
		// Область ВидОпрашиваемогоЛица
		
		Если ДанныеДокумента.ВидОпрашиваемогоЛица = НСтр("ru = 'Пострадавший'") Тогда
			ТабличныйДокумент.Вывести(РазделТипПострадавший);
		ИначеЕсли ДанныеДокумента.ВидОпрашиваемогоЛица = НСтр("ru = 'Очевидец'") Тогда
			ТабличныйДокумент.Вывести(РазделТипОчевидец);
		ИначеЕсли ДанныеДокумента.ВидОпрашиваемогоЛица = НСтр("ru = 'Должностное лицо'") Тогда
			ТабличныйДокумент.Вывести(РазделТипДолжностноеЛицо);
		КонецЕсли;
		
		////////////////////////////////////////////////
		// Раздел 1_2
		
		Раздел1_2.Параметры.Заполнить(ДанныеДокумента);
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ДополнительныеСведения, "60,110");
		Раздел1_2.Параметры.ДополнительныеСведенияЧасть1 = СписокСтрок[0];
		Раздел1_2.Параметры.ДополнительныеСведенияЧасть2 = СписокСтрок[1];
		
		ТабличныйДокумент.Вывести(Раздел1_2);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
		
		////////////////////////////////////////////////
		// Раздел 1_3
		
		Раздел1_3.Параметры.ОпрашиваемоеЛицоИнициалы = ДанныеДокумента.ОпрашиваемоеЛицоИнициалы;
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаУчастникиОпроса, "55,110,110, 110");
		Раздел1_3.Параметры.ИныеЛицаОпросаЧасть1 = СписокСтрок[0];
		Раздел1_3.Параметры.ИныеЛицаОпросаЧасть2 = СписокСтрок[1];
		Раздел1_3.Параметры.ИныеЛицаОпросаЧасть3 = СписокСтрок[2];
		Раздел1_3.Параметры.ИныеЛицаОпросаЧасть4 = СписокСтрок[3];
		
		ТабличныйДокумент.Вывести(Раздел1_3);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 4);
		
		////////////////////////////////////////////////
		// Раздел 2
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ТехническиеСредстваОпроса, "20, 110");
		Раздел2.Параметры.ТехническиеСредстваОпросаЧасть1 = СписокСтрок[0];
		Раздел2.Параметры.ТехническиеСредстваОпросаЧасть2 = СписокСтрок[1];
		
		ТабличныйДокумент.Вывести(Раздел2);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
		
		////////////////////////////////////////////////
		// Раздел 3
		
		Раздел3.Параметры.ДатаПроисшествия = ДанныеДокумента.ДатаПроисшествия;
		Раздел3.Параметры.ПострадавшийФИОПрофессияДолжность = ДанныеДокумента.СтрокаПострадавшие;
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ПоказанияОпрашиваемогоЛица, "110, 110, 110, 110, 110, 110");
		Раздел3.Параметры.ПоказанияОпрашиваемогоЛицаЧасть1 = СписокСтрок[0];
		Раздел3.Параметры.ПоказанияОпрашиваемогоЛицаЧасть2 = СписокСтрок[1];
		Раздел3.Параметры.ПоказанияОпрашиваемогоЛицаЧасть3 = СписокСтрок[2];
		Раздел3.Параметры.ПоказанияОпрашиваемогоЛицаЧасть4 = СписокСтрок[3];
		Раздел3.Параметры.ПоказанияОпрашиваемогоЛицаЧасть5 = СписокСтрок[4];
		Раздел3.Параметры.ПоказанияОпрашиваемогоЛицаЧасть6 = СписокСтрок[5];
		
		ТабличныйДокумент.Вывести(Раздел3);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 6);
		
		////////////////////////////////////////////////
		// Раздел 4
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаУчастникиОпроса, "25, 110");
		Раздел4.Параметры.УчастникиОпросаПоложениеФиоЧасть1 = СписокСтрок[0];
		Раздел4.Параметры.УчастникиОпросаПоложениеФиоЧасть2 = СписокСтрок[1];
		
		ТабличныйДокумент.Вывести(Раздел4);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
		
		////////////////////////////////////////////////
		// Раздел 5
		
		Раздел5.Параметры.ПрисутствиеЗаявлений = ДанныеДокумента.ПрисутствиеЗаявлений;
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаПоступившиеЗаявления, "30, 110, 110, 110");
		Раздел5.Параметры.ПоступившиеЗаявленияЧасть1 = СписокСтрок[0];
		Раздел5.Параметры.ПоступившиеЗаявленияЧасть2 = СписокСтрок[1];
		Раздел5.Параметры.ПоступившиеЗаявленияЧасть3 = СписокСтрок[2];
		Раздел5.Параметры.ПоступившиеЗаявленияЧасть4 = СписокСтрок[3];
		
		ТабличныйДокумент.Вывести(Раздел5);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 4);
		
		/////////////////////////////////////////////////
		// Раздел 6
		
		Раздел6.Параметры.ОпросПроизвелФИО = ДанныеДокумента.ОпросПроизвелФИО;
		
		ПервыйУчастникОпроса = Истина;
		Для каждого ФИОУчастникаОпроса Из ДанныеДокумента.МассивУчастниковОпроса Цикл
			Если ПервыйУчастникОпроса Тогда
				ПервыйУчастникОпроса = Ложь;
				Раздел6.Параметры.УчастникиОпросаФИО = ФИОУчастникаОпроса;
				ТабличныйДокумент.Вывести(Раздел6);
			Иначе
				ДопПодпись.Параметры.УчастникиОпросаФИО = ФИОУчастникаОпроса;
				ТабличныйДокумент.Вывести(ДопПодпись);
			КонецЕсли;
		КонецЦикла;
		
		/////////////////////////////////////////////////
		// Раздел 7
		
		Раздел7.Параметры.ОпрашиваемоеЛицоИнициалы = ДанныеДокумента.ОпрашиваемоеЛицоИнициалы;
		Раздел7.Параметры.ОпросПроизвелФИО = ДанныеДокумента.ОпросПроизвелФИО;
		
		ТабличныйДокумент.Вывести(Раздел7);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ДанныеПечатиДокументов(МассивОбъектов)
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц  = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Ссылка,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Номер,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Дата,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Проведен,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Организация,
	|	Организации.НаименованиеПолное КАК НаименованиеОрганизации,
	|	Организации.НаименованиеСокращенное КАК НаименованиеСокращенное,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Подразделение,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ДокументОснование,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ОпросПроизвел,
	|	Сотрудники.ФизическоеЛицо КАК ОпросПроизвелФизическоеЛицо,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ОпросНачат,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ОпросОкончен,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.МестоПроведения,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ВидОпрашиваемогоЛица,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ОпрашиваемоеЛицо,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ДополнительныеСведения,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ТехническиеСредстваОпроса,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ПоказанияОпрашиваемогоЛица,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.МестоСоставленияПротоколаОпроса,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ДатаСоставленияПротоколаОпроса,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Руководитель,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ДолжностьРуководителя,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ОтветственныйЗаОхрануТруда,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.ДолжностьОтветственногоЗаОхрануТруда,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Ответственный,
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Комментарий,
	|	НесчастныйСлучайНаПроизводстве.ДатаПроисшествия КАК ДатаПроисшествияДатаВремя
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПротоколОпросаУчастникаНесчастногоСлучая КАК ПротоколОпросаУчастникаНесчастногоСлучая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НесчастныйСлучайНаПроизводстве КАК НесчастныйСлучайНаПроизводстве
	|		ПО ПротоколОпросаУчастникаНесчастногоСлучая.ДокументОснование = НесчастныйСлучайНаПроизводстве.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПротоколОпросаУчастникаНесчастногоСлучая.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ПротоколОпросаУчастникаНесчастногоСлучая.ОпросПроизвел = Сотрудники.Ссылка
	|ГДЕ
	|	ПротоколОпросаУчастникаНесчастногоСлучая.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПротоколОпросаУчастникаНесчастногоСлучаяУчастникиОпроса.Ссылка,
	|	ПротоколОпросаУчастникаНесчастногоСлучаяУчастникиОпроса.Участник,
	|	ПротоколОпросаУчастникаНесчастногоСлучаяУчастникиОпроса.ПроцессуальноеПоложение,
	|	ПротоколОпросаУчастникаНесчастногоСлучаяУчастникиОпроса.ПоступившиеЗаявления,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя КАК Период
	|ПОМЕСТИТЬ ВТУчастникиОпросаФизическиеЛица
	|ИЗ
	|	Документ.ПротоколОпросаУчастникаНесчастногоСлучая.УчастникиОпроса КАК ПротоколОпросаУчастникаНесчастногоСлучаяУчастникиОпроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО ПротоколОпросаУчастникаНесчастногоСлучаяУчастникиОпроса.Ссылка = ДанныеДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.Ссылка.Организация КАК Организация,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.Пострадавший,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ДолжностьПоШтатномуРасписанию,
	|	Должности.Наименование КАК НаименованиеДолжности,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СтажОбщийПредставление,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СтажВОрганизацииПредставление,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ОпьянениеПострадавшего,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ВидИСтепеньОпьянения,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ХарактерПовреждений,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СведенияСОУТ,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СведенияОПСОУТ,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя КАК Период
	|ПОМЕСТИТЬ ВТПострадавшиеФизическиеЛица
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве.Пострадавшие КАК НесчастныйСлучайНаПроизводствеПострадавшие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО НесчастныйСлучайНаПроизводствеПострадавшие.Ссылка = ДанныеДокументов.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК РабочиеМеста
	|		ПО НесчастныйСлучайНаПроизводствеПострадавшие.ДолжностьПоШтатномуРасписанию = РабочиеМеста.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	|		ПО (РабочиеМеста.Должность = Должности.Ссылка)";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТУчастникиОпросаФизическиеЛица", "Участник,Период");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФамилияИО");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчастникиОпроса.Ссылка,
	|	УчастникиОпроса.Участник,
	|	УчастникиОпроса.ПроцессуальноеПоложение,
	|	УчастникиОпроса.ПоступившиеЗаявления,
	|	КадровыеДанныеФизическихЛиц.ФамилияИО
	|ПОМЕСТИТЬ ВТУчастникиОпроса
	|ИЗ
	|	ВТУчастникиОпросаФизическиеЛица КАК УчастникиОпроса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО УчастникиОпроса.Участник = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТУчастникиОпросаФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТПострадавшиеФизическиеЛица", "Пострадавший,Период");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФамилияИО, Профессии");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пострадавшие.Ссылка,
	|	Пострадавшие.Организация КАК Организация,
	|	Пострадавшие.Пострадавший,
	|	Пострадавшие.ДолжностьПоШтатномуРасписанию,
	|	Пострадавшие.НаименованиеДолжности,
	|	Пострадавшие.СтажОбщийПредставление,
	|	Пострадавшие.СтажВОрганизацииПредставление,
	|	Пострадавшие.ОпьянениеПострадавшего,
	|	Пострадавшие.ВидИСтепеньОпьянения,
	|	Пострадавшие.ХарактерПовреждений,
	|	Пострадавшие.СведенияСОУТ,
	|	Пострадавшие.СведенияОПСОУТ,
	|	КадровыеДанныеФизическихЛиц.ФамилияИО,
	|	КадровыеДанныеФизическихЛиц.Профессии
	|ПОМЕСТИТЬ ВТПострадавшие
	|ИЗ
	|	ВТПострадавшиеФизическиеЛица КАК Пострадавшие
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО Пострадавшие.Пострадавший = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПострадавшиеФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ДанныеПечати = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Выборка);
		
		ДанныеПечати.Вставить("ДатаПроисшествия", Формат(Выборка.ДатаПроисшествияДатаВремя, "ДЛФ=ДД"));
		
		ДанныеПечати.Вставить("ОпросНачатЧасы", Час(ДанныеПечати.ОпросНачат));
		ДанныеПечати.Вставить("ОпросНачатМинуты", Формат(ДанныеПечати.ОпросНачат, "ДФ=мм"));
		ДанныеПечати.Вставить("ОпросОконченЧасы", Час(ДанныеПечати.ОпросОкончен));
		ДанныеПечати.Вставить("ОпросОконченМинуты", Формат(ДанныеПечати.ОпросОкончен, "ДФ=мм"));
		
		ДанныеПечати.Вставить("ОпросПроизвелДолжностьФИО", "");
		ДанныеПечати.Вставить("ОпросПроизвелФИО", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоФИО", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоДатаРождения", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоМестоРождения", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоМестоЖительства", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоТелефон", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоГражданство", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоОбразование", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоСемейноеПоложение", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоМестоРаботы", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоПрофессия", "");
		ДанныеПечати.Вставить("ОпрашиваемоеЛицоИнициалы", "");
		ДанныеПечати.Вставить("СтрокаУчастникиОпросаФИО", "");
		ДанныеПечати.Вставить("СтрокаУчастникиОпроса", "");
		ДанныеПечати.Вставить("СтрокаПоступившиеЗаявления", "");
		ДанныеПечати.Вставить("ПрисутствиеЗаявлений", НСтр("ru = 'Не поступили'"));
		ДанныеПечати.Вставить("МассивУчастниковОпроса", Новый Массив);
		ДанныеПечати.Вставить("СтрокаПострадавшие", "");
		
		// ОпросПроизвел
		КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ДанныеПечати.ОпросПроизвел, "ФамилияИО, Должность", ДанныеПечати.ДатаПроисшествияДатаВремя);
		Для Каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ОпросПроизвелДолжностьФИО", Строка(СтрокаКадровыхДанных.Должность) + " " + СтрокаКадровыхДанных.ФамилияИО);
			ДанныеПечати.Вставить("ОпросПроизвелФИО", СтрокаКадровыхДанных.ФамилияИО);
		КонецЦикла;
		
		// ОпрашиваемоеЛицо
		СтрокаКадровыхДанных = "ФамилияИО, ДатаРождения, МестоРождения, АдресМестаПроживанияПредставление, ТелефонМобильныйПредставление, Страна, ПолученныеОбразования, СостояниеВБраке, Профессии";
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДанныеПечати.ОпрашиваемоеЛицо, СтрокаКадровыхДанных, ДанныеПечати.ДатаПроисшествияДатаВремя);
		
		Для Каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоФИО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаКадровыхДанных.ФизическоеЛицо, "Наименование"));
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоДатаРождения", Формат(СтрокаКадровыхДанных.ДатаРождения, "ДЛФ=ДД"));
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоМестоРождения", ПерсонифицированныйУчетКлиентСервер.ПредставлениеМестаРождения(СтрокаКадровыхДанных.МестоРождения));
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоМестоЖительства", СтрокаКадровыхДанных.АдресМестаПроживанияПредставление);
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоТелефон", СтрокаКадровыхДанных.ТелефонМобильныйПредставление);
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоГражданство", СтрокаКадровыхДанных.Страна);
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоОбразование", СтрокаКадровыхДанных.ПолученныеОбразования);
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоСемейноеПоложение", СтрокаКадровыхДанных.СостояниеВБраке);
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоМестоРаботы", ДанныеПечати.НаименованиеСокращенное);
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоПрофессия", СтрокаКадровыхДанных.Профессии);
			ДанныеПечати.Вставить("ОпрашиваемоеЛицоИнициалы", СтрокаКадровыхДанных.ФамилияИО);
		КонецЦикла;
		
		// Заполнение соответствия
		ДанныеПечатиОбъектов.Вставить(Выборка.Ссылка, ДанныеПечати);
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчастникиОпроса.Ссылка,
	|	УчастникиОпроса.Участник,
	|	УчастникиОпроса.ПроцессуальноеПоложение,
	|	УчастникиОпроса.ПоступившиеЗаявления,
	|	ВЫБОР
	|		КОГДА УчастникиОпроса.Участник ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА УчастникиОпроса.ФамилияИО
	|		ИНАЧЕ УчастникиОпроса.Участник
	|	КОНЕЦ КАК ФамилияИО
	|ИЗ
	|	ВТУчастникиОпроса КАК УчастникиОпроса
	|
	|УПОРЯДОЧИТЬ ПО
	|	УчастникиОпроса.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаУчастникиОпросаФИО = "";
		СтрокаУчастникиОпроса = "";
		СтрокаПоступившиеЗаявления = "";
		МассивУчастниковОпроса = Новый Массив;
		
		Пока Выборка.Следующий() Цикл
			СтрокаУчастникиОпросаФИО = СтрокаУчастникиОпросаФИО + Выборка.ФамилияИО + ", ";
			СтрокаУчастникиОпроса = СтрокаУчастникиОпроса + Выборка.ПроцессуальноеПоложение + " " + Выборка.ФамилияИО + ", ";
			Если Не ПустаяСтрока(Выборка.ПоступившиеЗаявления) Тогда
				СтрокаПоступившиеЗаявления = СтрокаПоступившиеЗаявления + Выборка.ФамилияИО + ": " + Выборка.ПоступившиеЗаявления + ", ";
			КонецЕсли;
			Если Выборка.Участник <> ДанныеПечати.ОпросПроизвелФизическоеЛицо Тогда
				МассивУчастниковОпроса.Добавить(?(ТипЗнч(Выборка.Участник) = Тип("Строка"), Выборка.Участник, Выборка.ФамилияИО));
			КонецЕсли;
		КонецЦикла;
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаУчастникиОпросаФИО, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаУчастникиОпроса, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаПоступившиеЗаявления, 2);
		ДанныеПечати.Вставить("СтрокаУчастникиОпросаФИО", СтрокаУчастникиОпросаФИО);
		ДанныеПечати.Вставить("СтрокаУчастникиОпроса", СтрокаУчастникиОпроса);
		ДанныеПечати.Вставить("СтрокаПоступившиеЗаявления", СтрокаПоступившиеЗаявления);
		ДанныеПечати.Вставить("ПрисутствиеЗаявлений", ?(ПустаяСтрока(СтрокаПоступившиеЗаявления), НСтр("ru = 'Не поступили'"), НСтр("ru = 'Поступили'")));
		ДанныеПечати.Вставить("МассивУчастниковОпроса", МассивУчастниковОпроса);
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пострадавшие.Ссылка,
	|	Пострадавшие.Организация КАК Организация,
	|	Пострадавшие.Пострадавший,
	|	Пострадавшие.ДолжностьПоШтатномуРасписанию,
	|	Пострадавшие.НаименованиеДолжности,
	|	Пострадавшие.СтажОбщийПредставление,
	|	Пострадавшие.СтажВОрганизацииПредставление,
	|	Пострадавшие.ОпьянениеПострадавшего,
	|	Пострадавшие.ВидИСтепеньОпьянения,
	|	Пострадавшие.ХарактерПовреждений,
	|	Пострадавшие.СведенияСОУТ,
	|	Пострадавшие.СведенияОПСОУТ,
	|	Пострадавшие.ФамилияИО,
	|	Пострадавшие.Профессии
	|ИЗ
	|	ВТПострадавшие КАК Пострадавшие
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пострадавшие.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПострадавшие = "";
		Пока Выборка.Следующий() Цикл
			СтрокаПострадавшие = СтрокаПострадавшие + Выборка.ФамилияИО + " " + СокрЛП(Выборка.Профессии) + " " + СокрЛП(Выборка.НаименованиеДолжности) + ", ";
		КонецЦикла;
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаПострадавшие, 2);
		ДанныеПечати.Вставить("СтрокаПострадавшие", СтрокаПострадавшие);
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли