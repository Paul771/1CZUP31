
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Первоначальное заполнение объекта.
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура;
		ЗначенияДляЗаполнения.Вставить("Организация",	"Объект.Организация");
		ЗначенияДляЗаполнения.Вставить("Ответственный",	"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
	ВзаиморасчетыССотрудникамиВХОФормы.ПриЧтенииНаСервере(ЭтотОбъект);
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ВзаиморасчетыССотрудникамиВХОКлиент.ПлатежноеПоручениеОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбменСБанкамиПоЗарплатнымПроектамКлиент.ОбновитьКомандыОбмена(ЭтотОбъект, ЗарплатныйПроектВедомостей);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ВзаиморасчетыССотрудникамиВХОФормы.ПослеЗаписиНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.СостоянияДокументовЗачисленияЗарплаты"));
	Оповестить("Запись_ПлатежноеПоручение", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	ОбменСБанкамиПоЗарплатнымПроектамКлиент.ОбновитьКомандыОбмена(ЭтотОбъект, ЗарплатныйПроектВедомостей);
	
КонецПроцедуры

&НаКлиенте
Процедура ВедомостиПриИзменении(Элемент)
	
	ВедомостиПриИзмененииНаСервере();
	ОбменСБанкамиПоЗарплатнымПроектамКлиент.ОбновитьКомандыОбмена(ЭтотОбъект, ЗарплатныйПроектВедомостей);
	
КонецПроцедуры

&НаКлиенте
Процедура ВедомостиВедомостьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ОграничиватьТипВедомостьюНаВыплатуЗарплатыВБанк Тогда
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ОткрытьДокументПодтверждение(Команда)
	ОбменСБанкамиПоЗарплатнымПроектамКлиент.ОткрытьДокументПодтверждение(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗагрузитьДокументПодтверждение(Команда)
	
	ОткрытьФорму("Документ.ПодтверждениеЗачисленияЗарплаты.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьВнутреннююКоманду(Команда)
	
	ВыполнениеКомандыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВБанк(Команда)
	
	ОбменСБанкамиКлиент.СформироватьПодписатьОтправитьЭД(Объект.Ссылка);
	ВзаиморасчетыССотрудникамиВХОКлиент.ПослеОтправкиВБанк(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтправленныйДокумент(Команда)
	
	ОбменСБанкамиКлиент.ОткрытьАктуальныйЭД(Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	Если Параметры.Ключ.Пустая() Тогда
		
		СсылкаНаОбъект = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка).ПолучитьСсылку();
		
	Иначе
		
		СсылкаНаОбъект = Объект.Ссылка;
		ТолькоПросмотр = ТолькоПросмотр Или Не ОбменСБанкамиПоЗарплатнымПроектам.ДоступностьПлатежногоДокумента(СсылкаНаОбъект);
		
	КонецЕсли;
	
	ЗначенияДляЗаполнения = Новый Структура;
	ЗначенияДляЗаполнения.Вставить("Получатель", "Получатель");
	ЗначенияДляЗаполнения.Вставить("РасчетныйСчет", "РасчетныйСчет");
	ЗначенияДляЗаполнения.Вставить("ИНН", "ИНН");
	ЗначенияДляЗаполнения.Вставить("КПП", "КПП");
	ЗначенияДляЗаполнения.Вставить("СуммаПлатежа", "СуммаПлатежа");
	ЗначенияДляЗаполнения.Вставить("ЗарплатныйПроект", "ЗарплатныйПроектВедомостей");
	
	ОбменСБанкамиПоЗарплатнымПроектам.ЗаполнитьРеквизитыНаФормеПлатежногоДокумента(
		ЭтотОбъект, Объект.Организация, ЗначенияДляЗаполнения, Объект.Ведомости.Выгрузить().ВыгрузитьКолонку("Ведомость"));
	
	НадписьРеквизитыПлательщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИНН %1, КПП %2'"), ИНН, КПП);
	
	ОбменСБанкамиПоЗарплатнымПроектам.ГруппаПодтверждениеИзБанкаДополнитьФорму(ЭтотОбъект);
	ОбменСБанкамиПоЗарплатнымПроектам.КомандыОбменаДополнитьФорму(ЭтотОбъект);
	
	ОграничиватьТипВедомостьюНаВыплатуЗарплатыВБанк = Истина;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы.Выплаты.ВзаиморасчетыПоПрочимДоходам") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ВзаиморасчетыПоПрочимДоходам");
		ОграничиватьТипВедомостьюНаВыплатуЗарплатыВБанк = Не Модуль.ИспользуютсяВзаиморасчетыПоПрочимДоходам();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЗначенияДляЗаполнения = Новый Структура;
	ЗначенияДляЗаполнения.Вставить("ИНН", "ИНН");
	ЗначенияДляЗаполнения.Вставить("КПП", "КПП");
	ЗначенияДляЗаполнения.Вставить("ЗарплатныйПроект", "ЗарплатныйПроектВедомостей");
	
	ОбменСБанкамиПоЗарплатнымПроектам.ЗаполнитьРеквизитыНаФормеПлатежногоДокумента(
		ЭтотОбъект, Объект.Организация, ЗначенияДляЗаполнения, Объект.Ведомости.Выгрузить().ВыгрузитьКолонку("Ведомость"));
	
	ЭтотОбъект.НадписьРеквизитыПлательщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИНН %1, КПП %2'"), ЭтотОбъект.ИНН, ЭтотОбъект.КПП);
	
КонецПроцедуры

&НаСервере
Процедура ВедомостиПриИзмененииНаСервере()
	
	ЗначенияДляЗаполнения = Новый Структура;
	ЗначенияДляЗаполнения.Вставить("Получатель", "Получатель");
	ЗначенияДляЗаполнения.Вставить("РасчетныйСчет", "РасчетныйСчет");
	ЗначенияДляЗаполнения.Вставить("СуммаПлатежа", "СуммаПлатежа");
	ЗначенияДляЗаполнения.Вставить("ЗарплатныйПроект", "ЗарплатныйПроектВедомостей");
	
	ОбменСБанкамиПоЗарплатнымПроектам.ЗаполнитьРеквизитыНаФормеПлатежногоДокумента(
		ЭтотОбъект, Объект.Организация, ЗначенияДляЗаполнения, Объект.Ведомости.Выгрузить().ВыгрузитьКолонку("Ведомость"));
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеОтправкиВБанк()
	
	ВзаиморасчетыССотрудникамиВХОКлиент.ОбработчикОжиданияПослеОтправкиВБанк(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнениеКомандыНаСервере()
	
	ВзаиморасчетыССотрудникамиВХОФормы.ВыполнениеКомандыНаСервере(ЭтотОбъект);
	
КонецПроцедуры


#КонецОбласти
