
#Область ОбработкаСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДанныеФормыИзПараметров();
	
	ЗаполнитьСписокРодителей();
	
	ЗаполнитьСписокВыбораВидМестаВводаЧислоНепосредственно();
	
	УстановитьВидМестаВводаЧисло();
	УстановитьПризнакФактВводитДругой();
	
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДругоеМестоВводаЗначенийПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ДругоеМестоВводаЗначений) Тогда
	    ОтветственныйЗаВводПлана = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
		ОтветственныйЗаВводФакта = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	Иначе
		НайденныеСтроки = ТаблицаРодителей.НайтиСтроки(Новый Структура("Подразделение", ДругоеМестоВводаЗначений));
		Если НайденныеСтроки.Количество() > 0 Тогда
		    ОтветственныйЗаВводПлана = НайденныеСтроки[0].ОтветственныйЗаВводПлана;
			ОтветственныйЗаВводФакта = НайденныеСтроки[0].ОтветственныйЗаВводФакта;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВводаЧисло1ПриИзменении(Элемент)
	
	ДругоеМестоВводаЗначений = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	
	УстановитьДоступностьДругоеМестоВводаЗначений(ЭтаФорма);
	УстановитьДоступностьКемГруппа(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВводаЧисло2ПриИзменении(Элемент)
	УстановитьДоступностьДругоеМестоВводаЗначений(ЭтаФорма);
	УстановитьДоступностьКемГруппа(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйЗаВводПланаПриИзменении(Элемент)
	УстановитьОтветственныйЗаВводФакта();
КонецПроцедуры

&НаКлиенте
Процедура ФактВводитДругойПриИзменении(Элемент)
	УстановитьОтветственныйЗаВводФакта();
	УстановитьДоступностьОтветственныйЗаВводФактаГруппа(ЭтаФорма);
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("МестоВводаЗначений", ?(ВидМестаВводаЧисло = 0, ОбъектНазначения, ДругоеМестоВводаЗначений));
	СтруктураПараметров.Вставить("ОтветственныйЗаВводПлана", ОтветственныйЗаВводПлана);
	СтруктураПараметров.Вставить("ОтветственныйЗаВводФакта", ОтветственныйЗаВводФакта);
	
	Закрыть(СтруктураПараметров);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()

	УстановитьДоступностьМестоВводаВышестоящее(ЭтаФорма);
	УстановитьДоступностьДругоеМестоВводаЗначений(ЭтаФорма);
	УстановитьДоступностьКемГруппа(ЭтаФорма);
	УстановитьДоступностьОтветственныйЗаВводФактаГруппа(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыИзПараметров()

	ЗаполнитьЗначенияСвойств(
		ЭтаФорма, Параметры,
		"ДляПозиции, ОбъектНазначения, Подразделение, Позиция, ОтветственныйЗаВводПлана, ОтветственныйЗаВводФакта, МестоВводаЗначений");
		
	ТаблицаРодителей.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыРодителей));
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРодителей()

	Элементы.ДругоеМестоВводаЗначений.СписокВыбора.Очистить();
	
	Для каждого СтрокаРодителя Из ТаблицаРодителей Цикл
		Элементы.ДругоеМестоВводаЗначений.СписокВыбора.Добавить(СтрокаРодителя.Подразделение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораВидМестаВводаЧислоНепосредственно()

	Элементы.ВидМестаВводаЧислоНепосредственно.СписокВыбора.Очистить();
	
	ТекстЭлемента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Непосредственно в %1 ""%2""'"),
		?(ДляПозиции, НСтр("ru = 'позиции'"), НСтр("ru = 'подразделении'")),
		ОбъектНазначения);
		
	Элементы.ВидМестаВводаЧислоНепосредственно.СписокВыбора.Добавить(0, ТекстЭлемента);

КонецПроцедуры

&НаСервере
Процедура УстановитьВидМестаВводаЧисло()

	Если Не ЗначениеЗаполнено(МестоВводаЗначений) Тогда
		ВидМестаВводаЧисло = 0;
	ИначеЕсли МестоВводаЗначений = ОбъектНазначения Тогда
		ВидМестаВводаЧисло = 0;
	Иначе
		ВидМестаВводаЧисло = 1;
		ДругоеМестоВводаЗначений = МестоВводаЗначений;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьПризнакФактВводитДругой()
	ФактВводитДругой = ОтветственныйЗаВводПлана <> ОтветственныйЗаВводФакта;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьМестоВводаВышестоящее(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"МестоВводаВышестоящееГруппа",
		"Доступность",
		Форма.Элементы.ДругоеМестоВводаЗначений.СписокВыбора.Количество() > 0);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьДругоеМестоВводаЗначений(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ДругоеМестоВводаЗначений",
		"Доступность",
		Форма.ВидМестаВводаЧисло = 1);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьКемГруппа(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"КемГруппа",
		"Доступность",
		Форма.ВидМестаВводаЧисло = 0);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьОтветственныйЗаВводФактаГруппа(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ОтветственныйЗаВводФактаГруппа",
		"Доступность",
		Форма.ФактВводитДругой);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтветственныйЗаВводФакта()

	Если Не ФактВводитДругой Тогда
		ОтветственныйЗаВводФакта = ОтветственныйЗаВводПлана;
	КонецЕсли;

КонецПроцедуры


#КонецОбласти 
