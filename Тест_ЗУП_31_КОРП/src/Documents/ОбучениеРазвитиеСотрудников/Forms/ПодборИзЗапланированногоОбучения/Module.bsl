#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВРеквизитыФормы();
	
	ЗаполнитьТаблицуЗапланированногоОбучения();
	ЗаполнитьСотрудниковВТаблицеЗапланированногоОбучения();
	
	СформироватьСтрокуРезультата();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаЗапланированногоОбученияВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	ВыборСотрудниковНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗапланированногоОбученияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыборСотрудниковНаКлиенте();
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборСотрудниковНаКлиенте()

	ВыделенныеСтроки = Элементы.ТаблицаЗапланированногоОбучения.ВыделенныеСтроки;
	Если ВыделенныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивСотрудников = Новый Массив;
	Для каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		ТекущиеДанные = ТаблицаЗапланированногоОбучения.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Если ТекущиеДанные.Подобрано 
			ИЛИ Не ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;
		МассивСотрудников.Добавить(ТекущиеДанные.Сотрудник);
		ТекущиеДанные.Подобрано = Истина;
		
	КонецЦикла; 
	
	Оповестить("ПодобранНовыйСотрудникИзПланаОбучения", МассивСотрудников, ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ПараметрыВРеквизитыФормы()

	Параметры.Свойство("Мероприятие", Мероприятие);
	Параметры.Свойство("Подразделение", Подразделение);
	Параметры.Свойство("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
	Параметры.Свойство("ДатаАктуальности", ДатаАктуальности);
	
	ЗагрузитьСписокСотрудников();

КонецПроцедуры
 
&НаСервере
Процедура ЗагрузитьСписокСотрудников()

	Если НЕ Параметры.Свойство("АдресСпискаПодобранныхСотрудников") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка В(&ПодобранныеСотрудники)";
	
	ПодобранныеСотрудники = ПолучитьИзВременногоХранилища(Параметры.АдресСпискаПодобранныхСотрудников);
	Запрос.УстановитьПараметр("ПодобранныеСотрудники", ПодобранныеСотрудники);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ПодобранныеФизическиеЛица.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"));

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЗапланированногоОбучения()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПланОбученияПоМероприятиям.КоличествоСотрудников) КАК ВсегоЗапланировано
		|ИЗ
		|	РегистрСведений.ПланОбученияПоМероприятиям КАК ПланОбученияПоМероприятиям
		|ГДЕ
		|	ПланОбученияПоМероприятиям.Мероприятие = &Мероприятие
		|	И ПланОбученияПоМероприятиям.Подразделение В ИЕРАРХИИ(&Подразделение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ОбучениеСотрудников.ФизическоеЛицо) КАК ВсегоОбучилось
		|ИЗ
		|	РегистрСведений.ОбучениеСотрудников КАК ОбучениеСотрудников
		|ГДЕ
		|	ОбучениеСотрудников.Мероприятие = &Мероприятие
		|	И ОбучениеСотрудников.Подразделение В ИЕРАРХИИ(&Подразделение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПланОбученияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПланОбученияСотрудников.Подразделение КАК Подразделение,
		|	ПланОбученияСотрудников.ДатаНачала КАК ДатаНачала,
		|	ПланОбученияСотрудников.ДатаОкончания КАК ДатаОкончания,
		|	ВЫБОР
		|		КОГДА ПланОбученияСотрудников.ФизическоеЛицо В (&ПодобранныеФизическиеЛица)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Подобрано
		|ИЗ
		|	РегистрСведений.ПланОбученияСотрудников КАК ПланОбученияСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбучениеСотрудников КАК ОбучениеСотрудников
		|		ПО ПланОбученияСотрудников.Мероприятие = ОбучениеСотрудников.Мероприятие
		|			И ПланОбученияСотрудников.ФизическоеЛицо = ОбучениеСотрудников.ФизическоеЛицо
		|			И (ОбучениеСотрудников.Регистратор <> &ИсключаемыйРегистратор)
		|ГДЕ
		|	ПланОбученияСотрудников.Мероприятие = &Мероприятие
		|	И ПланОбученияСотрудников.Подразделение В ИЕРАРХИИ(&Подразделение)
		|	И ОбучениеСотрудников.Подразделение ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Мероприятие", Мероприятие);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
	Запрос.УстановитьПараметр("ПодобранныеФизическиеЛица", ПодобранныеФизическиеЛица);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатПлан = РезультатыЗапроса[РезультатыЗапроса.Количество() - 3];
	Выборка = РезультатПлан.Выбрать();
	Выборка.Следующий();
	ВсегоЗапланировано = Выборка.ВсегоЗапланировано;
	
	РезультатФакт = РезультатыЗапроса[РезультатыЗапроса.Количество() - 2];
	Выборка = РезультатФакт.Выбрать();
	Выборка.Следующий();
	ВсегоОбучилось = Выборка.ВсегоОбучилось;
	
	Результат = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1];
	ТаблицаЗапланированногоОбучения.Загрузить(Результат.Выгрузить());

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСотрудниковВТаблицеЗапланированногоОбучения()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Подразделение
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Ссылка В ИЕРАРХИИ(&Подразделение)";
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаПодразделений = РезультатЗапроса.Выгрузить();
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.СписокФизическихЛиц = ТаблицаЗапланированногоОбучения.Выгрузить(, "ФизическоеЛицо").ВыгрузитьКолонку("ФизическоеЛицо");
	ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Ложь, ПараметрыПолученияСотрудников);
	
	ТаблицаМест = ОрганизационнаяСтруктура.МестоСотрудниковВСтруктуреПредприятия(Ложь, ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"), ДатаАктуальности);
	
	Для каждого СтрокаТаблицы Из ТаблицаЗапланированногоОбучения Цикл
		СотрудникиФизическогоЛица = ТаблицаСотрудников.НайтиСтроки(Новый Структура("ФизическоеЛицо", СтрокаТаблицы.ФизическоеЛицо));
		Для каждого СтрокаСотрудника Из СотрудникиФизическогоЛица Цикл
			ПодразделениеСотрудника = ТаблицаМест[СтрокаСотрудника.Сотрудник];
			Если ТаблицаПодразделений.НайтиСтроки(Новый Структура("Подразделение", ПодразделениеСотрудника)).Количество() > 0 Тогда
				СтрокаТаблицы.Сотрудник = СтрокаСотрудника.Сотрудник;
				Прервать;
			КонецЕсли;
		КонецЦикла; 
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура СформироватьСтрокуРезультата()

	СтрокаРезультата = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Всего запланировано в плане - %1, уже обучилось - %2'"),
		ВсегоЗапланировано,
		ВсегоОбучилось);

КонецПроцедуры

#КонецОбласти 