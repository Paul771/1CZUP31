#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора.
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизации(ЭтотОбъект, Таблица, "Организация");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизации(ЭтотОбъект, Организация);
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыПлатежногоПоручения = РеквизитыПлатежногоПоручения();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	УчетНДФЛ.СформироватьПеречисленныйНалог(Ссылка, ЭтотОбъект.Движения, Отказ, Организация, ДатаПлатежа, ПеречисленныйНалог(), ,РегистрацияВНалоговомОргане);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаПлатежа, "Объект.ДатаПлатежа", Отказ, НСтр("ru='Дата платежа'"), , , Ложь);
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ПлатежноеПоручениеДата, "Объект.ПлатежноеПоручениеДата", Отказ, НСтр("ru='Дата платежного поручения'"), , , Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РеквизитыПлатежногоПоручения() Экспорт
	
	РеквизитыПлатежногоПорученияПоДатеНомеру =  "";
	
	Если ЗначениеЗаполнено(ПлатежноеПоручениеНомер) Или ЗначениеЗаполнено(ПлатежноеПоручениеДата) Тогда
		РеквизитыПлатежногоПорученияПоДатеНомеру = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			 	НСтр("ru = '№ %1 от %2'"), 
				?(ЗначениеЗаполнено(ПлатежноеПоручениеНомер), ПлатежноеПоручениеНомер, НСтр("ru = 'б/н'")),  
				Формат(ПлатежноеПоручениеДата, "ДЛФ=D"));
	КонецЕсли;		

	Возврат РеквизитыПлатежногоПорученияПоДатеНомеру
	
КонецФункции	

Функция ПеречисленныйНалог()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеречислениеНДФЛ.ДатаПлатежа КАК Период,
	|	ПеречислениеНДФЛ.Сумма,
	|	ПеречислениеНДФЛ.МесяцНалоговогоПериода,
	|	ПеречислениеНДФЛ.Организация,
	|	ПеречислениеНДФЛ.ПлатежноеПоручениеНомер,
	|	ПеречислениеНДФЛ.ПлатежноеПоручениеДата
	|ИЗ
	|	Документ.ПеречислениеНДФЛВБюджет КАК ПеречислениеНДФЛ
	|ГДЕ
	|	ПеречислениеНДФЛ.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

#КонецОбласти

#КонецЕсли