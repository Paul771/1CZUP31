#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СуммаРасходов = Расходы.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Статус = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Отклонено") Тогда
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачала, "Объект.ДатаНачала", Отказ, НСтр("ru='Дата начала'"), , , Ложь);
	
	Ошибки = Неопределено;
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если ДатаНачала > ДатаОкончания Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru ='Неверно заполнен период заявки'"), ЭтотОбъект, "ДатаНачала",, Отказ);
		МассивНепроверяемыхРеквизитов.Добавить("ДатаНачала");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаОкончания");
	КонецЕсли;
	
	ОбучениеРазвитие.ПроверитьТабличнуюЧастьСотрудниковНаДублиФизическихЛиц(ЭтотОбъект, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.МероприятияОбученияРазвития") Тогда
		
		Мероприятие = ДанныеЗаполнения;
		// Заполнение табличной части "Расходы".
		МероприятиеСтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Мероприятие,
			"Наименование, Стоимость, СпособОпределенияСтоимости");
		ОбучениеРазвитие.ЗаполнитьТабличнуюЧастьРасходовПоМероприятию(МероприятиеСтруктураРеквизитов, Расходы, Сотрудники.Количество());
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаВключениеВПланОбучения") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Подразделение, Мероприятие, ДатаНачала, ДатаОкончания, Комментарий");
		Сотрудники.Загрузить(ДанныеЗаполнения.Сотрудники.Выгрузить());
		Расходы.Загрузить(ДанныеЗаполнения.Расходы.Выгрузить());
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда // Заполнение по данным плана.
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения,"Подразделение, Мероприятие, ДатаНачала, ДатаОкончания");
		
		МероприятиеСтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Мероприятие, "Наименование");
		
		// Заполнение табличной части "Сотрудники".
		Сотрудники.Очистить();
		Для каждого Сотрудник Из ДанныеЗаполнения.Сотрудники Цикл
			НовыйСотрудник = Сотрудники.Добавить();
			НовыйСотрудник.Сотрудник = Сотрудник;
		КонецЦикла;
		
		// Заполнение табличной части "Расходы".
		Расходы.Очистить();
		Если Сотрудники.Количество() > 0 Тогда
			НоваяСтрокаРасходов = Расходы.Добавить();
			НоваяСтрокаРасходов.Сумма = СуммаРасходов;
			НоваяСтрокаРасходов.Примечание = ОбучениеРазвитие.ПримечаниеРасходовНаОбучение(
				МероприятиеСтруктураРеквизитов.Наименование, Сотрудники.Количество());
		КонецЕсли;
		
	КонецЕсли;
	
	СуммаРасходов = Расходы.Итог("Сумма");
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Статус = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.ПустаяСсылка");
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("Сотрудники", "Сотрудник"));
	
	Возврат ОбменДаннымиЗарплатаКадрыРасширенный.ОграниченияРегистрацииПоПодразделениюИСотрудникам(ЭтотОбъект, Подразделение, МассивПараметров, ДатаНачала);
	
КонецФункции

#КонецОбласти

#КонецЕсли