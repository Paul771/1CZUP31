
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, Новый Структура("Ответственный", "Объект.Ответственный"));
		
		ИнициализироватьФорму();
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализироватьФорму();
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписанДокументЗаявкаНаОтпуск", , ЭтаФорма);
	Оповестить("Запись_ЗаявкаНаОтпуск", ПараметрыЗаписи, Объект.Ссылка);
	
	ИсправлениеДокументовЗарплатаКадрыКлиент.ОповеститьОбИсправленииДокумента(Объект.Ссылка, Объект.ИсправленныйДокумент, ПараметрыЗаписи.РежимЗаписи, "ПериодическиеСведения");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если (ИмяСобытия = "ЗаписанДокументЗаявкаНаОтпуск" И Источник.ВладелецФормы = ЭтаФорма)
		Или (ИмяСобытия = "ЗаписанДокументОтменаЗаявкиНаОтпуск" И Источник.ВладелецФормы = ЭтаФорма)
		Или (ИмяСобытия = "ЗаписанДокументОтпуск" И Источник.ВладелецФормы = ЭтаФорма) Тогда
		ПриПолученииДанныхНаСервере();
	КонецЕсли;
	ИсправлениеДокументовЗарплатаКадрыКлиент.ОбработкаОповещенияИсправленногоДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	ФизическоеЛицоПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	ДатаНачалаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ПериодОтпускаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейПриИзменении(Элемент)
	
	КоличествоДнейОтпускаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОформитьОтпуск(Команда)
	
	СамообслуживаниеСотрудниковКлиент.ОформитьКадровыйПриказ(ЭтаФорма, "Отпуск", ДанныеЗаявкиСотрудника(ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтпуск(Команда)
	
	СамообслуживаниеСотрудниковКлиент.ОткрытьКадровыйПриказ(ЭтаФорма, "Отпуск");
	
КонецПроцедуры

&НаКлиенте
Процедура СправкаПоОтпускам(Команда)
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда 
		Возврат;
	КонецЕсли;
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Справочник.Сотрудники", "СправкаПоОтпускамСотрудника", 
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), ЭтаФорма,
		Новый Структура("ДатаОстатков, ЭтоРасчетПриУвольнении", Объект.ДатаНачала, Ложь));
	
КонецПроцедуры

#Область ИсправлениеДокументов

&НаКлиенте
Процедура Подключаемый_Исправить(Команда)
	ИсправлениеДокументовЗарплатаКадрыКлиент.Исправить(Объект.Ссылка, "ЗаявкаНаОтпуск");
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПерейтиКИсправлению(Команда)
	ИсправлениеДокументовЗарплатаКадрыКлиент.ПерейтиКИсправлению(ЭтаФорма.ДокументИсправление, "ЗаявкаНаОтпуск");
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПерейтиКИсправленному(Команда)
	ИсправлениеДокументовЗарплатаКадрыКлиент.ПерейтиКИсправленному(Объект.ИсправленныйДокумент, "ЗаявкаНаОтпуск");
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Отменить(Команда)
	
	ЗначенияЗаполнения = Новый Структура("ЗаявкаСотрудника, ФизическоеЛицо", Объект.Ссылка, Объект.ФизическоеЛицо);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Документ.ОтменаЗаявкиНаОтпуск.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПерейтиКДокументуОтмены(Команда)

	ПараметрыФормы = Новый Структура("Ключ", ЭтотОбъект.ДокументОтменаЗаявки);
	ОткрытьФорму("Документ.ОтменаЗаявкиНаОтпуск.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Отозвать(Команда)
	
	ОтозватьЗаявкуНаСервере();
	
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Согласовать(Команда)
	
	СогласоватьЗаявкуНаСервере();
	
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Отклонить(Команда)
	
	ОтклонитьЗаявкуНаСервере();
	
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьФорму()
	
	Параметры.Свойство("РежимМоиЗаявки", РежимМоиЗаявки);
	
	ИсправлениеДокументовЗарплатаКадры.ГруппаИсправлениеДополнитьФорму(ЭтаФорма, Истина, Ложь);
	СамообслуживаниеСотрудников.ГруппаИсправлениеДополнитьФорму(ЭтаФорма);
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ИсправлениеДокументовЗарплатаКадры.ПрочитатьРеквизитыИсправления(ЭтаФорма, "ПериодическиеСведения");
	Если Не ЭтаФорма.Параметры.Ключ.Пустая() Тогда
		СамообслуживаниеСотрудников.ПрочитатьРеквизитыИсправления(ЭтаФорма);
	КонецЕсли;
	ИсправлениеДокументовЗарплатаКадрыКлиентСервер.УстановитьПоляИсправления(ЭтаФорма, "ПериодическиеСведения");
	
	СамообслуживаниеСотрудников.УстановитьКадровыйПриказЗаявки(ЭтаФорма);
	СамообслуживаниеСотрудников.УстановитьПоляИсправления(ЭтаФорма, КадровыйПриказ);
	
	УстановитьСотрудника();
	
	УстановитьВидимостьЭлементов();
	УстановитьЗначенияНадписей();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСотрудника()
	
	Если Не ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
		Сотрудник = Неопределено;
		Возврат;
	КонецЕсли;
	
	СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.ФизическоеЛицо);
	ДатаСобытия = ?(ЗначениеЗаполнено(Объект.ДатаНачала), Объект.ДатаНачала, ТекущаяДатаСеанса());
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаСотрудников = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(СписокФизическихЛиц, Ложь, Неопределено, ДатаСобытия);
	УстановитьПривилегированныйРежим(Ложь);
	Если ТаблицаСотрудников.Количество() > 0 Тогда 
		Сотрудник = ТаблицаСотрудников[0].Сотрудник;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	ПриказОформлен = ЗначениеЗаполнено(КадровыйПриказ);
	ЕстьИсправленныйДокумент = ЗначениеЗаполнено(Объект.ИсправленныйДокумент);
	
	ДоступноДобавлениеОтпусков = ПравоДоступа("Добавление", Метаданные.Документы.Отпуск);
	ДоступноЧтениеОтпусков = ПравоДоступа("Чтение", Метаданные.Документы.Отпуск);
	
	Если Объект.Статус <> Перечисления.СтатусыЗаявокСотрудников.Согласовано Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"КадровыйПриказСтраницы", "ТекущаяСтраница", Элементы.КадровыйПриказПустаяСтраница);
	ИначеЕсли ПриказОформлен И ДоступноЧтениеОтпусков Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"КадровыйПриказСтраницы", "ТекущаяСтраница", Элементы.КадровыйПриказСтраница);
	ИначеЕсли Не ПриказОформлен И ДоступноДобавлениеОтпусков И Не ЭтаФорма.ДокументОтменен Тогда  		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"КадровыйПриказСтраницы", "ТекущаяСтраница", Элементы.ВводКадровогоПриказаСтраница);
	Иначе 
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"КадровыйПриказСтраницы", "ТекущаяСтраница", Элементы.КадровыйПриказПустаяСтраница);
	КонецЕсли;
	
	СамообслуживаниеСотрудников.УстановитьВидимостьЭлементовЗаявки(ЭтотОбъект, КадровыйПриказ);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияНадписей()
	
	Элементы.ОткрытьОтпуск.Заголовок = Строка(КадровыйПриказ);
	ПоказатьНадписьДней(ЭтаФорма, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ФизическоеЛицоПриИзмененииНаСервере()
	
	УстановитьСотрудника();
	ПериодОтпускаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДатаНачалаПриИзмененииНаСервере()
	
	УстановитьСотрудника();
	ПериодОтпускаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПериодОтпускаПриИзмененииНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Объект.Статус = Неопределено;
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) И ЗначениеЗаполнено(Объект.ДатаОкончания) И Объект.ДатаНачала <= Объект.ДатаОкончания Тогда
		ОписаниеВидаОтпуска = ОстаткиОтпусков.ОписаниеВидаОтпуска(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыОтпусков.Основной"));
		Объект.КоличествоДней = УчетРабочегоВремениРасширенный.ДлительностьИнтервала(Сотрудник, Объект.ДатаНачала, Объект.ДатаОкончания, ОписаниеВидаОтпуска.СпособРасчетаПоКалендарнымДням, ОписаниеВидаОтпуска.ЕжегодныйОтпуск);
	Иначе
		Объект.КоличествоДней = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КоличествоДнейОтпускаПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) И ЗначениеЗаполнено(Объект.КоличествоДней) Тогда
		Объект.ДатаОкончания = ОстаткиОтпусковКлиентСервер.ДатаОкончанияОтпуска(Сотрудник, Объект.ДатаНачала, Объект.КоличествоДней);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПоказатьНадписьДней(Форма, Объект)
	
	Форма.НадписьДней = НСтр("ru='дн.'");	
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Функция ДанныеЗаявкиСотрудника(Форма)
	
	Объект = Форма.Объект;
	
	ДанныеЗаявки = Новый Структура;
	ДанныеЗаявки.Вставить("ЗаявкаСотрудника", Объект.Ссылка);
	ДанныеЗаявки.Вставить("ФизическоеЛицо", Объект.ФизическоеЛицо);
	ДанныеЗаявки.Вставить("ДатаНачала", Объект.ДатаНачала);
	ДанныеЗаявки.Вставить("ДатаОкончания", Объект.ДатаОкончания);
	ДанныеЗаявки.Вставить("КоличествоДней", Объект.КоличествоДней);
	ДанныеЗаявки.Вставить("КадровыйПриказИсправленногоДокумента", Форма.КадровыйПриказИсправленногоДокумента);
	
	Возврат ДанныеЗаявки;
	
КонецФункции

&НаСервере
Процедура ОтозватьЗаявкуНаСервере()
	
	СамообслуживаниеСотрудников.ОтозватьЗаявку(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура СогласоватьЗаявкуНаСервере()
	
	СамообслуживаниеСотрудников.СогласоватьЗаявку(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОтклонитьЗаявкуНаСервере()
	
	СамообслуживаниеСотрудников.ОтклонитьЗаявку(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти
