#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") 
		И ДанныеЗаполнения.Свойство("Действие") И ДанныеЗаполнения.Действие = "Исправить" Тогда
			
		ИсправлениеДокументовЗарплатаКадры.СкопироватьДокумент(ЭтотОбъект, ДанныеЗаполнения.Ссылка);
			
		ИсправленныйДокумент = ДанныеЗаполнения.Ссылка;
		ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);
			
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.ОбработкаЗаполненияМногофункциональногоДокумента(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Проведение документа
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ЗарплатаКадрыРасширенный.ИнициализироватьОтложеннуюРегистрациюВторичныхДанныхПоДвижениямДокумента(Движения);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(Движения, ДанныеДляПроведения.СотрудникиДаты, Ссылка);
	
	Если РазмерОплатыУтвержден Тогда 
	
		СтруктураПлановыхНачислений = Новый Структура;
		СтруктураПлановыхНачислений.Вставить("ДанныеОПлановыхНачислениях", ДанныеДляПроведения.ПлановыеНачисления);
		СтруктураПлановыхНачислений.Вставить("ЗначенияПоказателей", ДанныеДляПроведения.ЗначенияПоказателей);
		
		РасчетЗарплаты.СформироватьДвиженияПлановыхНачислений(ЭтотОбъект, Движения, СтруктураПлановыхНачислений);
		
		ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияКоэффициентыРаспределенияСреднегоЗаработка(Движения, ДанныеДляПроведения.КоэффициентыРаспределенияСреднегоЗаработка);
		
		// Корректировки данных для среднего заработка.
		ДополнительныеПараметрыЗаписиКорректировокОбщегоСреднегоЗаработка = УчетСреднегоЗаработка.ДополнительныеПараметрыЗаписиКорректировокОбщегоСреднегоЗаработка();
		ДополнительныеПараметрыЗаписиКорректировокОбщегоСреднегоЗаработка.Организация = Организация;
		ДополнительныеПараметрыЗаписиКорректировокОбщегоСреднегоЗаработка.Сотрудник = Сотрудник;
		ДополнительныеПараметрыЗаписиКорректировокОбщегоСреднегоЗаработка.ФизическоеЛицо = ФизическоеЛицо;
			
		УчетСреднегоЗаработка.ЗаписатьКорректировкиОбщегоСреднегоЗаработка(
			УчетСреднегоЗаработка.КорректировкиОбщегоСреднегоЗаработкаДокумента(Ссылка), 
			ПериодРасчетаСреднегоЗаработкаНачало, 
			ПериодРасчетаСреднегоЗаработкаОкончание, 
			ДополнительныеПараметрыЗаписиКорректировокОбщегоСреднегоЗаработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачала, "Объект.ДатаНачала", Отказ, НСтр("ru='Дата начала'"), '19800101', , Ложь);
	
	КонтейнерОшибок = Неопределено;
	
	ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок);	
	
	ЗарплатаКадрыРасширенный.ПроверитьУтверждениеДокумента(ЭтотОбъект, Отказ);
	
	Если РазмерОплатыУтвержден Тогда 
		
		ИсправлениеДокументовЗарплатаКадры.ПроверитьЗаполнение(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, "ПериодическиеСведения");
		
		Если Не ЗначениеЗаполнено(ВидРасчета) Тогда
			ТекстСообщения = Документы.ПереводНаОплатуПоСреднемуЗаработку.ТекстСообщенияНеЗаполненВидРасчета();
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидРасчета", ТекстСообщения, "");
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, Отказ);
	
	УдалитьПроверенныеРеквизиты(ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеПериода = ЗарплатаКадрыРасширенный.ПредставлениеПериодаРасчетногоДокумента(ДатаНачала, ДатаОкончания);
	
	ЗарплатаКадрыРасширенный.ПередЗаписьюМногофункциональногоДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	УчетСреднегоЗаработка.ЗаписатьДатуНачалаСобытия(Ссылка, Сотрудник, ДатаНачалаСобытия);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИСотруднику(ЭтотОбъект, Организация, Сотрудник, ДатаНачала);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Организация"" обязательно к заполнению.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Организация", ТекстСообщения, "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Сотрудник"" обязательно к заполнению.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Сотрудник", ТекстСообщения, "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачала) И Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		ТекстСообщения = НСтр("ru = 'Не указаны даты оплаты по среднему заработку.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
	Иначе
		Если Не ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена дата начала оплаты по среднему заработку.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачала", ТекстСообщения, "");
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаОкончания) И ЗначениеЗаполнено(ДатаНачала) Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена дата окончания оплаты по среднему заработку.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) И ДатаНачала > ДатаОкончания Тогда
			ТекстСообщения = НСтр("ru = 'Дата окончания оплаты по среднему заработку не может быть меньше даты начала.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьПроверенныеРеквизиты(ПроверяемыеРеквизиты)
	
	Если ПроверяемыеРеквизиты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Организация");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Сотрудник");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачала");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончания");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидРасчета");
	
	Если Не РазмерОплатыУтвержден Тогда 
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПроцентОплаты");
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если РазмерОплатыУтвержден Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПереводНаОплатуПоСреднемуЗаработку.Сотрудник КАК Сотрудник,
		               |	ПереводНаОплатуПоСреднемуЗаработку.ВидРасчета КАК Начисление,
		               |	ПереводНаОплатуПоСреднемуЗаработку.ДатаНачалаСобытия КАК ДатаСобытия,
		               |	ПереводНаОплатуПоСреднемуЗаработку.Ссылка КАК ДокументОснование,
		               |	ИСТИНА КАК Используется,
		               |	ПереводНаОплатуПоСреднемуЗаработку.ФизическоеЛицо КАК ФизическоеЛицо,
		               |	ПереводНаОплатуПоСреднемуЗаработку.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		               |	ДОБАВИТЬКДАТЕ(ПереводНаОплатуПоСреднемуЗаработку.ДатаОкончания, ДЕНЬ, 1) КАК ДействуетДо
		               |ИЗ
		               |	Документ.ПереводНаОплатуПоСреднемуЗаработку КАК ПереводНаОплатуПоСреднемуЗаработку
		               |ГДЕ
		               |	ПереводНаОплатуПоСреднемуЗаработку.Ссылка = &Ссылка";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ДанныеОПлановыхНачислениях = РасчетЗарплатыРасширенный.ПустаяТаблицаРегистрацииПлановыхНачислений(Истина);
		ДанныеОПлановыхНачислениях.Колонки.Добавить("ИспользуетсяПоОкончании", Новый ОписаниеТипов("Булево"));
		
		НоваяСтрока = ДанныеОПлановыхНачислениях.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		ДанныеДляПроведения.Вставить("ПлановыеНачисления", ДанныеОПлановыхНачислениях);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПереводНаОплатуПоСреднемуЗаработку.Организация КАК Организация,
		               |	ПереводНаОплатуПоСреднемуЗаработку.Сотрудник КАК Сотрудник,
		               |	ПереводНаОплатуПоСреднемуЗаработку.ДатаНачалаСобытия КАК ДатаСобытия,
		               |	ПереводНаОплатуПоСреднемуЗаработку.Ссылка КАК ДокументОснование,
		               |	ПереводНаОплатуПоСреднемуЗаработку.ФизическоеЛицо КАК ФизическоеЛицо,
		               |	ДОБАВИТЬКДАТЕ(ПереводНаОплатуПоСреднемуЗаработку.ДатаОкончания, ДЕНЬ, 1) КАК ДействуетДо,
		               |	ПереводНаОплатуПоСреднемуЗаработку.СреднийЗаработок КАК Значение
		               |ИЗ
		               |	Документ.ПереводНаОплатуПоСреднемуЗаработку КАК ПереводНаОплатуПоСреднемуЗаработку
		               |ГДЕ
		               |	ПереводНаОплатуПоСреднемуЗаработку.Ссылка = &Ссылка";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗначенияПоказателейПлановыхНачислений = Новый ТаблицаЗначений;
		ЗначенияПоказателейПлановыхНачислений.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
		ЗначенияПоказателейПлановыхНачислений.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
		ЗначенияПоказателейПлановыхНачислений.Колонки.Добавить("ДатаСобытия", Новый ОписаниеТипов("Дата"));
		ЗначенияПоказателейПлановыхНачислений.Колонки.Добавить("ДействуетДо", Новый ОписаниеТипов("Дата"));
		ЗначенияПоказателейПлановыхНачислений.Колонки.Добавить("ДокументОснование", Метаданные.ОпределяемыеТипы.ОснованиеНачисленияУдержания.Тип);
		ЗначенияПоказателейПлановыхНачислений.Колонки.Добавить("Показатель", Новый ОписаниеТипов("СправочникСсылка.ПоказателиРасчетаЗарплаты"));
		ЗначенияПоказателейПлановыхНачислений.Колонки.Добавить("Значение", Новый ОписаниеТипов("Число"));
		ЗначенияПоказателейПлановыхНачислений.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		
		НоваяСтрока = ЗначенияПоказателейПлановыхНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Показатель = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.СреднийЗаработокОбщий");
		
		НоваяСтрока = ЗначенияПоказателейПлановыхНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Показатель = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.ПроцентОплатыПоСреднему");
		НоваяСтрока.Значение = ПроцентОплаты;
		
		ДанныеДляПроведения.Вставить("ЗначенияПоказателей", ЗначенияПоказателейПлановыхНачислений);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	Коэффициенты.Ссылка КАК ДокументОснование,
		               |	Коэффициенты.СтатьяФинансирования КАК СтатьяФинансирования,
		               |	Коэффициенты.СтатьяРасходов КАК СтатьяРасходов,
		               |	Коэффициенты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		               |	Коэффициенты.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		               |	СУММА(Коэффициенты.Коэффициент) КАК Коэффициент
		               |ИЗ
		               |	Документ.ПереводНаОплатуПоСреднемуЗаработку.КоэффициентыРаспределенияСреднегоЗаработка КАК Коэффициенты
		               |ГДЕ
		               |	Коэффициенты.Ссылка = &Ссылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Коэффициенты.Ссылка,
		               |	Коэффициенты.СтатьяФинансирования,
		               |	Коэффициенты.СтатьяРасходов,
		               |	Коэффициенты.СпособОтраженияЗарплатыВБухучете,
		               |	Коэффициенты.ОблагаетсяЕНВД";
		
		КоэффициентыРаспределения = Запрос.Выполнить().Выгрузить();
		ДанныеДляПроведения.Вставить("КоэффициентыРаспределенияСреднегоЗаработка", КоэффициентыРаспределения);
		
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПереводНаОплатуПоСреднемуЗаработку.Сотрудник КАК Сотрудник,
	               |	ПереводНаОплатуПоСреднемуЗаработку.ДатаНачалаСобытия КАК ДатаСобытия
	               |ИЗ
	               |	Документ.ПереводНаОплатуПоСреднемуЗаработку КАК ПереводНаОплатуПоСреднемуЗаработку
	               |ГДЕ
	               |	ПереводНаОплатуПоСреднемуЗаработку.Ссылка = &Ссылка";
				   
	СотрудникиДаты = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("СотрудникиДаты", СотрудникиДаты);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

#КонецОбласти

#КонецЕсли
