
#Область ОбработкаСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗначенияДляЗаполнения = Новый Структура("Ответственный, Месяц", "Объект.Ответственный", "Объект.Период");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МассивСотрудников = Новый Массив;
	Для каждого СтрокаСотрудник Из Объект.Сотрудники Цикл
		МассивСотрудников.Добавить(СтрокаСотрудник.Сотрудник);
	КонецЦикла; 
	
	Оповестить("Запись_ФактПоказателяЭффективностиСотрудников", Новый Структура("Сотрудники", МассивСотрудников));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	Объект.Сотрудники.Очистить();
	УстановитьПараметрыВыбораСотрудников();
	
КонецПроцедуры
 
&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	
	Объект.Сотрудники.Очистить();
	УстановитьПараметрыВыбораСотрудников();
	
КонецПроцедуры

#Область МесяцСтрокой

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.Период", "МесяцСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.Период", "МесяцСтрокой", Направление);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойПриИзменении(Элемент)
	МесяцПриИзмененииНаКлиенте();
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоОтветственному(Команда)
	ЗаполнитьСписокСотрудниковПоОтветственномуНаСервере();
КонецПроцедуры

#Область ЗагрузкаДанныхИзФайла

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "ФактПоказателяЭффективностиСотрудников.Сотрудники";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка фактических значений показателя сотрудников из файла'");
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Подразделение", Объект.Подразделение);
	
	ПараметрыЗагрузки.ДополнительныеПараметры = ДополнительныеПараметры;
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьСотрудниковИзФайлаЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗагрузкаДанныхИзФайла

&НаКлиенте
Процедура ЗагрузитьСотрудниковИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗагрузитьСотрудниковИзФайлаНаСервере(АдресЗагруженныхДанных);
			
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСотрудниковИзФайлаНаСервере(АдресЗагруженныхДанных)
	
	ДобавленыСтроки = Ложь;
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	Для Каждого СтрокаДанных Из ЗагруженныеДанные Цикл 
		
		Если Не ЗначениеЗаполнено(СтрокаДанных.Сотрудник) Тогда 
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Объект.Сотрудники.Добавить(), СтрокаДанных);
		
	    ДобавленыСтроки = Истина;
	КонецЦикла;
	
	Модифицированность = Модифицированность ИЛИ ДобавленыСтроки;
		
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗаполнитьВторичныеРеквизитыФормы();
	
	УстановитьСвойстваЭлементовФормы();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВторичныеРеквизитыФормы()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Период", "МесяцСтрокой");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()
	УстановитьПараметрыВыбораСотрудников();
КонецПроцедуры

&НаКлиенте
Процедура МесяцПриИзмененииНаКлиенте()
	МесяцПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МесяцПриИзмененииНаСервере()
	УстановитьПараметрыВыбораСотрудников();
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораСотрудников()

	КоллекцияОтборов = КоллекцияОтборов();
	МассивПозиций = КлючевыеПоказателиЭффективности.ТаблицаПозицийПоПоказателю(Объект.Период, Объект.Показатель, КоллекцияОтборов).ВыгрузитьКолонку("Позиция");
	
	ПараметрыВыбораМассив = Новый Массив;
	ПараметрыВыбораМассив.Добавить(Новый ПараметрВыбора("Отбор.ДолжностьПоШтатномуРасписанию", МассивПозиций));
	ПараметрыВыбораМассив.Добавить(Новый ПараметрВыбора("НеотключаемыеОтборы", "ДолжностьПоШтатномуРасписанию"));
	
	Элементы.СотрудникиСотрудник.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораМассив); 

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСотрудниковПоОтветственномуНаСервере()

	КоллекцияОтборов = КоллекцияОтборов();
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		КоллекцияОтборов, "ОтветственныйЗаВводФакта", "=", Объект.Ответственный);
	
	ТаблицаПозицийОтветственного = КлючевыеПоказателиЭффективности.ТаблицаПозицийПоПоказателю(Объект.Период, Объект.Показатель, КоллекцияОтборов);
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.НачалоПериода = Объект.Период;
	ПараметрыПолучения.ОкончаниеПериода = Объект.Период;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПолучения.Отборы, "ДолжностьПоШтатномуРасписанию", " В ", ТаблицаПозицийОтветственного);
	
	СотрудникиОрганизации = КадровыйУчет.СотрудникиОрганизации(Ложь, ПараметрыПолучения);
	
	Объект.Сотрудники.Очистить();
	Для каждого СтрокаСотрудника Из СотрудникиОрганизации Цикл
		НоваяСтрока = Объект.Сотрудники.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСотрудника);
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Функция КоллекцияОтборов()

	КоллекцияОтборов = Новый Массив;
	
	ПодчиненныеПодразделения = ОрганизационнаяСтруктура.ПодчиненныеПодразделения(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Подразделение));
	ПозицииПодразделения = ОрганизационнаяСтруктура.ПозицииПодразделений(ПодчиненныеПодразделения).ВыгрузитьКолонку("Позиция");
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		КоллекцияОтборов, "Позиция", "В", ПозицииПодразделения);

	Возврат КоллекцияОтборов;
		
КонецФункции

#КонецОбласти