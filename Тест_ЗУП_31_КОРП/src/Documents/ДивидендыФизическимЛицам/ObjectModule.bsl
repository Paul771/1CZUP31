#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ВсегоНачислено = Начисления.Итог("Начислено");
	ВсегоВыплачено = Начисления.Итог("КВыплате");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	РегистрироватьВзаиморасчеты = ПолучитьФункциональнуюОпцию("ИспользоватьВедомостиДляВыплатыПрочихДоходов") И РегистрироватьВыплатуВедомостью;
	СпособРасчетовСФизическимиЛицами = ?(РегистрироватьВзаиморасчеты,Перечисления.СпособыРасчетовСФизическимиЛицами.Дивиденды,Неопределено);
	
	УчетНДФЛРасширенный.СформироватьДоходыИНДФЛСДивидендов(Ссылка, Движения, Отказ, Организация, ДатаВыплаты,
							ДанныеДляПроведения.Дивиденды, ВключатьВДекларациюПоНалогуНаПрибыль, Не РегистрироватьВзаиморасчеты, ДатаПлатежаНДФЛ, ПеречислениеНДФЛРеквизиты);
	
	УчетНачисленнойЗарплаты.ПодготовитьДанныеНДФЛКРегистрации(ДанныеДляПроведения.Дивиденды, Организация, ДатаВыплаты);
	УчетНачисленнойЗарплатыРасширенный.ЗарегистрироватьНачисленияУдержанияПоКонтрагентамАкционерам(Движения, Отказ, Организация, ПериодРегистрации,
							ДанныеДляПроведения.Начисления , ДанныеДляПроведения.УдержанияКонтрагентов, ДанныеДляПроведения.Дивиденды, СпособРасчетовСФизическимиЛицами);
	
	ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетНачисленияУдержанияПоКонтрагентамАкционерам(
					Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.Начисления, ДанныеДляПроведения.УдержанияКонтрагентов, ДанныеДляПроведения.Дивиденды);
	
	РасчетЗарплатыРасширенный.СформироватьДвиженияУдержаний(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.Удержания);
	ИсполнительныеЛисты.СформироватьУдержанияПоИсполнительнымДокументам(Движения, ДанныеДляПроведения.УдержанияПоИсполнительнымДокументам);
	РасчетЗарплатыРасширенный.СформироватьДвиженияУдержанийДоПределаПоСотрудникам(Движения, Отказ, ПериодРегистрации, ДанныеДляПроведения.УдержанияДоПределаПоСотрудникам);
	РасчетЗарплатыРасширенный.СформироватьЗадолженностьПоУдержаниямФизическихЛиц(Движения, ДанныеДляПроведения.ЗадолженностьПоУдержаниям);
	
КонецПроцедуры

Функция ДанныеДляПроведения() Экспорт

	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Дивиденды.Ссылка КАК Ссылка,
	|	Дивиденды.Ссылка.ПериодРегистрации КАК Период,
	|	Дивиденды.Акционер КАК ФизическоеЛицо,
	|	Дивиденды.НДФЛ КАК НДФЛ,
	|	Дивиденды.Начислено КАК Начислено,
	|	Дивиденды.НомерСтроки КАК НомерСтроки,
	|	Дивиденды.ВычетПоНДФЛ КАК ВычетПоНДФЛ,
	|	Дивиденды.КВыплате КАК КВыплате,
	|	Дивиденды.Удержано КАК Удержано,
	|	ВЫБОР
	|		КОГДА Дивиденды.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05)
	|		КОГДА Дивиденды.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10)
	|		КОГДА Дивиденды.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка12)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|	КОНЕЦ КАК КатегорияДохода
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ДивидендыФизическимЛицам.Начисления КАК Дивиденды
	|ГДЕ
	|	Дивиденды.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТДанныеДокумента КАК ТаблицаНДФЛ";
	
	МассивФизическиеЛица = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(МенеджерВременныхТаблиц, Истина, МассивФизическиеЛица, Организация, ПериодРегистрации);
	
	ДанныеДляПроведения = Новый Структура;
	ДанныеДляПроведения.Вставить("Дивиденды", Документы.ДивидендыФизическимЛицам.ДанныеДляПроведенияДивиденды(МенеджерВременныхТаблиц));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокумента.НДФЛ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВТОсновныеСотрудникиФизическихЛиц.Сотрудник ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивиденды)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивидендыСотрудникам)
	|	КОНЕЦ КАК НачислениеУдержание
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеСотрудникиФизическихЛиц КАК ВТОсновныеСотрудникиФизическихЛиц
	|		ПО ДанныеДокумента.ФизическоеЛицо = ВТОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ВТОсновныеСотрудникиФизическихЛиц.Сотрудник ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.Дивиденды)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДивидендыСотрудников)
	|	КОНЕЦ КАК Начисление,
	|	ДанныеДокумента.Ссылка КАК ДокументОснование,
	|	ЕСТЬNULL(ВТОсновныеСотрудникиФизическихЛиц.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК Сотрудник,
	|	ДанныеДокумента.Начислено КАК Сумма
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеСотрудникиФизическихЛиц КАК ВТОсновныеСотрудникиФизическихЛиц
	|		ПО ДанныеДокумента.ФизическоеЛицо = ВТОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо";
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[0].Выбрать();
	ФизическиеЛицаВидНДФЛ = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		ФизическиеЛицаВидНДФЛ.Вставить(Выборка.ФизическоеЛицо, Выборка.НачислениеУдержание);
	КонецЦикла;
	ДанныеДляПроведения.Дивиденды.Колонки.Добавить("НачислениеУдержание", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	Для каждого СтрокаТЗ Из ДанныеДляПроведения.Дивиденды Цикл
		СтрокаТЗ.НачислениеУдержание = ФизическиеЛицаВидНДФЛ[СтрокаТЗ.Акционер];
	КонецЦикла;
	
	ДанныеДляПроведения.Вставить("Начисления", Результат[1].Выгрузить());
	
	// Удержания
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Удержание.КатегорияУдержания КАК КатегорияУдержания,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	Удержания.Результат КАК Результат,
	|	Удержания.ДатаНачала КАК ДатаНачала,
	|	Удержания.ДатаОкончания КАК ДатаОкончания,
	|	Удержания.Получатель КАК Получатель,
	|	Удержания.ПлатежныйАгент КАК ПлатежныйАгент,
	|	Удержания.Ссылка.Организация КАК Организация,
	|	Удержания.Удержание КАК Удержание
	|ПОМЕСТИТЬ ВТУдержания
	|ИЗ
	|	Документ.ДивидендыФизическимЛицам.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.Ссылка = &Ссылка
	|	И Удержания.Результат <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.Организация КАК Организация,
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Результат КАК Сумма,
	|	Удержания.КатегорияУдержания КАК КатегорияУдержания,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	Удержания.Удержание КАК НачислениеУдержание,
	|	ВЫБОР
	|		КОГДА Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	|			ТОГДА Удержания.Получатель
	|		КОГДА Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента)
	|			ТОГДА Удержания.ПлатежныйАгент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Контрагент
	|ИЗ
	|	ВТУдержания КАК Удержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсполнительныеЛисты.ДокументОснование КАК ИсполнительныйДокумент,
	|	ИсполнительныеЛисты.Получатель КАК Получатель,
	|	ИсполнительныеЛисты.ПлатежныйАгент КАК ПлатежныйАгент,
	|	НАЧАЛОПЕРИОДА(ИсполнительныеЛисты.ДатаНачала, МЕСЯЦ) КАК МесяцУдержания,
	|	СУММА(ВЫБОР
	|			КОГДА ИсполнительныеЛисты.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	|				ТОГДА ИсполнительныеЛисты.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУдержания,
	|	СУММА(ВЫБОР
	|			КОГДА ИсполнительныеЛисты.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента)
	|				ТОГДА ИсполнительныеЛисты.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВознагражденияПлатежногоАгента
	|ИЗ
	|	ВТУдержания КАК ИсполнительныеЛисты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсполнительныеЛисты.ДокументОснование,
	|	ИсполнительныеЛисты.Получатель,
	|	ИсполнительныеЛисты.ПлатежныйАгент,
	|	НАЧАЛОПЕРИОДА(ИсполнительныеЛисты.ДатаНачала, МЕСЯЦ)
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВЫБОР
	|				КОГДА ИсполнительныеЛисты.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	|					ТОГДА ИсполнительныеЛисты.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) <> 0
	|		ИЛИ СУММА(ВЫБОР
	|				КОГДА ИсполнительныеЛисты.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента)
	|					ТОГДА ИсполнительныеЛисты.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Результат КАК Результат,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	Удержания.Удержание КАК Удержание,
	|	Удержания.Получатель КАК Получатель,
	|	Удержания.ПлатежныйАгент КАК ПлатежныйАгент,
	|	Удержания.ДатаНачала КАК ДатаНачала,
	|	Удержания.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	ВТУдержания КАК Удержания";
	
	Результат = Запрос.ВыполнитьПакет();
	ДанныеДляПроведения.Вставить("УдержанияКонтрагентов", Результат[1].Выгрузить());
	ДанныеДляПроведения.Вставить("УдержанияПоИсполнительнымДокументам", Результат[2].Выгрузить());
	ДанныеДляПроведения.Вставить("Удержания", Результат[3].Выгрузить());
	
	// Удержания до предела по сотрудникам
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПредельныеСуммыУдержанийСотрудниковСрезПоследних.Организация КАК Организация,
	|	ПредельныеСуммыУдержанийСотрудниковСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредельныеСуммыУдержанийСотрудниковСрезПоследних.Удержание КАК Удержание,
	|	ПредельныеСуммыУдержанийСотрудниковСрезПоследних.ДокументОснование КАК ДокументОснование,
	|	ПредельныеСуммыУдержанийСотрудниковСрезПоследних.ПрекратитьПоДостижениюПредела КАК ПрекратитьПоДостижениюПредела
	|ПОМЕСТИТЬ ВТПредельныеСуммыУдержаний
	|ИЗ
	|	РегистрСведений.ПредельныеСуммыУдержанийСотрудников.СрезПоследних(
	|			,
	|			(Организация, ФизическоеЛицо, Удержание, ДокументОснование) В
	|				(ВЫБРАТЬ
	|					ЗаписиУдержаний.Организация,
	|					ЗаписиУдержаний.ФизическоеЛицо,
	|					ЗаписиУдержаний.Удержание,
	|					ЗаписиУдержаний.ДокументОснование
	|				ИЗ
	|					ВТУдержания КАК ЗаписиУдержаний)) КАК ПредельныеСуммыУдержанийСотрудниковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗаписиУдержаний.Организация КАК Организация,
	|	ЗаписиУдержаний.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗаписиУдержаний.Удержание КАК Удержание,
	|	ЗаписиУдержаний.ДокументОснование КАК ДокументОснование,
	|	ЗаписиУдержаний.Результат КАК Сумма
	|ИЗ
	|	ВТУдержания КАК ЗаписиУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредельныеСуммыУдержаний КАК ПредельныеСуммыУдержаний
	|		ПО ЗаписиУдержаний.Организация = ПредельныеСуммыУдержаний.Организация
	|			И ЗаписиУдержаний.ФизическоеЛицо = ПредельныеСуммыУдержаний.ФизическоеЛицо
	|			И ЗаписиУдержаний.Удержание = ПредельныеСуммыУдержаний.Удержание
	|			И ЗаписиУдержаний.ДокументОснование = ПредельныеСуммыУдержаний.ДокументОснование
	|			И (ПредельныеСуммыУдержаний.ПрекратитьПоДостижениюПредела)";
		
	ДанныеДляПроведения.Вставить("УдержанияДоПределаПоСотрудникам", Запрос.Выполнить().Выгрузить());
	
	ДанныеДляПроведения.Вставить("ЗадолженностьПоУдержаниям");
	РасчетЗарплатыРасширенный.ЗаполнитьПогашениеЗадолженностиПоУдержаниям(ДанныеДляПроведения, Ссылка, ПериодРегистрации);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции 

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВедомостиДляВыплатыПрочихДоходов") И ЭтотОбъект.РегистрироватьВыплатуВедомостью Тогда
		ИсключаемыеРеквизиты = Новый Массив;
		ИсключаемыеРеквизиты.Добавить("ДатаПлатежаНДФЛ");
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("Начисления", "Акционер"));
	
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИФизическимЛицам(ЭтотОбъект, Организация, МассивПараметров, ПериодРегистрации);
	
КонецФункции

#КонецОбласти

#КонецЕсли