#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ФормированиеАттестационнойКомиссииСотрудников;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ГрафикАттестацииИКомиссияУтверждаютсяРазнымиДокументами") Тогда
		
		// Приказ об увольнении
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "ПФ_MXL_ПриказОФормированииАттестационнойКомиссии";
		КомандаПечати.Представление = НСтр("ru = 'Приказ о формировании аттестационной комиссии'");
		КомандаПечати.Порядок = 10;
		
	КонецЕсли;
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст
//                           ошибки).
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПриказОФормированииАттестационнойКомиссии") Тогда
		ТабличныйДокумент = ТабличныйДокументПриказаОФормированииКомиссии(МассивОбъектов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_ПриказОФормированииАттестационнойКомиссии", НСтр("ru = 'Приказ о формировании аттестационной комиссии'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#Область ПриказОФормированииКомиссии

Функция ТабличныйДокументПриказаОФормированииКомиссии(МассивСсылок, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказаОФормированииАттестационнойКомиссии";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	СоздатьВТКадровыхДанных(Запрос);
	
	ДанныеДляПечатиПриказа = ДанныеДляПечатиПриказаОФормированииКомиссии(Запрос);
	
	Пока ДанныеДляПечатиПриказа.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ОбластиМакетаПриказа = ОбластиМакетаПриказОФормированииАттестационнойКомиссии(ДанныеДляПечатиПриказа.ВидАттестации);
		
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачалоДокумента = ДокументРезультат.ВысотаТаблицы + 1;
		
		ВывестиШапкуПриказаОФормированииКомиссии(ДокументРезультат, ОбластиМакетаПриказа.ОбластьШапка, ДанныеДляПечатиПриказа);
		
		Пока ДанныеДляПечатиПриказа.СледующийПоЗначениюПоля("ЧленКомиссии") Цикл
			ВывестиСтрокуПриказаОФормированииКомиссии(ДокументРезультат, ОбластиМакетаПриказа.ОбластьЧленКомиссии, ДанныеДляПечатиПриказа);
		КонецЦикла;
		
		ВывестиПодвалПриказаОФормированииКомиссии(ДокументРезультат, ОбластиМакетаПриказа.ОбластьПодвал, ДанныеДляПечатиПриказа);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачалоДокумента, ОбъектыПечати, ДанныеДляПечатиПриказа.Ссылка);
		
	КонецЦикла;	

	Возврат ДокументРезультат;
	
КонецФункции

Процедура ВывестиШапкуПриказаОФормированииКомиссии(ДокументРезультат, ОбластьШапка, ДанныеДляПечатиПриказа)
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеДляПечатиПриказа); 
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("НаименованиеОрганизации", НаименованиеОрганизации(ДанныеДляПечатиПриказа));
	СтруктураЗаполнения.Вставить("ВидАкта", 				ВидАктаУтверждающегоКомиссию(ДанныеДляПечатиПриказа));
	СтруктураЗаполнения.Вставить("НомерПриказа", 			ДанныеДляПечатиПриказа.Номер);
	СтруктураЗаполнения.Вставить("ДатаПриказа", 			Формат(ДанныеДляПечатиПриказа.Дата, "ДЛФ=DD"));
	СтруктураЗаполнения.Вставить("ГодАттестации", 			Формат(ДанныеДляПечатиПриказа.ГодАттестации, "ЧГ=0"));
	
	Если ДанныеДляПечатиПриказа.НайтиСледующий(1, "ПорядокРолей") Тогда
		СтруктураЗаполнения.Вставить("Председатель", ДанныеДляПечатиПриказа.ФИОЧленаКомиссии);
	КонецЕсли;
	Если ДанныеДляПечатиПриказа.НайтиСледующий(2, "ПорядокРолей") Тогда
		СтруктураЗаполнения.Вставить("ЗаместительПредседателя", ДанныеДляПечатиПриказа.ФИОЧленаКомиссии);
	КонецЕсли;
	Если ДанныеДляПечатиПриказа.НайтиСледующий(3, "ПорядокРолей") Тогда
		СтруктураЗаполнения.Вставить("СекретарьКомиссии", ДанныеДляПечатиПриказа.ФИОЧленаКомиссии);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, СтруктураЗаполнения);
	
	ДокументРезультат.Вывести(ОбластьШапка);	
	
КонецПроцедуры

Функция ВидАктаУтверждающегоКомиссию(ДанныеДляПечатиПриказа)
	
	ВидАкта = НСтр("ru = 'Приказ'");
	
	Если ЗначениеЗаполнено(ДанныеДляПечатиПриказа.ВидАкта)
		И АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ДанныеДляПечатиПриказа.ВидАттестации) Тогда
		ВидАкта = ДанныеДляПечатиПриказа.ВидАкта;
	КонецЕсли;
	
	Возврат ВидАкта;
	
КонецФункции

Процедура ВывестиСтрокуПриказаОФормированииКомиссии(ДокументРезультат, ОбластьЧленКомиссии, ДанныеДляПечатиПриказа)
	
	Если ДанныеДляПечатиПриказа.РольВКомиссии = Перечисления.РолиЧленовАттестационнойКомиссии.ЧленКомиссии Тогда
		ЗаполнитьЗначенияСвойств(ОбластьЧленКомиссии.Параметры, ДанныеДляПечатиПриказа);
		ДокументРезультат.Вывести(ОбластьЧленКомиссии);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиПодвалПриказаОФормированииКомиссии(ДокументРезультат, ОбластьПодвал, ДанныеДляПечатиПриказа)
	
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ДанныеДляПечатиПриказа);
	
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура СоздатьВТКадровыхДанных(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФормированиеАттестационнойКомиссииСотрудниковСоставАттестационнойКомиссии.ЧленКомиссии КАК ФизическоеЛицо,
	|	ФормированиеАттестационнойКомиссииСотрудников.Дата КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаОбщийСписок
	|ИЗ
	|	Документ.ФормированиеАттестационнойКомиссииСотрудников.СоставАттестационнойКомиссии КАК ФормированиеАттестационнойКомиссииСотрудниковСоставАттестационнойКомиссии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФормированиеАттестационнойКомиссииСотрудников КАК ФормированиеАттестационнойКомиссииСотрудников
	|		ПО ФормированиеАттестационнойКомиссииСотрудниковСоставАттестационнойКомиссии.Ссылка = ФормированиеАттестационнойКомиссииСотрудников.Ссылка
	|ГДЕ
	|	ФормированиеАттестационнойКомиссииСотрудников.Ссылка В(&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФормированиеАттестационнойКомиссииСотрудников.Руководитель,
	|	ФормированиеАттестационнойКомиссииСотрудников.Дата
	|ИЗ
	|	Документ.ФормированиеАттестационнойКомиссииСотрудников КАК ФормированиеАттестационнойКомиссииСотрудников
	|ГДЕ
	|	ФормированиеАттестационнойКомиссииСотрудников.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТФизическиеЛицаОбщийСписок.ФизическоеЛицо,
	|	ВТФизическиеЛицаОбщийСписок.Период
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТФизическиеЛицаОбщийСписок КАК ВТФизическиеЛицаОбщийСписок";
	Запрос.Выполнить();
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(Описатель, Истина, "ФИОПолные,ИОФамилия");
	
КонецПроцедуры

Функция ДанныеДляПечатиПриказаОФормированииКомиссии(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФормированиеАттестационнойКомиссииСотрудников.Организация,
	|	ФормированиеАттестационнойКомиссииСотрудников.Руководитель,
	|	ФормированиеАттестационнойКомиссииСотрудников.ДолжностьРуководителя,
	|	ВТКадровыеДанныеРуководителя.ИОФамилия КАК ФИОРуководителя,
	|	ЧленыКомиссии.ЧленКомиссии КАК ЧленКомиссии,
	|	ЧленыКомиссии.РольВКомиссии,
	|	ВЫБОР
	|		КОГДА ЧленыКомиссии.РольВКомиссии = ЗНАЧЕНИЕ(Перечисление.РолиЧленовАттестационнойКомиссии.Председатель)
	|			ТОГДА 1
	|		КОГДА ЧленыКомиссии.РольВКомиссии = ЗНАЧЕНИЕ(Перечисление.РолиЧленовАттестационнойКомиссии.ЗаместительПредседателя)
	|			ТОГДА 2
	|		КОГДА ЧленыКомиссии.РольВКомиссии = ЗНАЧЕНИЕ(Перечисление.РолиЧленовАттестационнойКомиссии.Секретарь)
	|			ТОГДА 3
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК ПорядокРолей,
	|	ВТКадровыеДанныеФизическихЛиц.ФИОПолные КАК ФИОЧленаКомиссии,
	|	ФормированиеАттестационнойКомиссииСотрудников.Ссылка КАК Ссылка,
	|	Организации.НаименованиеПолное,
	|	Организации.НаименованиеСокращенное,
	|	ФормированиеАттестационнойКомиссииСотрудников.ГодАттестации,
	|	ФормированиеАттестационнойКомиссииСотрудников.Номер,
	|	ФормированиеАттестационнойКомиссииСотрудников.Дата,
	|	ФормированиеАттестационнойКомиссииСотрудников.ВидАкта,
	|	ФормированиеАттестационнойКомиссииСотрудников.ВидАттестации
	|ИЗ
	|	Документ.ФормированиеАттестационнойКомиссииСотрудников КАК ФормированиеАттестационнойКомиссииСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ФормированиеАттестационнойКомиссииСотрудников.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК ВТКадровыеДанныеРуководителя
	|		ПО ФормированиеАттестационнойКомиссииСотрудников.Руководитель = ВТКадровыеДанныеРуководителя.ФизическоеЛицо
	|			И ФормированиеАттестационнойКомиссииСотрудников.Дата = ВТКадровыеДанныеРуководителя.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФормированиеАттестационнойКомиссииСотрудников.СоставАттестационнойКомиссии КАК ЧленыКомиссии
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК ВТКадровыеДанныеФизическихЛиц
	|			ПО ЧленыКомиссии.ЧленКомиссии = ВТКадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|				И ЧленыКомиссии.Ссылка.Дата = ВТКадровыеДанныеФизическихЛиц.Период
	|		ПО (ЧленыКомиссии.Ссылка = ФормированиеАттестационнойКомиссииСотрудников.Ссылка)
	|ГДЕ
	|	ФормированиеАттестационнойКомиссииСотрудников.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка, 
	|	ПорядокРолей,
	|	ФИОЧленаКомиссии";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция НаименованиеОрганизации(Выборка)
	Возврат ?(ЗначениеЗаполнено(Выборка.НаименованиеПолное), Выборка.НаименованиеПолное, Выборка.НаименованиеСокращенное);
КонецФункции 

Функция ОбластиМакетаПриказОФормированииАттестационнойКомиссии(ВидАттестации)
	
	ОбластиМакета = Новый Структура;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") 
		И АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ВидАттестации) Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		ОбластиМакета = Модуль.ОбластиМакетаПриказОФормированииАттестационнойКомиссии();		
		
	Иначе		
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ФормированиеАттестационнойКомиссииСотрудников.ПФ_MXL_ПриказОФормированииАттестационнойКомиссии");
		ОбластиМакета.Вставить("ОбластьШапка", Макет.ПолучитьОбласть("Шапка"));
		ОбластиМакета.Вставить("ОбластьЧленКомиссии", Макет.ПолучитьОбласть("ЧленКомиссии"));
		ОбластиМакета.Вставить("ОбластьПодвал", Макет.ПолучитьОбласть("Подвал"));
		
	КонецЕсли;
	
	Возврат ОбластиМакета;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
