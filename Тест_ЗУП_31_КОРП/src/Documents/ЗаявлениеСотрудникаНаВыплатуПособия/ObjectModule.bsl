#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Отказ Или ОбъектЗафиксирован();
	Если Не Отказ Тогда
		ЗаполнитьВидРеестра();
	КонецЕсли;
КонецПроцедуры

#Область ОбработкаПроверкиЗаполнения

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Ошибки = Неопределено;
	ОшибкиСоответствие = Новый Соответствие;
	
	ПроверитьСНИЛСПолучателя(Ошибки);
	
	ПроверитьИННПолучателя(Ошибки);
	
	ПроверитьПолПолучателя(Ошибки);
	
	ПроверитьСериюНомерДокумента(ОшибкиСоответствие);
	
	ПроверитьПорядокРасчетаСреднегоЗаработка(Ошибки);
	
	Если Не РасчетПособияНеТребуется() Тогда
		ПроверитьРайонныйКоэффициент(Ошибки);
	КонецЕсли;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		
		ПроверитьРеквизитыЕжемесячногоПособияПоУходуЗаРебенком(Ошибки);
		
	КонецЕсли;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка Тогда
		
		ПроверитьРеквизитыЕдиновременногоПособияПриРожденииРебенка(Ошибки);
		
	КонецЕсли;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки Тогда
		
		ПроверитьРеквизитыСправкиОПостановкеНаУчетВРанниеСрокиБеременности(Ошибки);
		
	КонецЕсли;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности Тогда
		
		ПроверитьРеквизитыЛисткаНетрудоспособности(Ошибки);
		
		ПроверитьРеквизитыПериодаПростоя(Ошибки);
		
		ПроверитьРеквизитыПериодаТрудовогоДоговора(Ошибки);
		
	КонецЕсли;
	
	Если Перерасчет И Не ЗначениеЗаполнено(КодПричиныПерерасчета) Тогда
		Текст = Нстр("ru = 'Для случаев перерасчета пособия необходимо указать код причины перерасчета.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "КодПричиныПерерасчета", Текст, "");
	КонецЕсли;
	
	Если СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ЧерезБанк Тогда
		Если ЗначениеЗаполнено(НомерКартыМИР)
			И Не ЗарплатаКадрыКлиентСервер.ЭтоНомерКарты(НомерКартыМИР) Тогда
			Текст = Нстр("ru = 'Номер карты МИР заполнен некорректно (ожидается 16 или 19 чисел без пробелов).'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерКартыМИР", Текст, "");
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
	Для Каждого ОшибкиПоФизЛицу Из ОшибкиСоответствие Цикл
		Для Каждого ОшибкаДанныхФизическогоЛица Из ОшибкиПоФизЛицу.Значение Цикл
			Если ОшибкаДанныхФизическогоЛица.ПолеФормы <> "КемВыдан"
				И ОшибкаДанныхФизическогоЛица.ПолеФормы <> "ДатаВыдачи" Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ОшибкаДанныхФизическогоЛица.ТекстОшибки,
					Ссылка,
					"Объект." + ОшибкаДанныхФизическогоЛица.ПолеФормы,,
					Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	УдалитьРеквизитыНеТребующиеПроверки(ПроверяемыеРеквизиты);
КонецПроцедуры

#Область УдалитьРеквизитыНеТребующиеПроверки

Процедура УдалитьРеквизитыНеТребующиеПроверки(ПроверяемыеРеквизиты)
	Если Не ПолучательНеЯвляетсяЗаявителем Тогда
		УдалитьПроверяемыеРеквизитыЗаявителя(ПроверяемыеРеквизиты);
	КонецЕсли;
	
	Если Не ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности
		И Не ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве Тогда
		УдалитьПроверяемыеРеквизитыАдресаРегистрации(ПроверяемыеРеквизиты);
	КонецЕсли;
	
	Если СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ПочтовымПереводом Тогда
		УдалитьПроверяемыеРеквизитыБанка(ПроверяемыеРеквизиты);
	Иначе
		УдалитьПроверяемыеРеквизитыПочтовогоАдреса(ПроверяемыеРеквизиты);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидДокументаНаПроживание) Тогда
		УдалитьПроверяемыеРеквизитыВидаДокументаНаПроживание(ПроверяемыеРеквизиты);
	КонецЕсли;
	
	Если НЕ ТребуютсяРеквизитыЛисткаНетрудоспособности() Тогда
		УдалитьПроверяемыеРеквизитыЛисткаНетрудоспособности(ПроверяемыеРеквизиты);
	КонецЕсли;
	
	Если НЕ ТребуетсяСправкаОПостановкеНаУчетВРанниеСрокиБеременности() Тогда
		УдалитьПроверяемыеРеквизитыСправкиОПостановкеНаУчетВРанниеСрокиБеременности(ПроверяемыеРеквизиты);
	КонецЕсли;
	
	Если Не ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		УдалитьПроверяемыеРеквизитыЕжемесячногоПособияПоУходуЗаРебенком(ПроверяемыеРеквизиты);
	КонецЕсли;
	
	Если РасчетПособияНеТребуется() Тогда
		
		УдалитьПроверяемыеРеквизитыСреднегоЗаработка(ПроверяемыеРеквизиты);
		УдалитьПроверяемыеРеквизитыМРОТ(ПроверяемыеРеквизиты);
		УдалитьПроверяемыеРеквизитыТарифнойСтавки(ПроверяемыеРеквизиты);
		
	ИначеЕсли ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок Тогда
		
		УдалитьПроверяемыеРеквизитыМРОТ(ПроверяемыеРеквизиты);
		УдалитьПроверяемыеРеквизитыТарифнойСтавки(ПроверяемыеРеквизиты);
		Если СчитатьПоПравилам2010Года Тогда
			УдалитьПроверяемыеРеквизитыРасчетаСреднегоЗаработкаГодыРасчета(ПроверяемыеРеквизиты);
		Иначе
			УдалитьПроверяемыеРеквизитыРасчетаСреднегоЗаработкаПериодРасчета(ПроверяемыеРеквизиты);
		КонецЕсли;
		
	ИначеЕсли ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.ИсходяИзТарифнойСтавки Тогда
		
		УдалитьПроверяемыеРеквизитыСреднегоЗаработка(ПроверяемыеРеквизиты);
		УдалитьПроверяемыеРеквизитыМРОТ(ПроверяемыеРеквизиты);
		
	ИначеЕсли ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.ИсходяИзМРОТ Тогда
		
		УдалитьПроверяемыеРеквизитыСреднегоЗаработка(ПроверяемыеРеквизиты);
		УдалитьПроверяемыеРеквизитыТарифнойСтавки(ПроверяемыеРеквизиты);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыЗаявителя(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ФамилияЗаявителя");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ИмяЗаявителя");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ОтчествоЗаявителя");
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидДокументаУдостоверяющегоЛичностьЗаявителя");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СерияДокументаУдостоверяющегоЛичностьЗаявителя");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерДокументаУдостоверяющегоЛичностьЗаявителя");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаВыдачиДокументаУдостоверяющегоЛичностьЗаявителя");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КемВыданДокументУдостоверяющийЛичностьЗаявителя");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыАдресаРегистрации(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяРегистрации");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыБанка(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Банк");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НаименованиеБанка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "БИКБанка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерЛицевогоСчета");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыПочтовогоАдреса(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "АдресПолучателяФактический");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыВидаДокументаНаПроживание(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерДокументаНаПроживание");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаВыдачиДокументаНаПроживание");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыЕжемесячногоПособияПоУходуЗаРебенком(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаОтпускаПоУходуЗаРебенком");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончанияОтпускаПоУходуЗаРебенком");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком");
КонецПроцедуры

Функция ТребуетсяСправкаОПостановкеНаУчетВРанниеСрокиБеременности()
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки;
КонецФункции

Функция ТребуютсяРеквизитыЛисткаНетрудоспособности()
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки;
КонецФункции

Процедура УдалитьПроверяемыеРеквизитыЛисткаНетрудоспособности(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерЛисткаНетрудоспособности");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаЛисткаНетрудоспособности");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыСправкиОПостановкеНаУчетВРанниеСрокиБеременности(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
КонецПроцедуры

Функция РасчетПособияНеТребуется()
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения;
КонецФункции

Процедура УдалитьПроверяемыеРеквизитыСреднегоЗаработка(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СреднийЗаработокЗаРасчетныйПериод");
	УдалитьПроверяемыеРеквизитыРасчетаСреднегоЗаработкаПериодРасчета(ПроверяемыеРеквизиты);
	УдалитьПроверяемыеРеквизитыРасчетаСреднегоЗаработкаГодыРасчета(ПроверяемыеРеквизиты);
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыРасчетаСреднегоЗаработкаПериодРасчета(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаРасчетногоПериода");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончанияРасчетногоПериода");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыРасчетаСреднегоЗаработкаГодыРасчета(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПервыйРасчетныйГод");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВторойРасчетныйГод");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыМРОТ(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "МРОТ");
КонецПроцедуры

Процедура УдалитьПроверяемыеРеквизитыТарифнойСтавки(ПроверяемыеРеквизиты)
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДолжностнойОклад");
КонецПроцедуры

#КонецОбласти

Процедура ПроверитьСНИЛСПолучателя(Ошибки)
	СНИЛСЗаполнен = ЗначениеЗаполнено(СтрЗаменить(СНИЛСПолучателя, "-",""));
	
	ТекстОшибки = "";
	
	Если СНИЛСЗаполнен
		И Не РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(СНИЛСПолучателя, ТекстОшибки) Тогда
		Текст = НСтр("ru = 'СНИЛС получателя пособия указан не верно. %1'");
		Текст = СтрШаблон(Текст, ТекстОшибки);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "СНИЛСПолучателя", Текст, "");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьИННПолучателя(Ошибки)
	ИННЗаполнен = ЗначениеЗаполнено(СтрЗаменить(ИННПолучателя, "-",""));
	
	ТекстОшибки = "";
	
	Если ИННЗаполнен
		И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИННПолучателя, Ложь, ТекстОшибки) Тогда
		Текст = НСтр("ru = 'ИНН получателя пособия указан не верно. %1'");
		Текст = СтрШаблон(Текст, ТекстОшибки);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ИННПолучателя", Текст, "");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьПолПолучателя(Ошибки)
	КадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо), "Пол");
	
	Если КадровыеДанныеСотрудника.Количество() > 0 Тогда
		ПолПолучателяЗаполнен = ЗначениеЗаполнено(КадровыеДанныеСотрудника[0].Пол);
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Не ПолПолучателяЗаполнен Тогда
		Текст = Нстр("ru = 'Не заполнен пол получателя пособия.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Пол", Текст, "");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьСериюНомерДокумента(Ошибки)
	ПравилаПроверки = ПравилаПроверкиДанныхФизическогоЛица();
	
	ДанныеФизическогоЛицаДляПроверки = ДанныеФизическогоЛицаДляПроверки();
	
	ФизическиеЛицаЗарплатаКадры.ПроверитьДанныеФизическогоЛица(
		ДанныеФизическогоЛицаДляПроверки,
		ПравилаПроверки,
		Ошибки);
КонецПроцедуры

Процедура ПроверитьПорядокРасчетаСреднегоЗаработка(Ошибки)
	Если ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам Тогда
		ДатаНаступленияСтраховогоСлучая = Документы.ЗаявлениеСотрудникаНаВыплатуПособия.ДатаНаступленияСтраховогоСлучая(ДокументОснование);
		Если ДатаНаступленияСтраховогоСлучая = Неопределено
			Или ДатаНаступленияСтраховогоСлучая < УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаОтдельногоРасчетаПособийПоМатеринству()Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Текст = Нстр("ru = 'Порядок расчета среднего заработка ""Исходя из тарифной ставки"" и ""Исходя из МРОТ"" допустимо указывать только для отпусков по беременности и родам до 2013 года.'");
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПорядокРасчетаСреднегоЗаработка", Текст, "");
КонецПроцедуры

Процедура ПроверитьРайонныйКоэффициент(Ошибки)
	Если ЗначениеЗаполнено(РайонныйКоэффициент)
		И РайонныйКоэффициент > 1 Тогда
		
		ДопустимыеЗначенияРайонногоКоэффициента = ПрямыеВыплатыПособийСоциальногоСтрахования.ДопустимыеЗначенияРайонногоКоэффициента();
		
		УказаноДопустимоеЗначение = ДопустимыеЗначенияРайонногоКоэффициента.Найти(РайонныйКоэффициент) <> Неопределено;
		
		Если Не УказаноДопустимоеЗначение Тогда
			Текст = Нстр("ru = 'Указано недопустимое значение районного коэффициента.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "РайонныйКоэффициент", Текст, "");
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыЕжемесячногоПособияПоУходуЗаРебенком(Ошибки)
	Если ЗначениеЗаполнено(ДокументОснование)
		И Не ЗначениеЗаполнено(ИдентификаторСтрокиОснования) Тогда
		Текст = НСтр("ru = 'Не выбран ребенок, за которым осуществляется уход.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ИдентификаторСтрокиОснования", Текст, "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПриказаОЗаменеПослеродовогоОтпуска) Или ЗначениеЗаполнено(НомерПриказаОЗаменеПослеродовогоОтпуска) Тогда
		Если ЗначениеЗаполнено(ДатаПриказаОЗаменеПослеродовогоОтпуска) И Не ЗначениеЗаполнено(НомерПриказаОЗаменеПослеродовогоОтпуска) Тогда
			Текст = Нстр("ru = 'Не указан номер приказа о замене послеродового отпуска на отпуск по уходу.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерПриказаОЗаменеПослеродовогоОтпуска", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаПриказаОЗаменеПослеродовогоОтпуска) И ЗначениеЗаполнено(НомерПриказаОЗаменеПослеродовогоОтпуска) Тогда
			Текст = Нстр("ru = 'Не указана дата приказа о замене послеродового отпуска на отпуск по уходу.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаПриказаОЗаменеПослеродовогоОтпуска", Текст, "");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) Или ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
		Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) И Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
			Текст = Нстр("ru = 'Не указан номер Справки от отца о неполучении пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСправкиОНеполученииПособияОтОтца", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) И ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
			Текст = Нстр("ru = 'Не указана дата Справки от отца о неполучении пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСправкиОНеполученииПособияОтОтца", Текст, "");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) Или ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
		Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) И Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
			Текст = Нстр("ru = 'Не указан номер Справки от матери о неполучении пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСправкиОНеполученииПособияОтМатери", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) И ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
			Текст = Нстр("ru = 'Не указана дата Справки от матери о неполучении пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСправкиОНеполученииПособияОтМатери", Текст, "");
		КонецЕсли;
	КонецЕсли;
	
	Если Не ТипЗанятостиРаботника = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
		
		Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияПоДругимМестамРаботы) Или ЗначениеЗаполнено(НомерСправкиОНеполученииПособияПоДругимМестамРаботы) Тогда
			Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияПоДругимМестамРаботы) И Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияПоДругимМестамРаботы) Тогда
				Текст = Нстр("ru = 'Не указан номер Справки от матери о неполучении пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСправкиОНеполученииПособияПоДругимМестамРаботы", Текст, "");
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияПоДругимМестамРаботы) И ЗначениеЗаполнено(НомерСправкиОНеполученииПособияПоДругимМестамРаботы) Тогда
				Текст = Нстр("ru = 'Не указана дата Справки от матери о неполучении пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСправкиОНеполученииПособияПоДругимМестамРаботы", Текст, "");
			КонецЕсли;
		Иначе
			Текст = Нстр("ru = 'Для совместителей необходимо указать реквизиты Справки о неполучении пособия по основному месту работы.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСправкиОНеполученииПособияПоДругимМестамРаботы", Текст, "");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидОсобойЗоныПроживанияРаботы = Перечисления.ВидыОсобойЗоныПроживанияРаботы.ЗонаЗагрязненияПриАварииПОМаяк
		И ОтношениеКОсобойЗоне <> Перечисления.ОтношениеКОсобойЗоне.Проживает Тогда
		
		Текст = Нстр("ru = 'Для предоставления льготы лицу, проживающему в населенном пункте, загрязненном вследствие аварии на ПО ""Маяк"", следует указать вариант ""Постоянное проживание""'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ОтношениеКОсобойЗоне", Текст, "");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыЕдиновременногоПособияПриРожденииРебенка(Ошибки)
	Если ЗначениеЗаполнено(ДатаСправкиОРожденииРебенка)
		Или ЗначениеЗаполнено(НомерСправкиОРожденииРебенка) Тогда
		Если Не ЗначениеЗаполнено(ФормаСправкиОРожденииРебенка) Тогда
			Текст = Нстр("ru = 'При рождении ребенка на территории РФ необходимо указать вид Справки о рождении: форма № 24 или № 25 или № 26.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ФормаСправкиОРожденииРебенка", Текст, "");
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(ДатаИногоДокументаПодтверждающегоРождение) Тогда
			Текст = Нстр("ru = 'При рождении ребенка на территории РФ следует указывать только реквизиты Справки о рождении (формы № 24 или № 25 или № 26).'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСвидетельстваОРождении", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(НомерСправкиОРожденииРебенка) Тогда
			Текст = Нстр("ru = 'Не указан номер Справки о рождении.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСправкиОРожденииРебенка", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСправкиОРожденииРебенка) Тогда
			Текст = Нстр("ru = 'Не указана дата Справки о рождении.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСправкиОРожденииРебенка", Текст, "");
		КонецЕсли;
	ИначеЕсли Не (ЗначениеЗаполнено(ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(НомерСвидетельстваОРождении)
		Или ЗначениеЗаполнено(ДатаИногоДокументаПодтверждающегоРождение) Или ЗначениеЗаполнено(НомерИногоДокументаПодтверждающегоРождение)) Тогда
		Текст = Нстр("ru = 'Необходимо указать реквизиты одного из документов: Справки о рождении, Свидетельства о рождении, выданного консульским учреждением РФ, или документа иностранного государства, подтверждающего рождение ребенка.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСвидетельстваОРождении", Текст, "");
	Иначе
		Если ЗначениеЗаполнено(ДатаСвидетельстваОРождении) И Не ЗначениеЗаполнено(НомерСвидетельстваОРождении) Тогда
			Текст = Нстр("ru = 'Не указан номер Свидетельства о рождении.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСвидетельстваОРождении", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСвидетельстваОРождении) И ЗначениеЗаполнено(НомерСвидетельстваОРождении) Тогда
			Текст = Нстр("ru = 'Не указана дата Свидетельства о рождении.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСвидетельстваОРождении", Текст, "");
		КонецЕсли;
		Если (ЗначениеЗаполнено(ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(НомерСвидетельстваОРождении))
			И Не ЗначениеЗаполнено(СерияСвидетельстваОРождении) Тогда
			Текст = Нстр("ru = 'Не указана серия Свидетельства о рождении.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "СерияСвидетельстваОРождении", Текст, "");
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаИногоДокументаПодтверждающегоРождение) И Не ЗначениеЗаполнено(НомерИногоДокументаПодтверждающегоРождение) Тогда
			Текст = Нстр("ru = 'Не указан номер документа иностранного государства, подтверждающего рождение ребенка.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерИногоДокументаПодтверждающегоРождение", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаИногоДокументаПодтверждающегоРождение) И ЗначениеЗаполнено(НомерИногоДокументаПодтверждающегоРождение) Тогда
			Текст = Нстр("ru = 'Не указана дата документа иностранного государства, подтверждающего рождение ребенка.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаИногоДокументаПодтверждающегоРождение", Текст, "");
		КонецЕсли;
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(ДатаРешенияОбОпеке) Или ЗначениеЗаполнено(НомерРешенияОбОпеке))
		И (ЗначениеЗаполнено(ДатаРешенияОбУсыновлении) Или ЗначениеЗаполнено(НомерРешенияОбУсыновлении))
		И (ЗначениеЗаполнено(ДатаДоговораОПередачеРебенкаВПриемнуюСемью) Или ЗначениеЗаполнено(НомерДоговораОПередачеРебенкаВПриемнуюСемью)) Тогда
		Текст = Нстр("ru = 'Необходимо указать реквизиты только одного из документов: об опеке, усыновлении или о передаче ребенка на воспитание.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаРешенияОбОпеке", Текст, "");
	Иначе
		Если ЗначениеЗаполнено(ДатаРешенияОбОпеке) И Не ЗначениеЗаполнено(НомерРешенияОбОпеке) Тогда
			Текст = Нстр("ru = 'Не указан номер решения об установлении опеки.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерРешенияОбОпеке", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаРешенияОбОпеке) И ЗначениеЗаполнено(НомерРешенияОбОпеке) Тогда
			Текст = Нстр("ru = 'Не указана дата решения об установлении опеки.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаРешенияОбОпеке", Текст, "");
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаРешенияОбУсыновлении) И Не ЗначениеЗаполнено(НомерРешенияОбУсыновлении) Тогда
			Текст = Нстр("ru = 'Не указан номер решения об усыновлении.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерРешенияОбУсыновлении", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаРешенияОбУсыновлении) И ЗначениеЗаполнено(НомерРешенияОбУсыновлении) Тогда
			Текст = Нстр("ru = 'Не указана дата решения об усыновлении.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаРешенияОбУсыновлении", Текст, "");
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаДоговораОПередачеРебенкаВПриемнуюСемью) И Не ЗначениеЗаполнено(НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			Текст = Нстр("ru = 'Не указан номер договора о передаче ребенка на воспитание.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерДоговораОПередачеНаВоспитание", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаДоговораОПередачеРебенкаВПриемнуюСемью) И ЗначениеЗаполнено(НомерДоговораОПередачеРебенкаВПриемнуюСемью) Тогда
			Текст = Нстр("ru = 'Не указана дата договора о передаче ребенка на воспитание.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаДоговораОПередачеНаВоспитание", Текст, "");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) Или ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
		Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) И Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
			Текст = Нстр("ru = 'Не указан номер Справки от другого родителя о неполучении пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСправкиОНеполученииПособияОтМатери", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтМатери) И ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтМатери) Тогда
			Текст = Нстр("ru = 'Не указана дата Справки от другого родителя о неполучении пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСправкиОНеполученииПособияОтМатери", Текст, "");
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) Или ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
		Если ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) И Не ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
			Текст = Нстр("ru = 'Не указан номер Справки от другого родителя о неполучении пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСправкиОНеполученииПособияОтОтца", Текст, "");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаСправкиОНеполученииПособияОтОтца) И ЗначениеЗаполнено(НомерСправкиОНеполученииПособияОтОтца) Тогда
			Текст = Нстр("ru = 'Не указана дата Справки от другого родителя о неполучении пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСправкиОНеполученииПособияОтОтца", Текст, "");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыЛисткаНетрудоспособности(Ошибки)
	Если Не ЗначениеЗаполнено(ДатаЛисткаНетрудоспособности) Тогда
		Текст = Нстр("ru = 'Не указана дата выдачи листка нетрудоспособности.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаЛисткаНетрудоспособности", Текст, "");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НомерЛисткаНетрудоспособности) Тогда
		Текст = Нстр("ru = 'Не указан номер листка нетрудоспособности.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерЛисткаНетрудоспособности", Текст, "");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыСправкиОПостановкеНаУчетВРанниеСрокиБеременности(Ошибки)
	Если Не ЗначениеЗаполнено(ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности) Тогда
		Текст = Нстр("ru = 'Не указана дата выдачи справки о постановке на учет в медицинских учреждениях в ранние сроки беременности.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности", Текст, "");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности) Тогда
		Текст = Нстр("ru = 'Не указан номер справки о постановке на учет в медицинских учреждениях в ранние сроки беременности.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности", Текст, "");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыПериодаПростоя(Ошибки)
	Если ЗначениеЗаполнено(ПериодПростоя1ДатаНачала) И ЗначениеЗаполнено(ПериодПростоя1ДатаОкончания) Тогда
		Если ПериодПростоя1ДатаНачала > ПериодПростоя1ДатаОкончания Тогда
			Текст = Нстр("ru = 'Неверно указаны даты начала и окончания простоя.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПериодПростоя1ДатаОкончания", Текст, "");
		ИначеЕсли ПериодПростоя1СреднийЗаработок = 0 Тогда
			Текст = Нстр("ru = 'Не указан средний заработок на период простоя.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПериодПростоя1СреднийЗаработок", Текст, "");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодПростоя2ДатаНачала) И ЗначениеЗаполнено(ПериодПростоя2ДатаОкончания) Тогда
		Если ПериодПростоя2ДатаНачала > ПериодПростоя2ДатаОкончания Тогда
			Текст = Нстр("ru = 'Неверно указаны даты начала и окончания простоя.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПериодПростоя2ДатаОкончания", Текст, "");
		ИначеЕсли ПериодПростоя2СреднийЗаработок = 0 Тогда
			Текст = Нстр("ru = 'Не указан средний заработок на период простоя.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПериодПростоя2СреднийЗаработок", Текст, "");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьРеквизитыПериодаТрудовогоДоговора(Ошибки)
	Если ЗначениеЗаполнено(ДатаНачалаТрудовогоДоговораПолучателя) Или ЗначениеЗаполнено(ДатаОкончанияТрудовогоДоговораПолучателя) Тогда
		
		Если ЗначениеЗаполнено(ДатаНачалаТрудовогоДоговораПолучателя) И Не ЗначениеЗаполнено(ДатаОкончанияТрудовогоДоговораПолучателя) Тогда
			Текст = Нстр("ru = 'Указана дата начала, но не указана дата окончания срочного трудового договора.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаОкончанияТрудовогоДоговораПолучателя", Текст, "");
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаНачалаТрудовогоДоговораПолучателя) И ЗначениеЗаполнено(ДатаОкончанияТрудовогоДоговораПолучателя) Тогда
			Текст = Нстр("ru = 'Указана дата окончания, но не указана дата начала срочного трудового договора.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаНачалаТрудовогоДоговораПолучателя", Текст, "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачалаТрудовогоДоговораПолучателя) И ЗначениеЗаполнено(ДатаОкончанияТрудовогоДоговораПолучателя) Тогда
			Если ДатаНачалаТрудовогоДоговораПолучателя > ДатаОкончанияТрудовогоДоговораПолучателя Тогда
				Текст = Нстр("ru = 'Неверно указаны даты начала и окончания срочного трудового договора.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ДатаОкончанияТрудовогоДоговораПолучателя", Текст, "");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Сотрудник") И ЗначениеЗаполнено(ДанныеЗаполнения.Сотрудник) Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.Сотрудник;
		Иначе
			ЗначенияДляЗаполнения = Новый Структура("Ответственный");
			ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗначенияДляЗаполнения);
			
			ОтношениеКОсобойЗоне = Перечисления.ОтношениеКОсобойЗоне.Нет;
			
			ПараметрДокументОснование = Неопределено;
			ПараметрИдентификаторСтрокиОснования = Неопределено;
			Если ДанныеЗаполнения.Свойство("Основание", ПараметрДокументОснование) Тогда
				ДокументОснование = ПараметрДокументОснование;
				Если ДанныеЗаполнения.Свойство("ИдентификаторСтроки", ПараметрИдентификаторСтрокиОснования) И ПараметрИдентификаторСтрокиОснования <> 0 Тогда
					ИдентификаторСтрокиОснования = ПараметрИдентификаторСтрокиОснования;
				КонецЕсли;
			КонецЕсли;
			
			ОбновитьВторичныеДанныеДокумента();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИСотруднику(ЭтотОбъект, Организация, Сотрудник, Дата);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьВидРеестра()
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком
	ИначеЕсли ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка Тогда
		ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕдиновременныеПособияПриРожденииРебенка
	ИначеЕсли ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки Тогда
		ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияВставшимНаУчетВРанниеСроки
	ИначеЕсли ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		ВидРеестра = Неопределено;
	Иначе
		ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности
	КонецЕсли;
КонецПроцедуры

Функция ОбновитьВторичныеДанныеДокумента(ДанныеОснования = Истина, ДанныеОрганизации = Истина, ДанныеСотрудника = Истина, ДанныеБанка = Истина) Экспорт
	Модифицирован = Ложь;
	
	Если ОбъектЗафиксирован() Тогда
		Возврат Модифицирован;
	КонецЕсли;
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Метаданные().ПолноеИмя());
	
	Если Менеджер.ОбновитьДокумент(ЭтотОбъект) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	ПараметрыФиксации = Менеджер.ПараметрыФиксацииВторичныхДанных(ЭтотОбъект);
	
	Если ДанныеОснования И ЗаполнитьДанныеДокументаОснования(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ДанныеОрганизации И ЗаполнитьДанныеОрганизации(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ДанныеСотрудника И ЗаполнитьДанныеСотрудника(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ДанныеБанка И ЗаполнитьРеквизитыБанка(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Возврат Модифицирован;
КонецФункции

Функция ЗаполнитьРеквизитыБанка(ПараметрыФиксации)
	РеквизитыДокумента = Новый Структура("НаименованиеБанка, БИКБанка", "", "");
	
	Если ЗначениеЗаполнено(Банк) Тогда
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Банк, "Наименование, Код");
		РеквизитыДокумента.НаименованиеБанка = ЗначенияРеквизитов.Наименование;
		РеквизитыДокумента.БИКБанка      = ЗначенияРеквизитов.Код;
	КонецЕсли;
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ЗаполнитьДанныеСотрудника(ПараметрыФиксации)
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НеобходимыеКадровыеДанныеСотрудника = Новый Массив;
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ФизическоеЛицо");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Фамилия");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Имя");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Отчество");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументВид");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументСерия");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументНомер");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументДатаВыдачи");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументСрокДействия");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДокументКемВыдан");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ДатаРождения");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ИНН");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("СтраховойНомерПФР");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("АдресМестаПроживания");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("АдресПоПрописке");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ТелефонДомашний");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("СтатусНалогоплательщика");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Страна");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("КоличествоСтавок");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ВидЗанятости");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("ТарифнаяСтавка");
	НеобходимыеКадровыеДанныеСотрудника.Добавить("Подразделение");
	
	РеквизитыДокумента = Новый Структура;
	
	ТЗКадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), НеобходимыеКадровыеДанныеСотрудника, Дата);
	
	Если ТЗКадровыеДанныеСотрудника.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КадровыеДанныеСотрудника = ТЗКадровыеДанныеСотрудника[0];
	ФизическоеЛицо = КадровыеДанныеСотрудника.ФизическоеЛицо;
	// ФИО
	РеквизитыДокумента.Вставить("ФамилияПолучателя",КадровыеДанныеСотрудника.Фамилия);
	РеквизитыДокумента.Вставить("ИмяПолучателя", КадровыеДанныеСотрудника.Имя);
	РеквизитыДокумента.Вставить("ОтчествоПолучателя", КадровыеДанныеСотрудника.Отчество);
	РеквизитыДокумента.Вставить("ФамилияЗаявителя", КадровыеДанныеСотрудника.Фамилия);
	РеквизитыДокумента.Вставить("ИмяЗаявителя", КадровыеДанныеСотрудника.Имя);
	РеквизитыДокумента.Вставить("ОтчествоЗаявителя", КадровыеДанныеСотрудника.Отчество);
	// ИНН, СНИЛС, Дата рождения
	РеквизитыДокумента.Вставить("ИННПолучателя", КадровыеДанныеСотрудника.ИНН);
	РеквизитыДокумента.Вставить("СНИЛСПолучателя", КадровыеДанныеСотрудника.СтраховойНомерПФР);
	РеквизитыДокумента.Вставить("СтатусНалогоплательщикаПолучателя", КадровыеДанныеСотрудника.СтатусНалогоплательщика);
	РеквизитыДокумента.Вставить("ДатаРожденияПолучателя", КадровыеДанныеСотрудника.ДатаРождения);
	РеквизитыДокумента.Вставить("Гражданство", КадровыеДанныеСотрудника.Страна);
	// Удостоверение личности
	РеквизитыДокумента.Вставить("ВидДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументВид);
	РеквизитыДокумента.Вставить("СерияДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументСерия);
	РеквизитыДокумента.Вставить("НомерДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументНомер);
	РеквизитыДокумента.Вставить("ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументДатаВыдачи);
	РеквизитыДокумента.Вставить("ДатаДействияДокументаУдостоверяющегоЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументСрокДействия);
	РеквизитыДокумента.Вставить("КемВыданДокументУдостоверяющийЛичностьПолучателя", КадровыеДанныеСотрудника.ДокументКемВыдан);
	// Адреса
	РеквизитыДокумента.Вставить("АдресПолучателяФактический", КадровыеДанныеСотрудника.АдресМестаПроживания);
	РеквизитыДокумента.Вставить("АдресПолучателяРегистрации", КадровыеДанныеСотрудника.АдресПоПрописке);
	РеквизитыДокумента.Вставить("ТелефонПолучателя", КадровыеДанныеСотрудника.ТелефонДомашний);
	// Данные о сотруднике
	РеквизитыДокумента.Вставить("ДолжностнойОклад", КадровыеДанныеСотрудника.ТарифнаяСтавка);
	РеквизитыДокумента.Вставить("ТипЗанятостиРаботника", КадровыеДанныеСотрудника.ВидЗанятости);
	
	Если ЗначениеЗаполнено(КадровыеДанныеСотрудника.Подразделение) Тогда
		РеквизитыДокумента.Вставить("РайонныйКоэффициент", КадровыеДанныеСотрудника.Подразделение.РайонныйКоэффициентРФ);
	КонецЕсли;
	
	// Документ на проживание
	ДанныеДокументаНаПроживание = ПрямыеВыплатыПособийСоциальногоСтрахования.ДокументРазрешениеНаПроживаниеФизическогоЛица(ФизическоеЛицо, Дата);
	РеквизитыДокумента.Вставить("ВидДокументаНаПроживание", ДанныеДокументаНаПроживание.ВидДокумента);
	РеквизитыДокумента.Вставить("СерияДокументаНаПроживание", ДанныеДокументаНаПроживание.Серия);
	РеквизитыДокумента.Вставить("НомерДокументаНаПроживание", ДанныеДокументаНаПроживание.Номер);
	РеквизитыДокумента.Вставить("ДатаВыдачиДокументаНаПроживание", ДанныеДокументаНаПроживание.ДатаВыдачи);
	
	// Банк и номер счета.
	СчетЗарплаты = ПрямыеВыплатыПособийСоциальногоСтрахования.БанковскиеРеквизитыСотрудникаДляВыплатыЗарплаты(Дата, Организация, Сотрудник, ФизическоеЛицо);
	Если ЗначениеЗаполнено(СчетЗарплаты.НомерСчета) Тогда
		РеквизитыДокумента.Вставить("СпособВыплатыПособия", Перечисления.СпособыВыплатыПособия.ЧерезБанк);
		РеквизитыДокумента.Вставить("Банк",                 СчетЗарплаты.Банк);
		РеквизитыДокумента.Вставить("НомерЛицевогоСчета",   СчетЗарплаты.НомерСчета);
	Иначе
		РеквизитыДокумента.Вставить("СпособВыплатыПособия", Перечисления.СпособыВыплатыПособия.ПочтовымПереводом);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОснование) Тогда
		ДоляРабочегоВремениСотрудника = ПрямыеВыплатыПособийСоциальногоСтрахования.ДоляРабочегоВремениСотрудника(Сотрудник, Дата);
		РеквизитыДокумента.Вставить("НеполноеРабочееВремя", ДоляРабочегоВремениСотрудника < 1);
		РеквизитыДокумента.Вставить("РазмерСтавки", ДоляРабочегоВремениСотрудника);
	КонецЕсли;
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ЗаполнитьДанныеОрганизации(ПараметрыФиксации)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура();
	
	РеквизитыДокумента.Вставить("НаименованиеТерриториальногоОрганаФСС", "");
	РеквизитыДокумента.Вставить("НаименованиеОрганизации", "");
	РеквизитыДокумента.Вставить("ФИОУполномоченного", "");
	РеквизитыДокумента.Вставить("ДолжностьУполномоченного", "");
	РеквизитыДокумента.Вставить("ТелефонУполномоченного", "");  
	РеквизитыДокумента.Вставить("РайонныйКоэффициент", "");
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "НаименованиеТерриториальногоОрганаФСС");
	Если РеквизитыОрганизации.Свойство("НаименованиеТерриториальногоОрганаФСС") Тогда
		РеквизитыОрганизации.Свойство("НаименованиеТерриториальногоОрганаФСС", РеквизитыДокумента.НаименованиеТерриториальногоОрганаФСС);
	КонецЕсли;
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "ФИОРук");
	Сведения.Добавить("", "ДолжнРук");
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, Дата, Сведения);
	Если ОргСведения.Свойство("ФИОРук") Тогда
		ОргСведения.Свойство("ФИОРук", РеквизитыДокумента.ФИОУполномоченного);
	КонецЕсли;
	Если ОргСведения.Свойство("ДолжнРук") Тогда
		ОргСведения.Свойство("ДолжнРук", РеквизитыДокумента.ДолжностьУполномоченного);
	КонецЕсли;
	
	РеквизитыДокумента.НаименованиеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "НаименованиеСокращенное");
	
	ТелефоныОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация),
		Перечисления.ТипыКонтактнойИнформации.Телефон,
		Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации,
		?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Если ТелефоныОрганизации.Количество() > 0 Тогда
		РеквизитыДокумента.ТелефонУполномоченного = ТелефоныОрганизации[0].ЗначенияПолей;
	Иначе
		РеквизитыДокумента.ТелефонУполномоченного = "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		РеквизитыДокумента.Вставить("РайонныйКоэффициент", ПрямыеВыплатыПособийСоциальногоСтрахования.РайонныйКоэффициентРФПодразделенияОрганизацииДляЗаявленияСотрудникаНаВыплатуПособия(Организация));
	Иначе
		РеквизитыДокумента.Вставить("РайонныйКоэффициент", Организация.РайонныйКоэффициентРФ);
	КонецЕсли;
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ЗаполнитьДанныеДокументаОснования(ПараметрыФиксации)
	Возврат ПрямыеВыплатыПособийСоциальногоСтрахования.ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОснованию(ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ОбъектЗафиксирован() Экспорт
	ОбъектЗафиксирован = Ложь;
	
	РеестрСтатус = ПрямыеВыплатыПособийСоциальногоСтрахования.РеестрПоЗаявлению(Ссылка);
	Если РеестрСтатус <> Неопределено Тогда
		ОбъектЗафиксирован = Не ПрямыеВыплатыПособийСоциальногоСтрахования.СтатусПозволяетРедактироватьДокумент(РеестрСтатус.СтатусДокумента);
	КонецЕсли;
	
	Возврат ОбъектЗафиксирован;
КонецФункции

Функция ПравилаПроверкиДанныхФизическогоЛица()
	Правила = Новый Массив;
	
	ФизическиеЛицаЗарплатаКадры.ДобавитьПравилоПроверкиУдостоверенияЛичности(
		Правила,
		"ВидДокументаУдостоверяющегоЛичностьПолучателя",
		"СерияДокументаУдостоверяющегоЛичностьПолучателя",
		"НомерДокументаУдостоверяющегоЛичностьПолучателя",
		"ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя",
		"КемВыданДокументУдостоверяющийЛичностьПолучателя",
		"Документ удостоверяющий личность",
		Истина,
		Ложь);
	
	Возврат Правила;
КонецФункции

Функция ДанныеФизическогоЛицаДляПроверки()
	ДанныеФизическогоЛицаДляПроверки = Новый Структура;
	
	ДанныеФизическогоЛицаДляПроверки.Вставить("Наименование", Сотрудник);
	ДанныеФизическогоЛицаДляПроверки.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	ДанныеФизическогоЛицаДляПроверки.Вставить("ВидДокументаУдостоверяющегоЛичностьПолучателя", ВидДокументаУдостоверяющегоЛичностьПолучателя);
	ДанныеФизическогоЛицаДляПроверки.Вставить("СерияДокументаУдостоверяющегоЛичностьПолучателя", СерияДокументаУдостоверяющегоЛичностьПолучателя);
	ДанныеФизическогоЛицаДляПроверки.Вставить("НомерДокументаУдостоверяющегоЛичностьПолучателя", НомерДокументаУдостоверяющегоЛичностьПолучателя);
	ДанныеФизическогоЛицаДляПроверки.Вставить("ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя", ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя);
	ДанныеФизическогоЛицаДляПроверки.Вставить("КемВыданДокументУдостоверяющийЛичностьПолучателя", КемВыданДокументУдостоверяющийЛичностьПолучателя);
	
	Возврат ДанныеФизическогоЛицаДляПроверки;
КонецФункции

#КонецОбласти

#КонецЕсли
