
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ВерсияДокумента = Документы.ЗаявлениеСотрудникаНаВыплатуПособия.АктуальнаяВерсия();
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный", "Объект.Организация", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Объект.ОтношениеКОсобойЗоне = Перечисления.ОтношениеКОсобойЗоне.Нет;
		
		ПараметрДокументОснование = Неопределено;
		ПараметрИдентификаторСтрокиОснования = Неопределено;
		Если Параметры.Свойство("Основание", ПараметрДокументОснование) Тогда
			Объект.ДокументОснование = ПараметрДокументОснование;
			Если Параметры.Свойство("ИдентификаторСтроки", ПараметрИдентификаторСтрокиОснования) Тогда
				Объект.ИдентификаторСтрокиОснования = ПараметрИдентификаторСтрокиОснования;
			КонецЕсли;
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере("Объект");
	КонецЕсли;
	
	ЦветСтиляПоясняющийТекст		= ЦветаСтиля.ПоясняющийТекст;
	ЦветСтиляПоясняющийОшибкуТекст 	= ЦветаСтиля.ПоясняющийОшибкуТекст;
	ЦветСтиляЦветТекстаПоля 		= ЦветаСтиля.ЦветТекстаПоля;
	
	УстановитьПодсказкуАдресам(ЭтотОбъект, Объект);
	
	ПрямыеВыплатыПособийСоциальногоСтрахования.КодыПричинИсправления(Элементы.КодПричиныПерерасчета.СписокВыбора);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	КСчетуПривязанаКартаМИР = ЗначениеЗаполнено(Объект.НомерКартыМИР);
	ОбновитьВидимостьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не КСчетуПривязанаКартаМИР Тогда
		Объект.НомерКартыМИР = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		СтруктураОповещения = Новый Структура("Ссылка, Дата, Номер, Основание, ИдентификаторСтроки");
		СтруктураОповещения.Ссылка = Объект.Ссылка;
		СтруктураОповещения.Дата = Объект.Дата;
		СтруктураОповещения.Номер = Объект.Номер;
		СтруктураОповещения.Основание = Объект.ДокументОснование;
		СтруктураОповещения.ИдентификаторСтроки = Объект.ИдентификаторСтрокиОснования;
		
		Оповестить("ЗаписаноЗаявлениеСотрудникаНаВыплатуПособия", СтруктураОповещения, ЭтаФорма.ВладелецФормы);
	КонецЕсли;
	Оповестить("Запись_ЗаявлениеСотрудникаНаВыплатуПособия", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Перед записью переадресуем сообщения с полей объекта на поля формы.
	Сообщения = ПолучитьСообщенияПользователю(Ложь);
	Для Каждого Сообщение Из Сообщения Цикл
		Сообщение.КлючДанных = Объект.Ссылка;
		Сообщение.ПутьКДанным = "Объект";
		Отказ = Истина;
	КонецЦикла;
	
	ФиксацияСохранитьРеквизитыФормыФикс(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Ложь);	
	ФиксацияУстановитьОбъектЗафиксирован();
	ФиксацияЗаполнитьРеквизитыФормыФикс(ЭтаФорма.Объект);
	ФиксацияОбновитьФиксациюВФорме();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если КСчетуПривязанаКартаМИР И ПустаяСтрока(Объект.НомерКартыМИР) Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не введен номер карты МИР'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НомерКартыМИР");
	КонецЕсли;
	
	// До проверки объекта создаем его, дозаполняем и сами проверяем.
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ТекущийОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		ОбработатьСообщенияПользователю();
	КонецЕсли;
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ФиксацияЗафиксироватьИзменениеРеквизита("Организация");
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	СотрудникПриИзмененииНаСервере();
	ФиксацияЗафиксироватьИзменениеРеквизита("Сотрудник");
КонецПроцедуры

&НаКлиенте
Процедура ПервичныйДокументПриИзменении(Элемент)
	Объект.ИдентификаторСтрокиОснования = Неопределено;
	ПервичныйДокументПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РебенокЗаКоторымОсуществляетсяУходПриИзменении(Элемент)
	ПервичныйДокументПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучательНеЯвляетсяЗаявителемПриИзменении(Элемент)
	УстановитьВидимостьГруппыЗаявитель(Элементы, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВидПособияПриИзменении(Элемент)
	ФиксацияЗафиксироватьИзменениеРеквизита("ВидПособия");
	ВидПособияПриИзмененииНаСервере()
КонецПроцедуры

&НаСервере
Процедура ВидПособияПриИзмененииНаСервере()
	УстановитьТекущуюСтраницуПредоставляемыхДокументов(Элементы, Объект.ВидПособия);
	УстановитьТипДокументаОснования();
	НастроитьПолеРебенокЗаКоторымОсуществляетсяУход(Элементы, Объект.ВидПособия, Объект.ДокументОснование);
	УстановитьДоступностьДокументаОснования(Элементы, Объект.ВидПособия);
	УстановитьДоступностьРасчетаСреднегоЗаработка(Элементы, Объект.ВидПособия);
	УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу(ЭтаФорма);
	УстановитьВидимыеСтраницы();
КонецПроцедуры

&НаКлиенте
Процедура СпособВыплатыПособияПриИзменении(Элемент)
	УстановитьТекущуюСтраницуВыплатыПособий(Элементы, Объект.СпособВыплатыПособия);
	ФиксацияЗафиксироватьИзменениеРеквизита("СпособВыплатыПособия");
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	БанкПриИзмененииНаСервере();
	ФиксацияЗафиксироватьИзменениеРеквизита("Банк");
КонецПроцедуры

&НаКлиенте
Процедура ДокументыФизическихЛицСерияПриИзменении(Элемент)
	СотрудникиКлиентСервер.ОбработатьОтображениеСерияДокументаФизическогоЛица(Объект.ВидДокументаУдостоверяющегоЛичностьПолучателя, Объект.СерияДокументаУдостоверяющегоЛичностьПолучателя, Элемент, ЭтаФорма);
	ФиксацияЗафиксироватьИзменениеРеквизита("СерияДокументаУдостоверяющегоЛичностьПолучателя");
КонецПроцедуры

&НаКлиенте
Процедура ДокументыФизическихЛицНомерПриИзменении(Элемент)
	СотрудникиКлиентСервер.ОбработатьОтображениеНомерДокументаФизическогоЛица(Объект.ВидДокументаУдостоверяющегоЛичностьПолучателя, Объект.НомерДокументаУдостоверяющегоЛичностьПолучателя, Элемент, ЭтаФорма);
	ФиксацияЗафиксироватьИзменениеРеквизита("НомерДокументаУдостоверяющегоЛичностьПолучателя");
КонецПроцедуры

&НаКлиенте
Процедура ДокументНаПроживаниеСерияПриИзменении(Элемент)
	СотрудникиКлиентСервер.ОбработатьОтображениеСерияДокументаФизическогоЛица(Объект.ВидДокументаНаПроживание, Объект.СерияДокументаНаПроживание, Элемент, ЭтаФорма);
	ФиксацияЗафиксироватьИзменениеРеквизита("СерияДокументаНаПроживание");
КонецПроцедуры

&НаКлиенте
Процедура ДокументНаПроживаниеНомерПриИзменении(Элемент)
	СотрудникиКлиентСервер.ОбработатьОтображениеНомерДокументаФизическогоЛица(Объект.ВидДокументаНаПроживание, Объект.НомерДокументаНаПроживание, Элемент, ЭтаФорма);
	ФиксацияЗафиксироватьИзменениеРеквизита("НомерДокументаНаПроживание");
КонецПроцедуры

&НаКлиенте
Процедура СправкаОНеполученииПособияПриИзменении(Элемент)
	УстановитьТекущуюСтраницуСправкаОНеполученииПособия(Элементы, Объект.СправкаОНеполученииПособия)
КонецПроцедуры

&НаКлиенте
Процедура СправкаОНеполученииПособияЕжемесячноеПособиеПриИзменении(Элемент)
	УстановитьТекущуюСтраницуСправкаОНеполученииПособияЕжемесячноеПособие(Элементы, Объект.СправкаОНеполученииПособия)   
КонецПроцедуры

&НаКлиенте
Процедура ОтношениеКОсобойЗонеПриИзменении(Элемент)
	НастроитьОтношениеКОсобойЗоне(Элементы, Объект)
КонецПроцедуры

&НаКлиенте
Процедура ПорядокРасчетаСреднегоЗаработкаПриИзменении(Элемент)
	УстановитьТекущуюСтраницуРасчетСреднегоЗаработка(Элементы,Объект.ПорядокРасчетаСреднегоЗаработка);
КонецПроцедуры

&НаКлиенте
Процедура СчитатьПоПравилам2010ГодаПриИзменении(Элемент)
	УстановитьТекущуюСтраницуПравилаРасчетаСреднего(Элементы, Объект.СчитатьПоПравилам2010Года);
КонецПроцедуры

&НаКлиенте
Процедура ЗамененыКалендарныеГодыРасчетаСреднегоЗаработкаПриИзменении(Элемент)
	УстановитьТекущуюСтраницуЗаменаКалендарныхГодов(Элементы, Объект.ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка);
	ФиксацияЗафиксироватьИзменениеРеквизита("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка");
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеТерриториальногоОрганаФССПриИзменении(Элемент)
	ФиксацияЗафиксироватьИзменениеРеквизита("НаименованиеТерриториальногоОрганаФСС");
КонецПроцедуры

&НаКлиенте
Процедура АдресПолучателяФактическийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("АдресПолучателяФактическийЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица"), Объект.АдресПолучателяФактический);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура АдресПолучателяФактическийЗавершениеВыбора(СтруктураАдреса, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(СтруктураАдреса) = Тип("Структура")Тогда
		Объект.АдресПолучателяФактический = СтруктураАдреса.КонтактнаяИнформация;
		ФиксацияЗафиксироватьИзменениеРеквизита("АдресПолучателяФактический");
		АдресПолучателяФактический = СтруктураАдреса.Представление;
	КонецЕсли;
	
	УстановитьПодсказкуАдресам(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПолучателяРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("АдресПолучателяРегистрацииЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица"), Объект.АдресПолучателяРегистрации);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура АдресПолучателяРегистрацииЗавершениеВыбора(СтруктураАдреса, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(СтруктураАдреса) = Тип("Структура") Тогда
		Объект.АдресПолучателяРегистрации = СтруктураАдреса.КонтактнаяИнформация;
		ФиксацияЗафиксироватьИзменениеРеквизита("АдресПолучателяРегистрации");
		АдресПолучателяРегистрации = СтруктураАдреса.Представление;
	КонецЕсли;
	
	УстановитьПодсказкуАдресам(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефонПолучателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ТелефонПолучателяЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица"), Объект.ТелефонПолучателя);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ТелефонПолучателяЗавершениеВыбора(СтруктураТелефона, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(СтруктураТелефона) = Тип("Структура") Тогда
		Объект.ТелефонПолучателя = СтруктураТелефона.КонтактнаяИнформация;
		ФиксацияЗафиксироватьИзменениеРеквизита("ТелефонПолучателя");
		ТелефонПолучателя = СтруктураТелефона.Представление;
	КонецЕсли;
	
	УстановитьПодсказкуАдресам(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефонУполномоченногоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ТелефонУполномоченногоЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"), Объект.ТелефонУполномоченного);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ТелефонУполномоченногоЗавершениеВыбора(СтруктураТелефона, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(СтруктураТелефона) = Тип("Структура") Тогда
		Объект.ТелефонУполномоченного = СтруктураТелефона.КонтактнаяИнформация;
		ФиксацияЗафиксироватьИзменениеРеквизита("ТелефонУполномоченного");
		ТелефонУполномоченного = СтруктураТелефона.Представление;
	КонецЕсли;
	
	УстановитьПодсказкуАдресам(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура КСчетуПривязанаКартаМИРПриИзменении(Элемент)
	ОбновитьВидимостьДоступность(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура НомерКартыМИРПриИзменении(Элемент)
	Если Объект.НомерКартыМИР <> "" Тогда
		// Удаление лишних символов.
		Объект.НомерКартыМИР = СокрЛП(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(
			Объект.НомерКартыМИР,
			Символ(32), ""),   // Пробелы.
			Символ(160), ""),  // Неразрывные пробелы.
			Символ(45), ""),   // Минусы.
			Символ(150), "")); // Тире.
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

&НаКлиенте
Процедура Подключаемый_ПояснениеНажатие(Элемент, СтандартнаяОбработка = Ложь)

	СотрудникиКлиент.ПояснениеНажатие(Элемент, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсеИсправления(Команда) 
	ОтменитьВсеИсправленияНаСервере();
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИсправленияСотрудника(Команда)
	СотрудникПриИзмененииНаСервере();
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуВыплатыПособий(Элементы, СпособВыплатыПособия)
	Если СпособВыплатыПособия = ПредопределенноеЗначение("Перечисление.СпособыВыплатыПособия.ЧерезБанк") Тогда
		Элементы.СтраницыСпособВыплатыПособия.ТекущаяСтраница = Элементы.СтраницыСпособВыплатыПособия.ПодчиненныеЭлементы.ГруппаБанк;
	Иначе	
		Элементы.СтраницыСпособВыплатыПособия.ТекущаяСтраница = Элементы.СтраницыСпособВыплатыПособия.ПодчиненныеЭлементы.ГруппаПочтовыйАдрес;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуПредоставляемыхДокументов(Элементы, ВидПособия)
	Если ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка") Тогда
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаЕдиновременноеПособиеПриРождении;	
	ИначеЕсли ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком") Тогда
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаЕжемесячноеПособиеПоУходу;	
	ИначеЕсли ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки") Тогда
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаПособиеПоВременнойНетрудоспособностиВставшимНаУчет;	
	ИначеЕсли ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки") Тогда
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаПособиеВставшимНаУчетВРанниеСроки;	
	Иначе
		Элементы.СтраницыПрилагаемыеДокументы.ТекущаяСтраница = Элементы.СтраницыПрилагаемыеДокументы.ПодчиненныеЭлементы.СтраницаПособиеПоВременнойНетрудоспособности;	
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуСправкаОНеполученииПособияЕжемесячноеПособие(Элементы, СправкаОНеполученииПособия)
	Если СправкаОНеполученииПособия = ПредопределенноеЗначение("Перечисление.РодителиПредоставившиеСправкуОНеполученииПособия.Мать") Тогда
		Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ПодчиненныеЭлементы.СтраницаСправкаОтМатериОНеполученииПособияЕжемесячноеПособие;
	ИначеЕсли СправкаОНеполученииПособия = ПредопределенноеЗначение("Перечисление.РодителиПредоставившиеСправкуОНеполученииПособия.ОбаРодителя") Тогда
		Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ПодчиненныеЭлементы.СтраницаСправкаОтОбоихОНеполученииПособияЕжемесячноеПособие;	
	Иначе
		Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособияЕжемесячноеПособие.ПодчиненныеЭлементы.СтраницаСправкаОтОтцаОНеполученииПособияЕжемесячноеПособие;	
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуСправкаОНеполученииПособия(Элементы, СправкаОНеполученииПособия)
	Если СправкаОНеполученииПособия = ПредопределенноеЗначение("Перечисление.РодителиПредоставившиеСправкуОНеполученииПособия.Мать") Тогда
		Элементы.СтраницыСправкиОНеполученииПособия.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособия.ПодчиненныеЭлементы.СтраницаСправкаОтМатериОНеполученииПособия;
	Иначе
		Элементы.СтраницыСправкиОНеполученииПособия.ТекущаяСтраница = Элементы.СтраницыСправкиОНеполученииПособия.ПодчиненныеЭлементы.СтраницаСправкаОтОтцаОНеполученииПособия;	
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуРасчетСреднегоЗаработка(Элементы, ПорядокРасчетаСреднегоЗаработка)
	Если ПорядокРасчетаСреднегоЗаработка = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок") Тогда
		Элементы.СтраницыРасчетСреднегоЗаработка.ТекущаяСтраница = Элементы.СтраницыРасчетСреднегоЗаработка.ПодчиненныеЭлементы.СтраницаСреднийЗаработок;
	ИначеЕсли ПорядокРасчетаСреднегоЗаработка = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.ИсходяИзТарифнойСтавки") Тогда
		Элементы.СтраницыРасчетСреднегоЗаработка.ТекущаяСтраница = Элементы.СтраницыРасчетСреднегоЗаработка.ПодчиненныеЭлементы.СтраницаТарифнаяСтавка;
	Иначе 
		Элементы.СтраницыРасчетСреднегоЗаработка.ТекущаяСтраница = Элементы.СтраницыРасчетСреднегоЗаработка.ПодчиненныеЭлементы.СтраницаМРОТ;	
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуПравилаРасчетаСреднего(Элементы, СчитатьПоПравилам2010Года)
	Если СчитатьПоПравилам2010Года Тогда
		Элементы.СтраницыПравилаРасчетаСреднего.ТекущаяСтраница = Элементы.СтраницыПравилаРасчетаСреднего.ПодчиненныеЭлементы.СтраницаПоПравилам2010;
	Иначе 
		Элементы.СтраницыПравилаРасчетаСреднего.ТекущаяСтраница = Элементы.СтраницыПравилаРасчетаСреднего.ПодчиненныеЭлементы.СтраницаПоПравилам2011;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуЗаменаКалендарныхГодов(Элементы, ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка)
	Если ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка Тогда
		Элементы.СтраницыЗаменаКалендарныхГодов.ТекущаяСтраница = Элементы.СтраницыЗаменаКалендарныхГодов.ПодчиненныеЭлементы.СтраницаКалендарныеГодыЗаменены;
	Иначе 
		Элементы.СтраницыЗаменаКалендарныхГодов.ТекущаяСтраница = Элементы.СтраницыЗаменаКалендарныхГодов.ПодчиненныеЭлементы.СтраницаКалендарныеГодыНеЗаменены;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьТипДокументаОснования()
		
	ПустоеЗначение = ПрямыеВыплатыПособийСоциальногоСтрахования.ТипДокументаОснованияЗаявленияСотрудникаНаВыплатуПособия(Объект.ВидПособия);
	
	Если ТипЗнч(Объект.ДокументОснование) <> ТипЗнч(ПустоеЗначение) Тогда
		Объект.ДокументОснование = ПустоеЗначение;
	КонецЕсли;
	
	УстановитьСвязиПараметровВыбораДокументаОснования();
	УстановитьПараметрыВыбораДокументаОснования();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбораДокументаОснования()
	
	СвязиПараметровВыбораПервичногоДокумента = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		ЗначениеСвязиПоСотруднику = "Объект.Сотрудник";
		
		Если Объект.ВидПособия = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком") Тогда
			ЗначениеСвязиПоСотруднику = "Объект.ФизическоеЛицо";
		КонецЕсли;   
		
		СвязиПараметровВыбораПервичногоДокумента.Добавить(Новый СвязьПараметраВыбора("Отбор.Сотрудник", ЗначениеСвязиПоСотруднику));
	КонецЕсли;
	
	Элементы.ПервичныйДокумент.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбораПервичногоДокумента); 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораДокументаОснования()
	
	ПараметрыВыбораПервичногоДокумента = Новый Массив;
	
	Если НЕ Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		ПараметрыВыбораПервичногоДокумента.Добавить(Новый ПараметрВыбора("Отбор.ПособиеВыплачиваетсяФСС", Истина));
	КонецЕсли;   
	
	Элементы.ПервичныйДокумент.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПервичногоДокумента);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПолеРебенокЗаКоторымОсуществляетсяУход(Элементы, ВидПособия, ДокументОснование)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РебенокЗаКоторымОсуществляетсяУход", "Видимость", Ложь); 
	Элементы.РебенокЗаКоторымОсуществляетсяУход.СписокВыбора.Очистить(); 
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком 
		И ЗначениеЗаполнено(ДокументОснование) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РебенокЗаКоторымОсуществляетсяУход", "Видимость", Истина); 

		СписокДетей = ПрямыеВыплатыПособийСоциальногоСтрахования.СписокДетейПоУходуЗаКоторымиПредоставленОтпуск(ДокументОснование);
		
		Если СписокДетей.Количество() = 0 Тогда
			Подсказка = НСтр("ru = 'В документе не заполнены данные ни об одном ребенке.'");
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РебенокЗаКоторымОсуществляетсяУход", "Подсказка", Истина);
		Иначе 
			Для каждого Ребенок Из СписокДетей Цикл			
				Элементы.РебенокЗаКоторымОсуществляетсяУход.СписокВыбора.Добавить(Ребенок.Значение, Ребенок.Представление); 
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьДокументаОснования(Элементы, ВидПособия)
	
	ВидПособияИмеетДокументОснование = ПрямыеВыплатыПособийСоциальногоСтрахования.ВидПособияИмеетДокументОснование(ВидПособия);	
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПервичныйДокумент", "Доступность", ВидПособияИмеетДокументОснование); 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРасчетаСреднегоЗаработка(Элементы, ВидПособия)
	
	ДоступностьГруппыРасчетПособия = ВидПособия <> Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка
										И ВидПособия <> Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаРасчетПособия", "Видимость", ДоступностьГруппыРасчетПособия); 

КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
	
	ФиксацияВторичныхДанныхВДокументахФормы.ИнициализироватьМеханизмФиксацииРеквизитов(ЭтаФорма, ТекущийОбъект, ПараметрыФиксацииВторичныхДанных());
	ФиксацияВторичныхДанныхВДокументахФормы.ПодключитьОбработчикиФиксацииИзмененийРеквизитов(ЭтотОбъект, ФиксацияЭлементыОбработчикаЗафиксироватьИзменение());

	ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Ложь);	

	ОбновитьВторичныеДанныеДокумента(Истина, Истина, Истина, Истина);
	
	ФиксацияОбновитьФиксациюВФорме(); 
	
	ЗаполнитьДатуНаступленияСтраховогоСлучая();
	
	НастроитьФорму();
	
	ЗаполнитьРеестр();
	
	НастроитьФормуПоСтатусуДокумента();
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПервичныйДокументПриИзмененииНаСервере()
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("ДокументОснование");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Организация");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Сотрудник");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Банк");
	ОбновитьВторичныеДанныеДокумента(Истина, Истина, Истина, Истина);
	ЗаполнитьДатуНаступленияСтраховогоСлучая();
	ОпределитьПорядокРасчетаСреднегоЗаработка();
	УстановитьПодсказкуАдресам(ЭтаФорма, Объект);
	УстановитьТекущиеСтраницы();
	УстановитьВидимыеСтраницы();
	УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу(ЭтаФорма);
	ФиксацияОбновитьФиксациюВФорме();
	НастроитьПолеРебенокЗаКоторымОсуществляетсяУход(Элементы, Объект.ВидПособия, Объект.ДокументОснование);	
	УстановитьВидимостьПорядкаРасчетаСреднегоЗаработка();
	УстановитьВидимостьСчитатьПоПравилам2010Года();
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()
	УстановитьТекущиеСтраницы();
	УстановитьВидимыеСтраницы();
	УстановитьВидимостьГруппыЗаявитель(Элементы, Объект);
	НастроитьОтношениеКОсобойЗоне(Элементы, Объект);
	УстановитьТипДокументаОснования();
	УстановитьДоступностьДокументаОснования(Элементы, Объект.ВидПособия);
	УстановитьДоступностьРасчетаСреднегоЗаработка(Элементы, Объект.ВидПособия);
	УстановитьВидимостьДокументаНаПроживание(ЭтаФорма);
	УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу(ЭтаФорма);
	НастроитьПолеРебенокЗаКоторымОсуществляетсяУход(Элементы, Объект.ВидПособия, Объект.ДокументОснование);	
	УстановитьВидимостьПорядкаРасчетаСреднегоЗаработка();
	УстановитьВидимостьСчитатьПоПравилам2010Года();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере() 
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Организация");
	ОбновитьВторичныеДанныеДокумента(Ложь, Истина, Ложь, Ложь);
	УстановитьТипДокументаОснования();
	ФиксацияОбновитьФиксациюВФорме();
	УстановитьФункциональныеОпцииФормы();
КонецПроцедуры	

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Сотрудник");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Банк");
	ОбновитьВторичныеДанныеДокумента(Ложь, Ложь, Истина, Истина);
	УстановитьПодсказкуАдресам(ЭтаФорма, Объект);
	УстановитьТипДокументаОснования();
	ФиксацияОбновитьФиксациюВФорме();
	
	Документы.ЗаявлениеСотрудникаНаВыплатуПособия.ЗаполнитьНомерКартыМИР(Объект);
	КСчетуПривязанаКартаМИР = ЗначениеЗаполнено(Объект.НомерКартыМИР);
	ОбновитьВидимостьДоступность(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура БанкПриИзмененииНаСервере()
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Банк");
	ОбновитьВторичныеДанныеДокумента(Ложь, Ложь, Ложь, Истина);
	ФиксацияОбновитьФиксациюВФорме();
КонецПроцедуры

&НаСервере
Процедура ОтменитьВсеИсправленияНаСервере()
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("ДокументОснование");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Организация");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Сотрудник");
	ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения("Банк");
	ОбновитьВторичныеДанныеДокумента(Истина, Истина, Истина, Истина);
	УстановитьПодсказкуАдресам(ЭтаФорма, Объект);
	УстановитьТекущиеСтраницы();
	УстановитьВидимыеСтраницы();
	УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу(ЭтаФорма);
	ФиксацияОбновитьФиксациюВФорме();
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущиеСтраницы()
	УстановитьТекущуюСтраницуСправкаОНеполученииПособияЕжемесячноеПособие(Элементы, Объект.СправкаОНеполученииПособия);   
	УстановитьТекущуюСтраницуСправкаОНеполученииПособия(Элементы, Объект.СправкаОНеполученииПособия);
	УстановитьТекущуюСтраницуВыплатыПособий(Элементы, Объект.СпособВыплатыПособия);
	УстановитьТекущуюСтраницуПредоставляемыхДокументов(Элементы, Объект.ВидПособия);
	УстановитьТекущуюСтраницуРасчетСреднегоЗаработка(Элементы,Объект.ПорядокРасчетаСреднегоЗаработка);
	УстановитьТекущуюСтраницуПравилаРасчетаСреднего(Элементы, Объект.СчитатьПоПравилам2010Года);
	УстановитьТекущуюСтраницуЗаменаКалендарныхГодов(Элементы, Объект.ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка);
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимыеСтраницы()
	Элементы.СтраницаСведенияОПолучателеПособия.Видимость 			= Истина;
	Элементы.СтраницаВыплатаПособия.Видимость 						= Истина;
	Элементы.СтраницаДокументыПрилагаемыеДляНазначения.Видимость 	= Истина;
	Элементы.СтраницаСведенияОРаботодателе.Видимость 				= Истина;
	Элементы.СтраницаРасчетПособия.Видимость 						= Истина;
	Элементы.СведенияДляЭлектронногоРеестра.Видимость 				= Истина;
	
	Если Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		Элементы.СтраницаДокументыПрилагаемыеДляНазначения.Видимость 	= Ложь;
		Элементы.СтраницаРасчетПособия.Видимость 						= Ложь;
		Элементы.СведенияДляЭлектронногоРеестра.Видимость 				= Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьГруппыЗаявитель(Элементы, Объект);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаСведенияОЗаявителе", "Видимость", Объект.ПолучательНеЯвляетсяЗаявителем); 
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтношениеКОсобойЗоне(Элементы, Объект)
	Если Объект.ОтношениеКОсобойЗоне = ПредопределенноеЗначение("Перечисление.ОтношениеКОсобойЗоне.Нет") Тогда
		Объект.ВидОсобойЗоныПроживанияРаботы = ПредопределенноеЗначение("Перечисление.ВидыОсобойЗоныПроживанияРаботы.ПустаяСсылка");
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидОсобойЗоныПроживанияРаботы", "Доступность", Ложь); 
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.ВидОсобойЗоныПроживанияРаботы) Тогда
			Объект.ВидОсобойЗоныПроживанияРаботы = ПредопределенноеЗначение("Перечисление.ВидыОсобойЗоныПроживанияРаботы.ЗонаСПравомНаОтселение");
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидОсобойЗоныПроживанияРаботы", "Доступность", Истина); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоСтатусуДокумента()
	ЭтаФорма.ТолькоПросмотр = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбъектФормыЗафиксирован(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеестр()
	РеестрСтатус = ПрямыеВыплатыПособийСоциальногоСтрахования.РеестрПоЗаявлению(Объект.Ссылка);
	Если РеестрСтатус <> Неопределено Тогда
		Реестр = РеестрСтатус.Реестр;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Реестр", "Доступность", ЗначениеЗаполнено(Реестр)); 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуНаступленияСтраховогоСлучая()

	ДатаНаступленияСтраховогоСлучая = Документы.ЗаявлениеСотрудникаНаВыплатуПособия.ДатаНаступленияСтраховогоСлучая(Объект.ДокументОснование);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьВидимостьДоступность(Форма)
	Элементы = Форма.Элементы;
	Элементы.НомерКартыМИР.Доступность = Форма.КСчетуПривязанаКартаМИР;
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеАдресов()
	Если Не ПустаяСтрока(Объект.АдресПолучателяФактический) Тогда
		СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
		Объект.АдресПолучателяФактический,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица"));
		УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, ЭтаФорма.АдресПолучателяФактический);
	Иначе
		ЭтаФорма.АдресПолучателяФактический = НСтр("ru = '<Не заполнен>'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(Объект.АдресПолучателяРегистрации) Тогда
		СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
		Объект.АдресПолучателяРегистрации,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица"));
		УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, ЭтаФорма.АдресПолучателяРегистрации);
	Иначе
		ЭтаФорма.АдресПолучателяРегистрации = НСтр("ru = '<Не заполнен>'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(Объект.ТелефонПолучателя) Тогда
		СтруктураТелефона = РаботаСАдресами.ПредыдущаяСтруктураКонтактнойИнформацииXML(
		Объект.ТелефонПолучателя,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица"));
		ЭтаФорма.ТелефонПолучателя = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																					  СтруктураТелефона.КодГорода, 
																					  СтруктураТелефона.НомерТелефона, 
																					  СтруктураТелефона.Добавочный, 
																					  СтруктураТелефона.Комментарий);
	Иначе
		ЭтаФорма.ТелефонПолучателя = НСтр("ru = '<Не заполнен>'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(Объект.ТелефонУполномоченного) Тогда
		СтруктураТелефона = РаботаСАдресами.ПредыдущаяСтруктураКонтактнойИнформацииXML(
		Объект.ТелефонУполномоченного,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
		ЭтаФорма.ТелефонУполномоченного = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																					  СтруктураТелефона.КодГорода, 
																					  СтруктураТелефона.НомерТелефона, 
																					  СтруктураТелефона.Добавочный, 
																					  СтруктураТелефона.Комментарий);
	Иначе
		ЭтаФорма.ТелефонУполномоченного = НСтр("ru = '<Не заполнен>'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПодсказкуАдресам(Форма, Объект)
	УстановитьПодсказкуАдреса(Форма, Объект, "АдресПолучателяРегистрации");
	УстановитьПодсказкуАдреса(Форма, Объект, "АдресПолучателяФактический");
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПодсказкуАдреса(Форма, Объект, ИмяПоляАдрес)
	
	СообщениеОРезультатахПроверкиАдреса = ПрямыеВыплатыПособийСоциальногоСтрахованияКлиентСервер.СообщениеОРезультатахПроверкиАдреса(Объект[ИмяПоляАдрес]);
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(Форма, ИмяПоляАдрес, СообщениеОРезультатахПроверкиАдреса); 
	  
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДокументаНаПроживание(Форма)
	Видимость = ЗначениеЗаполнено(Форма.Объект.Гражданство) И Форма.Объект.Гражданство <> Справочники.СтраныМира.Россия;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ГруппаДокументНаПроживание", "Видимость", Видимость); 
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДанныхЕжемесячногоПособияПоУходу(Форма)
	
	Видимость = Форма.Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ГруппаПриказОЗаменеПослеродовогоОтпуска", "Видимость", Видимость); 
	
	Видимость = Форма.Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком
			Или Форма.Объект.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка;
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ГруппаСведенияОРебенкеДляРеестра", "Видимость", Видимость); 
			
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПорядкаРасчетаСреднегоЗаработка()
	Видимость = ДатаНаступленияСтраховогоСлучая <= УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаОтдельногоРасчетаПособийПоМатеринству()
		Или Объект.ПорядокРасчетаСреднегоЗаработка <> Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПорядокРасчетаСреднегоЗаработка", "Видимость", Видимость);
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСчитатьПоПравилам2010Года()
	Видимость = ДатаНаступленияСтраховогоСлучая < УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаОтдельногоРасчетаПособийПоМатеринству()
		Или Объект.СчитатьПоПравилам2010Года;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СчитатьПоПравилам2010Года", "Видимость", Видимость); 
КонецПроцедуры

&НаСервере
Процедура ОпределитьПорядокРасчетаСреднегоЗаработка()
	Если ДатаНаступленияСтраховогоСлучая > УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаОтдельногоРасчетаПособийПоМатеринству() Тогда
		Объект.ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок;
	КонецЕсли;
КонецПроцедуры

#Область МеханизмФиксацииИзменений

&НаСервере
Функция ПараметрыФиксацииВторичныхДанных() Экспорт
	
	ПараметрыФиксации = Документы.ЗаявлениеСотрудникаНаВыплатуПособия.ПараметрыФиксацииВторичныхДанных(РеквизитФормыВЗначение("Объект"));
	ПараметрыФиксации.Вставить("ОписаниеФормы", ФиксацияОписаниеФормы(ПараметрыФиксации));
	
	Возврат ПараметрыФиксации;
	
КонецФункции

&НаСервере
Функция ФиксацияОписаниеФормы(ПараметрыФиксацииВторичныхДанных) Экспорт
	
	ОписаниеФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеФормы();
	
	ОписаниеЭлементовФормы = Новый Соответствие();
	ОписаниеЭлементаФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеЭлементаФормы();
	
	ОписаниеЭлементаФормы.ПрефиксПути = "Объект";
	
	Для каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		ОписаниеЭлементовФормы.Вставить(ОписаниеФиксацииРеквизита.Ключ, ОписаниеЭлементаФормы);
	КонецЦикла;
	
	// Т.к. адреса редактируется через рек-т формы, укажем ему особые пути к данным.
	ПустоеОписаниеЭлементовФормы = Новый Соответствие();
	ПустоеОписаниеЭлементовФормы = ФиксацияВторичныхДанныхВДокументахФормы.ОписаниеЭлементаФормы();
	ОписаниеЭлементовФормы.Вставить("АдресПолучателяФактический", ПустоеОписаниеЭлементовФормы);
	ОписаниеЭлементовФормы.Вставить("АдресПолучателяРегистрации", ПустоеОписаниеЭлементовФормы);
	ОписаниеЭлементовФормы.Вставить("ТелефонПолучателя", ПустоеОписаниеЭлементовФормы);
	ОписаниеЭлементовФормы.Вставить("ТелефонУполномоченного", ПустоеОписаниеЭлементовФормы);
	
	ОписаниеФормы.Вставить("ОписаниеЭлементовФормы", ОписаниеЭлементовФормы);
	
	Возврат ОписаниеФормы;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ФиксацияЭлементыОбработчикаЗафиксироватьИзменение()
	
	ОписаниеЭлементов = Новый Соответствие;
	ОписаниеЭлементов.Вставить("ДатаПредставленияПакетаДокументов",	"ДатаПредставленияПакетаДокументов");
	ОписаниеЭлементов.Вставить("НаименованиеОрганизации",	"НаименованиеОрганизации");
	ОписаниеЭлементов.Вставить("ФИОУполномоченного",		"ФИОУполномоченного");
	ОписаниеЭлементов.Вставить("ДолжностьУполномоченного",	"ДолжностьУполномоченного");
	ОписаниеЭлементов.Вставить("ТелефонУполномоченного",	"ТелефонУполномоченного");
	ОписаниеЭлементов.Вставить("РайонныйКоэффициент",		"РайонныйКоэффициент");
	ОписаниеЭлементов.Вставить("СпособВыплатыПособия",		"СпособВыплатыПособия");
	ОписаниеЭлементов.Вставить("БИКБанка",					"БИКБанка");
	ОписаниеЭлементов.Вставить("НомерЛицевогоСчета",		"НомерЛицевогоСчета");
	ОписаниеЭлементов.Вставить("ФамилияПолучателя",			"ФамилияПолучателя");
	ОписаниеЭлементов.Вставить("ИмяПолучателя",				"ИмяПолучателя");
	ОписаниеЭлементов.Вставить("ОтчествоПолучателя",		"ОтчествоПолучателя");
	ОписаниеЭлементов.Вставить("АдресПолучателяФактический","АдресПолучателяФактический");
	ОписаниеЭлементов.Вставить("АдресПолучателяРегистрации","АдресПолучателяРегистрации");
	ОписаниеЭлементов.Вставить("ТелефонПолучателя",			"ТелефонПолучателя");
	ОписаниеЭлементов.Вставить("ДатаРожденияПолучателя",	"ДатаРожденияПолучателя");
	ОписаниеЭлементов.Вставить("ВидДокументаУдостоверяющегоЛичностьПолучателя",	"ВидДокументаУдостоверяющегоЛичностьПолучателя");
	ОписаниеЭлементов.Вставить("ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя","ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя");
	ОписаниеЭлементов.Вставить("ДатаДействияДокументаУдостоверяющегоЛичностьПолучателя","ДатаДействияДокументаУдостоверяющегоЛичностьПолучателя");
	ОписаниеЭлементов.Вставить("КемВыданДокументУдостоверяющийЛичностьПолучателя",			"КемВыданДокументУдостоверяющийЛичностьПолучателя");
	ОписаниеЭлементов.Вставить("ВидДокументаНаПроживание",	"ВидДокументаНаПроживание");
	ОписаниеЭлементов.Вставить("ДатаВыдачиДокументаНаПроживание",	"ДатаВыдачиДокументаНаПроживание");
	
	ОписаниеЭлементов.Вставить("НомерЛисткаНетрудоспособности","НомерЛисткаНетрудоспособности");
	ОписаниеЭлементов.Вставить("ДатаЛисткаНетрудоспособности","ДатаЛисткаНетрудоспособности");
	ОписаниеЭлементов.Вставить("НомерЛисткаНетрудоспособностиВставшимНаУчет","НомерЛисткаНетрудоспособности");
	ОписаниеЭлементов.Вставить("ДатаЛисткаНетрудоспособностиВставшимНаУчет","ДатаЛисткаНетрудоспособности");
	
	ОписаниеЭлементов.Вставить("ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности",			"ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	ОписаниеЭлементов.Вставить("НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности",	"НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	ОписаниеЭлементов.Вставить("ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременностиОтдельно",			"ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	ОписаниеЭлементов.Вставить("НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременностиОтдельно",	"НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности");
	
	ОписаниеЭлементов.Вставить("ДатаСвидетельстваОРождении",	"ДатаСвидетельстваОРождении");
	ОписаниеЭлементов.Вставить("СерияСвидетельстваОРождении",	"СерияСвидетельстваОРождении");
	ОписаниеЭлементов.Вставить("НомерСвидетельстваОРождении",	"НомерСвидетельстваОРождении");
	ОписаниеЭлементов.Вставить("ДатаСвидетельстваОРожденииЕжемесячноеПособие",	"ДатаСвидетельстваОРождении");
	ОписаниеЭлементов.Вставить("СерияСвидетельстваОРожденииЕжемесячноеПособие",	"СерияСвидетельстваОРождении");
	ОписаниеЭлементов.Вставить("НомерСвидетельстваОРожденииЕжемесячноеПособие",	"НомерСвидетельстваОРождении");
	
	ОписаниеЭлементов.Вставить("ДатаИногоДокументаПодтверждающегоРождение",	"ДатаИногоДокументаПодтверждающегоРождение");
	ОписаниеЭлементов.Вставить("НомерИногоДокументаПодтверждающегоРождение",	"НомерИногоДокументаПодтверждающегоРождение");
	ОписаниеЭлементов.Вставить("ДатаИногоДокументаПодтверждающегоРождениеЕжемесячноеПособие",	"ДатаИногоДокументаПодтверждающегоРождение");
	ОписаниеЭлементов.Вставить("НомерИногоДокументаПодтверждающегоРождениеЕжемесячноеПособие",	"НомерИногоДокументаПодтверждающегоРождение");
	
	ОписаниеЭлементов.Вставить("ДатаРешенияОбОпеке",	"ДатаРешенияОбОпеке");
	ОписаниеЭлементов.Вставить("НомерРешенияОбОпеке",	"НомерРешенияОбОпеке");
	ОписаниеЭлементов.Вставить("ДатаРешенияОбОпекеЕжемесячноеПособие",	"ДатаРешенияОбОпеке");
	ОписаниеЭлементов.Вставить("НомерРешенияОбОпекеЕжемесячноеПособие",	"НомерРешенияОбОпеке");
	
	ОписаниеЭлементов.Вставить("НаличиеОдногоИзДокументовНаПредыдущихДетей",	"НаличиеОдногоИзДокументовНаПредыдущихДетей");
	ОписаниеЭлементов.Вставить("НаличиеСвидетельстваОСмертиПредыдущихДетей",	"НаличиеСвидетельстваОСмертиПредыдущихДетей");
	ОписаниеЭлементов.Вставить("ТипЗанятостиРаботника",	"ТипЗанятостиРаботника");
	ОписаниеЭлементов.Вставить("ИННПолучателя",	"ИННПолучателя");
	ОписаниеЭлементов.Вставить("СНИЛСПолучателя",	"СНИЛСПолучателя");
	ОписаниеЭлементов.Вставить("СтатусНалогоплательщикаПолучателя",	"СтатусНалогоплательщикаПолучателя");
	ОписаниеЭлементов.Вставить("ДатаНачалаРасчетногоПериода",	"ДатаНачалаРасчетногоПериода");
	ОписаниеЭлементов.Вставить("ДатаОкончанияРасчетногоПериода",	"ДатаОкончанияРасчетногоПериода");
	ОписаниеЭлементов.Вставить("ЧислоКалендарныхДнейРасчетногоПериода",	"ЧислоКалендарныхДнейРасчетногоПериода");
	ОписаниеЭлементов.Вставить("НеполноеРабочееВремя",	"НеполноеРабочееВремя");
	ОписаниеЭлементов.Вставить("РазмерСтавки",	"РазмерСтавки");
	ОписаниеЭлементов.Вставить("ДолжностнойОклад",	"ДолжностнойОклад");
	ОписаниеЭлементов.Вставить("СреднийЗаработокЗаРасчетныйПериод",	"СреднийЗаработокЗаРасчетныйПериод");
	ОписаниеЭлементов.Вставить("ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком",	"ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком");
	ОписаниеЭлементов.Вставить("НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком",	"НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком");
	ОписаниеЭлементов.Вставить("ДатаНачалаОтпускаПоУходуЗаРебенком",	"ДатаНачалаОтпускаПоУходуЗаРебенком");
	ОписаниеЭлементов.Вставить("ДатаОкончанияОтпускаПоУходуЗаРебенком",	"ДатаОкончанияОтпускаПоУходуЗаРебенком");
	ОписаниеЭлементов.Вставить("ПервыйЗамененныйГод",	"ПервыйЗамененныйГод");
	ОписаниеЭлементов.Вставить("ПервыйРасчетныйГод",	"ПервыйРасчетныйГод");
	ОписаниеЭлементов.Вставить("ЗаработокПервыйГодРасчета",	"ЗаработокПервыйГодРасчета");
	ОписаниеЭлементов.Вставить("ПервыйРасчетныйГодБезЗамены",	"ПервыйРасчетныйГод");
	ОписаниеЭлементов.Вставить("ЗаработокПервыйГодРасчетаБезЗамены",	"ЗаработокПервыйГодРасчета");
	ОписаниеЭлементов.Вставить("ВторойЗамененныйГод",	"ВторойЗамененныйГод");
	ОписаниеЭлементов.Вставить("ВторойРасчетныйГод",	"ВторойРасчетныйГод");
	ОписаниеЭлементов.Вставить("ЗаработокВторойГодРасчета",	"ЗаработокВторойГодРасчета");
	ОписаниеЭлементов.Вставить("ВторойРасчетныйГодБезЗамены",	"ВторойРасчетныйГод");
	ОписаниеЭлементов.Вставить("ЗаработокВторойГодРасчетаБезЗамены",	"ЗаработокВторойГодРасчета");
	ОписаниеЭлементов.Вставить("НаименованиеТерриториальногоОрганаФСС",	"НаименованиеТерриториальногоОрганаФСС");
	ОписаниеЭлементов.Вставить("ФинансированиеФедеральнымБюджетом",	"ФинансированиеФедеральнымБюджетом");
	ОписаниеЭлементов.Вставить("Перерасчет",	"Перерасчет");
	ОписаниеЭлементов.Вставить("КодПричиныПерерасчета",	"КодПричиныПерерасчета");

	Возврат	ОписаниеЭлементов
КонецФункции

&НаСервере
Процедура ФиксацияОбновитьФиксациюВФорме()
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбновитьФорму(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ФиксацияЗафиксироватьИзменениеРеквизита(ИмяРеквизита, ТекущаяСтрока = 0)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗафиксироватьИзменениеРеквизита(ЭтаФорма, ИмяРеквизита, ТекущаяСтрока)
КонецПроцедуры

&НаСервере
Процедура ФиксацияСброситьФиксациюИзмененийПоОснованиюЗаполнения(ОснованиеЗаполнения, ТекущаяСтрока = 0)
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СброситьФиксациюИзмененийРеквизитовПоОснованиюЗаполнения(ЭтаФорма, ОснованиеЗаполнения, ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ФиксацияЗаполнитьРеквизитыФормыФикс(ТекущийОбъект)
	ФиксацияВторичныхДанныхВДокументахФормы.ЗаполнитьРеквизитыФормыФикс(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры	
     
&НаКлиентеНаСервереБезКонтекста
Процедура ФиксацияЗаполнитьИдентификаторыФиксТЧ(Форма);
	ОписанияТЧ = Форма["ПараметрыФиксацииВторичныхДанных"]["ОписанияТЧ"];
	Для каждого ОписаниеТЧ Из ОписанияТЧ Цикл
		ФиксацияВторичныхДанныхВДокументахКлиентСервер.ЗаполнитьИдентификаторыФиксТЧ(Форма.Объект[ОписаниеТЧ.Ключ]);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ФиксацияСохранитьРеквизитыФормыФикс(Форма, ТекущийОбъект)   
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.СохранитьРеквизитыФормыФикс(Форма, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Функция ФиксацияПодготовленныйДокумент()
	
	ФиксацияЗаполнитьИдентификаторыФиксТЧ(ЭтаФорма);
	ПодготовленныйДокумент = РеквизитФормыВЗначение("Объект");
	ФиксацияСохранитьРеквизитыФормыФикс(ЭтаФорма, ПодготовленныйДокумент);
	
	Возврат ПодготовленныйДокумент;
КонецФункции 

&НаСервере
Процедура ОбновитьВторичныеДанныеДокумента(ДанныеОснования, ДанныеОрганизации, ДанныеСотрудника, ДанныеБанка) Экспорт
	
	Если ФиксацияВторичныхДанныхВДокументахКлиентСервер.ОбъектФормыЗафиксирован(ЭтотОбъект) Тогда
		УстановитьПредставлениеАдресов();
		Возврат;
	КонецЕсли;
	
	СотрудникДоЗаполнения = Объект.Сотрудник;
	
	Документ = ФиксацияПодготовленныйДокумент();
	Если Документ.ОбновитьВторичныеДанныеДокумента(ДанныеОснования, ДанныеОрганизации, ДанныеСотрудника, ДанныеБанка) Тогда
		Если ТолькоПросмотр Или Не ПравоДоступа("Изменение", Документ.Метаданные()) Тогда
			ФиксацияВторичныхДанныхВДокументахФормы.ВывестиПредупреждениеОНаличииИзмененийВИсходныхДанныхКоторыеНельзяПрименить(ЭтотОбъект);
		Иначе
			Если НЕ Документ.ЭтоНовый() Тогда
				ФиксацияВторичныхДанныхВДокументахФормы.УстановитьМодифицированность(ЭтотОбъект, Истина);	
			КонецЕсли;
			ЗначениеВРеквизитФормы(Документ, "Объект");
		КонецЕсли;
	КонецЕсли;
	
	ФиксацияЗаполнитьРеквизитыФормыФикс(Объект);
	
	Если СотрудникДоЗаполнения <> Объект.Сотрудник Тогда
		Документы.ЗаявлениеСотрудникаНаВыплатуПособия.ЗаполнитьНомерКартыМИР(Объект);
		КСчетуПривязанаКартаМИР = ЗначениеЗаполнено(Объект.НомерКартыМИР);
		ОбновитьВидимостьДоступность(ЭтотОбъект);
	КонецЕсли;
	
	УстановитьПредставлениеАдресов();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(Элемент, СтандартнаяОбработка = Ложь) Экспорт
	ФиксацияВторичныхДанныхВДокументахКлиентСервер.Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме(ЭтаФорма, Элемент, ФиксацияЭлементыОбработчикаЗафиксироватьИзменение());
КонецПроцедуры

&НаСервере
Функция ОбъектЗафиксирован() Экспорт
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ДокументОбъект.ОбъектЗафиксирован();
КонецФункции	

&НаСервере
Процедура ФиксацияУстановитьОбъектЗафиксирован();
	 ФиксацияВторичныхДанныхВДокументахФормы.УстановитьОбъектЗафиксирован(ЭтаФорма);
КонецПроцедуры

#КонецОбласти  

&НаСервере
Процедура ОбработатьСообщенияПользователю() Экспорт
	
	Сообщения = ПолучитьСообщенияПользователю(Ложь);
	
	Для Каждого Сообщение Из Сообщения Цикл
		Если СтрНайти(Сообщение.Поле, "АдресПолучателяФактический") Тогда
			Сообщение.Поле = "";
			Сообщение.ПутьКДанным = "АдресПолучателяФактический";
		КонецЕсли;
		Если СтрНайти(Сообщение.Поле, "АдресПолучателяРегистрации") Тогда
			Сообщение.Поле = "";
			Сообщение.ПутьКДанным = "АдресПолучателяРегистрации";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
