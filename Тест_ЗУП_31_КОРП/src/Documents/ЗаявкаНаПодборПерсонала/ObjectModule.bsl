
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ПрофилиДолжностей") Тогда
		ЗаполнитьПоПрофилюДолжности(ДанныеЗаполнения);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ПланируемаяДатаЗакрытия, "Объект.ПланируемаяДатаЗакрытия", Отказ, НСтр("ru='Дата закрытия'"), , , Ложь);
	
	Если Не ПолучитьФункциональнуюОпцию("НеИспользоватьШтатноеРасписание") Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Должность");
	КонецЕсли;
	
	Если НазначениеНабора = ПредопределенноеЗначение("Перечисление.НазначениеНабораПерсоналаНаВакансию.ДолжностьПодразделение") Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Должность");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Позиция");
	КонецЕсли;
	
	Если Не СоответствуетПрофилюДолжности Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПрофильДолжности");
			
		Если ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронноеИнтервью") Тогда
			ПроверяемыеРеквизиты.Добавить("ДействияСотрудников");
		Иначе
			ПроверяемыеРеквизиты.Добавить("Требования");
			ПроверяемыеРеквизиты.Добавить("Обязанности");
			ПроверяемыеРеквизиты.Добавить("Условия");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим, нет ли зарегистрированных вакансий с параметрами заявки
	Если Справочники.Вакансии.ЕстьДругиеВакансииПоКомбинацииДолжностьПодразделение(Должность, Подразделение, Ссылка) Тогда
		ВызватьИсключение НСтр("ru = 'Существует вакансия с аналогичными должностью и подразделением.'");
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда 
		Состояние = Перечисления.СостоянияСогласования.Рассматривается;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадрыРасширенный.ОграниченияРегистрацииПоОрганизацииИПодразделению(ЭтотОбъект, , Подразделение, Позиция);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоПрофилюДолжности(Профиль)
	
	ЭтотОбъект.ПрофильДолжности = Профиль;
	
	ДанныеПрофиля = Справочники.ПрофилиДолжностей.ДанныеПрофиляДолжности(Профиль);
	
	// Попробуем подобрать позицию штатного расписания, если штатное расписание используется.
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		// Штатное расписание не используется, заполняем независимо от позиции подразделение и должность.
		ЭтотОбъект.Подразделение = ДанныеПрофиля.Подразделение;
	Иначе
		ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПозицииШтатногоРасписания.Ссылка,
			|	ПозицииШтатногоРасписания.Приоритет
			|ИЗ
			|	(ВЫБРАТЬ
			|		ШтатноеРасписание.Ссылка КАК Ссылка,
			|		1 КАК Приоритет
			|	ИЗ
			|		Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестоПозицииШтатногоРасписанияВСтруктуреПредприятия КАК МестоПозиции
			|			ПО (МестоПозиции.Позиция = ШтатноеРасписание.Ссылка)
			|				И (МестоПозиции.Подразделение = &Подразделение)
			|				И (ШтатноеРасписание.Должность = &Должность)
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ШтатноеРасписание.Ссылка,
			|		2
			|	ИЗ
			|		Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|	ГДЕ
			|		ШтатноеРасписание.Должность = &Должность) КАК ПозицииШтатногоРасписания
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПозицииШтатногоРасписания.Приоритет";

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Должность", ДанныеПрофиля.Должность);
		Запрос.УстановитьПараметр("Подразделение", ДанныеПрофиля.Подразделение);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьПоПозицииШтатногоРасписания(Выборка.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронноеИнтервью") Тогда
		
		ЭтотОбъект.ХарактеристикиПерсонала.Очистить();
		Для каждого ТекущаяСтрока Из ДанныеПрофиля.ХарактеристикиПерсонала Цикл
			ЗаполнитьЗначенияСвойств(ЭтотОбъект.ХарактеристикиПерсонала.Добавить(), ТекущаяСтрока);
		КонецЦикла;
		
		ЭтотОбъект.ДействияСотрудников.Очистить();
		Для каждого ТекущаяСтрока Из ДанныеПрофиля.ДействияСотрудников Цикл
			ЗаполнитьЗначенияСвойств(ЭтотОбъект.ДействияСотрудников.Добавить(), ТекущаяСтрока);
		КонецЦикла;
		
	КонецЕсли;
	ЭтотОбъект.Требования = ДанныеПрофиля.Требования;
	ЭтотОбъект.Обязанности = ДанныеПрофиля.Обязанности;
	
	ЭтотОбъект.Условия = ДанныеПрофиля.Условия;
	
КонецПроцедуры

Процедура ЗаполнитьПоПозицииШтатногоРасписания(ПозицияШтатногоРасписания)
	
	ЭтотОбъект.Позиция = ПозицияШтатногоРасписания;
	
	ДанныеПозиции = Справочники.ШтатноеРасписание.ДанныеПозицииШтатногоРасписания(ПозицияШтатногоРасписания);
	
	ЭтотОбъект.Подразделение = ДанныеПозиции.МестоВСтруктуреПредприятия;
	ЭтотОбъект.ПредполагаемыйДоход = ДанныеПозиции.ФОТ;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли