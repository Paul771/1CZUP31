#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	МассивСотрудников = Сотрудники.Выгрузить(, "Сотрудник").ВыгрузитьКолонку("Сотрудник");
	МассивФизическихЛиц = Новый Массив;
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСотрудников, "ФизическоеЛицо");
	Для каждого ЭлементСоответствия Из ФизическиеЛицаСотрудников Цикл
		Если МассивФизическихЛиц.Найти(ЭлементСоответствия.Значение) = Неопределено Тогда
			МассивФизическихЛиц.Добавить(ЭлементСоответствия.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураИменТаблиц = МедицинскоеСтрахованиеФормы.СтруктураИменТаблиц();
	СтруктураИменТаблиц.ИмяТаблицыСотрудники = "Сотрудники";
	СтруктураИменТаблиц.ИмяТаблицыСведенийСотрудников = "СведенияСотрудников";
	СтруктураИменТаблиц.ИмяТаблицыПрограммыСтрахованияСотрудников = "ПрограммыСтрахованияСотрудников";
	СтруктураИменТаблиц.ИмяТаблицыРасширенийПрограммСтрахованияСотрудников = "РасширенияПрограммСтрахованияСотрудников";
	СтруктураИменТаблиц.ИмяТаблицыРодственники = "Родственники";
	СтруктураИменТаблиц.ИмяТаблицыСведенийРодственников = "СведенияРодственников";
	СтруктураИменТаблиц.ИмяТаблицыПрограммыСтрахованияРодственников = "ПрограммыСтрахованияРодственников";
	СтруктураИменТаблиц.ИмяТаблицыРасширенийПрограммСтрахованияРодственников = "РасширенияПрограммСтрахованияРодственников";
	
	Для каждого ЗначениеСтруктуры Из СтруктураИменТаблиц Цикл
		СтрокиДляУдаления = Новый Массив;
		Для Каждого СтрокаТаблицы Из ЭтотОбъект[ЗначениеСтруктуры.Значение] Цикл
			Если СтрНайти(ЗначениеСтруктуры.Ключ, "Сотрудник") > 0 Тогда
				Если МассивСотрудников.Найти(СтрокаТаблицы.Сотрудник) = Неопределено Тогда
					СтрокиДляУдаления.Добавить(СтрокаТаблицы);
				КонецЕсли;
			Иначе
				Если МассивФизическихЛиц.Найти(СтрокаТаблицы.ФизическоеЛицо) = Неопределено Тогда
					СтрокиДляУдаления.Добавить(СтрокаТаблицы);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
			ЭтотОбъект[ЗначениеСтруктуры.Значение].Удалить(СтрокаДляУдаления);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ОтражениеЗарплатыВБухучетеРасширенный.УточнитьСоставПроверяемыхРеквизитовБухучетПлановыхУдержаний(ЭтотОбъект, ПроверяемыеРеквизиты);
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаСтрахования, "Объект.ДатаНачала", Отказ, НСтр("ru='Дата начала события'"), , , Ложь);
	
	УникальныеЗначения = Новый Соответствие;
	ИндексСтроки = 0;
	Для Каждого ДанныеФизическогоЛица Из Сотрудники Цикл
		Если УникальныеЗначения[ДанныеФизическогоЛица.Сотрудник] = Неопределено Тогда
			УникальныеЗначения.Вставить(ДанныеФизическогоЛица.Сотрудник, Истина);
		Иначе
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Информация о сотруднике %1 была введена в документе ранее.'"), ДанныеФизическогоЛица.Сотрудник);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, "Объект.Удержания[" + Формат(ИндексСтроки, "ЧН=0; ЧГ=0") + "].Сотрудник", ,Отказ);
		КонецЕсли;
		ИндексСтроки = ИндексСтроки + 1;
	КонецЦикла;
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 		= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода		= ДатаНачалаСтрахования;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода	= ДатаОкончанияСтрахования;
	
	КадровыйУчет.ПроверитьРаботающихСотрудников(
		ОбщегоНазначения.ВыгрузитьКолонку(Сотрудники, "Сотрудник"),
		ПараметрыПолученияСотрудниковОрганизаций,
		Отказ,
		Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "Сотрудник", "Объект"));
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПрочиеУдержанияВПользуТретьихЛиц") Тогда
		НайденныйРеквизит = ПроверяемыеРеквизиты.Найти("Удержание");
		Если НайденныйРеквизит <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(НайденныйРеквизит);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДокумента = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДокумента);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДокумента, Организация);
	
	// Проведение документа
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = РасчетЗарплатыРасширенный.СоздатьДанныеДляРегистрацииПлановыхУдержаний();
	ЗаполнитьДанныеДляРегистрацииПлановыхУдержанийСпискаСотрудников(ДанныеДляПроведения, Ссылка);
	ЗаполнитьПредельныеСуммыУдержанийСотрудников(ДанныеДляПроведения);
	
	ДвиженияУдержаний = Новый Структура;
	ДвиженияУдержаний.Вставить("ДанныеПлановыхУдержаний", ДанныеДляПроведения.ДанныеПлановыхУдержаний);
	ДвиженияУдержаний.Вставить("ЗначенияПоказателей", ДанныеДляПроведения.ЗначенияПоказателей);
	ДвиженияУдержаний.Вставить("РабочиеМестаУдержаний", ДанныеДляПроведения.РабочиеМестаУдержаний);
	
	РасчетЗарплатыРасширенный.СформироватьДвиженияПлановыхУдержаний(Движения, ДвиженияУдержаний);
	РасчетЗарплатыРасширенный.СформироватьДвиженияПредельныхСуммУдержанийСотрудников(Движения, ДанныеДляПроведения.ПредельныеСуммыУдержанийСотрудников);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") И БухучетЗаданВДокументе Тогда
		БухучетПлановыхУдержаний = ОтражениеЗарплатыВБухучетеРасширенный.ДанныеДляРегистрацииБухучетаПлановыхУдержаний(Ссылка);
		ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетПлановыхУдержаний(Движения, БухучетПлановыхУдержаний);
	КонецЕсли;
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетов(Движения, ДанныеДокумента, Организация);
	КонецЕсли;
	
	СформироватьДвиженияПрикрепленияКПрограммамСтрахования(Движения, ДанныеДокумента);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетовПриОтменеПроведения(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("Сотрудники", "Сотрудник"));
	
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИСотрудникам(ЭтотОбъект, Организация, МассивПараметров, Дата);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьВТДанныеДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Сотрудник КАК Сотрудник,
	|	ТаблицаДокумента.ДатаНачала КАК ПериодДействия,
	|	ТаблицаДокумента.Ссылка КАК ДокументОснование
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Сотрудники КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка.Организация,
	|	ТаблицаДокумента.Сотрудник,
	|	ТаблицаДокумента.Ссылка.ДатаОкончанияСтрахования,
	|	ТаблицаДокумента.Ссылка
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Сотрудники КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Регистратор
	|	И ТаблицаДокумента.Ссылка.ДатаОкончанияСтрахования <> ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ПрикреплениеСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	"""" КАК Родственник,
	|	ПрикреплениеПрограммыСтрахованияСотрудников.ПрограммаСтрахования КАК ПрограммаСтрахования,
	|	ИСТИНА КАК Действует,
	|	ПрикреплениеСотрудники.ДатаНачала КАК Период,
	|	ТаблицаДокумента.ДатаОкончанияСтрахования КАК ДействуетДо,
	|	ПрикреплениеПрограммыСтрахованияСотрудников.СтраховаяПремия КАК СтраховаяПремия
	|ПОМЕСТИТЬ ВТСуммыСтраховыхПремийПрограммСтрахования
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.ПрограммыСтрахованияСотрудников КАК ПрикреплениеПрограммыСтрахованияСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Сотрудники КАК ПрикреплениеСотрудники
	|		ПО ПрикреплениеПрограммыСтрахованияСотрудников.Ссылка = ПрикреплениеСотрудники.Ссылка
	|			И ПрикреплениеПрограммыСтрахованияСотрудников.Сотрудник = ПрикреплениеСотрудники.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования КАК ТаблицаДокумента
	|		ПО ПрикреплениеПрограммыСтрахованияСотрудников.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация,
	|	ПрикреплениеРодственники.ФизическоеЛицо,
	|	ПрикреплениеРодственники.Родственник,
	|	ПрикреплениеПрограммыСтрахованияРодственников.ПрограммаСтрахования,
	|	ИСТИНА,
	|	ПрикреплениеРодственники.ДатаНачала,
	|	ПрикреплениеРодственники.ДатаОкончания,
	|	ПрикреплениеПрограммыСтрахованияРодственников.СтраховаяПремия
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.ПрограммыСтрахованияРодственников КАК ПрикреплениеПрограммыСтрахованияРодственников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Родственники КАК ПрикреплениеРодственники
	|		ПО ПрикреплениеПрограммыСтрахованияРодственников.Ссылка = ПрикреплениеРодственники.Ссылка
	|			И ПрикреплениеПрограммыСтрахованияРодственников.Родственник = ПрикреплениеРодственники.Родственник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования КАК ТаблицаДокумента
	|		ПО ПрикреплениеПрограммыСтрахованияРодственников.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ПрикреплениеСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	"""" КАК Родственник,
	|	ПрикреплениеРасширенияПрограммСтрахованияСотрудников.РасширениеСтрахования КАК РасширениеПрограммСтрахования,
	|	ИСТИНА КАК Действует,
	|	ПрикреплениеСотрудники.ДатаНачала КАК Период,
	|	ТаблицаДокумента.ДатаОкончанияСтрахования КАК ДействуетДо,
	|	ПрикреплениеРасширенияПрограммСтрахованияСотрудников.СтраховаяПремия КАК СтраховаяПремия
	|ПОМЕСТИТЬ ВТСуммыСтраховыхПремийРасширенийПрограммСтрахования
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.РасширенияПрограммСтрахованияСотрудников КАК ПрикреплениеРасширенияПрограммСтрахованияСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Сотрудники КАК ПрикреплениеСотрудники
	|		ПО ПрикреплениеРасширенияПрограммСтрахованияСотрудников.Ссылка = ПрикреплениеСотрудники.Ссылка
	|			И ПрикреплениеРасширенияПрограммСтрахованияСотрудников.Сотрудник = ПрикреплениеСотрудники.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования КАК ТаблицаДокумента
	|		ПО ПрикреплениеРасширенияПрограммСтрахованияСотрудников.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация,
	|	ПрикреплениеРодственники.ФизическоеЛицо,
	|	ПрикреплениеРодственники.Родственник,
	|	ПрикреплениеРасширенияПрограммСтрахованияРодственников.РасширениеСтрахования,
	|	ИСТИНА,
	|	ПрикреплениеРодственники.ДатаНачала,
	|	ПрикреплениеРодственники.ДатаОкончания,
	|	ПрикреплениеРасширенияПрограммСтрахованияРодственников.СтраховаяПремия
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.РасширенияПрограммСтрахованияРодственников КАК ПрикреплениеРасширенияПрограммСтрахованияРодственников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Родственники КАК ПрикреплениеРодственники
	|		ПО ПрикреплениеРасширенияПрограммСтрахованияРодственников.Ссылка = ПрикреплениеРодственники.Ссылка
	|			И ПрикреплениеРасширенияПрограммСтрахованияРодственников.Родственник = ПрикреплениеРодственники.Родственник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования КАК ТаблицаДокумента
	|		ПО ПрикреплениеРасширенияПрограммСтрахованияРодственников.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Регистратор";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьПредельныеСуммыУдержанийСотрудников(ДанныеДляПроведения)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрикреплениеКПрограммамМедицинскогоСтрахованияСотрудники.ДатаНачала КАК Период,
	|	ПрикреплениеКПрограммамМедицинскогоСтрахования.Организация.ГоловнаяОрганизация КАК Организация,
	|	ПрикреплениеКПрограммамМедицинскогоСтрахованияСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПрикреплениеКПрограммамМедицинскогоСтрахования.Удержание КАК Удержание,
	|	ПрикреплениеКПрограммамМедицинскогоСтрахованияСотрудники.Ссылка КАК ДокументОснование,
	|	ИСТИНА КАК ПрекратитьПоДостижениюПредела,
	|	ПрикреплениеКПрограммамМедицинскогоСтрахованияСотрудники.СуммаПредела КАК Сумма
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Сотрудники КАК ПрикреплениеКПрограммамМедицинскогоСтрахованияСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования КАК ПрикреплениеКПрограммамМедицинскогоСтрахования
	|		ПО ПрикреплениеКПрограммамМедицинскогоСтрахованияСотрудники.Ссылка = ПрикреплениеКПрограммамМедицинскогоСтрахования.Ссылка
	|ГДЕ
	|	ПрикреплениеКПрограммамМедицинскогоСтрахованияСотрудники.Ссылка = &Ссылка
	|	И ПрикреплениеКПрограммамМедицинскогоСтрахованияСотрудники.СуммаПредела <> 0";
	
	ДанныеДляПроведения.ПредельныеСуммыУдержанийСотрудников = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// Заполняет данные для проведения плановых удержаний для многосотрудникового документа.
//
// Параметры:
//		ДанныеДляПроведения - Структура, описанная в СоздатьДанныеДляРегистрацииПлановыхУдержаний.
//		Документ - Ссылка на документ.
//
Процедура ЗаполнитьДанныеДляРегистрацииПлановыхУдержанийСпискаСотрудников(ДанныеДляПроведения, Документ) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументУдержания.ДатаНачала КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументУдержания.Ссылка.ДатаОкончанияСтрахования > ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ДокументУдержания.Ссылка.ДатаОкончанияСтрахования, ДЕНЬ, 1)
	|		ИНАЧЕ ДокументУдержания.Ссылка.ДатаОкончанияСтрахования
	|	КОНЕЦ КАК ДействуетДо,
	|	ДокументУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДокументУдержания.Ссылка.Организация.ГоловнаяОрганизация КАК Организация,
	|	ДокументУдержания.Ссылка.Удержание КАК Удержание,
	|	ДокументУдержания.Ссылка КАК ДокументОснование,
	|	ДокументУдержания.СуммаУдержания КАК Размер,
	|	ИСТИНА КАК Используется
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Сотрудники КАК ДокументУдержания
	|ГДЕ
	|	ДокументУдержания.Ссылка = &Документ
	|	И ДокументУдержания.СуммаУдержания <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументУдержания.ДатаНачала КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументУдержания.Ссылка.ДатаОкончанияСтрахования > ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ДокументУдержания.Ссылка.ДатаОкончанияСтрахования, ДЕНЬ, 1)
	|		ИНАЧЕ ДокументУдержания.Ссылка.ДатаОкончанияСтрахования
	|	КОНЕЦ КАК ДействуетДо,
	|	ДокументУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДокументУдержания.Ссылка.Организация.ГоловнаяОрганизация КАК Организация,
	|	ДокументУдержания.Ссылка КАК ДокументОснование,
	|	ЗначенияПоказателей.Показатель КАК Показатель,
	|	ЗначенияПоказателей.Значение КАК Значение
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Сотрудники КАК ДокументУдержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Показатели КАК ЗначенияПоказателей
	|		ПО (ЗначенияПоказателей.Ссылка = ДокументУдержания.Ссылка)
	|			И (ЗначенияПоказателей.ИдентификаторСтрокиВидаРасчета = ДокументУдержания.ИдентификаторСтрокиВидаРасчета)
	|			И (ДокументУдержания.Ссылка = &Документ)
	|ГДЕ
	|	ДокументУдержания.СуммаУдержания <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументУдержания.ДатаНачала КАК Период,
	|	ДокументУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДокументУдержания.Ссылка КАК ДокументОснование,
	|	ДокументУдержания.Сотрудник КАК РабочееМесто
	|ИЗ
	|	Документ.ПрикреплениеКПрограммамМедицинскогоСтрахования.Сотрудники КАК ДокументУдержания
	|ГДЕ
	|	ДокументУдержания.Ссылка = &Документ
	|	И ДокументУдержания.СуммаУдержания <> 0";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("ПустойДокументОснование", Документы.ПрикреплениеКПрограммамМедицинскогоСтрахования.ПустаяСсылка());
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляПроведения.ДанныеПлановыхУдержаний = РезультатыЗапроса[0].Выгрузить();
	ДанныеДляПроведения.ЗначенияПоказателей = РезультатыЗапроса[1].Выгрузить();
	ДанныеДляПроведения.РабочиеМестаУдержаний = РезультатыЗапроса[2].Выгрузить();
	
КонецПроцедуры

Процедура СформироватьДвиженияПрикрепленияКПрограммамСтрахования(Движения, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СуммыСтраховыхПремийПрограммСтрахования.Период КАК Период,
	|	СуммыСтраховыхПремийПрограммСтрахования.Организация КАК Организация,
	|	СуммыСтраховыхПремийПрограммСтрахования.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СуммыСтраховыхПремийПрограммСтрахования.Родственник КАК Родственник,
	|	СуммыСтраховыхПремийПрограммСтрахования.ПрограммаСтрахования КАК ПрограммаСтрахования,
	|	СуммыСтраховыхПремийПрограммСтрахования.Действует КАК Действует,
	|	СуммыСтраховыхПремийПрограммСтрахования.ДействуетДо КАК ДействуетДо,
	|	СуммыСтраховыхПремийПрограммСтрахования.СтраховаяПремия КАК СтраховаяПремия
	|ИЗ
	|	ВТСуммыСтраховыхПремийПрограммСтрахования КАК СуммыСтраховыхПремийПрограммСтрахования";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Движения.ПрограммыМедицинскогоСтрахованияСотрудников.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Движения.ПрограммыМедицинскогоСтрахованияСотрудников.Записывать = Истина;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СуммыСтраховыхПремийРасширенийПрограммСтрахования.Период КАК Период,
	|	СуммыСтраховыхПремийРасширенийПрограммСтрахования.Организация КАК Организация,
	|	СуммыСтраховыхПремийРасширенийПрограммСтрахования.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СуммыСтраховыхПремийРасширенийПрограммСтрахования.Родственник КАК Родственник,
	|	СуммыСтраховыхПремийРасширенийПрограммСтрахования.РасширениеПрограммСтрахования КАК РасширениеПрограммСтрахования,
	|	СуммыСтраховыхПремийРасширенийПрограммСтрахования.Действует КАК Действует,
	|	СуммыСтраховыхПремийРасширенийПрограммСтрахования.ДействуетДо КАК ДействуетДо,
	|	СуммыСтраховыхПремийРасширенийПрограммСтрахования.СтраховаяПремия КАК СтраховаяПремия
	|ИЗ
	|	ВТСуммыСтраховыхПремийРасширенийПрограммСтрахования КАК СуммыСтраховыхПремийРасширенийПрограммСтрахования";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Движения.РасширенияПрограммМедицинскогоСтрахованияСотрудников.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Движения.РасширенияПрограммМедицинскогоСтрахованияСотрудников.Записывать = Истина;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
