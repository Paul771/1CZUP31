
#Область ОписаниеПеременных

&НаКлиенте
Перем СтарыеЗначенияКонтролируемыхПолей;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, ПредыдущийМесяц", "Объект.Организация", "Объект.Ответственный", "Объект.МесяцНачисления");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Модифицированность);
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Направление, Модифицированность);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцНачисленияПриИзменении", 0.3, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
    ЗарплатаКадрыРасширенныйКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУдержания

&НаКлиенте
Процедура УдержанияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаПодбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура УдержанияРезультатПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Удержания.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Результат = Мин(ТекущиеДанные.Результат, ТекущиеДанные.Рассчитано);
	Если ЗначениеЗаполнено(ТекущиеДанные.Удержание) Тогда
		ИнформацияОбУдержании = ЗарплатаКадрыРасширенныйКлиентПовтИсп.ПолучитьИнформациюОВидеРасчета(ТекущиеДанные.Удержание);
		Если ИнформацияОбУдержании.ЯвляетсяВзысканием Тогда 
			ТекущиеДанные.Задолженность = ТекущиеДанные.Рассчитано - ТекущиеДанные.Результат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьДокументНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ОчиститьДокументНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	Отбор = Новый Структура;
	Отбор.Вставить("МесяцПримененияОтбора", Объект.МесяцНачисления);
	Отбор.Вставить("ВАрхиве", Ложь);
		
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", Отбор);
	
	КадровыйУчетКлиент.ВыбратьФизическихЛицОрганизации(Элементы.Удержания, Объект.Организация, Истина, , АдресСпискаПодобранныхСотрудников(), , ПараметрыОткрытия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой");
	
	// Создание элементов.
	ЗарплатаКадрыРасширенный.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтаФорма);
	ЗарплатаКадрыРасширенныйКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументНаСервере()
	
	ОчиститьДокумент();
	ЗаполнитьДокумент();
	ЗарплатаКадрыРасширенныйКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокумент(ФизическиеЛица = Неопределено)
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИсключаемыеСотрудники = Обработки.МенеджерРасчетаЗарплаты.ИсключаемыеИзРасчетаВзысканийСотрудники(Объект.Организация, Объект.МесяцНачисления, ФизическиеЛица);
	
	Запрос.УстановитьПараметр("МесяцНачисления", Объект.МесяцНачисления);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидыНачислений", ВидыНачисленийЗаработнойПлаты());
	Запрос.УстановитьПараметр("ВидыНДФЛ", ВидыНДФЛДополненияРасчетнойБазыУдержаний());
	Запрос.УстановитьПараметр("ИсключаемыеСотрудники", ИсключаемыеСотрудники);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачисленияУдержания.Подразделение КАК Подразделение,
	               |	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	               |	НачисленияУдержания.СтатьяФинансирования КАК СтатьяФинансирования,
	               |	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
	               |	НачисленияУдержания.ДокументОснование КАК ДокументОснование,
	               |	НачисленияУдержания.Сумма КАК Сумма,
	               |	НачисленияУдержания.ДатаНачала КАК ДатаНачала,
	               |	НачисленияУдержания.ДатаОкончания КАК ДатаОкончания,
	               |	НачисленияУдержания.Контрагент КАК Контрагент,
	               |	Удержания.ЯвляетсяВзысканием КАК ЯвляетсяВзысканием,
	               |	Удержания.КатегорияУдержания КАК КатегорияУдержания
	               |ПОМЕСТИТЬ ВТУдержанияПоФизическимЛицам
	               |ИЗ
	               |	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	               |		ПО НачисленияУдержания.НачислениеУдержание = Удержания.Ссылка
	               |			И (НачисленияУдержания.Период = &МесяцНачисления)
	               |			И (НачисленияУдержания.Организация = &Организация)
	               |			И (НачисленияУдержания.Регистратор <> &Ссылка)
	               |			И (НЕ НачисленияУдержания.Сотрудник В (&ИсключаемыеСотрудники))
				   |			И (Удержания.ЯвляетсяВзысканием
	               |				ИЛИ Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента))
	               |			И (&УсловиеФизическиеЛица)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УдержанияПоФизическимЛицам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	УдержанияПоФизическимЛицам.Подразделение КАК Подразделение,
	               |	УдержанияПоФизическимЛицам.НачислениеУдержание КАК НачислениеУдержание,
	               |	УдержанияПоФизическимЛицам.СтатьяФинансирования КАК СтатьяФинансирования,
	               |	УдержанияПоФизическимЛицам.СтатьяРасходов КАК СтатьяРасходов,
	               |	УдержанияПоФизическимЛицам.ДокументОснование КАК ДокументОснование,
	               |	УдержанияПоФизическимЛицам.Сумма КАК Сумма,
	               |	УдержанияПоФизическимЛицам.ДатаНачала КАК ДатаНачала,
	               |	УдержанияПоФизическимЛицам.ДатаОкончания КАК ДатаОкончания,
	               |	УдержанияПоФизическимЛицам.Контрагент КАК Контрагент
	               |ПОМЕСТИТЬ ВТИсполнительныеЛисты
	               |ИЗ
	               |	ВТУдержанияПоФизическимЛицам КАК УдержанияПоФизическимЛицам
	               |ГДЕ
	               |	УдержанияПоФизическимЛицам.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ИсполнительныеЛисты.ДатаНачала КАК Период,
	               |	ИсполнительныеЛисты.ДокументОснование КАК ИсполнительныйДокумент
	               |ПОМЕСТИТЬ ВТИсполнительныеЛистыПериоды
	               |ИЗ
	               |	ВТИсполнительныеЛисты КАК ИсполнительныеЛисты";
	
	Если ФизическиеЛица = Неопределено Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическиеЛица", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическиеЛица", "НачисленияУдержания.ФизическоеЛицо В (&ФизическиеЛица)");
	КонецЕсли;
	
	Запрос.Выполнить();			   
				   
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТИсполнительныеЛистыПериоды","Период,ИсполнительныйДокумент");
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних("УсловияУдержанияПоИсполнительномуДокументу", Запрос.МенеджерВременныхТаблиц, Истина, ОписаниеФильтра);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	УдержанияПоФизическимЛицам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	УдержанияПоФизическимЛицам.Подразделение КАК Подразделение,
	               |	УдержанияПоФизическимЛицам.НачислениеУдержание КАК Удержание,
	               |	УдержанияПоФизическимЛицам.СтатьяФинансирования КАК СтатьяФинансирования,
	               |	УдержанияПоФизическимЛицам.СтатьяРасходов КАК СтатьяРасходов,
	               |	УдержанияПоФизическимЛицам.ДокументОснование КАК ДокументОснование,
	               |	УдержанияПоФизическимЛицам.Сумма КАК Сумма,
	               |	УдержанияПоФизическимЛицам.ДатаНачала КАК ДатаНачала,
	               |	УдержанияПоФизическимЛицам.ДатаОкончания КАК ДатаОкончания,
	               |	УсловияУдержанияПоИсполнительномуДокументу.Получатель КАК Получатель,
	               |	УсловияУдержанияПоИсполнительномуДокументу.ПлатежныйАгент КАК ПлатежныйАгент
	               |ПОМЕСТИТЬ ВТУдержанияПлатежныхАгентов
	               |ИЗ
	               |	ВТУдержанияПоФизическимЛицам КАК УдержанияПоФизическимЛицам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУсловияУдержанияПоИсполнительномуДокументуСрезПоследних КАК УсловияУдержанияПоИсполнительномуДокументу
	               |		ПО УдержанияПоФизическимЛицам.ДокументОснование = УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент
	               |			И УдержанияПоФизическимЛицам.ДатаНачала = УсловияУдержанияПоИсполнительномуДокументу.Период
	               |			И (УдержанияПоФизическимЛицам.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УдержанияПлатежныхАгентов.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	УдержанияПлатежныхАгентов.Подразделение КАК Подразделение,
	               |	УдержанияПлатежныхАгентов.Удержание КАК Удержание,
	               |	УдержанияПлатежныхАгентов.ДокументОснование КАК ДокументОснование,
	               |	УдержанияПлатежныхАгентов.ДатаНачала КАК ДатаНачала,
	               |	УдержанияПлатежныхАгентов.ДатаОкончания КАК ДатаОкончания,
	               |	УдержанияПлатежныхАгентов.Получатель КАК Получатель,
	               |	УдержанияПлатежныхАгентов.ПлатежныйАгент КАК ПлатежныйАгент,
	               |	СУММА(УдержанияПлатежныхАгентов.Сумма) КАК Рассчитано
	               |ИЗ
	               |	ВТУдержанияПлатежныхАгентов КАК УдержанияПлатежныхАгентов
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УдержанияПлатежныхАгентов.ФизическоеЛицо,
	               |	УдержанияПлатежныхАгентов.Подразделение,
	               |	УдержанияПлатежныхАгентов.Удержание,
	               |	УдержанияПлатежныхАгентов.ДокументОснование,
	               |	УдержанияПлатежныхАгентов.ДатаНачала,
	               |	УдержанияПлатежныхАгентов.ДатаОкончания,
	               |	УдержанияПлатежныхАгентов.Получатель,
	               |	УдержанияПлатежныхАгентов.ПлатежныйАгент";
	
	УдержанияПлатежныхАгентов = Запрос.Выполнить().Выгрузить();
	УдержанияПлатежныхАгентов.Индексы.Добавить("ДокументОснование,Получатель,ПлатежныйАгент");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИсполнительныеЛисты.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ИсполнительныеЛисты.НачислениеУдержание КАК Удержание,
	               |	ИсполнительныеЛисты.ДокументОснование КАК ДокументОснование,
	               |	МИНИМУМ(ВЫБОР
	               |			КОГДА УсловияУдержанияПоИсполнительномуДокументу.ОчередностьВзыскания = ЗНАЧЕНИЕ(Перечисление.ОчередностьВзысканияУдержаний.ПерваяОчередьПроцент70)
	               |				ТОГДА 0.7
	               |			ИНАЧЕ 0.5
	               |		КОНЕЦ) КАК Коэффициент,
	               |	МИНИМУМ(ВЫБОР
	               |			КОГДА УсловияУдержанияПоИсполнительномуДокументу.ОчередностьВзыскания = ЗНАЧЕНИЕ(Перечисление.ОчередностьВзысканияУдержаний.ПерваяОчередьПроцент70)
	               |					ИЛИ УсловияУдержанияПоИсполнительномуДокументу.ОчередностьВзыскания = ЗНАЧЕНИЕ(Перечисление.ОчередностьВзысканияУдержаний.ПерваяОчередьПроцент50)
	               |				ТОГДА 1
	               |			КОГДА УсловияУдержанияПоИсполнительномуДокументу.ОчередностьВзыскания = ЗНАЧЕНИЕ(Перечисление.ОчередностьВзысканияУдержаний.ВтораяОчередь)
	               |				ТОГДА 2
	               |			КОГДА УсловияУдержанияПоИсполнительномуДокументу.ОчередностьВзыскания = ЗНАЧЕНИЕ(Перечисление.ОчередностьВзысканияУдержаний.ТретьяОчередь)
	               |				ТОГДА 3
	               |			ИНАЧЕ 4
	               |		КОНЕЦ) КАК Очередность,
	               |	СУММА(ИсполнительныеЛисты.Сумма) КАК Рассчитано,
	               |	ИсполнительныеЛисты.Подразделение КАК Подразделение,
	               |	ИсполнительныеЛисты.СтатьяФинансирования КАК СтатьяФинансирования,
	               |	ИсполнительныеЛисты.СтатьяРасходов КАК СтатьяРасходов,
	               |	ИсполнительныеЛисты.ДатаНачала КАК ДатаНачала,
	               |	ИсполнительныеЛисты.ДатаОкончания КАК ДатаОкончания,
	               |	ИсполнительныеЛисты.Контрагент КАК Контрагент,
	               |	УсловияУдержанияПоИсполнительномуДокументу.ПлатежныйАгент КАК ПлатежныйАгент
	               |ПОМЕСТИТЬ ВТОчередностьУдержанийФизическиеЛица
	               |ИЗ
	               |	ВТИсполнительныеЛисты КАК ИсполнительныеЛисты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУсловияУдержанияПоИсполнительномуДокументуСрезПоследних КАК УсловияУдержанияПоИсполнительномуДокументу
	               |		ПО ИсполнительныеЛисты.ДокументОснование = УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент
	               |			И ИсполнительныеЛисты.ДатаНачала = УсловияУдержанияПоИсполнительномуДокументу.Период
	               |			И (УсловияУдержанияПоИсполнительномуДокументу.ОчередностьВзыскания <> ЗНАЧЕНИЕ(Перечисление.ОчередностьВзысканияУдержаний.ПустаяСсылка))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ИсполнительныеЛисты.ФизическоеЛицо,
	               |	ИсполнительныеЛисты.НачислениеУдержание,
	               |	ИсполнительныеЛисты.ДокументОснование,
	               |	ИсполнительныеЛисты.Подразделение,
	               |	ИсполнительныеЛисты.СтатьяФинансирования,
	               |	ИсполнительныеЛисты.СтатьяРасходов,
	               |	ИсполнительныеЛисты.ДатаНачала,
	               |	ИсполнительныеЛисты.ДатаОкончания,
	               |	ИсполнительныеЛисты.Контрагент,
	               |	УсловияУдержанияПоИсполнительномуДокументу.ПлатежныйАгент
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УдержанияПоФизическимЛицам.ФизическоеЛицо,
	               |	УдержанияПоФизическимЛицам.НачислениеУдержание,
	               |	УдержанияПоФизическимЛицам.ДокументОснование,
	               |	0.2,
	               |	5,
	               |	СУММА(УдержанияПоФизическимЛицам.Сумма),
	               |	УдержанияПоФизическимЛицам.Подразделение,
	               |	УдержанияПоФизическимЛицам.СтатьяФинансирования,
	               |	УдержанияПоФизическимЛицам.СтатьяРасходов,
	               |	УдержанияПоФизическимЛицам.ДатаНачала,
	               |	УдержанияПоФизическимЛицам.ДатаОкончания,
	               |	УдержанияПоФизическимЛицам.Контрагент,
	               |	NULL
	               |ИЗ
	               |	ВТУдержанияПоФизическимЛицам КАК УдержанияПоФизическимЛицам
	               |ГДЕ
	               |	УдержанияПоФизическимЛицам.КатегорияУдержания <> ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	               |	И УдержанияПоФизическимЛицам.ЯвляетсяВзысканием
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УдержанияПоФизическимЛицам.ФизическоеЛицо,
	               |	УдержанияПоФизическимЛицам.НачислениеУдержание,
	               |	УдержанияПоФизическимЛицам.ДокументОснование,
	               |	УдержанияПоФизическимЛицам.Подразделение,
	               |	УдержанияПоФизическимЛицам.СтатьяФинансирования,
	               |	УдержанияПоФизическимЛицам.СтатьяРасходов,
	               |	УдержанияПоФизическимЛицам.ДатаНачала,
	               |	УдержанияПоФизическимЛицам.ДатаОкончания,
	               |	УдержанияПоФизическимЛицам.Контрагент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОчередностьУдержанийФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	СУММА(ОчередностьУдержанийФизическиеЛица.Рассчитано) КАК Рассчитано,
	               |	МИНИМУМ(ОчередностьУдержанийФизическиеЛица.Коэффициент) КАК Коэффициент
	               |ПОМЕСТИТЬ ВТУдержанияФизическихЛиц
	               |ИЗ
	               |	ВТОчередностьУдержанийФизическиеЛица КАК ОчередностьУдержанийФизическиеЛица
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОчередностьУдержанийФизическиеЛица.ФизическоеЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ОчередностьУдержанийФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо
	               |ПОМЕСТИТЬ ВТФизическиеЛица
	               |ИЗ
	               |	ВТОчередностьУдержанийФизическиеЛица КАК ОчередностьУдержанийФизическиеЛица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ВЫБОР
	               |		КОГДА НачисленияУдержанияПоСотрудникам.НачислениеУдержание В (&ВидыНачислений)
	               |			ТОГДА НачисленияУдержанияПоСотрудникам.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаНачислений,
	               |	ВЫБОР
	               |		КОГДА НачисленияУдержанияПоСотрудникам.НачислениеУдержание В (&ВидыНДФЛ)
	               |			ТОГДА НачисленияУдержанияПоСотрудникам.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаНДФЛ
	               |ПОМЕСТИТЬ ВТНачисленияУдержания
	               |ИЗ
	               |	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизическиеЛица КАК ФизическиеЛица
	               |		ПО НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = ФизическиеЛица.ФизическоеЛицо
	               |			И (НачисленияУдержанияПоСотрудникам.Период = &МесяцНачисления)
	               |			И (НачисленияУдержанияПоСотрудникам.Организация = &Организация)
	               |			И (НачисленияУдержанияПоСотрудникам.Регистратор <> &Ссылка)
	               |			И (НЕ НачисленияУдержанияПоСотрудникам.Сотрудник В (&ИсключаемыеСотрудники))
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НачисленияУдержанияПоКонтрагентамАкционерам.ФизическоеЛицо,
	               |	ВЫБОР
	               |		КОГДА НачисленияУдержанияПоКонтрагентамАкционерам.НачислениеУдержание В (&ВидыНачислений)
	               |			ТОГДА НачисленияУдержанияПоКонтрагентамАкционерам.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НачисленияУдержанияПоКонтрагентамАкционерам.НачислениеУдержание В (&ВидыНДФЛ)
	               |			ТОГДА НачисленияУдержанияПоКонтрагентамАкционерам.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ
	               |ИЗ
	               |	РегистрНакопления.НачисленияУдержанияПоКонтрагентамАкционерам КАК НачисленияУдержанияПоКонтрагентамАкционерам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизическиеЛица КАК ФизическиеЛица
	               |		ПО НачисленияУдержанияПоКонтрагентамАкционерам.ФизическоеЛицо = ФизическиеЛица.ФизическоеЛицо
	               |			И (НачисленияУдержанияПоКонтрагентамАкционерам.Период = &МесяцНачисления)
	               |			И (НачисленияУдержанияПоКонтрагентамАкционерам.Организация = &Организация)
	               |			И (НачисленияУдержанияПоКонтрагентамАкционерам.Регистратор <> &Ссылка)
	               |			И (НЕ НачисленияУдержанияПоКонтрагентамАкционерам.Сотрудник В (&ИсключаемыеСотрудники))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	СУММА(НачисленияУдержания.СуммаНачислений) КАК СуммаНачислений,
	               |	СУММА(НачисленияУдержания.СуммаНДФЛ) КАК СуммаНДФЛ
	               |ПОМЕСТИТЬ ВТЗаработокФизическихЛиц
	               |ИЗ
	               |	ВТНачисленияУдержания КАК НачисленияУдержания
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НачисленияУдержания.ФизическоеЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаработокФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ЗаработокФизическихЛиц.СуммаНачислений - ЗаработокФизическихЛиц.СуммаНДФЛ КАК ЗаработнаяПлата,
	               |	УдержанияФизическихЛиц.Рассчитано КАК Рассчитано,
	               |	УдержанияФизическихЛиц.Коэффициент КАК Коэффициент
	               |ПОМЕСТИТЬ ВТОграничениеУдержаний
	               |ИЗ
	               |	ВТЗаработокФизическихЛиц КАК ЗаработокФизическихЛиц
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУдержанияФизическихЛиц КАК УдержанияФизическихЛиц
	               |		ПО ЗаработокФизическихЛиц.ФизическоеЛицо = УдержанияФизическихЛиц.ФизическоеЛицо
	               |			И ((ЗаработокФизическихЛиц.СуммаНачислений - ЗаработокФизическихЛиц.СуммаНДФЛ) * УдержанияФизическихЛиц.Коэффициент < УдержанияФизическихЛиц.Рассчитано)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОграничениеУдержаний.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ОграничениеУдержаний.ЗаработнаяПлата КАК ЗаработнаяПлата,
	               |	ОчередностьУдержанийФизическиеЛица.Удержание КАК Удержание,
	               |	ОчередностьУдержанийФизическиеЛица.ДокументОснование КАК ДокументОснование,
	               |	ОчередностьУдержанийФизическиеЛица.Коэффициент КАК Коэффициент,
	               |	ОчередностьУдержанийФизическиеЛица.Очередность КАК Очередность,
	               |	ОчередностьУдержанийФизическиеЛица.Рассчитано КАК Рассчитано,
	               |	0 КАК Результат,
	               |	ОчередностьУдержанийФизическиеЛица.Подразделение КАК Подразделение,
	               |	ОчередностьУдержанийФизическиеЛица.СтатьяФинансирования КАК СтатьяФинансирования,
	               |	ОчередностьУдержанийФизическиеЛица.СтатьяРасходов КАК СтатьяРасходов,
	               |	ОчередностьУдержанийФизическиеЛица.ДатаНачала КАК ДатаНачала,
	               |	ОчередностьУдержанийФизическиеЛица.ДатаОкончания КАК ДатаОкончания,
	               |	ОчередностьУдержанийФизическиеЛица.Контрагент КАК Получатель,
	               |	ОчередностьУдержанийФизическиеЛица.ПлатежныйАгент КАК ПлатежныйАгент
	               |ИЗ
	               |	ВТОчередностьУдержанийФизическиеЛица КАК ОчередностьУдержанийФизическиеЛица
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОграничениеУдержаний КАК ОграничениеУдержаний
	               |		ПО ОчередностьУдержанийФизическиеЛица.ФизическоеЛицо = ОграничениеУдержаний.ФизическоеЛицо
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ФизическоеЛицо,
	               |	Очередность,
	               |	Коэффициент,
	               |	ДокументОснование";
				   
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ИдентификаторСтроки = 1;
	Если Объект.Удержания.Количество() > 0 Тогда
		Для Каждого СтрокаУдержаний Из Объект.Удержания Цикл 
			ИдентификаторСтроки = Макс(ИдентификаторСтроки, СтрокаУдержаний.ИдентификаторСтрокиВидаРасчета);
		КонецЦикла;
		ИдентификаторСтроки = ИдентификаторСтроки + 1;
	КонецЕсли;
	
	СтрокиУдержаний = Новый Массив;
	СтрокиПлатежныхАгентов = Новый Массив;
	УдержанияПоСтрокам = ТаблицаУдержанийФизическихЛиц();
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		ЗаработнаяПлата = Выборка.ЗаработнаяПлата;
		УдержаннаяСумма = 0;
		УдержанияПоСтрокам.Очистить();
		Пока Выборка.СледующийПоЗначениюПоля("Очередность") Цикл
			ПроцентыВзыскания = Новый Массив;
			ИндексыСтрок = Новый Соответствие;
			Пока Выборка.Следующий() Цикл
				ДанныеСтроки = УдержанияПоСтрокам.Добавить();
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
				ИндексСтроки = УдержанияПоСтрокам.Индекс(ДанныеСтроки);
				Для Каждого ПроцентВзыскания Из ПроцентыВзыскания Цикл 
					СписокИндексов = ИндексыСтрок[ПроцентВзыскания];
					СписокИндексов.Добавить(ИндексСтроки);
				КонецЦикла;
				Если ПроцентыВзыскания.Найти(Выборка.Коэффициент) = Неопределено Тогда 
					ПроцентыВзыскания.Добавить(Выборка.Коэффициент);
					СписокИндексов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИндексСтроки);
					ИндексыСтрок.Вставить(Выборка.Коэффициент, СписокИндексов);
				КонецЕсли;
			КонецЦикла;
			Для Каждого ПроцентВзыскания Из ПроцентыВзыскания Цикл 
				РаспределяемаяСумма = ЗаработнаяПлата * ПроцентВзыскания - УдержаннаяСумма;
				Если РаспределяемаяСумма <= 0 Тогда 
					Продолжить;
				КонецЕсли;
				КоэффициентыРаспределения = Новый Массив;
				СписокИндексов = ИндексыСтрок[ПроцентВзыскания];
				СуммаУдержанийСписка = 0;
				Для Каждого ИндексСтроки Из СписокИндексов Цикл
					ДанныеУдержания = УдержанияПоСтрокам[ИндексСтроки];
					ОсталосьУдержать = ДанныеУдержания.Рассчитано - ДанныеУдержания.Результат;
					СуммаУдержанийСписка = СуммаУдержанийСписка + ОсталосьУдержать;
					КоэффициентыРаспределения.Добавить(ДанныеУдержания.Рассчитано);
				КонецЦикла;
				Если СуммаУдержанийСписка <= РаспределяемаяСумма Тогда 
					УдержаннаяСумма = УдержаннаяСумма + СуммаУдержанийСписка;
					Для Каждого ИндексСтроки Из СписокИндексов Цикл
						ДанныеУдержания = УдержанияПоСтрокам[ИндексСтроки];
						ДанныеУдержания.Результат = ДанныеУдержания.Рассчитано;
					КонецЦикла;
					Прервать;
				КонецЕсли;
				РаспределениеСуммыУдержаний = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(РаспределяемаяСумма, КоэффициентыРаспределения);
				Если РаспределениеСуммыУдержаний = Неопределено Тогда 
					Продолжить;
				КонецЕсли;
				Для Индекс = 0 По КоэффициентыРаспределения.Количество() - 1 Цикл
					ДанныеУдержания = УдержанияПоСтрокам[СписокИндексов[Индекс]];
					ДанныеУдержания.Результат = ДанныеУдержания.Результат + РаспределениеСуммыУдержаний[Индекс];
					УдержаннаяСумма = УдержаннаяСумма + РаспределениеСуммыУдержаний[Индекс];
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		ДанныеИзменены = Ложь;
		Для Каждого ДанныеУдержания Из УдержанияПоСтрокам Цикл
			Если ДанныеУдержания.Результат <> ДанныеУдержания.Рассчитано Тогда 
				ДанныеИзменены = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ДанныеИзменены Тогда 
			ПоместитьУдержанияФизическогоЛицаВДокумент(УдержанияПоСтрокам, СтрокиУдержаний, УдержанияПлатежныхАгентов, СтрокиПлатежныхАгентов, ИдентификаторСтроки);
		КонецЕсли;
	КонецЦикла;
	
	Если ФизическиеЛица <> Неопределено Тогда 
		ДобавленныеФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиУдержаний, "ФизическоеЛицо", Истина);
		ПропущенныеФизическиеЛица = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ФизическиеЛица, ДобавленныеФизическиеЛица);
		Для Каждого ФизическоеЛицо Из ПропущенныеФизическиеЛица Цикл 
			ТекстСообщения = НСтр("ru = '%1 - не обнаружено взысканий, превышающих установленный законодательством размер.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка(ФизическоеЛицо));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;
	
	Если СтрокиПлатежныхАгентов.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	УдержанияДокумента = Объект.Удержания.Выгрузить(СтрокиУдержаний);
	УдержанияДокумента.Свернуть("ФизическоеЛицо,ДокументОснование,Получатель,ПлатежныйАгент", "Результат");
	
	ВознаграждениеПлатежныхАгентов = Объект.Удержания.Выгрузить(СтрокиПлатежныхАгентов);
	ВознаграждениеПлатежныхАгентов.Колонки.ИдентификаторСтрокиВидаРасчета.Имя = "ИдентификаторСтроки";
	
	Запрос.УстановитьПараметр("УдержанияДокумента", УдержанияДокумента);
	Запрос.УстановитьПараметр("ВознаграждениеПлатежныхАгентов", ВознаграждениеПлатежныхАгентов);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	УдержанияДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	УдержанияДокумента.ДокументОснование КАК ДокументОснование,
	               |	УдержанияДокумента.Получатель КАК Получатель,
	               |	УдержанияДокумента.ПлатежныйАгент КАК ПлатежныйАгент,
	               |	УдержанияДокумента.Результат КАК Результат
	               |ПОМЕСТИТЬ ВТУдержанияДокумента
	               |ИЗ
	               |	&УдержанияДокумента КАК УдержанияДокумента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВознаграждениеПлатежныхАгентов.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ВознаграждениеПлатежныхАгентов.ДокументОснование КАК ДокументОснование,
	               |	ВознаграждениеПлатежныхАгентов.ДатаНачала КАК БазовыйПериодНачало,
	               |	ВознаграждениеПлатежныхАгентов.ДатаОкончания КАК БазовыйПериодКонец,
	               |	ВознаграждениеПлатежныхАгентов.Получатель КАК Получатель,
	               |	ВознаграждениеПлатежныхАгентов.ПлатежныйАгент КАК ПлатежныйАгент,
	               |	ВознаграждениеПлатежныхАгентов.Рассчитано КАК Рассчитано,
	               |	ВознаграждениеПлатежныхАгентов.ИдентификаторСтроки КАК ИдентификаторСтроки
	               |ПОМЕСТИТЬ ВТРегистрРасчета_Удержания
	               |ИЗ
	               |	&ВознаграждениеПлатежныхАгентов КАК ВознаграждениеПлатежныхАгентов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УдержанияПоИсполнительнымДокументам.Период КАК Период,
	               |	УдержанияПоИсполнительнымДокументам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	УдержанияПоИсполнительнымДокументам.Получатель КАК Получатель,
	               |	УдержанияПоИсполнительнымДокументам.ПлатежныйАгент КАК ПлатежныйАгент,
	               |	-УдержанияПоИсполнительнымДокументам.СуммаУдержания КАК СуммаУдержания,
	               |	-УдержанияПоИсполнительнымДокументам.СуммаВознагражденияПлатежногоАгента КАК СуммаВознагражденияПлатежногоАгента
	               |ПОМЕСТИТЬ ВТРегистрНакопления_УдержанияПоИсполнительнымДокументам
	               |ИЗ
	               |	РегистрНакопления.УдержанияПоИсполнительнымДокументам КАК УдержанияПоИсполнительнымДокументам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистрРасчета_Удержания КАК Удержания
	               |		ПО УдержанияПоИсполнительнымДокументам.ИсполнительныйДокумент = Удержания.ДокументОснование
	               |			И УдержанияПоИсполнительнымДокументам.Получатель = Удержания.Получатель
	               |			И УдержанияПоИсполнительнымДокументам.ПлатежныйАгент = Удержания.ПлатежныйАгент
	               |			И (УдержанияПоИсполнительнымДокументам.Период МЕЖДУ НАЧАЛОПЕРИОДА(&МесяцНачисления, МЕСЯЦ) И КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ))
	               |			И (УдержанияПоИсполнительнымДокументам.Регистратор <> &Ссылка)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	&МесяцНачисления,
	               |	УдержанияДокумента.ФизическоеЛицо,
	               |	УдержанияДокумента.Получатель,
	               |	УдержанияДокумента.ПлатежныйАгент,
	               |	УдержанияДокумента.Результат,
	               |	0
	               |ИЗ
	               |	ВТУдержанияДокумента КАК УдержанияДокумента";
	
	Запрос.Выполнить();
	
	ИменаВТ = Новый Массив;
	ИменаВТ.Добавить("ВТУсловияУдержанияПоИсполнительномуДокументуСрезПоследних");
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, ИменаВТ);
	
	СпособРасчета = Перечисления.СпособыРасчетаУдержаний.ВознаграждениеПлатежногоАгента;
	ИсполнительныеЛисты.РассчитатьВознагражденияПлатежныхАгентов(СпособРасчета, ВознаграждениеПлатежныхАгентов, Запрос.МенеджерВременныхТаблиц, Объект.Ссылка);
	
	СтрокиПоИдентификатору = Новый Соответствие;
	Для Каждого СтрокаПлатежногоАгента Из СтрокиПлатежныхАгентов Цикл		
		СтрокиПоИдентификатору.Вставить(СтрокаПлатежногоАгента.ИдентификаторСтрокиВидаРасчета, СтрокаПлатежногоАгента);
	КонецЦикла;	
	
	Для Каждого СтрокаВознаграждения Из ВознаграждениеПлатежныхАгентов Цикл 
		СтрокаПлатежногоАгента = СтрокиПоИдентификатору[СтрокаВознаграждения.ИдентификаторСтроки];
	    СтрокаПлатежногоАгента.Результат = СтрокаВознаграждения.Результат;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ТаблицаУдержанийФизическихЛиц()
	
	ТаблицаУдержаний = Новый ТаблицаЗначений;
	
	ТаблицаУдержаний.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаУдержаний.Колонки.Добавить("ЗаработнаяПлата", Новый ОписаниеТипов("Число"));
	ТаблицаУдержаний.Колонки.Добавить("Удержание", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.Удержания"));
	ТаблицаУдержаний.Колонки.Добавить("ДокументОснование", Метаданные.ОпределяемыеТипы.ОснованиеУдержания.Тип);
	ТаблицаУдержаний.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число"));
	ТаблицаУдержаний.Колонки.Добавить("Очередность", Новый ОписаниеТипов("Число"));
	ТаблицаУдержаний.Колонки.Добавить("Рассчитано", Новый ОписаниеТипов("Число"));
	ТаблицаУдержаний.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число"));
	ТаблицаУдержаний.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаУдержаний.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	ТаблицаУдержаний.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	ТаблицаУдержаний.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ТаблицаУдержаний.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	ТаблицаУдержаний.Колонки.Добавить("Получатель", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаУдержаний.Колонки.Добавить("ПлатежныйАгент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаУдержаний.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	Возврат ТаблицаУдержаний;
	                    
КонецФункции

&НаСервере
Процедура ПоместитьУдержанияФизическогоЛицаВДокумент(УдержанияПоСтрокам, СтрокиУдержаний, УдержанияПлатежныхАгентов, СтрокиПлатежныхАгентов, ИдентификаторСтроки)
	
	ИспользоватьСтатьиФинансирования = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	
	КолонкиГруппировок = "ФизическоеЛицо,ДатаНачала,ДатаОкончания,ДокументОснование,Получатель,ПлатежныйАгент,Удержание";
	
	Удержания = УдержанияПоСтрокам.Скопировать();
	Удержания.Свернуть(КолонкиГруппировок, "Рассчитано,Результат");
	
	ОтборПлатежныхАгентов = Новый ТаблицаЗначений;
	ОтборПлатежныхАгентов.Колонки.Добавить("ДокументОснование", Метаданные.ОпределяемыеТипы.ОснованиеУдержания.Тип);
	ОтборПлатежныхАгентов.Колонки.Добавить("Получатель", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ОтборПлатежныхАгентов.Колонки.Добавить("ПлатежныйАгент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	
	Для Каждого СтрокаУдержаний Из Удержания Цикл 
		
		НоваяСтрока = Объект.Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУдержаний);
		НоваяСтрока.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтроки;
		НоваяСтрока.Задолженность = НоваяСтрока.Рассчитано - НоваяСтрока.Результат;
		
		Если ЗначениеЗаполнено(НоваяСтрока.ПлатежныйАгент) Тогда 
		    ЗаполнитьЗначенияСвойств(ОтборПлатежныхАгентов.Добавить(), СтрокаУдержаний);
		КонецЕсли;
		
		СтрокиУдержаний.Добавить(НоваяСтрока);
		ИдентификаторСтроки = ИдентификаторСтроки + 1;
		
	КонецЦикла;
	
	Если ОтборПлатежныхАгентов.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ОтборПлатежныхАгентов.Свернуть("ДокументОснование,Получатель,ПлатежныйАгент");
	
	Отбор = Новый Структура("ДокументОснование,Получатель,ПлатежныйАгент");
	Для Каждого СтрокаОтбора Из ОтборПлатежныхАгентов Цикл
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаОтбора);
		НайденныеСтроки = УдержанияПлатежныхАгентов.НайтиСтроки(Отбор);
		Для Каждого СтрокаПлатежногоАгента Из НайденныеСтроки Цикл 
			НоваяСтрока = Объект.Удержания.Добавить();
		    ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПлатежногоАгента);
			НоваяСтрока.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтроки;
			СтрокиПлатежныхАгентов.Добавить(НоваяСтрока);
			ИдентификаторСтроки = ИдентификаторСтроки + 1;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВидыНачисленийЗаработнойПлаты()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	УдержанияБазовыеВидыРасчета.ВидРасчета
	               |ИЗ
	               |	ПланВидовРасчета.Удержания.БазовыеВидыРасчета КАК УдержанияБазовыеВидыРасчета
	               |ГДЕ
	               |	УдержанияБазовыеВидыРасчета.Ссылка.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	               |	И НЕ УдержанияБазовыеВидыРасчета.Ссылка.ПометкаУдаления
	               |	И НЕ УдержанияБазовыеВидыРасчета.Ссылка.ВАрхиве";
				   
	СписокНачислений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета");			   
	
	Если СписокНачислений.Количество() = 0 Тогда 
		СписокНачислений = РасчетнаяБазаИсполнительногоЛистаПоУмолчанию();
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокНачислений, ВидыНачисленийДополненияРасчетнойБазыУдержаний());
	
	Возврат СписокНачислений;
	
КонецФункции

&НаСервере
Функция РасчетнаяБазаИсполнительногоЛистаПоУмолчанию()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("КатегорииНачислений", ПланыВидовРасчета.Удержания.КатегорииБазовыхНачисленийУдержанийПоИсполнительнымДокументам());
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Начисления.Ссылка
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&КатегорииНачислений)";
				   
	СписокНачислений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат СписокНачислений; 
	
КонецФункции

&НаСервере
Функция ВидыНачисленийДополненияРасчетнойБазыУдержаний() 
	
	Возврат Обработки.МенеджерРасчетаЗарплаты.ВидыНачисленийДополненияРасчетнойБазыУдержаний();
	
КонецФункции

&НаСервере
Функция ВидыНДФЛДополненияРасчетнойБазыУдержаний()
	
	Возврат Обработки.МенеджерРасчетаЗарплаты.ВидыНДФЛДополненияРасчетнойБазыУдержаний();
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОжиданияМесяцНачисленияПриИзменении()

	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяцаНачисления()
	
	ЗарплатаКадрыРасширенныйКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДокументНаСервере()
	
	ОчиститьДокумент();
	ЗарплатаКадрыРасширенныйКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДокумент()
	
	Объект.Удержания.Очистить();
	
КонецПроцедуры

&НаСервере
Функция АдресСпискаПодобранныхСотрудников()
	
	Возврат ПоместитьВоВременноеХранилище(ОбщегоНазначения.ВыгрузитьКолонку(Объект.Удержания, "ФизическоеЛицо"), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ОбработкаПодбораНаСервере(ВыбранныеФизическиеЛица)
	
	ЗаполнитьДокумент(ВыбранныеФизическиеЛица);
	
КонецПроцедуры

#Область КлючевыеРеквизитыЗаполненияФормы

// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	
	Массив = КлючевыеРеквизитыТаблицыОчищаемыеПриИзменении();
	Возврат Массив;
	
КонецФункции 

// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	
	Массив = КлючевыеРеквизитыОписаниеКлючевыхРеквизитов();
	Возврат Массив;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция КлючевыеРеквизитыТаблицыОчищаемыеПриИзменении() 
	
	Массив = Новый Массив;
	Массив.Добавить("Объект.Удержания");
	
	Возврат Массив;
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция КлючевыеРеквизитыОписаниеКлючевыхРеквизитов() 
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация",					Нстр("ru = 'организации'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "МесяцНачисленияСтрокой", 		Нстр("ru = 'месяца начисления'")));
	
	Возврат Массив;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Инициализация

СтарыеЗначенияКонтролируемыхПолей = Новый Соответствие;

#КонецОбласти
