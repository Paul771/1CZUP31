
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Первоначальное заполнение объекта.
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура;
		ЗначенияДляЗаполнения.Вставить("Организация",	"Объект.Организация");
		ЗначенияДляЗаполнения.Вставить("Ответственный",	"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
	КонецЕсли;
	
	УчитыватьОплату = ?(Объект.Вакансии.Количество(), 1, 0) ; 
	Элементы.Вакансии.Видимость = УчитыватьОплату;
	Элементы.ВакансииПодборВакансий.Доступность = НЕ ТолькоПросмотр;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если УчитыватьОплату = 1 И НЕ Объект.Вакансии.Количество() Тогда 
		ТекстСообщения = НСтр("ru = 'Не заполнены целевые показатели платежа.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Вакансии", "Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ УчитыватьОплату И Объект.Вакансии.Количество() Тогда
		Объект.Вакансии.Очистить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ТипПлатежаПриИзменении(Элемент)
	
	Элементы.Вакансии.Видимость = УчитыватьОплату;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Объект.Организация = ВыбранноеЗначение Тогда
		
		СтандартнаяОбработка = Ложь;
		
	ИначеЕсли Объект.Вакансии.Количество() Тогда
		
		Если УчитыватьОплату = 0 Тогда
			Объект.Вакансии.Очистить();
		Иначе 	
			ВалидныеВакансии = ВакансииВыбраннойОрганизаций(ВыбранноеЗначение, Объект.Вакансии);
			
			Если Объект.Вакансии.Количество() <> ВалидныеВакансии.Количество() Тогда 
				СтандартнаяОбработка = Ложь;
				ПараметрыОповещения = Новый Структура;
				ПараметрыОповещения.Вставить("Организация", ВыбранноеЗначение);
				ПараметрыОповещения.Вставить("Вакансии", ВалидныеВакансии);
				Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаИзмененияОрганизации", ЭтаФорма, ПараметрыОповещения);
				ПоказатьВопрос(Оповещение, НСтр("ru = 'Вакансии, несоответствующие выбранной организации, будут удалены. Продолжить?'"), РежимДиалогаВопрос.ОКОтмена);
			КонецЕсли;	
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаИзмененияОрганизации(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Объект.Организация = ПараметрыОповещения.Организация;
		Объект.Вакансии.Очистить();
		Для Каждого ВакансияОрганизации Из ПараметрыОповещения.Вакансии Цикл 
			Объект.Вакансии.Добавить().Вакансия = ВакансияОрганизации;
		КонецЦикла;	
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий"
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборВакансий(Команда)
	
	ПараметрыФормы = Новый Структура("РежимВыбора, МножественныйВыбор, ЗакрыватьПриВыборе", Истина, Истина, Ложь);
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Организация", Объект.Организация));
	ПараметрыФормы.Вставить("ТолькоОткрытыеВакансии");
	
	СписокПодобранных = Новый Массив;
	Для Каждого СтрокаТЧВакансии Из Объект.Вакансии Цикл 
		СписокПодобранных.Добавить(СтрокаТЧВакансии.Вакансия);
	КонецЦикла;	
	
	ПараметрыФормы.Вставить("СписокПодобранных", СписокПодобранных);
	
	ОткрытьФорму("Справочник.Вакансии.ФормаВыбора", ПараметрыФормы, Элементы.Вакансии);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВакансииВыбраннойОрганизаций(Организация, Знач Вакансии)
	
	Возврат Справочники.Вакансии.ВакансииОрганизации(Организация, Вакансии.Выгрузить().ВыгрузитьКолонку("Вакансия"));
	
КонецФункции

#КонецОбласти
