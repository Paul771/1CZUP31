
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// Создается новый документ.
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный", "Объект.Организация", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ОрганизацияПриИзмененииНаСервере();
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ПоследствияНесчастногоСлучая", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МатериальныйУщербПриИзменении(Элемент)
	Объект.СуммарныйМатериальныйУщерб = СуммаМатериальногоУщерба(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	ДокументОснованиеПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РуководительПриИзменении(Элемент)
	НастроитьОтображениеГруппыПодписей();
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйЗаОхрануТрудаПриИзменении(Элемент)
	НастроитьОтображениеГруппыПодписей();
КонецПроцедуры

&НаКлиенте
Процедура ЭлементРедактированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОповещения = Новый Структура;
	ИмяЭлемента = Элемент.Имя;
	Если ТипЗнч(ЭтотОбъект.ТекущийЭлемент) = Тип("ТаблицаФормы") Тогда
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента, ЭтотОбъект.ТекущийЭлемент.Имя, "");
		ПараметрыОповещения.Вставить("ТаблицаФормы", ЭтотОбъект.ТекущийЭлемент.Имя);
	КонецЕсли;
	ПараметрыОповещения.Вставить("ИмяЭлемента", ИмяЭлемента);
	Оповещение = Новый ОписаниеОповещения("ЭлементРедактированияЗавершениеВвода", ЭтотОбъект, ПараметрыОповещения);
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
		Оповещение,
		Элемент.ТекстРедактирования,
		Элемент.Заголовок);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПоследствия

&НаКлиенте
Процедура ПоследствияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПоследствияПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПоследствияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ПоследствияБольничныйЛистПродолжение" Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Пострадавший", ТекущиеДанные.Пострадавший);
		ПараметрыОткрытия.Вставить("БольничныеЛисты", БольничныеЛистыПострадавшего(ТекущиеДанные.Пострадавший));
		ПараметрыОткрытия.Вставить("Организация", Объект.Организация);
		
		ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("БольничныеЛистыПострадавшегоЗавершение", ЭтотОбъект, ПараметрыОткрытия);
		ОткрытьФорму("Документ.ПоследствияНесчастногоСлучая.Форма.ФормаВводаБольничныхЛистов", ПараметрыОткрытия, ЭтотОбъект,,,,
			ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БольничныеЛистыПострадавшегоЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = Объект.БольничныеЛистыПострадавших.НайтиСтроки(Новый Структура("Пострадавший", Результат.Пострадавший));
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Объект.БольничныеЛистыПострадавших.Удалить(НайденнаяСтрока);
	КонецЦикла;
	
	Для каждого БольничныйЛист Из Результат.БольничныеЛисты Цикл
		НоваяСтрока = Объект.БольничныеЛистыПострадавших.Добавить();
		НоваяСтрока.Пострадавший = Результат.Пострадавший;
		НоваяСтрока.БольничныйЛист = БольничныйЛист;
	КонецЦикла;
	
	Модифицированность = Истина;
	
	ОбновитьНадписиПоБольничнымЛистам(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоследствияБольничныйЛистПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Последствия.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = Объект.БольничныеЛистыПострадавших.НайтиСтроки(Новый Структура("Пострадавший, БольничныйЛист", ТекущиеДанные.Пострадавший, ТекущиеДанные.БольничныйЛист));
	Если НайденныеСтроки.Количество() = 0 Тогда
		НоваяСтрока = Объект.БольничныеЛистыПострадавших.Добавить();
		НоваяСтрока.Пострадавший = ТекущиеДанные.Пострадавший;
		НоваяСтрока.БольничныйЛист = ТекущиеДанные.БольничныйЛист;
	КонецЕсли;
	
	ОбновитьНадписиПоБольничнымЛистам(Объект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	НастроитьОтображениеГруппыПодписей();
	Объект.СуммарныйМатериальныйУщерб = СуммаМатериальногоУщерба(Объект);
	ОбновитьНадписиПоБольничнымЛистам(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ЗапрашиваемыеЗначения = Новый Структура;
	ЗапрашиваемыеЗначения.Вставить("Организация", "Объект.Организация");
	
	ЗапрашиваемыеЗначения.Вставить("Руководитель", "Объект.Руководитель");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьРуководителя", "Объект.ДолжностьРуководителя");
	
	ЗапрашиваемыеЗначения.Вставить("ОтветственныйЗаОхрануТруда", "Объект.ОтветственныйЗаОхрануТруда");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьОтветственногоЗаОхрануТруда", "Объект.ДолжностьОтветственногоЗаОхрануТруда");
	
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗапрашиваемыеЗначения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));
	
	НастроитьОтображениеГруппыПодписей();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеГруппыПодписей()
	ЗарплатаКадры.НастроитьОтображениеГруппыПодписей(Элементы.ПодписиГруппа, "Объект.Руководитель", "Объект.ОтветственныйЗаОхрануТруда");
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СуммаМатериальногоУщерба(Объект)
	
	Возврат Объект.СтоимостьИспорченногоОборудования
		+ Объект.СтоимостьРазрушенныхЗданий + Объект.ПрочиеРасходы;
		
КонецФункции

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ДокументОбъект.ДокументОснование);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Функция БольничныеЛистыПострадавшего(Пострадавший)
	
	БольничныеЛисты = Новый Массив;
	НайденныеСтроки = Объект.БольничныеЛистыПострадавших.НайтиСтроки(Новый Структура("Пострадавший", Пострадавший));
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		БольничныеЛисты.Добавить(НайденнаяСтрока.БольничныйЛист);
	КонецЦикла;
	
	Возврат БольничныеЛисты;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьНадписиПоБольничнымЛистам(Объект)
	
	ПервыйБольничный = Истина;
	Для Каждого СтрокаТаблицы Из Объект.Пострадавшие Цикл
		НайденныеСтроки = Объект.БольничныеЛистыПострадавших.НайтиСтроки(Новый Структура("Пострадавший", СтрокаТаблицы.Пострадавший));
		СтрокаТаблицы.БольничныйЛистПродолжение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Больничные листы: %1'"),
			НайденныеСтроки.Количество());
		
		Если ПервыйБольничный Тогда
			ПервыйБольничный = Ложь;
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				СтрокаТаблицы.БольничныйЛист = НайденнаяСтрока.БольничныйЛист;
				Прервать;
			КонецЦикла;
			СтрокаТаблицы.ЕстьПродолжениеБольничногоЛиста = НайденныеСтроки.Количество() > 1;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементРедактированияЗавершениеВвода(Знач ВведенныйТекст, Знач ДополнительныеПараметры) Экспорт
	
	Если ВведенныйТекст = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ТаблицаФормы") Тогда
		Элементы[ДополнительныеПараметры.ТаблицаФормы].ТекущиеДанные[ДополнительныеПараметры.ИмяЭлемента] = ВведенныйТекст;
	Иначе
		Объект[ДополнительныеПараметры.ИмяЭлемента] = ВведенныйТекст;
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти


