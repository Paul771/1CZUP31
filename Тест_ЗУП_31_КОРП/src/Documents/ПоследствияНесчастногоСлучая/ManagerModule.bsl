#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	ОписаниеСостава = ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента();
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	ОписаниеСостава.ИспользоватьКраткийСостав = Ложь;
	ОписаниеСостава.ИспользоватьОграничениеДоступа = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	
	ЗарплатаКадрыСоставДокументов.ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(
		ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц,
		"Пострадавшие",
		"Пострадавший");
		
	Возврат ОписаниеСостава;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Сообщение о последствиях несчастного случая
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.ПоследствияНесчастногоСлучая";
	КомандаПечати.Идентификатор = "ПФ_MXL_СообщениеОПоследствияхНесчастногоСлучая";
	КомандаПечати.Представление = НСтр("ru = 'Сообщение о последствиях несчастного случая'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СообщениеОПоследствияхНесчастногоСлучая") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_СообщениеОПоследствияхНесчастногоСлучая",
			НСтр("ru = 'Сообщение о последствиях несчастного случая'"), ПечатьСообщенияОПоследствияхНесчастногоСлучая(МассивОбъектов, ОбъектыПечати), ,
			"Документ.ПоследствияНесчастногоСлучая.ПФ_MXL_СообщениеОПоследствияхНесчастногоСлучая");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьСообщенияОПоследствияхНесчастногоСлучая(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоследствияНесчастногоСлучая_СообщениеОПоследствияхНесчастногоСлучая";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоследствияНесчастногоСлучая.ПФ_MXL_СообщениеОПоследствияхНесчастногоСлучая");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ПервыйПострадавший = Истина;
		Для каждого СтрокаПострадавшего Из ДанныеДокумента.МассивПострадавших Цикл
			
			// Документы нужно выводить на разных страницах.
			Если Не ПервыйПострадавший Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПострадавший = Ложь;
			КонецЕсли;
			
			Область1_1 = Макет.ПолучитьОбласть("Область1_1");
			Область1_2 = Макет.ПолучитьОбласть("Область1_2");
			Область2 = Макет.ПолучитьОбласть("Область2");
			Область3 = Макет.ПолучитьОбласть("Область3");
			Область4 = Макет.ПолучитьОбласть("Область4");
			Область5 = Макет.ПолучитьОбласть("Область5");
			ДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
			
			////////////////////////////////////////////////
			// Область 1_1
			
			Область1_1.Параметры.ДатаПроисшествия = ДанныеДокумента.ДатаПроисшествия;
			Область1_1.Параметры.ДатаНомерАкта = ДанныеДокумента.НомерАкта + ?(ПустаяСтрока(ДанныеДокумента.ДатаАкта), "", " от ") + ДанныеДокумента.ДатаАкта;
			Область1_1.Параметры.ФИОПострадавшего = СтрокаПострадавшего.ФИОПолные;
			Область1_1.Параметры.Должность = СтрокаПострадавшего.НаименованиеДолжности;
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СведенияОбОрганизации, "110,110,999");
			Область1_1.Параметры.СведенияОбОрганизацииЧасть1 =  СписокСтрок[0];
			Область1_1.Параметры.СведенияОбОрганизацииЧасть2 =  СписокСтрок[1];
			Область1_1.Параметры.СведенияОбОрганизацииЧасть3 =  СписокСтрок[2];
			
			Утверждающий = Строка(ДанныеДокумента.ДолжностьРуководителя) + " " + Строка(ДанныеДокумента.ФИОРуководителя);
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(Утверждающий, "55, 999");
			Область1_1.Параметры.УтверждающийЧасть1 = СписокСтрок[0];
			Область1_1.Параметры.УтверждающийЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область1_1);
			Если ЗначениеЗаполнено(СтрокаПострадавшего.Последствия.ИмяПредопределенныхДанных) Тогда
				ОбластьПоследствия = Макет.ПолучитьОбласть(СтрокаПострадавшего.Последствия.ИмяПредопределенныхДанных);
				ТабличныйДокумент.Вывести(ОбластьПоследствия);
			КонецЕсли;
			
			////////////////////////////////////////////////
			// Область 1_2
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.ОкончательныйДиагноз, "110");
			Область1_2.Параметры.ОкончательныйДиагнозЧасть1 = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область1_2);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 2
			
			Область2.Параметры.Заполнить(ДанныеДокумента);
			Область2.Параметры.Заполнить(СтрокаПострадавшего);
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.ПриказОНазначенииЕжемесячныхВыплат, "65, 110");
			Область2.Параметры.ПриказОНазначенииЕжемесячныхВыплатЧасть1 = СписокСтрок[0];
			Область2.Параметры.ПриказОНазначенииЕжемесячныхВыплатЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область2);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 3
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.РешениеПрокуратуры, "65, 110");
			Область3.Параметры.РешениеПрокуратурыЧасть1 = СписокСтрок[0];
			Область3.Параметры.РешениеПрокуратурыЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область3);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 4
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.МероприятияПоУстранениюПричин, "110, 110, 110");
			Область4.Параметры.МероприятияПоУстранениюПричинЧасть1 = СписокСтрок[0];
			Область4.Параметры.МероприятияПоУстранениюПричинЧасть2 = СписокСтрок[1];
			Область4.Параметры.МероприятияПоУстранениюПричинЧасть3 = СписокСтрок[2];
			
			ТабличныйДокумент.Вывести(Область4);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 3);
			
			/////////////////////////////////////////////////
			// Область 5
			
			Область5.Параметры.ФИОДиректор = ДанныеДокумента.ФИОРуководителя;
			Область5.Параметры.ФИОГлавныйБухгалтер = ДанныеДокумента.ФИОГлавногоБухгалтера;
			
			ТабличныйДокумент.Вывести(Область5);
			
		КонецЦикла;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ДанныеПечатиДокументов(МассивОбъектов)
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц  = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоследствияНесчастногоСлучая.Ссылка,
	|	ПоследствияНесчастногоСлучая.Номер,
	|	ПоследствияНесчастногоСлучая.Дата,
	|	ПоследствияНесчастногоСлучая.Проведен,
	|	ПоследствияНесчастногоСлучая.Организация,
	|	Организации.НаименованиеПолное КАК НаименованиеОрганизации,
	|	Организации.НаименованиеСокращенное КАК НаименованиеСокращенное,
	|	ПоследствияНесчастногоСлучая.Подразделение,
	|	ПоследствияНесчастногоСлучая.ДокументОснование,
	|	ПоследствияНесчастногоСлучая.СтоимостьИспорченногоОборудования,
	|	ПоследствияНесчастногоСлучая.СтоимостьРазрушенныхЗданий,
	|	ПоследствияНесчастногоСлучая.ПрочиеРасходы,
	|	ПоследствияНесчастногоСлучая.СуммарныйМатериальныйУщерб,
	|	ПоследствияНесчастногоСлучая.РешениеПрокуратуры,
	|	ПоследствияНесчастногоСлучая.ДатаПроисшествия,
	|	ПоследствияНесчастногоСлучая.ДатаАкта,
	|	ПоследствияНесчастногоСлучая.НомерАкта,
	|	ПоследствияНесчастногоСлучая.Руководитель,
	|	ПоследствияНесчастногоСлучая.ДолжностьРуководителя,
	|	ПоследствияНесчастногоСлучая.ОтветственныйЗаОхрануТруда,
	|	ПоследствияНесчастногоСлучая.ДолжностьОтветственногоЗаОхрануТруда,
	|	ПоследствияНесчастногоСлучая.КраткийСоставПострадавшие,
	|	ПоследствияНесчастногоСлучая.Ответственный,
	|	ПоследствияНесчастногоСлучая.Комментарий,
	|	НесчастныйСлучайНаПроизводстве.ДатаПроисшествия КАК ДатаПроисшествияДатаВремя,
	|	НесчастныйСлучайНаПроизводстве.МероприятияПоУстранениюПричин КАК МероприятияПоУстранениюПричин
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПоследствияНесчастногоСлучая КАК ПоследствияНесчастногоСлучая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НесчастныйСлучайНаПроизводстве КАК НесчастныйСлучайНаПроизводстве
	|		ПО ПоследствияНесчастногоСлучая.ДокументОснование = НесчастныйСлучайНаПроизводстве.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПоследствияНесчастногоСлучая.Организация = Организации.Ссылка
	|ГДЕ
	|	ПоследствияНесчастногоСлучая.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследствияНесчастногоСлучаяБольничныеЛистыПострадавших.Ссылка,
	|	ПоследствияНесчастногоСлучаяБольничныеЛистыПострадавших.Пострадавший,
	|	МИНИМУМ(БольничныеЛисты.ДатаНачала) КАК НачалоБольничного,
	|	МАКСИМУМ(БольничныеЛисты.ДатаОкончания) КАК ОкончаниеБольничного
	|ПОМЕСТИТЬ ВТБольничныеЛистыДаты
	|ИЗ
	|	Документ.ПоследствияНесчастногоСлучая.БольничныеЛистыПострадавших КАК ПоследствияНесчастногоСлучаяБольничныеЛистыПострадавших
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО ПоследствияНесчастногоСлучаяБольничныеЛистыПострадавших.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныеЛисты
	|		ПО ПоследствияНесчастногоСлучаяБольничныеЛистыПострадавших.БольничныйЛист = БольничныеЛисты.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследствияНесчастногоСлучаяБольничныеЛистыПострадавших.Ссылка,
	|	ПоследствияНесчастногоСлучаяБольничныеЛистыПострадавших.Пострадавший
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.Ссылка.Организация КАК Организация,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.Пострадавший,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ДолжностьПоШтатномуРасписанию,
	|	Должности.Наименование КАК НаименованиеДолжности,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СтажОбщийПредставление,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СтажВОрганизацииПредставление,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ОпьянениеПострадавшего,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ВидИСтепеньОпьянения,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ХарактерПовреждений,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СведенияСОУТ,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СведенияОПСОУТ,
	|	ПоследствияНесчастногоСлучаяПострадавшие.Последствия,
	|	ПоследствияНесчастногоСлучаяПострадавшие.ОкончательныйДиагноз,
	|	ПоследствияНесчастногоСлучаяПострадавшие.РазмерЕжемесячнойВыплаты,
	|	ПоследствияНесчастногоСлучаяПострадавшие.ПриказОНазначенииЕжемесячныхВыплат,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя КАК Период,
	|	ЕСТЬNULL(БольничныеЛисты.НачалоБольничного, """") КАК НачалоБольничного,
	|	ЕСТЬNULL(БольничныеЛисты.ОкончаниеБольничного, """") КАК ОкончаниеБольничного,
	|	ЕСТЬNULL(РАЗНОСТЬДАТ(БольничныеЛисты.НачалоБольничного, БольничныеЛисты.ОкончаниеБольничного, ДЕНЬ) + 1, 0) КАК КоличествоБольничныхДней
	|ПОМЕСТИТЬ ВТПострадавшиеФизическиеЛица
	|ИЗ
	|	Документ.ПоследствияНесчастногоСлучая.Пострадавшие КАК ПоследствияНесчастногоСлучаяПострадавшие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО ПоследствияНесчастногоСлучаяПострадавшие.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НесчастныйСлучайНаПроизводстве.Пострадавшие КАК НесчастныйСлучайНаПроизводствеПострадавшие
	|		ПО (ДанныеДокументов.ДокументОснование = НесчастныйСлучайНаПроизводствеПострадавшие.Ссылка)
	|			И ПоследствияНесчастногоСлучаяПострадавшие.Пострадавший = НесчастныйСлучайНаПроизводствеПострадавшие.Пострадавший
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБольничныеЛистыДаты КАК БольничныеЛисты
	|		ПО (ДанныеДокументов.Ссылка = БольничныеЛисты.Ссылка)
	|			И ПоследствияНесчастногоСлучаяПострадавшие.Пострадавший = БольничныеЛисты.Пострадавший
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК РабочиеМеста
	|		ПО (НесчастныйСлучайНаПроизводствеПострадавшие.ДолжностьПоШтатномуРасписанию = РабочиеМеста.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	|		ПО (РабочиеМеста.Должность = Должности.Ссылка)";
	
	Запрос.Выполнить();
	
	СведенияОбОтветственныхЛицах.СоздатьВТОтветственныеЛица(Запрос.МенеджерВременныхТаблиц, "ВТДанныеДокументов", "ГлавныйБухгалтер", "ДатаПроисшествияДатаВремя");
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТПострадавшиеФизическиеЛица", "Пострадавший,Период");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФамилияИО, ФИОПолные, Профессии");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пострадавшие.Ссылка,
	|	Пострадавшие.Организация,
	|	Пострадавшие.Пострадавший,
	|	Пострадавшие.ДолжностьПоШтатномуРасписанию,
	|	Пострадавшие.НаименованиеДолжности,
	|	Пострадавшие.СтажОбщийПредставление,
	|	Пострадавшие.СтажВОрганизацииПредставление,
	|	Пострадавшие.ОпьянениеПострадавшего,
	|	Пострадавшие.ВидИСтепеньОпьянения,
	|	Пострадавшие.ХарактерПовреждений,
	|	Пострадавшие.СведенияСОУТ,
	|	Пострадавшие.СведенияОПСОУТ,
	|	Пострадавшие.Последствия,
	|	Пострадавшие.ОкончательныйДиагноз,
	|	Пострадавшие.РазмерЕжемесячнойВыплаты,
	|	Пострадавшие.ПриказОНазначенииЕжемесячныхВыплат,
	|	Пострадавшие.НачалоБольничного,
	|	Пострадавшие.ОкончаниеБольничного,
	|	Пострадавшие.КоличествоБольничныхДней,
	|	КадровыеДанныеФизическихЛиц.ФамилияИО,
	|	КадровыеДанныеФизическихЛиц.ФИОПолные,
	|	КадровыеДанныеФизическихЛиц.Профессии
	|ПОМЕСТИТЬ ВТПострадавшие
	|ИЗ
	|	ВТПострадавшиеФизическиеЛица КАК Пострадавшие
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО Пострадавшие.Пострадавший = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПострадавшиеФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Номер,
	|	ДанныеДокументов.Дата,
	|	ДанныеДокументов.Проведен,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.НаименованиеОрганизации,
	|	ДанныеДокументов.НаименованиеСокращенное,
	|	ДанныеДокументов.Подразделение,
	|	ДанныеДокументов.ДокументОснование,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.СтоимостьИспорченногоОборудования = 0
	|			ТОГДА """"
	|		ИНАЧЕ ДанныеДокументов.СтоимостьИспорченногоОборудования
	|	КОНЕЦ КАК СтоимостьИспорченногоОборудования,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.СтоимостьРазрушенныхЗданий = 0
	|			ТОГДА """"
	|		ИНАЧЕ ДанныеДокументов.СтоимостьРазрушенныхЗданий
	|	КОНЕЦ КАК СтоимостьРазрушенныхЗданий,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.ПрочиеРасходы = 0
	|			ТОГДА """"
	|		ИНАЧЕ ДанныеДокументов.ПрочиеРасходы
	|	КОНЕЦ КАК ПрочиеРасходы,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.СуммарныйМатериальныйУщерб = 0
	|			ТОГДА """"
	|		ИНАЧЕ ДанныеДокументов.СуммарныйМатериальныйУщерб
	|	КОНЕЦ КАК СуммарныйМатериальныйУщерб,
	|	ДанныеДокументов.РешениеПрокуратуры,
	|	ДанныеДокументов.ДатаПроисшествия,
	|	ДанныеДокументов.ДатаАкта,
	|	ДанныеДокументов.НомерАкта,
	|	ДанныеДокументов.Руководитель,
	|	ДанныеДокументов.ДолжностьРуководителя,
	|	ДанныеДокументов.ОтветственныйЗаОхрануТруда,
	|	ДанныеДокументов.ДолжностьОтветственногоЗаОхрануТруда,
	|	ДанныеДокументов.КраткийСоставПострадавшие,
	|	ДанныеДокументов.Ответственный,
	|	ДанныеДокументов.Комментарий,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя,
	|	ДанныеДокументов.МероприятияПоУстранениюПричин,
	|	ОтветственныеЛица.ГлавныйБухгалтер
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветственныеЛица КАК ОтветственныеЛица
	|		ПО ДанныеДокументов.Организация = ОтветственныеЛица.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ДанныеПечати = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Выборка);
		
		ДанныеПечати.Вставить("ДатаПроисшествия", Формат(Выборка.ДатаПроисшествияДатаВремя, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаАкта", Формат(Выборка.ДатаАкта, "ДЛФ=ДД"));
		
		ДанныеПечати.Вставить("ФИОРуководителя", "");
		ДанныеПечати.Вставить("ФИОГлавногоБухгалтера", "");
		ДанныеПечати.Вставить("МассивПострадавших", Новый Массив);
		ДанныеПечати.Вставить("СведенияОбОрганизации", "");
		
		Если ЗначениеЗаполнено(Выборка.Организация) Тогда
			// Сведения об организации
			КодыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				Выборка.Организация, "КодОКВЭД,НаименованиеОКВЭД,КодОКВЭД2,НаименованиеОКВЭД2,ИНН,НаименованиеОКФС,РегистрационныйНомерФСС");
			
			Если Выборка.Дата < '20170101' И Не ПустаяСтрока(КодыОрганизации.КодОКВЭД) Тогда
				КодОКВЭД = КодыОрганизации.КодОКВЭД;
				НаименованиеОКВЭД = КодыОрганизации.НаименованиеОКВЭД;
			Иначе
				КодОКВЭД = КодыОрганизации.КодОКВЭД2;
				НаименованиеОКВЭД = КодыОрганизации.НаименованиеОКВЭД2;
			КонецЕсли;
			
			СписокПоказателей = Новый Массив;
			СписокПоказателей.Добавить("ТелОрганизации");
			
			ДанныеОбОрганизации = ЗарплатаКадры.ПолучитьСведенияОбОрганизации(Выборка.Организация, , СписокПоказателей);
			
			АдресаОрганизаций = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресаОрганизаций(Выборка.Организация);
			ОписаниеФактическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
				АдресаОрганизаций,
				Выборка.Организация,
				Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			ОписаниеЮридическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
				АдресаОрганизаций,
				Выборка.Организация,
				Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			
			СведенияОбОрганизации = Выборка.НаименованиеОрганизации
				+ ?(ЗначениеЗаполнено(КодОКВЭД), " " + НСтр("ru = 'ОКВЭД'") + ": " + КодОКВЭД, "")+ " " + НаименованиеОКВЭД
				+ ?(ЗначениеЗаполнено(ОписаниеЮридическогоАдреса.Представление), ", " + НСтр("ru = 'юр. адрес'") + ": " + ОписаниеЮридическогоАдреса.Представление, "")
				+ ?(ЗначениеЗаполнено(ОписаниеФактическогоАдреса.Представление), ", " + НСтр("ru = 'факт. адрес'") + ": " + ОписаниеФактическогоАдреса.Представление, "")
				+ ?(ЗначениеЗаполнено(ДанныеОбОрганизации.ТелОрганизации), ", " + НСтр("ru = 'тел'") + ": " + ДанныеОбОрганизации.ТелОрганизации, "");
			ДанныеПечати.Вставить("СведенияОбОрганизации", СведенияОбОрганизации);
			
		КонецЕсли;
		
		// ФИОРуководителя
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДанныеПечати.Руководитель, "ФамилияИО", ДанныеПечати.ДатаПроисшествияДатаВремя);
		Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ФИОРуководителя", СтрокаКадровыхДанных.ФамилияИО);
		КонецЦикла;
		
		// ФИОГлавногоБухгалтера
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДанныеПечати.ГлавныйБухгалтер, "ФамилияИО", ДанныеПечати.ДатаПроисшествияДатаВремя);
		Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ФИОГлавногоБухгалтера", СтрокаКадровыхДанных.ФамилияИО);
		КонецЦикла;
		
		Если ДанныеПечати.СтоимостьИспорченногоОборудования <> "" Тогда
			ДанныеПечати.Вставить("СтоимостьИспорченногоОборудования", Строка(ДанныеПечати.СтоимостьИспорченногоОборудования) + " ("
				+ ЧислоПрописью(ДанныеПечати.СтоимостьИспорченногоОборудования, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2") + ")");
		КонецЕсли;
		
		Если ДанныеПечати.СтоимостьРазрушенныхЗданий <> "" Тогда
			ДанныеПечати.Вставить("СтоимостьРазрушенныхЗданий", Строка(ДанныеПечати.СтоимостьРазрушенныхЗданий) + " ("
				+ ЧислоПрописью(ДанныеПечати.СтоимостьРазрушенныхЗданий, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2") + ")");
		КонецЕсли;
		
		Если ДанныеПечати.ПрочиеРасходы <> "" Тогда
			ДанныеПечати.Вставить("ПрочиеРасходы", Строка(ДанныеПечати.ПрочиеРасходы) + " ("
				+ ЧислоПрописью(ДанныеПечати.ПрочиеРасходы, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2") + ")");
		КонецЕсли;
		
		Если ДанныеПечати.СуммарныйМатериальныйУщерб <> "" Тогда
			ДанныеПечати.Вставить("СуммарныйМатериальныйУщерб", Строка(ДанныеПечати.СуммарныйМатериальныйУщерб) + " ("
				+ ЧислоПрописью(ДанныеПечати.СуммарныйМатериальныйУщерб, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2") + ")");
		КонецЕсли;
		
		// Заполнение соответствия
		ДанныеПечатиОбъектов.Вставить(Выборка.Ссылка, ДанныеПечати);
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пострадавшие.Ссылка,
	|	Пострадавшие.Организация,
	|	Пострадавшие.Пострадавший,
	|	Пострадавшие.ДолжностьПоШтатномуРасписанию,
	|	Пострадавшие.НаименованиеДолжности,
	|	Пострадавшие.СтажОбщийПредставление,
	|	Пострадавшие.СтажВОрганизацииПредставление,
	|	Пострадавшие.ОпьянениеПострадавшего,
	|	Пострадавшие.ВидИСтепеньОпьянения,
	|	Пострадавшие.ХарактерПовреждений,
	|	Пострадавшие.СведенияСОУТ,
	|	Пострадавшие.СведенияОПСОУТ,
	|	Пострадавшие.Последствия,
	|	Пострадавшие.ОкончательныйДиагноз,
	|	Пострадавшие.РазмерЕжемесячнойВыплаты,
	|	Пострадавшие.ПриказОНазначенииЕжемесячныхВыплат,
	|	Пострадавшие.НачалоБольничного,
	|	Пострадавшие.ОкончаниеБольничного,
	|	Пострадавшие.КоличествоБольничныхДней,
	|	Пострадавшие.ФамилияИО,
	|	Пострадавшие.ФИОПолные,
	|	Пострадавшие.Профессии
	|ИЗ
	|	ВТПострадавшие КАК Пострадавшие
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пострадавшие.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПострадавших = Новый Массив;
		Пока Выборка.Следующий() Цикл
			СтрокаПострадавшего = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Выборка);
			СтрокаПострадавшего.НачалоБольничного = Формат(Выборка.НачалоБольничного, "ДЛФ=ДД");
			СтрокаПострадавшего.ОкончаниеБольничного = Формат(Выборка.ОкончаниеБольничного, "ДЛФ=ДД");
			Если СтрокаПострадавшего.РазмерЕжемесячнойВыплаты <> 0 Тогда
				СтрокаПострадавшего.РазмерЕжемесячнойВыплаты = Строка(СтрокаПострадавшего.РазмерЕжемесячнойВыплаты) + " ("
					+ ЧислоПрописью(СтрокаПострадавшего.РазмерЕжемесячнойВыплаты, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2") + ")";
			Иначе
				СтрокаПострадавшего.РазмерЕжемесячнойВыплаты = "";
			КонецЕсли;
			
			МассивПострадавших.Добавить(СтрокаПострадавшего);
		КонецЦикла;
		ДанныеПечати.Вставить("МассивПострадавших", МассивПострадавших);
		
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли