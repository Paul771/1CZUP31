
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// Заполнение нового документа.
		ЗначенияДляЗаполнения = Новый Структура;
		
		ЗначенияДляЗаполнения.Вставить("Организация", "Объект.Организация");
		ЗначенияДляЗаполнения.Вставить("Ответственный", "Объект.Ответственный");
		ЗначенияДляЗаполнения.Вставить("Руководитель", "Объект.Руководитель");
		ЗначенияДляЗаполнения.Вставить("ДолжностьРуководителя", "Объект.ДолжностьРуководителя");
		ЗначенияДляЗаполнения.Вставить("РуководительКадровойСлужбы", "Объект.НачальникОтделаКадров");
		ЗначенияДляЗаполнения.Вставить("ВидАттестации", "Объект.ВидАттестации");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Объект.НачалоПериода = НачалоГода(ТекущаяДатаСеанса());
		Объект.КонецПериода = КонецГода(Объект.НачалоПериода);
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужбаФормы");
		Модуль.УстановитьПараметрыВыбораСотрудников(ЭтаФорма, "СотрудникиСотрудник,АттестуемыеСотрудникиСотрудник");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_НаправлениеНаВнешнююАттестацию", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
    ЗарплатаКадрыРасширенныйКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	ОбновитьАттестуемыхСотрудников();
КонецПроцедуры

&НаКлиенте
Процедура ВидАттестацииПриИзменении(Элемент)
	ВидАттестацииПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	НачалоПериодаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	КонецПериодаПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСотрудникиСотрудники

&НаКлиенте
Процедура СотрудникиПриИзменении(Элемент)
	ЗарплатаКадрыРасширенныйКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСотрудникПриИзменении(Элемент)
	СотрудникиСотрудникПриИзмененииНаСервере(Элементы.Сотрудники.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	ДобавитьВыбранныхСотрудников(ПараметрыПеретаскивания.Значение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПослеУдаления(Элемент)
	ОтметитьСотрудниковКоторымНазначенаАттестация(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыАттестуемыеСотрудники

&НаКлиенте
Процедура АттестуемыеСотрудникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДобавитьВыбранныхСотрудников(ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриПолученииДанныхНаСервере

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	ЗарплатаКадры.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтаФорма);
	ЗарплатаКадрыРасширенныйКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	ОбновитьДополнительныеДанныеФормы();
	НастроитьФормуПоВидуАттестации();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДополнительныеДанныеФормы()
	ОбновитьТипАттестации();
	ОбновитьАттестуемыхСотрудников();
	ОтметитьСотрудниковКоторымНазначенаАттестация(ЭтотОбъект);
КонецПроцедуры	

#КонецОбласти

#Область СерверныеОбработчикиСобытийФормы

&НаСервере
Процедура ВидАттестацииПриИзмененииНаСервере()
	ОбновитьТипАттестации();
	НастроитьФормуПоВидуАттестации();
	ОбновитьАттестуемыхСотрудников();
КонецПроцедуры

&НаСервере
Процедура НачалоПериодаПриИзмененииНаСервере()
	ОбновитьАттестуемыхСотрудников();
КонецПроцедуры

&НаСервере
Процедура КонецПериодаПриИзмененииНаСервере()
	ОбновитьАттестуемыхСотрудников();
КонецПроцедуры

&НаСервере
Процедура СотрудникиСотрудникПриИзмененииНаСервере(ИдентификаторСтроки)
	
	Строка 					= Объект.Сотрудники.НайтиПоИдентификатору(ИдентификаторСтроки);
	Строка.Подразделение 	= Неопределено;
	Строка.Должность 		= Неопределено;
	
	Если ЗначениеЗаполнено(Строка.Сотрудник) Тогда
		КадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Строка.Сотрудник), "Подразделение, Должность");	
		Если КадровыеДанныеСотрудника.Количество() > 0 Тогда
			Строка.Подразделение 	= КадровыеДанныеСотрудника[0].Подразделение;
			Строка.Должность 		= КадровыеДанныеСотрудника[0].Должность;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОтрисовкаФормы

#Область НастроитьФормуПоВидуАттестации

&НаСервере
Процедура НастроитьФормуПоВидуАттестации()
	
	НастроитьФормуПоТипуАттестации();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоТипуАттестации()
	
	УстановитьВидимостьДолжности();
	УстановитьВидимостьСпециальности();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДолжности()
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "СотрудникиДолжность", "Видимость", ТипАттестацииИспользуетДолжность);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "АттестуемыеСотрудникиДолжность", "Видимость", ТипАттестацииИспользуетДолжность);
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСпециальности()
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "СотрудникиСпециальность", "Видимость", ТипАттестацииИспользуетСпециальность);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "СотрудникиКатегория", "Видимость", ТипАттестацииИспользуетСпециальность);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "АттестуемыеСотрудникиСпециальность", "Видимость", ТипАттестацииИспользуетСпециальность);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "АттестуемыеСотрудникиКатегория", "Видимость", ТипАттестацииИспользуетСпециальность);
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область КлючевыеРеквизитыЗаполненияФормы

// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	Массив = Новый Массив;
	Массив.Добавить("Объект.Сотрудники");
	Возврат Массив
КонецФункции 

// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация",					Нстр("ru = 'организации'")));
	Возврат Массив
КонецФункции

#КонецОбласти

&НаСервере
Процедура ОбновитьАттестуемыхСотрудников()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) 
		Или НЕ ЗначениеЗаполнено(Объект.ВидАттестации)  Тогда
		Возврат;
	КонецЕсли; 
	
	СотрудникиПодлежащиеАттестации = АттестацииСотрудников.СотрудникиПодлежащиеАттестации(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.ВидАттестации), Объект.Организация, Объект.НачалоПериода, Объект.КонецПериода);
	
	АттестуемыеСотрудники.Загрузить(СотрудникиПодлежащиеАттестации);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыбранныхСотрудников(МассивСтрок, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Для каждого Строка Из МассивСтрок Цикл
		Если ТипЗнч(Строка) = Тип("Число") Тогда
			СтрокаАттестуемого = АттестуемыеСотрудники.НайтиПоИдентификатору(Строка);
		Иначе
			СтрокаАттестуемого = Строка;
		КонецЕсли;
		
		// Если аттестация уже назначена - пропускаем его.
		Если СтрокаАттестуемого.АттестацияНазначена Тогда
			Продолжить;
		КонецЕсли;

		НоваяСтрока 									= Объект.Сотрудники.Добавить();
		НоваяСтрока.Сотрудник 							= СтрокаАттестуемого.Сотрудник;
		НоваяСтрока.Подразделение 						= СтрокаАттестуемого.Подразделение;
		НоваяСтрока.Должность 							= СтрокаАттестуемого.Должность;
		НоваяСтрока.Специальность 						= СтрокаАттестуемого.Специальность;
		НоваяСтрока.Категория 							= СтрокаАттестуемого.Категория;
		
	КонецЦикла;
	
	ОтметитьСотрудниковКоторымНазначенаАттестация(ЭтотОбъект);	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтметитьСотрудниковКоторымНазначенаАттестация(Форма)
	
	Если Форма.АттестуемыеСотрудники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	Для каждого АттестуемыйСотрудник Из Форма.АттестуемыеСотрудники Цикл
		АттестуемыйСотрудник.АттестацияНазначена = Неопределено;
		
		СтрокаСотрудника = Неопределено;
		
		Для каждого Строка Из Форма.Объект.Сотрудники Цикл
			Если Строка.Сотрудник = АттестуемыйСотрудник.Сотрудник 
				И ((Форма.ТипАттестацииИспользуетСпециальность И Строка.Специальность = АттестуемыйСотрудник.Специальность) 
				ИЛИ (Форма.ТипАттестацииИспользуетДолжность И Строка.Должность = АттестуемыйСотрудник.Должность)) Тогда
				АттестуемыйСотрудник.АттестацияНазначена = Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТипАттестации()
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидАттестации)  Тогда
		Возврат;
	КонецЕсли; 
	
	ТипАттестации = АттестацииСотрудников.ТипАттестации(Объект.ВидАттестации);
	ТипАттестацииИспользуетСпециальность = ТипАттестации = Перечисления.ТипыАттестацииСотрудников.ПодтверждениеКвалификацииПоСпециальности;
	ТипАттестацииИспользуетДолжность = ТипАттестации = Перечисления.ТипыАттестацииСотрудников.ПодтверждениеСоответствияДолжности;
	
КонецПроцедуры

#КонецОбласти
