#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПереносОтпуска;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическоеЛицоВШапке(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

Функция ДобавитьКомандыСозданияДокументов(КомандыСозданияДокументов, ДополнительныеПараметры) Экспорт
	
	ЗарплатаКадрыРасширенный.ДобавитьВКоллекциюКомандуСозданияДокументаПоМетаданнымДокумента(
		КомандыСозданияДокументов, Метаданные.Документы.ПереносОтпуска);
	
КонецФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ОснованиеПереноса";
	КомандаПечати.Представление = НСтр("ru = 'Заявление/Уведомление о переносе отпуска'");

КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОснованиеПереноса") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОснованиеПереноса", НСтр("ru='Основание переноса'"), ПечатьОснования(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьОснования(МассивОбъектов, ОбъектыПечати)
	
	НастройкиПечатныхФорм = ЗарплатаКадрыПовтИсп.НастройкиПечатныхФорм();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОснованиеПереносаОтпуска";
	
	МакетЗаявления = УправлениеПечатью.МакетПечатнойФормы("Документ.ПереносОтпуска.ПФ_MXL_ЗаявлениеНаПереносОтпуска");
	ОбластьЗаявления = МакетЗаявления.ПолучитьОбласть("Заявление");
	МакетПредложения = УправлениеПечатью.МакетПечатнойФормы("Документ.ПереносОтпуска.ПФ_MXL_ПредложениеОПереносеОтпуска");
	ОбластьПредложения = МакетПредложения.ПолучитьОбласть("Предложение");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПереносОтпуска.Ссылка КАК Ссылка,
	|	ПереносОтпуска.Номер КАК НомерДок,
	|	ПереносОтпуска.Дата КАК ДатаДок,
	|	ПереносОтпуска.Сотрудник,
	|	ПереносОтпуска.ИсходнаяДатаНачала,
	|	ПереносОтпуска.ДатаНачала,
	|	ПереносОтпуска.ДатаОкончания,
	|	ПереносОтпуска.ВидОтпуска,
	|	ЕСТЬNULL(ПереносОтпуска.ВидОтпуска.Наименование, """") КАК НаименованиеОтпуска,
	|	ПереносОтпуска.ПереносПоИнициативеСотрудника,
	|	ПереносОтпуска.ПричинаПереноса,
	|	ПереносОтпуска.Организация,
	|	ПереносОтпуска.Дата КАК Период,
	|	ВЫБОР
	|		КОГДА Организации.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА Организации.Наименование
	|		ИНАЧЕ Организации.НаименованиеПолное
	|	КОНЕЦ КАК НаименованиеОрганизацииПолное,
	|	ВЫБОР
	|		КОГДА Организации.НаименованиеСокращенное ПОДОБНО """"
	|			ТОГДА Организации.Наименование
	|		ИНАЧЕ Организации.НаименованиеСокращенное
	|	КОНЕЦ КАК НаименованиеОрганизацииСокращенное,
	|	ВЫБОР
	|		КОГДА ПереносОтпуска.ВидОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыОтпусков.Основной)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОсновнойОтпуск,
	|	ПереносОтпуска.Руководитель,
	|	ПереносОтпуска.ДолжностьРуководителя
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ПереносОтпуска КАК ПереносОтпуска
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПереносОтпуска.Организация = Организации.Ссылка
	|ГДЕ
	|	ПереносОтпуска.Ссылка В(&МассивОбъектов)";
				   
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		"ВТДанныеДокумента");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "ФИОПолные,Фамилия,Имя,Отчество,Пол,ИОФамилия,Должность");
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТДанныеДокумента",
		"Руководитель,Период");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФИОПолные,ИОФамилия,Фамилия,Имя,Отчество,Пол");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.НомерДок,
	|	ДанныеДокумента.ДатаДок,
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.ИсходнаяДатаНачала,
	|	ДанныеДокумента.ДатаНачала,
	|	ДанныеДокумента.ДатаОкончания,
	|	ДанныеДокумента.ВидОтпуска,
	|	ДанныеДокумента.НаименованиеОтпуска,
	|	ДанныеДокумента.ПереносПоИнициативеСотрудника,
	|	ДанныеДокумента.ПричинаПереноса,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.НаименованиеОрганизацииПолное,
	|	ДанныеДокумента.НаименованиеОрганизацииСокращенное,
	|	ДанныеДокумента.ЭтоОсновнойОтпуск,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.Фамилия, """") КАК Фамилия,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.Имя, """") КАК Имя,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.Отчество, """") КАК Отчество,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.ФИОПолные, """") КАК ФИОПолные,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.Должность, ЗНАЧЕНИЕ(Справочник.Должности.Пустаяссылка)) КАК Должность,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.Пол, ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)) КАК Пол,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.ИОФамилия, """") КАК СотрудникРасшифровкаПодписи,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.ФИОПолные, """") КАК ФИОРуководителя,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.ИОФамилия, """") КАК РуководительРасшифровкаПодписи,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.Фамилия, """") КАК РуководительФамилия,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.Имя, """") КАК РуководительИмя,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.Отчество, """") КАК РуководительОтчество,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.Пол, ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)) КАК ПолРуководителя,
	|	ДанныеДокумента.Руководитель КАК Руководитель,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.ДолжностьРуководителя) КАК ДолжностьРуководителя
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО ДанныеДокумента.Руководитель = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|			И ДанныеДокумента.Период = КадровыеДанныеФизическихЛиц.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО ДанныеДокумента.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|			И ДанныеДокумента.Период = КадровыеДанныеСотрудников.Период";
	
	Выборка = Запрос.Выполнить().Выбрать();			   
	ФИОРуководителейВДательномПадеже = Новый Соответствие;
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл 
		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда 
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Выборка.ПереносПоИнициативеСотрудника Тогда
			
			ОбластьЗаявления.Параметры.Заполнить(Выборка);
			ФИОСотрудникаРодительный = "";
			ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(Выборка.ФИОПолные), 2, ФИОСотрудникаРодительный, Выборка.Пол);
			ОбластьЗаявления.Параметры.ФИОПолноеВРодительномПадеже = ФИОСотрудникаРодительный;
			ФИОРуководителяВДательномПадеже = ФИОРуководителейВДательномПадеже[Выборка.Организация];
			Если ФИОРуководителяВДательномПадеже = Неопределено Тогда
				
				СтруктураФИО = Новый Структура("Фамилия,Имя,Отчество");
				СтруктураФИО.Фамилия = Выборка.РуководительФамилия;
				СтруктураФИО.Имя = Выборка.РуководительИмя;
				СтруктураФИО.Отчество = Выборка.РуководительОтчество;
				
				ФизическиеЛицаЗарплатаКадры.Просклонять(СтруктураФИО.Фамилия, 3, СтруктураФИО.Фамилия, Выборка.ПолРуководителя);
				ФИОРуководителяВДательномПадеже = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(СтруктураФИО);
				ФИОРуководителейВДательномПадеже.Вставить(Выборка.Организация,ФИОРуководителяВДательномПадеже);
				
			КонецЕсли;
			ОбластьЗаявления.Параметры.ФИОРуководителяВДательномПадеже = ФИОРуководителяВДательномПадеже;
			ОписаниеОтпуска = ?(Выборка.ЭтоОсновнойОтпуск, "основной", "дополнительный" + ?(ЗначениеЗаполнено(Выборка.НаименованиеОтпуска),""," (" + НРег(Выборка.НаименованиеОтпуска) + ")"));
			ОбластьЗаявления.Параметры.ОписаниеОтпуска = ОписаниеОтпуска;
			ОбластьЗаявления.Параметры.ДатаНачала = Формат(ОбластьЗаявления.Параметры.ДатаНачала,"ДЛФ=DD");
			ОбластьЗаявления.Параметры.ДатаОкончания = Формат(ОбластьЗаявления.Параметры.ДатаОкончания,"ДЛФ=DD");
			
			Если НастройкиПечатныхФорм.УдалятьПрефиксыОрганизацииИИБИзНомеровКадровыхПриказов Тогда
				ОбластьЗаявления.Параметры.НомерДок = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ОбластьЗаявления.Параметры.НомерДок, Истина, Истина);
			КонецЕсли; 
			
			ТабличныйДокумент.Вывести(ОбластьЗаявления);
			
		Иначе
			
			ОбластьПредложения.Параметры.Заполнить(Выборка);
			
			СтруктураФИО = Новый Структура("Фамилия,Имя,Отчество");
			ЗаполнитьЗначенияСвойств(СтруктураФИО, Выборка);
			
			ФизическиеЛицаЗарплатаКадры.Просклонять(СтруктураФИО.Фамилия, 3, СтруктураФИО.Фамилия, Выборка.Пол);
			ОбластьПредложения.Параметры.ФИОПолноеВДательномПадеже = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(СтруктураФИО);
			Если Выборка.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
				ОбластьПредложения.Параметры.ОкончаниеКраткогоПрилагательного = "а";
				ОбластьПредложения.Параметры.ОкончаниеПолногоПрилагательного = "ая";
				ОбластьПредложения.Параметры.СклонениеСогласенСогласна = НСтр("ru = 'согласна'");
			Иначе	
				ОбластьПредложения.Параметры.ОкончаниеПолногоПрилагательного = "ый";
				ОбластьПредложения.Параметры.СклонениеСогласенСогласна = НСтр("ru = 'согласен'");
			КонецЕсли;
			ОбластьПредложения.Параметры.ИсходнаяДатаНачала = Формат(ОбластьПредложения.Параметры.ИсходнаяДатаНачала,"ДЛФ=DD");
			ОбластьПредложения.Параметры.ДатаНачала = Формат(ОбластьПредложения.Параметры.ДатаНачала,"ДЛФ=DD");
			
			Если НастройкиПечатныхФорм.УдалятьПрефиксыОрганизацииИИБИзНомеровКадровыхПриказов Тогда
				ОбластьПредложения.Параметры.НомерДок = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ОбластьПредложения.Параметры.НомерДок, Истина, Истина);
			КонецЕсли; 
			
			ТабличныйДокумент.Вывести(ОбластьПредложения);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

// Проверяет, что сотрудник, указанный в документе работает в период отсутствия.
//
// Параметры:
//		ДокументОбъект	- ДокументОбъект.ПереносОтпуска
//		Отказ			- Булево
//
Процедура ПроверитьРаботающих(ДокументОбъект, Отказ) Экспорт
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоВременнойТаблице();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 				= ДокументОбъект.Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода				= ДокументОбъект.ДатаНачала;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода			= ДокументОбъект.ДатаОкончания;
	ПараметрыПолученияСотрудниковОрганизаций.РаботникиПоДоговорамГПХ 	= Неопределено;
	
	КадровыйУчет.ПроверитьРаботающихСотрудников(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументОбъект.Сотрудник),
		ПараметрыПолученияСотрудниковОрганизаций,
		Отказ,
		Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "Сотрудник", "Объект"));
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
