#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьПраваНаПроведение(Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ДатаПриема = ТекущаяДатаСеанса();
	ОбъектОснование = ДанныеЗаполнения;
	
	Если ТипЗнч(ОбъектОснование) = Тип("СправочникСсылка.Кандидаты") Тогда
		
		Если ПолучитьФункциональнуюОпцию("ОткрытиеВакансииТребуетСогласования") Тогда
			
			СостояниеКандидата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектОснование, "Состояние");
			Если СостояниеКандидата <> Перечисления.СостоянияСогласования.Согласовано Тогда
				ВызватьИсключение НСтр("ru = 'Ввод на основании несогласованного кандидата невозможен.'");
			КонецЕсли;
			
		КонецЕсли;
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектОснование, "ФизическоеЛицо, Позиция");
		
		ФизическоеЛицо = ЗначенияРеквизитов.ФизическоеЛицо;
		ДолжностьПоШтатномуРасписанию = ЗначенияРеквизитов.Позиция;
		Организация = ДолжностьПоШтатномуРасписанию.Владелец;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	АдаптацияУвольнение.СформироватьДвиженияМероприятияАдаптацииУвольненияПоДокументу(Движения, ДанныеДляПроведения.ДанныеМероприятийАдаптацииУвольнения);
	АдаптацияУвольнение.ЗарегистрироватьДокументДляОбновленияЗаданийАдаптацииУвольнения(Движения);
	
	Если ЗапланироватьПрограммуОбучения Тогда
		ОбучениеРазвитие.СформироватьДвиженияПланаПоСотрудникам(Движения, ДанныеДляПроведения.ПлановыеДвиженияСотрудников);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаПриема, "Объект.ДатаПриема", Отказ, НСтр("ru='Дата приема'"), , , Ложь);
	
	АдаптацияУвольнение.ПроверитьЗаполнениеМероприятийАдаптацииВРешенииОПриеме(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	Если Не Отказ Тогда
		АдаптацияУвольнение.ПроверитьНаличиеДубляДокумента(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ОбучениеРазвитие.ПроверитьЗаполнениеПрограммыОбученияВРешенииОПриеме(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	АдаптацияУвольнение.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	АдаптацияУвольнение.ПриЗаписи(ЭтотОбъект, Отказ)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене.
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадрыРасширенный.ОграниченияРегистрацииПоОрганизацииИПодразделению(ЭтотОбъект, Организация, , ДолжностьПоШтатномуРасписанию);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемНаРаботу.ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
	|	Мероприятия.Мероприятие,
	|	Мероприятия.ДатаНачала,
	|	Мероприятия.ДатаОкончания,
	|	Мероприятия.Исполнитель
	|ИЗ
	|	Документ.РешениеОПриемеНаРаботу.МероприятияАдаптацииУвольнения КАК Мероприятия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РешениеОПриемеНаРаботу КАК ПриемНаРаботу
	|		ПО Мероприятия.Ссылка = ПриемНаРаботу.Ссылка
	|ГДЕ
	|	Мероприятия.Ссылка = &Ссылка";
		
	ДанныеМероприятий = Запрос.Выполнить().Выгрузить();
	ДанныеМероприятий.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.СобытияАдаптацииУвольнения.Тип));
	ДанныеМероприятий.ЗаполнитьЗначения(Ссылка, "ДокументОснование");
	
	ДанныеДляПроведения = Новый Структура;
	ДанныеДляПроведения.Вставить("ДанныеМероприятийАдаптацииУвольнения", ДанныеМероприятий);
	ДанныеДляПроведения.Вставить("ПлановыеДвиженияСотрудников", ДанныеДляПроведенияПланОбученияСотрудников());
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Функция ДанныеДляПроведенияПланОбученияСотрудников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Подразделение КАК Подразделение,
		|	РешениеОПриемеНаРаботуПрограммаОбучения.Мероприятие КАК Мероприятие,
		|	РешениеОПриемеНаРаботуПрограммаОбучения.Ссылка.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РешениеОПриемеНаРаботуПрограммаОбучения.ДатаНачала КАК ДатаНачала,
		|	РешениеОПриемеНаРаботуПрограммаОбучения.ДатаОкончания КАК ДатаОкончания,
		|	РешениеОПриемеНаРаботуПрограммаОбучения.Ответственный КАК Ответственный,
		|	РешениеОПриемеНаРаботуПрограммаОбучения.Мероприятие.КоличествоУчебныхЧасов КАК КоличествоУчебныхЧасов
		|ИЗ
		|	Документ.РешениеОПриемеНаРаботу.ПрограммаОбучения КАК РешениеОПриемеНаРаботуПрограммаОбучения
		|ГДЕ
		|	РешениеОПриемеНаРаботуПрограммаОбучения.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Подразделение", ОрганизационнаяСтруктура.МестоПозицииВСтруктуреПредприятия(ДолжностьПоШтатномуРасписанию));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();

КонецФункции

Процедура ПроверитьПраваНаПроведение(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ПравоДоступа("Добавление", Метаданные.Документы.РешениеОПриемеНаРаботу)  Тогда
		
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение И Не Проведен Тогда
			Отказ = Истина;
			ВызватьИсключение(НСтр("ru = 'Нет прав на проведение непроведенного документа.'"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
