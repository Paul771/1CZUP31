#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОбучениеРазвитиеСотрудников") Тогда
		Основание = ДанныеЗаполнения;
		СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Мероприятие, ДатаНачала, ДатаОкончания, СуммаРасходов");
		Мероприятие = СтруктураРеквизитов.Мероприятие;
		ДатаНачалаУчебы = СтруктураРеквизитов.ДатаНачала;
		ДатаОкончанияУчебы = СтруктураРеквизитов.ДатаОкончания;
		
		ЗаполнитьРеквизитыМероприятия();
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.МероприятияОбученияРазвития") Тогда
		
		Мероприятие = ДанныеЗаполнения;
		ЗаполнитьРеквизитыМероприятия();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = Документы.УченическийДоговор.ПолучитьДанныеДляПроведения(Ссылка);
	
	ОбучениеРазвитие.СформироватьДвиженияУсловийУченическогоДоговора(Движения,ДанныеДляПроведения.ДвиженияУсловийУченическогоДоговора);

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИФизическомуЛицу(ЭтотОбъект, Организация, ФизическоеЛицо, ДатаНачалаОбязательств);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРеквизитыМероприятия()

	Квалификация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Мероприятие, "Квалификация");
	ЗаполнитьОбязательстваИзМероприятия();

КонецПроцедуры

Процедура ЗаполнитьОбязательстваИзМероприятия()

	Обязательства.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МероприятияОбученияРазвитияОбязательства.ПериодРаботы,
		|	МероприятияОбученияРазвитияОбязательства.Сумма
		|ИЗ
		|	Справочник.МероприятияОбученияРазвития.Обязательства КАК МероприятияОбученияРазвитияОбязательства
		|ГДЕ
		|	МероприятияОбученияРазвитияОбязательства.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Мероприятие);
	
	Обязательства.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Обязательства.Количество() = 0 Тогда
		ДатаОкончанияОбязательств = ДатаНачалаОбязательств;
	Иначе
		ПериодРаботы = 0;
		Для каждого Обязательство Из Обязательства Цикл
			ПериодРаботы = Макс(ПериодРаботы, Обязательство.ПериодРаботы);
		КонецЦикла; 
		ДатаОкончанияОбязательств = ?(ПериодРаботы = 0, '00010101', НачалоДня(ДобавитьМесяц(ДатаНачалаОбязательств, ПериодРаботы)) - 1);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаУчебы, "Объект.ДатаНачалаУчебы", Отказ, НСтр("ru='Начало учебы'"), , , Ложь);
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаОбязательств, "Объект.ДатаНачалаОбязательств", Отказ, НСтр("ru='Дата начала обязательств'"), , , Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли