#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		// Начальное заполнение
		ЗначенияДляЗаполнения = Новый Структура("Ответственный", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Если ЗначениеЗаполнено(Объект.ДатаОкончанияУчебы) Тогда
			Объект.ДатаНачалаОбязательств = Объект.ДатаОкончанияУчебы;
		Иначе
			Объект.ДатаНачалаОбязательств = Объект.Дата;
		КонецЕсли;
		
	Иначе
		ЗаполнитьДанныеФормыПоОрганизации();
	КонецЕсли;
	
	ЗаполнитьВторичныеДанныеФормы();
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьВторичныеДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УченическийДоговор", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачалаОбязательствПриИзменении(Элемент)
	
	Для каждого Обязательство Из Объект.Обязательства Цикл
		Обязательство.ДатаОкончания = НачалоДня(ДобавитьМесяц(Объект.ДатаНачалаОбязательств, Обязательство.ПериодРаботы))-1;
	КонецЦикла; 
	
	ВычислитьДатуОкончанияОбязательств();
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Мероприятие) Тогда
		ЗаполнитьПоОснованиюМероприятию();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Основание) Тогда
		ЗаполнитьПоОснованиюДокументу();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовПодвалаФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбязательства

&НаКлиенте
Процедура ОбязательстваПроцентПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Обязательства.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Процент * СтоимостьМероприятия / 100;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбязательстваСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Обязательства.ТекущиеДанные;
	
	Если СтоимостьМероприятия > 0 Тогда
		ТекущиеДанные.Процент = Окр(ТекущиеДанные.Сумма / СтоимостьМероприятия * 100, 2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбязательстваПриАктивизацииСтроки(Элемент)
	ОбновитьНадпись();
КонецПроцедуры

&НаКлиенте
Процедура ОбязательстваПериодРаботыПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Обязательства.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ДатаОкончания = НачалоДня(ДобавитьМесяц(Объект.ДатаНачалаОбязательств, ТекущиеДанные.ПериодРаботы))-1;
	
	ВычислитьДатуОкончанияОбязательств();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбязательстваПослеУдаления(Элемент)
	ВычислитьДатуОкончанияОбязательств();
КонецПроцедуры

&НаКлиенте
Процедура ОбязательстваПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Обязательства.Сортировать("ПериодРаботы");
	
	ВычислитьДатуОкончанияОбязательств();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВычислитьДатуОкончанияОбязательств()

	Если Объект.Обязательства.Количество() = 0 Тогда
		Объект.ДатаОкончанияОбязательств = Объект.ДатаНачалаОбязательств;
	Иначе
		ПоследняяСтрока = Объект.Обязательства[Объект.Обязательства.Количество()-1];
		Объект.ДатаОкончанияОбязательств = ПоследняяСтрока.ДатаОкончания;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованиюДокументу()

	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоОснованиюДокументуЗавершение",ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Данные договора будут заполнены из документа основания. Продолжить?'"), РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованиюДокументуЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоОснованиюНаСервере(Объект.Основание);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованиюМероприятию()

	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоОснованиюМероприятиюЗавершение",ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Данные договора будут заполнены из мероприятия. Продолжить?'"), РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованиюМероприятиюЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоОснованиюНаСервере(Объект.Мероприятие);
		ПересчитатьСуммыВОбязательствах();
		ВычислитьДатуОкончанияОбязательств();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадпись()
	
	ТекущаяСтрока = Элементы.Обязательства.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено  И (ТекущаяСтрока.ПериодРаботы + ТекущаяСтрока.Сумма) > 0 Тогда
		НадписьПояснение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В случае увольнения после обучения без уважительных причин до %1 мес. сотрудник обязан возместить расходы, понесенные работодателем на его обучение в сумме %2 руб.'"), ТекущаяСтрока.ПериодРаботы, ТекущаяСтрока.Сумма);
	Иначе
		НадписьПояснение = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммыВОбязательствах()

	Для каждого Обязательство Из Объект.Обязательства Цикл
		Обязательство.Сумма = Обязательство.Процент * СтоимостьМероприятия/ 100;
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	ЗаполнитьДанныеФормыПоОрганизации();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПоОрганизации()
	
	ЗапрашиваемыеЗначения = Новый Структура;
	ЗапрашиваемыеЗначения.Вставить("Организация", "Объект.Организация");
	
	ЗапрашиваемыеЗначения.Вставить("Руководитель", "Объект.Руководитель");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьРуководителя", "Объект.ДолжностьРуководителя");
	
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗапрашиваемыеЗначения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВторичныеДанныеФормы()
	
	ЗаполнитьРеквизитыФормыПоМероприятию();
	ЗаполнитьДополнительныеРеквизитыОбязательств();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДополнительныеРеквизитыОбязательств()

	Для каждого Обязательство Из Объект.Обязательства Цикл
		Обязательство.Процент = ?(СтоимостьМероприятия = 0, 0, Окр(Обязательство.Сумма/СтоимостьМероприятия*100,2));
		Обязательство.ДатаОкончания = 
			НачалоДня(ДобавитьМесяц(Объект.ДатаНачалаОбязательств, Обязательство.ПериодРаботы))-1;
	КонецЦикла; 

	Объект.Обязательства.Сортировать("ПериодРаботы");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОснованиюНаСервере(Ссылка)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(Ссылка);
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	
	ЗаполнитьВторичныеДанныеФормы();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПоМероприятию()
	СтоимостьМероприятия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Мероприятие, "Стоимость");
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	ЗаполнитьВторичныеДанныеФормы();
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
