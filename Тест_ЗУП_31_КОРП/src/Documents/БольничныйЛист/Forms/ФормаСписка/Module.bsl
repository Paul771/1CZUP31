
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Параметры.Свойство("РежимВыбораПервичногоБольничногоЛиста") 
		И Параметры.РежимВыбораПервичногоБольничногоЛиста Тогда
		
		Элементы.Список.РежимВыбора = Истина;
		
		СписокИсключаемых = Новый СписокЗначений;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БольничныйЛист.ПервичныйБольничныйЛист КАК Ссылка
		|ИЗ
		|	Документ.БольничныйЛист КАК БольничныйЛист
		|ГДЕ
		|	БольничныйЛист.Ссылка <> &ТекущийДокумент
		|	И (&Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ИЛИ БольничныйЛист.Организация = &Организация)
		|	И (&Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ИЛИ БольничныйЛист.Сотрудник = &Сотрудник)
		|	И (&ФизическоеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|			ИЛИ БольничныйЛист.ФизическоеЛицо = &ФизическоеЛицо)
		|	И БольничныйЛист.ПервичныйБольничныйЛист <> ЗНАЧЕНИЕ(Документ.БольничныйЛист.ПустаяСсылка)
		|	И БольничныйЛист.ПометкаУдаления = ЛОЖЬ";
		Если Параметры.Отбор.Свойство("Организация") Тогда
			Запрос.УстановитьПараметр("Организация", Параметры.Отбор.Организация);
		Иначе
			Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПустаяСсылка());
		КонецЕсли;
		Если Параметры.Отбор.Свойство("Сотрудник") Тогда
			Запрос.УстановитьПараметр("Сотрудник", Параметры.Отбор.Сотрудник);
		Иначе	
			Запрос.УстановитьПараметр("Сотрудник", Справочники.Сотрудники.ПустаяСсылка());
		КонецЕсли;
		Если Параметры.Отбор.Свойство("ФизическоеЛицо") Тогда
			Запрос.УстановитьПараметр("ФизическоеЛицо", Параметры.Отбор.ФизическоеЛицо);
		Иначе	
			Запрос.УстановитьПараметр("ФизическоеЛицо", Справочники.ФизическиеЛица.ПустаяСсылка());
		КонецЕсли;
		Если Параметры.Свойство("ТекущийДокумент") Тогда
			Запрос.УстановитьПараметр("ТекущийДокумент", Параметры.ТекущийДокумент);
		Иначе	
			Запрос.УстановитьПараметр("ТекущийДокумент", Документы.БольничныйЛист.ПустаяСсылка());
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		МассивИсключаемых = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		СписокИсключаемых.ЗагрузитьЗначения(МассивИсключаемых);
		Если Параметры.Свойство("ТекущийДокумент") Тогда
			СписокИсключаемых.Добавить(Параметры.ТекущийДокумент);
		КонецЕсли;	
		
		Если СписокИсключаемых.Количество() > 0 Тогда
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеВСписке;
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Ссылка");
			ЭлементОтбора.ПравоеЗначение 	= СписокИсключаемых;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ПометкаУдаления");
		ЭлементОтбора.ПравоеЗначение 	= Ложь;
			
	ИначеЕсли Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаУтвердить", "Видимость", Пользователи.РолиДоступны("ДобавлениеИзменениеНачисленнойЗарплатыРасширенная"));
	ЗарплатаКадрыРасширенный.УстановитьУсловноеОформлениеСпискаМногофункциональныхДокументов(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанельФормы;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ОткрытиеФормыДокументаБольничныйЛист");
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьДоступностьКомандыУтвердитьВМногофункциональныхДокументах(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ОткрытиеФормыНовогоДокументаБольничныйЛист");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Утвердить(Команда)
	
	ЗарплатаКадрыРасширенныйКлиент.УтвердитьВыделенныеМногофункциональныеДокументы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти
