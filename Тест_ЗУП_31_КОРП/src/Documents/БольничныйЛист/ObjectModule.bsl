#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// В качестве данных заполнения может принимать структуру с полями.
//		Ссылка
//		Действие
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Действие") И ДанныеЗаполнения.Действие = "Исправить" Тогда
			
			ИсправлениеДокументовЗарплатаКадры.СкопироватьДокумент(ЭтотОбъект, 
			ДанныеЗаполнения.Ссылка, 
			"ДокументРассчитан", 
			"Начисления,НачисленияПерерасчет,НачисленияПерерасчетНулевыеСторно,
			|НДФЛ,ОтработанноеВремяДляСреднегоФСС,
			|ПогашениеЗаймов,Показатели,ПримененныеВычетыНаДетейИИмущественные,
			|РаспределениеРезультатовНачислений,РаспределениеРезультатовУдержаний,
			|СреднийЗаработокДанныеСтрахователей,СреднийЗаработокФСС,Удержания",
			ДанныеЗаполнения);
			
			ИсправленныйДокумент = ДанныеЗаполнения.Ссылка;
			
			ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);
			
		Иначе
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
			ЭтотОбъект.ДатаНачалаСобытия = ЭтотОбъект.ДатаНачала;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.БольничныйЛист") Тогда
		ЭтотОбъект.ЯвляетсяПродолжениемБолезни = Истина;
		ЭтотОбъект.ПервичныйБольничныйЛист = ДанныеЗаполнения;
		ЗаполнитьПоПервичномуБольничномуЛисту(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПрогулНеявка") Тогда
		ДанныеОтсутствия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Сотрудник,Организация,ФизическоеЛицо,ДатаНачала,ДатаОкончания");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеОтсутствия);
		ЭтотОбъект.ДатаНачалаСобытия = ЭтотОбъект.ДатаНачала;
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.ОбработкаЗаполненияМногофункциональногоДокумента(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Документы.БольничныйЛист.ПровестиПоУчетам(Ссылка, РежимПроведения, Отказ, Неопределено, Движения, ЭтотОбъект, ДополнительныеСвойства)
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачала, "Объект.ДатаНачала", Отказ,
		НСтр("ru='Дата освобождения от работы'"));
	
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком Тогда
		
		Если ЗначениеЗаполнено(РодственникЗаКоторымОсуществляетсяУход1) Тогда
			
			ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаРодственник1, "Объект.ДатаНачалаРодственник1", Отказ,
				НСтр("ru='Начало периода болезни'"));
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РодственникЗаКоторымОсуществляетсяУход2) Тогда
			
			ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаРодственник2, "Объект.ДатаНачалаРодственник2", Отказ,
				НСтр("ru='Начало периода болезни'"));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НазначитьПособие И ЗначениеЗаполнено(ДатаНачалаОплаты) Тогда
		
		ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаОплаты, "Объект.ДатаНачалаОплаты", Отказ,
			НСтр("ru='Начало оплаты пособия'"));
		
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаСобытия, "Объект.ДатаНачалаСобытия", Отказ,
		НСтр("ru='Начало периода нетрудоспособности'"));
	
	Если ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
		
		ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНарушенияРежима, "Объект.ДатаНарушенияРежима", Отказ,
			НСтр("ru='Дата нарушения режима'"), ДатаНачалаСобытия, НСтр("ru='даты начала периода нетрудоспособности'"));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачалаПоловиннойОплаты) Тогда
		
		ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачалаПоловиннойОплаты, "Объект.ДатаНачалаПоловиннойОплаты", Отказ,
			НСтр("ru='Дата начала оплаты в размере'") + " 50%", ДатаНачалаСобытия, НСтр("ru='даты начала периода нетрудоспособности'"));
		
	КонецЕсли;
	
	КонтейнерОшибок = Неопределено;
	
	ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная") Тогда 
		
		ЗарплатаКадрыРасширенный.ПроверитьУтверждениеДокумента(ЭтотОбъект, Отказ);
		
		Если ДокументРассчитан Тогда
			
			ЗарплатаКадры.ПроверитьДатуВыплаты(ЭтотОбъект, Отказ);
			
			ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок);                                                                        
			
			ИсправлениеДокументовЗарплатаКадры.ПроверитьЗаполнение(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
			
			ПроверитьВыплатуПособийУчастникомПроектаПоПрямымВыплатамФСС(КонтейнерОшибок);	
			
			ПроверитьПериодДействияНачислений(Отказ);
			
			// Проверка корректности распределения по источникам финансирования
			ИменаТаблицРаспределяемыхПоСтатьямФинансирования = "Начисления,НачисленияПерерасчет,Удержания,НДФЛ,ПогашениеЗаймов,КорректировкиВыплаты";
			
			ОтражениеЗарплатыВБухучетеРасширенный.ПроверитьРезультатыРаспределенияНачисленийУдержанийОбъекта(
				ЭтотОбъект, ИменаТаблицРаспределяемыхПоСтатьямФинансирования, Отказ);
			
			// Проверка корректности распределения по территориям и условиям труда
			ИменаТаблицРаспределенияПоТерриториямУсловиямТруда = "Начисления,НачисленияПерерасчет";
			
			РасчетЗарплатыРасширенный.ПроверитьРаспределениеПоТерриториямУсловиямТрудаДокумента(
				ЭтотОбъект, ИменаТаблицРаспределенияПоТерриториямУсловиямТруда, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, Отказ);
	
	УдалитьПроверенныеРеквизиты(ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПерерасчетЗарплаты.УдалениеПерерасчетаПоРегистратору(Ссылка);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПрямыеВыплатыПособийСоциальногоСтрахования.ПередЗаписьюБольничного(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ЗаполнитьСотрудникаВТаблицахНачислений();
	
	ПредставлениеПериода = ЗарплатаКадрыРасширенный.ПредставлениеПериодаРасчетногоДокумента(ДатаНачала, ДатаОкончания);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПособиеВыплачиваетсяФСС = ПрямыеВыплатыПособийСоциальногоСтрахования.ПособиеПлатитУчастникПилотногоПроекта(Организация, ПериодРегистрации)
	И ПрямыеВыплатыПособийСоциальногоСтрахования.КоллекцияСодержитПособияЗаСчетФСС(Начисления.ВыгрузитьКолонку("Начисление"));
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗарплатаКадрыРасширенный.ПередЗаписьюМногофункциональногоДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	УчетСреднегоЗаработка.ЗаписатьДатуНачалаСобытия(Ссылка, Сотрудник, ДатаНачалаСобытия);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЦепочкиДокументов") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ЦепочкиДокументов");
		Модуль.УстановитьВторичныеРеквизитыДокументаЗамещения(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИСотруднику(ЭтотОбъект, Организация, Сотрудник, ПериодРегистрации);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроверкаЗаполненияДокумента

Функция ДокументГотовКРасчету(ВыводитьСообщения = Истина) Экспорт
	
	Если Не ВыводитьСообщения Тогда
		СообщенияДоНачалаПроверки = ПолучитьСообщенияПользователю(Истина);
	КонецЕсли;
	
	КонтейнерОшибок = Неопределено;
	
	ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок);
	
	ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок, Истина);                                                                        
	
	КонтейнерСодержитОшибки = Ложь;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, КонтейнерСодержитОшибки);
	
	Если Не ВыводитьСообщения Тогда
		
		ПолучитьСообщенияПользователю(Истина);		
		Для Каждого СообщениеПользователю Из СообщенияДоНачалаПроверки Цикл
			СообщениеПользователю.Сообщить();
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Не КонтейнерСодержитОшибки;	
	
КонецФункции

Процедура ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок)
	
	Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ТекстСообщения = НСтр("ru = 'Не указан период регистрации.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПериодРегистрации", ТекстСообщения, "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Не указана организация, по которой выполняется начисление.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Организация", ТекстСообщения, "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран сотрудник.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Сотрудник", ТекстСообщения, "");
	Иначе 
		ПроверитьВидЗанятостиСотрудника(КонтейнерОшибок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачала) И Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		ТекстСообщения = НСтр("ru = 'Не указаны даты освобождения от работы.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
	Иначе
		Если Не ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена дата начала освобождения от работы.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачала", ТекстСообщения, "");
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаОкончания) И ЗначениеЗаполнено(ДатаНачала) Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена дата окончания освобождения от работы.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) И ДатаНачала > ДатаОкончания Тогда
			ТекстСообщения = НСтр("ru = 'Дата окончания освобождения от работы не может быть меньше даты начала.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаНачалаСобытия) И ДатаНачала < ДатаНачалаСобытия Тогда
		ТекстСообщения = НСтр("ru = 'Дата начала периода отсутствия сотрудника не должна быть меньше даты начала события.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачала", ТекстСообщения, "");
	КонецЕсли;
	
	ИспользуетсяРасчетЗарплаты = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная");
	
	Если Не ЗначениеЗаполнено(ПричинаНетрудоспособности) Тогда
		ТекстСообщения = НСтр("ru = 'Не указана причина нетрудоспособности.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПричинаНетрудоспособности", ТекстСообщения, "");
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком
		И Не ЗначениеЗаполнено(СлучайУходаЗаБольнымРебенком)
		И ИспользуетсяРасчетЗарплаты Тогда
		ТекстСообщения = НСтр("ru = 'Не указан случай ухода за ребенком.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.СлучайУходаЗаБольнымРебенком", ТекстСообщения, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок, ПроверкаПередРасчетом = Ложь)
	
	Если Не ДокументРассчитан И Не ПроверкаПередРасчетом Тогда
		Возврат;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаНачалаСобытия) Тогда
		ТекстСообщения = НСтр("ru = 'Не указана дата начала нетрудоспособности.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаСобытия", ТекстСообщения, "");
	КонецЕсли;
	
	Если НазначитьПособие Тогда
		Если Не ЗначениеЗаполнено(ДатаНачалаОплаты) И Не ЗначениеЗаполнено(ДатаОкончанияОплаты) Тогда
			ТекстСообщения = НСтр("ru = 'Не указаны даты оплаты пособия.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаОплаты", ТекстСообщения, "");
		Иначе
			Если Не ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаОкончанияОплаты) Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнена дата начала оплаты пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДатаОкончанияОплаты) И ЗначениеЗаполнено(ДатаНачалаОплаты) Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнена дата окончания оплаты пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончанияОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаНачалаСобытия) И ДатаНачалаОплаты < ДатаНачалаСобытия Тогда
				ТекстСообщения = НСтр("ru = 'Дата назначения пособия не должна быть меньше даты начала события.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаНачала) И ДатаНачалаОплаты < ДатаНачала Тогда
				ТекстСообщения = НСтр("ru = 'Дата назначения пособия не должна быть меньше даты начала периода нетрудоспособности.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаОкончанияОплаты) И ДатаНачалаОплаты > ДатаОкончанияОплаты Тогда
				ТекстСообщения = НСтр("ru = 'Дата окончания оплаты пособия не должна быть меньше даты начала оплаты пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончанияОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаОкончанияОплаты) И ЗначениеЗаполнено(ДатаОкончания) И ДатаОкончания < ДатаОкончанияОплаты Тогда
				ТекстСообщения = НСтр("ru = 'Дата окончания оплаты пособия не должна быть больше даты окончания периода нетрудоспособности.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончанияОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаОкончания) И ДатаОкончания < ДатаНачалаОплаты Тогда
				ТекстСообщения = НСтр("ru = 'Дата окончания периода отсутствия сотрудника не должна быть меньше даты назначения пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ПроцентОплаты) Тогда
				ТекстСообщения = НСтр("ru = 'Не указан процент оплаты.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПроцентОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ОграничениеПособия) Тогда
				ТекстСообщения = НСтр("ru = 'Не указано ограничение пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "ОграничениеПособия", ТекстСообщения, "");
			КонецЕсли;
			
			Если ПрименятьЛьготыПриНачисленииПособия И Не ЗначениеЗаполнено(ФинансированиеФедеральнымБюджетом) Тогда
				ТекстСообщения = НСтр("ru = 'Не указан вид льготы используемой при начислении пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ФинансированиеФедеральнымБюджетом", ТекстСообщения, "");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВидОплатыПособия) Тогда
				ТекстСообщения = НСтр("ru = 'Не указан вид расчета для начисления пособия.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидОплатыПособия", ТекстСообщения, "");
			КонецЕсли;	
			
			КоличествоДнейЗаСчетРаботодателя = УчетПособийСоциальногоСтрахованияКлиентСервер.КоличествоДнейЗаСчетРаботодателя(ДатаНачалаСобытия);
			ДлинаСуток = УчетПособийСоциальногоСтрахованияКлиентСервер.ДлинаСуток();
			Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание
				И ЗначениеЗаполнено(ДатаНачалаОплаты)
				И ДатаНачалаОплаты < ДатаНачалаСобытия + КоличествоДнейЗаСчетРаботодателя * ДлинаСуток Тогда
				Если Не ЗначениеЗаполнено(ВидОплатыЗаСчетРаботодателя) Тогда
					ТекстСообщения = НСтр("ru = 'Не указан вид расчета для начисления пособия за счет работодателя.'");
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидОплатыЗаСчетРаботодателя", ТекстСообщения, "");
				КонецЕсли;
			КонецЕсли;
			
			Если ДоплачиватьДоСреднегоЗаработка И Не ЗначениеЗаполнено(ВидРасчетаДоплаты) Тогда
				ТекстСообщения = НСтр("ru = 'Не указан вид расчета для начисления доплаты до полного среднего заработка.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидРасчетаДоплаты", ТекстСообщения, "");
			КонецЕсли;
			
		КонецЕсли; 
	КонецЕсли;
	
	Если (Не НазначитьПособие
		Или ДатаНачала < ДатаНачалаОплаты
		Или ДатаОкончания > ДатаОкончанияОплаты) 
		И НЕ ЗначениеЗаполнено(ВидНеоплачиваемогоВремени) Тогда
		ТекстСообщения = НСтр("ru = 'Не указан вид расчета для неоплачиваемого времени.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидНеоплачиваемогоВремени", ТекстСообщения, "");
	КонецЕсли;
	
	ЭтоУчастникПилотногоПроектаБезДатыВступленияВПроект = ПрямыеВыплатыПособийСоциальногоСтрахования.ЭтоУчастникПилотногоПроектаБезДатыВступленияВПроект(Организация, ПериодРегистрации);
	Если ЭтоУчастникПилотногоПроектаБезДатыВступленияВПроект Тогда
		ТекстСообщения = ПрямыеВыплатыПособийСоциальногоСтрахования.ТекстСообщенияЭтоУчастникПилотногоПроектаБезДатыВступленияВПроект(Организация);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Организация", ТекстСообщения, "");
	КонецЕсли;
	
	ПроверитьЗаполнениеПланируемойДатыВыплаты(КонтейнерОшибок, ПроверкаПередРасчетом);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПланируемойДатыВыплаты(КонтейнерОшибок, ПроверкаПередРасчетом)
	
	МассивНачисленийДокумента = Новый Массив;
	
	Если НЕ ПроверкаПередРасчетом Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивНачисленийДокумента, Начисления.ВыгрузитьКолонку("Начисление"), Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивНачисленийДокумента, НачисленияПерерасчет.ВыгрузитьКолонку("Начисление"), Истина);
	КонецЕсли;
	
	Если УчетНДФЛРасширенный.ДатаВыплатыОбязательнаКЗаполнению(ПорядокВыплаты, МассивНачисленийДокумента)
		И Не ЗначениеЗаполнено(ПланируемаяДатаВыплаты) Тогда
		ТекстСообщения = НСтр("ru = 'Дата выплаты обязательна к заполнению при выплате в межрасчет.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПланируемаяДатаВыплаты", ТекстСообщения, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПериодДействияНачислений(Отказ)
	ПараметрыПроверкиПериодаДействия = РасчетЗарплатыРасширенный.ПараметрыПроверкиПериодаДействия();
	ПараметрыПроверкиПериодаДействия.Ссылка = ЭтотОбъект.Ссылка;
	ПроверяемыеКоллекции = Новый Массив;
	ПроверяемыеКоллекции.Добавить(РасчетЗарплатыРасширенный.ОписаниеКоллекцииДляПроверкиПериодаДействия("НачисленияПерерасчет", НСтр("ru='Перерасчет прошлого периода'")));
	ПроверяемыеКоллекции.Добавить(РасчетЗарплатыРасширенный.ОписаниеКоллекцииДляПроверкиПериодаДействия("Удержания", НСтр("ru='Удержания'"), "Удержание"));
	РасчетЗарплатыРасширенный.ПроверитьПериодДействияВКоллекцияхНачислений(ЭтотОбъект, ПараметрыПроверкиПериодаДействия, ПроверяемыеКоллекции, Отказ);
КонецПроцедуры

Процедура ПроверитьВыплатуПособийУчастникомПроектаПоПрямымВыплатамФСС(КонтейнерОшибок)
	
	ВыплачиваемыеПособия = Начисления.Выгрузить(, "Начисление, Результат");
	ВыплачиваемыеПособия.Свернуть("Начисление", "Результат");
	
	ВыплачиваемыеПособияДляПроверки = ПрямыеВыплатыПособийСоциальногоСтрахования.ПустаяТаблицаДляПроверкиОплатыПособийУчастникомПилотногоПроектаФСС();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВыплачиваемыеПособия, ВыплачиваемыеПособияДляПроверки);
	
	Ошибка = ПрямыеВыплатыПособийСоциальногоСтрахования.ПроверитьОплатуПособийУчастникомПилотногоПроектаФСС(Организация, ПериодРегистрации, ВыплачиваемыеПособияДляПроверки);
	Если ЗначениеЗаполнено(Ошибка) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "МесяцНачисленияСтрокой", Ошибка, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВидЗанятостиСотрудника(КонтейнерОшибок)
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат;
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), "ВидЗанятости");
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не (КадровыеДанные[0].ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы 
		Или КадровыеДанные[0].ВидЗанятости = Перечисления.ВидыЗанятости.Совместительство) Тогда
		ТекстСообщения = НСтр("ru = 'В документе может быть выбран сотрудник по основному месту работы или внешнему совместительству.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Сотрудник", ТекстСообщения, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьПроверенныеРеквизиты(ПроверяемыеРеквизиты)
	
	Если ПроверяемыеРеквизиты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Организация");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Сотрудник");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаСобытия");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаОплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачала");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончания");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончанияОплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПричинаНетрудоспособности");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПроцентОплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ОграничениеПособия");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ФинансированиеФедеральнымБюджетом");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидОплатыПособия");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидОплатыЗаСчетРаботодателя");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидНеоплачиваемогоВремени");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидРасчетаДоплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПланируемаяДатаВыплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "НомерЛисткаНетрудоспособности");
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьСотрудникаВТаблицахНачислений()
	
	ТаблицыНачислений = Новый Массив;
	ТаблицыНачислений.Добавить(Начисления);
	ТаблицыНачислений.Добавить(НачисленияПерерасчет);
	ТаблицыНачислений.Добавить(НачисленияПерерасчетНулевыеСторно);
	
	Для Каждого ТаблицаНачислений Из ТаблицыНачислений Цикл
		Для Каждого СтрокаТаблицы Из ТаблицаНачислений Цикл
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Сотрудник) Тогда
				СтрокаТаблицы.Сотрудник = Сотрудник;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоПервичномуБольничномуЛисту(ДокументСсылка) Экспорт 
	
	ДанныеПервичногоБольничногоЛиста = Документы.БольничныйЛист.ДанныеПервичногоБольничногоЛиста(ДокументСсылка, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЭтотОбъект.Ссылка));
	
	ЗаполняемыеДанные = "Организация";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "Сотрудник";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПричинаНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "НазначитьПособие";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачала";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаСобытия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаПоловиннойОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНарушенияРежима";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СлучайУходаЗаБольнымРебенком";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "НомерПервичногоЛисткаНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажЛет";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажМесяцев";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажРасширенныйЛет";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажРасширенныйМесяцев";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДоплачиватьДоСреднегоЗаработка";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентОплатыБезЛьгот";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ОграничениеПособияБезЛьгот";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПрименятьЛьготыПриНачисленииПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ФинансированиеФедеральнымБюджетом";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ОграничениеПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаНачало";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаОкончание";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ФиксПериодРасчетаСреднегоЗаработка";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаПервыйГод";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаВторойГод";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "УчитыватьЗаработокПредыдущихСтрахователей";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РасчетПоПравилам2010Года";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ВидОплатыПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ВидОплатыЗаСчетРаботодателя";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ВидНеоплачиваемогоВремени";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ВидРасчетаДоплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентДоплатыЗаДниНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДоляНеполногоВремени";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РайонныйКоэффициентРФнаНачалоСобытия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РодственникЗаКоторымОсуществляетсяУход1";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РодственникЗаКоторымОсуществляетсяУход2";
	
	Если ДанныеПервичногоБольничногоЛиста <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПервичногоБольничногоЛиста, ЗаполняемыеДанные);
		
		Если ЗначениеЗаполнено(ДатаНачала) И ЭтоУходЗаРодственником() Тогда
			Если ЗначениеЗаполнено(РодственникЗаКоторымОсуществляетсяУход1) Тогда
				ДатаНачалаРодственник1 = ДатаНачала;
			КонецЕсли;
			Если ЗначениеЗаполнено(РодственникЗаКоторымОсуществляетсяУход2) Тогда
				ДатаНачалаРодственник2 = ДатаНачала;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым
		Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетАмбулаторно 
		Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетВСтационаре	Тогда
		
		ДлинаСуток = УчетПособийСоциальногоСтрахованияКлиентСервер.ДлинаСуток();
		
		Если ДатаНачалаСобытия <> ДатаНачалаОплаты Тогда
			ОплаченоРанее = (ДатаНачалаОплаты - ДатаНачалаСобытия) / ДлинаСуток;
		Иначе
			ОплаченоРанее = 0;
		КонецЕсли;
		
		МаксимальноеКоличествоОплачиваемыхДней = Документы.БольничныйЛист.МаксимальноеКоличествоОплачиваемыхДнейПоПричинеНетрудоспособности(ПричинаНетрудоспособности, СлучайУходаЗаБольнымРебенком);
		
		НазначитьПособие = Истина; 
		
		Если Не МаксимальноеКоличествоОплачиваемыхДней = Неопределено Тогда
			
			ДнейОплаты = Макс(МаксимальноеКоличествоОплачиваемыхДней - ОплаченоРанее, 0);
			
			Если ДнейОплаты > 0 Тогда
				ДатаОкончанияОплаты = ДатаНачалаОплаты + (ДнейОплаты - 1) * ДлинаСуток;
			Иначе
				НазначитьПособие	= Ложь; 
				ДатаНачалаОплаты	= Неопределено;
				ДатаОкончанияОплаты = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоУходЗаРодственником()
	Возврат (ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым);
КонецФункции

#КонецОбласти

#КонецЕсли
