
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, Месяц", "Объект.Организация", "Объект.Ответственный", "Объект.МесяцНачисления");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = "ВыбраноОснованиеВзыскания" И Источник = ЭтотОбъект Тогда 
		ЗаполнитьЗначенияСвойств(Объект, Параметр, "ДокументОснование,Удержание");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Модифицированность);
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Направление, Модифицированность);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцНачисленияПриИзменении", 0.3, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьЗадолженностьПоУдержаниям();
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	ФизическоеЛицоПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("АдресСведенийОЗадолженности", АдресСведенийОЗадолженности());
	ОткрытьФорму("Документ.ПогашениеЗадолженностиПоВзысканиям.Форма.ВыборОснованияВзыскания", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
	ДокументОснованиеПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой");
	ЗаполнитьЗадолженностьПоУдержаниям();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцНачисленияПриИзменении()

	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяцаНачисления()
	
	ЗаполнитьЗадолженностьПоУдержаниям();
	
КонецПроцедуры

&НаСервере
Процедура ФизическоеЛицоПриИзмененииНаСервере()
	
	ЗаполнитьЗадолженностьПоУдержаниям();
	
	Если ЗадолженностьПоУдержаниям.Количество() > 0 Тогда  
		Объект.Удержание = ЗадолженностьПоУдержаниям[0].Удержание;
		Объект.ДокументОснование = ЗадолженностьПоУдержаниям[0].ДокументОснование;
	Иначе 
		СообщитьОбОтсутствииЗадолженности();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗадолженностьПоУдержаниям()
	
	ЗадолженностьПоУдержаниям.Очистить();
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Период", КонецМесяца(Объект.МесяцНачисления));
	Запрос.УстановитьПараметр("Организация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Объект.Организация));
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.ФизическоеЛицо);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗадолженностьПоУдержаниямФизическихЛицОстатки.Удержание КАК Удержание,
	               |	ЗадолженностьПоУдержаниямФизическихЛицОстатки.ДокументОснование КАК ДокументОснование,
	               |	ЗадолженностьПоУдержаниямФизическихЛицОстатки.СуммаОстаток КАК Задолженность
	               |ПОМЕСТИТЬ ВТЗадолженностьПоУдержаниям
	               |ИЗ
	               |	РегистрНакопления.ЗадолженностьПоУдержаниямФизическихЛиц.Остатки(
	               |			&Период,
	               |			Организация = &Организация
	               |				И ФизическоеЛицо = &ФизическоеЛицо) КАК ЗадолженностьПоУдержаниямФизическихЛицОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗадолженностьПоУдержаниямФизическихЛиц.Удержание,
	               |	ЗадолженностьПоУдержаниямФизическихЛиц.ДокументОснование,
	               |	ЗадолженностьПоУдержаниямФизическихЛиц.Сумма
	               |ИЗ
	               |	РегистрНакопления.ЗадолженностьПоУдержаниямФизическихЛиц КАК ЗадолженностьПоУдержаниямФизическихЛиц
	               |ГДЕ
	               |	ЗадолженностьПоУдержаниямФизическихЛиц.Период = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	               |	И ЗадолженностьПоУдержаниямФизическихЛиц.Организация = &Организация
	               |	И ЗадолженностьПоУдержаниямФизическихЛиц.ФизическоеЛицо = &ФизическоеЛицо
	               |	И ЗадолженностьПоУдержаниямФизическихЛиц.Регистратор = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗадолженностьПоУдержаниям.Удержание КАК Удержание,
	               |	ЗадолженностьПоУдержаниям.ДокументОснование КАК ДокументОснование,
	               |	СУММА(ЗадолженностьПоУдержаниям.Задолженность) КАК Задолженность
	               |ИЗ
	               |	ВТЗадолженностьПоУдержаниям КАК ЗадолженностьПоУдержаниям
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗадолженностьПоУдержаниям.Удержание,
	               |	ЗадолженностьПоУдержаниям.ДокументОснование
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(ЗадолженностьПоУдержаниям.Задолженность) > 0";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ЗаполнитьЗначенияСвойств(ЗадолженностьПоУдержаниям.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере()
	
	Объект.Удержание = Неопределено;
	
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда 
		Возврат;
	КонецЕсли;
	
	МетаданныеДокумента = Объект.ДокументОснование.Метаданные();
	Если МетаданныеДокумента.Реквизиты.Найти("Удержание") = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.Удержание = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "Удержание");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СообщитьОбОтсутствииЗадолженности()
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Задолженность по взысканиям отсутствует.'"));
	
КонецПроцедуры

&НаСервере
Функция АдресСведенийОЗадолженности()
	
	Возврат ПоместитьВоВременноеХранилище(ЗадолженностьПоУдержаниям.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти
