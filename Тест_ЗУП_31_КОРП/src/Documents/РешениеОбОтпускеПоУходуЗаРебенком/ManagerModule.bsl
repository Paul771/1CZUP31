#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	ОписаниеСостава = ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента();
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	ОписаниеСостава.ИспользоватьКраткийСостав = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	
	ЗарплатаКадрыСоставДокументов.ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(
		ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц,
		,
		"ФизическоеЛицо",
		"ОсновнойСотрудник");
		
	Возврат ОписаниеСостава;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыЗаполненияМероприятий(Объект) Экспорт
	
	ПараметрыЗаполнения = АдаптацияУвольнение.ПараметрыЗаполненияМероприятий();
	
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Сотрудник = Объект.ОсновнойСотрудник;
	ПараметрыЗаполнения.ФизическоеЛицо = Объект.ФизическоеЛицо;
	ПараметрыЗаполнения.ДатаСобытия = Объект.ДатаНачала;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Поля = "ДолжностьПоШтатномуРасписанию,Подразделение,Должность";
	ДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Ложь, ПараметрыЗаполнения.Сотрудник, Поля, ПараметрыЗаполнения.ДатаСобытия, , Ложь);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ДанныеСотрудников.Количество() > 0 Тогда
		
		ТекущиеКадровыеДанныеСотрудника = ДанныеСотрудников[0];
		
		ПараметрыЗаполнения.ПредыдущаяПозиция = ТекущиеКадровыеДанныеСотрудника.ДолжностьПоШтатномуРасписанию;
		ПараметрыЗаполнения.ПредыдущееПодразделение = ТекущиеКадровыеДанныеСотрудника.Подразделение;
		ПараметрыЗаполнения.ПредыдущаяДолжность = ТекущиеКадровыеДанныеСотрудника.Должность;
		ПараметрыЗаполнения.ВидСобытия = ВидСобытияАдаптацииУвольнения();
		
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ВидСобытияАдаптацииУвольнения() Экспорт
	
	Возврат АдаптацияУвольнение.СобытиеОтпускПоУходуЗаРебенком();
	
КонецФункции

Функция ПоляПроверкиУникальности() Экспорт
	
	ПоляПроверки = Новый Массив();
	
	ПоляПроверки.Добавить("Организация");
	ПоляПроверки.Добавить("ФизическоеЛицо");
	ПоляПроверки.Добавить("ДатаНачала");
	
	Возврат ПоляПроверки;
	
КонецФункции

Функция СоответствиеРеквизитовОтбораРеквизитамПриказа() Экспорт
	
	СоответствиеРеквизитов = Новый Соответствие;
	СоответствиеРеквизитов.Вставить("ФизическоеЛицо", "Сотрудник");
	
	Возврат СоответствиеРеквизитов;
	
КонецФункции

Функция ИмяПриказаВводимогоНаОсновании() Экспорт
	
	Возврат "ОтпускПоУходуЗаРебенком";
	
КонецФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
