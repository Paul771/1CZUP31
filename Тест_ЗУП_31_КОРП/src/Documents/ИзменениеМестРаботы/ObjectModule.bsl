#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Проведение документа
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ЗарплатаКадрыРасширенный.ИнициализироватьОтложеннуюРегистрациюВторичныхДанныхПоДвижениямДокумента(Движения);
	
	ДанныеДляПроведения = ДанныеДляПроведенияДокумента();
	
	ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(Движения, ДанныеДляПроведения.СотрудникиДаты, Ссылка);
	
	СтруктураПлановыхНачислений = Новый Структура;
	СтруктураПлановыхНачислений.Вставить("ДанныеОПлановыхНачислениях", ДанныеДляПроведения.ПлановыеНачисления);
	СтруктураПлановыхНачислений.Вставить("ЗначенияПоказателей", ДанныеДляПроведения.ЗначенияПоказателей);
	
	РасчетЗарплаты.СформироватьДвиженияПлановыхНачислений(ЭтотОбъект, Движения, СтруктураПлановыхНачислений);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетов(Движения, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачала, "Объект.ДатаНачала", Отказ, НСтр("ru='Начало периода'"), , , Ложь);
	
	ТаблицаНачислений = РасчетЗарплатыРасширенный.ПустаяТаблицаПлановыхНачислений();
	СотрудникиДокумента = ОбщегоНазначения.ВыгрузитьКолонку(Сотрудники, "Сотрудник", Истина);
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоВременнойТаблице();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 				= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода				= ДатаНачала;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода			= ДатаНачала;
	ПараметрыПолученияСотрудниковОрганизаций.РаботникиПоДоговорамГПХ 	= Неопределено;
	
	КадровыйУчет.ПроверитьРаботающихСотрудников(
		СотрудникиДокумента,
		ПараметрыПолученияСотрудниковОрганизаций,
		Отказ,
		Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "Сотрудник", "Объект.ПоказателиСотрудников"));
		
	Для Каждого Строка Из Начисления Цикл 
		
		НоваяСтрока = ТаблицаНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.Период = ДатаНачала;
		
	КонецЦикла;
	
	РасчетЗарплатыРасширенный.ПроверитьМножественностьОплатыВремени(ТаблицаНачислений, Ссылка, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетовПриОтменеПроведения(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("Сотрудники", "Сотрудник"));
	
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИСотрудникам(ЭтотОбъект, Организация, МассивПараметров, ДатаНачала);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает данные для формирования движений.
// Возвращает Структуру с полями.
//		ПлановыеНачисления - данные, необходимые для формирования истории плановых начислений.
//		(см. РасчетЗарплатыРасширенный.СформироватьДвиженияПлановыхНачислений)
//		ЗначенияПоказателей (см. там же).
//
Функция ДанныеДляПроведенияДокумента()
	
	ДанныеДляПроведения = Новый Структура; 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаОкончания", ?(ЗначениеЗаполнено(ДатаОкончания), КонецДня(ДатаОкончания) + 1, ДатаОкончания));
	
	// Подготовка данных для проведения.
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания, ДЕНЬ, 1)
		|	КОНЕЦ КАК ДействуетДо,
		|	ИзменениеМестРаботыСотрудники.Сотрудник,
		|	ИзменениеМестРаботыСотрудники.ФизическоеЛицо,
		|	ИзменениеМестРаботыСотрудники.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ИзменениеМестРаботыНачисления.Начисление,
		|	ИзменениеМестРаботыНачисления.ДокументОснование,
		|	ВЫБОР
		|		КОГДА ИзменениеМестРаботыНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Используется,
		|	ВЫБОР
		|		КОГДА ИзменениеМестРаботыНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
		|			ТОГДА ИСТИНА
		|		КОГДА ИзменениеМестРаботыНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Утвердить)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ИспользуетсяПоОкончании,
		|	ИзменениеМестРаботыНачисления.Размер
		|ИЗ
		|	Документ.ИзменениеМестРаботы.Сотрудники КАК ИзменениеМестРаботыСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеМестРаботы.Начисления КАК ИзменениеМестРаботыНачисления
		|		ПО ИзменениеМестРаботыСотрудники.Ссылка = ИзменениеМестРаботыНачисления.Ссылка
		|			И ИзменениеМестРаботыСотрудники.ИдентификаторСтрокиСотрудника = ИзменениеМестРаботыНачисления.ИдентификаторСтрокиСотрудника
		|ГДЕ
		|	ИзменениеМестРаботыСотрудники.Ссылка = &Ссылка";
	
	// Таблица для формирования плановых начислений.
	ПлановыеНачисления = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ПлановыеНачисления", ПлановыеНачисления);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИзменениеМестРаботыСотрудники.Ссылка.Организация,
		|	ИзменениеМестРаботыСотрудники.Сотрудник,
		|	ИзменениеМестРаботыСотрудники.ФизическоеЛицо,
		|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания, ДЕНЬ, 1)
		|	КОНЕЦ КАК ДействуетДо,
		|	ИзменениеМестРаботыПоказатели.Показатель,
		|	ИзменениеМестРаботыПоказатели.ДокументОснование,
		|	МАКСИМУМ(ИзменениеМестРаботыПоказатели.Значение) КАК Значение
		|ИЗ
		|	Документ.ИзменениеМестРаботы.Сотрудники КАК ИзменениеМестРаботыСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеМестРаботы.Показатели КАК ИзменениеМестРаботыПоказатели
		|		ПО ИзменениеМестРаботыСотрудники.Ссылка = ИзменениеМестРаботыПоказатели.Ссылка
		|			И ИзменениеМестРаботыСотрудники.ИдентификаторСтрокиСотрудника = ИзменениеМестРаботыПоказатели.ИдентификаторСтрокиСотрудника
		|ГДЕ
		|	ИзменениеМестРаботыСотрудники.Ссылка = &Ссылка
		|	И ИзменениеМестРаботыПоказатели.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИзменениеМестРаботыСотрудники.Ссылка.Организация,
		|	ИзменениеМестРаботыСотрудники.Сотрудник,
		|	ИзменениеМестРаботыСотрудники.ФизическоеЛицо,
		|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала,
		|	ИзменениеМестРаботыПоказатели.Показатель,
		|	ИзменениеМестРаботыПоказатели.ДокументОснование,
		|	ВЫБОР
		|		КОГДА ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания, ДЕНЬ, 1)
		|	КОНЕЦ";
	
	// Таблица для формирования значений показателей.
	ЗначенияПоказателей = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ЗначенияПоказателей", ЗначенияПоказателей);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала КАК ДатаСобытия,
		|	ИзменениеМестРаботыСотрудники.Сотрудник,
		|	ИзменениеМестРаботыСотрудники.ФизическоеЛицо,
		|	ИзменениеМестРаботыСотрудники.СовокупнаяТарифнаяСтавка КАК Значение,
		|	ВЫБОР
		|		КОГДА ИзменениеМестРаботыСотрудники.СовокупнаяТарифнаяСтавка = 0
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.ПустаяСсылка)
		|		ИНАЧЕ ИзменениеМестРаботыСотрудники.ВидТарифнойСтавки
		|	КОНЕЦ КАК ВидТарифнойСтавки,
		|	ВЫБОР
		|		КОГДА ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания, ДЕНЬ, 1)
		|	КОНЕЦ КАК ДействуетДо
		|ИЗ
		|	Документ.ИзменениеМестРаботы.Сотрудники КАК ИзменениеМестРаботыСотрудники
		|ГДЕ
		|	ИзменениеМестРаботыСотрудники.Ссылка = &Ссылка";
	
	// Таблица для формирования значений совокупных тарифных ставок.
	ДанныеСовокупныхТарифныхСтавок = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ДанныеСовокупныхТарифныхСтавок", ДанныеСовокупныхТарифныхСтавок);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала КАК ДатаСобытия,
		|	ИзменениеМестРаботыСотрудники.Сотрудник
		|ИЗ
		|	Документ.ИзменениеМестРаботы.Сотрудники КАК ИзменениеМестРаботыСотрудники
		|ГДЕ
		|	ИзменениеМестРаботыСотрудники.Ссылка = &Ссылка";
	
	// Таблица для формирования времени регистрации документа.
	СотрудникиДаты = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("СотрудникиДаты", СотрудникиДаты);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура СоздатьВТДанныеДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Сотрудник,
		|	ТаблицаДокумента.Ссылка.ДатаНачала КАК ПериодДействия,
		|	ТаблицаДокумента.Ссылка КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.ИзменениеМестРаботы.Сотрудники КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка.Организация,
		|	ТаблицаДокумента.Сотрудник,
		|	ТаблицаДокумента.Ссылка.ДатаОкончания,
		|	ТаблицаДокумента.Ссылка
		|ИЗ
		|	Документ.ИзменениеМестРаботы.Сотрудники КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Регистратор
		|	И ТаблицаДокумента.Ссылка.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)";
		
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли