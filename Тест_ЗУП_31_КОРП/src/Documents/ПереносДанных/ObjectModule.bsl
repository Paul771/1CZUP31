#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеДляРегистрацииПерерасчетов;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	NULL КАК Организация,
		|	NULL КАК Сотрудник,
		|	NULL КАК ПериодДействия,
		|	NULL КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ГДЕ
		|	ЛОЖЬ";
		
	Запрос.Выполнить();
	
	ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация, Истина);
	ДополнительныеСвойства.Вставить("ДанныеДляРегистрацииПерерасчетов", ДанныеДляРегистрацииПерерасчетов);
	
	УправлениеШтатнымРасписанием.ПроверитьВозможностьИзменитьШтатноеРасписание(
		Движения.ИсторияИспользованияШтатногоРасписания.ВыгрузитьКолонку("ПозицияШтатногоРасписания"),
		ПериодРегистрации,
		Ссылка,
		РежимЗаписи,
		Отказ,
		"МесяцНачисленияСтрокой");

	Если Не ЭтоНовый() И Ссылка.ПометкаУдаления <> ПометкаУдаления Тогда
		УстановитьАктивностьДвижений(НЕ ПометкаУдаления);
	ИначеЕсли ПометкаУдаления Тогда
		УстановитьАктивностьДвижений(Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ДанныеДляРегистрацииПерерасчетов") Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетов(Движения, ДополнительныеСвойства.ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	Если ДополнительныеСвойства.Свойство("ОграниченияРегистрации") Тогда
		// Ограничения регистрации уже были получены
		Возврат ДополнительныеСвойства.ОграниченияРегистрации;
	КонецЕсли;
	
	ОграниченияРегистрации = ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации();
	
	ТипСотрудник = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
	ТипФизическоеЛицо = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	ТипПозиция = Новый ОписаниеТипов("СправочникСсылка.ШтатноеРасписание");
	
	Для каждого СтрокаТаблицы Из ТаблицаРегистров Цикл
		ИмяРегистра = СтрокаТаблицы.Имя;
		
		МетаданныеРегистра = Движения[ИмяРегистра].Метаданные();
		ИмяСотрудник = Неопределено;
		ИмяФизическоеЛицо = Неопределено;
		ИмяПозиция = Неопределено;
		Для Каждого ИзмерениеРегистра Из МетаданныеРегистра.Измерения Цикл
			Если ИмяСотрудник = Неопределено И ИзмерениеРегистра.Тип = ТипСотрудник Тогда
				ИмяСотрудник = ИзмерениеРегистра.Имя;
			КонецЕсли;
			Если ИмяФизическоеЛицо = Неопределено И ИзмерениеРегистра.Тип = ТипФизическоеЛицо Тогда
				ИмяФизическоеЛицо = ИзмерениеРегистра.Имя;
			КонецЕсли;
			Если ИмяПозиция = Неопределено И ИзмерениеРегистра.Тип = ТипПозиция Тогда
				ИмяПозиция = ИзмерениеРегистра.Имя;
			КонецЕсли;
		КонецЦикла;
		Для Каждого РесурсРегистра Из МетаданныеРегистра.Ресурсы Цикл
			Если ИмяСотрудник = Неопределено И РесурсРегистра.Тип = ТипСотрудник Тогда
				ИмяСотрудник = РесурсРегистра.Имя;
			КонецЕсли;
			Если ИмяФизическоеЛицо = Неопределено И РесурсРегистра.Тип = ТипФизическоеЛицо Тогда
				ИмяФизическоеЛицо = РесурсРегистра.Имя;
			КонецЕсли;
			Если ИмяПозиция = Неопределено И РесурсРегистра.Тип = ТипПозиция Тогда
				ИмяПозиция = РесурсРегистра.Имя;
			КонецЕсли;
		КонецЦикла;
		Для Каждого РеквизитРегистра Из МетаданныеРегистра.Реквизиты Цикл
			Если ИмяСотрудник = Неопределено И РеквизитРегистра.Тип = ТипСотрудник Тогда
				ИмяСотрудник = РеквизитРегистра.Имя;
			КонецЕсли;
			Если ИмяФизическоеЛицо = Неопределено И РеквизитРегистра.Тип = ТипФизическоеЛицо Тогда
				ИмяФизическоеЛицо = РеквизитРегистра.Имя;
			КонецЕсли;
			Если ИмяПозиция = Неопределено И РеквизитРегистра.Тип = ТипПозиция Тогда
				ИмяПозиция = РеквизитРегистра.Имя;
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаРегистра = Движения[ИмяРегистра].Выгрузить();
		Если ИмяПозиция <> Неопределено Тогда
			Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
				Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
				
				МассивПозиций = ТаблицаРегистра.ВыгрузитьКолонку(ИмяПозиция);
				МестаПозиций = Модуль.МестаПозицийВСтруктуреПредприятия(МассивПозиций);
				
				МассивПодразделений = Новый Массив;
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПодразделений, МестаПозиций.ВыгрузитьКолонку("Подразделение"), Истина);
				ОграниченияРегистрации.Подразделения = МассивПодразделений;
			КонецЕсли;
		КонецЕсли;
		Если ИмяСотрудник <> Неопределено Тогда
			МассивСотрудников = ТаблицаРегистра.ВыгрузитьКолонку(ИмяСотрудник);
			ОграниченияРегистрации.Сотрудники = МассивСотрудников;
		КонецЕсли;
		Если ИмяФизическоеЛицо <> Неопределено Тогда
			МассивФизическихЛиц = ТаблицаРегистра.ВыгрузитьКолонку(ИмяФизическоеЛицо);
			ОграниченияРегистрации.ФизическиеЛица = МассивФизическихЛиц;
		КонецЕсли;
	КонецЦикла;
	
	ОграниченияРегистрации.Организации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	
	Возврат ОграниченияРегистрации;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьАктивностьДвижений(ФлагАктивности)
	
	Для Каждого Движение Из Движения Цикл
		
		Движение.Прочитать();
		Движение.УстановитьАктивность(ФлагАктивности);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли