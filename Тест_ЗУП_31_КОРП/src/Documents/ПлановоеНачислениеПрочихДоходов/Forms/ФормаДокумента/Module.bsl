
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, Месяц", 
			"Объект.Организация", "Объект.Ответственный", "Объект.ДатаНачала");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Если Не ЗначениеЗаполнено(Объект.Действие) Тогда
			Объект.Действие = Перечисления.ДействияСПрочимиДоходами.Начать;
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ПлановоеНачислениеПрочихДоходов", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если Не ТекущийОбъект.ПроверитьЗаполнение() Тогда
		
		Сообщения = ПолучитьСообщенияПользователю(Ложь);
		
		Для Каждого Сообщение Из Сообщения Цикл
			
			Если СтрНайти(Сообщение.Поле, "ДатаНачала") Тогда
				Сообщение.Поле = "";
				Сообщение.ПутьКДанным = "МесяцНачалаСтрокой";
			КонецЕсли;
			
			Если СтрНайти(Сообщение.Поле, "ДатаОкончания") Тогда
				Сообщение.Поле = "";
				Сообщение.ПутьКДанным = "МесяцОкончанияСтрокой";
			КонецЕсли;
			
		КонецЦикла;
		
		Отказ = Истина;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененыПоказателиДокумента" И Источник.ВладелецФормы = ЭтаФорма Тогда
		Если Параметр.Показатели.Количество() > 0 Тогда 
			ОбработатьИзменениеПоказателейНаСервере(Параметр.Показатели);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	ОрганизацияПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ВидПрочегоДоходаПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	
	ЗаполнитьМассивДоступныхФизическихЛиц();
	УстановитьПараметрыВыбораФизическихЛиц();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	ДействиеПриИзмененииНаСервере();
	
КонецПроцедуры

#Область МесяцНачала

&НаКлиенте
Процедура МесяцНачалаПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ДатаНачала", "МесяцНачалаСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ДатаНачала", "МесяцНачалаСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ДатаНачала", "МесяцНачалаСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область МесяцОкончания

&НаКлиенте
Процедура МесяцОкончанияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ДатаОкончания", "МесяцОкончанияСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ДатаОкончания", "МесяцОкончанияСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ДатаОкончания", "МесяцОкончанияСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область МесяцИзменения

&НаКлиенте
Процедура МесяцИзмененияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ДатаНачала", "МесяцНачалаСтрокой", Модифицированность);
	
	ПриИзмененииМесяцаИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцИзмененияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ДатаНачала", "МесяцНачалаСтрокой");
	
	ПриИзмененииМесяцаИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцИзмененияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ДатаНачала", "МесяцНачалаСтрокой", Направление, Модифицированность);
	
	ПриИзмененииМесяцаИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцИзмененияАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцИзмененияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область МесяцОкончанияИзменения

&НаКлиенте
Процедура МесяцОкончанияИзмененияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ДатаОкончания", "МесяцОкончанияСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияИзмененияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ДатаОкончания", "МесяцОкончанияСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияИзмененияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ДатаОкончания", "МесяцОкончанияСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияИзмененияАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияИзмененияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыУдержания

&НаКлиенте
Процедура ПолучателиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗначениеЗаполнено(Объект.ВидПрочегоДохода) Тогда
		ТекстСообщения = НСтр("ru = 'Не указан вид дохода.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВидПрочегоДохода", "Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаПодбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПослеУдаления(Элемент)
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиФизическоеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Элементы.Получатели.ТекущиеДанные;
	
	ВыбратьФизическоеЛицо(ДанныеСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = ПараметрыОткрытияФормыФизическихЛиц();
	
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаВыбора", ПараметрыФормы, Элементы.Получатели);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоказатели(Команда)
	
	МассивПоказателей = Новый Массив;
	
	ПараметрыФормы = Новый Структура("МассивПоказателей", МассивПоказателей);
	ОткрытьФорму("ОбщаяФорма.ГрупповоеЗаполнениеПоказателейДокументов", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадры.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтотОбъект);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);

	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ДатаНачала", "МесяцНачалаСтрокой");
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ДатаОкончания", "МесяцОкончанияСтрокой");
	
	УстановитьСтраницуДействия();
	УстановитьДоступностьПолей();
	
	ЗаполнитьМассивДоступныхФизическихЛиц();
	УстановитьПараметрыВыбораФизическихЛиц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяцаИзменения()
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	ДатаНачалаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтраницуДействия()
	
	Если Объект.Действие <> Перечисления.ДействияСПрочимиДоходами.Начать Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДействиеСтраницы", "ТекущаяСтраница", Элементы.ДействуетСтраницаГруппа);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДействиеСтраницы", "ТекущаяСтраница", Элементы.НеДействуетСтраница);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПолей()
	
	Если Объект.Действие = Перечисления.ДействияСПрочимиДоходами.Изменить Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИзменитьОтменитьГруппа", "ТекущаяСтраница", Элементы.ИзменитьГруппа);
	ИначеЕсли Объект.Действие = Перечисления.ДействияСПрочимиДоходами.Прекратить Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИзменитьОтменитьГруппа", "ТекущаяСтраница", Элементы.ПрекратитьГруппа);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыОткрытияФормыФизическихЛиц(МножественныйВыбор = Истина)
	
	РолиФизическихЛиц = Новый Массив;
	РолиФизическихЛиц.Добавить(ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.ПрочийПолучательДоходов"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", МножественныйВыбор);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Не МножественныйВыбор);
	ПараметрыФормы.Вставить("АдресСпискаПодобранныхФизическихЛиц", АдресСпискаПодобранныхФизическихЛиц());
	
	Если МассивФизическихЛиц.Количество() > 0 Тогда 
		
		НастройкиФормыВыбора = Новый НастройкиКомпоновкиДанных;
	
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			НастройкиФормыВыбора.Отбор,
			"Ссылка",
			ВидСравненияКомпоновкиДанных.ВСписке,
			МассивФизическихЛиц);
		
		ПараметрыФормы.Вставить("ФиксированныеНастройки", НастройкиФормыВыбора);
		
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Роль", РолиФизическихЛиц);
	
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьФизическоеЛицо(ДанныеСтроки)
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = ПараметрыОткрытияФормыФизическихЛиц(Ложь);
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ФизическоеЛицо) Тогда
		ПараметрыФормы.Вставить("ТекущаяСтрока", ДанныеСтроки.ФизическоеЛицо);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("ИдентификаторСтроки", ДанныеСтроки.ПолучитьИдентификатор());
	
	ОповещениеФормы = Новый ОписаниеОповещения("ВыбратьФизическоеЛицоЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОповещениеФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФизическоеЛицоЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		ДанныеСтроки = Объект.Получатели.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		Если ДанныеСтроки = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ДанныеСтроки.ФизическоеЛицо = Результат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АдресСпискаПодобранныхФизическихЛиц()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.Получатели.Выгрузить(,"ФизическоеЛицо").ВыгрузитьКолонку("ФизическоеЛицо"), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура УстановитьРазмерПриПрекращенииВидаПрочихДоходов()  
	
	Если Объект.Действие <> Перечисления.ДействияСПрочимиДоходами.Прекратить Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаПолучателя Из Объект.Получатели Цикл 
		СтрокаПолучателя.Размер = 0;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЗаполнитьМассивДоступныхФизическихЛиц();
	УстановитьПараметрыВыбораФизическихЛиц();
	
КонецПроцедуры

&НаСервере
Процедура ДействиеПриИзмененииНаСервере()
	
	УстановитьСтраницуДействия();
	УстановитьДоступностьПолей();
	
	УстановитьРазмерПриПрекращенииВидаПрочихДоходов();
	
	ЗаполнитьМассивДоступныхФизическихЛиц();
	УстановитьПараметрыВыбораФизическихЛиц();
	
КонецПроцедуры

&НаСервере
Процедура ДатаНачалаПриИзмененииНаСервере()
	
	ЗаполнитьМассивДоступныхФизическихЛиц();
	УстановитьПараметрыВыбораФизическихЛиц();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМассивДоступныхФизическихЛиц()
	
	ФизическиеЛица = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.ВидПрочегоДохода) И Объект.Действие = Перечисления.ДействияСПрочимиДоходами.Прекратить Тогда
		
		ИзмеренияДаты = Новый ТаблицаЗначений;
		ИзмеренияДаты.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
		ИзмеренияДаты.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
		ИзмеренияДаты.Колонки.Добавить("ВидПрочегоДохода", Новый ОписаниеТипов("СправочникСсылка.ВидыПрочихДоходовФизическихЛиц"));
		
		НоваяСтрока = ИзмеренияДаты.Добавить();
		НоваяСтрока.Период = Объект.ДатаНачала;
		НоваяСтрока.Организация = Объект.Организация;
		НоваяСтрока.ВидПрочегоДохода = Объект.ВидПрочегоДохода;
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "Регистратор", "<>", Объект.Ссылка);
		
		ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
			"ПлановыеПрочиеДоходы",
			МенеджерВременныхТаблиц,
			Истина,
			ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты),
			ПараметрыПостроения);
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ПлановыеПрочиеДоходы.ФизическоеЛицо
		|ИЗ
		|	ВТПлановыеПрочиеДоходыСрезПоследних КАК ПлановыеПрочиеДоходы
		|ГДЕ
		|	ПлановыеПрочиеДоходы.Используется");
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			ФизическиеЛица.Добавить(Выборка.ФизическоеЛицо);
		КонецЦикла;
		
	КонецЕсли;
	
	МассивФизическихЛиц = Новый ФиксированныйМассив(ФизическиеЛица);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораФизическихЛиц()
	
	ПараметрыДляВыбора = Новый Массив;
	Если МассивФизическихЛиц.Количество() > 0 Тогда 
		ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", МассивФизическихЛиц);
		ПараметрыДляВыбора.Добавить(ПараметрВыбора);
	КонецЕсли;
	
	Элементы.ПолучателиФизическоеЛицо.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыДляВыбора);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПодбораНаСервере(ВыбранныеФизическиеЛица)
	
	Для Каждого ФизическоеЛицо Из ВыбранныеФизическиеЛица Цикл
		
		Отбор = Новый Структура("ФизическоеЛицо", ФизическоеЛицо);
		Если Объект.Получатели.НайтиСтроки(Отбор).Количество() = 0 Тогда
			
			НоваяСтрока = Объект.Получатели.Добавить();
			НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеПоказателейНаСервере(ЗначенияПоказателей)
	
	ФиксированнаяСумма = ЗначенияПоказателей[Справочники.ПоказателиРасчетаЗарплаты.ПустаяСсылка()];
	
	Для Каждого СтрокаПолучателя Из Объект.Получатели Цикл
		Если ФиксированнаяСумма <> Неопределено Тогда
			СтрокаПолучателя.Размер = ФиксированнаяСумма;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

#Область КлючевыеРеквизитыЗаполненияФормы

&НаСервере
// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	
	МассивТаблиц = Новый Массив;
	МассивТаблиц.Добавить("Объект.Получатели");
	
	Возврат МассивТаблиц;
	
КонецФункции

&НаСервере
// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация",			Нстр("ru = 'организации'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "ВидПрочегоДохода",		Нстр("ru = 'вида дохода'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Действие",				Нстр("ru = 'действия'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "МесяцИзменения",		Нстр("ru = 'месяца изменения'")));
	
	Возврат Массив;
	
КонецФункции

#КонецОбласти

#КонецОбласти
