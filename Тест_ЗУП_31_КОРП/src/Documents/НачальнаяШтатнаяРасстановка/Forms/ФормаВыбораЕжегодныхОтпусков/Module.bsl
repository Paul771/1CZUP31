
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Сотрудник,ДатаОстатков");
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Информация по отпускам для сотрудника %1'"),
		Сотрудник);
	
	Если ТолькоПросмотр Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаOK",
			"Доступность",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаОтмена",
			"КнопкаПоУмолчанию",
			Истина);
		
	КонецЕсли;
	
	ЗаполнитьЕжегодныеОтпуска(Параметры);	
	
	ПараметрыСтажевыхЭлементов = ОстаткиОтпусков.ПараметрыДляДополнитьТабличнуюЧастьСтажевымиЭлементами();
	ПараметрыСтажевыхЭлементов.Форма = ЭтаФорма;
	ПараметрыСтажевыхЭлементов.ИмяТаблицы = "ЕжегодныеОтпуска";
	ПараметрыСтажевыхЭлементов.ТабличнаяЧастьВОбъекте = Ложь;
	ПараметрыСтажевыхЭлементов.ЗаполнятьРеквизитыПоСотруднику = Истина;
	ПараметрыСтажевыхЭлементов.Сотрудник = Сотрудник;
	ПараметрыСтажевыхЭлементов.ДатаСреза = ДатаОстатков;
	ОстаткиОтпусков.ДополнитьТабличнуюЧастьСтажевымиЭлементами(ПараметрыСтажевыхЭлементов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыЕжегодныеОтпуска

&НаКлиенте
Процедура ЕжегодныеОтпускаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ОстаткиОтпусковКлиент.ПриНачалеРедактированияЕжегодногоОтпуска(ЭтаФорма, Элементы.ЕжегодныеОтпуска.ТекущиеДанные, НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕжегодныеОтпускаПередУдалением(Элемент, Отказ)
	
	ОстаткиОтпусковКлиент.ПередУдалениемЕжегодногоОтпуска(ЭтаФорма, Отказ, "ВведеныОстатки", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕжегодныеОтпускаВидЕжегодногоОтпускаПриИзменении(Элемент)
	
	ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
	
	ТекущиеДанные = Элементы.ЕжегодныеОтпуска.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоДнейВГод = КоличествоДнейЕжегодногоОтпускаПоУмолчанию(ТекущиеДанные.ВидЕжегодногоОтпуска);
	Если КоличествоДнейВГод <> Неопределено Тогда
		ТекущиеДанные.КоличествоДнейВГод = КоличествоДнейВГод;
	КонецЕсли;
	
	ОстаткиОтпусковКлиентСервер.УстановитьКомментарииДействийСЕжегоднымОтпуском(ТекущиеДанные);
	ЗаполнитьЗначенияСтажевыхРеквизитовВСтроке(Сотрудник, ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура ЕжегодныеОтпускаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ЕжегодныеОтпуска.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ЕжегодныеОтпускаОписаниеСтажевыхПоказателей" Тогда
		
		ОстаткиОтпусковКлиент.ОткрытьФормуРедактированияСтажаОтпускаСотрудника(
			ЭтаФорма, Сотрудник, ДатаОстатков, ТекущиеДанные.ВидЕжегодногоОтпуска);
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыОстаткиОтпусковПоРабочимГодам

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если ОстаткиОтпусковПоРабочимГодам.Количество() = 1 Тогда
			Элемент.ТекущиеДанные.ВидЕжегодногоОтпуска = ПредопределенноеЗначение("Справочник.ВидыОтпусков.Основной");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамОстатокПриИзменении(Элемент)
	ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамВидЕжегодногоОтпускаПриИзменении(Элемент)
	ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамРабочийГодНачалоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОстаткиОтпусковПоРабочимГодам.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.РабочийГодНачало) И НЕ ЗначениеЗаполнено(ТекущиеДанные.РабочийГодОкончание) Тогда
			ТекущиеДанные.РабочийГодОкончание = ДобавитьМесяц(ТекущиеДанные.РабочийГодНачало, 12) - 1;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамПослеУдаления(Элемент)
	ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура OK(Команда)
	
	ОчиститьСообщения();
	
	Если Модифицированность Тогда
		
		Если НЕ ПроверитьЗаполнениеОтпусков() Тогда
			Возврат;
		КонецЕсли; 
		
		СтруктураПараметраОповещения = Новый Структура;
		СтруктураПараметраОповещения.Вставить("Сотрудник", Сотрудник);
		СтруктураПараметраОповещения.Вставить("ДатаОстатков", ДатаОстатков);
		СтруктураПараметраОповещения.Вставить("ЕжегодныеОтпуска", ЕжегодныеОтпуска);
		СтруктураПараметраОповещения.Вставить("ОстаткиОтпусковПоРабочимГодам", ОстаткиОтпусковПоРабочимГодам);
		
		Оповестить("ИзмененыЕжегодныеОтпуска", СтруктураПараметраОповещения, ВладелецФормы);
		
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПроверитьЗаполнениеОтпусков()
	Возврат ОстаткиОтпусков.ДокументВводаОстатковОтпусковЗаполненКорректно(ЭтаФорма);
КонецФункции

&НаСервере
Процедура ЗаполнитьЗначенияСтажевыхРеквизитовВСтроке(Сотрудник, ИдентификаторСтроки)
	ТекущиеДанные = ЕжегодныеОтпуска.НайтиПоИдентификатору(ИдентификаторСтроки);
	ОстаткиОтпусков.ЗаполнитьЗначенияСтажевыхРеквизитовВСтроке(ТекущиеДанные, Сотрудник, ДатаОстатков);
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоДнейЕжегодногоОтпускаПоУмолчанию(ВидЕжегодногоОтпуска)
	Возврат ОстаткиОтпусков.КоличествоДнейОтпускаВГодПоУмолчанию(ВидЕжегодногоОтпуска);
КонецФункции

&НаКлиенте
Процедура ЕжегодныеОтпускаКоличествоДнейВГодПриИзменении(Элемент)
	ОстаткиОтпусковКлиент.ПриИзмененииЕжегодныеОтпускаКоличество(ЭтаФорма, Элементы.ЕжегодныеОтпуска.ТекущиеДанные, "ВведеныОстатки");
КонецПроцедуры

&НаКлиенте
Процедура ЕжегодныеОтпускаПриАктивизацииСтроки(Элемент)
	ОстаткиОтпусковКлиент.ПриАктивизацииСтрокиЕжегодногоОтпуска(ЭтаФорма, "ВведеныОстатки");
КонецПроцедуры

&НаКлиенте
Процедура ЕжегодныеОтпускаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ОстаткиОтпусковКлиент.ПриОкончанииРедактированияЕжегодногоОтпуска(Элемент.ТекущиеДанные, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнестиСводныйОстатокВТаблицуПрав(Форма)

	ОстаткиОтпусковКлиентСервер.ВнестиСводныйОстатокВТаблицуПрав(Форма, "КоличествоДней", "ВведеныОстатки");	
	ОстаткиОтпусковКлиент.ПриАктивизацииСтрокиЕжегодногоОтпуска(Форма, "ВведеныОстатки");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЕжегодныеОтпуска(Параметры)

	// Заполнение Действия и Комментария
	Для каждого СтрокаЕжегодныеОтпуска Из Параметры.ЕжегодныеОтпуска Цикл
		НоваяСтрока = ЕжегодныеОтпуска.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЕжегодныеОтпуска);
		Если СтрокаЕжегодныеОтпуска.НеИспользовать Тогда
			НоваяСтрока.Действие = ПредопределенноеЗначение("Перечисление.ДействияСЕжегоднымиОтпусками.Отменить");
		Иначе
			НоваяСтрока.Действие = ПредопределенноеЗначение("Перечисление.ДействияСЕжегоднымиОтпусками.ПустаяСсылка");
		КонецЕсли;
		ОстаткиОтпусковКлиентСервер.УстановитьКомментарииДействийСЕжегоднымОтпуском(НоваяСтрока);
	КонецЦикла;
	Для каждого СтрокаОстаткиОтпусковПоРабочимГодам Из Параметры.ОстаткиОтпусковПоРабочимГодам Цикл
		ЗаполнитьЗначенияСвойств(ОстаткиОтпусковПоРабочимГодам.Добавить(), СтрокаОстаткиОтпусковПоРабочимГодам);
	КонецЦикла;
	
	// ВведеныОстатки
	СводныеОстаткиОтпусков = ОстаткиОтпусковПоРабочимГодам.Выгрузить();
	СводныеОстаткиОтпусков.Свернуть("ВидЕжегодногоОтпуска", "Остаток");
	Для каждого ОстатокОтпуска Из СводныеОстаткиОтпусков Цикл
		НайденныеСтроки = ЕжегодныеОтпуска.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска", ОстатокОтпуска.ВидЕжегодногоОтпуска));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].ВведеныОстатки = Истина;
		КонецЕсли;
	КонецЦикла; 
	
	ОстаткиОтпусков.УстановитьУсловноеОформлениеЕжегодныхОтпусков(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

