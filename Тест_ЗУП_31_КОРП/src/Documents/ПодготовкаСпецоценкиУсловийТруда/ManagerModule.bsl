#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПодготовкаСпецоценкиУсловийТруда;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Приказ о создании комиссии
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.ПодготовкаСпецоценкиУсловийТруда";
	КомандаПечати.Идентификатор = "ПФ_MXL_ПриказОСозданииКомиссии";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о создании комиссии'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
	// Перечень рабочих мест
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.ПодготовкаСпецоценкиУсловийТруда";
	КомандаПечати.Идентификатор = "ПФ_MXL_ПереченьРабочихМест";
	КомандаПечати.Представление = НСтр("ru = 'Перечень рабочих мест'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
	// Заявка на проведение СОУТ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.ПодготовкаСпецоценкиУсловийТруда";
	КомандаПечати.Идентификатор = "ПФ_MXL_ЗаявкаНаПроведениеСОУТ";
	КомандаПечати.Представление = НСтр("ru = 'Заявка на проведение специальной оценки условий труда'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПриказОСозданииКомиссии") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_ПриказОСозданииКомиссии",
			НСтр("ru = 'Приказ о создании комиссии'"), ПечатьПриказаОСозданииКомиссии(МассивОбъектов, ОбъектыПечати), ,
			"Документ.ПодготовкаСпецоценкиУсловийТруда.ПФ_MXL_ПриказОСозданииКомиссии");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЗаявкаНаПроведениеСОУТ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_ЗаявкаНаПроведениеСОУТ",
			НСтр("ru = 'Заявка на проведение СОУТ'"), ПечатьЗаявкиНаПроведениеСОУТ(МассивОбъектов, ОбъектыПечати), ,
			"Документ.ПодготовкаСпецоценкиУсловийТруда.ПФ_MXL_ЗаявкаНаПроведениеСОУТ");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПереченьРабочихМест") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ПФ_MXL_ПереченьРабочихМест",
			НСтр("ru = 'Перечень рабочих мест'"), ПечатьПеречняРабочихМест(МассивОбъектов, ОбъектыПечати), ,
			"Документ.ПодготовкаСпецоценкиУсловийТруда.ПФ_MXL_ПереченьРабочихМест");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьПриказаОСозданииКомиссии(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПодготовкаСпецоценкиУсловийТруда_ПриказОСозданииКомиссии";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПодготовкаСпецоценкиУсловийТруда.ПФ_MXL_ПриказОСозданииКомиссии");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(ДанныеДокумента);
		ОбластьШапка.Параметры.Город = ?(ПустаяСтрока(ДанныеДокумента.Город), "____________", ДанныеДокумента.Город);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ОбластьПредседатель = Макет.ПолучитьОбласть("Председатель");
		ОбластьПредседатель.Параметры.Заполнить(ДанныеДокумента);
		ТабличныйДокумент.Вывести(ОбластьПредседатель);
		
		ОбластьПервыйЧленКомиссии = Макет.ПолучитьОбласть("ПервыйЧленКомиссии");
		ОбластьЧленыКомиссии = Макет.ПолучитьОбласть("ЧленыКомиссии");
		ПервыйЧленКомиссии = Истина;
		Для каждого ДанныеЧленаКомиссии Из ДанныеДокумента.ЧленыКомиссии Цикл
			Если ПервыйЧленКомиссии Тогда
				ПервыйЧленКомиссии = Ложь;
				ОбластьПервыйЧленКомиссии.Параметры.ЧленКомиссии = ДанныеЧленаКомиссии.ЧленКомиссии;
				ОбластьПервыйЧленКомиссии.Параметры.Должность = ДанныеЧленаКомиссии.ДолжностьЧленаКомиссии;
				ТабличныйДокумент.Вывести(ОбластьПервыйЧленКомиссии);
			Иначе
				ОбластьЧленыКомиссии.Параметры.ЧленКомиссии = ДанныеЧленаКомиссии.ЧленКомиссии;
				ОбластьЧленыКомиссии.Параметры.Должность = ДанныеЧленаКомиссии.ДолжностьЧленаКомиссии;
				ТабличныйДокумент.Вывести(ОбластьЧленыКомиссии);
			КонецЕсли;
		КонецЦикла;
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Заполнить(ДанныеДокумента);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		ОбластьПодвалСтрока = Макет.ПолучитьОбласть("ПодвалСтрока");
		Для каждого ДанныеЧленаКомиссии Из ДанныеДокумента.ЧленыКомиссии Цикл
			ОбластьПодвалСтрока.Параметры.ФИОЧленКомиссии = ДанныеЧленаКомиссии.ФИОЧленКомиссии;
			ОбластьПодвалСтрока.Параметры.Должность = ДанныеЧленаКомиссии.ДолжностьЧленаКомиссии;
			ТабличныйДокумент.Вывести(ОбластьПодвалСтрока);
		КонецЦикла;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьЗаявкиНаПроведениеСОУТ(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПодготовкаСпецоценкиУсловийТруда_ЗаявкаНаПроведениеСОУТ";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПодготовкаСпецоценкиУсловийТруда.ПФ_MXL_ЗаявкаНаПроведениеСОУТ");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет.Параметры.Заполнить(ДанныеДокумента);
		ТабличныйДокумент.Вывести(Макет);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПеречняРабочихМест(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПодготовкаСпецоценкиУсловийТруда_РабочиеМеста";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПодготовкаСпецоценкиУсловийТруда.ПФ_MXL_ПереченьРабочихМест");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ДанныеДокумента.ПереченьРабочихМест.Количество();
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьМакетаПодвалШапка = Макет.ПолучитьОбласть("ПодвалШапка");
		ОбластьМакетаПодвалСтрока = Макет.ПолучитьОбласть("ПодвалСтрока");
		
		// Сформируем строки по комиссии, чтобы учитывать их для вывода подвала
		ТабличныйДокументКомиссия = Новый ТабличныйДокумент;
		ТабличныйДокументКомиссия.Вывести(ОбластьМакетаПодвалШапка);
		Для каждого ДанныеЧленаКомиссии Из ДанныеДокумента.ЧленыКомиссии Цикл
			ОбластьМакетаПодвалСтрока.Параметры.ЧленКомиссии = ДанныеЧленаКомиссии.ЧленКомиссии;
			ОбластьМакетаПодвалСтрока.Параметры.Должность = ДанныеЧленаКомиссии.ДолжностьЧленаКомиссии;
			ТабличныйДокументКомиссия.Вывести(ОбластьМакетаПодвалСтрока);
		КонецЦикла;
		
		// Массив с двумя строками - для разбиения на страницы.
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		ОбластьМакетаЗаголовок.Параметры.Дата = Формат(ДанныеДокумента.Дата, "ДЛФ=D");
		ОбластьМакетаЗаголовок.Параметры.ОрганизацияНаименованиеПолное = СокрЛП(ДанныеДокумента.ОрганизацияНаименованиеПолное);
		ОбластьМакетаЗаголовок.Параметры.ФИОРуководителя = ДанныеДокумента.ФИОРуководителя;
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0;
		ВсегоКоличествоРаботающихПоСтранице = 0; ВсегоКоличествоЖенщинПоСтранице = 0; ВсегоКоличествоЛицДо18ЛетПоСтранице = 0; ВсегоКоличествоИнвалидовПоСтранице = 0;
		ВсегоКоличествоРаботающих = 0; ВсегоКоличествоЖенщин = 0; ВсегоКоличествоЛицДо18Лет = 0; ВсегоКоличествоИнвалидов = 0;
		ОбластьМакетаШапка.Параметры.НомерСтраницы = ВыведеноСтраниц;
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		// Выводим данные по строкам документа.
		НомерСтроки = 0;
		Для каждого ДанныеРабочегоМеста Из ДанныеДокумента.ПереченьРабочихМест Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеРабочегоМеста);
			ОбластьМакетаСтрока.Параметры.НомерПоПорядку = ВыведеноСтрок;
			Если ДанныеРабочегоМеста.РабочееМестоАналогично Тогда
				ОбластьМакетаСтрока.Параметры.НомерРабочегоМеста = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1А'"),ДанныеРабочегоМеста.НомерРабочегоМеста);
			КонецЕсли;
			
			// Сформируем строку СНИЛС
			СтрокаСНИЛС = "";
			Для каждого СНИЛС Из ДанныеРабочегоМеста.СтраховыеНомераПФР Цикл
				СтрокаСНИЛС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'"), СтрокаСНИЛС, СНИЛС) + ", ";
			КонецЦикла;
			СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаСНИЛС, 2);
			ОбластьМакетаСтрока.Параметры.СНИЛС = СокрЛП(СтрокаСНИЛС);
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу.
			ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ТабличныйДокументКомиссия);
				ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ВсегоКоличествоРаботающихПоСтранице = ВсегоКоличествоРаботающихПоСтранице;
				ОбластьМакетаИтогПоСтранице.Параметры.ВсегоКоличествоЖенщинПоСтранице = ВсегоКоличествоЖенщинПоСтранице;
				ОбластьМакетаИтогПоСтранице.Параметры.ВсегоКоличествоЛицДо18ЛетПоСтранице = ВсегоКоличествоЛицДо18ЛетПоСтранице;
				ОбластьМакетаИтогПоСтранице.Параметры.ВсегоКоличествоИнвалидовПоСтранице = ВсегоКоличествоИнвалидовПоСтранице;
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ВсегоКоличествоРаботающихПоСтранице = 0; ВсегоКоличествоЖенщинПоСтранице = 0;
				ВсегоКоличествоЛицДо18ЛетПоСтранице = 0; ВсегоКоличествоИнвалидовПоСтранице = 0;
				
				ОбластьМакетаШапка.Параметры.НомерСтраницы = ВыведеноСтраниц;
				ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			ВсегоКоличествоРаботающихПоСтранице = ВсегоКоличествоРаботающихПоСтранице + ДанныеРабочегоМеста.КоличествоРаботающих;
			ВсегоКоличествоЖенщинПоСтранице = ВсегоКоличествоЖенщинПоСтранице + ДанныеРабочегоМеста.КоличествоЖенщин;
			ВсегоКоличествоЛицДо18ЛетПоСтранице = ВсегоКоличествоЛицДо18ЛетПоСтранице + ДанныеРабочегоМеста.КоличествоЛицДо18Лет;
			ВсегоКоличествоИнвалидовПоСтранице = ВсегоКоличествоИнвалидовПоСтранице + ДанныеРабочегоМеста.КоличествоИнвалидов;
			ВсегоКоличествоРаботающих = ВсегоКоличествоРаботающих + ДанныеРабочегоМеста.КоличествоРаботающих;
			ВсегоКоличествоЖенщин = ВсегоКоличествоЖенщин + ДанныеРабочегоМеста.КоличествоЖенщин;
			ВсегоКоличествоЛицДо18Лет = ВсегоКоличествоЛицДо18Лет + ДанныеРабочегоМеста.КоличествоЛицДо18Лет;
			ВсегоКоличествоИнвалидов = ВсегоКоличествоИнвалидов + ДанныеРабочегоМеста.КоличествоИнвалидов;
			
		КонецЦикла;
		
		Если ВыведеноСтрок > 0 Тогда 
			ОбластьМакетаИтогПоСтранице.Параметры.ВсегоКоличествоРаботающихПоСтранице = ВсегоКоличествоРаботающихПоСтранице;
			ОбластьМакетаИтогПоСтранице.Параметры.ВсегоКоличествоЖенщинПоСтранице = ВсегоКоличествоЖенщинПоСтранице;
			ОбластьМакетаИтогПоСтранице.Параметры.ВсегоКоличествоЛицДо18ЛетПоСтранице = ВсегоКоличествоЛицДо18ЛетПоСтранице;
			ОбластьМакетаИтогПоСтранице.Параметры.ВсегоКоличествоИнвалидовПоСтранице = ВсегоКоличествоИнвалидовПоСтранице;
		КонецЕсли;
		
		// дополняем пустыми строками до конца страницы
		ОбщегоНазначенияБЗК.ОчиститьПараметрыТабличногоДокумента(ОбластьМакетаСтрока);
		ОбластиКонцаСтраницы = Новый Массив();
		ОбластиКонцаСтраницы.Добавить(ОбластьМакетаИтогПоСтранице);
		ОбластиКонцаСтраницы.Добавить(ТабличныйДокументКомиссия);
		ОбщегоНазначенияБЗК.ДополнитьСтраницуТабличногоДокумента(ТабличныйДокумент, ОбластьМакетаСтрока, ОбластиКонцаСтраницы);  
		
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		
		ОбластьМакетаПодвалШапка.Параметры.Заполнить(ДанныеДокумента);
		ОбластьМакетаПодвалШапка.Параметры.ВсегоКоличествоРаботающих = ВсегоКоличествоРаботающих;
		ОбластьМакетаПодвалШапка.Параметры.ВсегоКоличествоЖенщин = ВсегоКоличествоЖенщин;
		ОбластьМакетаПодвалШапка.Параметры.ВсегоКоличествоЛицДо18Лет = ВсегоКоличествоЛицДо18Лет;
		ОбластьМакетаПодвалШапка.Параметры.ВсегоКоличествоИнвалидов = ВсегоКоличествоИнвалидов;
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвалШапка);
		Для каждого ДанныеЧленаКомиссии Из ДанныеДокумента.ЧленыКомиссии Цикл
			ОбластьМакетаПодвалСтрока.Параметры.ЧленКомиссии = ДанныеЧленаКомиссии.ЧленКомиссии;
			ОбластьМакетаПодвалСтрока.Параметры.Должность = ДанныеЧленаКомиссии.ДолжностьЧленаКомиссии;
			ТабличныйДокумент.Вывести(ОбластьМакетаПодвалСтрока);
		КонецЦикла;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ДанныеПечатиДокументов(МассивОбъектов)
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМеста.Ссылка КАК Документ,
	|	АналогичныеМеста.РабочееМесто,
	|	АналогичныеМеста.АналогичноеМесто,
	|	РабочиеМеста.Примечание,
	|	РабочиеМеста.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТАналогичныеМеста
	|ИЗ
	|	Документ.ПодготовкаСпецоценкиУсловийТруда.РабочиеМеста КАК РабочиеМеста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаСпецоценкиУсловийТруда.АналогичныеМеста КАК АналогичныеМеста
	|		ПО РабочиеМеста.РабочееМесто = АналогичныеМеста.РабочееМесто
	|			И РабочиеМеста.Ссылка = АналогичныеМеста.Ссылка
	|ГДЕ
	|	РабочиеМеста.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РабочиеМеста.Ссылка КАК Документ,
	|	РабочиеМеста.РабочееМесто КАК РабочееМесто,
	|	РабочиеМеста.Примечание КАК Примечание,
	|	РабочиеМеста.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТРабочиеМеста
	|ИЗ
	|	Документ.ПодготовкаСпецоценкиУсловийТруда.РабочиеМеста КАК РабочиеМеста
	|ГДЕ
	|	РабочиеМеста.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АналогичныеМеста.Документ,
	|	АналогичныеМеста.АналогичноеМесто,
	|	АналогичныеМеста.Примечание,
	|	АналогичныеМеста.НомерСтроки
	|ИЗ
	|	ВТАналогичныеМеста КАК АналогичныеМеста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодготовкаСпецоценкиУсловийТрудаСотрудники.Ссылка КАК Документ,
	|	ВсеРабочиеМеста.РабочееМесто,
	|	ВсеРабочиеМеста.НомерСтроки КАК НомерСтроки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодготовкаСпецоценкиУсловийТрудаСотрудники.Сотрудник) КАК КоличествоРаботающих,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА ПодготовкаСпецоценкиУсловийТрудаСотрудники.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Женский)
	|				ТОГДА ПодготовкаСпецоценкиУсловийТрудаСотрудники.Сотрудник
	|		КОНЕЦ) КАК КоличествоЖенщин,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(ПодготовкаСпецоценкиУсловийТрудаСотрудники.ДатаРождения, ПодготовкаСпецоценкиУсловийТруда.Дата, ГОД) < 18
	|				ТОГДА ПодготовкаСпецоценкиУсловийТрудаСотрудники.Сотрудник
	|		КОНЕЦ) КАК КоличествоЛицДо18Лет,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА ПодготовкаСпецоценкиУсловийТрудаСотрудники.Инвалидность
	|				ТОГДА ПодготовкаСпецоценкиУсловийТрудаСотрудники.Сотрудник
	|		КОНЕЦ) КАК КоличествоИнвалидов
	|ПОМЕСТИТЬ ВТПереченьРабочихМест
	|ИЗ
	|	ВТРабочиеМеста КАК ВсеРабочиеМеста
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаСпецоценкиУсловийТруда.Сотрудники КАК ПодготовкаСпецоценкиУсловийТрудаСотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаСпецоценкиУсловийТруда КАК ПодготовкаСпецоценкиУсловийТруда
	|			ПО ПодготовкаСпецоценкиУсловийТрудаСотрудники.Ссылка = ПодготовкаСпецоценкиУсловийТруда.Ссылка
	|		ПО ВсеРабочиеМеста.РабочееМесто = ПодготовкаСпецоценкиУсловийТрудаСотрудники.РабочееМесто
	|			И ВсеРабочиеМеста.Документ = ПодготовкаСпецоценкиУсловийТрудаСотрудники.Ссылка
	|ГДЕ
	|	ПодготовкаСпецоценкиУсловийТрудаСотрудники.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодготовкаСпецоценкиУсловийТрудаСотрудники.Ссылка,
	|	ВсеРабочиеМеста.РабочееМесто,
	|	ВсеРабочиеМеста.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереченьРабочихМест.Документ КАК Документ,
	|	ПереченьРабочихМест.РабочееМесто КАК РабочееМесто,
	|	ПереченьРабочихМест.НомерСтроки КАК НомерСтроки,
	|	НомераРабочихМестСпециальнойОценкиУсловийТруда.Номер КАК НомерРабочегоМеста,
	|	ПереченьРабочихМест.КоличествоРаботающих,
	|	ПереченьРабочихМест.КоличествоЖенщин,
	|	ПереченьРабочихМест.КоличествоЛицДо18Лет,
	|	ПереченьРабочихМест.КоличествоИнвалидов,
	|	Сотрудники.СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА АналогичныеМеста.АналогичноеМесто ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РабочееМестоАналогично,
	|	АналогичныеМеста.РабочееМесто КАК ОсновноеРабочееМесто,
	|	НомераАналогичныхМестСпециальнойОценкиУсловийТруда.Номер КАК НомерГруппыАналогичныхМест,
	|	РабочиеМеста.Примечание
	|ИЗ
	|	ВТПереченьРабочихМест КАК ПереченьРабочихМест
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаСпецоценкиУсловийТруда.Сотрудники КАК Сотрудники
	|		ПО ПереченьРабочихМест.Документ = Сотрудники.Ссылка
	|			И ПереченьРабочихМест.РабочееМесто = Сотрудники.РабочееМесто
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАналогичныеМеста КАК АналогичныеМеста
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда КАК НомераАналогичныхМестСпециальнойОценкиУсловийТруда
	|			ПО АналогичныеМеста.РабочееМесто = НомераАналогичныхМестСпециальнойОценкиУсловийТруда.РабочееМесто
	|		ПО ПереченьРабочихМест.Документ = АналогичныеМеста.Документ
	|			И ПереченьРабочихМест.РабочееМесто = АналогичныеМеста.АналогичноеМесто
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда КАК НомераРабочихМестСпециальнойОценкиУсловийТруда
	|		ПО ПереченьРабочихМест.РабочееМесто = НомераРабочихМестСпециальнойОценкиУсловийТруда.РабочееМесто
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочиеМеста КАК РабочиеМеста
	|		ПО ПереченьРабочихМест.Документ = РабочиеМеста.Документ
	|			И ПереченьРабочихМест.РабочееМесто = РабочиеМеста.РабочееМесто
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПереченьРабочихМест.Документ,
	|	ПереченьРабочихМест.НомерСтроки,
	|	ПереченьРабочихМест.РабочееМесто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодготовкаСпецоценкиУсловийТруда.Ссылка КАК Документ,
	|	ПодготовкаСпецоценкиУсловийТруда.Номер,
	|	ПодготовкаСпецоценкиУсловийТруда.Дата,
	|	ПодготовкаСпецоценкиУсловийТруда.Организация,
	|	Организации.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	ПодготовкаСпецоценкиУсловийТруда.Руководитель КАК Руководитель,
	|	ПодготовкаСпецоценкиУсловийТруда.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ПодготовкаСпецоценкиУсловийТрудаКомиссия.ЧленКомиссии КАК ЧленКомиссии,
	|	ПодготовкаСпецоценкиУсловийТрудаКомиссия.Должность КАК ДолжностьЧленаКомиссии,
	|	ПодготовкаСпецоценкиУсловийТрудаКомиссия.РольВКомиссии КАК РольВКомиссии,
	|	ПодготовкаСпецоценкиУсловийТруда.ДатаНачала,
	|	ПодготовкаСпецоценкиУсловийТруда.ДатаОкончания
	|ИЗ
	|	Документ.ПодготовкаСпецоценкиУсловийТруда КАК ПодготовкаСпецоценкиУсловийТруда
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПодготовкаСпецоценкиУсловийТруда.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаСпецоценкиУсловийТруда.Комиссия КАК ПодготовкаСпецоценкиУсловийТрудаКомиссия
	|		ПО ПодготовкаСпецоценкиУсловийТруда.Ссылка = ПодготовкаСпецоценкиУсловийТрудаКомиссия.Ссылка
	|ГДЕ
	|	ПодготовкаСпецоценкиУсловийТруда.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса.Получить(РезультатыЗапроса.ВГраница()).Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Документ") Цикл
		
		ДанныеПечати = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Выборка);
		
		// ФИОРуководителя
		ДанныеПечати.Вставить("ФИОРуководителя", "");
		ДанныеПечати.Вставить("ПолРуководителя", "");
		ДанныеПечати.Вставить("ФамилияРуководителя", "");
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДанныеПечати.Руководитель, "ФамилияИО, Пол, Фамилия", ОбщегоНазначения.ТекущаяДатаПользователя());
		Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ФИОРуководителя", СтрокаКадровыхДанных.ФамилияИО);
			ДанныеПечати.Вставить("ПолРуководителя", СтрокаКадровыхДанных.Пол);
			ДанныеПечати.Вставить("ФамилияРуководителя", СтрокаКадровыхДанных.Фамилия);
		КонецЦикла;
		
		ДанныеПечати.Дата = Формат(ДанныеПечати.Дата, "ДЛФ=ДД");
		ДанныеПечати.ДатаНачала = Формат(ДанныеПечати.ДатаНачала, "ДЛФ=ДД");
		ДанныеПечати.ДатаОкончания = Формат(ДанныеПечати.ДатаОкончания, "ДЛФ=ДД");
		
		// Подготовка номера документа
		ДанныеПечати.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Истина, Истина);
		
		// Фактический адрес организации
		АдресаОрганизаций = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресаОрганизаций(Выборка.Организация);
		ОписаниеФактическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
			АдресаОрганизаций,
			Выборка.Организация,
			Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		ОписаниеЮридическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
			АдресаОрганизаций,
			Выборка.Организация,
			Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
		ДанныеПечати.Вставить("Город", ОписаниеФактическогоАдреса.Город);
		ДанныеПечати.Вставить("ОрганизацияЮридическийАдрес", ОписаниеЮридическогоАдреса.Представление);
		ДанныеПечати.Вставить("ОрганизацияФактическийАдрес", ОписаниеФактическогоАдреса.Представление);
		
		// Сведения об организации
		СписокПоказателей = Новый Массив;
		СписокПоказателей.Добавить("ИННЮЛ");
		СписокПоказателей.Добавить("КППЮЛ");
		СписокПоказателей.Добавить("ОКПО");
		СписокПоказателей.Добавить("ОКВЭД");
		СписокПоказателей.Добавить("ОКВЭД2");
		СписокПоказателей.Добавить("ОКАТО");
		СписокПоказателей.Добавить("ТелОрганизации");
		СписокПоказателей.Добавить("ФаксОрганизации");
		СписокПоказателей.Добавить("АдресЭлектроннойПочтыОрганизации");
		УстановитьПривилегированныйРежим(Истина);
		СведенияОбОрганизации = ЗарплатаКадры.ПолучитьСведенияОбОрганизации(Выборка.Организация, , СписокПоказателей);
		УстановитьПривилегированныйРежим(Ложь);
		ДанныеПечати.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
		ДанныеПечати.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
		ДанныеПечати.Вставить("ОКПО", СведенияОбОрганизации.ОКПО);
		Если Выборка.Дата < '20170101' И Не ПустаяСтрока(СведенияОбОрганизации.ОКВЭД) Тогда
			ДанныеПечати.Вставить("ОКВЭД", СведенияОбОрганизации.ОКВЭД);
		Иначе
			ДанныеПечати.Вставить("ОКВЭД", СведенияОбОрганизации.ОКВЭД2);
		КонецЕсли;
		ДанныеПечати.Вставить("ОКАТО", СведенияОбОрганизации.ОКАТО);
		ДанныеПечати.Вставить("ТелОрганизации", СведенияОбОрганизации.ТелОрганизации);
		ДанныеПечати.Вставить("ФаксОрганизации", СведенияОбОрганизации.ФаксОрганизации);
		ДанныеПечати.Вставить("АдресЭлектроннойПочтыОрганизации", СведенияОбОрганизации.АдресЭлектроннойПочтыОрганизации);
		
		МассивЧленовКомиссии = Новый Массив;
		Пока Выборка.Следующий() Цикл
			Если Выборка.РольВКомиссии = Перечисления.РолиЧленовКомиссииОхраныТруда.Председатель Тогда
				ФамилияИмяОтчествоПредседателя = ФизическиеЛицаКлиентСервер.ЧастиИмени(Выборка.ЧленКомиссии);
				ДанныеПечати.Вставить("ПредседательКомиссии", Выборка.ЧленКомиссии);
				// ФИОПредседателяКомиссии
				ДанныеПечати.Вставить("ФИОПредседателяКомиссии", "");
				ДанныеПечати.Вставить("ПолПредседателяКомиссии", "");
				ДанныеПечати.Вставить("ФамилияПредседателяКомиссии", "");
				КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, Выборка.ЧленКомиссии, "ФамилияИО, Пол, Фамилия", ОбщегоНазначения.ТекущаяДатаПользователя());
				Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
					ДанныеПечати.Вставить("ФИОПредседателяКомиссии", СтрокаКадровыхДанных.ФамилияИО);
					ДанныеПечати.Вставить("ПолПредседателяКомиссии", СтрокаКадровыхДанных.Пол);
					ДанныеПечати.Вставить("ФамилияПредседателяКомиссии", СтрокаКадровыхДанных.Фамилия);
				КонецЦикла;
				ДанныеПечати.Вставить("ДолжностьПредседателяКомиссии", Выборка.ДолжностьЧленаКомиссии);
			Иначе
				КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, Выборка.ЧленКомиссии, "ФамилияИО, Пол, Фамилия", ОбщегоНазначения.ТекущаяДатаПользователя());
				Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
					МассивЧленовКомиссии.Добавить(Новый Структура("ЧленКомиссии, ФИОЧленКомиссии, ДолжностьЧленаКомиссии", Выборка.ЧленКомиссии, СтрокаКадровыхДанных.ФамилияИО, Выборка.ДолжностьЧленаКомиссии));
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ДанныеПечати.Вставить("ЧленыКомиссии", МассивЧленовКомиссии);
		
		// Заполнение соответствия
		ДанныеПечатиОбъектов.Вставить(Выборка.Документ, ДанныеПечати);
		
	КонецЦикла;
	
	Выборка = РезультатыЗапроса.Получить(РезультатыЗапроса.ВГраница()-1).Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Документ") Цикл
		ДанныеДокумента = ДанныеПечатиОбъектов.Получить(Выборка.Документ);
		Если ДанныеДокумента = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		КоличествоРабочихМест = 0;
		ПереченьРабочихМест = Новый Массив;
		Пока Выборка.СледующийПоЗначениюПоля("РабочееМесто") Цикл
			КоличествоРабочихМест = КоличествоРабочихМест + 1;
			СтруктураРабочегоМеста = Новый Структура();
			СтруктураРабочегоМеста.Вставить("РабочееМесто", Выборка.РабочееМесто);
			СтруктураРабочегоМеста.Вставить("КоличествоРаботающих", Выборка.КоличествоРаботающих);
			СтруктураРабочегоМеста.Вставить("КоличествоЖенщин", Выборка.КоличествоЖенщин);
			СтруктураРабочегоМеста.Вставить("КоличествоЛицДо18Лет", Выборка.КоличествоЛицДо18Лет);
			СтруктураРабочегоМеста.Вставить("КоличествоИнвалидов", Выборка.КоличествоИнвалидов);
			СтруктураРабочегоМеста.Вставить("НомерРабочегоМеста", Выборка.НомерРабочегоМеста);
			СтруктураРабочегоМеста.Вставить("НомерГруппыАналогичныхМест", Выборка.НомерГруппыАналогичныхМест);
			СтруктураРабочегоМеста.Вставить("РабочееМестоАналогично", Выборка.РабочееМестоАналогично);
			СтруктураРабочегоМеста.Вставить("Примечание", Выборка.Примечание);
			МассивСтраховыхНомеров = Новый Массив;
			Пока Выборка.Следующий() Цикл
				МассивСтраховыхНомеров.Добавить(Выборка.СтраховойНомерПФР);
			КонецЦикла;
			СтруктураРабочегоМеста.Вставить("СтраховыеНомераПФР", МассивСтраховыхНомеров);
			ПереченьРабочихМест.Добавить(СтруктураРабочегоМеста);
		КонецЦикла;
		ДанныеДокумента.Вставить("КоличествоРабочихМест", КоличествоРабочихМест);
		ДанныеДокумента.Вставить("ПереченьРабочихМест", ПереченьРабочихМест);
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли