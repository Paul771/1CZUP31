#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.НесчастныйСлучайНаПроизводстве;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт о несчастном случае
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.НесчастныйСлучайНаПроизводстве";
	КомандаПечати.Идентификатор = "ПФ_MXL_АктОНесчастномСлучае";
	КомандаПечати.Представление = НСтр("ru = 'Акт о несчастном случае'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
	// Акт о расследовании группового несчастного случая
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.НесчастныйСлучайНаПроизводстве";
	КомандаПечати.Идентификатор = "ПФ_MXL_АктОГрупповомНесчастномСлучае";
	КомандаПечати.Представление = НСтр("ru = 'Акт о расследовании группового несчастного случая'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
	// Извещение о групповом несчастном случае
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.НесчастныйСлучайНаПроизводстве";
	КомандаПечати.Идентификатор = "ПФ_MXL_ИзвещениеОГрупповомНесчастномСлучае";
	КомандаПечати.Представление = НСтр("ru = 'Извещение о групповом несчастном случае'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
	// Сообщение о страховом случае
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.НесчастныйСлучайНаПроизводстве";
	КомандаПечати.Идентификатор = "ПФ_MXL_СообщениеОСтраховомСлучае";
	КомандаПечати.Представление = НСтр("ru = 'Сообщение о страховом случае'");
	КомандаПечати.Порядок = 40;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
	// Приказ о создании комиссии
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.НесчастныйСлучайНаПроизводстве";
	КомандаПечати.Идентификатор = "ПФ_MXL_ПриказОСозданииКомиссии";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о создании комиссии'");
	КомандаПечати.Порядок = 50;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
	// Протокол осмотра
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.НесчастныйСлучайНаПроизводстве";
	КомандаПечати.Идентификатор = "ПФ_MXL_ПротоколОсмотра";
	КомандаПечати.Представление = НСтр("ru = 'Протокол осмотра'");
	КомандаПечати.Порядок = 60;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктОГрупповомНесчастномСлучае") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_АктОГрупповомНесчастномСлучае",
			НСтр("ru = 'Акт о расследовании группового несчастного случая'"), ПечатьАктаОГрупповомНесчастномСлучае(МассивОбъектов, ОбъектыПечати), ,
			"Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_АктОГрупповомНесчастномСлучае");
	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктОНесчастномСлучае") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_АктОНесчастномСлучае",
			НСтр("ru = 'Акт о несчастном случае'"), ПечатьАктаОНесчастномСлучае(МассивОбъектов, ОбъектыПечати), ,
			"Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_АктОНесчастномСлучае");
	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ИзвещениеОГрупповомНесчастномСлучае") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ИзвещениеОГрупповомНесчастномСлучае",
			НСтр("ru = 'Извещение о групповом несчастном случае'"), ПечатьИзвещенияОГрупповомНесчастномСлучае(МассивОбъектов, ОбъектыПечати), ,
			"Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_ИзвещениеОГрупповомНесчастномСлучае");
	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПриказОСозданииКомиссии") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ПриказОСозданииКомиссии",
			НСтр("ru = 'Приказ о создании комиссии'"), ПечатьПриказОСозданииКомиссии(МассивОбъектов, ОбъектыПечати), ,
			"Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_ПриказОСозданииКомиссии");
	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПротоколОсмотра") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ПротоколОсмотра",
			НСтр("ru = 'Протокол осмотра'"), ПечатьПротоколОсмотра(МассивОбъектов, ОбъектыПечати), ,
			"Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_ПротоколОсмотра");
	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СообщениеОСтраховомСлучае") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_СообщениеОСтраховомСлучае",
			НСтр("ru = 'Сообщение о страховом случае'"), ПечатьСообщениеОСтраховомСлучае(МассивОбъектов, ОбъектыПечати), ,
			"Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_СообщениеОСтраховомСлучае");
	
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьАктаОГрупповомНесчастномСлучае(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НесчастныйСлучайНаПроизводстве_АктОГрупповомНесчастномСлучае";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_АктОГрупповомНесчастномСлучае");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ПервыйПострадавший = Истина;
		Для каждого СтрокаПострадавшего Из ДанныеДокумента.Пострадавшие Цикл
			
			// Документы нужно выводить на разных страницах.
			Если Не ПервыйПострадавший Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПострадавший = Ложь;
			КонецЕсли;
			
			Область1 = Макет.ПолучитьОбласть("Область1");
			Область2 = Макет.ПолучитьОбласть("Область2");
			Область3 = Макет.ПолучитьОбласть("Область3");
			Область4_1_1 = Макет.ПолучитьОбласть("Область4_1_1");
			Область4_1_2 = Макет.ПолучитьОбласть("Область4_1_2");
			Область4_2 = Макет.ПолучитьОбласть("Область4_2");
			Область5 = Макет.ПолучитьОбласть("Область5");
			Область5_1_1 = Макет.ПолучитьОбласть("Область5_1_1");
			Область5_1_2 = Макет.ПолучитьОбласть("Область5_1_2");
			Область6 = Макет.ПолучитьОбласть("Область6");
			Область7 = Макет.ПолучитьОбласть("Область7");
			Область8 = Макет.ПолучитьОбласть("Область8");
			Область9 = Макет.ПолучитьОбласть("Область9");
			Область10 = Макет.ПолучитьОбласть("Область10");
			Область11 = Макет.ПолучитьОбласть("Область11");
			Область12 = Макет.ПолучитьОбласть("Область12");
			ДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
			ДопПодпись = Макет.ПолучитьОбласть("ДопПодпись");
			ОбластьПояснения = Макет.ПолучитьОбласть("ОбластьПояснения");
			
			////////////////////////////////////////////////
			// Область 1
			Область1.Параметры.Заполнить(ДанныеДокумента);
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СведенияОбОрганизации, "100,100,999");
			Область1.Параметры.СведенияОбОрганизацииЧасть1 = СписокСтрок[0];
			Область1.Параметры.СведенияОбОрганизацииЧасть2 = СписокСтрок[1];
			Область1.Параметры.СведенияОбОрганизацииЧасть3 = СписокСтрок[2];
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаЧленыКомиссии, "100");
			Область1.Параметры.ЧленыКомиссииЧасть1 = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область1);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 2
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаУчастникиОсмотра, "100,100");
			Область2.Параметры.УчастникиОсмотраЧасть1 = СписокСтрок[0];
			Область2.Параметры.УчастникиОсмотраЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область2);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 3
			
			Область3.Параметры.ФИО = СтрокаПострадавшего.ФИОПолные;
			Область3.Параметры.Пол = СтрокаПострадавшего.Пол;
			Область3.Параметры.ДатаРождения = Формат(СтрокаПострадавшего.ДатаРождения, "ДЛФ=ДД");
			Область3.Параметры.Профессии = СтрокаПострадавшего.Профессии;
			Область3.Параметры.Должность = СтрокаПострадавшего.ДолжностьНаименование;
			Область3.Параметры.СтажРаботы = СтрокаПострадавшего.СтажОбщийПредставление;
			Область3.Параметры.СтажРаботыВОрганизации = СтрокаПострадавшего.СтажВОрганизацииПредставление;
			
			СписокСтрок = Новый Массив;
			Если ЗначениеЗаполнено(СтрокаПострадавшего.СостояниеВБраке) Тогда
				СписокСтрок.Добавить(Строка(СтрокаПострадавшего.СостояниеВБраке));
			КонецЕсли;
			СтрокаСоставСемьи = Новый ТекстовыйДокумент;
			СтрокаСоставСемьи.УстановитьТекст(СтрокаПострадавшего.СоставСемьи);
			Для Шаг = 1 По СтрокаСоставСемьи.КоличествоСтрок() Цикл
				СписокСтрок.Добавить(СтрокаСоставСемьи.ПолучитьСтроку(Шаг));
			КонецЦикла;
			Если СписокСтрок.Количество() = 0 Тогда
				СписокСтрок.Добавить("");
			КонецЕсли;
			Область3.Параметры.СемейноеПоложениеЧасть1 = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область3);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 4_1
			
			СтрокиИнструктажей = ДанныеДокумента.Инструктажи.НайтиСтроки(Новый Структура("Пострадавший", СтрокаПострадавшего.Пострадавший));
			Для Каждого СтрокаИнструктажей Из СтрокиИнструктажей Цикл
				Если ЗначениеЗаполнено(СтрокаИнструктажей.ДатаВводногоИнструктажа) Тогда
					Область4_1_1.Параметры.ДатаВводногоИнструктажа = Формат(СтрокаИнструктажей.ДатаВводногоИнструктажа, "ДЛФ=ДД");
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаИнструктажей.ДатаИнструктажаНаРабочемМесте) Тогда
					Область4_1_1.Параметры.ИнструктажНаРабочемМесте = СтрокаИнструктажей.ВидИнструктажа;
					Область4_1_2.Параметры.ДатаИнструктажаНаРабочемМесте = Формат(СтрокаИнструктажей.ДатаИнструктажаНаРабочемМесте, "ДЛФ=ДД");
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.Вывести(Область4_1_1);
			
			Область4_1_2.Параметры.НачалоСтажировки = Формат(СтрокаПострадавшего.НачалоСтажировки, "ДЛФ=ДД");
			Область4_1_2.Параметры.ОкончаниеСтажировки = Формат(СтрокаПострадавшего.ОкончаниеСтажировки, "ДЛФ=ДД");
			ТабличныйДокумент.Вывести(Область4_1_2);
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ХарактеристикаМестаПроисшествия, "25, 100,100");
			Область4_2.Параметры.ХарактеристикаМестаПроисшествияЧасть1 = СписокСтрок[0];
			Область4_2.Параметры.ХарактеристикаМестаПроисшествияЧасть2 = СписокСтрок[1];
			Область4_2.Параметры.ХарактеристикаМестаПроисшествияЧасть3 = СписокСтрок[2];
			
			ТабличныйДокумент.Вывести(Область4_2);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 3);
			
			/////////////////////////////////////////////////
			// Область 5
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ОписаниеОборудования, "30,100");
			Область5.Параметры.ОписаниеОборудованияЧасть1 = СписокСтрок[0];
			Область5.Параметры.ОписаниеОборудованияЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область5);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 5_1_1
			
			ТабличныйДокумент.Вывести(Область5_1_1);
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.СведенияСОУТ, "100");
			ДопСтрока.Параметры.ТекстСтроки = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(ДопСтрока);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 5_1_2
			
			ТабличныйДокумент.Вывести(Область5_1_2);
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.СведенияОПСОУТ, "100");
			ДопСтрока.Параметры.ТекстСтроки = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(ДопСтрока);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 6
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ОбстоятельстваПроисшествия, "100,100,100, 100,100,100, 100,100,100");
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть1 = СписокСтрок[0];
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть2 = СписокСтрок[1];
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть3 = СписокСтрок[2];
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть4 = СписокСтрок[3];
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть5 = СписокСтрок[4];
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть6 = СписокСтрок[5];
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть7 = СписокСтрок[6];
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть8 = СписокСтрок[7];
			Область6.Параметры.ОбстоятельстваПроисшествияЧасть9 = СписокСтрок[8];
			
			ТабличныйДокумент.Вывести(Область6);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 9);
			
			/////////////////////////////////////////////////
			// Область 7
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаПричиныПроисшествия, "25,100,100");
			Область7.Параметры.ПричиныПроисшествияЧасть1 = СписокСтрок[0];
			Область7.Параметры.ПричиныПроисшествияЧасть2 = СписокСтрок[1];
			Область7.Параметры.ПричиныПроисшествияЧасть3 = СписокСтрок[2];
			
			ТабличныйДокумент.Вывести(Область7);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 3);
			
			/////////////////////////////////////////////////
			// Область 8
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаВиновныеЛица, "100,100, 100,100, 100");
			Область8.Параметры.ВиновныеЛицаЧасть1 = СписокСтрок[0];
			Область8.Параметры.ВиновныеЛицаЧасть2 = СписокСтрок[1];
			Область8.Параметры.ВиновныеЛицаЧасть3 = СписокСтрок[2];
			Область8.Параметры.ВиновныеЛицаЧасть4 = СписокСтрок[3];
			Область8.Параметры.ВиновныеЛицаЧасть5 = СписокСтрок[4];
			
			ТабличныйДокумент.Вывести(Область8);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 5);
			
			/////////////////////////////////////////////////
			// Область 9
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.КвалификацияНесчастногоСлучая, "100,100, 100,100, 100,100, 100,100");
			Область9.Параметры.КвалификацияНесчастногоСлучаяЧасть1 = СписокСтрок[0];
			Область9.Параметры.КвалификацияНесчастногоСлучаяЧасть2 = СписокСтрок[1];
			Область9.Параметры.КвалификацияНесчастногоСлучаяЧасть3 = СписокСтрок[2];
			Область9.Параметры.КвалификацияНесчастногоСлучаяЧасть4 = СписокСтрок[3];
			Область9.Параметры.КвалификацияНесчастногоСлучаяЧасть5 = СписокСтрок[4];
			Область9.Параметры.КвалификацияНесчастногоСлучаяЧасть6 = СписокСтрок[5];
			Область9.Параметры.КвалификацияНесчастногоСлучаяЧасть7 = СписокСтрок[6];
			Область9.Параметры.КвалификацияНесчастногоСлучаяЧасть8 = СписокСтрок[7];
			
			ТабличныйДокумент.Вывести(Область9);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 8);
			
			/////////////////////////////////////////////////
			// Область 10
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.МероприятияПоУстранениюПричин, "100");
			Область10.Параметры.МероприятияПоУстранениюПричин = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область10);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 11
			
			ТабличныйДокумент.Вывести(Область11);
			
			/////////////////////////////////////////////////
			// Область 12
			
			ПервыйЧленКомиссии = Истина;
			Для каждого ФИОЧленаКомиссии Из ДанныеДокумента.МассивФИОЧленовКомиссии Цикл
				Если ПервыйЧленКомиссии Тогда
					ПервыйЧленКомиссии = Ложь;
					Область12.Параметры.ФИОЧленКомиссии = ФИОЧленаКомиссии;
					ТабличныйДокумент.Вывести(Область12);
				Иначе
					ДопПодпись.Параметры.ФИОЧленКомиссии = ФИОЧленаКомиссии;
					ТабличныйДокумент.Вывести(ДопПодпись);
				КонецЕсли;
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПояснения);
			
		КонецЦикла;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьАктаОНесчастномСлучае(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НесчастныйСлучайНаПроизводстве_АктОНесчастномСлучае";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_АктОНесчастномСлучае");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ПервыйПострадавший = Истина;
		Для каждого СтрокаПострадавшего Из ДанныеДокумента.Пострадавшие Цикл
			
			// Документы нужно выводить на разных страницах.
			Если Не ПервыйПострадавший Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПострадавший = Ложь;
			КонецЕсли;
			
			Область1 = Макет.ПолучитьОбласть("Область1");
			Область21= Макет.ПолучитьОбласть("Область21");
			Область22= Макет.ПолучитьОбласть("Область22");
			Область3= Макет.ПолучитьОбласть("Область3");
			Область3_1_1= Макет.ПолучитьОбласть("Область3_1_1");
			Область3_1_2= Макет.ПолучитьОбласть("Область3_1_2");
			Область4= Макет.ПолучитьОбласть("Область4");
			Область5= Макет.ПолучитьОбласть("Область5");
			Область6= Макет.ПолучитьОбласть("Область6");
			Область7= Макет.ПолучитьОбласть("Область7");
			Область8= Макет.ПолучитьОбласть("Область8");
			Область9= Макет.ПолучитьОбласть("Область9");
			Область10= Макет.ПолучитьОбласть("Область10");
			Область11= Макет.ПолучитьОбласть("Область11");
			Область12= Макет.ПолучитьОбласть("Область12");
			ДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
			ДопПодпись = Макет.ПолучитьОбласть("ДопПодпись");
			ОбластьПояснения = Макет.ПолучитьОбласть("ОбластьПояснения");
			
			////////////////////////////////////////////////
			// Область 1
			
			Область1.Параметры.Заполнить(ДанныеДокумента);
			Область1.Параметры.ДатаПроисшествияЧасть1 = Формат(ДанныеДокумента.ДатаПроисшествияДатаВремя, "ДЛФ=DDT");
			Область1.Параметры.ЧасовОтНачалаРаботы = ДанныеДокумента.ПолныхЧасовОтНачалаРаботы;
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СведенияОбОрганизации, "100,100,999");
			Область1.Параметры.СведенияОбОрганизацииЧасть1 = СписокСтрок[0];
			Область1.Параметры.СведенияОбОрганизацииЧасть2 = СписокСтрок[1];
			Область1.Параметры.СведенияОбОрганизацииЧасть3 = СписокСтрок[2];
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.НаименованиеПодразделения, "50, 999");
			Область1.Параметры.НаименованиеПодразделенияЧасть1 = СписокСтрок[0];
			Область1.Параметры.НаименованиеПодразделенияЧасть2 = СписокСтрок[1];
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СведенияОбОрганизацииНаправившейРаботника, "50, 999");
			Область1.Параметры.ОрганизацияНаправившаяРаботникаЧасть1 = СписокСтрок[0];
			Область1.Параметры.ОрганизацияНаправившаяРаботникаЧасть2 = СписокСтрок[1];
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаЧленыКомиссии, "100,100");
			Область1.Параметры.ЧленыКомиссииЧасть1 = СписокСтрок[0];
			Область1.Параметры.ЧленыКомиссииЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область1);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 2
			
			Область21.Параметры.ПострадавшийФИО = СтрокаПострадавшего.ФИОПолные;
			Область21.Параметры.ПострадавшийПол = СтрокаПострадавшего.Пол;
			Область21.Параметры.ПострадавшийДатаРождения = Формат(СтрокаПострадавшего.ДатаРождения, "ДЛФ=ДД");
			Область21.Параметры.ПострадавшийПрофессия = СтрокаПострадавшего.Профессии;
			Область21.Параметры.ПострадавшийДолжность = СтрокаПострадавшего.ДолжностьНаименование;
			Область21.Параметры.ПострадавшийСтаж = СтрокаПострадавшего.СтажОбщийПредставление;
			Область21.Параметры.ПострадавшийСтажВОрганизации = СтрокаПострадавшего.СтажВОрганизацииПредставление;
			
			СтрокиИнструктажей = ДанныеДокумента.Инструктажи.НайтиСтроки(Новый Структура("Пострадавший", СтрокаПострадавшего.Пострадавший));
			Для Каждого СтрокаИнструктажей Из СтрокиИнструктажей Цикл
				Если ЗначениеЗаполнено(СтрокаИнструктажей.ДатаВводногоИнструктажа) Тогда
					Область21.Параметры.ДатаВводногоИнструктажа = Формат(СтрокаИнструктажей.ДатаВводногоИнструктажа, "ДЛФ=ДД");
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаИнструктажей.ДатаИнструктажаНаРабочемМесте) Тогда
					Область21.Параметры.ИнструктажНаРабочемМесте = СтрокаИнструктажей.ВидИнструктажа;
					Область22.Параметры.ДатаИнструктажаНаРабочемМесте = Формат(СтрокаИнструктажей.ДатаИнструктажаНаРабочемМесте, "ДЛФ=ДД");
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.Вывести(Область21);
			
			Область22.Параметры.НачалоСтажировки = Формат(СтрокаПострадавшего.НачалоСтажировки, "ДЛФ=ДД");
			Область22.Параметры.ОкончаниеСтажировки = Формат(СтрокаПострадавшего.ОкончаниеСтажировки, "ДЛФ=ДД");
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ХарактеристикаМестаПроисшествия, "25,100,100,100");
			Область22.Параметры.ХарактеристикаМестаПроисшествияЧасть1 = СписокСтрок[0];
			Область22.Параметры.ХарактеристикаМестаПроисшествияЧасть2 = СписокСтрок[1];
			Область22.Параметры.ХарактеристикаМестаПроисшествияЧасть3 = СписокСтрок[2];
			Область22.Параметры.ХарактеристикаМестаПроисшествияЧасть4 = СписокСтрок[3];
			
			ТабличныйДокумент.Вывести(Область22);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 4);
			
			/////////////////////////////////////////////////
			// Область 3
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ОписаниеОборудования, "30,100");
			Область3.Параметры.ОписаниеОборудованияЧасть1 = СписокСтрок[0];
			Область3.Параметры.ОписаниеОборудованияЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область3);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 3_1_1
			
			ТабличныйДокумент.Вывести(Область3_1_1);
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.СведенияСОУТ, "100");
			ДопСтрока.Параметры.ТекстСтроки = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(ДопСтрока);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 3_1_2
			
			ТабличныйДокумент.Вывести(Область3_1_2);
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.СведенияОПСОУТ, "100");
			ДопСтрока.Параметры.ТекстСтроки = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(ДопСтрока);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 4
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ОбстоятельстваПроисшествия, "100,100,100");
			Область4.Параметры.ОбстоятельстваПроисшествияЧасть1 = СписокСтрок[0];
			Область4.Параметры.ОбстоятельстваПроисшествияЧасть2 = СписокСтрок[1];
			Область4.Параметры.ОбстоятельстваПроисшествияЧасть3 = СписокСтрок[2];
			
			ТабличныйДокумент.Вывести(Область4);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 3);
			
			/////////////////////////////////////////////////
			// Область 5
			
			Если ЗначениеЗаполнено(ДанныеДокумента.ВидПроисшествия) Тогда
				ВидПроисшествияНаименование = ДанныеДокумента.ВидПроисшествия;
			Иначе
				ВидПроисшествияНаименование = "";
			КонецЕсли;
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ВидПроисшествияНаименование, "65,100");
			Область5.Параметры.ВидПроисшествияЧасть1 = СписокСтрок[0];
			Область5.Параметры.ВидПроисшествияЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область5);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 6
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.ХарактерПовреждений, "60, 100");
			Область6.Параметры.ХарактерПоврежденийЧасть1 = СписокСтрок[0];
			Область6.Параметры.ХарактерПоврежденийЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область6);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 7
			
			Если ПустаяСтрока(СтрокаПострадавшего.ВидИСтепеньОпьянения) Тогда
				СтрокаПострадавшего.ВидИСтепеньОпьянения = "Нет";
			Иначе
				СтрокаПострадавшего.ВидИСтепеньОпьянения = "Да - " + СтрокаПострадавшего.ВидИСтепеньОпьянения;
			КонецЕсли;
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.ВидИСтепеньОпьянения, "100, 100");
			Область7.Параметры.ОпьянениеПострадавшегоЧасть1 = СписокСтрок[0];
			Область7.Параметры.ОпьянениеПострадавшегоЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область7);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 8
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаОчевидцы, "60, 100");
			Область8.Параметры.ОчевидцыЧасть1 = СписокСтрок[0];
			Область8.Параметры.ОчевидцыЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область8);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 9
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаПричиныПроисшествия, "55, 100, 100");
			Область9.Параметры.ПричиныПроисшествияЧасть1 = СписокСтрок[0];
			Область9.Параметры.ПричиныПроисшествияЧасть2 = СписокСтрок[1];
			Область9.Параметры.ПричиныПроисшествияЧасть3 = СписокСтрок[2];
			
			ТабличныйДокумент.Вывести(Область9);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 3);
			
			/////////////////////////////////////////////////
			// Область 10
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаВиновныеЛица, "100, 100, 100, 100, 100");
			Область10.Параметры.ВиновныеЛицаЧасть1 = СписокСтрок[0];
			Область10.Параметры.ВиновныеЛицаЧасть2 = СписокСтрок[1];
			Область10.Параметры.ВиновныеЛицаЧасть3 = СписокСтрок[2];
			Область10.Параметры.ВиновныеЛицаЧасть4 = СписокСтрок[3];
			Область10.Параметры.ВиновныеЛицаЧасть5 = СписокСтрок[4];
			
			ТабличныйДокумент.Вывести(Область10);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 5);
			
			/////////////////////////////////////////////////
			// Область 11
			
			Область11.Параметры.ОрганизацияНаименованиеАдрес = ДанныеДокумента.НаименованиеОрганизации + " " + ДанныеДокумента.СведенияОбОрганизацииФактическийАдрес;
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.МероприятияПоУстранениюПричин, "100");
			Область11.Параметры.УстранениеПричинЧасть1 = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область11);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 12
			
			ПервыйЧленКомиссии = Истина;
			Для каждого ФИОЧленаКомиссии Из ДанныеДокумента.МассивФИОЧленовКомиссии Цикл
				Если ПервыйЧленКомиссии Тогда
					ПервыйЧленКомиссии = Ложь;
					Область12.Параметры.ФИОЧленаКомиссии = ФИОЧленаКомиссии;
					ТабличныйДокумент.Вывести(Область12);
				Иначе
					ДопПодпись.Параметры.ФИОЧленаКомиссии = ФИОЧленаКомиссии;
					ТабличныйДокумент.Вывести(ДопПодпись);
				КонецЕсли;
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПояснения);
			
		КонецЦикла;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьИзвещенияОГрупповомНесчастномСлучае(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НесчастныйСлучайНаПроизводстве_ИзвещениеОГрупповомНесчастномСлучае";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_ИзвещениеОГрупповомНесчастномСлучае");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Область1 = Макет.ПолучитьОбласть("Область1");
		Область2 = Макет.ПолучитьОбласть("Область2");
		Область3 = Макет.ПолучитьОбласть("Область3");
		Область4 = Макет.ПолучитьОбласть("Область4");
		ДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
		
		////////////////////////////////////////////////
		// Область 1
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СведенияОбОрганизации, "100,100,100, 100");
		Область1.Параметры.СведенияОбОрганизацииЧасть1 = СписокСтрок[0];
		Область1.Параметры.СведенияОбОрганизацииЧасть2 = СписокСтрок[1];
		Область1.Параметры.СведенияОбОрганизацииЧасть3 = СписокСтрок[2];
		Область1.Параметры.СведенияОбОрганизацииЧасть4 = СписокСтрок[3];
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ХарактеристикаМестаПроисшествия + ", " + ДанныеДокумента.ОбстоятельстваПроисшествия, "100,100");
		Область1.Параметры.СведенияОПроисшествииЧасть1 = СписокСтрок[0];
		Область1.Параметры.СведенияОПроисшествииЧасть2 = СписокСтрок[1];
		
		ТабличныйДокумент.Вывести(Область1);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
		
		/////////////////////////////////////////////////
		// Область 2
		
		Область2.Параметры.ЧислоПострадавших = ДанныеДокумента.ЧислоПострадавших;
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаПострадавшие, "100,100");
		Область2.Параметры.СведенияОПострадавшихЧасть1 = СписокСтрок[0];
		Область2.Параметры.СведенияОПострадавшихЧасть2 = СписокСтрок[1];
		
		ТабличныйДокумент.Вывести(Область2);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
		
		////////////////////////////////////////////////
		// Область 3
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СведенияОПовреждениях, "100,100");
		Область3.Параметры.СведенияОПоврежденияхЧасть1 = СписокСтрок[0];
		Область3.Параметры.СведенияОПоврежденияхЧасть2 = СписокСтрок[1];
		
		ТабличныйДокумент.Вывести(Область3);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
		
		////////////////////////////////////////////////
		// Область 4
		
		ТабличныйДокумент.Вывести(Область4);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПриказОСозданииКомиссии(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НесчастныйСлучайНаПроизводстве_ПриказОСозданииКомиссии";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_ПриказОСозданииКомиссии");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьУчастникКомиссии = Макет.ПолучитьОбласть("УчастникКомиссии");
		ОбластьПодписьУчастникКомиссии = Макет.ПолучитьОбласть("ПодписьУчастникКомиссии");
		
		ОбластьЗаголовок.Параметры.Организация = ДанныеДокумента.НаименованиеОрганизации;
		ОбластьЗаголовок.Параметры.НомерПриказа = ДанныеДокумента.НомерПриказа;
		ОбластьЗаголовок.Параметры.ДатаПриказа = ДанныеДокумента.ДатаПриказа;
		ОбластьЗаголовок.Параметры.Город = ДанныеДокумента.Город;
		ОбластьЗаголовок.Параметры.ДатаПроисшествия = Формат(ДанныеДокумента.ДатаПроисшествияДатаВремя, "ДФ=""дд ММММ гггг 'г. в ' ЧЧ:мм""");;
		
		ОбластьЗаголовок.Параметры.СписокПострадавших = ДанныеДокумента.СписокПострадавших;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		Для Каждого СтрокаУчастникаКомиссии Из ДанныеДокумента.МассивФИОЧленовКомиссииСДолжностями Цикл
			ОбластьУчастникКомиссии.Параметры.УчастникКомиссии = СтрокаУчастникаКомиссии;
			ТабличныйДокумент.Вывести(ОбластьУчастникКомиссии);
		КонецЦикла;
		
		ФИООтветственногоСклоняемое = "";
		ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ДанныеДокумента.ФамилияОтветственного), 3, ФИООтветственногоСклоняемое, ДанныеДокумента.ПолОтветственного);
		ФИООтветственногоСклоняемое = СтрЗаменить(ДанныеДокумента.ФИООтветственногоЗаОхрануТруда, ДанныеДокумента.ФамилияОтветственного, ФИООтветственногоСклоняемое);
		ФИОДолжностьОтветственного = ФИООтветственногоСклоняемое + ?(ЗначениеЗаполнено(ДанныеДокумента.ДолжностьОтветственногоЗаОхрануТруда), " (" + ДанныеДокумента.ДолжностьОтветственногоЗаОхрануТруда + ")", "");
		
		ФИОРуководителяСклоняемое = "";
		ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ДанныеДокумента.ФамилияРуководителя), 2, ФИОРуководителяСклоняемое, ДанныеДокумента.ПолРуководителя);
		ФИОРуководителяСклоняемое = СтрЗаменить(ДанныеДокумента.ФИОРуководителя, ДанныеДокумента.ФамилияРуководителя, ФИОРуководителяСклоняемое);
		
		ОбластьПодвал.Параметры.ФИОДолжностьОтветственного = ФИОДолжностьОтветственного; 
		ОбластьПодвал.Параметры.ФИОРуководителяРод = ФИОРуководителяСклоняемое;
		ОбластьПодвал.Параметры.СписокКомиссии = ДанныеДокумента.СписокКомиссии;
		ОбластьПодвал.Параметры.ДатаПриказа = ДанныеДокумента.Дата;
		ОбластьПодвал.Параметры.ДолжностьРуководителя = ДанныеДокумента.ДолжностьРуководителя;
		ОбластьПодвал.Параметры.Организация = ДанныеДокумента.НаименованиеОрганизации;
		ОбластьПодвал.Параметры.ФИОРуководителя = ДанныеДокумента.ФИОРуководителя;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		Для каждого ФИОЧленаКомиссии Из ДанныеДокумента.МассивФИОЧленовКомиссии Цикл
			ОбластьПодписьУчастникКомиссии.Параметры.ФИОУчастникаКомиссии = ФИОЧленаКомиссии;
			ТабличныйДокумент.Вывести(ОбластьПодписьУчастникКомиссии);
		КонецЦикла;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПротоколОсмотра(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НесчастныйСлучайНаПроизводстве_ПротоколОсмотра";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_ПротоколОсмотра");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ПервыйПострадавший = Истина;
		Для каждого СтрокаПострадавшего Из ДанныеДокумента.Пострадавшие Цикл
			
			// Документы нужно выводить на разных страницах.
			Если Не ПервыйПострадавший Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПострадавший = Ложь;
			КонецЕсли;
			
			Область1 = Макет.ПолучитьОбласть("Область1");
			Область2 = Макет.ПолучитьОбласть("Область2");
			Область3 = Макет.ПолучитьОбласть("Область3");
			Область3_1_1 = Макет.ПолучитьОбласть("Область3_1_1");
			Область3_1_2 = Макет.ПолучитьОбласть("Область3_1_2");
			Область4 = Макет.ПолучитьОбласть("Область4");
			Область5 = Макет.ПолучитьОбласть("Область5");
			Область6 = Макет.ПолучитьОбласть("Область6");
			Область7 = Макет.ПолучитьОбласть("Область7");
			Область8 = Макет.ПолучитьОбласть("Область8");
			Область9 = Макет.ПолучитьОбласть("Область9");
			Область10 = Макет.ПолучитьОбласть("Область10");
			Область11 = Макет.ПолучитьОбласть("Область11");
			Область12 = Макет.ПолучитьОбласть("Область12");
			Область13 = Макет.ПолучитьОбласть("Область13");
			Область14 = Макет.ПолучитьОбласть("Область14");
			Область15 = Макет.ПолучитьОбласть("Область15");
			Область16 = Макет.ПолучитьОбласть("Область16");
			ДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
			ДопПодпись1 = Макет.ПолучитьОбласть("ДопПодпись1");
			ДопПодпись2 = Макет.ПолучитьОбласть("ДопПодпись2");
			ОбластьПояснения = Макет.ПолучитьОбласть("ОбластьПояснения");
			
			////////////////////////////////////////////////
			// Область 1
			
			Область1.Параметры.ДатаПроисшествия = ДанныеДокумента.ДатаПроисшествия;
			
			ФИОПострадавшегоСклоняемое = "";
			ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(СтрокаПострадавшего.Фамилия), 5, ФИОПострадавшегоСклоняемое, СтрокаПострадавшего.Пол);
			ФИОПострадавшегоСклоняемое = СтрЗаменить(СтрокаПострадавшего.ФамилияИО, СтрокаПострадавшего.Фамилия, ФИОПострадавшегоСклоняемое);
			Область1.Параметры.ФИОДолжностьПострадавшего = ФИОПострадавшегоСклоняемое + " (" + СтрокаПострадавшего.ДолжностьНаименование + ")";
			Область1.Параметры.МестоСоставленияПротоколаОсмотра = ДанныеДокумента.МестоСоставленияПротоколаОсмотра;
			Область1.Параметры.ДатаСоставленияПротоколаОсмотра = ДанныеДокумента.ДатаСоставленияПротоколаОсмотра;
			Область1.Параметры.ДатаПриказа = ДанныеДокумента.ДатаПриказа;
			Область1.Параметры.НомерПриказа = ДанныеДокумента.НомерПриказа;
			
			Область1.Параметры.НачалоОсмотраЧасы = Час(ДанныеДокумента.ОсмотрНачат);
			Область1.Параметры.НачалоОсмотраМинуты = Формат(ДанныеДокумента.ОсмотрНачат, "ДФ=мм");
			Область1.Параметры.ОкончаниеОсмотраЧасы = Час(ДанныеДокумента.ОсмотрОкончен);
			Область1.Параметры.ОкончаниеОсмотраМинуты = Формат(ДанныеДокумента.ОсмотрОкончен, "ДФ=мм");
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.НаименованиеОрганизации, "65, 999");
			Область1.Параметры.НаименованиеОрганизацииЧасть1 = СписокСтрок[0];
			Область1.Параметры.НаименованиеОрганизацииЧасть2 = СписокСтрок[1];
			
			Область1.Параметры.СведенияОПредседателеКомиссии = ДанныеДокумента.СведенияОПредседателеКомиссии;
			
			ОрганизацияИДата = ДанныеДокумента.НаименованиеСокращенное + " " + ДанныеДокумента.НаименованиеПодразделения
				+ " " + ДанныеДокумента.ДатаПроисшествия;
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ОрганизацияИДата, "30, 999");
			Область1.Параметры.ОрганизацияИДатаЧасть1 = СписокСтрок[0];
			Область1.Параметры.ОрганизацияИДатаЧасть2 = СписокСтрок[1];
			
			ДолжностьСклоняемая = "";
			ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(СтрокаПострадавшего.ДолжностьНаименование), 5, ДолжностьСклоняемая, СтрокаПострадавшего.Пол);
			
			СведенияОПострадавшем = ДолжностьСклоняемая + " " + ФИОПострадавшегоСклоняемое;
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СведенияОПострадавшем, "100, 999");
			Область1.Параметры.СведенияОПострадавшемЧасть1 = СписокСтрок[0];
			Область1.Параметры.СведенияОПострадавшемЧасть2 = СписокСтрок[1];
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаУчастникиОсмотраБезПредседателя, "55,100,100");
			Область1.Параметры.УчастникиОсмотраЧасть1 = СписокСтрок[0];
			Область1.Параметры.УчастникиОсмотраЧасть2 = СписокСтрок[1];
			Область1.Параметры.УчастникиОсмотраЧасть3 = СписокСтрок[2];
			
			ТабличныйДокумент.Вывести(Область1);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 3);
			
			/////////////////////////////////////////////////
			// Область 2
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ОбстановкаИСостояниеМестаПроисшествия, "100,100");
			Область2.Параметры.ОбстановкаИСостояниеМестаПроисшествияЧасть1 = СписокСтрок[0];
			Область2.Параметры.ОбстановкаИСостояниеМестаПроисшествияЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область2);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 3
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ОписаниеРабочегоМеста, "65,100");
			Область3.Параметры.ОписаниеРабочегоМестаЧасть1 = СписокСтрок[0];
			Область3.Параметры.ОписаниеРабочегоМестаЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область3);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 3_1_1
			
			ТабличныйДокумент.Вывести(Область3_1_1);
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.СведенияСОУТ, "100");
			ДопСтрока.Параметры.ТекстСтроки = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(ДопСтрока);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 3_1_2
			
			ТабличныйДокумент.Вывести(Область3_1_2);
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СтрокаПострадавшего.СведенияОПСОУТ, "100");
			ДопСтрока.Параметры.ТекстСтроки = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(ДопСтрока);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 4
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ОписаниеОборудования, "55,100");
			Область4.Параметры.ОписаниеОборудованияЧасть1 = СписокСтрок[0];
			Область4.Параметры.ОписаниеОборудованияЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область4);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 5
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СостояниеЗащитныхОграждений, "25,100");
			Область5.Параметры.СостояниеЗащитныхОгражденийЧасть1 = СписокСтрок[0];
			Область5.Параметры.СостояниеЗащитныхОгражденийЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область5);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 6
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СостояниеЗащитныхСредств, "100,100");
			Область6.Параметры.СостояниеЗащитныхСредствЧасть1 = СписокСтрок[0];
			Область6.Параметры.СостояниеЗащитныхСредствЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область6);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 7
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СостояниеОбщеобменнойВентиляции, "35");
			Область7.Параметры.СостояниеОбщеобменнойВентиляцииЧасть1 = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область7);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 8
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СостояниеОсвещенности, "50,100");
			Область8.Параметры.СостояниеОсвещенностиЧасть1 = СписокСтрок[0];
			Область8.Параметры.СостояниеОсвещенностиЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область8);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 9
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ТехническиеСредстваОсмотра, "60,100");
			Область9.Параметры.ТехническиеСредстваОсмотра = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область9);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 10
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ИзъятыеПредметы, "60,100");
			Область10.Параметры.ИзъятыеПредметы = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область10);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 11
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.ПрилагаемыеДокументы, "55,100");
			Область11.Параметры.МатериалыОсмотра = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область11);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 12
			
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаУчастникиОсмотра, "25,100");
			Область12.Параметры.СведенияОбУчаствующихВОсмотреЧасть1 = СписокСтрок[0];
			Область12.Параметры.СведенияОбУчаствующихВОсмотреЧасть2 = СписокСтрок[1];
			
			ТабличныйДокумент.Вывести(Область12);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
			
			/////////////////////////////////////////////////
			// Область 13
			
			Область13.Параметры.ЗаявленияПоступили = ?(ДанныеДокумента.СтрокаПоступившихЗаявлений = "", НСтр("ru = 'не поступили'"), НСтр("ru = 'поступили'"));
			СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаПоступившихЗаявлений, "35,100");
			Область13.Параметры.ПоступившиеЗаявленияЧасть1 = СписокСтрок[0];
			
			ТабличныйДокумент.Вывести(Область13);
			ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
			
			/////////////////////////////////////////////////
			// Область 14
			
			Область14.Параметры.ОсмотрМестаПроизвел = ДанныеДокумента.ФИООсмотрМестаПроизвел;
			ТабличныйДокумент.Вывести(Область14);
			Для каждого ФИОУчастникаОсмотра Из ДанныеДокумента.МассивУчастниковОсмотра Цикл
				ДопПодпись1.Параметры.ОсмотрМестаПроизвел = ФИОУчастникаОсмотра;
				ТабличныйДокумент.Вывести(ДопПодпись1);
			КонецЦикла;
			
			/////////////////////////////////////////////////
			// Область 15
			
			ПервыйЧленКомиссии = Истина;
			Для каждого ФИОЧленаКомиссии Из ДанныеДокумента.МассивФИОЧленовКомиссии Цикл
				Если ПервыйЧленКомиссии Тогда
					ПервыйЧленКомиссии = Ложь;
					Область15.Параметры.Участник = ФИОЧленаКомиссии;
					ТабличныйДокумент.Вывести(Область15);
				Иначе
					ДопПодпись2.Параметры.Участник = ФИОЧленаКомиссии;
					ТабличныйДокумент.Вывести(ДопПодпись2);
				КонецЕсли;
			КонецЦикла;
			
			/////////////////////////////////////////////////
			// Область 16
			
			Область16.Параметры.ОсмотрМестаПроизвел = ДанныеДокумента.ФИООсмотрМестаПроизвел;
			Область16.Параметры.ПротоколОсмотраСоставил = ДанныеДокумента.ФИОПротоколОсмотраСоставил;
			
			ТабличныйДокумент.Вывести(Область16);
			
			ТабличныйДокумент.Вывести(ОбластьПояснения);
			
		КонецЦикла;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьСообщениеОСтраховомСлучае(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НесчастныйСлучайНаПроизводстве_СообщениеОСтраховомСлучае";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НесчастныйСлучайНаПроизводстве.ПФ_MXL_СообщениеОСтраховомСлучае");
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ДанныеДокумента = ДанныеПечати.Значение;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Область1 = Макет.ПолучитьОбласть("Область1");
		Область2 = Макет.ПолучитьОбласть("Область2");
		Область3 = Макет.ПолучитьОбласть("Область3");
		Область4 = Макет.ПолучитьОбласть("Область4");
		ДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
		
		////////////////////////////////////////////////
		// Область 1
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СведенияОбОрганизацииФСС, "100,100,100");
		Область1.Параметры.СведенияОбОрганизацииЧасть1 = СписокСтрок[0];
		Область1.Параметры.СведенияОбОрганизацииЧасть2 = СписокСтрок[1];
		Область1.Параметры.СведенияОбОрганизацииЧасть3 = СписокСтрок[2];
		
		СведенияОПроисшествии = ДанныеДокумента.ДатаПроисшествия + " в " + ДанныеДокумента.ДатаПроисшествияЧасы + ":" + ДанныеДокумента.ДатаПроисшествияМинуты
			+ ", " + ДанныеДокумента.ХарактеристикаМестаПроисшествия + ", " + ДанныеДокумента.ОбстоятельстваПроисшествия;
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(СведенияОПроисшествии, "100,100,100,100");
		Область1.Параметры.СведенияОПроисшествииЧасть1 = СписокСтрок[0];
		Область1.Параметры.СведенияОПроисшествииЧасть2 = СписокСтрок[1];
		Область1.Параметры.СведенияОПроисшествииЧасть3 = СписокСтрок[2];
		Область1.Параметры.СведенияОПроисшествииЧасть4 = СписокСтрок[3];
		
		ТабличныйДокумент.Вывести(Область1);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 4);
		
		/////////////////////////////////////////////////
		// Область 2
		
		Область2.Параметры.ЧислоПострадавших = ДанныеДокумента.ЧислоПострадавших;
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СтрокаПострадавшиеФИОПолные, "100,100,100");
		Область2.Параметры.СведенияОПострадавшихЧасть1 = СписокСтрок[0];
		Область2.Параметры.СведенияОПострадавшихЧасть2 = СписокСтрок[1];
		Область2.Параметры.СведенияОПострадавшихЧасть3 = СписокСтрок[2];
		
		ТабличныйДокумент.Вывести(Область2);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 3);
		
		////////////////////////////////////////////////
		// Область 3
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ДанныеДокумента.СведенияОТрудовыхОтношениях, "100");
		Область3.Параметры.СведенияОТрудовыхОтношенияхЧасть1 = СписокСтрок[0];
		
		ТабличныйДокумент.Вывести(Область3);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 1);
		
		////////////////////////////////////////////////
		// Область 4
		
		ПередалСообщение = Строка(ДанныеДокумента.ОтветственныйЗаОхрануТруда) + " (" + ДанныеДокумента.ДолжностьОтветственногоЗаОхрануТруда + ")";
		
		СписокСтрок = ОхранаТруда.СтрокиДляПечатнойФормы(ПередалСообщение, "50,100");
		Область4.Параметры.ПередалСообщениеЧасть1 = СписокСтрок[0];
		Область4.Параметры.ПередалСообщениеЧасть2 = СписокСтрок[1];
		
		ТабличныйДокумент.Вывести(Область4);
		ОхранаТруда.ВывестиСтрокиМассива(ТабличныйДокумент, ДопСтрока, СписокСтрок, 2);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ключ);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ДанныеПечатиДокументов(МассивОбъектов)
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц  = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Легкого", НСтр("ru = 'Легкого'"));
	Запрос.УстановитьПараметр("Тяжелого", НСтр("ru = 'Тяжелого'"));
	Запрос.УстановитьПараметр("СоСмертельнымИсходом", НСтр("ru = 'Со смертельным исходом'"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НесчастныйСлучайНаПроизводстве.Ссылка,
	|	НесчастныйСлучайНаПроизводстве.Номер,
	|	НесчастныйСлучайНаПроизводстве.Дата,
	|	НесчастныйСлучайНаПроизводстве.Организация,
	|	ЕстьNull(Организации.НаименованиеПолное, """") КАК НаименованиеОрганизации,
	|	ЕстьNull(Организации.НаименованиеСокращенное, """") КАК НаименованиеСокращенное,
	|	НесчастныйСлучайНаПроизводстве.Подразделение,
	|	НесчастныйСлучайНаПроизводстве.Подразделение.Наименование КАК НаименованиеПодразделения,
	|	НесчастныйСлучайНаПроизводстве.ДатаПроисшествия КАК ДатаПроисшествияДатаВремя,
	|	НесчастныйСлучайНаПроизводстве.ПолныхЧасовОтНачалаРаботы,
	|	НесчастныйСлучайНаПроизводстве.СведенияОбОрганизацииНаправившейРаботника,
	|	ВЫБОР
	|		КОГДА НесчастныйСлучайНаПроизводстве.СтепеньТяжестиТравмы = ЗНАЧЕНИЕ(Перечисление.СтепениТяжестиТравмыНаПроизводстве.Легкая)
	|			ТОГДА &Легкого
	|		КОГДА НесчастныйСлучайНаПроизводстве.СтепеньТяжестиТравмы = ЗНАЧЕНИЕ(Перечисление.СтепениТяжестиТравмыНаПроизводстве.Тяжелая)
	|			ТОГДА &Тяжелого
	|		ИНАЧЕ &СоСмертельнымИсходом
	|	КОНЕЦ КАК ТипНесчастногоСлучая,
	|	НесчастныйСлучайНаПроизводстве.ГрупповаяТравма,
	|	НесчастныйСлучайНаПроизводстве.ХарактеристикаМестаПроисшествия,
	|	НесчастныйСлучайНаПроизводстве.ОбстоятельстваПроисшествия,
	|	НесчастныйСлучайНаПроизводстве.ВидПроисшествия КАК ВидПроисшествия,
	|	НесчастныйСлучайНаПроизводстве.МероприятияПоУстранениюПричин,
	|	НесчастныйСлучайНаПроизводстве.КвалификацияНесчастногоСлучая,
	|	НесчастныйСлучайНаПроизводстве.ОсмотрМестаПроизвел,
	|	НесчастныйСлучайНаПроизводстве.ПротоколОсмотраСоставил,
	|	НесчастныйСлучайНаПроизводстве.ОбстановкаИСостояниеМестаПроисшествия,
	|	НесчастныйСлучайНаПроизводстве.ОписаниеРабочегоМеста,
	|	НесчастныйСлучайНаПроизводстве.ОписаниеОборудования,
	|	НесчастныйСлучайНаПроизводстве.СостояниеЗащитныхОграждений,
	|	НесчастныйСлучайНаПроизводстве.СостояниеЗащитныхСредств,
	|	НесчастныйСлучайНаПроизводстве.СостояниеОбщеобменнойВентиляции,
	|	НесчастныйСлучайНаПроизводстве.СостояниеОсвещенности,
	|	НесчастныйСлучайНаПроизводстве.ТехническиеСредстваОсмотра,
	|	НесчастныйСлучайНаПроизводстве.ИзъятыеПредметы,
	|	НесчастныйСлучайНаПроизводстве.ПрилагаемыеДокументы,
	|	НесчастныйСлучайНаПроизводстве.ОсмотрНачат,
	|	НесчастныйСлучайНаПроизводстве.ОсмотрОкончен,
	|	НесчастныйСлучайНаПроизводстве.МестоСоставленияПротоколаОсмотра,
	|	НесчастныйСлучайНаПроизводстве.ДатаСоставленияПротоколаОсмотра,
	|	НесчастныйСлучайНаПроизводстве.ДатаПриказа,
	|	НесчастныйСлучайНаПроизводстве.НомерПриказа,
	|	НесчастныйСлучайНаПроизводстве.ДатаАкта,
	|	НесчастныйСлучайНаПроизводстве.НомерАкта,
	|	НесчастныйСлучайНаПроизводстве.Руководитель,
	|	НесчастныйСлучайНаПроизводстве.ДолжностьРуководителя,
	|	НесчастныйСлучайНаПроизводстве.ОтветственныйЗаОхрануТруда,
	|	НесчастныйСлучайНаПроизводстве.ДолжностьОтветственногоЗаОхрануТруда,
	|	НесчастныйСлучайНаПроизводстве.Ответственный,
	|	НесчастныйСлучайНаПроизводстве.Комментарий
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве КАК НесчастныйСлучайНаПроизводстве
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО НесчастныйСлучайНаПроизводстве.Организация = Организации.Ссылка
	|ГДЕ
	|	НесчастныйСлучайНаПроизводстве.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НесчастныйСлучайНаПроизводствеКомиссия.Ссылка,
	|	НесчастныйСлучайНаПроизводствеКомиссия.ЧленКомиссии,
	|	НесчастныйСлучайНаПроизводствеКомиссия.Должность,
	|	НесчастныйСлучайНаПроизводствеКомиссия.РольВКомиссии,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя КАК Период
	|ПОМЕСТИТЬ ВТКомиссия
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве.Комиссия КАК НесчастныйСлучайНаПроизводствеКомиссия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО НесчастныйСлучайНаПроизводствеКомиссия.Ссылка = ДанныеДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НесчастныйСлучайНаПроизводствеУчастникиОсмотра.Ссылка,
	|	НесчастныйСлучайНаПроизводствеУчастникиОсмотра.Участник,
	|	НесчастныйСлучайНаПроизводствеУчастникиОсмотра.ПроцессуальноеПоложение,
	|	НесчастныйСлучайНаПроизводствеУчастникиОсмотра.ПоступившиеЗаявления,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя КАК Период
	|ПОМЕСТИТЬ ВТОсмотр
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве.УчастникиОсмотра КАК НесчастныйСлучайНаПроизводствеУчастникиОсмотра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО НесчастныйСлучайНаПроизводствеУчастникиОсмотра.Ссылка = ДанныеДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Осмотр.Участник ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА Осмотр.Участник
	|	КОНЕЦ КАК Участник,
	|	Осмотр.Период
	|ПОМЕСТИТЬ ВТУчастникиОсмотраФизическиеЛица
	|ИЗ
	|	ВТОсмотр КАК Осмотр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НесчастныйСлучайНаПроизводствеПострадавшие.Ссылка,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.Ссылка.Организация КАК Организация,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.Пострадавший,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ДолжностьПоШтатномуРасписанию,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СтажОбщийПредставление,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СтажВОрганизацииПредставление,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ОпьянениеПострадавшего,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ВидИСтепеньОпьянения,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ХарактерПовреждений,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СведенияСОУТ,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.СведенияОПСОУТ,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.НачалоСтажировки,
	|	НесчастныйСлучайНаПроизводствеПострадавшие.ОкончаниеСтажировки,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя КАК Период
	|ПОМЕСТИТЬ ВТПострадавшиеФизическиеЛица
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве.Пострадавшие КАК НесчастныйСлучайНаПроизводствеПострадавшие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО НесчастныйСлучайНаПроизводствеПострадавшие.Ссылка = ДанныеДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НесчастныйСлучайНаПроизводствеВиновныеЛица.Ссылка,
	|	НесчастныйСлучайНаПроизводствеВиновныеЛица.Ссылка.Организация КАК Организация,
	|	НесчастныйСлучайНаПроизводствеВиновныеЛица.ВиновноеЛицо,
	|	НесчастныйСлучайНаПроизводствеВиновныеЛица.ДопущенныеНарушения,
	|	НесчастныйСлучайНаПроизводствеВиновныеЛица.СтепеньВины,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя КАК Период
	|ПОМЕСТИТЬ ВТВиновныеЛицаФизическиеЛица
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве.ВиновныеЛица КАК НесчастныйСлучайНаПроизводствеВиновныеЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО НесчастныйСлучайНаПроизводствеВиновныеЛица.Ссылка = ДанныеДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НесчастныйСлучайНаПроизводствеОчевидцы.Ссылка,
	|	НесчастныйСлучайНаПроизводствеОчевидцы.Очевидец,
	|	НесчастныйСлучайНаПроизводствеОчевидцы.АдресПредставление,
	|	НесчастныйСлучайНаПроизводствеОчевидцы.КонтактныйТелефонПредставление,
	|	ДанныеДокументов.ДатаПроисшествияДатаВремя КАК Период
	|ПОМЕСТИТЬ ВТОчевидцыФизическиеЛица
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве.Очевидцы КАК НесчастныйСлучайНаПроизводствеОчевидцы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО НесчастныйСлучайНаПроизводствеОчевидцы.Ссылка = ДанныеДокументов.Ссылка";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТКомиссия", "ЧленКомиссии,Период");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФамилияИО, Пол, Фамилия");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Комиссия.Ссылка,
	|	Комиссия.ЧленКомиссии,
	|	Комиссия.Должность,
	|	ЕСТЬNULL(Должности.Наименование, Комиссия.Должность) КАК ДолжностьНаименование,
	|	Комиссия.РольВКомиссии,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.ФамилияИО, Комиссия.ЧленКомиссии) КАК ФамилияИО,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.Фамилия, """") КАК Фамилия,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.Пол, НЕОПРЕДЕЛЕНО) КАК Пол
	|ПОМЕСТИТЬ ВТЧленыКомиссии
	|ИЗ
	|	ВТКомиссия КАК Комиссия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО Комиссия.ЧленКомиссии = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	|		ПО Комиссия.Должность = Должности.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКомиссия";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТУчастникиОсмотраФизическиеЛица", "Участник,Период");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФамилияИО");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Осмотр.Ссылка,
	|	Осмотр.Участник,
	|	Осмотр.ПроцессуальноеПоложение,
	|	Осмотр.ПоступившиеЗаявления,
	|	ЕСТЬNULL(КадровыеДанныеФизическихЛиц.ФамилияИО, Осмотр.Участник) КАК ФамилияИО
	|ПОМЕСТИТЬ ВТУчастникиОсмотра
	|ИЗ
	|	ВТОсмотр КАК Осмотр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО Осмотр.Участник = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТУчастникиОсмотраФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсмотр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Выполнить();
	
	СоздатьПустыеТаблицыОсновныхСотрудников(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПострадавшиеФизическиеЛица.Организация КАК Организация,
	|	ПострадавшиеФизическиеЛица.Пострадавший КАК ФизическоеЛицо,
	|	ПострадавшиеФизическиеЛица.Период КАК Период
	|ИЗ
	|	ВТПострадавшиеФизическиеЛица КАК ПострадавшиеФизическиеЛица
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПострадавшиеФизическиеЛица.Организация,
	|	ПострадавшиеФизическиеЛица.Период";
	
	ВыборкаПострадавшие = Запрос.Выполнить().Выбрать();
	Пока ВыборкаПострадавшие.СледующийПоЗначениюПоля("Организация") Цикл
		Пока ВыборкаПострадавшие.СледующийПоЗначениюПоля("Период") Цикл
			
			МассивФизическихЛиц = Новый Массив;
			Пока ВыборкаПострадавшие.Следующий() Цикл
				МассивФизическихЛиц.Добавить(ВыборкаПострадавшие.ФизическоеЛицо);
			КонецЦикла;
			
			ДополнитьОсновныхСотрудниковПоФизическимЛицам(
				Запрос.МенеджерВременныхТаблиц, МассивФизическихЛиц, ВыборкаПострадавшие.Организация, ВыборкаПострадавшие.Период);
			
		КонецЦикла;
	КонецЦикла;
	
	ПолучитьСотрудниковПоПриоритету(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	*
	|ИЗ
	|	ВТОсновныеСотрудники КАК ОсновныеСотрудники";
	
	Запрос.Выполнить();
	
	КадровыеДанные = "ФИОПолные, ФамилияИО, Пол, ДатаРождения, Профессии, СоставСемьи, СостояниеВБраке, Фамилия, Имя, Отчество, ВидДоговора, ОформленПоТрудовомуДоговору";
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТОсновныеСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.УстановитьПараметр("ТрудовойДоговор", НСтр("ru = 'Трудовой договор'"));
	Запрос.УстановитьПараметр("ДоговорГражданскоПравовогоХарактера", НСтр("ru = 'Договор гражданско-правового характера'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пострадавшие.Ссылка,
	|	Пострадавшие.Пострадавший,
	|	Пострадавшие.ДолжностьПоШтатномуРасписанию,
	|	ЕСТЬNULL(Должности.Наименование, """") КАК ДолжностьНаименование,
	|	Пострадавшие.СтажОбщийПредставление,
	|	Пострадавшие.СтажВОрганизацииПредставление,
	|	Пострадавшие.ОпьянениеПострадавшего,
	|	Пострадавшие.ВидИСтепеньОпьянения,
	|	Пострадавшие.ХарактерПовреждений,
	|	Пострадавшие.СведенияСОУТ,
	|	Пострадавшие.СведенияОПСОУТ,
	|	Пострадавшие.НачалоСтажировки,
	|	Пострадавшие.ОкончаниеСтажировки,
	|	КадровыеДанныеСотрудников.Сотрудник,
	|	КадровыеДанныеСотрудников.ФИОПолные,
	|	КадровыеДанныеСотрудников.ФамилияИО,
	|	КадровыеДанныеСотрудников.Фамилия,
	|	КадровыеДанныеСотрудников.Имя,
	|	КадровыеДанныеСотрудников.Отчество,
	|	КадровыеДанныеСотрудников.Пол,
	|	КадровыеДанныеСотрудников.ДатаРождения,
	|	РАЗНОСТЬДАТ(КадровыеДанныеСотрудников.ДатаРождения, Пострадавшие.Период, ГОД) КАК Возраст,
	|	КадровыеДанныеСотрудников.Профессии,
	|	КадровыеДанныеСотрудников.СоставСемьи,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.СостояниеВБраке, """") КАК СостояниеВБраке,
	|	ВЫБОР
	|		КОГДА КадровыеДанныеСотрудников.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровССотрудниками.ПустаяСсылка)
	|			ТОГДА КадровыеДанныеСотрудников.ВидДоговора
	|		КОГДА КадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
	|			ТОГДА &ТрудовойДоговор
	|		ИНАЧЕ &ДоговорГражданскоПравовогоХарактера
	|	КОНЕЦ КАК ВидДоговора
	|ПОМЕСТИТЬ ВТПострадавшие
	|ИЗ
	|	ВТПострадавшиеФизическиеЛица КАК Пострадавшие
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО Пострадавшие.Пострадавший = КадровыеДанныеСотрудников.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|		ПО Пострадавшие.ДолжностьПоШтатномуРасписанию = ШтатноеРасписание.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	|		ПО (ШтатноеРасписание.Должность = Должности.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПострадавшиеФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновныеСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников";
	
	Запрос.Выполнить();
	
	СоздатьПустыеТаблицыОсновныхСотрудников(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВиновныеЛицаФизическиеЛица.Организация КАК Организация,
	|	ВиновныеЛицаФизическиеЛица.ВиновноеЛицо КАК ФизическоеЛицо,
	|	ВиновныеЛицаФизическиеЛица.Период КАК Период
	|ИЗ
	|	ВТВиновныеЛицаФизическиеЛица КАК ВиновныеЛицаФизическиеЛица
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВиновныеЛицаФизическиеЛица.Организация,
	|	ВиновныеЛицаФизическиеЛица.Период";
	
	ВыборкаВиновныеЛица = Запрос.Выполнить().Выбрать();
	Пока ВыборкаВиновныеЛица.СледующийПоЗначениюПоля("Организация") Цикл
		Пока ВыборкаВиновныеЛица.СледующийПоЗначениюПоля("Период") Цикл
			
			МассивФизическихЛиц = Новый Массив;
			Пока ВыборкаВиновныеЛица.Следующий() Цикл
				МассивФизическихЛиц.Добавить(ВыборкаВиновныеЛица.ФизическоеЛицо);
			КонецЦикла;
			
			ДополнитьОсновныхСотрудниковПоФизическимЛицам(
				Запрос.МенеджерВременныхТаблиц, МассивФизическихЛиц, ВыборкаВиновныеЛица.Организация, ВыборкаВиновныеЛица.Период);
			
		КонецЦикла;
	КонецЦикла;
	
	ПолучитьСотрудниковПоПриоритету(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	*
	|ИЗ
	|	ВТОсновныеСотрудники КАК ОсновныеСотрудники";
	
	Запрос.Выполнить();
	
	КадровыеДанные = "ФамилияИО, Должность, Подразделение, Организация";
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТОсновныеСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВиновныеЛица.Ссылка,
	|	ВиновныеЛица.ВиновноеЛицо,
	|	ВиновныеЛица.ДопущенныеНарушения,
	|	ВиновныеЛица.СтепеньВины,
	|	КадровыеДанныеСотрудников.Сотрудник,
	|	КадровыеДанныеСотрудников.ФамилияИО,
	|	КадровыеДанныеСотрудников.Должность,
	|	Должности.Наименование КАК ДолжностьНаименование,
	|	КадровыеДанныеСотрудников.Подразделение
	|ПОМЕСТИТЬ ВТВиновныеЛица
	|ИЗ
	|	ВТВиновныеЛицаФизическиеЛица КАК ВиновныеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО ВиновныеЛица.ВиновноеЛицо = КадровыеДанныеСотрудников.ФизическоеЛицо
	|			И ВиновныеЛица.Организация = КадровыеДанныеСотрудников.Организация
	|			И ВиновныеЛица.Период = КадровыеДанныеСотрудников.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	|		ПО (КадровыеДанныеСотрудников.Должность = Должности.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВиновныеЛицаФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновныеСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТОчевидцыФизическиеЛица", "Очевидец,Период");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФамилияИО");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Очевидцы.Ссылка,
	|	Очевидцы.Очевидец,
	|	Очевидцы.АдресПредставление,
	|	Очевидцы.КонтактныйТелефонПредставление,
	|	КадровыеДанныеФизическихЛиц.ФамилияИО
	|ПОМЕСТИТЬ ВТОчевидцы
	|ИЗ
	|	ВТОчевидцыФизическиеЛица КАК Очевидцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО Очевидцы.Очевидец = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОчевидцыФизическиеЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ДанныеПечати = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Выборка);
		ДанныеПечати.Вставить("Дата", Формат(ДанныеПечати.Дата, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаПроисшествия", Формат(ДанныеПечати.ДатаПроисшествияДатаВремя, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаПроисшествияЧасы", Час(ДанныеПечати.ДатаПроисшествияДатаВремя));
		ДанныеПечати.Вставить("ДатаПроисшествияМинуты", Минута(ДанныеПечати.ДатаПроисшествияДатаВремя));
		ДанныеПечати.Вставить("ДатаСоставленияПротоколаОсмотра", Формат(ДанныеПечати.ДатаСоставленияПротоколаОсмотра, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаПриказа", Формат(ДанныеПечати.ДатаПриказа, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("ДатаАкта", Формат(ДанныеПечати.ДатаАкта, "ДЛФ=ДД"));
		
		ДанныеПечати.Вставить("Город", "");
		ДанныеПечати.Вставить("СведенияОбОрганизации", "");
		ДанныеПечати.Вставить("СведенияОбОрганизацииФСС", "");
		ДанныеПечати.Вставить("СведенияОбОрганизацииЮридическийАдрес", "");
		ДанныеПечати.Вставить("СведенияОбОрганизацииФактическийАдрес", "");
		ДанныеПечати.Вставить("ФИОРуководителя", "");
		ДанныеПечати.Вставить("ПолРуководителя", "");
		ДанныеПечати.Вставить("ФамилияРуководителя", "");
		ДанныеПечати.Вставить("ФИООтветственногоЗаОхрануТруда", "");
		ДанныеПечати.Вставить("ПолОтветственного", "");
		ДанныеПечати.Вставить("ФамилияОтветственного", "");
		ДанныеПечати.Вставить("ФИОПротоколОсмотраСоставил", "");
		ДанныеПечати.Вставить("ПолПротоколОсмотраСоставил", "");
		ДанныеПечати.Вставить("ФамилияПротоколОсмотраСоставил", "");
		ДанныеПечати.Вставить("ФИООсмотрМестаПроизвел", "");
		ДанныеПечати.Вставить("ПолОсмотрМестаПроизвел", "");
		ДанныеПечати.Вставить("ФамилияОсмотрМестаПроизвел", "");
		ДанныеПечати.Вставить("СтрокаЧленыКомиссии", "");
		ДанныеПечати.Вставить("МассивФИОЧленовКомиссии", Новый Массив);
		ДанныеПечати.Вставить("СписокКомиссии", "");
		ДанныеПечати.Вставить("МассивФИОЧленовКомиссииСДолжностями", Новый Массив);
		ДанныеПечати.Вставить("СтрокаУчастникиОсмотра", "");
		ДанныеПечати.Вставить("СтрокаУчастникиОсмотраБезПредседателя", "");
		ДанныеПечати.Вставить("СтрокаПоступившихЗаявлений", "");
		ДанныеПечати.Вставить("МассивУчастниковОсмотра", Новый Массив);
		ДанныеПечати.Вставить("Пострадавшие", Новый ТаблицаЗначений);
		ДанныеПечати.Вставить("СтрокаПострадавшие", "");
		ДанныеПечати.Вставить("СведенияОПовреждениях", "");
		ДанныеПечати.Вставить("СписокПострадавших", "");
		ДанныеПечати.Вставить("ЧислоПострадавших", "");
		ДанныеПечати.Вставить("СведенияОТрудовыхОтношениях", "");
		ДанныеПечати.Вставить("СтрокаПричиныПроисшествия", "");
		ДанныеПечати.Вставить("СтрокаВиновныеЛица", "");
		ПустаяТаблица = Новый ТаблицаЗначений;
		ПустаяТаблица.Колонки.Добавить("Пострадавший");
		ДанныеПечати.Вставить("Инструктажи", ПустаяТаблица);
		ДанныеПечати.Вставить("СтрокаОчевидцы", "");
		ДанныеПечати.Вставить("СведенияОПредседателеКомиссии", "");
		
		Если ЗначениеЗаполнено(Выборка.Организация) Тогда
			// Сведения об организации
			КодыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				Выборка.Организация, "КодОКВЭД,НаименованиеОКВЭД,КодОКВЭД2,НаименованиеОКВЭД2,ИНН,НаименованиеОКФС,РегистрационныйНомерФСС");
			
			Если Выборка.Дата < '20170101' И Не ПустаяСтрока(КодыОрганизации.КодОКВЭД) Тогда
				КодОКВЭД = КодыОрганизации.КодОКВЭД;
				НаименованиеОКВЭД = КодыОрганизации.НаименованиеОКВЭД;
			Иначе
				КодОКВЭД = КодыОрганизации.КодОКВЭД2;
				НаименованиеОКВЭД = КодыОрганизации.НаименованиеОКВЭД2;
			КонецЕсли;
			
			СписокПоказателей = Новый Массив;
			СписокПоказателей.Добавить("ТелОрганизации");
			
			ДанныеОбОрганизации = ЗарплатаКадры.ПолучитьСведенияОбОрганизации(Выборка.Организация, , СписокПоказателей);
			АдресаОрганизаций = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресаОрганизаций(Выборка.Организация);
			ОписаниеФактическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
				АдресаОрганизаций,
				Выборка.Организация,
				Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			ОписаниеЮридическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
				АдресаОрганизаций,
				Выборка.Организация,
				Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			
			СведенияОбОрганизации = Выборка.НаименованиеОрганизации
				+ ?(ЗначениеЗаполнено(КодОКВЭД), " " + НСтр("ru = 'ОКВЭД'") + ": " + КодОКВЭД, "")+ " " + НаименованиеОКВЭД
				+ ?(ЗначениеЗаполнено(ОписаниеЮридическогоАдреса.Представление), ", " + НСтр("ru = 'юр. адрес'") + ": " + ОписаниеЮридическогоАдреса.Представление, "")
				+ ?(ЗначениеЗаполнено(ОписаниеФактическогоАдреса.Представление), ", " + НСтр("ru = 'факт. адрес'") + ": " + ОписаниеФактическогоАдреса.Представление, "")
				+ ?(ЗначениеЗаполнено(ДанныеОбОрганизации.ТелОрганизации), ", " + НСтр("ru = 'тел'") + ": " + ДанныеОбОрганизации.ТелОрганизации, "");
			
			СведенияОбОрганизацииФСС = Выборка.НаименованиеОрганизации
				+ ?(ЗначениеЗаполнено(ОписаниеЮридическогоАдреса.Представление), ", " + НСтр("ru = 'юр. адрес'") + ": " + ОписаниеЮридическогоАдреса.Представление, "")
				+ ?(ЗначениеЗаполнено(ОписаниеФактическогоАдреса.Представление), ", " + НСтр("ru = 'факт. адрес'") + ": " + ОписаниеФактическогоАдреса.Представление, "")
				+ ?(ЗначениеЗаполнено(ДанныеОбОрганизации.ТелОрганизации), ", " + НСтр("ru = 'тел'") + ": " + ДанныеОбОрганизации.ТелОрганизации, "")
				+ ?(ЗначениеЗаполнено(КодОКВЭД), ", " + НСтр("ru = 'ОКВЭД'") + ": " + КодОКВЭД, "")+ " " + НаименованиеОКВЭД
				+ ?(ЗначениеЗаполнено(КодыОрганизации.НаименованиеОКФС),", " + КодыОрганизации.НаименованиеОКФС, "")
				+ ?(ЗначениеЗаполнено(КодыОрганизации.ИНН), ", " + НСтр("ru = 'ИНН'") + " " + КодыОрганизации.ИНН, "")
				+ ?(ЗначениеЗаполнено(КодыОрганизации.РегистрационныйНомерФСС), ", " + НСтр("ru = 'рег. номер'") + " " + КодыОрганизации.РегистрационныйНомерФСС, "");
			
			ДанныеПечати.Вставить("Город", ?(ОписаниеФактическогоАдреса = Неопределено, "", ОписаниеФактическогоАдреса.Город));
			ДанныеПечати.Вставить("СведенияОбОрганизации", СведенияОбОрганизации);
			ДанныеПечати.Вставить("СведенияОбОрганизацииФСС", СведенияОбОрганизацииФСС);
			ДанныеПечати.Вставить("СведенияОбОрганизацииЮридическийАдрес", ?(ОписаниеЮридическогоАдреса = Неопределено, "", ОписаниеЮридическогоАдреса.Представление));
			ДанныеПечати.Вставить("СведенияОбОрганизацииФактическийАдрес", ?(ОписаниеЮридическогоАдреса = Неопределено, "", ОписаниеФактическогоАдреса.Представление));
			
		КонецЕсли;
		
		// ФИОРуководителя
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДанныеПечати.Руководитель, "ФамилияИО, Пол, Фамилия", ДанныеПечати.ДатаПроисшествияДатаВремя);
		Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ФИОРуководителя", СтрокаКадровыхДанных.ФамилияИО);
			ДанныеПечати.Вставить("ПолРуководителя", СтрокаКадровыхДанных.Пол);
			ДанныеПечати.Вставить("ФамилияРуководителя", СтрокаКадровыхДанных.Фамилия);
		КонецЦикла;
		
		// ФИООтветственногоЗаОхрануТруда
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДанныеПечати.ОтветственныйЗаОхрануТруда, "ФамилияИО, Пол, Фамилия", ДанныеПечати.ДатаПроисшествияДатаВремя);
		Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ФИООтветственногоЗаОхрануТруда", СтрокаКадровыхДанных.ФамилияИО);
			ДанныеПечати.Вставить("ПолОтветственного", СтрокаКадровыхДанных.Пол);
			ДанныеПечати.Вставить("ФамилияОтветственного", СтрокаКадровыхДанных.Фамилия);
		КонецЦикла;
		
		// ФИОПротоколОсмотраСоставил
		ДанныеПечати.Вставить("ФИОПротоколОсмотраСоставил", "");
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДанныеПечати.ПротоколОсмотраСоставил, "ФамилияИО, Пол, Фамилия", ДанныеПечати.ДатаПроисшествияДатаВремя);
		Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ФИОПротоколОсмотраСоставил", СтрокаКадровыхДанных.ФамилияИО);
			ДанныеПечати.Вставить("ПолПротоколОсмотраСоставил", СтрокаКадровыхДанных.Пол);
			ДанныеПечати.Вставить("ФамилияПротоколОсмотраСоставил", СтрокаКадровыхДанных.Фамилия);
		КонецЦикла;
		
		// ФИООсмотрМестаПроизвел
		ДанныеПечати.Вставить("ФИООсмотрМестаПроизвел", "");
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ДанныеПечати.ОсмотрМестаПроизвел, "ФамилияИО, Пол, Фамилия", ДанныеПечати.ДатаПроисшествияДатаВремя);
		Для каждого СтрокаКадровыхДанных Из КадровыеДанные Цикл
			ДанныеПечати.Вставить("ФИООсмотрМестаПроизвел", СтрокаКадровыхДанных.ФамилияИО);
			ДанныеПечати.Вставить("ПолОсмотрМестаПроизвел", СтрокаКадровыхДанных.Пол);
			ДанныеПечати.Вставить("ФамилияОсмотрМестаПроизвел", СтрокаКадровыхДанных.Фамилия);
		КонецЦикла;
		
		// Заполнение соответствия
		ДанныеПечатиОбъектов.Вставить(Выборка.Ссылка, ДанныеПечати);
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЧленыКомиссии.Ссылка,
	|	ЧленыКомиссии.ЧленКомиссии,
	|	ЧленыКомиссии.Должность,
	|	ЧленыКомиссии.Пол,
	|	ЧленыКомиссии.ДолжностьНаименование,
	|	ЧленыКомиссии.РольВКомиссии,
	|	ЧленыКомиссии.ФамилияИО,
	|	ЧленыКомиссии.Фамилия
	|ИЗ
	|	ВТЧленыКомиссии КАК ЧленыКомиссии
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЧленыКомиссии.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивФИОЧленовКомиссии = Новый Массив;
		МассивФИОЧленовКомиссииСДолжностями = Новый Массив;
		СтрокаЧленыКомиссии = "";
		СписокКомиссии = "";
		Пока Выборка.Следующий() Цикл
			МассивФИОЧленовКомиссии.Добавить(Выборка.ФамилияИО);
			ДопСтрокаЧленаКомиссии = "";
			Если Выборка.РольВКомиссии = Перечисления.РолиЧленовКомиссииОхраныТруда.Председатель Тогда
				ДанныеПечати.Вставить("СведенияОПредседателеКомиссии", Выборка.ФамилияИО + " (" + Выборка.ДолжностьНаименование + ")");
				ДанныеПечати.Вставить("ПредседательКомиссии", Выборка.ЧленКомиссии);
				ДопСтрокаЧленаКомиссии = " " + НСтр("ru = '(председатель комиссии)'");
			КонецЕсли;
			УчастникКомиссии = "- " + Выборка.ФамилияИО + " - " + Выборка.ДолжностьНаименование + ДопСтрокаЧленаКомиссии;
			МассивФИОЧленовКомиссииСДолжностями.Добавить(УчастникКомиссии);
			СтрокаЧленыКомиссии = СтрокаЧленыКомиссии + Выборка.ФамилияИО + " " + Выборка.ДолжностьНаименование;
			Если ТипЗнч(Выборка.Должность) <> Тип("Строка") Тогда
				СтрокаЧленыКомиссии = СтрокаЧленыКомиссии + " " + ДанныеПечати.НаименованиеСокращенное + ", ";
			Иначе
				СтрокаЧленыКомиссии = СтрокаЧленыКомиссии + ", ";
			КонецЕсли;
			ФИОЧленаКомиссииСклоняемое = "";
			ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(Выборка.Фамилия), 2, ФИОЧленаКомиссииСклоняемое, Выборка.Пол);
			ФИОЧленаКомиссииСклоняемое = СтрЗаменить(Выборка.ФамилияИО, Выборка.Фамилия, ФИОЧленаКомиссииСклоняемое);
			СписокКомиссии = СписокКомиссии + ФИОЧленаКомиссииСклоняемое + ", ";
		КонецЦикла;
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаЧленыКомиссии, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СписокКомиссии, 2);
		
		ДанныеПечати.Вставить("СтрокаЧленыКомиссии", СтрокаЧленыКомиссии);
		ДанныеПечати.Вставить("МассивФИОЧленовКомиссии", МассивФИОЧленовКомиссии);
		ДанныеПечати.Вставить("СписокКомиссии", СписокКомиссии);
		ДанныеПечати.Вставить("МассивФИОЧленовКомиссииСДолжностями", МассивФИОЧленовКомиссииСДолжностями);
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчастникиОсмотра.Ссылка,
	|	УчастникиОсмотра.Участник,
	|	УчастникиОсмотра.ПроцессуальноеПоложение КАК ВидУчастника,
	|	УчастникиОсмотра.ПоступившиеЗаявления,
	|	УчастникиОсмотра.ФамилияИО
	|ИЗ
	|	ВТУчастникиОсмотра КАК УчастникиОсмотра
	|
	|УПОРЯДОЧИТЬ ПО
	|	УчастникиОсмотра.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивУчастниковОсмотра = Новый Массив;
		СтрокаУчастникиОсмотра = "";
		СтрокаУчастникиОсмотраБезПредседателя = "";
		СтрокаПоступившихЗаявлений = "";
		Пока Выборка.Следующий() Цикл
			СтрокаУчастникиОсмотра = СтрокаУчастникиОсмотра + Выборка.ВидУчастника
				+ " " + Выборка.ФамилияИО + ", ";
			Если Выборка.Участник <> ДанныеПечати.ПредседательКомиссии Тогда
				СтрокаУчастникиОсмотраБезПредседателя = СтрокаУчастникиОсмотраБезПредседателя + Выборка.ВидУчастника
				+ " " + Выборка.ФамилияИО + ", ";
			КонецЕсли;
			Если Не ПустаяСтрока(Выборка.ПоступившиеЗаявления) Тогда
				СтрокаПоступившихЗаявлений = СтрокаПоступившихЗаявлений + Выборка.ВидУчастника + " "
					+ Выборка.ФамилияИО + ": " + Выборка.ПоступившиеЗаявления + ", ";
			КонецЕсли;
			Если ДанныеПечати.ОсмотрМестаПроизвел <> Выборка.Участник Тогда
				МассивУчастниковОсмотра.Добавить(Выборка.ФамилияИО);
			КонецЕсли;
		КонецЦикла;
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаУчастникиОсмотра, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаУчастникиОсмотраБезПредседателя, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаПоступившихЗаявлений, 2);
		ДанныеПечати.Вставить("СтрокаУчастникиОсмотра", СтрокаУчастникиОсмотра);
		ДанныеПечати.Вставить("СтрокаУчастникиОсмотраБезПредседателя", СтрокаУчастникиОсмотраБезПредседателя);
		ДанныеПечати.Вставить("СтрокаПоступившихЗаявлений", СтрокаПоступившихЗаявлений);
		ДанныеПечати.Вставить("МассивУчастниковОсмотра", МассивУчастниковОсмотра);
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пострадавшие.Ссылка,
	|	Пострадавшие.Пострадавший,
	|	Пострадавшие.ДолжностьПоШтатномуРасписанию,
	|	Пострадавшие.ДолжностьНаименование,
	|	Пострадавшие.СтажОбщийПредставление,
	|	Пострадавшие.СтажВОрганизацииПредставление,
	|	Пострадавшие.ОпьянениеПострадавшего,
	|	Пострадавшие.ВидИСтепеньОпьянения,
	|	Пострадавшие.ХарактерПовреждений,
	|	Пострадавшие.СведенияСОУТ,
	|	Пострадавшие.СведенияОПСОУТ,
	|	Пострадавшие.Сотрудник,
	|	Пострадавшие.ФИОПолные,
	|	Пострадавшие.ФамилияИО,
	|	Пострадавшие.Фамилия,
	|	Пострадавшие.Имя,
	|	Пострадавшие.Отчество,
	|	Пострадавшие.Пол,
	|	Пострадавшие.ДатаРождения,
	|	Пострадавшие.Возраст,
	|	Пострадавшие.Профессии,
	|	Пострадавшие.СоставСемьи,
	|	Пострадавшие.СостояниеВБраке,
	|	Пострадавшие.ВидДоговора,
	|	Пострадавшие.НачалоСтажировки,
	|	Пострадавшие.ОкончаниеСтажировки
	|ИЗ
	|	ВТПострадавшие КАК Пострадавшие
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пострадавшие.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	ТаблицаПострадавших = РезультатЗапроса.Выгрузить();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НайденныеСтроки = ТаблицаПострадавших.НайтиСтроки(Новый Структура("Ссылка", Выборка.Ссылка));
		Пострадавшие = ТаблицаПострадавших.Скопировать(НайденныеСтроки);
		
		СтрокаПострадавшие = "";
		СтрокаПострадавшиеФИОПолные = "";
		СведенияОПовреждениях = "";
		СписокПострадавших = "";
		СведенияОТрудовыхОтношениях = "";
		Для каждого СтрокаТаблицыПострадавшие Из Пострадавшие Цикл
			СтрокаПострадавшие = СтрокаПострадавшие + СтрокаТаблицыПострадавшие.ФамилияИО + " " + СтрокаТаблицыПострадавшие.Профессии + " " + СтрокаТаблицыПострадавшие.ДолжностьНаименование + " " + СтрокаТаблицыПострадавшие.Возраст + " лет, ";
			СтрокаПострадавшиеФИОПолные = СтрокаПострадавшиеФИОПолные + СтрокаТаблицыПострадавшие.ФИОПолные + " " + СтрокаТаблицыПострадавшие.Профессии + " " + СтрокаТаблицыПострадавшие.ДолжностьНаименование + " " + СтрокаТаблицыПострадавшие.Возраст + " лет, ";
			СведенияОПовреждениях = СведенияОПовреждениях + СтрокаТаблицыПострадавшие.ФамилияИО + " " + СтрокаТаблицыПострадавшие.ХарактерПовреждений + ", ";
			
			ФамилияСклоняемая = "";
			ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(СтрокаТаблицыПострадавшие.Фамилия), 5, ФамилияСклоняемая, СтрокаТаблицыПострадавшие.Пол);
			СписокПострадавших = СписокПострадавших + СтрЗаменить(СтрокаТаблицыПострадавшие.ФамилияИО, СтрокаТаблицыПострадавшие.Фамилия, ФамилияСклоняемая) + ", ";
			
			СведенияОТрудовыхОтношениях = СведенияОТрудовыхОтношениях + СтрокаТаблицыПострадавшие.ФамилияИО + " - " + СтрокаТаблицыПострадавшие.ВидДоговора + ", ";
			
		КонецЦикла;
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаПострадавшие, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаПострадавшиеФИОПолные, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СведенияОПовреждениях, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СписокПострадавших, 2);
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СведенияОТрудовыхОтношениях, 2);
		
		КоличествоПострадавших = НайденныеСтроки.Количество();
		КоличествоПострадавшихПрописью = ЧислоПрописью(КоличествоПострадавших, , НСтр("ru = ',,,,,,,,0'"));
		ПредставлениеПострадавших = СтрокаСЧислом(НСтр("ru = '; пострадавший; ; пострадавших; пострадавших; пострадавших'"), КоличествоПострадавших , ВидЧисловогоЗначения.Количественное);
		ЧислоПострадавших =  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 (%2) %3'"), КоличествоПострадавших , КоличествоПострадавшихПрописью , ПредставлениеПострадавших);
		
		ДанныеПечати.Вставить("Пострадавшие", Пострадавшие);
		ДанныеПечати.Вставить("СтрокаПострадавшие", СтрокаПострадавшие);
		ДанныеПечати.Вставить("СтрокаПострадавшиеФИОПолные", СтрокаПострадавшиеФИОПолные);
		ДанныеПечати.Вставить("СведенияОПовреждениях", СведенияОПовреждениях);
		ДанныеПечати.Вставить("СписокПострадавших", СписокПострадавших);
		ДанныеПечати.Вставить("ЧислоПострадавших", ЧислоПострадавших);
		ДанныеПечати.Вставить("СведенияОТрудовыхОтношениях", СведенияОТрудовыхОтношениях);
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НесчастныйСлучайНаПроизводствеПричиныПроисшествия.Ссылка,
	|	НесчастныйСлучайНаПроизводствеПричиныПроисшествия.Причина,
	|	НесчастныйСлучайНаПроизводствеПричиныПроисшествия.Примечание
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве.ПричиныПроисшествия КАК НесчастныйСлучайНаПроизводствеПричиныПроисшествия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО НесчастныйСлучайНаПроизводствеПричиныПроисшествия.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НесчастныйСлучайНаПроизводствеПричиныПроисшествия.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПричиныПроисшествия = "";
		Пока Выборка.Следующий() Цикл
			СтрокаПричиныПроисшествия = СтрокаПричиныПроисшествия + Выборка.Причина + " " + Выборка.Примечание + ", ";
		КонецЦикла;
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаПричиныПроисшествия, 2);
		ДанныеПечати.Вставить("СтрокаПричиныПроисшествия", СтрокаПричиныПроисшествия);
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВиновныеЛица.Ссылка,
	|	ВиновныеЛица.ВиновноеЛицо,
	|	ВиновныеЛица.ДопущенныеНарушения,
	|	ВиновныеЛица.СтепеньВины,
	|	ВиновныеЛица.ФамилияИО,
	|	ВиновныеЛица.Должность,
	|	ВиновныеЛица.ДолжностьНаименование,
	|	ВиновныеЛица.Подразделение
	|ИЗ
	|	ВТВиновныеЛица КАК ВиновныеЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО ВиновныеЛица.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВиновныеЛица.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
	
		СтрокаВиновныеЛица = "";
		Пока Выборка.Следующий() Цикл
			СтрокаВиновныеЛица = СтрокаВиновныеЛица + Выборка.ФамилияИО
				+ Выборка.ДолжностьНаименование + " " + Выборка.Подразделение + ". " + Выборка.ДопущенныеНарушения 
				+ ?(ЗначениеЗаполнено(Выборка.СтепеньВины), " " + НСтр("ru = 'Степень вины'") + " - " + Выборка.СтепеньВины + "%.", "") + "    ";
		КонецЦикла;
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаВиновныеЛица, 2);
		ДанныеПечати.Вставить("СтрокаВиновныеЛица", СтрокаВиновныеЛица);
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НесчастныйСлучайНаПроизводствеИнструктажи.Ссылка КАК Ссылка,
	|	НесчастныйСлучайНаПроизводствеИнструктажи.Пострадавший КАК Пострадавший,
	|	НесчастныйСлучайНаПроизводствеИнструктажи.ВидИнструктажа,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НесчастныйСлучайНаПроизводствеИнструктажи.ВидИнструктажа = ЗНАЧЕНИЕ(Справочник.ВидыИнструктажейПоОхранеТруда.Вводный)
	|				ТОГДА НесчастныйСлучайНаПроизводствеИнструктажи.ДатаПрохождения
	|		КОНЕЦ) КАК ДатаВводногоИнструктажа,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НесчастныйСлучайНаПроизводствеИнструктажи.ВидИнструктажа <> ЗНАЧЕНИЕ(Справочник.ВидыИнструктажейПоОхранеТруда.Вводный)
	|				ТОГДА НесчастныйСлучайНаПроизводствеИнструктажи.ДатаПрохождения
	|		КОНЕЦ) КАК ДатаИнструктажаНаРабочемМесте
	|ИЗ
	|	Документ.НесчастныйСлучайНаПроизводстве.Инструктажи КАК НесчастныйСлучайНаПроизводствеИнструктажи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ДанныеДокументов
	|		ПО НесчастныйСлучайНаПроизводствеИнструктажи.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НесчастныйСлучайНаПроизводствеИнструктажи.Ссылка,
	|	НесчастныйСлучайНаПроизводствеИнструктажи.Пострадавший,
	|	НесчастныйСлучайНаПроизводствеИнструктажи.ВидИнструктажа
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Пострадавший,
	|	ДатаВводногоИнструктажа,
	|	ДатаИнструктажаНаРабочемМесте";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	ТаблицаИнструктажей = РезультатЗапроса.Выгрузить();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = ТаблицаИнструктажей.НайтиСтроки(Новый Структура("Ссылка", Выборка.Ссылка));
		Инструктажи = ТаблицаИнструктажей.Скопировать(НайденныеСтроки);
		
		ДанныеПечати.Вставить("Инструктажи", Инструктажи);
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Очевидцы.Ссылка,
	|	Очевидцы.Очевидец,
	|	Очевидцы.АдресПредставление,
	|	Очевидцы.КонтактныйТелефонПредставление,
	|	Очевидцы.ФамилияИО
	|ИЗ
	|	ВТОчевидцы КАК Очевидцы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Очевидцы.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(Выборка.Ссылка);
		Если ДанныеПечати = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаОчевидцы = "";
		Пока Выборка.Следующий() Цикл
			СтрокаОчевидцы = СтрокаОчевидцы + Выборка.ФамилияИО + " " + Выборка.АдресПредставление + " "
				+ Выборка.КонтактныйТелефонПредставление + ", ";
		КонецЦикла;
		СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаОчевидцы, 2);
		ДанныеПечати.Вставить("СтрокаОчевидцы", СтрокаОчевидцы);
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

Процедура СоздатьПустыеТаблицыОсновныхСотрудников(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	NULL КАК Сотрудник,
	|	NULL КАК ФизическоеЛицо,
	|	NULL КАК Период,
	|	NULL КАК ВидЗанятости,
	|	NULL КАК Приоритет
	|ПОМЕСТИТЬ ВТОсновныеСотрудники";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ДополнитьОсновныхСотрудниковПоФизическимЛицам(МенеджерВременныхТаблиц, МассивФизическихЛиц, Организация, ДатаСведений)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.Организация = Организация;
	ПараметрыПолученияСотрудников.НачалоПериода = ДатаСведений;
	ПараметрыПолученияСотрудников.ОкончаниеПериода = ДатаСведений;
	ПараметрыПолученияСотрудников.СписокФизическихЛиц = МассивФизическихЛиц;
	ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
	ПараметрыПолученияСотрудников.КадровыеДанные = "ВидЗанятости";
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеСотрудники.Сотрудник,
	|	ОсновныеСотрудники.ФизическоеЛицо,
	|	ОсновныеСотрудники.Период,
	|	ОсновныеСотрудники.ВидЗанятости,
	|	ОсновныеСотрудники.Приоритет
	|ПОМЕСТИТЬ ВТОсновныеСотрудникиВрем
	|ИЗ
	|	ВТОсновныеСотрудники КАК ОсновныеСотрудники
	|ГДЕ
	|	ОсновныеСотрудники.Сотрудник ЕСТЬ НЕ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеСотрудникиФизическихЛиц.Сотрудник,
	|	ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо,
	|	ОсновныеСотрудникиФизическихЛиц.Период,
	|	ОсновныеСотрудникиФизическихЛиц.ВидЗанятости,
	|	ВЫБОР
	|		КОГДА ОсновныеСотрудникиФизическихЛиц.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
	|			ТОГДА 1
	|		КОГДА ОсновныеСотрудникиФизическихЛиц.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
	|			ТОГДА 2
	|		КОГДА ОсновныеСотрудникиФизическихЛиц.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Подработка)
	|			ТОГДА 3
	|		КОГДА ОсновныеСотрудникиФизическихЛиц.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|			ТОГДА 4
	|		ИНАЧЕ 99
	|	КОНЕЦ
	|ИЗ
	|	ВТСотрудникиОрганизации КАК ОсновныеСотрудникиФизическихЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновныеСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСотрудникиВрем.Сотрудник,
	|	ОсновныеСотрудникиВрем.ФизическоеЛицо,
	|	ОсновныеСотрудникиВрем.Период,
	|	ОсновныеСотрудникиВрем.ВидЗанятости,
	|	ОсновныеСотрудникиВрем.Приоритет
	|ПОМЕСТИТЬ ВТОсновныеСотрудники
	|ИЗ
	|	ВТОсновныеСотрудникиВрем КАК ОсновныеСотрудникиВрем
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеСотрудникиВрем.Сотрудник,
	|	ОсновныеСотрудникиВрем.ФизическоеЛицо,
	|	ОсновныеСотрудникиВрем.Период,
	|	ОсновныеСотрудникиВрем.ВидЗанятости,
	|	ОсновныеСотрудникиВрем.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновныеСотрудникиВрем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСотрудникиОрганизации";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьСотрудниковПоПриоритету(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеСотрудники.Сотрудник,
	|	ОсновныеСотрудники.ФизическоеЛицо,
	|	ОсновныеСотрудники.Период,
	|	ОсновныеСотрудники.ВидЗанятости,
	|	ОсновныеСотрудники.Приоритет
	|ПОМЕСТИТЬ ВТОсновныеСотрудникиВрем
	|ИЗ
	|	ВТОсновныеСотрудники КАК ОсновныеСотрудники
	|ГДЕ
	|	ОсновныеСотрудники.Сотрудник ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСотрудники.Сотрудник,
	|	ОсновныеСотрудники.Период,
	|	МИНИМУМ(ОсновныеСотрудники.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТПриоритетыСотрудников
	|ИЗ
	|	ВТОсновныеСотрудникиВрем КАК ОсновныеСотрудники
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеСотрудники.Сотрудник,
	|	ОсновныеСотрудники.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновныеСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСотрудники.Сотрудник,
	|	ОсновныеСотрудники.ФизическоеЛицо,
	|	ОсновныеСотрудники.Период,
	|	ОсновныеСотрудники.ВидЗанятости
	|ПОМЕСТИТЬ ВТОсновныеСотрудники
	|ИЗ
	|	ВТПриоритетыСотрудников КАК ПриоритетыСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОсновныеСотрудникиВрем КАК ОсновныеСотрудники
	|		ПО ПриоритетыСотрудников.Сотрудник = ОсновныеСотрудники.Сотрудник
	|			И ПриоритетыСотрудников.Период = ОсновныеСотрудники.Период
	|			И ПриоритетыСотрудников.Приоритет = ОсновныеСотрудники.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновныеСотрудникиВрем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПриоритетыСотрудников";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли