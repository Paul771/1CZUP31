
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	РасчетЗарплатыРасширенныйФормы.ДокументыПриСозданииНаСервере(ЭтаФорма);
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, ДатаСобытия", 
			"Объект.Организация", "Объект.Ответственный", "Объект.ДатаИзменения");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		ЗаполнитьУдержания();
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриПолученииДанныхНаСервере();
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ИзменениеУсловийИсполнительногоЛиста", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДействиеИзменитьПриИзменении(Элемент)
	УстановитьДоступностьПолейДатыИзменения(ЭтаФорма);
	УстановитьВидимостьУдержания(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДействиеОтменитьПриИзменении(Элемент)
	УстановитьДоступностьПолейДатыИзменения(ЭтаФорма);
	УстановитьВидимостьУдержания(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаПриИзменении(Элемент)
	
	Если Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой") Тогда
		
		Объект.Сумма = Сумма;
		Объект.Процент = 0;
		Объект.Числитель = 0;
		Объект.Знаменатель = 0;
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(Объект.ВидБазы) Тогда
			
			Объект.ВидБазы = ПредопределенноеЗначение("Перечисление.ВидыБазыУдержанияПоИсполнительномуДокументу.Заработок");
			УстановитьДоступностьПараметровНастройкиБазы(ЭтаФорма);
			
		КонецЕсли; 
		
		Если Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом") Тогда
		
			Объект.Сумма = 0;
			Объект.Процент = Процент;
			Объект.Числитель = 0;
			Объект.Знаменатель = 0;
			
		Иначе
			
			Объект.Сумма = 0;
			Объект.Процент = 0;
			Объект.Числитель = Макс(Числитель, 1);
			Объект.Знаменатель = Макс(Знаменатель, 1);
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьВидаБазы(ЭтаФорма);
	УстановитьНастройкиЗаполненияРазмераУдержания(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительныйЛистПриИзменении(Элемент)
	ЗаполнитьПоИсполнительномуЛисту();
КонецПроцедуры

&НаКлиенте
Процедура ВидБазыПриИзменении(Элемент)
	УстановитьДоступностьПараметровНастройкиБазы(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПрекратитьПоДостижениюПределаПриИзменении(Элемент)
	УстановитьДоступностьПредела(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПлатежногоАгентаПриИзменении(Элемент)
	
	УстановитьДоступностьПлатежногоАгента(ЭтаФорма);
	
	Если ИспользоватьПлатежногоАгента Тогда
		ЗаполнитьУдержаниеВознагражденияПлатежногоАгента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежныйАгентПриИзменении(Элемент)
	УстановитьДоступностьПлатежногоАгента(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗнаменательПриИзменении(Элемент)
	
	Знаменатель = Объект.Знаменатель;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧислительПриИзменении(Элемент)
	
	Числитель = Объект.Числитель;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПриИзменении(Элемент)
	
	Процент = Объект.Процент;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	
	Сумма = Объект.Сумма;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	Сумма = Объект.Сумма;
	Процент = Объект.Процент;
	Числитель = Объект.Числитель;
	Знаменатель = Объект.Знаменатель;
	
	ИспользоватьПлатежногоАгента = ЗначениеЗаполнено(Объект.ПлатежныйАгент);
	
	УстановитьДоступностьВидаБазы(ЭтаФорма);
	УстановитьДоступностьПараметровНастройкиБазы(ЭтаФорма);
	УстановитьНастройкиЗаполненияРазмераУдержания(ЭтаФорма);
	УстановитьДоступностьПредела(ЭтаФорма);
	УстановитьДоступностьПлатежногоАгента(ЭтаФорма);
	УстановитьДоступностьПолейДатыИзменения(ЭтаФорма);
	УстановитьВидимостьУдержания(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоИсполнительномуЛисту()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьПоИсполнительномуЛисту(Объект.ИсполнительныйЛист);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУдержаниеВознагражденияПлатежногоАгента()
	
	УдержаниеВознагражденияПервичногоДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ИсполнительныйЛист, "УдержаниеВознагражденияПлатежногоАгента");
	
	Если Не ЗначениеЗаполнено(УдержаниеВознагражденияПервичногоДокумента) Тогда
		// Если в первичном документе вознаграждение не указано, пытаемся подобрать вид удержания.
		РасчетЗарплатыРасширенныйФормы.ЗаполнитьУдержаниеВФормеДокументаПоРоли(
			ЭтаФорма, Объект.УдержаниеВознагражденияПлатежногоАгента, Перечисления.КатегорииУдержаний.ВознаграждениеПлатежногоАгента);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУдержания()
	
	// Заполняет удержание единственным значением, если оно единственное.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Удержания.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.КатегорияУдержания = &КатегорияУдержания
	|	И НЕ Удержания.ВАрхиве
	|	И НЕ Удержания.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КатегорияУдержания", Перечисления.КатегорииУдержаний.ИсполнительныйЛист);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Объект.Удержание = Выборка.Ссылка;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Удержания.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.КатегорияУдержания = &КатегорияУдержания
	|	И НЕ Удержания.ВАрхиве
	|	И НЕ Удержания.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КатегорияУдержания", Перечисления.КатегорииУдержаний.ВознаграждениеПлатежногоАгента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Объект.УдержаниеВознагражденияПлатежногоАгента = Выборка.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьВидаБазы(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	БазаТребуется = Ложь;
	Если Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом")
		Или Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей") Тогда
		
		БазаТребуется = Истина;
		
	КонецЕсли;
	
	Если БазаТребуется И Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом") Тогда
		Элементы.ВидБазыПроцентомСтраницы.ТекущаяСтраница = Элементы.ВидБазыПроцентомСтраница;
	Иначе
		Элементы.ВидБазыПроцентомСтраницы.ТекущаяСтраница = Элементы.БазаНеТребуетсяПроцентомСтраница;
	КонецЕсли;
	
	Если БазаТребуется И Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей") Тогда
		Элементы.ВидБазыДолейСтраницы.ТекущаяСтраница = Элементы.ВидБазыДолейСтраница;
	Иначе
		Элементы.ВидБазыДолейСтраницы.ТекущаяСтраница = Элементы.БазаНеТребуетсяДолейСтраница;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПараметровНастройкиБазы(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ВидБазы = ПредопределенноеЗначение("Перечисление.ВидыБазыУдержанияПоИсполнительномуДокументу.Заработок") Тогда
		Элементы.ПараметрыПоВидуБазыПроцентомСтраницы.ТекущаяСтраница = Элементы.ЗаработокПроцентомСтраница;
		Элементы.ПараметрыПоВидуБазыДолейСтраницы.ТекущаяСтраница = Элементы.ЗаработокДолейСтраница;
	Иначе	
		Элементы.ПараметрыПоВидуБазыПроцентомСтраницы.ТекущаяСтраница = Элементы.ПрожиточныйМинимумПроцентомСтраница;
		Элементы.ПараметрыПоВидуБазыДолейСтраницы.ТекущаяСтраница = Элементы.ПрожиточныйМинимумДолейСтраница;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНастройкиЗаполненияРазмераУдержания(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ДоступностьВводаСуммы = Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой");
	ДоступностьВводаПроцента = Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом");
	ДоступностьВводаДолей = Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерУдержанияСуммойГруппа",
		"Доступность",
		ДоступностьВводаСуммы);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерУдержанияПроцентомГруппа",
		"Доступность",
		ДоступностьВводаПроцента);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерУдержанияДолейГруппа",
		"Доступность",
		ДоступностьВводаДолей);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПредела(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.Предел.Доступность = Объект.ПрекратитьПоДостижениюПредела;
	Элементы.Предел.АвтоОтметкаНезаполненного = Объект.ПрекратитьПоДостижениюПредела;
	Элементы.Предел.ОтметкаНезаполненного = Объект.Предел > 0;
	
	Если Не Объект.ПрекратитьПоДостижениюПредела Тогда
		Объект.Предел = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПлатежногоАгента(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ПлатежныйАгент.Доступность = Форма.ИспользоватьПлатежногоАгента;
	Элементы.ПлатежныйАгент.АвтоОтметкаНезаполненного = Форма.ИспользоватьПлатежногоАгента;
	Элементы.ПлатежныйАгент.ОтметкаНезаполненного = ЗначениеЗаполнено(Объект.ПлатежныйАгент);
	
	Элементы.ТарифПлатежногоАгента.Доступность = Форма.ИспользоватьПлатежногоАгента;
	Элементы.ТарифПлатежногоАгента.АвтоОтметкаНезаполненного = Форма.ИспользоватьПлатежногоАгента;
	Элементы.ТарифПлатежногоАгента.ОтметкаНезаполненного = ЗначениеЗаполнено(Объект.ПлатежныйАгент);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "УдержаниеВознагражденияПлатежногоАгента", "Доступность", Форма.ИспользоватьПлатежногоАгента);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "УдержаниеВознагражденияПлатежногоАгента", "АвтоОтметкаНезаполненного", Форма.ИспользоватьПлатежногоАгента);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "УдержаниеВознагражденияПлатежногоАгента", "ОтметкаНезаполненного", ЗначениеЗаполнено(Объект.УдержаниеВознагражденияПлатежногоАгента));
		
	Если Не Форма.ИспользоватьПлатежногоАгента Тогда
		Объект.ПлатежныйАгент = Неопределено;
		Объект.ТарифПлатежногоАгента = Неопределено;
		Объект.УдержаниеВознагражденияПлатежногоАгента = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПолейДатыИзменения(Форма)
	
	ДоступностьДатыИзменения = Форма.Объект.Действие = ПредопределенноеЗначение("Перечисление.ДействияСНачислениямиИУдержаниями.Утвердить");
	ДоступностьДатыПрекращения = Не ДоступностьДатыИзменения;
	
	Форма.Элементы.ДатаИзменения.Доступность = ДоступностьДатыИзменения;
	Форма.Элементы.ДатаОкончания.Доступность = ДоступностьДатыИзменения;
	Форма.Элементы.ДатаПрекращения.Доступность = ДоступностьДатыПрекращения;
	
	Если ДоступностьДатыИзменения Тогда
		Форма.Элементы.ДополнительныеСведенияГруппа.ТекущаяСтраница = Форма.Элементы.СведенияИзмененияГруппа;
	Иначе
		Форма.Элементы.ДополнительныеСведенияГруппа.ТекущаяСтраница = Форма.Элементы.СведенияПрекращенияГруппа;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьУдержания(Форма)
	
	ВидимостьУдержания = Не Форма.Объект.Действие = ПредопределенноеЗначение("Перечисление.ДействияСНачислениямиИУдержаниями.Отменить");
	Если ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(Форма.Элементы, "Удержание", "Видимость") <> ВидимостьУдержания Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "Удержание", "Видимость", ВидимостьУдержания);
		Форма.Объект.Удержание = ПредопределенноеЗначение("ПланВидовРасчета.Удержания.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
