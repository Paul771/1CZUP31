#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Открепление от программ страхования
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ОткреплениеОтПрограммСтрахования";
	КомандаПечати.Представление = НСтр("ru = 'Открепление от программ страхования'");
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОткреплениеОтПрограммСтрахования") Тогда
		ТабличныйДокумент = ПечатьОткреплениеОтПрограммСтрахования(МассивОбъектов, ОбъектыПечати);
		МедицинскоеСтрахованиеПереопределяемый.Печать(ТабличныйДокумент, МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОткреплениеОтПрограммСтрахования", НСтр("ru = 'Прикрепление к программам страхования'"), ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьОткреплениеОтПрограммСтрахования(МассивОбъектов, ОбъектыПечати)
	
	// получаем данные для печати
	ДанныеДляПечати = ДанныеОткрепленияОтПрограммСтрахования(МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МедицинскоеСтрахование_ОткреплениеОтПрограммСтрахования";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОткреплениеОтПрограммМедицинскогоСтрахования.ПФ_MXL_ОткреплениеОтПрограммСтрахования");
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеДокументаДляПечати Из ДанныеДляПечати Цикл
		
		ДанныеДокумента = ДанныеДокументаДляПечати.Значение;
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ДанныеДокумента.Сотрудники.Количество();
		
		ОбластьМакетаЗаголовок						= Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакетаНомерСтраницы					= Макет.ПолучитьОбласть("НомерСтраницы");
		ОбластьМакетаШапка							= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока							= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаПодвал							= Макет.ПолучитьОбласть("Подвал");
		
		// Массив с двумя строками - для разбиения на страницы.
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		
		// выводим данные о документе
		ОбластьМакетаЗаголовок.Параметры.Организация = ДанныеДокумента.Организация;
		ОбластьМакетаЗаголовок.Параметры.СтраховаяКомпания = ДанныеДокумента.СтраховаяКомпания;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0;
		
		ОбластьМакетаНомерСтраницы.Параметры.НомерСтраницы = ВыведеноСтраниц;
		ТабличныйДокумент.Вывести(ОбластьМакетаНомерСтраницы);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		СтраховаяПремияИтого = 0;
		// Выводим данные по строкам документа.
		Страхователи = Новый Структура;
		Страхователи.Вставить("Сотрудники", "Сотрудник");
		
		Для Каждого ЭлементСтруктуры Из Страхователи Цикл
			ИмяПоляСтрахователя = ЭлементСтруктуры.Значение;
			Для Каждого ДанныеДляПечатиСтроки Из ДанныеДокумента[ЭлементСтруктуры.Ключ] Цикл
				
				ОбластьМакетаСтрока.Параметры.ФИО = ДанныеДляПечатиСтроки[ИмяПоляСтрахователя];
				ОбластьМакетаСтрока.Параметры.ПрограммыСтрахования = ДанныеДляПечатиСтроки.ПрограммыСтрахования;
				ОбластьМакетаСтрока.Параметры.РасширенияПрограммСтрахования = ДанныеДляПечатиСтроки.РасширенияПрограммСтрахования;
				ОбластьМакетаСтрока.Параметры.ДатаРождения = ДанныеДляПечатиСтроки.ДатаРождения;
				ОбластьМакетаСтрока.Параметры.ДатаОткрепления = ДанныеДляПечатиСтроки.ДатаОткрепления;
				ОбластьМакетаСтрока.Параметры.СтраховаяПремия = ДанныеДляПечатиСтроки.СтраховаяПремия;
				СтраховаяПремияИтого = СтраховаяПремияИтого + ДанныеДляПечатиСтроки.СтраховаяПремия;
				
				// разбиение на страницы
				ВыведеноСтрок = ВыведеноСтрок + 1;
				
				// Проверим, уместится ли строка на странице или надо открывать новую страницу.
				ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
				Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
					ОбластьМакетаПодвал.Параметры.СтраховаяПремияИтого = СтраховаяПремияИтого;
					ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
					ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
				КонецЕсли;
				Если ВывестиПодвалЛиста Тогда
					
					ОбластьМакетаПодвал.Параметры.СтраховаяПремияИтого = СтраховаяПремияИтого;
					ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					СтраховаяПремияИтого = 0;
					
					ВыведеноСтраниц = ВыведеноСтраниц + 1;
					
					ОбластьМакетаНомерСтраницы.Параметры.НомерСтраницы = ВыведеноСтраниц;
					ТабличныйДокумент.Вывести(ОбластьМакетаНомерСтраницы);
					ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
				
			КонецЦикла;
		КонецЦикла;
		
		ОбластьМакетаПодвал.Параметры.СтраховаяПремияИтого = СтраховаяПремияИтого;
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеДокумента.ДокументОткрепления);
		
	КонецЦикла; // по документам
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Получает данные для формирования печатного документа.
//
// Параметры:
//		МассивДокументов - Массив ссылок на документы, по которым требуется получить данные.
//
// Возвращаемое значение:
//		Соответствие - где Ключ - ссылка на документ, Значение - структура документа.
//
Функция ДанныеОткрепленияОтПрограммСтрахования(МассивДокументов)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ОткреплениеОтПрограммМедицинскогоСтрахования", МассивДокументов);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.Ссылка КАК ДокументОткрепления,
	|	ОткреплениеОтПрограммМедицинскогоСтрахования.Организация КАК Организация,
	|	ОткреплениеОтПрограммМедицинскогоСтрахования.СтраховаяКомпания КАК СтраховаяКомпания,
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.Сотрудник КАК Сотрудник,
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.ДатаОткрепления КАК ДатаОткрепления,
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.ДатаРождения КАК ДатаРождения,
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.ПрограммыСтрахования КАК ПрограммыСтрахования,
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.РасширенияПрограммСтрахования КАК РасширенияПрограммСтрахования,
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.СтраховаяПремия КАК СтраховаяПремия
	|ИЗ
	|	Документ.ОткреплениеОтПрограммМедицинскогоСтрахования.Сотрудники КАК ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОткреплениеОтПрограммМедицинскогоСтрахования КАК ОткреплениеОтПрограммМедицинскогоСтрахования
	|		ПО ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.Ссылка = ОткреплениеОтПрограммМедицинскогоСтрахования.Ссылка
	|ГДЕ
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.Ссылка В(&ОткреплениеОтПрограммМедицинскогоСтрахования)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.Ссылка,
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.Сотрудник,
	|	ОткреплениеОтПрограммМедицинскогоСтрахованияСотрудники.ДатаОткрепления";
	
	РезультатыЗапроса = Запрос.Выполнить();
	
	ДанныеДокументов = Новый Соответствие;
	ВыборкаСотрудников = РезультатыЗапроса.Выбрать();
	Пока ВыборкаСотрудников.СледующийПоЗначениюПоля("ДокументОткрепления") Цикл
		
		ДанныеДокумента = Новый Структура;
		ДанныеДокумента.Вставить("ДокументОткрепления", ВыборкаСотрудников.ДокументОткрепления);
		ДанныеДокумента.Вставить("Организация", ВыборкаСотрудников.Организация);
		ДанныеДокумента.Вставить("СтраховаяКомпания", ВыборкаСотрудников.СтраховаяКомпания);
		ДанныеДокумента.Вставить("Сотрудники", Новый Массив);
		Пока ВыборкаСотрудников.СледующийПоЗначениюПоля("Сотрудник") Цикл
			ДанныеСотрудника = Новый Структура;
			ДанныеСотрудника.Вставить("Сотрудник", ВыборкаСотрудников.Сотрудник);
			ДанныеСотрудника.Вставить("ДатаОткрепления", ВыборкаСотрудников.ДатаОткрепления);
			ДанныеСотрудника.Вставить("ДатаРождения", ВыборкаСотрудников.ДатаРождения);
			ДанныеСотрудника.Вставить("ПрограммыСтрахования", ВыборкаСотрудников.ПрограммыСтрахования);
			ДанныеСотрудника.Вставить("РасширенияПрограммСтрахования", ВыборкаСотрудников.РасширенияПрограммСтрахования);
			ДанныеСотрудника.Вставить("СтраховаяПремия", ВыборкаСотрудников.СтраховаяПремия);
			
			ДанныеДокумента.Сотрудники.Добавить(ДанныеСотрудника);
		КонецЦикла;
		
		ДанныеДокументов.Вставить(ВыборкаСотрудников.ДокументОткрепления, ДанныеДокумента);
		
	КонецЦикла;
	
	Возврат ДанныеДокументов;
	
КонецФункции

#КонецОбласти

// См. ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокумента
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ОткреплениеОтПрограммМедицинскогоСтрахования;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#КонецЕсли
