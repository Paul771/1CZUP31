#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Начальное заполнение
	Если Параметры.Ключ.Пустая() Тогда
		ЗначенияДляЗаполнения = Новый Структура("Ответственный", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		Объект.ДатаИсключения = Объект.Дата;
		// Если в параметрах передано Физическое лицо - вызовем обработчик заполнения по нему.
		Если ТипЗнч(Параметры) = Тип("ДанныеФормыСтруктура")
			И Параметры.Свойство("ФизическоеЛицо")
			И ЗначениеЗаполнено(Параметры.ФизическоеЛицо) Тогда
			
			Объект.ФизическоеЛицо = Параметры.ФизическоеЛицо;
			ЗаполнитьПозицииРезерваПоСотруднику();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьВторичныеДанныеФормы();
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужбаФормы");
		Модуль.УстановитьПараметрыВыбораСотрудников(ЭтаФорма, "ФизическоеЛицо");
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьВторичныеДанныеФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписаноИсключениеИзКадровогоРезерва");
	Оповестить("Запись_ИсключениеИзКадровогоРезерва", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийШапкиФормы

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	ЗаполнитьПозицииРезерваПоСотруднику();
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовПодвалаФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРезерв

&НаКлиенте
Процедура РезервПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	УстановитьДоступностьКоманд(ЭтаФорма, ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Оставить(Команда)
	
	ТекущиеДанные = Элементы.Резерв.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСКадровымиРезервистами.Оставить");
	
	УстановитьДоступностьКоманд(ЭтаФорма, ТекущиеДанные);
	КадровыйРезервКлиентСервер.ЗаполнитьОписаниеДействия(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура Исключить(Команда)
	
	ТекущиеДанные = Элементы.Резерв.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСКадровымиРезервистами.Отклонить");
	
	УстановитьДоступностьКоманд(ЭтаФорма, ТекущиеДанные);
	КадровыйРезервКлиентСервер.ЗаполнитьОписаниеДействия(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ЗаполнитьВторичныеДанныеФормы()
	ЗаполнитьВторичныеДанныеРезерва();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВторичныеДанныеРезерва()

	Для каждого Резерв Из Объект.Резерв Цикл
		КадровыйРезервКлиентСервер.ЗаполнитьОписаниеДействия(Резерв);
		КадровыйРезервКлиентСервер.ЗаполнитьОписаниеСтатуса(Резерв);
	КонецЦикла; 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьКоманд(Форма, ТекущиеДанные)

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"РезервОставить",
		"Доступность",
		ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСКадровымиРезервистами.Отклонить"));

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"РезервИсключить",
		"Доступность",
		ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСКадровымиРезервистами.Оставить"));
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПозицииРезерваПоСотруднику()

	Если НЕ ЗначениеЗаполнено(Объект.ФизическоеЛицо) ИЛИ НЕ ЗначениеЗаполнено(Объект.ДатаИсключения) Тогда
		Объект.Резерв.Очистить();
	    Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура("ТабличнаяЧасть, ДатаНачала, ФизическоеЛицо, Действие");
	ПараметрыЗаполнения.ТабличнаяЧасть = Объект.Резерв;
	ПараметрыЗаполнения.ДатаНачала = Объект.ДатаИсключения;
	ПараметрыЗаполнения.ФизическоеЛицо = Объект.ФизическоеЛицо;
	ПараметрыЗаполнения.Действие = ПредопределенноеЗначение("Перечисление.ДействияСКадровымиРезервистами.Отклонить");
	
	КадровыйРезервФормы.ЗаполнитьПозицииРезерваПоСотруднику(ПараметрыЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИсключенияПриИзменении(Элемент)
	ЗаполнитьПозицииРезерваПоСотруднику();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

#КонецОбласти
