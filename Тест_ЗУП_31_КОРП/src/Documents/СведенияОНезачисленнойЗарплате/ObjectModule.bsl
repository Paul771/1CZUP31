#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверятьЗарплатныйПроект = ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк");
	
	ДанныеВедомости = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ведомость, "Проведен, Организация" + ?(ПроверятьЗарплатныйПроект, ", ЗарплатныйПроект", ""));
	
	ПроверятьЗарплатныйПроект = ПроверятьЗарплатныйПроект И ЗначениеЗаполнено(ДанныеВедомости.ЗарплатныйПроект);
	
	Если НЕ Ведомость.Проведен Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Документ %1 не проведен.'"), Ведомость);
		ВызватьИсключение ТекстОшибки;	
	КонецЕсли;	
	Если ДанныеВедомости.Организация <> Организация Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Документ %1 относится к другой организации.'"), Ведомость);
		ВызватьИсключение ТекстОшибки;	
	КонецЕсли;	
	
	СведенияОНезачисленнойЗарплатеПоВедомости = Документы.СведенияОНезачисленнойЗарплате.ВыбратьПоВедомости(Ведомость, Истина);
	Если СведенияОНезачисленнойЗарплатеПоВедомости.Количество() <> 0 
		И (СведенияОНезачисленнойЗарплатеПоВедомости.Количество() > 1 ИЛИ СведенияОНезачисленнойЗарплатеПоВедомости[0] <> Ссылка) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'По документу %1 уже введены сведения о незачисленной зарплате.'"), Ведомость);
		ВызватьИсключение ТекстОшибки;	
	КонецЕсли;	
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Физлица = Сотрудники.ВыгрузитьКолонку("ФизическоеЛицо");
	
	Если Не Отказ И Физлица.Количество() > 0 Тогда
		
		// Взаиморасчеты
		ВзаиморасчетыССотрудниками.ЗарегистрироватьНевыплатуПоВедомости(Движения, Отказ, ЭтотОбъект.Ведомость, Физлица);
		
		// НДФЛ
		УчетНДФЛ.ЗарегистрироватьНевыплатуДокументом(Движения, Отказ, ЭтотОбъект.Ведомость, Физлица);
		УчетФактическиПолученныхДоходовРасширенный.ЗарегистрироватьНевыплатуДокументом(Движения, Отказ, ЭтотОбъект.Ведомость, Физлица);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("Сотрудники", "ФизическоеЛицо"));
	
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИФизическимЛицам(ЭтотОбъект, Организация, МассивПараметров, Дата);
	
КонецФункции

#КонецОбласти

#КонецЕсли
