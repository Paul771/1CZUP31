
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеЗаполнения) Тогда
		Ведомость = ДанныеЗаполнения;
		ДанныеВедомости = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Проведен");
		Организация = ДанныеВедомости.Организация;
		Если Не ДанныеВедомости.Проведен Тогда
			ТекстОшибки = НСтр("ru='Документ %1 не проведен. Ввод на основании непроведенного документа запрещен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ДатаОплаты < УчетФактическиПолученныхДоходов.ДатаНачалаИспользованияПодсистемы() Тогда
		ТекстОшибки = НСтр("ru = 'Подтверждение выплаты доходов используется с 2017 года'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ДатаОплаты", , Отказ);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ведомость) Тогда 
		ТекстОшибки = НСтр("ru = 'Основание подтверждения не заполнено.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Ведомость", , Отказ);
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ведомость, "Проведен") <> Истина Тогда
		ТекстОшибки = НСтр("ru='Документ %1 не проведен. Ввод на основании непроведенного документа запрещен.'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Ведомость);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Ведомость", , Отказ);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Ведомость", Ведомость);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.ДатыВыплатыДоходов КАК ДатыВыплатыДоходов
	|ГДЕ
	|	ДатыВыплатыДоходов.Регистратор <> &Регистратор
	|	И ДатыВыплатыДоходов.ОплаченнаяВедомость = &Ведомость";
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'Подтверждение по ведомости уже зарегистрировано.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Ведомость", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	УчетФактическиПолученныхДоходовРасширенный.ПеренестиВыплаченныйДоходНаДату(Движения, Ведомость, ДатаОплаты, ДатаОплаты, Отказ);
	
	// Даты выплаты доходов
	НовоеДвижение = Движения.ДатыВыплатыДоходов.Добавить();
	НовоеДвижение.ОплаченнаяВедомость = Ведомость;
	НовоеДвижение.Организация = Организация;
	НовоеДвижение.ДатаОплаты = ДатаОплаты;
	Движения.ДатыВыплатыДоходов.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене.
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизации(ЭтотОбъект, Организация);
КонецФункции

#КонецОбласти

#КонецЕсли



