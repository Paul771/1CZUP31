
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиСервер.ФормаНастройкиУзловПриСозданииНаСервере(ЭтаФорма, Отказ);
	
	РежимСинхронизацииОрганизаций =
		?(ИспользоватьОтборПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьДанныеПоВсемОрганизациям");
	
	РежимСинхронизацииПодразделений =
		?(ИспользоватьОтборПоПодразделениям, "СинхронизироватьДанныеТолькоПоВыбраннымПодразделениям", "СинхронизироватьДанныеПоВсемПодразделениям");
	
	ВсеПодразделенияПриложения = ВсеПодразделенияПриложения();
	Если ВсеПодразделенияПриложения <> Неопределено Тогда
		ПодразделенияДерево = РеквизитФормыВЗначение("ПодразделенияДеревоЗначений");
		Для каждого СтрокаТаблицы Из ВсеПодразделенияПриложения Цикл
			СтрокаРодителя = ПодразделенияДерево.Строки.Найти(СтрокаТаблицы.ПодразделениеРодитель, "Подразделение", Истина);
			Если СтрокаРодителя = Неопределено Тогда
				СтрокаДерева = ПодразделенияДерево.Строки.Добавить();
			Иначе
				СтрокаДерева = СтрокаРодителя.Строки.Добавить();
			КонецЕсли;
			
			СтрокаДерева.Подразделение = СтрокаТаблицы.Подразделение;
		КонецЦикла;
		ПодразделенияДерево.Строки.Сортировать("Подразделение", Истина);
		// Отметим выбранные элементы
		Для Каждого СтрокаТаблицы Из Подразделения Цикл
			НайденнаяСтрока = ПодразделенияДерево.Строки.Найти(СтрокаТаблицы.Подразделение, "Подразделение", Истина);
			Если НайденнаяСтрока <> Неопределено Тогда
				НайденнаяСтрока.Использовать = Истина;
			КонецЕсли;
		КонецЦикла;
		ЗначениеВРеквизитФормы(ПодразделенияДерево, "ПодразделенияДеревоЗначений");
	КонецЕсли;
	
	ПолучитьОписаниеКонтекста();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	РежимСинхронизацииПодразделенийПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПодразделенияИспользоватьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Подразделения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодразделенияИспользоватьПриИзмененииНаСервере(ТекущиеДанные.Подразделение, ТекущиеДанные.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзменении(Элемент)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииПодразделенийПриИзменении(Элемент)
	РежимСинхронизацииПодразделенийПриИзмененииЗначения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНаСервере();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзловКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеПодразделения(Команда)
	ВключитьОтключитьВсеЭлементыВДеревеЗначений(Истина, ПодразделенияДеревоЗначений.ПолучитьЭлементы());
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеПодразделения(Команда)
	ВключитьОтключитьВсеЭлементыВДеревеЗначений(Ложь, ПодразделенияДеревоЗначений.ПолучитьЭлементы());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		ЭлементКоллекции.Использовать = Включить;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьОписаниеКонтекста()
	
	// Дата начала выгрузки документов
	// отбор по Организациям.
	Если ИспользоватьОтборПоОрганизациям Тогда
		ОрганизацииОписание = НСтр("ru = 'Только по организациям:'") + Символы.ПС + ИспользуемыеЭлементы("Организации");
	Иначе
		ОрганизацииОписание = НСтр("ru = 'По всем организациям.'");
	КонецЕсли;
	
	// Отбор по Подразделениям.
	ПодразделенияОписание = "";
	Если ИспользоватьОтборПоПодразделениям Тогда
		ПодразделенияОписание = НСтр("ru = 'Только по подразделениям:'") + Символы.ПС + ИспользуемыеЭлементы("Подразделения");
	Иначе
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
			ПодразделениямОписание = НСтр("ru = 'По всем подразделениям.'");
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеКонтекста = ("" + ОрганизацииОписание + Символы.ПС + ПодразделениямОписание);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	ИспользоватьОтборПоОрганизациям =
		(РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
	Если Не ИспользоватьОтборПоОрганизациям Тогда
		Организации.Очистить();
	КонецЕсли;
	
	ИспользоватьОтборПоПодразделениям =
		(РежимСинхронизацииПодразделений = "СинхронизироватьДанныеТолькоПоВыбраннымПодразделениям");
	
	Подразделения.Очистить();
	Если ИспользоватьОтборПоПодразделениям Тогда
		ПодразделенияДерево = РеквизитФормыВЗначение("ПодразделенияДеревоЗначений");
		НайденныеСтроки = ПодразделенияДерево.Строки.НайтиСтроки(Новый Структура("Использовать", Истина), Истина);
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = Подразделения.Добавить();
			НоваяСтрока.Подразделение = НайденнаяСтрока.Подразделение;
		КонецЦикла;
	КонецЕсли;
	
	ПолучитьОписаниеКонтекста();
	
КонецПроцедуры

&НаСервере
Функция ИспользуемыеЭлементы(ИмяТаблицы)
	
	Возврат СтрСоединить(
			ЭтаФорма[ИмяТаблицы].Выгрузить(Новый Структура("Использовать", Истина)).ВыгрузитьКолонку("Представление"),
			Символы.ПС);
	
КонецФункции

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзмененииЗначения()
	
	Элементы.Организации.Доступность =
		(РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииПодразделенийПриИзмененииЗначения()
	
	Элементы.Подразделения.Доступность =
		(РежимСинхронизацииПодразделений = "СинхронизироватьДанныеТолькоПоВыбраннымПодразделениям");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВсеПодразделенияПриложения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		Возврат Модуль.СтруктураПредприятия();
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВДеревеЗначений(Включить, Строки)
	
	Для Каждого ЭлементКоллекции Из Строки Цикл
		ЭлементКоллекции.Использовать = Включить;
		ВключитьОтключитьВсеЭлементыВДеревеЗначений(Включить, ЭлементКоллекции.ПолучитьЭлементы());
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПодразделенияИспользоватьПриИзмененииНаСервере(Подразделение, Использование)
	
	МассивПодразделений = Новый Массив;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		МассивПодразделений = Модуль.ПодчиненныеПодразделения(Подразделение);
	КонецЕсли;
	
	УстановитьИспользованиеПодразделения(ПодразделенияДеревоЗначений.ПолучитьЭлементы(), МассивПодразделений, Использование);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИспользованиеПодразделения(ЭлементыДерева, МассивПодразделений, Использование)
	
	Для каждого СтрокаПодразделения Из ЭлементыДерева Цикл
		Если МассивПодразделений.Найти(СтрокаПодразделения.Подразделение) <> Неопределено Тогда
			СтрокаПодразделения.Использовать = Использование;
		КонецЕсли;
		УстановитьИспользованиеПодразделения(СтрокаПодразделения.ПолучитьЭлементы(), МассивПодразделений, Использование);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
