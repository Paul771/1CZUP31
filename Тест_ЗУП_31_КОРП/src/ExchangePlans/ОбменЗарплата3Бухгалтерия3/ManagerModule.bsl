#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет настройки, влияющие на использование плана обмена.
// 
// Параметры:
//  Настройки - Структура - настройки плана обмена по умолчанию, см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию,
//                          описание возвращаемого значения функции.
//
Процедура ПриПолученииНастроек(Настройки) Экспорт
	
	Настройки.ПредупреждатьОНесоответствииВерсийПравилОбмена = Ложь;
	Настройки.Алгоритмы.ПриПолученииВариантовНастроекОбмена = Истина;
	Настройки.Алгоритмы.ПриПолученииОписанияВариантаНастройки = Истина;
	Настройки.Алгоритмы.ОбработчикПроверкиПараметровУчета = Истина;
	Настройки.Алгоритмы.ОписаниеОграниченийПередачиДанных = Истина;
	Настройки.Алгоритмы.ОписаниеОграниченийПередачиДанныхБазыКорреспондента = Истина;
	
	Настройки.ИмяКонфигурацииИсточника = "ЗарплатаИУправлениеПерсоналом";
	Настройки.ИмяКонфигурацииПриемника.Вставить("БухгалтерияПредприятия");
	Настройки.ПланОбменаИспользуетсяВМоделиСервиса = Истина;
	
КонецПроцедуры

// Определяет перечень вариантов настроек, либо признаки их использования для обмена с корреспондентами работающими в
// локальном режиме и в режиме сервиса.
//
// Параметры:
//  ВариантыНастроекОбмена - ТаблицаЗначений - см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияВариантовНастроек.
//
Процедура ПриПолученииВариантовНастроекОбмена(ВариантыНастроекОбмена, ПараметрыКонтекста) Экспорт
	
	ВариантНастройки = ВариантыНастроекОбмена.Добавить();
	ВариантНастройки.ИдентификаторНастройки        = "Двухсторонний";
	ВариантНастройки.КорреспондентВМоделиСервиса   = Истина;
	ВариантНастройки.КорреспондентВЛокальномРежиме = Истина;
	
КонецПроцедуры

// Заполняет набор параметров, определяющих вариант настройки обмена.
// 
// Параметры:
//  ОписаниеВарианта       - Структура - набор варианта настройки по умолчанию,
//                                       см. ОбменДаннымиСервер.ОписаниеВариантаНастройкиОбменаПоУмолчанию,
//                                       описание возвращаемого значения.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияОписанияВариантаНастройки,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииОписанияВариантаНастройки(ОписаниеВарианта, ИдентификаторНастройки, ПараметрыКонтекста) Экспорт
	
	ЗаголовокФормыПомощника = НСтр("ru='Синхронизация данных с Бухгалтерия предприятия, ред. 3 (настройка)'");
	ЗаголовокФормыУзла      = НСтр("ru='Синхронизация данных с Бухгалтерия предприятия, ред. 3'");
	ОписаниеВарианта.Вставить("ЗаголовокПомощникаСозданияОбмена", ЗаголовокФормыПомощника);
	ОписаниеВарианта.Вставить("ЗаголовокУзлаПланаОбмена", ЗаголовокФормыУзла);
	ОписаниеВарианта.ОтображатьЗначенияПоУмолчаниюНаУзле = Ложь;
	ОписаниеВарианта.ОтображатьЗначенияПоУмолчаниюНаУзлеБазыКорреспондента = Ложь;
	
	ОписаниеВарианта.ИмяФайлаНастроекДляПриемника = НСтр("ru = 'Настройки обмена ЗУП 3 - БП 3'");
	ОписаниеВарианта.ИспользоватьПомощникСозданияОбменаДанными = Истина;
	
	ОписаниеВарианта.ИспользуемыеТранспортыСообщенийОбмена = ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
	
	ОписаниеВарианта.КраткаяИнформацияПоОбмену = НСтр("ru = 'Конфигурации обмениваются следующими данными:
	|* Ведомости на выплату зарплаты;
	|* Задепонированная зарплата;
	|* Получение и выплата займов сотрудниками;
	|* Отражение зарплаты в бухгалтерском учете.'");
	
	ОписаниеВарианта.ПодробнаяИнформацияПоОбмену = "ПланОбмена.ОбменЗарплата3Бухгалтерия3.Форма.ПодробнаяИнформация";
	
	ОписаниеВарианта.Отборы = НастройкаОтборовНаУзле(ИдентификаторНастройки, ОписаниеВарианта.ИмяФормыОтборов);
	ОписаниеВарианта.ОтборыКорреспондента = НастройкаОтборовНаУзлеБазыКорреспондента(ИдентификаторНастройки, ОписаниеВарианта.ИмяФормыОтборовКорреспондента);
	ОписаниеВарианта.ОбщиеДанныеУзлов = "ИспользоватьОтборПоОрганизациям, РежимВыгрузкиПриНеобходимости, ДатаНачалаИспользованияОбмена, НеВыгружатьПерсональныеДанныеФизическихЛиц, РежимВыгрузкиПерсональныеДанные";
	
КонецПроцедуры

// Возвращает строку описания ограничений миграции данных для пользователя;
// Прикладной разработчик на основе установленных отборов на узле должен сформировать строку описания ограничений 
// удобную для восприятия пользователем.
// 
// Параметры:
//	НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена,
//										 полученная при помощи функции НастройкаОтборовНаУзле().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания ограничений передачи данных в зависимости от версии корреспондента.
// Возвращаемое значение:
//	Строка - Строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанных(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	// отбор по организациям
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоОрганизациям Тогда
		СтрокаПредставленияОтбора = СтрСоединить(НастройкаОтборовНаУзле.Организации.Организация,"; ");
		ОграничениеОтборПоОрганизациям = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Только по организациям: %1'"),СтрокаПредставленияОтбора);
	Иначе
		ОграничениеОтборПоОрганизациям = НСтр("ru = 'По всем организациям'");
	КонецЕсли;
	
	Если НастройкаОтборовНаУзле.НеВыгружатьПерсональныеДанныеФизическихЛиц Тогда
		ОграничениеВыгружатьПерсональныеДанные = НСтр("ru = 'Данные для формирования проводок будут выгружаться сводно.'");;
	Иначе
		ОграничениеВыгружатьПерсональныеДанные = НСтр("ru = 'Данные для формирования проводок будут выгружаться с детализацией по сотрудникам.'"); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаИспользованияОбмена) Тогда
		ПредставлениеДаты = Формат(НастройкаОтборовНаУзле.ДатаНачалаИспользованияОбмена, "ДЛФ=D");
		ОграничениеДатаНачалаИспользованияОбмена = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Программа будет автоматически отслеживать изменения документов, и регистрировать их к отправке начиная с даты: %1'"),ПредставлениеДаты);
	Иначе
		ОграничениеДатаНачалаИспользованияОбмена = ""; 
	КонецЕсли;
	
	Возврат (НСтр("ru = 'Выгружать документы и справочную информацию:'")
		+ Символы.ПС
		+ ОграничениеОтборПоОрганизациям
		+ Символы.ПС
		+ ОграничениеВыгружатьПерсональныеДанные
		+ Символы.ПС
		+ ОграничениеДатаНачалаИспользованияОбмена);
		
КонецФункции

// Возвращает строку описания ограничений миграции данных для базы корреспондента, которая отображается пользователю;
// Прикладной разработчик на основе установленных отборов на узле базы корреспондента должен сформировать строку
// описания ограничений  удобную для восприятия пользователем.
// 
// Параметры:
//	НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена базы корреспондента,
//                                       полученная при помощи функции НастройкаОтборовНаУзлеБазыКорреспондента().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания ограничений передачи данных в зависимости от версии корреспондента.
// 
// Возвращаемое значение:
//	Строка - строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанныхБазыКорреспондента(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоОрганизациям Тогда
		СтрокаПредставленияОтбора = СтрСоединить(НастройкаОтборовНаУзле.Организации.Организация,"; ");
		ОграничениеОтборПоОрганизациям = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Только по организациям: %1'"),СтрокаПредставленияОтбора);
	Иначе
		ОграничениеОтборПоОрганизациям = НСтр("ru = 'По всем организациям'");
	КонецЕсли;
	
	Если НастройкаОтборовНаУзле.НеВыгружатьПерсональныеДанныеФизическихЛиц Тогда
		ОграничениеВыгружатьПерсональныеДанные = НСтр("ru = 'Данные для формирования проводок будут выгружаться сводно.'");;
	Иначе
		ОграничениеВыгружатьПерсональныеДанные = НСтр("ru = 'Данные для формирования проводок будут выгружаться с детализацией по сотрудникам.'"); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаИспользованияОбмена) Тогда
		ПредставлениеДаты = Формат(НастройкаОтборовНаУзле.ДатаНачалаИспользованияОбмена, "ДЛФ=D");
		ОграничениеДатаНачалаИспользованияОбмена = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Программа будет автоматически отслеживать изменения документов, и регистрировать их к отправке начиная с даты: %1'"),ПредставлениеДаты);
	Иначе
		ОграничениеДатаНачалаИспользованияОбмена = ""; 
	КонецЕсли;
	
	Возврат (НСтр("ru = 'Выгружать документы и справочную информацию:'")
	+ Символы.ПС
	+ ОграничениеОтборПоОрганизациям
	+ Символы.ПС
	+ ОграничениеВыгружатьПерсональныеДанные
	+ Символы.ПС
	+ ОграничениеДатаНачалаИспользованияОбмена);
	
КонецФункции

// Проверяет корректность настройки параметров учета.
//
// Параметры:
//	Отказ - Булево - Признак невозможности продолжения настройки обмена из-за некорректно настроенных параметров учета.
//	Получатель - ПланОбменаСсылка - Узел обмена, для которого выполняется проверка параметров учета.
//	Сообщение - Строка - Содержит текст сообщения о некорректных параметрах учета.
//
Процедура ОбработчикПроверкиПараметровУчета(Отказ, Получатель, Сообщение) Экспорт
	
	Отбор = Неопределено;
	
	СвойстваПолучателя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Получатель, "ИспользоватьОтборПоОрганизациям, Организации");
	
	Если СвойстваПолучателя.ИспользоватьОтборПоОрганизациям Тогда
		
		Отбор = СвойстваПолучателя.Организации.Выгрузить().ВыгрузитьКолонку("Организация");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


// Возвращает структуру отборов на узле плана обмена с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//		ИмяФормы - Строка - Имя используемой формы настройки значений по умолчанию.
//		ИдентификаторНастройки - Строка - Имя предопределенной настройки плана обмена.
// 
// Возвращаемое значение:
//	СтруктураНастроек - Структура - структура отборов на узле плана обмена.
// 
Функция НастройкаОтборовНаУзле(ИдентификаторНастройки, ИмяФормы)
	
	СтруктураТабличнойЧастиОрганизации = Новый Структура;
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация", Новый Массив);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям",  Ложь);
	СтруктураНастроек.Вставить("Организации",                      СтруктураТабличнойЧастиОрганизации);
	СтруктураНастроек.Вставить("ДатаНачалаИспользованияОбмена",    НачалоМесяца(ТекущаяДата()));
	СтруктураНастроек.Вставить("НеВыгружатьПерсональныеДанныеФизическихЛиц", Ложь);
	СтруктураНастроек.Вставить("РежимВыгрузкиПриНеобходимости", 				  Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости);
	СтруктураНастроек.Вставить("РежимВыгрузкиПерсональныеДанные", 				  Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВсегда);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает структуру отборов на узле плана обмена базы корреспондента с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//		ИмяФормы - Строка - Имя используемой формы настройки значений по умолчанию.
//		ИдентификаторНастройки - Строка - Имя предопределенной настройки плана обмена.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура отборов на узле плана обмена базы корреспондента.
// 
Функция НастройкаОтборовНаУзлеБазыКорреспондента(ИдентификаторНастройки, ИмяФормы)
	
	
	СтруктураТабличнойЧастиОрганизации = Новый Структура;
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация", Новый Массив);
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация_Ключ", Новый Массив);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям",   Ложь);
	СтруктураНастроек.Вставить("Организации",                       СтруктураТабличнойЧастиОрганизации);
	СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям",   Ложь);
	СтруктураНастроек.Вставить("Организации",                       СтруктураТабличнойЧастиОрганизации);
	СтруктураНастроек.Вставить("ДатаНачалаИспользованияОбмена",     НачалоМесяца(ТекущаяДата()));
	СтруктураНастроек.Вставить("НеВыгружатьПерсональныеДанныеФизическихЛиц", Ложь);
	СтруктураНастроек.Вставить("РежимВыгрузкиПриНеобходимости", 				  Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости);
	СтруктураНастроек.Вставить("РежимВыгрузкиПерсональныеДанные", 				  Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВсегда);
	
	Возврат СтруктураНастроек;
	
КонецФункции

#КонецОбласти

#КонецЕсли