
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтаФорма, Метаданные.ПланыОбмена.ОбменЗарплата3Бухгалтерия3.Имя);
	
	РежимСинхронизацииОрганизаций =  ?(ИспользоватьОтборПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьДанныеПоВсемОрганизациям");
	РежимВыгрузкиСотрудников = ?(НеВыгружатьПерсональныеДанныеФизическихЛиц,1,0);
	
	ИспользуемыеОрганизации = Организации.Выгрузить();
	Организации.Загрузить(ВсеОрганизацииПриложения());
	
	ОтметитьВыбранныеЭлементыТаблицы(ИспользуемыеОрганизации);
	
	ЗначениеВыгружатьВсегда = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВсегда;
	ЗначениеВыгружатьПриНеобходимости = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтотОбъект, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ИспользоватьОтборПоОрганизациям = (РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
	ЗаписатьИЗакрытьСервер();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзменении(Элемент)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзмененииЗначения()
	
	Элементы.Организации.Доступность =
		(РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям")
	;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВсеОрганизацииПриложения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК Использовать,
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организации.Наименование";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		
		ЭлементКоллекции.Использовать = Включить;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтметитьВыбранныеЭлементыТаблицы(ИспользуемыеОрганизации)
	
	Для Каждого СтрокаТаблицы Из ИспользуемыеОрганизации Цикл
		
		Строки = Организации.НайтиСтроки(Новый Структура("Организация", СтрокаТаблицы.Организация));
		
		Если Строки.Количество() > 0 Тогда
			
			Строки[0].Использовать = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИЗакрытьСервер()
	
	Если ИспользоватьОтборПоОрганизациям Тогда
		
		ВыбранныеОрганизации = Организации.Выгрузить(Новый Структура("Использовать", Истина), "Организация");
		Организации.Загрузить(ВыбранныеОрганизации);
		
	Иначе
		
		Организации.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимВыгрузкиСотрудниковПриИзменении(Элемент)
	
	НеВыгружатьПерсональныеДанныеФизическихЛиц = ?(РежимВыгрузкиСотрудников = 0,Ложь, Истина);
	
	Если НеВыгружатьПерсональныеДанныеФизическихЛиц Тогда
		РежимВыгрузкиПерсональныеДанные = ЗначениеВыгружатьПриНеобходимости;
	Иначе
		РежимВыгрузкиПерсональныеДанные = ЗначениеВыгружатьВсегда;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти
