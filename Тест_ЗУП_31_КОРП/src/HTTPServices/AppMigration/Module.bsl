
// Инициализирует начало загрузки.
//
Функция Begin(Запрос)
	
	Попытка
		УстановитьМонопольныйРежим(Истина);
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
		Параметры = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
		ЧтениеXML.Закрыть();
		
		МиграцияПриложений.НачатьЗагрузку(Параметры);
		Возврат СостояниеЗагрузки();
	Исключение
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.УстановитьТелоИзСтроки(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации("AppMigration.Begin", УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ответ;
	КонецПопытки;
	
КонецФункции

// Загружает сообщение и помещает в очередь.
//
Функция Upload(Запрос)
	
	Попытка
		МиграцияПриложений.ЗагрузитьСообщение(Запрос.ПолучитьТелоКакПоток());
		Возврат СостояниеЗагрузки();
	Исключение
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.УстановитьТелоИзСтроки(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации("AppMigration.Upload", УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ответ;
	КонецПопытки;
	
КонецФункции

// Возвращает состояние загрузки
//
Функция Status(Запрос)
	
	Попытка
		Возврат СостояниеЗагрузки();
	Исключение
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.УстановитьТелоИзСтроки(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации("AppMigration.Status", УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ответ;
	КонецПопытки;
	
КонецФункции

// Отменяет загрузку.
//
Функция Cancel(Запрос)
	
	Попытка
		УстановитьМонопольныйРежим(Истина);
		МиграцияПриложений.ОтменитьЗагрузку();
		Возврат СостояниеЗагрузки();
	Исключение
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.УстановитьТелоИзСтроки(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации("AppMigration.Cancel", УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ответ;
	КонецПопытки;
	
КонецФункции

// Возвращает состояние загрузки в формате http-сервиса.
//
// Возвращаемое значение:
//   HTTPСервисОтвет - сериализованное в XML состояние загрузки.
//
Функция СостояниеЗагрузки()
	
	Статус = МиграцияПриложений.СостояниеЗагрузки();
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "text/plain;charset=UTF-8");
	Ответ.УстановитьТелоИзСтроки(ОбщегоНазначения.ЗначениеВСтрокуXML(Статус));
	
	Возврат Ответ;
	
КонецФункции
