
#Область СлужебныеПроцедурыИФункции

Функция ИспользоватьМногопотоковоеЗаполнениеДокументов() Экспорт 
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	НастройкиЗаполнения = НастройкиМногопотоковогоЗаполненияДокументов();
	
	Возврат НастройкиЗаполнения.КоличествоФизическихЛицВПакете > 0;
	
КонецФункции

Функция НастройкиМногопотоковогоЗаполненияДокументов() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НастройкиЗаполнения = РегистрыСведений.НастройкиМногопотоковогоЗаполненияДокументов.СоздатьМенеджерЗаписи();
	НастройкиЗаполнения.Прочитать();
	
	СтруктураНастроек = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(
		НастройкиЗаполнения, Метаданные.РегистрыСведений.НастройкиМногопотоковогоЗаполненияДокументов);
		
	Возврат СтруктураНастроек;	
	
КонецФункции

Процедура ПодготовитьДанныеДляЗаполнения(ОписаниеДокумента, Организация, МесяцНачисления, ДополнительныеПараметры) Экспорт 
	
	АдресХранилища = ДополнительныеПараметры.АдресХранилища;
	
	ЗаполнятьНачисленияПоДоговорамПодряда = Не ОписаниеДокумента.РежимДоначисления И ОписаниеДокумента.НачисленияПоДоговорамИмя <> Неопределено;
	
	ПараметрыСотрудников = РасчетЗарплатыРасширенный.ДополнительныеПараметрыСотрудниковДляНачисленияЗарплаты();
	ПараметрыСотрудников.ОкончаниеПериода = ДополнительныеПараметры.ОкончаниеПериода;
	ПараметрыСотрудников.ЗаполнятьНачисленияПоДоговорамПодряда = ЗаполнятьНачисленияПоДоговорамПодряда;
	ПараметрыСотрудников.ИспользоватьВоеннуюСлужбу = ДополнительныеПараметры.ИспользоватьВоеннуюСлужбу;
	ПараметрыСотрудников.НачислениеЗарплатыВоеннослужащим = ДополнительныеПараметры.НачислениеЗарплатыВоеннослужащим;
	ПараметрыСотрудников.РежимДоначисления = ОписаниеДокумента.РежимДоначисления;
	ПараметрыСотрудников.СотрудникиПериодДействияПерерасчет = ДополнительныеПараметры.СотрудникиПериодДействияПерерасчет;
	ПараметрыСотрудников.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СписокСотрудников = РасчетЗарплатыРасширенный.СотрудникиДляНачисленияЗарплаты(Организация, ДополнительныеПараметры.Подразделение, МесяцНачисления, ПараметрыСотрудников);
	СотрудникиПерерасчет = ДополнительныеПараметры.СотрудникиПериодДействияПерерасчет;
	
	СотрудникиДополнительныйДоход = РасчетЗарплатыРасширенный.СотрудникиДополнительныйДоход(
		Организация,
		ДополнительныеПараметры.Подразделение,
		МесяцНачисления,
		ПараметрыСотрудников,
		СписокСотрудников,
		Истина,
		Истина);
	
	НастройкиЗаполнения = НастройкиМногопотоковогоЗаполненияДокументов();
	РазмерПакета = НастройкиЗаполнения.КоличествоФизическихЛицВПакете;
	
	ВсеСотрудники = СотрудникиПерерасчет.СкопироватьКолонки("Сотрудник, ПериодДействия");
	ВсеСотрудники.Колонки.Добавить("ДополнительныйДоход", Новый ОписаниеТипов("Булево"));
	
	Для Каждого Сотрудник Из СписокСотрудников Цикл
		НоваяСтрока = ВсеСотрудники.Добавить();
		НоваяСтрока.Сотрудник = Сотрудник;
	КонецЦикла;
	
	Для Каждого СтрокаПерерасчета Из СотрудникиПерерасчет Цикл 
		НоваяСтрока = ВсеСотрудники.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПерерасчета);
	КонецЦикла;
	
	Для Каждого Сотрудник Из СотрудникиДополнительныйДоход Цикл
		НоваяСтрока = ВсеСотрудники.Добавить();
		НоваяСтрока.Сотрудник = Сотрудник;
		НоваяСтрока.ДополнительныйДоход = Истина;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ВсеСотрудники", ВсеСотрудники);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВсеСотрудники.Сотрудник,
	               |	ВсеСотрудники.ПериодДействия,
	               |	ВсеСотрудники.ДополнительныйДоход
	               |ПОМЕСТИТЬ ВТСотрудникиПериоды
	               |ИЗ
	               |	&ВсеСотрудники КАК ВсеСотрудники
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	СотрудникиПериоды.Сотрудник КАК Сотрудник,
	               |	СотрудникиПериоды.ПериодДействия КАК ПериодДействия,
	               |	СотрудникиПериоды.ДополнительныйДоход КАК ДополнительныйДоход
	               |ИЗ
	               |	ВТСотрудникиПериоды КАК СотрудникиПериоды
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	               |		ПО СотрудникиПериоды.Сотрудник = Сотрудники.Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ФизическоеЛицо,
	               |	Сотрудник,
	               |	ПериодДействия";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Сч = 0;
	
	СписокЗаданий = Новый Массив;
	СписокСотрудников = Новый Массив;
	СотрудникиДополнительныйДоход = Новый Массив;
	СотрудникиПерерасчет = ВсеСотрудники.СкопироватьКолонки("Сотрудник, ПериодДействия");
	
	СписокАдресов = Новый Массив;
	УникальныйИдентификатор = Новый УникальныйИдентификатор;
	
	НевыполненныеЗадания = Новый Массив;
	ВыполняемыеЗадания = Новый Соответствие;
	
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ПериодДействия) Тогда 
				НоваяСтрока = СотрудникиПерерасчет.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ИначеЕсли Выборка.ДополнительныйДоход Тогда 
				СотрудникиДополнительныйДоход.Добавить(Выборка.Сотрудник)
			Иначе 
				СписокСотрудников.Добавить(Выборка.Сотрудник);
			КонецЕсли;
			Сч = Сч + 1;
		КонецЦикла;
		
		Если Сч >= РазмерПакета Тогда
			
			АдресРезультатаВыполнения = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
			СписокАдресов.Добавить(АдресРезультатаВыполнения);
			
			ДополнительныеПараметры.АдресХранилища = АдресРезультатаВыполнения;
			ДополнительныеПараметры.Сотрудники = СписокСотрудников;
			ДополнительныеПараметры.СотрудникиПериодДействияПерерасчет = СотрудникиПерерасчет;
			ДополнительныеПараметры.СотрудникиДополнительныйДоход = СотрудникиДополнительныйДоход;
			РассчитатьПакетСотрудников(ОписаниеДокумента, Организация, МесяцНачисления, СписокЗаданий, ВыполняемыеЗадания, ДополнительныеПараметры);
			
			СписокСотрудников = Новый Массив;
			СотрудникиДополнительныйДоход = Новый Массив;
			СотрудникиПерерасчет = ВсеСотрудники.СкопироватьКолонки("Сотрудник, ПериодДействия");
			Сч = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Сч > 0 Тогда
		
		АдресРезультатаВыполнения = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		СписокАдресов.Добавить(АдресРезультатаВыполнения);
		
		ДополнительныеПараметры.АдресХранилища = АдресРезультатаВыполнения;
		ДополнительныеПараметры.Сотрудники = СписокСотрудников;
		ДополнительныеПараметры.СотрудникиПериодДействияПерерасчет = СотрудникиПерерасчет;
		ДополнительныеПараметры.СотрудникиДополнительныйДоход = СотрудникиДополнительныйДоход;
		РассчитатьПакетСотрудников(ОписаниеДокумента, Организация, МесяцНачисления, СписокЗаданий, ВыполняемыеЗадания, ДополнительныеПараметры);
		
	КонецЕсли;
	
	ОжидатьЗавершенияФоновыхЗаданий(СписокЗаданий, НевыполненныеЗадания);
	
	ДанныеЗаполнения = РасчетЗарплатыРасширенный.ОписаниеДанныхДляЗаполненияТаблицДокумента();
	
	Если НевыполненныеЗадания.Количество() > 0 Тогда 
		
		ДополнительныеПараметры.МногопотоковоеЗаполнение = Ложь;
		
		СписокСотрудников = Новый Массив;
		СотрудникиДополнительныйДоход = Новый Массив;
		СотрудникиПерерасчет = ВсеСотрудники.СкопироватьКолонки("Сотрудник, ПериодДействия");
		
		Для Каждого НевыполненноеЗадание Из НевыполненныеЗадания Цикл 
			ДанныеЗадания = ВыполняемыеЗадания[НевыполненноеЗадание.УникальныйИдентификатор];
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокСотрудников, ДанныеЗадания.Сотрудники);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СотрудникиДополнительныйДоход, ДанныеЗадания.СотрудникиДополнительныйДоход);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СотрудникиПерерасчет, ДанныеЗадания.СотрудникиПериодДействияПерерасчет);
		КонецЦикла;
		
		ДополнительныеПараметры.Сотрудники = СписокСотрудников;
		ДополнительныеПараметры.СотрудникиДополнительныйДоход = СотрудникиДополнительныйДоход;
		ДополнительныеПараметры.СотрудникиПериодДействияПерерасчет = СотрудникиПерерасчет;
		
		ДанныеЗаполнения = РасчетЗарплатыРасширенный.ДанныеДляЗаполненияТаблицДокумента(ОписаниеДокумента, Организация, МесяцНачисления, ДополнительныеПараметры);
		
	КонецЕсли;
	
	Для Каждого АдресРезультатаВыполнения Из СписокАдресов Цикл
		
		РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресРезультатаВыполнения);
		УдалитьИзВременногоХранилища(АдресРезультатаВыполнения);
		
		Если РезультатВыполнения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КлючИЗначение Из РезультатВыполнения Цикл
			Если ДанныеЗаполнения[КлючИЗначение.Ключ].Количество() = 0 Тогда
				ДанныеЗаполнения[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
			Иначе
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КлючИЗначение.Значение, ДанныеЗаполнения[КлючИЗначение.Ключ]);
			КонецЕсли;
		КонецЦикла;
			
	КонецЦикла;
	
	РезультатЗаполнения = Новый Структура;
	РезультатЗаполнения.Вставить("ДанныеДляЗаполненияТаблицДокумента", ДанныеЗаполнения);
	
	ПоместитьВоВременноеХранилище(РезультатЗаполнения, АдресХранилища);
	
КонецПроцедуры

Процедура ОжидатьЗавершенияФоновыхЗаданий(СписокЗаданий, НевыполненныеЗадания)
	
	АктивныеЗадания = Новый Массив;
	
	Попытка
		ФоновыеЗадания.ОжидатьЗавершения(СписокЗаданий);
	Исключение
		
		Для Каждого ИсходноеЗадание Из СписокЗаданий Цикл
			ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИсходноеЗадание.УникальныйИдентификатор);
			Если ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда 
				НевыполненныеЗадания.Добавить(ФоновоеЗадание);
			ИначеЕсли ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
				АктивныеЗадания.Добавить(ФоновоеЗадание);
			КонецЕсли;
		КонецЦикла;
		
	КонецПопытки;
	
	Если АктивныеЗадания.Количество() > 0 Тогда 
		ОжидатьЗавершенияФоновыхЗаданий(АктивныеЗадания, НевыполненныеЗадания);
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьПакетСотрудников(ОписаниеДокумента, Организация, МесяцНачисления, СписокЗаданий, ВыполняемыеЗадания, ДополнительныеПараметры)
	
	ДополнительныеПараметры.МногопотоковоеЗаполнение = Истина;
	
	МассивПараметров = Новый Массив();
	МассивПараметров.Добавить(ОписаниеДокумента);
	МассивПараметров.Добавить(Организация);
	МассивПараметров.Добавить(МесяцНачисления);
	МассивПараметров.Добавить(ДополнительныеПараметры);
	
	ФоновоеЗадание = ФоновыеЗадания.Выполнить("РасчетЗарплатыРасширенный.ДанныеДляЗаполненияТаблицДокумента", МассивПараметров);
	СписокЗаданий.Добавить(ФоновоеЗадание);
	
	Сотрудники = Новый Структура;
	Сотрудники.Вставить("Сотрудники", ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ДополнительныеПараметры.Сотрудники));
	Сотрудники.Вставить("СотрудникиДополнительныйДоход", ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ДополнительныеПараметры.СотрудникиДополнительныйДоход));
	Сотрудники.Вставить("СотрудникиПериодДействияПерерасчет", ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ДополнительныеПараметры.СотрудникиПериодДействияПерерасчет));
	
	ВыполняемыеЗадания.Вставить(ФоновоеЗадание.УникальныйИдентификатор, Сотрудники);
	
КонецПроцедуры

Процедура СформироватьВременныеТаблицыСотрудников(ИменаВТ, МенеджерВременныхТаблиц, Сотрудники, СотрудникиДополнительныйДоход) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("СотрудникиДополнительныйДоход", СотрудникиДополнительныйДоход);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Сотрудник
	               |ПОМЕСТИТЬ ВТВсеСотрудникиОрганизацииМногопотоковоеЗаполнение
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.Ссылка В(&Сотрудники)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Сотрудник
	               |ПОМЕСТИТЬ ВТСотрудникиДополнительныйДоходМногопотоковоеЗаполнение
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.Ссылка В(&СотрудникиДополнительныйДоход)";
				   
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ИменаВТ.Добавить("ВТВсеСотрудникиОрганизацииМногопотоковоеЗаполнение");
	ИменаВТ.Добавить("ВТСотрудникиДополнительныйДоходМногопотоковоеЗаполнение");
	
КонецПроцедуры

#КонецОбласти
