
#Область СлужебныйПрограммныйИнтерфейс

// Процедура регистрирует факт неудачи при попытке выплаты зарплаты документом.
// При этом "сторнируются" перенос даты получения доходов.
//
// Параметры:
//		Движения 		- КоллекцияДвижений, коллекция наборов записей движений ведомости.
//		Отказ			- признак отказа выполнения операции.
//		Документ		- ссылка на документ, которым ранее была зарегистрирована выплата зарплаты.
//		ФизическиеЛица	- массив ссылок на физические лица.
//
// Обработка ошибочных ситуаций
//	выдается сообщение, признак «Отказ» выставляется в Истина.
//
Процедура ЗарегистрироватьНевыплатуДокументом(Движения, Отказ, Документ, ФизическиеЛица) Экспорт
	
	Если Отказ 
		Или Движения.Найти("СведенияОДоходахНДФЛ") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Расчеты налогоплательщиков с бюджетом.
	СведенияОДоходах = РегистрыНакопления.СведенияОДоходахНДФЛ.СоздатьНаборЗаписей();
	СведенияОДоходах.Отбор.Регистратор.Установить(Документ);
	СведенияОДоходах.Прочитать();
	
	СведенияОДоходахСторно = СведенияОДоходах.ВыгрузитьКолонки();
	Для Каждого ЗаписьВедомости Из СведенияОДоходах Цикл
		Если ФизическиеЛица.Найти(ЗаписьВедомости.ФизическоеЛицо) <> Неопределено Тогда
			СтрокаСторно = СведенияОДоходахСторно.Добавить() ;
			ЗаполнитьЗначенияСвойств(СтрокаСторно, ЗаписьВедомости);
			СтрокаСторно.СуммаДохода = - ЗаписьВедомости.СуммаДохода;
			СтрокаСторно.СуммаВычета = - ЗаписьВедомости.СуммаВычета;
		КонецЕсли;
	КонецЦикла;
	
	Движения.СведенияОДоходахНДФЛ.Загрузить(СведенияОДоходахСторно);
	Движения.СведенияОДоходахНДФЛ.Записывать= Истина;
	
КонецПроцедуры

// Регистрирует полученный доход "Начислятелей" на новую дату получения дохода
// Параметры:
//		Регистратор - ДокументСсылка - документ выплаты
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - должен содержать временные таблицы 
//      	ВТСписокСотрудников, с данными о выплатах вида:
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты.
//          	ДокументОснование, необязательная
//          	СтатьяФинансирования, необязательная
//          	СтатьяРасходов, необязательная
//          	СуммаНачисленная, необязательная
//          	СуммаВыплаченная, необязательная, 
//			Если колонки СуммаНачисленная, СуммаВыплаченная отсутствуют, возможная частичная выплата не будет учтена.
//		Движения - коллекция движений регистратора.
//		ДатаВыплаты - Дата - новая дата получения дохода.
//		ДатаОперации - Дата - дата, которой будет зарегистрировано движение.
//		Отказ - Булево - признак отказа от заполнения движений.
//		Записывать - Булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура ЗарегистрироватьНовуюДатуПолученияДохода(Ведомость, Движения, МенеджерВременныхТаблиц, ДатаВыплаты, ДатаОперации, Отказ, Записывать = Ложь) Экспорт
	
	УчетФактическиПолученныхДоходовБазовый.ЗарегистрироватьНовуюДатуПолученияДохода(Ведомость, Движения, МенеджерВременныхТаблиц, ДатаВыплаты, ДатаОперации, Отказ, Записывать);
	
	Если Отказ Или ДатаВыплаты < УчетФактическиПолученныхДоходов.ДатаНачалаИспользованияПодсистемы() Или Движения.Найти("БухучетНачисленияУдержанияПоСотрудникам") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Бухучет начисления удержания по сотрудникам
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОсобыеНачисленияУдержанияНДФЛ", ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ(Истина));
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИтогиПоВедомости.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ИтогиПоВедомости.ДокументОснование КАК ДокументОснование,
	|	ИтогиПоВедомости.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ИтогиПоВедомости.СтатьяРасходов КАК СтатьяРасходов,
	|	ИтогиПоВедомости.СуммаВыплаты КАК СуммаВыплаты,
	|	ИтогиПоВедомости.СуммаНачисленная КАК СуммаНачисленная,
	|	ИтогиПоВедомости.СуммаВыплаченная КАК СуммаВыплаченная,
	|	ВЫБОР
	|		КОГДА ИтогиПоВедомости.СуммаНачисленная = 0
	|			ТОГДА 1
	|		КОГДА ИтогиПоВедомости.СуммаНачисленная < 0
	|				И ИтогиПоВедомости.СуммаВыплаты = ИтогиПоВедомости.СуммаНачисленная
	|			ТОГДА 1
	|		КОГДА ИтогиПоВедомости.СуммаВыплаченная + ИтогиПоВедомости.СуммаВыплаты > ИтогиПоВедомости.СуммаНачисленная * 0.9
	|			ТОГДА 1
	|		КОГДА ИтогиПоВедомости.СуммаВыплаченная + ИтогиПоВедомости.СуммаВыплаты <= ИтогиПоВедомости.СуммаНачисленная * 0.1
	|			ТОГДА 0
	|		ИНАЧЕ ИтогиПоВедомости.СуммаВыплаты / ИтогиПоВедомости.СуммаНачисленная
	|	КОНЕЦ КАК ДоляВыплаты
	|ПОМЕСТИТЬ ВТДанныеДляОтбора
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеВедомости.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ДанныеВедомости.ДокументОснование КАК ДокументОснование,
	|		ДанныеВедомости.СтатьяФинансирования КАК СтатьяФинансирования,
	|		ДанныеВедомости.СтатьяРасходов КАК СтатьяРасходов,
	|		СУММА(ДанныеВедомости.СуммаВыплаты) КАК СуммаВыплаты,
	|		СУММА(ДанныеВедомости.СуммаНачисленная) КАК СуммаНачисленная,
	|		СУММА(ДанныеВедомости.СуммаВыплаченная) КАК СуммаВыплаченная
	|	ИЗ
	|		ВТСписокСотрудников КАК ДанныеВедомости
	|	ГДЕ
	|		ДанныеВедомости.ДокументОснование <> НЕОПРЕДЕЛЕНО
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеВедомости.ФизическоеЛицо,
	|		ДанныеВедомости.ДокументОснование,
	|		ДанныеВедомости.СтатьяФинансирования,
	|		ДанныеВедомости.СтатьяРасходов) КАК ИтогиПоВедомости
	|ГДЕ
	|	ИтогиПоВедомости.СуммаВыплаты > 0";
	
	КолонкиРезультата = МенеджерВременныхТаблиц.Таблицы["ВТСписокСотрудников"].Колонки;
	Если КолонкиРезультата.Найти("ДокументОснование") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.ДокументОснование", "НЕОПРЕДЕЛЕНО") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СуммаНачисленная") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.СуммаНачисленная", "0") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СуммаВыплаченная") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.СуммаВыплаченная", "0") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СтатьяФинансирования") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.СтатьяФинансирования", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	Если КолонкиРезультата.Найти("СтатьяРасходов") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.СтатьяРасходов", "НЕОПРЕДЕЛЕНО") 
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачисленияУдержанияПоСотрудникам.*,
	|	ВТДанныеДляОтбора.ДоляВыплаты КАК ДоляВыплаты
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержанияПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДляОтбора КАК ВТДанныеДляОтбора
	|		ПО БухучетНачисленияУдержанияПоСотрудникам.Регистратор = ВТДанныеДляОтбора.ДокументОснование
	|			И БухучетНачисленияУдержанияПоСотрудникам.ФизическоеЛицо = ВТДанныеДляОтбора.ФизическоеЛицо
	|			И БухучетНачисленияУдержанияПоСотрудникам.СтатьяФинансирования = ВТДанныеДляОтбора.СтатьяФинансирования
	|			И БухучетНачисленияУдержанияПоСотрудникам.СтатьяРасходов = ВТДанныеДляОтбора.СтатьяРасходов
	|ГДЕ
	|	БухучетНачисленияУдержанияПоСотрудникам.НачислениеУдержание В(&ОсобыеНачисленияУдержанияНДФЛ)
	|	И НЕ БухучетНачисленияУдержанияПоСотрудникам.ДатаПолученияДоходаФиксирована";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НовоеДвижение = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
		
		Сумма = 0;
		Если Выборка.Сумма * Выборка.Сумма > (Выборка.Сумма * Выборка.ДоляВыплаты) * (Выборка.Сумма * Выборка.ДоляВыплаты) Тогда
			Сумма = (Выборка.Сумма * Выборка.ДоляВыплаты);
		Иначе
			Сумма = Выборка.Сумма;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НовоеДвижение, Выборка);
		НовоеДвижение.Сумма = - Сумма;
		НовоеДвижение.Период = ДатаОперации;
		
		НовоеДвижение = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеДвижение, Выборка);
		НовоеДвижение.Сумма = Сумма;
		НовоеДвижение.УстаревшаяДатаПолученияДохода = Выборка.ДатаПолученияДохода;
		НовоеДвижение.ДатаПолученияДохода = ДатаВыплаты;
		НовоеДвижение.Период = ДатаОперации;
		
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записать();
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Ложь;
	Иначе
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
	КонецЕсли;

	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, "ВТДанныеДляОтбора");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	УчетФактическиПолученныхДоходовБазовый.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.26";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ЗаполнитьКатегориюДоходаВДвиженияхПрочихДокументовПоРегиструСведенияОДоходахНДФЛ";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e42b43f3-4519-46f7-a487-109283852b6e");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение «Категории Дохода» в сведениях о доходах по НДФЛ для документов «Выплата бывшим сотрудникам», «Приз, подарок», «Начисление прочих доходов».'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.26";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ЗаполнитьКатегориюДоходаВДвиженияхПрочихДокументовПоРегиструРасчетыНалогоплательщиковСБюджетомПоНДФЛ";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("aabdc49a-da1f-4172-b64f-276569a997b8");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение «Категории Дохода» в расчетах налогоплательщиков с бюджетом по НДФЛ для документов «Выплата бывшим сотрудникам», «Приз, подарок», «Начисление прочих доходов».'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.157";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ЗаполнитьКатегориюДоходаВТабличнойЧастиНДФЛПрочихДокументах";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("bb753827-9843-4ac3-9a48-c20f53b33398");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение «Категории Дохода» в документах «Выплата бывшим сотрудникам» и «Начисление прочих доходов».'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.162";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ЗаполнитьКатегориюДоходаВИсчисленномНДФЛПрочихДокументов";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("0e145414-6f62-47eb-bb14-3e8baf73f4b0");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение «Категории Дохода» в документах «Выплата бывшим сотрудникам» и «Начисление прочих доходов».'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.162";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ИсправитьРаспределениеНДФЛВДокументах";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("ceb1cfd3-f6df-45e4-bcca-1a792bf11b66");
	Обработчик.Комментарий = НСтр("ru = 'Проверка распределения НДФЛ в документах перед обновлением НДФЛ.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.166";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ИсправитьРаспределениеНДФЛВДокументах";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("ded281c4-b7db-4b22-959b-76b972832e3f");
	Обработчик.Комментарий = НСтр("ru = 'Проверка распределения НДФЛ в документах после обновления НДФЛ.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.167";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ИсправитьДвиженияБухучетНДФЛДокуменов";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("06f719c0-902d-4a18-a25e-b06019e6aceb");
	Обработчик.Комментарий = НСтр("ru = 'Проверка распределения НДФЛ в движениях после обновления НДФЛ.'");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.Дивиденды") Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.26";
		Обработчик.Процедура = "Дивиденды.ЗаполнитьКатегориюДоходаВДвиженияхДокументаПоРегиструСведенияОДоходахНДФЛ";
		Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
		Обработчик.Идентификатор = Новый УникальныйИдентификатор("b7654fd9-9219-44bf-ac45-7f13f0999474");
		Обработчик.Комментарий = НСтр("ru = 'Заполнение «Категории Дохода»  в движениях документа «Дивиденды» по регистру «Учет доходов для исчисления НДФЛ».'");
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.26";
		Обработчик.Процедура = "Дивиденды.ЗаполнитьКатегориюДоходаВДвиженияхДокументаПоРегиструРасчетыНалогоплательщиковСБюджетомПоНДФЛ";
		Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
		Обработчик.Идентификатор = Новый УникальныйИдентификатор("252a1cad-67ce-42ef-ad6b-8b2313ac4ae4");
		Обработчик.Комментарий = НСтр("ru = 'Заполнение «Категории Дохода»  в движениях документа «Дивиденды» по регистру «Расчеты налогоплательщиков с бюджетом по НДФЛ».'");
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.157";
		Обработчик.Процедура = "Дивиденды.ИсправитьКатегориюДоходаВУдержанномНДФЛ";
		Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
		Обработчик.Идентификатор = Новый УникальныйИдентификатор("712ba907-ba8d-4a1d-b944-2580911d1f9f");
		Обработчик.Комментарий = НСтр("ru = 'Исправление «Категории Дохода» в движениях документа «Дивиденды» по регистру «Расчеты налогоплательщиков с бюджетом по НДФЛ».'");
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ВнешниеХозяйственныеОперации.ЗаймыСотрудникамВХО") Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.26";
		Обработчик.Процедура = "ЗаймыСотрудникамВХО.ЗаполнитьКатегориюДоходаВДвиженияхПогашениеЗаймаСотрудникуПоРегиструСведенияОДоходахНДФЛ";
		Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
		Обработчик.Идентификатор = Новый УникальныйИдентификатор("e9abcefb-c55d-428e-b6bf-fecc023e9c17");
		Обработчик.Комментарий = НСтр("ru = 'Заполнение «Категории Дохода» в сведениях о доходах по НДФЛ для документов «Погашение займа сотруднику».'");
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.26";
		Обработчик.Процедура = "ЗаймыСотрудникамВХО.ЗаполнитьКатегориюДоходаВДвиженияхПогашениеЗаймаСотрудникуПоРегиструРасчетыНалогоплательщиковСБюджетомПоНДФЛ";
		Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
		Обработчик.Идентификатор = Новый УникальныйИдентификатор("dd726a0b-f1f7-426f-8cac-b53187e2f123");
		Обработчик.Комментарий = НСтр("ru = 'Заполнение «Категории Дохода» в расчетах налогоплательщиков с бюджетом по НДФЛ для документов «Погашение займа сотруднику».'");
		
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.170";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("bcec81c3-956c-43b8-b78b-b01fc1f46e2e");
	Обработчик.Комментарий = НСтр("ru='Заполняет ""Категорию дохода"" в ведомостях'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ВедомостиЗаполнитьКатегориюДоходаВНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.171";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("1940d980-7a83-4f43-8568-1968e22177ff");
	Обработчик.Комментарий = НСтр("ru='Проверяет заполнение категории дохода в ведомостях'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ВедомостиУточнитьКатегориюДоходаВНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.165";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("457db1e7-c30b-4de3-9961-5191413b79d2");
	Обработчик.Комментарий = НСтр("ru='Заполняет категорию дохода в строках НДФЛ зарегистрированных как перенос затрат'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ЗаполнитьКатегорииДоходаВБухучетНачисленияУдержанияПереносаЗатрат";
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ВнешниеХозяйственныеОперации.УчетФактическиПолученныхДоходов") Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.95";
		Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
		Обработчик.Идентификатор = Новый УникальныйИдентификатор("2b030476-508f-4db4-bb88-2dd22fd371a8");
		Обработчик.Комментарий = НСтр("ru='Заполняет организацию в регистре ""Даты выплаты доходов""'");
		Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ЗаполнитьОрганизациюВРегистреДатыВыплатыДоходов";
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.177";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("96254adb-7f83-4b19-8d1e-2bd17da2b68c");
	Обработчик.Комментарий = НСтр("ru='Устанавливает флаг «Дата получения дохода фиксирована» в движениях документов «Перенос данных» по регистру «Учет доходов для исчисления НДФЛ»'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ЗафиксироватьДатуПолученияДоходаПеренесенныхДоходовНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.177";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("eae5ef6d-c3ef-4252-afa2-21b73a88cd1b");
	Обработчик.Комментарий = НСтр("ru='Устанавливает флаг «Дата получения дохода фиксирована» в движениях документов «Перенос данных» по регистру «Расчеты налогоплательщиков с бюджетом по НДФ»'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходовРасширенный.ЗафиксироватьДатуПолученияДоходаПеренесенногоИсчисленногоНДФЛ";
	
	УчетФактическиПолученныхДоходовРасширенныйПереопределяемый.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	
КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВДвиженияхПрочихДокументовПоРегиструСведенияОДоходахНДФЛ(ПараметрыОбновления = Неопределено) Экспорт 

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы) КАК КатегорияДохода,
	|	ЛОЖЬ КАК ДатаПолученияДоходаФиксирована,
	|	ВыплатаБывшимСотрудникам.Ссылка КАК ДокументОснование,
	|	ЗаписиРегистра.*
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК ЗаписиРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыплатаБывшимСотрудникам КАК ВыплатаБывшимСотрудникам
	|		ПО ЗаписиРегистра.Регистратор = ВыплатаБывшимСотрудникам.Ссылка
	|ГДЕ
	|	ВыплатаБывшимСотрудникам.ПланируемаяДатаВыплаты >= ДАТАВРЕМЯ(2017,1,1)
	|	И ЗаписиРегистра.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы),
	|	ИСТИНА,
	|	ПризПодарок.Ссылка,
	|	ЗаписиРегистра.*
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК ЗаписиРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПризПодарок КАК ПризПодарок
	|		ПО ЗаписиРегистра.Регистратор = ПризПодарок.Ссылка
	|ГДЕ
	|	ПризПодарок.ДатаПолученияДохода >= ДАТАВРЕМЯ(2017,1,1)
	|	И ЗаписиРегистра.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы),
	|	ЛОЖЬ,
	|	РегистрацияПрочихДоходов.Ссылка,
	|	ЗаписиРегистра.*
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК ЗаписиРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегистрацияПрочихДоходов КАК РегистрацияПрочихДоходов
	|		ПО ЗаписиРегистра.Регистратор = РегистрацияПрочихДоходов.Ссылка
	|ГДЕ
	|	РегистрацияПрочихДоходов.ПланируемаяДатаВыплаты >= ДАТАВРЕМЯ(2017,1,1)
	|	И ЗаписиРегистра.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	УчетНДФЛ.ОбработатьНаборыЗаписейРегистраНакопления("СведенияОДоходахНДФЛ", ТекстЗапроса, , , ПараметрыОбновления);

КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВДвиженияхПрочихДокументовПоРегиструРасчетыНалогоплательщиковСБюджетомПоНДФЛ(ПараметрыОбновления = Неопределено) Экспорт 

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы) КАК КатегорияДохода,
	|	ВыплатаБывшимСотрудникам.Ссылка КАК ДокументОснование,
	|	ЛОЖЬ КАК ДатаПолученияДоходаФиксирована,
	|	ЗаписиРегистра.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК ЗаписиРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыплатаБывшимСотрудникам КАК ВыплатаБывшимСотрудникам
	|		ПО ЗаписиРегистра.Регистратор = ВыплатаБывшимСотрудникам.Ссылка
	|ГДЕ
	|	ВыплатаБывшимСотрудникам.ПланируемаяДатаВыплаты >= ДАТАВРЕМЯ(2017,1,1)
	|	И ЗаписиРегистра.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы),
	|	ПризПодарок.Ссылка,
	|	ИСТИНА,
	|	ЗаписиРегистра.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК ЗаписиРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПризПодарок КАК ПризПодарок
	|		ПО ЗаписиРегистра.Регистратор = ПризПодарок.Ссылка
	|ГДЕ
	|	ПризПодарок.ДатаПолученияДохода >= ДАТАВРЕМЯ(2017,1,1)
	|	И ЗаписиРегистра.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы),
	|	РегистрацияПрочихДоходов.Ссылка,
	|	ЛОЖЬ,
	|	ЗаписиРегистра.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК ЗаписиРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегистрацияПрочихДоходов КАК РегистрацияПрочихДоходов
	|		ПО ЗаписиРегистра.Регистратор = РегистрацияПрочихДоходов.Ссылка
	|ГДЕ
	|	РегистрацияПрочихДоходов.ПланируемаяДатаВыплаты >= ДАТАВРЕМЯ(2017,1,1)
	|	И ЗаписиРегистра.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	УчетНДФЛ.ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", ТекстЗапроса, , , ПараметрыОбновления);

КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВДвиженияхОсобогоДокументаПоРегиструСведенияОДоходахНДФЛ(ИмяДокумента, КатегорияДохода = Неопределено, ПараметрыОбновления = Неопределено) Экспорт 

	УточненнаяКатегория = ?(ЗначениеЗаполнено(КатегорияДохода), КатегорияДохода, Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы) КАК КатегорияДохода,
	|	ИСТИНА КАК ДатаПолученияДоходаФиксирована,
	|	ОсобыйДокумент.Ссылка КАК ДокументОснование,
	|	ЗаписиРегистра.*
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК ЗаписиРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #ОсобыйДокумент КАК ОсобыйДокумент
	|		ПО ЗаписиРегистра.Регистратор = ОсобыйДокумент.Ссылка
	|ГДЕ
	|	ОсобыйДокумент.Дата >= ДАТАВРЕМЯ(2017,1,1)
	|	И ЗаписиРегистра.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ОсобыйДокумент", "Документ." + ИмяДокумента);	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПрочиеНатуральныеДоходы", ОбщегоНазначения.ИмяЗначенияПеречисления(УточненнаяКатегория));
	
	УчетНДФЛ.ОбработатьНаборыЗаписейРегистраНакопления("СведенияОДоходахНДФЛ", ТекстЗапроса, , , ПараметрыОбновления);

КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВДвиженияхОсобогоДокументаПоРегиструРасчетыНалогоплательщиковСБюджетомПоНДФЛ(ИмяДокумента, КатегорияДохода = Неопределено, ПараметрыОбновления = Неопределено) Экспорт 

	УточненнаяКатегория = ?(ЗначениеЗаполнено(КатегорияДохода), КатегорияДохода, Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы) КАК КатегорияДохода,
	|	ОсобыйДокумент.Ссылка КАК ДокументОснование,
	|	ИСТИНА КАК ДатаПолученияДоходаФиксирована,
	|	ЗаписиРегистра.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК ЗаписиРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #ОсобыйДокумент КАК ОсобыйДокумент
	|		ПО ЗаписиРегистра.Регистратор = ОсобыйДокумент.Ссылка
	|ГДЕ
	|	ОсобыйДокумент.Дата >= ДАТАВРЕМЯ(2017,1,1)
	|	И ЗаписиРегистра.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ОсобыйДокумент", "Документ." + ИмяДокумента);	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПрочиеНатуральныеДоходы", ОбщегоНазначения.ИмяЗначенияПеречисления(УточненнаяКатегория));	
	
	УчетНДФЛ.ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", ТекстЗапроса, , , ПараметрыОбновления);

КонецПроцедуры

Процедура ИсправитьРаспределениеНДФЛВДокументах(ПараметрыОбновления = Неопределено) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ЗарплатаКадры.РегистраторыПереносаДанных());
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТВсеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТИПЗНАЧЕНИЯ(ВсеРегистраторы.Регистратор) КАК ТипДокумента
	|ИЗ
	|	ВТВсеРегистраторы КАК ВсеРегистраторы";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекстШаблона =
	"ВЫБРАТЬ
	|	Регистраторы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛ.Ссылка КАК Ссылка,
	|		СУММА(НДФЛ.Налог - НДФЛ.ЗачтеноАвансовыхПлатежей) КАК НДФЛ,
	|		НДФЛ.ИдентификаторСтрокиНДФЛ КАК ИдентификаторСтроки
	|	ИЗ
	|		Документ.НачислениеЗарплаты.НДФЛ КАК НДФЛ
	|	ГДЕ
	|		НДФЛ.Ссылка В
	|				(ВЫБРАТЬ
	|					ВсеРегистраторы.Регистратор
	|				ИЗ
	|					ВТВсеРегистраторы КАК ВсеРегистраторы
	|				ГДЕ
	|					ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛ.Ссылка,
	|		НДФЛ.ИдентификаторСтрокиНДФЛ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаспределениеНДФЛ.Ссылка,
	|		-СУММА(РаспределениеНДФЛ.Результат),
	|		РаспределениеНДФЛ.ИдентификаторСтроки
	|	ИЗ
	|		Документ.НачислениеЗарплаты.РаспределениеРезультатовУдержаний КАК РаспределениеНДФЛ
	|	ГДЕ
	|		РаспределениеНДФЛ.Ссылка В
	|				(ВЫБРАТЬ
	|					ВсеРегистраторы.Регистратор
	|				ИЗ
	|					ВТВсеРегистраторы КАК ВсеРегистраторы
	|				ГДЕ
	|					ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РаспределениеНДФЛ.Ссылка,
	|		РаспределениеНДФЛ.ИдентификаторСтроки) КАК Регистраторы
	|
	|СГРУППИРОВАТЬ ПО
	|	Регистраторы.Ссылка
	|
	|ИМЕЮЩИЕ
	|	СУММА(Регистраторы.НДФЛ) <> 0";
	
	ПервыйЗапрос = Истина;
	Запрос.Текст = "";
	Пока Выборка.Следующий() Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		Если МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛ") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если МетаданныеДокумента.ТабличныеЧасти.НДФЛ.Реквизиты.Найти("Налог") = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		Если МетаданныеДокумента.ТабличныеЧасти.Найти("РаспределениеРезультатовУдержаний") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстШаблона, "Документ.НачислениеЗарплаты", МетаданныеДокумента.ПолноеИмя());
		
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТРегистраторы", "");
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		ПервыйЗапрос = Ложь;
		
	КонецЦикла;
	Если ПустаяСтрока(Запрос.Текст) Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;

	Запрос.Выполнить();
	Если Не ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТРегистраторы") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	Регистраторы.Ссылка КАК Регистратор
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы";
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 1000", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ." + Выборка.Регистратор.Метаданные().Имя, "Ссылка", Выборка.Регистратор) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		
		ОтражениеЗарплатыВБухучетеРасширенный.ИсправитьРаспределениеНДФЛВТаблицеДокумента(ДокументОбъект);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ИсправитьДвиженияБухучетНДФЛДокуменов(ПараметрыОбновления = Неопределено) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТВсеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТИПЗНАЧЕНИЯ(ВсеРегистраторы.Регистратор) КАК ТипДокумента
	|ИЗ
	|	ВТВсеРегистраторы КАК ВсеРегистраторы";
	Выборка = Запрос.Выполнить().Выбрать();

	ТекстШаблона =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистраторы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Регистраторы.Ссылка КАК Ссылка,
	|		Регистраторы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Регистраторы.КатегорияДохода КАК КатегорияДохода,
	|		Регистраторы.СтатьяФинансирования КАК СтатьяФинансирования,
	|		Регистраторы.СтатьяРасходов КАК СтатьяРасходов
	|	ИЗ
	|		(ВЫБРАТЬ
	|			НДФЛ.Ссылка КАК Ссылка,
	|			НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|			НДФЛ.КатегорияДохода КАК КатегорияДохода,
	|			РаспределениеНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
	|			РаспределениеНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|			СУММА(РаспределениеНДФЛ.Результат) КАК Результат
	|		ИЗ
	|			Документ.НачислениеЗарплаты.НДФЛ КАК НДФЛ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеЗарплаты.РаспределениеРезультатовУдержаний КАК РаспределениеНДФЛ
	|				ПО НДФЛ.Ссылка = РаспределениеНДФЛ.Ссылка
	|					И НДФЛ.ИдентификаторСтрокиНДФЛ = РаспределениеНДФЛ.ИдентификаторСтроки
	|		ГДЕ
	|			НДФЛ.Ссылка В
	|					(ВЫБРАТЬ
	|						ВсеРегистраторы.Регистратор
	|					ИЗ
	|						ВТВсеРегистраторы КАК ВсеРегистраторы
	|					ГДЕ
	|						ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НДФЛ.ФизическоеЛицо,
	|			НДФЛ.КатегорияДохода,
	|			РаспределениеНДФЛ.СтатьяФинансирования,
	|			РаспределениеНДФЛ.СтатьяРасходов,
	|			НДФЛ.Ссылка
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			БухучетНДФЛ.Регистратор,
	|			БухучетНДФЛ.ФизическоеЛицо,
	|			БухучетНДФЛ.КатегорияДохода,
	|			БухучетНДФЛ.СтатьяФинансирования,
	|			БухучетНДФЛ.СтатьяРасходов,
	|			-СУММА(БухучетНДФЛ.Сумма)
	|		ИЗ
	|			РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНДФЛ
	|		ГДЕ
	|			БухучетНДФЛ.Регистратор В
	|					(ВЫБРАТЬ
	|						ВсеРегистраторы.Регистратор
	|					ИЗ
	|						ВТВсеРегистраторы КАК ВсеРегистраторы
	|					ГДЕ
	|						ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
	|			И БухучетНДФЛ.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			БухучетНДФЛ.Регистратор,
	|			БухучетНДФЛ.ФизическоеЛицо,
	|			БухучетНДФЛ.СтатьяФинансирования,
	|			БухучетНДФЛ.СтатьяРасходов,
	|			БухучетНДФЛ.КатегорияДохода) КАК Регистраторы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Регистраторы.Ссылка,
	|		Регистраторы.ФизическоеЛицо,
	|		Регистраторы.КатегорияДохода,
	|		Регистраторы.СтатьяФинансирования,
	|		Регистраторы.СтатьяРасходов
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(Регистраторы.Результат) <> 0) КАК Регистраторы";
	
	ПервыйЗапрос = Истина;
	Запрос.Текст = "";
	Пока Выборка.Следующий() Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		Если МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛ") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если МетаданныеДокумента.ТабличныеЧасти.НДФЛ.Реквизиты.Найти("Налог") = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		Если МетаданныеДокумента.ТабличныеЧасти.Найти("РаспределениеРезультатовУдержаний") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстШаблона, "Документ.НачислениеЗарплаты", МетаданныеДокумента.ПолноеИмя());
		
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТРегистраторы", "");
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		ПервыйЗапрос = Ложь;
		
	КонецЦикла;
	Если ПустаяСтрока(Запрос.Текст) Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;

	Запрос.Выполнить();
	Если Не ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТРегистраторы") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	Регистраторы.Ссылка КАК Регистратор
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы";
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 1000", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам.НаборЗаписей", "Регистратор", Выборка.Регистратор) Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйНаборЗаписейБухучета = Неопределено;
		ОтражениеЗарплатыВБухучетеРасширенный.ИсправитьДвиженияБухучетНДФЛ(Выборка.Регистратор, НовыйНаборЗаписейБухучета);
		Если НовыйНаборЗаписейБухучета <> Неопределено Тогда
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйНаборЗаписейБухучета);
		КонецЕсли;
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВИсчисленномНДФЛМежрасчетныхДокументах(ПараметрыОбновления = Неопределено) Экспорт
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Увольнения", УчетФактическиПолученныхДоходов.РегистраторыУвольнения());
	Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ЗарплатаКадры.РегистраторыПереносаДанных());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТВсеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = СведенияОДоходахНДФЛ.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = СведенияОДоходахНДФЛ.Организация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = СведенияОДоходахНДФЛ.Подразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = СведенияОДоходахНДФЛ.КатегорияДохода
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|			ИЛИ ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) В (&Увольнения))
	|	И (СведенияОДоходахНДФЛ.КатегорияДохода ЕСТЬ NULL
	|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка))
	|	И НЕ ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = СведенияОДоходахНДФЛ.Регистратор)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = СведенияОДоходахНДФЛ.Организация)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = СведенияОДоходахНДФЛ.ДатаПолученияДохода)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = СведенияОДоходахНДФЛ.Подразделение)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = СведенияОДоходахНДФЛ.КатегорияДохода)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход))
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода >= ДАТАВРЕМЯ(2017,1,1)
	|	И (СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|			ИЛИ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&Увольнения))
	|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода ЕСТЬ NULL
	|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка))
	|	И НЕ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТИсключаемыеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				ВсеРегистраторы.Регистратор
	|			ИЗ
	|				ВТВсеРегистраторы КАК ВсеРегистраторы)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеРегистраторы.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	ВТВсеРегистраторы КАК ВсеРегистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключаемыеРегистраторы КАК РегистраторыУдержанногоНДФЛ
	|		ПО ВсеРегистраторы.Регистратор = РегистраторыУдержанногоНДФЛ.Регистратор
	|ГДЕ
	|	РегистраторыУдержанногоНДФЛ.Регистратор ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТРегистраторы.Регистратор КАК Регистратор
	|ИЗ
	|	ВТРегистраторы КАК ВТРегистраторы";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	КатегорииДоходов.КатегорияДохода КАК КатегорияДохода,
	|	КатегорииДоходов.СуммаДохода КАК СуммаДохода,
	|	ЛОЖЬ КАК ДатаПолученияДоходаФиксирована,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(СведенияОДоходахНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|					ТОГДА ВЫБОР
	|							КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|								ТОГДА ЗНАЧЕНИЕ(перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы)
	|							КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|								ТОГДА ЗНАЧЕНИЕ(перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|							ИНАЧЕ ЗНАЧЕНИЕ(перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|						КОНЕЦ
	|				ИНАЧЕ СведенияОДоходахНДФЛ.КатегорияДохода
	|			КОНЕЦ КАК КатегорияДохода,
	|			ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода - ВЫБОР
	|					КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|						ТОГДА 0
	|					ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|				КОНЕЦ, 0) КАК СуммаДохода
	|		ИЗ
	|			РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|				ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = СведенияОДоходахНДФЛ.Регистратор
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = СведенияОДоходахНДФЛ.Организация
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = СведенияОДоходахНДФЛ.Подразделение
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента
	|					И НЕ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|		ГДЕ
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|					(ВЫБРАТЬ
	|						Регистраторы.Регистратор КАК Регистратор
	|					ИЗ
	|						ВТРегистраторы КАК Регистраторы)
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)) КАК КатегорииДоходов
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = КатегорииДоходов.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки = КатегорииДоходов.НомерСтроки
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки";
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	ВременныйНабор = НаборЗаписей.ВыгрузитьКолонки();
	ВременныйНабор.Колонки.Добавить("СуммаДохода", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	
	КолонкиГруппировок =
	"Период,
	|Регистратор,
	|ВидДвижения,
	|Активность,
	|ГоловнаяОрганизация, 
	|ФизическоеЛицо, 
	|СтавкаНалогообложенияРезидента, 
	|МесяцНалоговогоПериода, 
	|КатегорияДохода, 
	|РегистрацияВНалоговомОргане, 
	|Организация, 
	|КодДохода,
	|Подразделение,
	|ДокументОснование,
	|ВариантУдержания,
	|ВключатьВДекларациюПоНалогуНаПрибыль,
	|РасчетМежрасчетногоПериода,
	|СуммаВыплаченногоДохода,
	|СрокПеречисления,
	|КрайнийСрокУплаты,
	|УчитыватьВыплаченныйДоходВ6НДФЛ,
	|УстаревшаяДатаПолученияДохода,
	|Сторно";
	
	КатегорииСФиксированнойДатойДохода = Перечисления.КатегорииДоходовНДФЛ.СФиксированнойДатойПолученияДохода();
	ДокументыСНДФЛ = Новый Соответствие;
	ОбновитьБухучетНДФЛ = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	РегистраторыБухучета = Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СтандартныеРеквизиты.Регистратор.Тип;
	
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		НачатьТранзакцию();
		Попытка
			МетаданныеДокумента = Выборка.Регистратор.Метаданные();
			Регистратор = Выборка.Регистратор;
			ИмяДокумента = МетаданныеДокумента.Имя;
			ОбновитьБухучетНДФЛДокумента = ОбновитьБухучетНДФЛ И РегистраторыБухучета.СодержитТип(ТипЗнч(Выборка.Регистратор));
			
			Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Неопределено Тогда
				ОбновляемДокумент = Ложь;
				Если МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛ") <> Неопределено Тогда 
					ОбновляемДокумент = МетаданныеДокумента.ТабличныеЧасти.НДФЛ.Реквизиты.Найти("Налог") <> Неопределено;
				КонецЕсли;
				ДокументыСНДФЛ.Вставить(ИмяДокумента, ОбновляемДокумент);
			КонецЕсли;
			
			Если ПараметрыОбновления <> НеОпределено Тогда
				
				Блокировка = Новый БлокировкаДанных;
				Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Истина Тогда
					ЭлементБлокировки = Блокировка.Добавить("Документ." + ИмяДокумента);
					ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Регистратор);
				КонецЕсли;
				Если ОбновитьБухучетНДФЛДокумента Тогда
					ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам.НаборЗаписей");
					ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
				КонецЕсли;
				
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
				
				Блокировка.Заблокировать();
				
			КонецЕсли;
			
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Очистить();
			
			Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
				
				Если Выборка.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
					ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
					Продолжить;
				КонецЕсли;
				
				ВременныйНабор.Очистить();
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ВременныйНабор.Добавить(), Выборка);
				КонецЦикла;
				
				Если ВременныйНабор.Количество() = 1 Тогда
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, ВременныйНабор[0]);
					Если Не ЗначениеЗаполнено(Запись.КатегорияДохода) Тогда
						Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					КонецЕсли;
					
					Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
						Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
						Запись.ДатаПолученияДоходаФиксирована = Истина;
					КонецЕсли;
					
					Продолжить;
				КонецЕсли;
				
				Коэффициенты = ВременныйНабор.ВыгрузитьКолонку("СуммаДохода");
				РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНабор[0].Сумма, Коэффициенты, 0);
				
				Если РезультатыРаспределения = Неопределено Тогда
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, ВременныйНабор[0]);
					Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					Запись.ДатаПолученияДоходаФиксирована = Истина;
					
				Иначе
					
					Индекс = 0;
					Для Каждого Строка Из ВременныйНабор Цикл
						
						Запись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(Запись, Строка);
						Запись.Сумма = РезультатыРаспределения[Индекс];
						Если Не ЗначениеЗаполнено(Запись.КатегорияДохода) Тогда
							Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						КонецЕсли;
						
						Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
							Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
							Запись.ДатаПолученияДоходаФиксирована = Истина;
						КонецЕсли;
						
						Индекс = Индекс + 1;
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
			ЗаписиНабора = НаборЗаписей.Выгрузить();
			ЗаписиНабора.Свернуть(КолонкиГруппировок, "Сумма");
			НаборЗаписей.Загрузить(ЗаписиНабора);
			
			Для Каждого Запись Из НаборЗаписей Цикл
				Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
					Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
					Запись.ДатаПолученияДоходаФиксирована = Истина;
				КонецЕсли;
			КонецЦикла;
			
			УчетФактическиПолученныхДоходов.УточнитьКрайнийСрокУплаты(НаборЗаписей);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Истина Тогда
				ДокументОбъект = Регистратор.ПолучитьОбъект();
				
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
				Запрос.УстановитьПараметр("Ссылка", Выборка.Регистратор);
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
				|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
				|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
				|	НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
				|	НачислениеЗарплатыНДФЛ.КатегорияДохода КАК КатегорияДохода,
				|	СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
				|	СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
				|	НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ НДФЛДокумента
				|ИЗ
				|	Документ.НачислениеЗарплаты.НДФЛ КАК НачислениеЗарплатыНДФЛ
				|ГДЕ
				|	НачислениеЗарплатыНДФЛ.Ссылка = &Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
				|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
				|	НачислениеЗарплатыНДФЛ.Подразделение,
				|	НачислениеЗарплатыНДФЛ.Ссылка,
				|	НачислениеЗарплатыНДФЛ.КатегорияДохода
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	НДФЛ.НомерСтроки КАК НомерСтрокиДокумента,
				|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
				|	НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
				|	НДФЛ.Подразделение КАК Подразделение,
				|	НДФЛ.Налог КАК Налог,
				|	НДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежей,
				|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
				|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма, 0) КАК Сумма
				|ИЗ
				|	(ВЫБРАТЬ
				|		МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
				|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
				|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
				|		НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
				|		СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
				|		СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
				|		НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
				|	ИЗ
				|		НДФЛДокумента КАК НачислениеЗарплатыНДФЛ
				|	
				|	СГРУППИРОВАТЬ ПО
				|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
				|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
				|		НачислениеЗарплатыНДФЛ.Подразделение,
				|		НачислениеЗарплатыНДФЛ.Ссылка) КАК НДФЛ
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
				|		ПО НДФЛ.Ссылка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
				|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
				|			И НДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
				|			И НДФЛ.МесяцНалоговогоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
				|			И НДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
				|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
				|			И НДФЛ.Ссылка.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	0,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
				|	0,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
				|ИЗ
				|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
				|		ЛЕВОЕ СОЕДИНЕНИЕ НДФЛДокумента КАК НДФЛДокумента
				|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = НДФЛДокумента.Ссылка
				|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
				|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = НДФЛДокумента.ФизическоеЛицо
				|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = НДФЛДокумента.МесяцНалоговогоПериода
				|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = НДФЛДокумента.Подразделение
				|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = НДФЛДокумента.Ссылка.Организация
				|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
				|ГДЕ
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = &Ссылка
				|	И НДФЛДокумента.Ссылка ЕСТЬ NULL
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтрокиДокумента";
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.НачислениеЗарплаты.НДФЛ", "Документ." +ИмяДокумента + ".НДФЛ");
				ВыборкаИсчисленного = Запрос.Выполнить().Выбрать();
				
				ТаблицаНДФЛ = ДокументОбъект.НДФЛ.ВыгрузитьКолонки();
				ТаблицаНДФЛ.Колонки.Добавить("НомерСтрокиДокумента", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7)));
				ВременныйНаборИсчисленного = ТаблицаНДФЛ.Скопировать();
				ВременныйНаборИсчисленного.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
				
				Пока ВыборкаИсчисленного.СледующийПоЗначениюПоля("НомерСтрокиДокумента") Цикл
					ВременныйНаборИсчисленного.Очистить();
					
					НомерСтрокиДокумента = ВыборкаИсчисленного.НомерСтрокиДокумента;
					
					Если НомерСтрокиДокумента = 0 Тогда
						Пока ВыборкаИсчисленного.Следующий() Цикл
							НоваяСтрока = ТаблицаНДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИсчисленного);
							НоваяСтрока.Налог = ВыборкаИсчисленного.Сумма;
						КонецЦикла;
						Продолжить;
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(ВыборкаИсчисленного.КатегорияДохода) Тогда
						НоваяСтрока = ТаблицаНДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИсчисленного);
						НоваяСтрока.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						НоваяСтрока.Налог = 0;
						Продолжить;
					КонецЕсли;
					
					СтрокаДокумента = ТаблицаНДФЛ.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВыборкаИсчисленного);
					
					Пока ВыборкаИсчисленного.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ВременныйНаборИсчисленного.Добавить(), ВыборкаИсчисленного);
					КонецЦикла;
					
					Если ВременныйНаборИсчисленного.Количество() = 1 Тогда
						СтрокаДокумента.Налог = ВыборкаИсчисленного.Сумма;
						Продолжить;
					КонецЕсли;
					
					Коэффициенты = ВременныйНаборИсчисленного.ВыгрузитьКолонку("Сумма");
					РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНаборИсчисленного[0].Налог, Коэффициенты, 0);
					Если СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0 Тогда
						РезультатыРаспределенияАванса = Неопределено;
					Иначе
						РезультатыРаспределенияАванса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДокумента.ЗачтеноАвансовыхПлатежей, Коэффициенты, 0);
					КонецЕсли;
					
					Если РезультатыРаспределения = Неопределено Тогда
						
						Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
							СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						КонецЕсли;
						СтрокаДокумента.Налог = 0;
						
					Иначе
						
						Индекс = 0;
						Для Каждого Строка Из ВременныйНаборИсчисленного Цикл
							
							Если Индекс = 0 Тогда
								
								СтрокаДокумента.КатегорияДохода = Строка.КатегорияДохода;
								СтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
								Если РезультатыРаспределенияАванса <> Неопределено Тогда
									СтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
								КонецЕсли;
								
							Иначе
								
								НоваяСтрокаДокумента = ТаблицаНДФЛ.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, Строка, , "ЗачтеноАвансовыхПлатежей, ПримененныйВычетЛичный, ПримененныйВычетЛичныйКодВычета, ПримененныйВычетЛичныйКЗачетуВозврату, ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета");
								НоваяСтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
								Если РезультатыРаспределенияАванса <> Неопределено Тогда
									НоваяСтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
								КонецЕсли;
								
							КонецЕсли;
							
							Индекс = Индекс + 1;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
				
				МаксимальныйИдентификатор = УчетНДФЛФормы.МаксимальныйИдентификаторСтрокиНДФЛ(ДокументОбъект.НДФЛ) + 1;
				ОбновленныеСтрокиНДФЛ = Новый Соответствие;
				СтруктураПоиска = Новый Структура("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
				СтрокиНДФЛКУдалению = Новый Массив;
				
				ОбновляемыеНаборыСтрок = ТаблицаНДФЛ.Скопировать();
				ОбновляемыеНаборыСтрок.Свернуть("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
				Для Каждого Строка Из ОбновляемыеНаборыСтрок Цикл
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
					СтрокиНДФЛ = ТаблицаНДФЛ.НайтиСтроки(СтруктураПоиска);
					СтрокиДокумента = ДокументОбъект.НДФЛ.НайтиСтроки(СтруктураПоиска);
					КоличествоСтрокДокумента = СтрокиДокумента.Количество();
					КоличествоСтрокНДФЛ = СтрокиНДФЛ.Количество();
					
					Индекс = 1;
					ИдентификаторСтрокиНДФЛ = 0;
					Для Каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
						Если Индекс <= КоличествоСтрокДокумента Тогда
							СтрокаДокумента = СтрокиДокумента[Индекс -1];
							Если Индекс = 1 Тогда
								ИдентификаторСтрокиНДФЛ = СтрокаДокумента.ИдентификаторСтрокиНДФЛ;
								ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
							КонецЕсли;
							
							ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(СтрокаДокумента.ИдентификаторСтрокиНДФЛ);
							
							СтрокаДокумента.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода;
							СтрокаДокумента.Налог = СтрокаНДФЛ.Налог;
							СтрокаДокумента.ЗачтеноАвансовыхПлатежей = СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей;
						Иначе
							СтрокаДокумента = ДокументОбъект.НДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаНДФЛ);
							СтрокаДокумента.ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
							
							Если ИдентификаторСтрокиНДФЛ = 0 Тогда
								ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
								ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
							КонецЕсли;
							ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(МаксимальныйИдентификатор);
							
							МаксимальныйИдентификатор = МаксимальныйИдентификатор + 1;
						КонецЕсли;
						
						Индекс = Индекс + 1;
						
					КонецЦикла;
					
					КоличествоЛишнихСтрок = КоличествоСтрокДокумента - КоличествоСтрокНДФЛ;
					Если КоличествоЛишнихСтрок > 0 Тогда
						Для Индекс = 1 По КоличествоЛишнихСтрок Цикл
							СтрокаДокумента = СтрокиДокумента[КоличествоСтрокДокумента - Индекс];
							СтрокаДокумента.Налог = 0;
							СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0;
							
							СтрокиНДФЛКУдалению.Добавить(СтрокаДокумента);
						КонецЦикла;
					КонецЕсли;
					
				КонецЦикла;
				
				Для Каждого СтрокаКУдалению Из СтрокиНДФЛКУдалению Цикл
					Если ОбновитьБухучетНДФЛДокумента Тогда
						МетаданныеДокумента = ДокументОбъект.Метаданные();
						ИдентификаторСтрокиНДФЛ = СтрокаКУдалению.ИдентификаторСтрокиНДФЛ;
						Если МетаданныеДокумента.ТабличныеЧасти.Найти("РаспределениеРезультатовУдержаний") <> Неопределено Тогда
							СтрокиРаспределения = ДокументОбъект.РаспределениеРезультатовУдержаний.НайтиСтроки(Новый Структура("ИдентификаторСтроки,ВидУдержания", ИдентификаторСтрокиНДФЛ, Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ));
							Если СтрокиРаспределения.Количество() Тогда
								ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
								ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(ИдентификаторСтрокиНДФЛ);
								Продолжить;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ДокументОбъект.НДФЛ.Удалить(СтрокаКУдалению);
					
				КонецЦикла;
				
				Если ОбновитьБухучетНДФЛДокумента Тогда
					НовыйНаборЗаписейБухучета = Неопределено;
					ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьРаспределениеПриОбновленииКатегорииДоходаВИсчисленномНДФЛ(ДокументОбъект, ОбновленныеСтрокиНДФЛ, НовыйНаборЗаписейБухучета);
					Если НовыйНаборЗаписейБухучета <> Неопределено Тогда
						ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйНаборЗаписейБухучета);
					КонецЕсли;
				КонецЕсли;
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось заполнить категорию дохода исчисленного НДФЛ в документах и движения: '"), УровеньЖурналаРегистрации.Ошибка,, Выборка.Регистратор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВИсчисленномНДФЛОкончательныйРасчетЗаМесяц(Месяц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Месяц", Месяц);
	
	ТипыИсключаемыхРегистраторов = ЗарплатаКадры.РегистраторыПереносаДанных();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ТипыИсключаемыхРегистраторов, УчетФактическиПолученныхДоходов.РегистраторыУвольнения());
	Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ТипыИсключаемыхРегистраторов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТИсключаемыеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, МЕСЯЦ) = &Месяц
	|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы))
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТДанныеИсчисленногоНДФЛ
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, МЕСЯЦ) = &Месяц
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода = ЛОЖЬ
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|				(ВЫБРАТЬ
	|					ВТИсключаемыеРегистраторы.Регистратор КАК Регистратор
	|				ИЗ
	|					ВТИсключаемыеРегистраторы КАК ВТИсключаемыеРегистраторы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор КАК Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация КАК Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение КАК Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Период КАК Период,
	|	ВТДанныеИсчисленногоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
	|	СУММА(ВТДанныеИсчисленногоНДФЛ.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТОбщаяСуммаНалога
	|ИЗ
	|	ВТДанныеИсчисленногоНДФЛ КАК ВТДанныеИсчисленногоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.Организация,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.Период,
	|	ВТДанныеИсчисленногоНДФЛ.РасчетМежрасчетногоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТДанныеИсчисленногоНДФЛ.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор КАК Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация КАК Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение КАК Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	ВТДанныеИсчисленногоНДФЛ.Период КАК Период,
	|	ВТДанныеИсчисленногоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ВТДанныеИсчисленногоНДФЛ.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВТОбщаяСуммаНалога.Сумма ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВТДанныеИсчисленногоНДФЛ.Сумма / ВТОбщаяСуммаНалога.Сумма
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВТКоэффициентыИсчисленного
	|ИЗ
	|	ВТДанныеИсчисленногоНДФЛ КАК ВТДанныеИсчисленногоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбщаяСуммаНалога КАК ВТОбщаяСуммаНалога
	|		ПО ВТДанныеИсчисленногоНДФЛ.Регистратор = ВТОбщаяСуммаНалога.Регистратор
	|			И ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо = ВТОбщаяСуммаНалога.ФизическоеЛицо
	|			И ВТДанныеИсчисленногоНДФЛ.Организация = ВТОбщаяСуммаНалога.Организация
	|			И ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода = ВТОбщаяСуммаНалога.МесяцНалоговогоПериода
	|			И ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане = ВТОбщаяСуммаНалога.РегистрацияВНалоговомОргане
	|			И ВТДанныеИсчисленногоНДФЛ.Подразделение = ВТОбщаяСуммаНалога.Подразделение
	|			И ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = ВТОбщаяСуммаНалога.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ВТОбщаяСуммаНалога.СтавкаНалогообложенияРезидента
	|			И ВТДанныеИсчисленногоНДФЛ.Период = ВТОбщаяСуммаНалога.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор КАК Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация КАК Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение КАК Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Период КАК Период,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы)
	|					КОГДА ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|				КОНЕЦ
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КатегорияДохода
	|	КОНЕЦ КАК КатегорияДохода,
	|	СУММА(ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода - ВЫБОР
	|				КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|					ТОГДА 0
	|				ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|			КОНЕЦ, 0)) КАК СуммаДохода
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеИсчисленногоНДФЛ КАК ВТДанныеИсчисленногоНДФЛ
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо
	|			И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента
	|			И СведенияОДоходахНДФЛ.Организация = ВТДанныеИсчисленногоНДФЛ.Организация
	|			И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане
	|			И СведенияОДоходахНДФЛ.ДатаПолученияДохода = ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода
	|			И СведенияОДоходахНДФЛ.Подразделение = ВТДанныеИсчисленногоНДФЛ.Подразделение
	|			И СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода = ВТДанныеИсчисленногоНДФЛ.РасчетМежрасчетногоПериода
	|			И СведенияОДоходахНДФЛ.Период <= ВТДанныеИсчисленногоНДФЛ.Период
	|			И НЕ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.Период,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы)
	|					КОГДА ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|				КОНЕЦ
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КатегорияДохода
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.КатегорияДохода,
	|	СУММА(ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода - ВЫБОР
	|				КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|					ТОГДА 0
	|				ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|			КОНЕЦ, 0))
	|ИЗ
	|	ВТДанныеИсчисленногоНДФЛ КАК ВТДанныеИсчисленногоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|			ПО СведенияОДоходахНДФЛ.Регистратор = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|				И СведенияОДоходахНДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|				И СведенияОДоходахНДФЛ.КатегорияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|				И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента
	|				И СведенияОДоходахНДФЛ.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
	|				И СведенияОДоходахНДФЛ.ДатаПолученияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|				И СведенияОДоходахНДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|				И СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|				И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане
	|				И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|				И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|				И НЕ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|		ПО ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И ВТДанныеИсчисленногоНДФЛ.Организация = СведенияОДоходахНДФЛ.Организация
	|			И ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
	|			И ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|			И ВТДанныеИсчисленногоНДФЛ.Подразделение = СведенияОДоходахНДФЛ.Подразделение
	|			И ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента
	|			И ВТДанныеИсчисленногоНДФЛ.Период >= СведенияОДоходахНДФЛ.Период
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Период,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация,
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.КатегорияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоходы.Регистратор КАК Регистратор,
	|	ВТДоходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДоходы.Организация КАК Организация,
	|	ВТДоходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДоходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДоходы.Подразделение КАК Подразделение,
	|	ВТДоходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДоходы.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДоходы.Период КАК Период,
	|	СУММА(ВТДоходы.СуммаДохода) КАК СуммаДохода
	|ПОМЕСТИТЬ ВТСуммаДоходов
	|ИЗ
	|	ВТДоходы КАК ВТДоходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДоходы.Регистратор,
	|	ВТДоходы.МесяцНалоговогоПериода,
	|	ВТДоходы.РегистрацияВНалоговомОргане,
	|	ВТДоходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДоходы.Период,
	|	ВТДоходы.СтавкаНалогообложенияРезидента,
	|	ВТДоходы.ФизическоеЛицо,
	|	ВТДоходы.Организация,
	|	ВТДоходы.Подразделение
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТДоходы.СуммаДохода) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоходы.Регистратор КАК Регистратор,
	|	ВТДоходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДоходы.Организация КАК Организация,
	|	ВТДоходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДоходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДоходы.Подразделение КАК Подразделение,
	|	ВТДоходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДоходы.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДоходы.Период КАК Период,
	|	ВТДоходы.КатегорияДохода КАК КатегорияДохода,
	|	ВТДоходы.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА ВТСуммаДоходов.СуммаДохода ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВТДоходы.СуммаДохода / ВТСуммаДоходов.СуммаДохода
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВТКоэффициентыДоходов
	|ИЗ
	|	ВТДоходы КАК ВТДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммаДоходов КАК ВТСуммаДоходов
	|		ПО ВТДоходы.Регистратор = ВТСуммаДоходов.Регистратор
	|			И ВТДоходы.ФизическоеЛицо = ВТСуммаДоходов.ФизическоеЛицо
	|			И ВТДоходы.Организация = ВТСуммаДоходов.Организация
	|			И ВТДоходы.МесяцНалоговогоПериода = ВТСуммаДоходов.МесяцНалоговогоПериода
	|			И ВТДоходы.РегистрацияВНалоговомОргане = ВТСуммаДоходов.РегистрацияВНалоговомОргане
	|			И ВТДоходы.Подразделение = ВТСуммаДоходов.Подразделение
	|			И ВТДоходы.ВключатьВДекларациюПоНалогуНаПрибыль = ВТСуммаДоходов.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВТДоходы.СтавкаНалогообложенияРезидента = ВТСуммаДоходов.СтавкаНалогообложенияРезидента
	|			И ВТДоходы.Период = ВТСуммаДоходов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТКоэффициентыИсчисленного.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыКИсправлению
	|ИЗ
	|	ВТКоэффициентыИсчисленного КАК ВТКоэффициентыИсчисленного
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыДоходов КАК ВТКоэффициентыДоходов
	|		ПО ВТКоэффициентыИсчисленного.Регистратор = ВТКоэффициентыДоходов.Регистратор
	|			И ВТКоэффициентыИсчисленного.ФизическоеЛицо = ВТКоэффициентыДоходов.ФизическоеЛицо
	|			И ВТКоэффициентыИсчисленного.Организация = ВТКоэффициентыДоходов.Организация
	|			И ВТКоэффициентыИсчисленного.МесяцНалоговогоПериода = ВТКоэффициентыДоходов.МесяцНалоговогоПериода
	|			И ВТКоэффициентыИсчисленного.РегистрацияВНалоговомОргане = ВТКоэффициентыДоходов.РегистрацияВНалоговомОргане
	|			И ВТКоэффициентыИсчисленного.Подразделение = ВТКоэффициентыДоходов.Подразделение
	|			И ВТКоэффициентыИсчисленного.ВключатьВДекларациюПоНалогуНаПрибыль = ВТКоэффициентыДоходов.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВТКоэффициентыИсчисленного.СтавкаНалогообложенияРезидента = ВТКоэффициентыДоходов.СтавкаНалогообложенияРезидента
	|			И ВТКоэффициентыИсчисленного.КатегорияДохода = ВТКоэффициентыДоходов.КатегорияДохода
	|			И ВТКоэффициентыИсчисленного.Период = ВТКоэффициентыДоходов.Период
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВТКоэффициентыДоходов.Коэффициент ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			КОГДА ВТКоэффициентыИсчисленного.Коэффициент - ВТКоэффициентыДоходов.Коэффициент < 0
	|				ТОГДА ВТКоэффициентыИсчисленного.Коэффициент - ВТКоэффициентыДоходов.Коэффициент < -0.1
	|			ИНАЧЕ ВТКоэффициентыИсчисленного.Коэффициент - ВТКоэффициентыДоходов.Коэффициент > 0.1
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КоэффициентыДоходов.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
	|	КоэффициентыДоходов.СуммаДохода КАК СуммаДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыДоходов КАК КоэффициентыДоходов
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = КоэффициентыДоходов.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = КоэффициентыДоходов.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = КоэффициентыДоходов.Организация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = КоэффициентыДоходов.МесяцНалоговогоПериода
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = КоэффициентыДоходов.СтавкаНалогообложенияРезидента
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = КоэффициентыДоходов.РегистрацияВНалоговомОргане
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = КоэффициентыДоходов.Подразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = КоэффициентыДоходов.ВключатьВДекларациюПоНалогуНаПрибыль
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				ВТРегистраторыКИсправлению.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТРегистраторыКИсправлению КАК ВТРегистраторыКИсправлению)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	НаборЗаписей = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	ВременныйНабор = НаборЗаписей.ВыгрузитьКолонки();
	ВременныйНабор.Колонки.Добавить("СуммаДохода", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	
	КолонкиГруппировок =
	"Период,
	|Регистратор,
	|ВидДвижения,
	|Активность,
	|ГоловнаяОрганизация, 
	|ФизическоеЛицо, 
	|СтавкаНалогообложенияРезидента, 
	|МесяцНалоговогоПериода, 
	|КатегорияДохода, 
	|РегистрацияВНалоговомОргане, 
	|Организация, 
	|КодДохода,
	|Подразделение,
	|ДокументОснование,
	|ВариантУдержания,
	|ВключатьВДекларациюПоНалогуНаПрибыль,
	|РасчетМежрасчетногоПериода,
	|СуммаВыплаченногоДохода,
	|СрокПеречисления,
	|КрайнийСрокУплаты,
	|УчитыватьВыплаченныйДоходВ6НДФЛ,
	|УстаревшаяДатаПолученияДохода,
	|Сторно";
	
	КатегорииСФиксированнойДатойДохода = Перечисления.КатегорииДоходовНДФЛ.СФиксированнойДатойПолученияДохода();
	ДокументыСНДФЛ = Новый Соответствие;
	ОбновитьБухучетНДФЛ = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	РегистраторыБухучета = Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СтандартныеРеквизиты.Регистратор.Тип;

	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		МетаданныеДокумента = Выборка.Регистратор.Метаданные();
		Регистратор = Выборка.Регистратор;
		ИмяДокумента = МетаданныеДокумента.Имя;
		ОбновитьБухучетНДФЛДокумента = ОбновитьБухучетНДФЛ И РегистраторыБухучета.СодержитТип(ТипЗнч(Выборка.Регистратор));
		
		Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Неопределено Тогда
			ОбновляемДокумент = Ложь;
			Если МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛ") <> Неопределено Тогда 
				ОбновляемДокумент = МетаданныеДокумента.ТабличныеЧасти.НДФЛ.Реквизиты.Найти("Налог") <> Неопределено;
			КонецЕсли;
			ДокументыСНДФЛ.Вставить(ИмяДокумента, ОбновляемДокумент);
		КонецЕсли;
			
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Очистить();
		
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			ВременныйНабор.Очистить();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ВременныйНабор.Добавить(), Выборка);
			КонецЦикла;
			
			Если ВременныйНабор.Количество() = 1 Тогда
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВременныйНабор[0]);
				Если Не ЗначениеЗаполнено(Запись.КатегорияДохода) Тогда
					Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
				КонецЕсли;
				
				Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
					Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
					Запись.ДатаПолученияДоходаФиксирована = Истина;
				КонецЕсли;
				
				Продолжить;
			КонецЕсли;
			
			Коэффициенты = ВременныйНабор.ВыгрузитьКолонку("СуммаДохода");
			РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНабор[0].Сумма, Коэффициенты, 0);
			
			Если РезультатыРаспределения = Неопределено Тогда
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВременныйНабор[0]);
				Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
				Запись.ДатаПолученияДоходаФиксирована = Истина;
				
			Иначе
				
				Индекс = 0;
				Для Каждого Строка Из ВременныйНабор Цикл
					
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Строка);
					Запись.Сумма = РезультатыРаспределения[Индекс];
					Если Не ЗначениеЗаполнено(Запись.КатегорияДохода) Тогда
						Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					КонецЕсли;
					
					Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
						Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
						Запись.ДатаПолученияДоходаФиксирована = Истина;
					КонецЕсли;
					
					Индекс = Индекс + 1;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаписиНабора = НаборЗаписей.Выгрузить();
		ЗаписиНабора.Свернуть(КолонкиГруппировок, "Сумма");
		НаборЗаписей.Загрузить(ЗаписиНабора);
		
		Для Каждого Запись Из НаборЗаписей Цикл
			Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
				Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
				Запись.ДатаПолученияДоходаФиксирована = Истина;
			КонецЕсли;
		КонецЦикла;
		
		УчетФактическиПолученныхДоходов.УточнитьКрайнийСрокУплаты(НаборЗаписей);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
		Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Истина Тогда
			
			ДокументОбъект = Регистратор.ПолучитьОбъект();
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("Ссылка", Выборка.Регистратор);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
			|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
			|	НачислениеЗарплатыНДФЛ.КатегорияДохода КАК КатегорияДохода,
			|	СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
			|	СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
			|	НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ НДФЛДокумента
			|ИЗ
			|	Документ.НачислениеЗарплаты.НДФЛ КАК НачислениеЗарплатыНДФЛ
			|ГДЕ
			|	НачислениеЗарплатыНДФЛ.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
			|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
			|	НачислениеЗарплатыНДФЛ.Подразделение,
			|	НачислениеЗарплатыНДФЛ.Ссылка,
			|	НачислениеЗарплатыНДФЛ.КатегорияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НДФЛ.НомерСтроки КАК НомерСтрокиДокумента,
			|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	НДФЛ.Подразделение КАК Подразделение,
			|	НДФЛ.Налог КАК Налог,
			|	НДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежей,
			|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
			|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма, 0) КАК Сумма
			|ИЗ
			|	(ВЫБРАТЬ
			|		МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
			|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|		НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
			|		СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
			|		СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
			|		НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
			|	ИЗ
			|		НДФЛДокумента КАК НачислениеЗарплатыНДФЛ
			|	
			|	СГРУППИРОВАТЬ ПО
			|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
			|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
			|		НачислениеЗарплатыНДФЛ.Подразделение,
			|		НачислениеЗарплатыНДФЛ.Ссылка) КАК НДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
			|		ПО НДФЛ.Ссылка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
			|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			|			И НДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
			|			И НДФЛ.МесяцНалоговогоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
			|			И НДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
			|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
			|			И НДФЛ.Ссылка.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	0,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
			|	0,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ НДФЛДокумента КАК НДФЛДокумента
			|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = НДФЛДокумента.Ссылка
			|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = НДФЛДокумента.ФизическоеЛицо
			|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = НДФЛДокумента.МесяцНалоговогоПериода
			|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = НДФЛДокумента.Подразделение
			|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = НДФЛДокумента.Ссылка.Организация
			|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
			|ГДЕ
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = &Ссылка
			|	И НДФЛДокумента.Ссылка ЕСТЬ NULL
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтрокиДокумента";
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.НачислениеЗарплаты.НДФЛ", "Документ." + ИмяДокумента + ".НДФЛ");
			ВыборкаИсчисленного = Запрос.Выполнить().Выбрать();
			
			
			ТаблицаНДФЛ = ДокументОбъект.НДФЛ.ВыгрузитьКолонки();
			ТаблицаНДФЛ.Колонки.Добавить("НомерСтрокиДокумента", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7)));
			ВременныйНаборИсчисленного = ТаблицаНДФЛ.Скопировать();
			ВременныйНаборИсчисленного.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
			
			Пока ВыборкаИсчисленного.СледующийПоЗначениюПоля("НомерСтрокиДокумента") Цикл
				ВременныйНаборИсчисленного.Очистить();
				
				НомерСтрокиДокумента = ВыборкаИсчисленного.НомерСтрокиДокумента;
				
				Если НомерСтрокиДокумента = 0 Тогда
					Пока ВыборкаИсчисленного.Следующий() Цикл
						НоваяСтрока = ТаблицаНДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИсчисленного);
						НоваяСтрока.Налог = ВыборкаИсчисленного.Сумма;
					КонецЦикла;
					Продолжить;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(ВыборкаИсчисленного.КатегорияДохода) Тогда
					НоваяСтрока = ТаблицаНДФЛ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИсчисленного);
					НоваяСтрока.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					НоваяСтрока.Налог = 0;
					Продолжить;
				КонецЕсли;
				
				СтрокаДокумента = ТаблицаНДФЛ.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВыборкаИсчисленного);
				
				Пока ВыборкаИсчисленного.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ВременныйНаборИсчисленного.Добавить(), ВыборкаИсчисленного);
				КонецЦикла;
				
				Если ВременныйНаборИсчисленного.Количество() = 1 Тогда
					СтрокаДокумента.Налог = ВыборкаИсчисленного.Сумма;
					Продолжить;
				КонецЕсли;
				
				Коэффициенты = ВременныйНаборИсчисленного.ВыгрузитьКолонку("Сумма");
				РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНаборИсчисленного[0].Налог, Коэффициенты, 0);
				Если СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0 Тогда
					РезультатыРаспределенияАванса = Неопределено;
				Иначе
					РезультатыРаспределенияАванса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДокумента.ЗачтеноАвансовыхПлатежей, Коэффициенты, 0);
				КонецЕсли;
				
				Если РезультатыРаспределения = Неопределено Тогда
					
					Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
						СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					КонецЕсли;
					СтрокаДокумента.Налог = 0;
					
				Иначе
					
					Индекс = 0;
					Для Каждого Строка Из ВременныйНаборИсчисленного Цикл
						
						Если Индекс = 0 Тогда
							
							СтрокаДокумента.КатегорияДохода = Строка.КатегорияДохода;
							СтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
							Если РезультатыРаспределенияАванса <> Неопределено Тогда
								СтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
							КонецЕсли;
							
						Иначе
							
							НоваяСтрокаДокумента = ТаблицаНДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, Строка, , "ЗачтеноАвансовыхПлатежей, ПримененныйВычетЛичный, ПримененныйВычетЛичныйКодВычета, ПримененныйВычетЛичныйКЗачетуВозврату, ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета");
							НоваяСтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
							Если РезультатыРаспределенияАванса <> Неопределено Тогда
								НоваяСтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
							КонецЕсли;
							
						КонецЕсли;
						
						Индекс = Индекс + 1;
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			МаксимальныйИдентификатор = УчетНДФЛФормы.МаксимальныйИдентификаторСтрокиНДФЛ(ДокументОбъект.НДФЛ) + 1;
			ОбновленныеСтрокиНДФЛ = Новый Соответствие;
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
			СтрокиНДФЛКУдалению = Новый Массив;
			
			ОбновляемыеНаборыСтрок = ТаблицаНДФЛ.Скопировать();
			ОбновляемыеНаборыСтрок.Свернуть("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
			Для Каждого Строка Из ОбновляемыеНаборыСтрок Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
				СтрокиНДФЛ = ТаблицаНДФЛ.НайтиСтроки(СтруктураПоиска);
				СтрокиДокумента = ДокументОбъект.НДФЛ.НайтиСтроки(СтруктураПоиска);
				КоличествоСтрокДокумента = СтрокиДокумента.Количество();
				КоличествоСтрокНДФЛ = СтрокиНДФЛ.Количество();
				
				Индекс = 1;
				ИдентификаторСтрокиНДФЛ = 0;
				Для Каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
					Если Индекс <= КоличествоСтрокДокумента Тогда
						СтрокаДокумента = СтрокиДокумента[Индекс -1];
						Если Индекс = 1 Тогда
							ИдентификаторСтрокиНДФЛ = СтрокаДокумента.ИдентификаторСтрокиНДФЛ;
							ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
						КонецЕсли;
						
						ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(СтрокаДокумента.ИдентификаторСтрокиНДФЛ);
						
						СтрокаДокумента.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода;
						СтрокаДокумента.Налог = СтрокаНДФЛ.Налог;
						СтрокаДокумента.ЗачтеноАвансовыхПлатежей = СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей;
					Иначе
						СтрокаДокумента = ДокументОбъект.НДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаНДФЛ);
						СтрокаДокумента.ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
						
						Если ИдентификаторСтрокиНДФЛ = 0 Тогда
							ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
							ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
						КонецЕсли;
						ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(МаксимальныйИдентификатор);
						
						МаксимальныйИдентификатор = МаксимальныйИдентификатор + 1;
					КонецЕсли;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
				
				КоличествоЛишнихСтрок = КоличествоСтрокДокумента - КоличествоСтрокНДФЛ;
				Если КоличествоЛишнихСтрок > 0 Тогда
					Для Индекс = 1 По КоличествоЛишнихСтрок Цикл
						СтрокаДокумента = СтрокиДокумента[КоличествоСтрокДокумента - Индекс];
						СтрокаДокумента.Налог = 0;
						СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0;
						
						СтрокиНДФЛКУдалению.Добавить(СтрокаДокумента);
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого СтрокаКУдалению Из СтрокиНДФЛКУдалению Цикл
				Если ОбновитьБухучетНДФЛДокумента Тогда
					МетаданныеДокумента = ДокументОбъект.Метаданные();
					ИдентификаторСтрокиНДФЛ = СтрокаКУдалению.ИдентификаторСтрокиНДФЛ;
					Если МетаданныеДокумента.ТабличныеЧасти.Найти("РаспределениеРезультатовУдержаний") <> Неопределено Тогда
						СтрокиРаспределения = ДокументОбъект.РаспределениеРезультатовУдержаний.НайтиСтроки(Новый Структура("ИдентификаторСтроки,ВидУдержания", ИдентификаторСтрокиНДФЛ, Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ));
						Если СтрокиРаспределения.Количество() Тогда
							ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
							ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(ИдентификаторСтрокиНДФЛ);
							Продолжить;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДокументОбъект.НДФЛ.Удалить(СтрокаКУдалению);
				
			КонецЦикла;

			Если ОбновитьБухучетНДФЛДокумента Тогда
				НовыйНаборЗаписейБухучета = Неопределено;
				ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьРаспределениеПриОбновленииКатегорииДоходаВИсчисленномНДФЛ(ДокументОбъект, ОбновленныеСтрокиНДФЛ, НовыйНаборЗаписейБухучета);
				Если НовыйНаборЗаписейБухучета <> Неопределено Тогда
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйНаборЗаписейБухучета);
				КонецЕсли;
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбнулитьЛишниеСтрокиНДФЛ(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТВсеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) КАК ТипДокумента,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) КАК КоличествоРегистраторов
	|ИЗ
	|	ВТВсеРегистраторы КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор)";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ТекстШаблона =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Налоги.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛ.Ссылка КАК Ссылка,
	|		НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		НДФЛ.Подразделение КАК Подразделение,
	|		НДФЛ.КатегорияДохода КАК КатегорияДохода,
	|		НДФЛ.Организация КАК Организация,
	|		СУММА(НДФЛ.Налог) КАК Налог
	|	ИЗ
	|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка,
	|			НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|			НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|			НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
	|			НачислениеЗарплатыНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|			НачислениеЗарплатыНДФЛ.Ссылка.Организация КАК Организация,
	|			СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог
	|		ИЗ
	|			Документ.НачислениеЗарплаты.НДФЛ КАК НачислениеЗарплатыНДФЛ
	|		ГДЕ
	|			НачислениеЗарплатыНДФЛ.Ссылка В
	|					(ВЫБРАТЬ
	|						ВсеРегистраторы.Регистратор
	|					ИЗ
	|						ВТВсеРегистраторы КАК ВсеРегистраторы
	|					ГДЕ
	|						ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НачислениеЗарплатыНДФЛ.Ссылка,
	|			НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
	|			НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
	|			НачислениеЗарплатыНДФЛ.Подразделение,
	|			НачислениеЗарплатыНДФЛ.КатегорияДохода,
	|			НачислениеЗарплатыНДФЛ.Ссылка.Организация
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|			СУММА(-РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма)
	|		ИЗ
	|			РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ГДЕ
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|					(ВЫБРАТЬ
	|						ВсеРегистраторы.Регистратор
	|					ИЗ
	|						ВТВсеРегистраторы КАК ВсеРегистраторы
	|					ГДЕ
	|						ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода) КАК НДФЛ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛ.ФизическоеЛицо,
	|		НДФЛ.МесяцНалоговогоПериода,
	|		НДФЛ.Ссылка,
	|		НДФЛ.Подразделение,
	|		НДФЛ.Организация,
	|		НДФЛ.КатегорияДохода
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(НДФЛ.Налог) <> 0) КАК Налоги";
	ПервыйЗапрос = Истина;
	Запрос.Текст = "";
	Пока Выборка.Следующий() Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		Если МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛ") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если МетаданныеДокумента.ТабличныеЧасти.НДФЛ.Реквизиты.Найти("Налог") = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстШаблона, "Документ.НачислениеЗарплаты", МетаданныеДокумента.ПолноеИмя());
		
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТРегистраторы", "");
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		ПервыйЗапрос = Ложь;
		
	КонецЦикла;
	Если ПустаяСтрока(Запрос.Текст) Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;

	Запрос.Выполнить();
	Если Не ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТРегистраторы") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) КАК ТипДокумента,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) КАК КоличествоРегистраторов
	|ИЗ
	|	ВТРегистраторы КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекстШаблона = 
	"ВЫБРАТЬ
	|	НачислениеЗарплатыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
	|	НачислениеЗарплатыНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	НачислениеЗарплатыНДФЛ.Налог КАК Налог,
	|	НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежей,
	|	НачислениеЗарплатыНДФЛ.Ссылка.Организация КАК Организация,
	|	НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НДФЛДокумента
	|ИЗ
	|	Документ.НачислениеЗарплаты.НДФЛ КАК НачислениеЗарплатыНДФЛ
	|ГДЕ
	|	НачислениеЗарплатыНДФЛ.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1000
	|				ВсеРегистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК ВсеРегистраторы
	|			ГДЕ
	|				ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)";
	ПервыйЗапрос = Истина;
	Запрос.Текст = "";
	МаксимальноеКоличествоДокументов = 1000;
	Пока Выборка.Следующий() Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		
		ТекстЗапроса = СтрЗаменить(ТекстШаблона, "Документ.НачислениеЗарплаты", МетаданныеДокумента.ПолноеИмя());
		
		Если ПараметрыОбновления = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " ПЕРВЫЕ 1000", "");
		Иначе
			МаксимальноеКоличествоДокументов = МаксимальноеКоличествоДокументов - Выборка.КоличествоРегистраторов;
			Если МаксимальноеКоличествоДокументов > 0 Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ ПЕРВЫЕ 1000", "ВЫБРАТЬ ПЕРВЫЕ " + Формат(Выборка.КоличествоРегистраторов, "ЧГ="));
			КонецЕсли;
		КонецЕсли;

		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ НДФЛДокумента", "");
			
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		ПервыйЗапрос = Ложь;
		
	КонецЦикла;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(НДФЛ.Ссылка) КАК ТипДокумента,
	|	НДФЛ.Ссылка КАК Ссылка,
	|	НДФЛ.НомерСтроки КАК НомерСтрокиДокумента,
	|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛ.Подразделение КАК Подразделение,
	|	НДФЛ.Налог КАК Налог,
	|	НДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежей,
	|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
	|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма, 0) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
	|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
	|		СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
	|		СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
	|		НачислениеЗарплатыНДФЛ.Организация КАК Организация,
	|		НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
	|	ИЗ
	|		НДФЛДокумента КАК НачислениеЗарплатыНДФЛ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
	|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
	|		НачислениеЗарплатыНДФЛ.Подразделение,
	|		НачислениеЗарплатыНДФЛ.Организация,
	|		НачислениеЗарплатыНДФЛ.Ссылка) КАК НДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО НДФЛ.Ссылка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И НДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И НДФЛ.МесяцНалоговогоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|			И НДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|			И НДФЛ.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор),
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	0,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	0,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ НДФЛДокумента КАК НДФЛДокумента
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = НДФЛДокумента.Ссылка
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = НДФЛДокумента.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = НДФЛДокумента.МесяцНалоговогоПериода
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = НДФЛДокумента.Подразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = НДФЛДокумента.Организация
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Регистраторы.Ссылка
	|			ИЗ
	|				НДФЛДокумента КАК Регистраторы)
	|	И НДФЛДокумента.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипДокумента,
	|	Ссылка,
	|	НомерСтрокиДокумента";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбновитьБухучетНДФЛ = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	РегистраторыБухучета = Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СтандартныеРеквизиты.Регистратор.Тип;
	
	Пока Выборка.СледующийПоЗначениюПоля("ТипДокумента") Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		ИмяПространстваБлокировки = МетаданныеДокумента.ПолноеИмя();
		ОбновитьБухучетНДФЛДокумента = ОбновитьБухучетНДФЛ И РегистраторыБухучета.СодержитТип(Выборка.ТипДокумента);
		
		Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
			
			НачатьТранзакцию();
			
			Попытка
				
				Если ПараметрыОбновления <> НеОпределено Тогда
					
					Блокировка = Новый БлокировкаДанных;
					ЭлементБлокировки = Блокировка.Добавить(ИмяПространстваБлокировки);
					ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
					Если ОбновитьБухучетНДФЛДокумента Тогда
						ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам.НаборЗаписей");
						ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
					КонецЕсли;
					Блокировка.Заблокировать();
					
				КонецЕсли;
				
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				
				ТаблицаНДФЛ = ДокументОбъект.НДФЛ.ВыгрузитьКолонки();
				ТаблицаНДФЛ.Колонки.Добавить("НомерСтрокиДокумента", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7)));
				ВременныйНаборИсчисленного = ТаблицаНДФЛ.Скопировать();
				ВременныйНаборИсчисленного.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
				
				Пока Выборка.СледующийПоЗначениюПоля("НомерСтрокиДокумента") Цикл
					ВременныйНаборИсчисленного.Очистить();
					
					НомерСтрокиДокумента = Выборка.НомерСтрокиДокумента;
					
					Если НомерСтрокиДокумента = 0 Тогда
						Пока Выборка.Следующий() Цикл
							НоваяСтрока = ТаблицаНДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
							НоваяСтрока.Налог = Выборка.Сумма;
						КонецЦикла;
						Продолжить;
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(Выборка.КатегорияДохода) Тогда
						НоваяСтрока = ТаблицаНДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
						НоваяСтрока.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						НоваяСтрока.Налог = 0;
						Продолжить;
					КонецЕсли;
					
					СтрокаДокумента = ТаблицаНДФЛ.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДокумента, Выборка);
					
					Пока Выборка.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ВременныйНаборИсчисленного.Добавить(), Выборка);
					КонецЦикла;
					
					Если ВременныйНаборИсчисленного.Количество() = 1 Тогда
						СтрокаДокумента.Налог = Выборка.Сумма;
						Продолжить;
					КонецЕсли;
					
					Коэффициенты = ВременныйНаборИсчисленного.ВыгрузитьКолонку("Сумма");
					РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНаборИсчисленного[0].Налог, Коэффициенты, 0);
					Если СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0 Тогда
						РезультатыРаспределенияАванса = Неопределено;
					Иначе
						РезультатыРаспределенияАванса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДокумента.ЗачтеноАвансовыхПлатежей, Коэффициенты, 0);
					КонецЕсли;
					
					Если РезультатыРаспределения = Неопределено Тогда
						
						Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
							СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						КонецЕсли;
						СтрокаДокумента.Налог = 0;
						
					Иначе
						
						Индекс = 0;
						Для Каждого Строка Из ВременныйНаборИсчисленного Цикл
							
							Если Индекс = 0 Тогда
								
								СтрокаДокумента.КатегорияДохода = Строка.КатегорияДохода;
								СтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
								Если РезультатыРаспределенияАванса <> Неопределено Тогда
									СтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
								КонецЕсли;
								
							Иначе
								
								НоваяСтрокаДокумента = ТаблицаНДФЛ.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, Строка, , "ЗачтеноАвансовыхПлатежей, ПримененныйВычетЛичный, ПримененныйВычетЛичныйКодВычета, ПримененныйВычетЛичныйКЗачетуВозврату, ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета");
								НоваяСтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
								Если РезультатыРаспределенияАванса <> Неопределено Тогда
									НоваяСтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
								КонецЕсли;
								
							КонецЕсли;
							
							Индекс = Индекс + 1;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
				
				МаксимальныйИдентификатор = УчетНДФЛФормы.МаксимальныйИдентификаторСтрокиНДФЛ(ДокументОбъект.НДФЛ) + 1;
				ОбновленныеСтрокиНДФЛ = Новый Соответствие;
				СтруктураПоиска = Новый Структура("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
				СтрокиНДФЛКУдалению = Новый Массив;
				
				ОбновляемыеНаборыСтрок = ТаблицаНДФЛ.Скопировать();
				ОбновляемыеНаборыСтрок.Свернуть("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
				Для Каждого Строка Из ОбновляемыеНаборыСтрок Цикл
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
					СтрокиНДФЛ = ТаблицаНДФЛ.НайтиСтроки(СтруктураПоиска);
					СтрокиДокумента = ДокументОбъект.НДФЛ.НайтиСтроки(СтруктураПоиска);
					КоличествоСтрокДокумента = СтрокиДокумента.Количество();
					КоличествоСтрокНДФЛ = СтрокиНДФЛ.Количество();
					
					Индекс = 1;
					ИдентификаторСтрокиНДФЛ = 0;
					Для Каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
						Если Индекс <= КоличествоСтрокДокумента Тогда
							СтрокаДокумента = СтрокиДокумента[Индекс -1];
							Если Индекс = 1 Тогда
								ИдентификаторСтрокиНДФЛ = СтрокаДокумента.ИдентификаторСтрокиНДФЛ;
								ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
							КонецЕсли;
							
							ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(СтрокаДокумента.ИдентификаторСтрокиНДФЛ);
							
							СтрокаДокумента.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода;
							СтрокаДокумента.Налог = СтрокаНДФЛ.Налог;
							СтрокаДокумента.ЗачтеноАвансовыхПлатежей = СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей;
						Иначе
							СтрокаДокумента = ДокументОбъект.НДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаНДФЛ);
							СтрокаДокумента.ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
							
							Если ИдентификаторСтрокиНДФЛ = 0 Тогда
								ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
								ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
							КонецЕсли;
							ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(МаксимальныйИдентификатор);
							
							МаксимальныйИдентификатор = МаксимальныйИдентификатор + 1;
						КонецЕсли;
						
						Индекс = Индекс + 1;
						
					КонецЦикла;
					
					КоличествоЛишнихСтрок = КоличествоСтрокДокумента - КоличествоСтрокНДФЛ;
					Если КоличествоЛишнихСтрок > 0 Тогда
						Для Индекс = 1 По КоличествоЛишнихСтрок Цикл
							СтрокаДокумента = СтрокиДокумента[КоличествоСтрокДокумента - Индекс];
							СтрокаДокумента.Налог = 0;
							СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0;
							
							СтрокиНДФЛКУдалению.Добавить(СтрокаДокумента);
						КонецЦикла;
					КонецЕсли;
					
				КонецЦикла;
				
				Для Каждого СтрокаКУдалению Из СтрокиНДФЛКУдалению Цикл
					Если ОбновитьБухучетНДФЛДокумента Тогда
						МетаданныеДокумента = ДокументОбъект.Метаданные();
						ИдентификаторСтрокиНДФЛ = СтрокаКУдалению.ИдентификаторСтрокиНДФЛ;
						Если МетаданныеДокумента.ТабличныеЧасти.Найти("РаспределениеРезультатовУдержаний") <> Неопределено Тогда
							СтрокиРаспределения = ДокументОбъект.РаспределениеРезультатовУдержаний.НайтиСтроки(Новый Структура("ИдентификаторСтроки,ВидУдержания", ИдентификаторСтрокиНДФЛ, Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ));
							Если СтрокиРаспределения.Количество() Тогда
								ОбновленныеСтрокиНДФЛ.Вставить(ИдентификаторСтрокиНДФЛ, Новый Массив);
								ОбновленныеСтрокиНДФЛ[ИдентификаторСтрокиНДФЛ].Добавить(ИдентификаторСтрокиНДФЛ);
								Продолжить;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ДокументОбъект.НДФЛ.Удалить(СтрокаКУдалению);
					
				КонецЦикла;
				
				Если ОбновитьБухучетНДФЛДокумента Тогда
					НовыйНаборЗаписейБухучета = Неопределено;
					ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьРаспределениеПриОбновленииКатегорииДоходаВИсчисленномНДФЛ(ДокументОбъект, ОбновленныеСтрокиНДФЛ, НовыйНаборЗаписейБухучета);
					Если НовыйНаборЗаписейБухучета <> Неопределено Тогда
						ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйНаборЗаписейБухучета);
					КонецЕсли;
				КонецЕсли;
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось исправить НДФЛ в документе: '"), УровеньЖурналаРегистрации.Ошибка,, Выборка.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				Продолжить;
			КонецПопытки;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВТабличнойЧастиНДФЛПрочихДокументах(ПараметрыОбновления = Неопределено) Экспорт
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыплатаБывшимСотрудникамНДФЛ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.ВыплатаБывшимСотрудникам.НДФЛ КАК ВыплатаБывшимСотрудникамНДФЛ
	|ГДЕ
	|	ВыплатаБывшимСотрудникамНДФЛ.Ссылка.ПланируемаяДатаВыплаты >= ДАТАВРЕМЯ(2017,1,1)
	|	И ВыплатаБывшимСотрудникамНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РегистрацияПрочихДоходовНДФЛ.Ссылка
	|ИЗ
	|	Документ.РегистрацияПрочихДоходов.НДФЛ КАК РегистрацияПрочихДоходовНДФЛ
	|ГДЕ
	|	РегистрацияПрочихДоходовНДФЛ.Ссылка.ПланируемаяДатаВыплаты >= ДАТАВРЕМЯ(2017,1,1)
	|	И РегистрацияПрочихДоходовНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ВТДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	ВТДокументы КАК ВТДокументы";
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 1000", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ." + Выборка.Ссылка.Метаданные().Имя, "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаНДФЛ Из ДокументОбъект.НДФЛ Цикл
			СтрокаНДФЛ.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВИсчисленномНДФЛПрочихДокументов(ПараметрыОбновления = Неопределено) Экспорт
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы)
	|	И ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) В (ТИП(Документ.ВыплатаБывшимСотрудникам), ТИП(Документ.РегистрацияПрочихДоходов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТРегистраторы.Регистратор КАК Регистратор
	|ИЗ
	|	ВТРегистраторы КАК ВТРегистраторы";
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 1000", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы) КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				ВТРегистраторы.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК ВТРегистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	УчетНДФЛ.ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", ТекстЗапроса, , Запрос.МенеджерВременныхТаблиц, ПараметрыОбновления);
	
КонецПроцедуры

Процедура ЗаполнитьКатегорииДоходаВБухучетНачисленияУдержанияПереносаЗатрат(ПараметрыОбновления = Неопределено) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Бухучет.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК Бухучет
	|ГДЕ
	|	Бухучет.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	|	И Бухучет.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|	И Бухучет.Регистратор ССЫЛКА Документ.ПереносЗатратНаПерсоналМеждуСтатьями
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетПеренос.Регистратор КАК Регистратор,
	|	БухучетПеренос.НомерСтроки КАК НомерСтроки,
	|	*
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетПеренос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК ВТРегистраторы
	|		ПО БухучетПеренос.Регистратор = ВТРегистраторы.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетПеренос.Регистратор КАК Регистратор,
	|	БухучетПеренос.НомерСтроки КАК НомерСтроки,
	|	БухучетИсходные.КатегорияДохода КАК КатегорияДохода,
	|	БухучетИсходные.Сумма КАК Сумма
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетПеренос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК ВТРегистраторы
	|		ПО БухучетПеренос.Регистратор = ВТРегистраторы.Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетИсходные
	|		ПО БухучетПеренос.ПервичныйРегистратор = БухучетИсходные.Регистратор
	|			И БухучетПеренос.Сотрудник = БухучетИсходные.Сотрудник
	|			И БухучетПеренос.НачислениеУдержание = БухучетИсходные.НачислениеУдержание
	|			И БухучетПеренос.Подразделение = БухучетИсходные.Подразделение
	|			И БухучетПеренос.ПериодДействия = БухучетИсходные.ПериодДействия
	|			И БухучетПеренос.ТерриторияВыполненияРаботВОрганизации = БухучетИсходные.ТерриторияВыполненияРаботВОрганизации
	|			И БухучетПеренос.ДатаПолученияДохода = БухучетИсходные.ДатаПолученияДохода
	|			И БухучетПеренос.РегистрацияВНалоговомОргане = БухучетИсходные.РегистрацияВНалоговомОргане
	|			И БухучетПеренос.НеУчитыватьВРаспределенииПриОкончательномРасчете = БухучетИсходные.НеУчитыватьВРаспределенииПриОкончательномРасчете
	|			И (БухучетПеренос.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса[1].Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ТаблицаКатегорий = РезультатЗапроса[2].Выгрузить();
	ТаблицаКатегорий.Индексы.Добавить("Регистратор,НомерСтроки");
	Отбор = Новый Структура("Регистратор,НомерСтроки");
	
	Выборка = РезультатЗапроса[1].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		Регистратор = Выборка.Регистратор;
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам.НаборЗаписей", "Регистратор", Регистратор) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			Если Выборка.НачислениеУдержание <> Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ Тогда
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			Иначе
				
				ЗаполнитьЗначенияСвойств(Отбор, Выборка);
				СтрокиКатегорий = ТаблицаКатегорий.Скопировать(Отбор);
				Если СтрокиКатегорий.Количество() = 0 Или Выборка.Сумма = 0 Тогда
					
					НоваяЗапись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
					НоваяЗапись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					
				Иначе
					
					СтрокиКатегорий.Свернуть("КатегорияДохода", "Сумма");
					
					Если СтрокиКатегорий.Количество() = 1 Тогда
						
						НоваяЗапись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
						НоваяЗапись.КатегорияДохода = СтрокиКатегорий[0].КатегорияДохода;
						
					Иначе
						
						Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиКатегорий, "Сумма");
						РаспределенныеСуммы = ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(Выборка.Сумма, Коэффициенты, 0);
						Для Индекс = 0 По Коэффициенты.ВГраница() Цикл
							НоваяЗапись = НаборЗаписей.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
							НоваяЗапись.КатегорияДохода = СтрокиКатегорий[Индекс].КатегорияДохода;
							НоваяЗапись.Сумма = РаспределенныеСуммы[Индекс];
						КонецЦикла;
						
					КонецЕсли;
				КонецЕсли;
					
			КонецЕсли;
				
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;

КонецПроцедуры

Процедура ВедомостиЗаполнитьКатегориюДоходаВНДФЛ(ПараметрыОбновления = Неопределено) Экспорт
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТВедомости
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВБанкНДФЛ
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.Ссылка
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВКассуНДФЛ
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.Ссылка
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыПеречислением.НДФЛ КАК ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплатыРаздатчикомНДФЛ.Ссылка
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыРаздатчиком.НДФЛ КАК ВедомостьНаВыплатуЗарплатыРаздатчикомНДФЛ
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыРаздатчикомНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И ВедомостьНаВыплатуЗарплатыРаздатчикомНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(Ведомости.Ссылка) КАК ТипДокумента,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ведомости.Ссылка) КАК Количество
	|ИЗ
	|	ВТВедомости КАК Ведомости
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(Ведомости.Ссылка)";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ТекстШаблонаЗапроса = 
	"ВЫБРАТЬ
	|	Ведомость.Ссылка КАК Ссылка,
	|	Ведомость.Ссылка.Организация КАК Организация,
	|	Ведомость.НомерСтроки КАК НомерСтроки,
	|	Ведомость.ДокументОснование КАК ДокументОснование,
	|	Ведомость.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Ведомость.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Ведомость.Подразделение КАК Подразделение,
	|	Ведомость.КатегорияДохода КАК КатегорияДохода
	|ПОМЕСТИТЬ ВТТаблицаНДФЛ
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК Ведомость
	|ГДЕ
	|	Ведомость.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1000
	|				Ведомости.Ссылка КАК Ссылка
	|			ИЗ
	|				ВТВедомости КАК Ведомости
	|			ГДЕ
	|				Ведомости.Ссылка ССЫЛКА Документ.ВедомостьНаВыплатуЗарплатыВБанк)";
	
	Выборка = РезультатЗапроса.Выбрать();
	
	МаксимальноеКоличествоДокументов = 1000;
	Запрос.Текст = "";
	ПервыйЗапрос = Истина;
	Пока Выборка.Следующий() Цикл
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		ТекстЗапроса = СтрЗаменить(ТекстШаблонаЗапроса, "Документ.ВедомостьНаВыплатуЗарплатыВБанк", МетаданныеДокумента.ПолноеИмя());
		
		Если ПараметрыОбновления = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " ПЕРВЫЕ 1000", "");
		Иначе
			МаксимальноеКоличествоДокументов = МаксимальноеКоличествоДокументов - Выборка.Количество;
			Если МаксимальноеКоличествоДокументов > 0 Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ ПЕРВЫЕ 1000", "ВЫБРАТЬ ПЕРВЫЕ " + Формат(Выборка.Количество, "ЧГ="));
			КонецЕсли;
		КонецЕсли;
		
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТТаблицаНДФЛ", "");
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		ПервыйЗапрос = Ложь;
		
		Если МаксимальноеКоличествоДокументов <=0 Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Ссылка КАК Ссылка,
	|	ТаблицаНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ТаблицаНДФЛ.КатегорияДохода
	|		КОГДА ЕСТЬNULL(ИсчисленныйНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|		ИНАЧЕ ИсчисленныйНДФЛ.КатегорияДохода
	|	КОНЕЦ КАК КатегорияДохода,
	|	СУММА(ЕСТЬNULL(ИсчисленныйНДФЛ.Сумма, 0)) КАК НДФЛИсчисленный
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК ИсчисленныйНДФЛ
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ИсчисленныйНДФЛ.ФизическоеЛицо
	|			И ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ИсчисленныйНДФЛ.СтавкаНалогообложенияРезидента
	|			И ТаблицаНДФЛ.Организация = ИсчисленныйНДФЛ.Организация
	|			И ТаблицаНДФЛ.ДокументОснование = ИсчисленныйНДФЛ.ДокументОснование
	|			И (ИсчисленныйНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И ТаблицаНДФЛ.Подразделение = ИсчисленныйНДФЛ.Подразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДФЛ.Ссылка,
	|	ТаблицаНДФЛ.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ТаблицаНДФЛ.КатегорияДохода
	|		КОГДА ЕСТЬNULL(ИсчисленныйНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|		ИНАЧЕ ИсчисленныйНДФЛ.КатегорияДохода
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВременныйНабор = Новый ТаблицаЗначений;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ВременныйНабор.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ПолноеИмя = "Документ.ВедомостьНаВыплатуЗарплатыВБанк";
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу") Тогда
			ПолноеИмя = "Документ.ВедомостьНаВыплатуЗарплатыВКассу";
		ИначеЕсли ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыПеречислением") Тогда
			ПолноеИмя = "Документ.ВедомостьНаВыплатуЗарплатыПеречислением";
		ИначеЕсли ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыРаздатчиком") Тогда
			ПолноеИмя = "Документ.ВедомостьНаВыплатуЗарплатыРаздатчиком";
		КонецЕсли;
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, ПолноеИмя, "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
			
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			СтрокаДокумента = ДокументОбъект.НДФЛ[Выборка.НомерСтроки - 1];
			
			ВременныйНабор.Очистить();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ВременныйНабор.Добавить(), Выборка);
			КонецЦикла;
			
			Если ВременныйНабор.Количество() = 1 Тогда
				СтрокаДокумента.КатегорияДохода = ВременныйНабор[0].КатегорияДохода;
				Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
					СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			
			Коэффициенты = ВременныйНабор.ВыгрузитьКолонку("НДФЛИсчисленный");
			РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДокумента.Сумма, Коэффициенты, 0);
			
			Если РезультатыРаспределения = Неопределено Тогда
				СтрокаДокумента.КатегорияДохода = ВременныйНабор[0].КатегорияДохода;
				Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
					СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
				КонецЕсли;
				
			Иначе
				Индекс = 0;
				Для Каждого Строка Из ВременныйНабор Цикл
					
					Если Индекс = 0 Тогда
						СтрокаДокумента.Сумма = РезультатыРаспределения[Индекс];
						СтрокаДокумента.КатегорияДохода = Строка.КатегорияДохода;
						Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
							СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						КонецЕсли;
						
					Иначе
						
						НоваяСтрокаДокумента = ДокументОбъект.НДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, СтрокаДокумента);
						НоваяСтрокаДокумента.Сумма = РезультатыРаспределения[Индекс];
						НоваяСтрокаДокумента.КатегорияДохода = Строка.КатегорияДохода;
						Если Не ЗначениеЗаполнено(НоваяСтрокаДокумента.КатегорияДохода) Тогда
							НоваяСтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						КонецЕсли;
						
					КонецЕсли;
					
					Индекс = Индекс + 1;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьОрганизациюВРегистреДатыВыплатыДоходов(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыВыплатыДоходов.Регистратор.Организация КАК Организация,
	|	ДатыВыплатыДоходов.*
	|ИЗ
	|	РегистрСведений.ДатыВыплатыДоходов КАК ДатыВыплатыДоходов
	|ГДЕ
	|	ДатыВыплатыДоходов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатыВыплатыДоходов.Регистратор";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.ДатыВыплатыДоходов.НаборЗаписей", "Регистратор", Выборка.Регистратор) Тогда
				Продолжить;
			КонецЕсли;
			НаборЗаписей = РегистрыСведений.ДатыВыплатыДоходов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		КонецЦикла;
	Иначе
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВедомостиУточнитьКатегориюДоходаВНДФЛ(ПараметрыОбновления = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Ведомости = Новый Массив;
	Ведомости.Добавить("ВедомостьНаВыплатуЗарплатыВБанк");
	Ведомости.Добавить("ВедомостьНаВыплатуЗарплатыВКассу");
	Ведомости.Добавить("ВедомостьНаВыплатуЗарплатыПеречислением");
	Ведомости.Добавить("ВедомостьНаВыплатуЗарплатыРаздатчиком");
	
	ТекстШаблона = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка КАК Ссылка,
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.НомерСтроки КАК НомерСтрокиДокумента,
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.КатегорияДохода КАК КатегорияДоходаДокумента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДоходаРегистра
	|ПОМЕСТИТЬ ВТКатегорииУдержанныхНДФЛ
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВБанкНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|			И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СтавкаНалогообложенияРезидента = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента
	|			И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.МесяцНалоговогоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|			И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.РегистрацияВНалоговомОргане = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане
	|			И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
	|			И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|			И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)";
	ПервыйЗапрос = Истина;
	Запрос.Текст = "";
	Для Каждого ИмяДокумента Из Ведомости Цикл
		ТекстЗапроса = СтрЗаменить(ТекстШаблона, "Документ.ВедомостьНаВыплатуЗарплатыВБанк", "Документ." + ИмяДокумента);
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТКатегорииУдержанныхНДФЛ", "");
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		ПервыйЗапрос = Ложь;
	КонецЦикла;
	Запрос.Выполнить();
	Если Не ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТКатегорииУдержанныхНДФЛ") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТКатегорииУдержанныхНДФЛ.Ссылка КАК Ссылка,
	|	ВТКатегорииУдержанныхНДФЛ.НомерСтрокиДокумента КАК НомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТОбработанныеСтроки
	|ИЗ
	|	ВТКатегорииУдержанныхНДФЛ КАК ВТКатегорииУдержанныхНДФЛ
	|ГДЕ
	|	ВТКатегорииУдержанныхНДФЛ.КатегорияДоходаДокумента = ВТКатегорииУдержанныхНДФЛ.КатегорияДоходаРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТКатегорииУдержанныхНДФЛ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	ВТКатегорииУдержанныхНДФЛ КАК ВТКатегорииУдержанныхНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбработанныеСтроки КАК ВТОбработанныеСтроки
	|		ПО ВТКатегорииУдержанныхНДФЛ.Ссылка = ВТОбработанныеСтроки.Ссылка
	|			И ВТКатегорииУдержанныхНДФЛ.НомерСтрокиДокумента = ВТОбработанныеСтроки.НомерСтрокиДокумента
	|ГДЕ
	|	ВТКатегорииУдержанныхНДФЛ.КатегорияДоходаДокумента <> ВТКатегорииУдержанныхНДФЛ.КатегорияДоходаРегистра
	|	И ВТОбработанныеСтроки.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(Ведомости.Ссылка) КАК ТипДокумента,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ведомости.Ссылка) КАК КоличествоРегистраторов
	|ИЗ
	|	ВТРегистраторы КАК Ведомости
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(Ведомости.Ссылка)";
	Выборка = Запрос.Выполнить().Выбрать();

	ТекстШаблона =
	"ВЫБРАТЬ
	|	Ведомость.Ссылка КАК Ссылка,
	|	Ведомость.НомерСтроки КАК НомерСтроки,
	|	Ведомость.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Ведомость.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Ведомость.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Ведомость.Ссылка.Организация КАК Организация,
	|	Ведомость.Подразделение КАК Подразделение,
	|	Ведомость.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Ведомость.ДокументОснование КАК ДокументОснование,
	|	Ведомость.КодДохода КАК КодДохода,
	|	Ведомость.КатегорияДохода КАК КатегорияДохода,
	|	Ведомость.Сумма КАК Сумма,
	|	Ведомость.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Ведомость.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ НДФЛДокумента
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК Ведомость
	|ГДЕ
	|	Ведомость.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1000
	|				ВсеРегистраторы.Ссылка
	|			ИЗ
	|				ВТРегистраторы КАК ВсеРегистраторы
	|			ГДЕ
	|				ВсеРегистраторы.Ссылка ССЫЛКА Документ.ВедомостьНаВыплатуЗарплатыВБанк)";
	ПервыйЗапрос = Истина;
	Запрос.Текст = "";
	МаксимальноеКоличествоДокументов = 1000;
	Пока Выборка.Следующий() Цикл
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		ТекстЗапроса = СтрЗаменить(ТекстШаблона, "Документ.ВедомостьНаВыплатуЗарплатыВБанк", МетаданныеДокумента.ПолноеИмя());
		Если ПараметрыОбновления = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " ПЕРВЫЕ 1000", "");
		Иначе
			МаксимальноеКоличествоДокументов = МаксимальноеКоличествоДокументов - Выборка.КоличествоРегистраторов;
			Если МаксимальноеКоличествоДокументов > 0 Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ ПЕРВЫЕ 1000", "ВЫБРАТЬ ПЕРВЫЕ " + Формат(Выборка.КоличествоРегистраторов, "ЧГ="));
			КонецЕсли;
		КонецЕсли;
		
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ НДФЛДокумента", "");
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		ПервыйЗапрос = Ложь;
	КонецЦикла;
	Если ПустаяСтрока(Запрос.Текст) Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(НДФЛ.Ссылка) КАК ТипДокумента,
	|	НДФЛ.Ссылка КАК Ссылка,
	|	НДФЛ.НомерСтроки КАК НомерСтроки,
	|	НДФЛ.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НДФЛ.Организация КАК Организация,
	|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛ.КодДохода КАК КодДохода,
	|	НДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НДФЛ.Подразделение КАК Подразделение,
	|	НДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НДФЛ.ДокументОснование КАК ДокументОснование,
	|	НДФЛ.Сумма КАК Сумма,
	|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)) КАК КатегорияДохода,
	|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма, 0) КАК ИсчисленныйНДФЛ
	|ИЗ
	|	НДФЛДокумента КАК НДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО НДФЛ.Ссылка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И НДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И НДФЛ.МесяцНалоговогоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|			И НДФЛ.СтавкаНалогообложенияРезидента = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента
	|			И НДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|			И НДФЛ.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
	|			И НДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И НДФЛ.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|			И НДФЛ.РегистрацияВНалоговомОргане = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипДокумента,
	|	Ссылка,
	|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ТипДокумента") Цикл
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		ИмяПространстваБлокировки = МетаданныеДокумента.ПолноеИмя();
		Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, ИмяПространстваБлокировки, "Ссылка", Выборка.Ссылка) Тогда
				Продолжить;
			КонецЕсли;
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ТаблицаНДФЛ = ДокументОбъект.НДФЛ.ВыгрузитьКолонки();
			ВременныйНабор = ТаблицаНДФЛ.Скопировать();
			ВременныйНабор.Колонки.Добавить("ИсчисленныйНДФЛ", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
			Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
				
				СтрокаДокумента = ТаблицаНДФЛ.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, Выборка);
				
				Если ЗначениеЗаполнено(СтрокаДокумента.КодДохода) Тогда 
					СтрокаДокумента.КатегорияДохода = УчетНДФЛПовтИсп.КатегорияДоходаПоЕгоКоду(СтрокаДокумента.КодДохода);
					Продолжить;
				КонецЕсли;
				
				ВременныйНабор.Очистить();
				ОбщаяСуммаКоэффициентов = 0;
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ВременныйНабор.Добавить(), Выборка);
					ОбщаяСуммаКоэффициентов = ОбщаяСуммаКоэффициентов + Выборка.ИсчисленныйНДФЛ;
				КонецЦикла;
				
				Если ВременныйНабор.Количество() = 1 Или ОбщаяСуммаКоэффициентов = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				ЗарплатаКадры.РазнестиСуммуПоБазе(СтрокаДокумента.Сумма, ВременныйНабор, "ИсчисленныйНДФЛ", 0);
				
				ПерваяСтрока = Истина;
				Для Каждого СтрокаРаспределения Из ВременныйНабор Цикл
					Если ПерваяСтрока Тогда
						СтрокаДокумента.Сумма = СтрокаРаспределения.ИсчисленныйНДФЛ;
						СтрокаДокумента.КатегорияДохода = СтрокаРаспределения.КатегорияДохода;
					Иначе
						НоваяСтрокаДокумента = ТаблицаНДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, СтрокаРаспределения);
						НоваяСтрокаДокумента.Сумма = СтрокаРаспределения.ИсчисленныйНДФЛ;
					КонецЕсли;
					ПерваяСтрока = Ложь;
				КонецЦикла;
			КонецЦикла;
			
			ТаблицаНДФЛ.Свернуть("ИдентификаторСтроки,ФизическоеЛицо,СтавкаНалогообложенияРезидента,МесяцНалоговогоПериода,КодДохода,РегистрацияВНалоговомОргане,Подразделение,ВключатьВДекларациюПоНалогуНаПрибыль,ДокументОснование,КатегорияДохода", "Сумма");
			СтруктураПоиска = Новый Структура("ИдентификаторСтроки,ФизическоеЛицо,СтавкаНалогообложенияРезидента,МесяцНалоговогоПериода,КодДохода,РегистрацияВНалоговомОргане,Подразделение,ВключатьВДекларациюПоНалогуНаПрибыль,ДокументОснование");
			СтрокиНДФЛКУдалению = Новый Массив;
			
			ОбновляемыеНаборыСтрок = ТаблицаНДФЛ.Скопировать();
			ОбновляемыеНаборыСтрок.Свернуть("ИдентификаторСтроки,ФизическоеЛицо,СтавкаНалогообложенияРезидента,МесяцНалоговогоПериода,КодДохода,РегистрацияВНалоговомОргане,Подразделение,ВключатьВДекларациюПоНалогуНаПрибыль,ДокументОснование");
			Для Каждого Строка Из ОбновляемыеНаборыСтрок Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
				СтрокиНДФЛ = ТаблицаНДФЛ.НайтиСтроки(СтруктураПоиска);
				СтрокиДокумента = ДокументОбъект.НДФЛ.НайтиСтроки(СтруктураПоиска);
				КоличествоСтрокДокумента = СтрокиДокумента.Количество();
				КоличествоСтрокНДФЛ = СтрокиНДФЛ.Количество();
				
				Индекс = 1;
				Для Каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
					Если Индекс <= КоличествоСтрокДокумента Тогда
						СтрокаДокумента = СтрокиДокумента[Индекс -1];
						СтрокаДокумента.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода;
						СтрокаДокумента.Сумма = СтрокаНДФЛ.Сумма;
					Иначе
						НоваяСтрокаДокумента = ДокументОбъект.НДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, СтрокаНДФЛ);
					КонецЕсли;
					Индекс = Индекс + 1;
				КонецЦикла;
				
				КоличествоЛишнихСтрок = КоличествоСтрокДокумента - КоличествоСтрокНДФЛ;
				Если КоличествоЛишнихСтрок > 0 Тогда
					Для Индекс = 1 По КоличествоЛишнихСтрок Цикл
						СтрокаДокумента = СтрокиДокумента[КоличествоСтрокДокумента - Индекс];
						СтрокиНДФЛКУдалению.Добавить(СтрокаДокумента);
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			Для Каждого СтрокаКУдалению Из СтрокиНДФЛКУдалению Цикл
				ДокументОбъект.НДФЛ.Удалить(СтрокаКУдалению);
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗафиксироватьДатуПолученияДоходаПеренесенныхДоходовНДФЛ(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода >= ДАТАВРЕМЯ(2017,1,1)
	|	И СведенияОДоходахНДФЛ.Регистратор ССЫЛКА Документ.ПереносДанных
	|	И (СведенияОДоходахНДФЛ.ДатаПолученияДоходаФиксирована = ЛОЖЬ
	|			ИЛИ СведенияОДоходахНДФЛ.ДатаПолученияДохода >= ДАТАВРЕМЯ(2018,1,1)
	|				И СведенияОДоходахНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций))";
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 1000", "");
	КонецЕсли;
	Запрос.Выполнить();
	
	Если Не ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТРегистраторы") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИСТИНА КАК ДатаПолученияДоходаФиксирована,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.ДатаПолученияДохода >= ДАТАВРЕМЯ(2018, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КатегорияДохода
	|	КОНЕЦ КАК КатегорияДохода,
	|	СведенияОДоходахНДФЛ.*
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	УчетНДФЛ.ОбработатьНаборыЗаписейРегистраНакопления("СведенияОДоходахНДФЛ", ТекстЗапроса, , Запрос.МенеджерВременныхТаблиц, ПараметрыОбновления);
	
КонецПроцедуры

Процедура ЗафиксироватьДатуПолученияДоходаПеренесенногоИсчисленногоНДФЛ(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор ССЫЛКА Документ.ПереносДанных
	|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДатаПолученияДоходаФиксирована = ЛОЖЬ
	|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2018,1,1)
	|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций))";
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 1000", "");
	КонецЕсли;
	Запрос.Выполнить();
	
	Если Не ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТРегистраторы") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДатаПолученияДоходаФиксирована
	|	КОНЕЦ КАК ДатаПолученияДоходаФиксирована,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2018, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
	|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|	КОНЕЦ КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки";
	
	УчетНДФЛ.ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", ТекстЗапроса, , Запрос.МенеджерВременныхТаблиц, ПараметрыОбновления);
	
КонецПроцедуры

#КонецОбласти

// Возвращает Таблицу соответствия КодовДоходаНДФЛ, Категории начисления (для кода дохода 4800) и Категории дохода
// Если заполнен параметр КодДоходаНДФЛ тип СправочникСсылка.ВидыДоходовНДФЛ, то соответствие будет возвращено только
// для этого кода.
//
Функция СопоставлениеКодовИКатегорийДоходовНДФЛ(КодДоходаНДФЛ = Неопределено) Экспорт
	
	СоответствиеКодов = УчетФактическиПолученныхДоходовБазовый.СопоставлениеКодовИКатегорийДоходовНДФЛ(КодДоходаНДФЛ);
	
	КодДохода4800 = ПредопределенноеЗначение("Справочник.ВидыДоходовНДФЛ.Код4800");
	Если КодДоходаНДФЛ = Неопределено Или КодДоходаНДФЛ = КодДохода4800 Тогда
		
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СдельнаяОплатаТруда);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Премия);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.НадбавкаЗаВредность);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеКомпенсацияОтпуска);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ЕдиновременнаяВыплатаКОтпуску);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ЕдиновременнаяВыплатаКОтпускуГосслужащего);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПростояПоВинеРаботодателя);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПростояПоНезависящимОтРаботодателяПричинам);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеНаПериодКомандировки);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПоСреднемуЗаработку);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СохраняемоеДенежноеСодержание);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаДоСреднегоЗаработка);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаЗаСовмещение);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаДоСреднегоЗаработкаЗаДниБолезни);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоТрехЛет);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ВыходноеПособие);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ВыходноеПособиеМесячноеДенежноеСодержание);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаДнейУходаЗаДетьмиИнвалидами);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы, 
										Перечисления.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоходВНатуральнойФорме);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы, 
										Перечисления.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Льгота);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы, 
										Перечисления.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ВыбираемаяСотрудникомЛьгота);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсационныеВыплаты);
		УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодДохода4800, 
										Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы, 
										,
										Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияМоральногоВреда);
		
	КонецЕсли;
	
	КодПремии = Справочники.ВидыДоходовНДФЛ.Код2002;
	СтрокиОписанияПремии = СоответствиеКодов.НайтиСтроки(Новый Структура("КодДохода", КодПремии));
	Если СтрокиОписанияПремии.Количество() > 0 Тогда
		ПремияОписанаКакОплатаТруда = СоответствиеКодов.НайтиСтроки(Новый Структура("КодДохода, КатегорияДохода", КодПремии, Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда)).Количество() > 0;
		Для каждого СтрокаОписания Из СтрокиОписанияПремии Цикл
			СоответствиеКодов.Удалить(СтрокаОписания)
		КонецЦикла;
		Для каждого Значение Из Перечисления.КатегорииНачисленийИНеоплаченногоВремени Цикл
			Если ПремияОписанаКакОплатаТруда Тогда // если премии учитываются как оплата труда, тогда разрешим для некоторых категорий начислений учитывать ее по дате выплаты
			
				Если Значение = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Премия 
					Или Значение = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КвартальнаяПремия
					Или Значение = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Прочее Тогда
					УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодПремии, 
													Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда, 
													Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности,
													Значение);
				Иначе
					УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодПремии, 
													Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда, 
													,
													Значение);
				КонецЕсли;
				
			Иначе
				УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, КодПремии, 
												Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
												Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
												Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СоответствиеКодов;
	
КонецФункции

Процедура ПеренестиВыплаченныйДоходНаДату(Движения, Ведомость, ДатаВыплаты, ДатаОперации, Отказ) Экспорт
	
	// Учет доходов для исчисления НДФЛ
	НаборЗаписейВедомости = РегистрыНакопления.СведенияОДоходахНДФЛ.СоздатьНаборЗаписей();
	НаборЗаписейВедомости.Отбор.Регистратор.Установить(Ведомость);
	НаборЗаписейВедомости.Прочитать();
	
	ЕстьДвижения = Ложь;
	Для Каждого Запись Из НаборЗаписейВедомости Цикл
		Если ЗначениеЗаполнено(Запись.УстаревшаяДатаПолученияДохода) Тогда
			ЕстьДвижения = Истина;
			
			НовоеДвижение = Движения.СведенияОДоходахНДФЛ.Добавить();
			ЗаполнитьЗначенияСвойств(НовоеДвижение, Запись, , "Регистратор");
			НовоеДвижение.СуммаДохода = - НовоеДвижение.СуммаДохода;
			НовоеДвижение.СуммаВычета = - НовоеДвижение.СуммаВычета;
			
			НовоеДвижение = Движения.СведенияОДоходахНДФЛ.Добавить();
			ЗаполнитьЗначенияСвойств(НовоеДвижение, Запись, , "Регистратор");
			НовоеДвижение.ДатаПолученияДохода = ДатаВыплаты;
			НовоеДвижение.МесяцНалоговогоПериода = НачалоМесяца(ДатаВыплаты);
			НовоеДвижение.Период = ДатаОперации;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьДвижения Тогда
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	// Расчеты налогоплательщиков с бюджетом по НДФЛ
	НепереносимыеКатегорииДохода = Перечисления.КатегорииДоходовНДФЛ.СФиксированнойДатойПолученияДохода();
	
	РабочиеДни = КалендарныеГрафики.ДатыБлижайшихРабочихДней(КалендарныеГрафики.ОсновнойПроизводственныйКалендарь(), ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДатаВыплаты), Ложь, Ложь, Истина);
	Если РабочиеДни = Неопределено Тогда
		РабочиеДни = Новый Соответствие;
	КонецЕсли;
	СрокУплаты = РабочиеДни.Получить(ДатаВыплаты);
	
	НаборЗаписейВедомости = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	НаборЗаписейВедомости.Отбор.Регистратор.Установить(Ведомость);
	НаборЗаписейВедомости.Прочитать();
	
	ЕстьДвижения = Ложь;
	Для Каждого Запись Из НаборЗаписейВедомости Цикл
		
		Если Запись.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
			Если ЗначениеЗаполнено(Запись.УстаревшаяДатаПолученияДохода) Тогда
				ЕстьДвижения = Истина;
				
				НовоеДвижение = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДобавитьПриход();
				ЗаполнитьЗначенияСвойств(НовоеДвижение, Запись, , "Регистратор");
				НовоеДвижение.Сумма = - НовоеДвижение.Сумма;
				НовоеДвижение.СуммаВыплаченногоДохода = - НовоеДвижение.СуммаВыплаченногоДохода;
				
				НовоеДвижение = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДобавитьПриход();
				ЗаполнитьЗначенияСвойств(НовоеДвижение, Запись, , "Регистратор");
				НовоеДвижение.МесяцНалоговогоПериода = ДатаВыплаты;
				НовоеДвижение.Период = ДатаОперации;
			КонецЕсли;
		Иначе
			Если НепереносимыеКатегорииДохода.Найти(Запись.КатегорияДохода) = Неопределено Тогда
				ЕстьДвижения = Истина;
				
				НовоеДвижение = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДобавитьРасход();
				ЗаполнитьЗначенияСвойств(НовоеДвижение, Запись, , "Регистратор");
				НовоеДвижение.Сумма = - НовоеДвижение.Сумма;
				НовоеДвижение.СуммаВыплаченногоДохода = - НовоеДвижение.СуммаВыплаченногоДохода;
			
				НовоеДвижение = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДобавитьРасход();
				ЗаполнитьЗначенияСвойств(НовоеДвижение, Запись, , "Регистратор");
				НовоеДвижение.УстаревшаяДатаПолученияДохода = Запись.МесяцНалоговогоПериода;
				НовоеДвижение.МесяцНалоговогоПериода = ДатаВыплаты;
				НовоеДвижение.Период = ДатаОперации;
				Если СрокУплаты <> Неопределено Тогда
					НовоеДвижение.КрайнийСрокУплаты = СрокУплаты;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	
	КонецЦикла;
	Если ЕстьДвижения Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	// Бухучет начисления удержания по сотрудникам
	НаборЗаписейВедомости = РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СоздатьНаборЗаписей();
	НаборЗаписейВедомости.Отбор.Регистратор.Установить(Ведомость);
	НаборЗаписейВедомости.Прочитать();
	
	ЕстьДвижения = Ложь;
	Для Каждого Запись Из НаборЗаписейВедомости Цикл
		Если ЗначениеЗаполнено(Запись.УстаревшаяДатаПолученияДохода) Тогда
			ЕстьДвижения = Истина;
			
			НовоеДвижение = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НовоеДвижение, Запись, , "Регистратор");
			НовоеДвижение.Сумма = - НовоеДвижение.Сумма;
			
			НовоеДвижение = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НовоеДвижение, Запись, , "Регистратор");
			НовоеДвижение.ДатаПолученияДохода = ДатаВыплаты;
			НовоеДвижение.Период = ДатаОперации;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьДвижения Тогда
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНаличиеПодтвержденияОплатыПриЗаписи(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы.УчетФактическиПолученныхДоходовРасширенная") Тогда
		Возврат;
	КонецЕсли;
	
	Модуль = ОбщегоНазначения.ОбщийМодуль("РегистрыСведений.ДатыВыплатыДоходов");
	ЕстьПодтверждение = Модуль.ЕстьПоВедомости(Источник.Ссылка);
	
	Если ЕстьПодтверждение Тогда
		СообщениеОбОшибке = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='По ведомости номер %1 от %2 зарегистрировано подтверждение выплаты доходов, изменения запрещены'"), 
				Источник.Номер, 
				Формат(Источник.Дата, "ДЛФ=D"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, Источник);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция РегистраторыУвольнения() Экспорт
	
	ТипыДокументовУвольнения = УчетФактическиПолученныхДоходовБазовый.РегистраторыУвольнения();
	
	ТипыДокументовУвольнения.Добавить(Тип("ДокументСсылка.УвольнениеСписком"));
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба.КадровыйУчетВоеннослужащих") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("РасчетДенежногоДовольствия");
		Модуль.ДополнитьРегистраторыУвольнения(ТипыДокументовУвольнения);
	КонецЕсли;
	
	Возврат ТипыДокументовУвольнения;
	
КонецФункции

#КонецОбласти
