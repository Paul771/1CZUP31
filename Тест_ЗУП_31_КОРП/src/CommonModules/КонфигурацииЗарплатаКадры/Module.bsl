////////////////////////////////////////////////////////////////////////////////
// Подсистема "КонфигурацииЗарплатаКадры".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ПодключаемыеКоманды

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту.
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	// Перенос отчета о движениях в меню "Еще".
	Команда = Команды.Найти("ДвиженияДокумента", "Идентификатор");
	Если Команда <> Неопределено Тогда
		Команда.Вид      = "КоманднаяПанель";
		Команда.Важность = "СмТакже";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НеИспользоватьНесколькоОрганизацийПриЗаписи(Источник, Отказ) Экспорт
	
	РазрешеноДобавлениеОрганизации = Не СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации();
	Константы.РазрешитьДобавлениеОрганизацииЗарплатаКадры.Установить(Источник.Значение И РазрешеноДобавлениеОрганизации);
	
КонецПроцедуры

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.18.3";
	Обработчик.Процедура = "КонфигурацииЗарплатаКадры.УстановитьФункциональнуюОпциюРазрешитьДобавлениеОрганизацииЗарплатаКадры";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.8";
	Обработчик.Процедура = "КонфигурацииЗарплатаКадры.УстановитьПараметрыНабораСвойствСправочников";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("7a03e47a-fb6e-4890-b063-a65fe367b2c2");
	Обработчик.Комментарий = НСтр("ru = 'Установка параметров для набора свойств общих справочников. Дополнительные реквизиты в кадровом учете временно недоступны.'");
	
КонецПроцедуры

Процедура УстановитьФункциональнуюОпциюРазрешитьДобавлениеОрганизацииЗарплатаКадры() Экспорт

	РазрешеноДобавлениеОрганизации = Константы.НеИспользоватьНесколькоОрганизаций.Получить() И Не СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации();
	Константы.РазрешитьДобавлениеОрганизацииЗарплатаКадры.Установить(РазрешеноДобавлениеОрганизации);	

КонецПроцедуры

Процедура УстановитьПараметрыНабораСвойствСправочников(ПараметрыОбновления = НеОпределено) Экспорт
	
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_ВидыДокументовФизическихЛиц", УправлениеСвойствами.СтруктураПараметровНабораСвойств());
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_Должности", УправлениеСвойствами.СтруктураПараметровНабораСвойств());
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_Организации", УправлениеСвойствами.СтруктураПараметровНабораСвойств());
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_ПодразделенияОрганизаций", УправлениеСвойствами.СтруктураПараметровНабораСвойств());
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_Пользователи", УправлениеСвойствами.СтруктураПараметровНабораСвойств());
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_Сотрудники", УправлениеСвойствами.СтруктураПараметровНабораСвойств());
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_ФизическиеЛица", УправлениеСвойствами.СтруктураПараметровНабораСвойств());
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_Файлы", УправлениеСвойствами.СтруктураПараметровНабораСвойств());
	
	Если ПараметрыОбновления <> Неопределено Тогда
		ПараметрыОбновления.ОбработкаЗавершена = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоБиблиотека()
	
	ЕстьУчетБюджетныхУчреждений = ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений");
	ЕстьУчетХозрасчетныхОрганизаций = ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетХозрасчетныхОрганизаций");
	
	Возврат (ЕстьУчетБюджетныхУчреждений И ЕстьУчетХозрасчетныхОрганизаций) Или (Не ЕстьУчетБюджетныхУчреждений И Не ЕстьУчетХозрасчетныхОрганизаций);
	
КонецФункции

#Область ПереопределениеМетодовОбщегоМодуляМониторИнтернетПоддержкиПереопределяемый

// Переопределяет разрешение использовать монитор Интернет-поддержки.
// Если необходимо запретить использование монитора Интернет-поддержки,
// тогда в параметре Отказ необходимо возвратить значение Истина;
//
// Параметры:
//	Отказ - Булево - Истина, если показ монитора Интернет-поддержки запрещен;
//		Ложь - в противном случае;
//		Значение по умолчанию - Ложь;
//
// Пример:
//	Если <Выражение> Тогда
//		Отказ = Истина;
//	КонецЕсли;
//
Процедура ИспользоватьМониторИнтернетПоддержки(Отказ) Экспорт
	
	Если ЭтоБиблиотека() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Переопределяет возможность использования функции отображения монитора.
// Интернет-поддержки при начале работы с программой. Если отображение
// монитора при начале работы с программой используется, тогда:
// 1) монитор Интернет-поддержки будет открываться при начале работы программы;
// 2) в мониторе Интернет-поддержки будет также отображена настройка "Показывать
//    при начале работы", посредством которой пользователь может включить или
//    отключить отображение монитора при начале работы с программой.
//
// Параметры:
// Использование - Булево - Истина, если необходимо использовать функцию
//		отображения монитора Интернет-поддержки при начале работы с программой.
//		Ложь - в противном случае.
//		Значение по умолчанию - Ложь.
//
Процедура ИспользоватьОтображениеМонитораПриНачалеРаботы(Использование) Экспорт
	
	Использование = Не ЭтоБиблиотека();
	
КонецПроцедуры

#КонецОбласти

#Область ПереопределениеМетодовОбщегоМодуляОбменСБанкамиПереопределяемый

// Включает тестовый режим обмена в банком.
// При включении тестового режима возможно ручное указание URL сервера для получения настроек обмена.
//
// Возвращаемое значение:
//		Булево - Истина, если включен признак использования тестового режима.
//
Функция ИспользоватьТестовыйРежимDirectBank() Экспорт
	Возврат ЭтоБиблиотека();
КонецФункции

#КонецОбласти

#КонецОбласти
