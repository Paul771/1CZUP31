
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьПоставляемыеПрофилиГруппДоступаПодсистемыМотивацияПерсонала(ОписанияПрофилей, ПараметрыОбновления) Экспорт 

	ОписаниеПрофиля = ОписаниеПрофиляСпециалистПоКомпенсациям();
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеПрофиляСпециалистПоКомпенсациям()
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Идентификатор = ИдентификаторПрофиляСпециалистПоКомпенсациям();
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Специалист по компенсациям'");
	
	// Обязательные роли.
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляОбязательныеРоли(ОписаниеПрофиля);
	
	// Интерфейсные роли.
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ПодсистемаМотивация", 												"ЗарплатаКадрыКорпоративнаяПодсистемы.МотивацияПерсонала");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ПодсистемаЗарплата");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ПодсистемаКадры");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ПодсистемаНастройкаИАдминистрирование");
	
	// Льготы.
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
		МодульПрофиля = ОбщегоНазначения.ОбщийМодуль("ЛьготыСотрудников");
		МодульПрофиля.ДополнитьОписаниеПрофиля(ОписаниеПрофиля);
		МодульПрофиля.ДополнитьОписаниеПрофиляПравиламиПредоставленияЛьгот(ОписаниеПрофиля);
	КонецЕсли;
	
	// KPI.
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ИспользованиеРасчетПоказателейЭффективности",					 	"ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ДобавлениеИзменениеПоказателейЭффективности",				 		"ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ДобавлениеИзменениеПлановыхЗначенийПоказателейЭффективности", 		"ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ДобавлениеИзменениеФактическихЗначенийПоказателейЭффективности",	"ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности");
	
	// Грейды.
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ДобавлениеИзменениеГрейдов",									 	"ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ИспользованиеРаботаСГрейдами",								 		"ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ИспользованиеСозданиеГрейдов", 										"ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды");
	
	// Добавление сопутствующих ролей.
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ЧтениеШтатногоРасписания");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ЧтениеДанныхСотрудников");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ЧтениеДанныхСотрудниковРасширенная");
	ЗарплатаКадрыРасширенный.ДобавитьВОписаниеПрофиляРоль(ОписаниеПрофиля, "ЧтениеКадровогоСостоянияРасширенная");
	
	ЗарплатаКадрыРасширенный.ДополнитьПрофиль(ОписаниеПрофиля, ЗарплатаКадрыРасширенный.ОписаниеПрофиляРасчетчик());
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

Функция ИдентификаторПрофиляСпециалистПоКомпенсациям() 
	
	Возврат "9be103cf-5b4e-11e4-b974-c86000df10c6";
	
КонецФункции

#КонецОбласти