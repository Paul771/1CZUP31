#Область СлужебныеПроцедурыИФункции

// Метаданные элементов

Функция ВсеСсылкиСправочника(ИмяСправочника) Экспорт
	
	ВсеСсылки = Новый Структура("Реквизиты, ПодчиненныеСправочники, ТабличныеЧасти");
	ТипВсеСсылки = Справочники.ТипВсеСсылки();
	МетаданныеСправочника = Метаданные.Справочники[ИмяСправочника];
	
	МассивРеквизитов = Новый Массив;
	
	// Стандартные реквизиты
	
	МассивСтандартныхРеквизитов = Новый Массив;	
	
	Для каждого Реквизит Из МетаданныеСправочника.СтандартныеРеквизиты Цикл		
		
		УниверсальноеИмяСтандартногоРеквизита = РазработкаЭлектронныхКурсовСлужебный.ПеревестиСтандартныйРеквизит(Реквизит.Имя);

		Если УниверсальноеИмяСтандартногоРеквизита = "Ref" Тогда // ИЛИ УниверсальноеИмяСтандартногоРеквизита = "Owner"
			Продолжить; // Ссылки на самого себя и на владельца не нужны
		КонецЕсли;
		
		ТипыРеквизита = Реквизит.Тип.Типы();
		Для каждого ТипРеквизита Из ТипыРеквизита Цикл
			Если ТипВсеСсылки.СодержитТип(ТипРеквизита) 
				И МассивРеквизитов.Найти(Реквизит.Имя) = Неопределено Тогда
				МассивРеквизитов.Добавить(Реквизит.Имя);
			КонецЕсли;
		КонецЦикла;
			
	КонецЦикла;
	
	// Реквизиты
	
	Для каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
		ТипыРеквизита = Реквизит.Тип.Типы();
		Для каждого ТипРеквизита Из ТипыРеквизита Цикл
			Если ТипВсеСсылки.СодержитТип(ТипРеквизита) 
				И МассивРеквизитов.Найти(Реквизит.Имя) = Неопределено Тогда
				МассивРеквизитов.Добавить(Реквизит.Имя);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ВсеСсылки.Реквизиты = Новый ФиксированныйМассив(МассивРеквизитов);	
	
	// Подчиненные справочники
	
	МассивПодчиненныхСправочников = Новый Массив;
	
	ПодсистемаЭлектронноеОбучение = ЭлектронноеОбучениеСлужебный.Подсистема();	
	
	Для каждого ОбъектМетаданныхПодсистемы Из ПодсистемаЭлектронноеОбучение.Подсистемы.РазработкаЭлектронныхКурсов.Состав Цикл

		Если ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданныхПодсистемы)
			И ОбъектМетаданныхПодсистемы.Владельцы.Содержит(МетаданныеСправочника) Тогда
			
			МассивПодчиненныхСправочников.Добавить(ОбъектМетаданныхПодсистемы.Имя);
			
		КонецЕсли;

	КонецЦикла;
	
	ВсеСсылки.ПодчиненныеСправочники = Новый ФиксированныйМассив(МассивПодчиненныхСправочников);
	
	// Табличные части
	
	МассивТабличныхЧастей = Новый Массив;
	
	Для каждого ТабличнаяЧасть Из МетаданныеСправочника.ТабличныеЧасти Цикл
				
		Для каждого РеквизитТЧ Из ТабличнаяЧасть.Реквизиты Цикл
			
			ТипыРеквизита = РеквизитТЧ.Тип.Типы();
			
			Для каждого ТипРеквизита Из ТипыРеквизита Цикл
					
				Если ТипВсеСсылки.СодержитТип(ТипРеквизита) Тогда
					ОписаниеТЧ = Новый Структура("Имя, Реквизит", ТабличнаяЧасть.Имя, РеквизитТЧ.Имя);
					МассивТабличныхЧастей.Добавить(ОписаниеТЧ);
				КонецЕсли;
				
			КонецЦикла;				
			
		КонецЦикла;
		
	КонецЦикла;
	
	ВсеСсылки.ТабличныеЧасти = Новый ФиксированныйМассив(МассивТабличныхЧастей);
	
	// Возвращаем результат
	
	Возврат Новый ФиксированнаяСтруктура(ВсеСсылки);
	
КонецФункции

Функция ВсеРеквизитыИТабличныеЧастиСправочника(ИмяСправочника) Экспорт
	
	ВсеРеквизитыИТЧ = Новый Структура("СтандартныеРеквизиты, Реквизиты, ТабличныеЧасти");
	МетаданныеСправочника = Метаданные.Справочники[ИмяСправочника];
	
	// Стандартные реквизиты
	
	МассивСтандартныхРеквизитов = Новый Массив;	
	
	Для каждого Реквизит Из МетаданныеСправочника.СтандартныеРеквизиты Цикл		
		
		УниверсальноеИмяСтандартногоРеквизита = РазработкаЭлектронныхКурсовСлужебный.ПеревестиСтандартныйРеквизит(Реквизит.Имя);
		
		Если УниверсальноеИмяСтандартногоРеквизита = "Ref"
			ИЛИ УниверсальноеИмяСтандартногоРеквизита = "Description"
			ИЛИ УниверсальноеИмяСтандартногоРеквизита = "Parent"
			ИЛИ УниверсальноеИмяСтандартногоРеквизита = "IsFolder"
			ИЛИ УниверсальноеИмяСтандартногоРеквизита = "Owner"
			ИЛИ УниверсальноеИмяСтандартногоРеквизита = "Code" Тогда // Только эти выгружаются
			
			ОписаниеРеквизита = Новый Структура("Имя, Типы");
			ОписаниеРеквизита.Имя = Реквизит.Имя;
			ОписаниеРеквизита.Типы = Реквизит.Тип.Типы();
			
			МассивСтандартныхРеквизитов.Добавить(ОписаниеРеквизита);
			
		КонецЕсли;
			
	КонецЦикла;
	
	ВсеРеквизитыИТЧ.СтандартныеРеквизиты = Новый ФиксированныйМассив(МассивСтандартныхРеквизитов);
	
	// Реквизиты
	
	МассивРеквизитов = Новый Массив;
	
	Для каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
			
		ОписаниеРеквизита = Новый Структура("Имя, Типы, ДоступенДляГруппы, ДоступенДляЭлемента");
		ОписаниеРеквизита.Имя = Реквизит.Имя;
		ОписаниеРеквизита.Типы = Реквизит.Тип.Типы();
		ОписаниеРеквизита.ДоступенДляГруппы = (Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы ИЛИ Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента);
		ОписаниеРеквизита.ДоступенДляЭлемента = (Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента ИЛИ Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента);
		МассивРеквизитов.Добавить(ОписаниеРеквизита);
		
	КонецЦикла;
	
	ВсеРеквизитыИТЧ.Реквизиты = Новый ФиксированныйМассив(МассивРеквизитов);	
	
	// Табличные части
	
	МассивТабличныхЧастей = Новый Массив;
	
	Для каждого ТабличнаяЧасть Из МетаданныеСправочника.ТабличныеЧасти Цикл
		
		ОписаниеТЧ = Новый Структура("Имя, Реквизиты, ДоступенДляГруппы, ДоступенДляЭлемента");
		ОписаниеТЧ.Имя = ТабличнаяЧасть.Имя;
		ОписаниеТЧ.ДоступенДляГруппы = (ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы ИЛИ ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента);
		ОписаниеТЧ.ДоступенДляЭлемента = (ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента ИЛИ ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента);
		ОписаниеТЧ.Реквизиты = Новый Массив;
		Для каждого РеквизитТЧ Из ТабличнаяЧасть.Реквизиты Цикл	
			ОписаниеРеквизитаТЧ = Новый Структура("Имя, Типы");
			ОписаниеРеквизитаТЧ.Имя = РеквизитТЧ.Имя;
			ОписаниеРеквизитаТЧ.Типы = РеквизитТЧ.Тип.Типы();			
			ОписаниеТЧ.Реквизиты.Добавить(ОписаниеРеквизитаТЧ);			
		КонецЦикла;
		
		МассивТабличныхЧастей.Добавить(ОписаниеТЧ);
		
	КонецЦикла;
	
	ВсеРеквизитыИТЧ.ТабличныеЧасти = Новый ФиксированныйМассив(МассивТабличныхЧастей);
	
	// Возвращаем результат
	
	Возврат Новый ФиксированнаяСтруктура(ВсеРеквизитыИТЧ);
	
КонецФункции

Функция ЭтоИерархическийСправочник(ИмяСправочника) Экспорт
	
	МетаданныеСправочника = Метаданные.Справочники[ИмяСправочника];	
	Возврат МетаданныеСправочника.Иерархический; 	
	
КонецФункции

Функция ЭтоПодчиненныйСправочник(ИмяСправочника) Экспорт
	
	МетаданныеСправочника = Метаданные.Справочники[ИмяСправочника];	
	Возврат ?(МетаданныеСправочника.Владельцы.Количество() > 0, Истина, Ложь); 		
	
КонецФункции

Функция НастройкиYouTube() Экспорт
	
	НастройкиYouTubeСтрока = РегистрыСведений.ОбщиеНастройкиЭлектронногоОбучения.Значение("НастройкиYouTube");
	
	Если НЕ ЗначениеЗаполнено(НастройкиYouTubeСтрока) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
 	Чтение = Новый ЧтениеJSON;
    Чтение.УстановитьСтроку(НастройкиYouTubeСтрока);
	НастройкиYouTubeСтруктура = ПрочитатьJSON(Чтение, Ложь);
    Чтение.Закрыть();	
	
	Возврат Новый ФиксированнаяСтруктура(НастройкиYouTubeСтруктура);
	
КонецФункции

Функция ИспользуютсяОграниченияНаДоступКЭлектроннымКурсам() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Если НЕ УправлениеДоступом.ОграничиватьДоступНаУровнеЗаписей() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПрофилиГруппДоступаВидыДоступа.Ссылка
		|ИЗ
		|	Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ПрофилиГруппДоступаВидыДоступа
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ПрофилиГруппДоступаВидыДоступа.ВидДоступа) = ТИП(Справочник.СводыЗнанийСУЗ)";
	
	Возврат НЕ Запрос.Выполнить().Пустой();	
	
КонецФункции

Функция ЗначениеНастройкиЭлектронныхКурсов(ИмяНастройки) Экспорт
	Возврат РегистрыСведений.НастройкиЭлектронныхКурсов.Значение(ИмяНастройки);
КонецФункции

#КонецОбласти