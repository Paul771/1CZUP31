
#Область ПрограммныйИнтерфейс

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//	Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//										общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.12";
	Обработчик.Процедура = "ХарактеристикиПерсонала.УстановитьКонстантыПослеРазделенияФункциональныхОпций";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("7dbe9a32-09ac-4324-b813-b218b5c827cf");
	Обработчик.Комментарий = НСтр("ru = 'Установка константы ФО ""ИспользоватьЭлектронноеИнтервью"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.12";
	Обработчик.Процедура = "ХарактеристикиПерсонала.СоздатьХарактеристикиИзКомпетенций";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("c0849c2a-2e5a-4e4c-9268-cdaf0b444375");
	Обработчик.Комментарий = НСтр("ru = 'Создание характеристик персонала из компетенций.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.13";
	Обработчик.Процедура = "ХарактеристикиПерсонала.ПеренестиВопросыОценкиХарактеристикПерсонала";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("f60c1e91-92c4-4663-8989-d0f4d451e3ce");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение новой ТЧ ""ВопросыХарактеристик"" в мероприятии оценки 360°.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.13";
	Обработчик.Процедура = "ХарактеристикиПерсонала.ПеренестиОценкиОтветовНаВопросыАнкет";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("06170d20-85f4-455a-ac62-8edb5bf4606f");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение нового регистра сведений ""ОценкиОтветовНаВопросыАнкет"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.13";
	Обработчик.Процедура = "ХарактеристикиПерсонала.ПеренестиОценкиВариантовОтвета";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("045bbe52-25a7-4f42-96ea-e8966bdcfa53");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение нового регистра сведений ""ОценкиВариантовОтвета"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.13";
	Обработчик.Процедура = "ХарактеристикиПерсонала.ПеренестиРезультатыОценкиСотрудников";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a7ca9db5-1caf-4967-9ea2-546fcc96c869");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение нового регистра сведений ""РезультатыОценкиСотрудников"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.13";
	Обработчик.Процедура = "ХарактеристикиПерсонала.ЗаполнитьТабличныеЧастиХарактеристик";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("13d70e93-1734-4134-80fa-2d22cfafd572");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение табличных частей характеристик персонала.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.13";
	Обработчик.Процедура = "ХарактеристикиПерсонала.ЗаполнитьТабличнуюЧастьДействияСотрудниковВКадровомРезерве";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a3ba3310-a38c-4d94-b007-7fe253d8ff2e");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение табличной части ""Действия сотрудников"" в кадровом резерве.'");
	
КонецПроцедуры

#КонецОбласти

// Возвращает вид характеристики и его картинку
//
// Параметры:
//   Характеристика - ПланВидовХарактеристикСсылка.ХарактеристикиПерсонала - характеристика персонала, вид которой нужно
//                                                                           получить.
//
// ВозвращаемоеЗначение:
//   Структура - структура с видом переданной характеристики персонала и его картинкой.
//
Функция ВидИКартинкаХарактеристики(Характеристика) Экспорт
	
	ВидХарактеристики = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Характеристика, "ВидХарактеристики");
	КартинкаВида = КартинкаВидаХарактеристики(ВидХарактеристики);
	
	Результат = Новый Структура;
	Результат.Вставить("ВидХарактеристики", ВидХарактеристики);
	Результат.Вставить("Картинка", КартинкаВида);
	
	Возврат Результат;
	
КонецФункции

// Возвращает картинку вида характеристики персонала
//
// Параметры:
//   ВидХарактеристики - ПеречислениеСсылка.ВидыХарактеристикПерсонала - вид характеристики персонала, картинку которого
//                                                                       нужно получить.
//
// ВозвращаемоеЗначение:
//   Число - номер в коллекции картинки вида характеристики персонала.
//
Функция КартинкаВидаХарактеристики(ВидХарактеристики) Экспорт
	
	Если ВидХарактеристики = Перечисления.ВидыХарактеристикПерсонала.Знание Тогда
		НомерКартинки = 0;
	ИначеЕсли ВидХарактеристики = Перечисления.ВидыХарактеристикПерсонала.Навык Тогда
		НомерКартинки = 1;
	ИначеЕсли ВидХарактеристики = Перечисления.ВидыХарактеристикПерсонала.ЛичноеКачество Тогда
		НомерКартинки = 2;
	Иначе
		НомерКартинки = 3;
	КонецЕсли;
	
	Возврат НомерКартинки;
	
КонецФункции

// Возвращает массив структур со свойствами строк характеристик персонала.
//
// Параметры:
//   СписокДействий - Массив - действия.
//
// ВозвращаемоеЗначение:
//   Массив - Структуры с полями строк характеристик персонала.
//
Функция МассивСтруктурХарактеристикСоЗначениямиИзДействий(СписокДействий) Экспорт
	Возврат МассивСтруктурХарактеристикСоЗначениями(СписокДействий, "ДействияСотрудников.ХарактеристикиПерсонала");
КонецФункции

// Возвращает список удаляемых характеристик персонала при удалении действия сотрудника.
//
// Параметры:
//   УдаляемыеДействия - Массив - массив удаляемых действий.
//   ТаблицаДействий - общая таблица действий.
//   ТаблицаХарактеристик - общая таблица характеристик.
//   ТаблицаЗначений - общая таблица значений характеристик.
//
// ВозвращаемоеЗначение:
//   Таблица значений - удаляемые характеристики и их значения.
//		* Характеристика - характеристика персонала
//		* Значение - значение характеристики.
//
Функция ТаблицаУдаляемыхХарактеристикИЗначенийПоУдаляемымДействиям(УдаляемыеДействия, ТаблицаДействий, ТаблицаХарактеристик, ТаблицаЗначений) Экспорт
	
	Возврат ТаблицаУдаляемыхХарактеристикИЗначенийПоУдаляемымОснованиям(
		Справочники.ДействияСотрудников, 
		УдаляемыеДействия,
		ТаблицаДействий,
		ТаблицаХарактеристик,
		ТаблицаЗначений);
		
КонецФункции

// Находит или создает характеристику персонала и ее значения по наименованиям из макета Библиотека.
//
// Параметры:
//   Характеристика - строка - наименование характеристики персонала.
//   ЗначениеХарактеристики - строка - наименование значения характеристики.
//   БиблиотекаТаблица - ТаблицаЗначений - таблица характеристик персонала из библиотеки.
//
// ВозвращаемоеЗначение:
//   Структура - структура со ссылками на характеристику и ее значение.
//
Функция ХарактеристикаИзМакета(Характеристика, ЗначениеХарактеристики, БиблиотекаТаблица) Экспорт
	
	СтруктураВозврата = Новый Структура;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Наименование", Характеристика);
	СтрокиХарактеристики = БиблиотекаТаблица.НайтиСтроки(СтруктураПоиска);
	СтруктураПоиска.Вставить("НаименованиеЗначенияХарактеристики", ЗначениеХарактеристики);
	СтрокиЗначения = БиблиотекаТаблица.НайтиСтроки(СтруктураПоиска);
	Если СтрокиЗначения.Количество() > 0 Тогда
		РеквизитДопУпорядочивания = СтрокиЗначения[0].РеквизитДопУпорядочивания;
	Иначе
		РеквизитДопУпорядочивания = 0;
	КонецЕсли;
	
	ХарактеристикаСсылка = ПланыВидовХарактеристик.ХарактеристикиПерсонала.НайтиПоНаименованию(Характеристика, Истина);
	Если ЗначениеЗаполнено(ХарактеристикаСсылка) Тогда
		Если Не ЗначениеЗаполнено(ЗначениеХарактеристики) Тогда
			СтруктураВозврата.Вставить("Характеристика", ХарактеристикаСсылка);
			СтруктураВозврата.Вставить("Значение", Справочники.ЗначенияХарактеристикПерсонала.ПустаяСсылка());
			Возврат СтруктураВозврата;
		КонецЕсли;
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗначенияХарактеристикПерсонала.Ссылка
		|ИЗ
		|	Справочник.ЗначенияХарактеристикПерсонала КАК ЗначенияХарактеристикПерсонала
		|ГДЕ
		|	ЗначенияХарактеристикПерсонала.Владелец = &Владелец
		|	И ЗначенияХарактеристикПерсонала.Наименование = &Наименование
		|	И НЕ ЗначенияХарактеристикПерсонала.ПометкаУдаления";
		Запрос.УстановитьПараметр("Владелец", ХарактеристикаСсылка);
		Запрос.УстановитьПараметр("Наименование", ЗначениеХарактеристики);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗначениеХарактеристикиСсылка = Выборка.Ссылка;
		Иначе
			НовоеЗначение = Справочники.ЗначенияХарактеристикПерсонала.СоздатьЭлемент();
			НовоеЗначение.Владелец = ХарактеристикаСсылка;
			НовоеЗначение.Наименование = ЗначениеХарактеристики;
			НовоеЗначение.РеквизитДопУпорядочивания = РеквизитДопУпорядочивания;
			НовоеЗначение.Записать();
			ЗначениеХарактеристикиСсылка = НовоеЗначение.Ссылка;
		КонецЕсли;
		СтруктураВозврата.Вставить("Характеристика", ХарактеристикаСсылка);
		СтруктураВозврата.Вставить("Значение", ЗначениеХарактеристикиСсылка);
		
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Если СтрокиХарактеристики.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НоваяХарактеристика = ПланыВидовХарактеристик.ХарактеристикиПерсонала.СоздатьЭлемент();
	НоваяХарактеристика.Наименование = Характеристика;
	НоваяХарактеристика.ВидХарактеристики = Перечисления.ВидыХарактеристикПерсонала[СтрокиХарактеристики[0].ВидХарактеристики];
	НоваяХарактеристика.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ЗначенияХарактеристикПерсонала");
	НоваяХарактеристика.Записать();
	СтруктураВозврата.Вставить("Характеристика", НоваяХарактеристика.Ссылка);
	
	ЗначениеХарактеристикиСсылка = Справочники.ЗначенияХарактеристикПерсонала.ПустаяСсылка();
	Для Каждого ТекущаяСтрока Из СтрокиХарактеристики Цикл
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.НаименованиеЗначенияХарактеристики) Тогда
			Продолжить;
		КонецЕсли;
		
		НовоеЗначение = Справочники.ЗначенияХарактеристикПерсонала.СоздатьЭлемент();
		НовоеЗначение.Владелец = НоваяХарактеристика.Ссылка;
		НовоеЗначение.Наименование = ТекущаяСтрока.НаименованиеЗначенияХарактеристики;
		НовоеЗначение.РеквизитДопУпорядочивания = ТекущаяСтрока.РеквизитДопУпорядочивания;
		НовоеЗначение.Записать();
		
		Если ТекущаяСтрока.НаименованиеЗначенияХарактеристики = ЗначениеХарактеристики Тогда
			ЗначениеХарактеристикиСсылка = НовоеЗначение.Ссылка;
		КонецЕсли;
	КонецЦикла;
	СтруктураВозврата.Вставить("Значение", ЗначениеХарактеристикиСсылка);
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Находит или создает действие сотрудника по наименованию из макета Библиотека
//
// Параметры:
//   ДействиеСотрудника - строка - наименование действия сотрудника.
//   БиблиотекаТаблица - ТаблицаЗначений - таблица из библиотеки Действий сотрудников.
//   БиблиотекаХарактеристикТаблица - ТаблицаЗначений - таблица характеристик персонала из библиотеки.
//
// ВозвращаемоеЗначение:
//   СправочникСсылка.ДействияСотрудников - ссылка на действие сотрудника.
//
Функция ДействиеСотрудникаИзМакета(ДействиеСотрудника, БиблиотекаТаблица, БиблиотекаХарактеристикТаблица) Экспорт
	
	Если Не ЗначениеЗаполнено(ДействиеСотрудника) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДействиеСотрудникаСсылка = Справочники.ДействияСотрудников.НайтиПоНаименованию(ДействиеСотрудника, Истина);
	Если ЗначениеЗаполнено(ДействиеСотрудникаСсылка) Тогда
		Возврат ДействиеСотрудникаСсылка;
	КонецЕсли;
		
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Наименование", ДействиеСотрудника);
	СтрокиДействия = БиблиотекаТаблица.НайтиСтроки(СтруктураПоиска);
	
	Если СтрокиДействия.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НовоеДействие = Справочники.ДействияСотрудников.СоздатьЭлемент();
	НовоеДействие.Наименование = ДействиеСотрудника;
	Для Каждого ТекущаяСтрока Из СтрокиДействия Цикл
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) Тогда
			Продолжить;
		КонецЕсли;
		СтруктураХарактеристики = ХарактеристикиПерсонала.ХарактеристикаИзМакета(ТекущаяСтрока.Характеристика, ТекущаяСтрока.Значение, БиблиотекаХарактеристикТаблица);
		Если СтруктураХарактеристики = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрокаТЧ = НовоеДействие.ХарактеристикиПерсонала.Добавить();
		НоваяСтрокаТЧ.Характеристика = СтруктураХарактеристики.Характеристика;
		НоваяСтрокаТЧ.Значение = СтруктураХарактеристики.Значение;
		НоваяСтрокаТЧ.Вес = ТекущаяСтрока.Вес;
		НоваяСтрокаТЧ.ВесЗначения = ТекущаяСтрока.ВесЗначения;
		НоваяСтрокаТЧ.ТребуетсяОбучение = ТекущаяСтрока.ТребуетсяОбучение;
		НоваяСтрокаТЧ.ТребуетсяПроверка = ТекущаяСтрока.ТребуетсяПроверка;
	КонецЦикла;
	НовоеДействие.Записать();
	Возврат НовоеДействие.Ссылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает список удаляемых характеристик персонала при удалении действия сотрудника.
//
// Параметры:
//   УдаляемыеКомпетенции - Массив - массив удаляемых компетенций.
//   ТаблицаОснований - общая таблица оснований для характеристик.
//   ТаблицаХарактеристик - общая таблица характеристик.
//   ТаблицаЗначений - общая таблица значений характеристик.
//
// ВозвращаемоеЗначение:
//   Таблица значений - удаляемые характеристики и их значения.
//		* Характеристика - характеристика персонала
//		* Значение - значение характеристики.
//
Функция ТаблицаУдаляемыхХарактеристикИЗначенийПоУдаляемымОснованиям(МенеджерСправочника, УдаляемыеОснования, ТаблицаОснований, ТаблицаХарактеристик, ТаблицаЗначений)
	
	УдаляемыеХарактеристики = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОснований.ИмяПоля КАК Основание
		|ПОМЕСТИТЬ ВТВсеОснования
		|ИЗ
		|	&ТаблицаОснований КАК ТаблицаОснований
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаХарактеристик.Характеристика КАК ХарактеристикаОснования
		|ПОМЕСТИТЬ ВТХарактеристики
		|ИЗ
		|	&ТаблицаХарактеристик КАК ТаблицаХарактеристик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначений.Характеристика КАК ХарактеристикаОснования,
		|	ТаблицаЗначений.Значение КАК ЗначениеХарактеристики
		|ПОМЕСТИТЬ ВТЗначения
		|ИЗ
		|	&ТаблицаЗначений КАК ТаблицаЗначений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Характеристики.ХарактеристикаОснования КАК ХарактеристикаОснования,
		|	Значения.ЗначениеХарактеристики КАК ЗначениеХарактеристики
		|ПОМЕСТИТЬ ВТВсеХарактеристики
		|ИЗ
		|	ВТХарактеристики КАК Характеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначения КАК Значения
		|		ПО Характеристики.ХарактеристикаОснования = Значения.ХарактеристикаОснования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТВсеОснования.Основание КАК Основание,
		|	ТЧОснованияХарактеристикиПерсонала.Характеристика КАК ХарактеристикаОснования,
		|	ТЧОснованияХарактеристикиПерсонала.Значение КАК ЗначениеХарактеристики
		|ПОМЕСТИТЬ ВТВсеОснованияХарактеристики
		|ИЗ
		|	ВТВсеОснования КАК ВТВсеОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КомпетенцииПерсонала.ХарактеристикиПерсонала КАК ТЧОснованияХарактеристикиПерсонала
		|		ПО ВТВсеОснования.Основание = ТЧОснованияХарактеристикиПерсонала.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеОснованияХарактеристики.Основание КАК Основание,
		|	ВсеОснованияХарактеристики.ХарактеристикаОснования КАК ХарактеристикаОснования,
		|	ВсеОснованияХарактеристики.ЗначениеХарактеристики КАК ЗначениеХарактеристики
		|ПОМЕСТИТЬ ВТУдаляемыеОснования
		|ИЗ
		|	ВТВсеОснованияХарактеристики КАК ВсеОснованияХарактеристики
		|ГДЕ
		|	ВсеОснованияХарактеристики.Основание В(&УдаляемыеОснования)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВсеОснованияХарактеристики.Основание КАК Основание,
		|	ВТВсеОснованияХарактеристики.ХарактеристикаОснования КАК ХарактеристикаОснования,
		|	ВТВсеОснованияХарактеристики.ЗначениеХарактеристики КАК ЗначениеХарактеристики
		|ПОМЕСТИТЬ ВТОставшиесяОснования
		|ИЗ
		|	ВТВсеОснованияХарактеристики КАК ВТВсеОснованияХарактеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдаляемыеОснования КАК ВТУдаляемыеОснования
		|		ПО ВТВсеОснованияХарактеристики.Основание = ВТУдаляемыеОснования.Основание
		|ГДЕ
		|	ВТУдаляемыеОснования.Основание ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВсеХарактеристики.ХарактеристикаОснования КАК Характеристика,
		|	ВТВсеХарактеристики.ЗначениеХарактеристики КАК Значение
		|ИЗ
		|	ВТВсеХарактеристики КАК ВТВсеХарактеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдаляемыеОснования КАК ВТУдаляемыеОснования
		|		ПО ВТВсеХарактеристики.ХарактеристикаОснования = ВТУдаляемыеОснования.ХарактеристикаОснования
		|			И ВТВсеХарактеристики.ЗначениеХарактеристики = ВТУдаляемыеОснования.ЗначениеХарактеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОставшиесяОснования КАК ВТОставшиесяОснования
		|		ПО ВТВсеХарактеристики.ХарактеристикаОснования = ВТОставшиесяОснования.ХарактеристикаОснования
		|			И ВТВсеХарактеристики.ЗначениеХарактеристики = ВТОставшиесяОснования.ЗначениеХарактеристики
		|ГДЕ
		|	ВТОставшиесяОснования.Основание ЕСТЬ NULL
		|	И НЕ ВТУдаляемыеОснования.Основание ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("УдаляемыеОснования", УдаляемыеОснования);
	Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
	Запрос.УстановитьПараметр("ТаблицаХарактеристик", ТаблицаХарактеристик);
	Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);
	
	Если МенеджерСправочника = Справочники.КомпетенцииПерсонала Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаОснований.ИмяПоля КАК Основание", "ТаблицаОснований.Компетенция КАК Основание");
	ИначеЕсли МенеджерСправочника = Справочники.ДействияСотрудников Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаОснований.ИмяПоля КАК Основание", "ТаблицаОснований.ДействиеСотрудника КАК Основание");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КомпетенцииПерсонала.ХарактеристикиПерсонала", "ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДействияСотрудников.ХарактеристикиПерсонала");
	Иначе
		Возврат УдаляемыеХарактеристики;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВозвращаемыйМассив = ОбщегоНазначения.ТаблицаЗначенийВМассив(РезультатЗапроса.Выгрузить());
	
	Возврат ВозвращаемыйМассив;
	
КонецФункции

#Область ОбработчикиОбновления

Процедура УстановитьКонстантыПослеРазделенияФункциональныхОпций(ПараметрыОбновления = Неопределено) Экспорт

	ЗаписьРегистра = РегистрыСведений.УдалитьНастройкиОценкиПерсоналаПоХарактеристикам.Получить();
	Константы.ИспользоватьЭлектронноеИнтервью.Установить(ЗаписьРегистра.ИспользоватьОценкуПерсоналаПоХарактеристикам);
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);

КонецПроцедуры

// Создает элементы ПВХ "Характеристики персонала", аналогичные компетенциям сотрудника.
// 
Процедура СоздатьХарактеристикиИзКомпетенций(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.Ссылка КАК Компетенция,
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВТНайденыСоответствия
		|ИЗ
		|	Справочник.КомпетенцииПерсонала.ХарактеристикиПерсонала КАК КомпетенцииПерсоналаХарактеристикиПерсонала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпетенцииПерсонала.Ссылка КАК Компетенция,
		|	СуществующиеХарактеристики.Ссылка КАК Характеристика
		|ПОМЕСТИТЬ ВТКомпетенцииССовпадающимиНаименованиями
		|ИЗ
		|	Справочник.КомпетенцииПерсонала КАК КомпетенцииПерсонала
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ХарактеристикиПерсонала КАК СуществующиеХарактеристики
		|		ПО КомпетенцииПерсонала.Наименование = СуществующиеХарактеристики.Наименование
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНайденыСоответствия КАК ВТНайденыСоответствия
		|		ПО КомпетенцииПерсонала.Ссылка = ВТНайденыСоответствия.Компетенция
		|ГДЕ
		|	ВТНайденыСоответствия.Компетенция ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпетенцииПерсонала.Ссылка КАК Компетенция,
		|	КомпетенцииПерсонала.Наименование КАК КомпетенцияНаименование
		|ИЗ
		|	Справочник.КомпетенцииПерсонала КАК КомпетенцииПерсонала
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНайденыСоответствия КАК ВТНайденыСоответствия
		|		ПО КомпетенцииПерсонала.Ссылка = ВТНайденыСоответствия.Компетенция
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКомпетенцииССовпадающимиНаименованиями КАК ВТКомпетенцииССовпадающимиНаименованиями
		|		ПО КомпетенцииПерсонала.Ссылка = ВТКомпетенцииССовпадающимиНаименованиями.Компетенция
		|ГДЕ
		|	ВТКомпетенцииССовпадающимиНаименованиями.Компетенция ЕСТЬ NULL
		|	И ВТНайденыСоответствия.Компетенция ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНайденыСоответствия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКомпетенцииССовпадающимиНаименованиями";
	
	РезультатСоздать = Запрос.Выполнить();
	
	Выборка = РезультатСоздать.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяХарактеристика = ПланыВидовХарактеристик.ХарактеристикиПерсонала.СоздатьЭлемент();
		
		НоваяХарактеристика.Наименование = Выборка.КомпетенцияНаименование;
		НоваяХарактеристика.ВидХарактеристики = ПредопределенноеЗначение("Перечисление.ВидыХарактеристикПерсонала.ЛичноеКачество");
		
		НоваяХарактеристика.ОбменДанными.Загрузка = Истина;
		НоваяХарактеристика.Записать();
	КонецЦикла; 
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ПеренестиВопросыОценкиХарактеристикПерсонала(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТСоответствиеКомпетенцийХарактеристик(Запрос.МенеджерВременныхТаблиц, ПредопределенноеЗначение("Перечисление.ВидыХарактеристикПерсонала.ЛичноеКачество"));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеКомпетенцийХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|	УдалитьВопросыОценкиКомпетенций.Вопрос КАК Вопрос
		|ПОМЕСТИТЬ ВТВопросыХарактеристик
		|ИЗ
		|	РегистрСведений.УдалитьВопросыОценкиКомпетенций КАК УдалитьВопросыОценкиКомпетенций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеКомпетенцийХарактеристик КАК СоответствиеКомпетенцийХарактеристик
		|		ПО УдалитьВопросыОценкиКомпетенций.Компетенция = СоответствиеКомпетенцийХарактеристик.Компетенция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВопросыХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|	ВТВопросыХарактеристик.Вопрос КАК Вопрос
		|ИЗ
		|	ВТВопросыХарактеристик КАК ВТВопросыХарактеристик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВопросыОценкиХарактеристикПерсонала КАК ВопросыОценкиХарактеристикПерсонала
		|		ПО ВТВопросыХарактеристик.ХарактеристикаПерсонала = ВопросыОценкиХарактеристикПерсонала.ХарактеристикаПерсонала
		|			И ВТВопросыХарактеристик.Вопрос = ВопросыОценкиХарактеристикПерсонала.Вопрос
		|ГДЕ
		|	ВопросыОценкиХарактеристикПерсонала.ХарактеристикаПерсонала ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВопросыХарактеристик";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ВопросыОценкиХарактеристикПерсонала.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ХарактеристикаПерсонала.Установить(Выборка.ХарактеристикаПерсонала);
		НаборЗаписей.Отбор.Вопрос.Установить(Выборка.Вопрос);
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ПеренестиОценкиОтветовНаВопросыАнкет(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТСоответствиеКомпетенцийХарактеристик(Запрос.МенеджерВременныхТаблиц, ПредопределенноеЗначение("Перечисление.ВидыХарактеристикПерсонала.ЛичноеКачество"));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УдалитьОценкиОтветовНаВопросыАнкет.Мероприятие КАК Мероприятие,
		|	УдалитьОценкиОтветовНаВопросыАнкет.ФизическоеЛицо КАК ФизическоеЛицо,
		|	УдалитьОценкиОтветовНаВопросыАнкет.Респондент КАК Респондент,
		|	СоответствиеКомпетенцийХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|	УдалитьОценкиОтветовНаВопросыАнкет.Вопрос КАК Вопрос,
		|	УдалитьОценкиОтветовНаВопросыАнкет.Оценка КАК Оценка,
		|	УдалитьОценкиОтветовНаВопросыАнкет.РольРеспондента КАК РольРеспондента
		|ПОМЕСТИТЬ ВТВопросыХарактеристик
		|ИЗ
		|	РегистрСведений.УдалитьОценкиОтветовНаВопросыАнкет КАК УдалитьОценкиОтветовНаВопросыАнкет
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеКомпетенцийХарактеристик КАК СоответствиеКомпетенцийХарактеристик
		|		ПО УдалитьОценкиОтветовНаВопросыАнкет.Компетенция = СоответствиеКомпетенцийХарактеристик.Компетенция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВопросыХарактеристик.Мероприятие КАК Мероприятие,
		|	ВТВопросыХарактеристик.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТВопросыХарактеристик.Респондент КАК Респондент,
		|	ВТВопросыХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|	ВТВопросыХарактеристик.Вопрос КАК Вопрос,
		|	ВТВопросыХарактеристик.Оценка КАК Оценка,
		|	ВТВопросыХарактеристик.РольРеспондента КАК РольРеспондента
		|ИЗ
		|	ВТВопросыХарактеристик КАК ВТВопросыХарактеристик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОценкиОтветовНаВопросыАнкет КАК ОценкиОтветовНаВопросыАнкет
		|		ПО ВТВопросыХарактеристик.Мероприятие = ОценкиОтветовНаВопросыАнкет.Мероприятие
		|			И ВТВопросыХарактеристик.Вопрос = ОценкиОтветовНаВопросыАнкет.Вопрос
		|			И ВТВопросыХарактеристик.ФизическоеЛицо = ОценкиОтветовНаВопросыАнкет.ФизическоеЛицо
		|			И ВТВопросыХарактеристик.Респондент = ОценкиОтветовНаВопросыАнкет.Респондент
		|			И ВТВопросыХарактеристик.ХарактеристикаПерсонала = ОценкиОтветовНаВопросыАнкет.ХарактеристикаПерсонала
		|			И ВТВопросыХарактеристик.Вопрос = ОценкиОтветовНаВопросыАнкет.Вопрос
		|ГДЕ
		|	ОценкиОтветовНаВопросыАнкет.ХарактеристикаПерсонала ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВопросыХарактеристик";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ОценкиОтветовНаВопросыАнкет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Мероприятие.Установить(Выборка.Мероприятие);
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		НаборЗаписей.Отбор.Респондент.Установить(Выборка.Респондент);
		НаборЗаписей.Отбор.ХарактеристикаПерсонала.Установить(Выборка.ХарактеристикаПерсонала);
		НаборЗаписей.Отбор.Вопрос.Установить(Выборка.Вопрос);
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ПеренестиОценкиВариантовОтвета(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТСоответствиеКомпетенцийХарактеристик(Запрос.МенеджерВременныхТаблиц, ПредопределенноеЗначение("Перечисление.ВидыХарактеристикПерсонала.ЛичноеКачество"));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УдалитьОценкиВариантовОтвета.ВариантОтвета КАК ВариантОтвета,
		|	СоответствиеКомпетенцийХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|	УдалитьОценкиВариантовОтвета.Вопрос КАК Вопрос,
		|	УдалитьОценкиВариантовОтвета.ОценкаОтвета КАК ОценкаОтвета
		|ПОМЕСТИТЬ ВТВопросыХарактеристик
		|ИЗ
		|	РегистрСведений.УдалитьОценкиВариантовОтвета КАК УдалитьОценкиВариантовОтвета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеКомпетенцийХарактеристик КАК СоответствиеКомпетенцийХарактеристик
		|		ПО УдалитьОценкиВариантовОтвета.Компетенция = СоответствиеКомпетенцийХарактеристик.Компетенция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВопросыХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|	ВТВопросыХарактеристик.Вопрос КАК Вопрос,
		|	ВТВопросыХарактеристик.ВариантОтвета КАК ВариантОтвета,
		|	ВТВопросыХарактеристик.ОценкаОтвета КАК ОценкаОтвета
		|ИЗ
		|	ВТВопросыХарактеристик КАК ВТВопросыХарактеристик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОценкиВариантовОтвета КАК ОценкиВариантовОтвета
		|		ПО ВТВопросыХарактеристик.ХарактеристикаПерсонала = ОценкиВариантовОтвета.ХарактеристикаПерсонала
		|			И ВТВопросыХарактеристик.Вопрос = ОценкиВариантовОтвета.Вопрос
		|			И ВТВопросыХарактеристик.ВариантОтвета = ОценкиВариантовОтвета.ВариантОтвета
		|ГДЕ
		|	ОценкиВариантовОтвета.ХарактеристикаПерсонала ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВопросыХарактеристик";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ОценкиВариантовОтвета.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ХарактеристикаПерсонала.Установить(Выборка.ХарактеристикаПерсонала);
		НаборЗаписей.Отбор.Вопрос.Установить(Выборка.Вопрос);
		НаборЗаписей.Отбор.ВариантОтвета.Установить(Выборка.ВариантОтвета);
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ПеренестиРезультатыОценкиСотрудников(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТСоответствиеКомпетенцийХарактеристик(Запрос.МенеджерВременныхТаблиц, ПредопределенноеЗначение("Перечисление.ВидыХарактеристикПерсонала.ЛичноеКачество"));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УдалитьРезультатыОценкиСотрудников.Мероприятие КАК Мероприятие,
		|	СоответствиеКомпетенцийХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|	УдалитьРезультатыОценкиСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	УдалитьРезультатыОценкиСотрудников.Оценка КАК Оценка,
		|	УдалитьРезультатыОценкиСотрудников.КоличествоРеспондентов КАК КоличествоРеспондентов,
		|	УдалитьРезультатыОценкиСотрудников.Рейтинг КАК Рейтинг
		|ПОМЕСТИТЬ ВТВопросыХарактеристик
		|ИЗ
		|	РегистрСведений.УдалитьРезультатыОценкиСотрудников КАК УдалитьРезультатыОценкиСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеКомпетенцийХарактеристик КАК СоответствиеКомпетенцийХарактеристик
		|		ПО УдалитьРезультатыОценкиСотрудников.Компетенция = СоответствиеКомпетенцийХарактеристик.Компетенция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВопросыХарактеристик.Мероприятие КАК Мероприятие,
		|	ВТВопросыХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала,
		|	ВТВопросыХарактеристик.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТВопросыХарактеристик.Оценка КАК Оценка,
		|	ВТВопросыХарактеристик.КоличествоРеспондентов КАК КоличествоРеспондентов,
		|	ВТВопросыХарактеристик.Рейтинг КАК Рейтинг
		|ИЗ
		|	ВТВопросыХарактеристик КАК ВТВопросыХарактеристик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатыОценкиСотрудников КАК РезультатыОценкиСотрудников
		|		ПО ВТВопросыХарактеристик.ХарактеристикаПерсонала = РезультатыОценкиСотрудников.ХарактеристикаПерсонала
		|			И ВТВопросыХарактеристик.ФизическоеЛицо = РезультатыОценкиСотрудников.ФизическоеЛицо
		|			И ВТВопросыХарактеристик.Мероприятие = РезультатыОценкиСотрудников.Мероприятие
		|ГДЕ
		|	РезультатыОценкиСотрудников.ХарактеристикаПерсонала ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВопросыХарактеристик";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.РезультатыОценкиСотрудников.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Мероприятие.Установить(Выборка.Мероприятие);
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		НаборЗаписей.Отбор.ХарактеристикаПерсонала.Установить(Выборка.ХарактеристикаПерсонала);
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТабличныеЧастиХарактеристик(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТСоответствиеКомпетенцийХарактеристик(Запрос.МенеджерВременныхТаблиц);
	
	ЗаполнитьТабличныеЧастиХарактеристикОбъектов(Запрос.МенеджерВременныхТаблиц, "Справочник.МероприятияОбученияРазвития");
	ЗаполнитьТабличныеЧастиХарактеристикОбъектов(Запрос.МенеджерВременныхТаблиц, "Справочник.КадровыйРезерв");
	ЗаполнитьТабличныеЧастиХарактеристикОбъектов(Запрос.МенеджерВременныхТаблиц, "Документ.ЗаявкаНаВключениеВПланОбучения");
	ЗаполнитьТабличныеЧастиХарактеристикОбъектов(Запрос.МенеджерВременныхТаблиц, "Документ.ЗаявкаНаОбучениеРазвитие");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТСоответствиеКомпетенцийХарактеристик(Запрос.МенеджерВременныхТаблиц, ПредопределенноеЗначение("Перечисление.ВидыХарактеристикПерсонала.ЛичноеКачество"));
	
	ЗаполнитьВопросыХарактеристикМероприятияОценкиПерсонала(Запрос.МенеджерВременныхТаблиц);
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьДействияСотрудниковВКадровомРезерве(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадровыйРезервДолжности.Ссылка КАК Ссылка,
		|	КадровыйРезервДолжности.Должность КАК Должность
		|ПОМЕСТИТЬ ВТДолжности
		|ИЗ
		|	Справочник.КадровыйРезерв.Должности КАК КадровыйРезервДолжности
		|ГДЕ
		|	КадровыйРезервДолжности.Ссылка.Назначение = &НазначениеГруппаРезерва
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КадровыйРезерв.Ссылка,
		|	КадровыйРезерв.ПозицияШтатногоРасписания.Должность
		|ИЗ
		|	Справочник.КадровыйРезерв КАК КадровыйРезерв
		|ГДЕ
		|	КадровыйРезерв.Назначение = &НазначениеПозицияШР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТДолжности.Ссылка КАК Ссылка,
		|	ПрофилиДолжностейДействияСотрудников.ДействиеСотрудника КАК ДействиеСотрудника
		|ПОМЕСТИТЬ ВТДолжноБыть
		|ИЗ
		|	Справочник.ПрофилиДолжностей.ДействияСотрудников КАК ПрофилиДолжностейДействияСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДолжности КАК ВТДолжности
		|		ПО ПрофилиДолжностейДействияСотрудников.Ссылка.Должность = ВТДолжности.Должность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДолжноБыть.Ссылка КАК Ссылка,
		|	ВТДолжноБыть.ДействиеСотрудника КАК ДействиеСотрудника
		|ИЗ
		|	ВТДолжноБыть КАК ВТДолжноБыть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КадровыйРезерв.ДействияСотрудников КАК КадровыйРезервДействияСотрудников
		|		ПО ВТДолжноБыть.Ссылка = КадровыйРезервДействияСотрудников.Ссылка
		|			И ВТДолжноБыть.ДействиеСотрудника = КадровыйРезервДействияСотрудников.ДействиеСотрудника
		|ГДЕ
		|	КадровыйРезервДействияСотрудников.ДействиеСотрудника ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДолжноБыть
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДолжности";
	
	Запрос.УстановитьПараметр("НазначениеГруппаРезерва", ПредопределенноеЗначение("Перечисление.НазначенияКадровогоРезерва.ГруппаКадровогоРезерва"));
	Запрос.УстановитьПараметр("НазначениеПозицияШР", ПредопределенноеЗначение("Перечисление.НазначенияКадровогоРезерва.ПозицияШтатногоРасписания"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ЗаписываемыйОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ЗаписываемыйОбъект.ДействияСотрудников.Добавить(), Выборка);
		КонецЦикла;
		ЗаписываемыйОбъект.ОбменДанными.Загрузка = Истина;
		ЗаписываемыйОбъект.Записать();
	КонецЦикла;

	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьТабличныеЧастиХарактеристикОбъектов(МенеджерВременныхТаблиц, ИмяОбъекта = "Справочник.МероприятияОбученияРазвития")

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МероприятияОбученияРазвитияУдалитьКомпетенции.Ссылка КАК Ссылка,
		|	СоответствиеКомпетенцийХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала
		|ПОМЕСТИТЬ ВТДолжно
		|ИЗ
		|	Справочник.МероприятияОбученияРазвития.УдалитьКомпетенции КАК МероприятияОбученияРазвитияУдалитьКомпетенции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеКомпетенцийХарактеристик КАК СоответствиеКомпетенцийХарактеристик
		|		ПО МероприятияОбученияРазвитияУдалитьКомпетенции.Компетенция = СоответствиеКомпетенцийХарактеристик.Компетенция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДолжно.Ссылка КАК Ссылка,
		|	ВТДолжно.ХарактеристикаПерсонала КАК Характеристика
		|ИЗ
		|	ВТДолжно КАК ВТДолжно
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МероприятияОбученияРазвития.ХарактеристикиПерсонала КАК МероприятияОбученияРазвитияХарактеристикиПерсонала
		|		ПО ВТДолжно.Ссылка = МероприятияОбученияРазвитияХарактеристикиПерсонала.Ссылка
		|			И ВТДолжно.ХарактеристикаПерсонала = МероприятияОбученияРазвитияХарактеристикиПерсонала.Характеристика
		|ГДЕ
		|	МероприятияОбученияРазвитияХарактеристикиПерсонала.Характеристика ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДолжно";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.МероприятияОбученияРазвития", ИмяОбъекта);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ЗаписываемыйОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ЗаписываемыйОбъект.ХарактеристикиПерсонала.Добавить(), Выборка);
		КонецЦикла;
		
		ЗаписываемыйОбъект.ОбменДанными.Загрузка = Истина;
		Если СтрНайти(ИмяОбъекта, "Документ.") <> 0 Тогда
			ЗаписываемыйОбъект.Записать(РежимЗаписиДокумента.Запись);
		ИначеЕсли СтрНайти(ИмяОбъекта, "Справочник.") <> 0 Тогда
			ЗаписываемыйОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВопросыХарактеристикМероприятияОценкиПерсонала(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МероприятияОценкиПерсоналаУдалитьВопросыКомпетенций.Ссылка КАК Ссылка,
		|	МероприятияОценкиПерсоналаУдалитьВопросыКомпетенций.Вопрос КАК Вопрос,
		|	СоответствиеКомпетенцийХарактеристик.ХарактеристикаПерсонала КАК ХарактеристикаПерсонала
		|ПОМЕСТИТЬ ВТДолжно
		|ИЗ
		|	Справочник.МероприятияОценкиПерсонала.УдалитьВопросыКомпетенций КАК МероприятияОценкиПерсоналаУдалитьВопросыКомпетенций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеКомпетенцийХарактеристик КАК СоответствиеКомпетенцийХарактеристик
		|		ПО МероприятияОценкиПерсоналаУдалитьВопросыКомпетенций.Компетенция = СоответствиеКомпетенцийХарактеристик.Компетенция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДолжно.Ссылка КАК Ссылка,
		|	ВТДолжно.ХарактеристикаПерсонала,
		|	ВТДолжно.Вопрос КАК Вопрос
		|ИЗ
		|	ВТДолжно КАК ВТДолжно
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МероприятияОценкиПерсонала.ВопросыХарактеристик КАК МероприятияОценкиПерсоналаВопросыХарактеристик
		|		ПО ВТДолжно.Ссылка = МероприятияОценкиПерсоналаВопросыХарактеристик.Ссылка
		|			И ВТДолжно.ХарактеристикаПерсонала = МероприятияОценкиПерсоналаВопросыХарактеристик.ХарактеристикаПерсонала
		|ГДЕ
		|	МероприятияОценкиПерсоналаВопросыХарактеристик.ХарактеристикаПерсонала ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДолжно";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ЗаписываемыйОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ЗаписываемыйОбъект.ВопросыХарактеристик.Добавить(), Выборка);
		КонецЦикла;
		ЗаписываемыйОбъект.ОбменДанными.Загрузка = Истина;
		ЗаписываемыйОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

// Возвращает массив структур со свойствами строк характеристик персонала.
//
// Параметры:
//   СписокСсылок - Массив - список ссылок-отборов.
//
// ВозвращаемоеЗначение:
//   Массив - Структуры с полями строк характеристик персонала.
//
Функция МассивСтруктурХарактеристикСоЗначениями(СписокСсылок, СтрокаИсточника = "КомпетенцииПерсонала.ХарактеристикиПерсонала")
	
	МассивСтруктурХарактеристик = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.Характеристика КАК Характеристика,
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.Значение КАК Значение,
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.Вес КАК Вес,
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.ТребуетсяПроверка КАК ТребуетсяПроверка,
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.ТребуетсяОбучение КАК ТребуетсяОбучение,
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.ВесЗначения КАК ВесЗначения
		|ИЗ
		|	Справочник.КомпетенцииПерсонала.ХарактеристикиПерсонала КАК КомпетенцииПерсоналаХарактеристикиПерсонала
		|ГДЕ
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.Ссылка В(&СписокСсылок)";
	Запрос.УстановитьПараметр("СписокСсылок", СписокСсылок);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "КомпетенцииПерсонала.ХарактеристикиПерсонала", СтрокаИсточника);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураХарактеристик = ОписаниеСтруктурыХарактеристик();
		ЗаполнитьЗначенияСвойств(СтруктураХарактеристик, Выборка);
		МассивСтруктурХарактеристик.Добавить(СтруктураХарактеристик);
	КонецЦикла;
	
	Возврат МассивСтруктурХарактеристик;
	
КонецФункции

Функция ОписаниеСтруктурыХарактеристик()

	СтруктураХарактеристик = Новый Структура;
	
	СтруктураХарактеристик.Вставить("Характеристика");
	СтруктураХарактеристик.Вставить("Значение");
	СтруктураХарактеристик.Вставить("Вес");
	СтруктураХарактеристик.Вставить("ТребуетсяПроверка");
	СтруктураХарактеристик.Вставить("ТребуетсяОбучение");
	СтруктураХарактеристик.Вставить("ВесЗначения");
	
	Возврат СтруктураХарактеристик;
	
КонецФункции

// Создает элементы ПВХ "Характеристики персонала", аналогичные компетенциям сотрудника.
// 
Процедура СоздатьВТСоответствиеКомпетенцийХарактеристик(МенеджерВременныхТаблиц, ВидХарактеристикиОтбор = Неопределено)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.Ссылка КАК Компетенция,
		|	КомпетенцииПерсоналаХарактеристикиПерсонала.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВТНайденыСоответствия
		|ИЗ
		|	Справочник.КомпетенцииПерсонала.ХарактеристикиПерсонала КАК КомпетенцииПерсоналаХарактеристикиПерсонала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпетенцииПерсонала.Ссылка КАК Компетенция,
		|	СуществующиеХарактеристики.Ссылка КАК Характеристика
		|ПОМЕСТИТЬ ВТКомпетенцииХарактеристики
		|ИЗ
		|	Справочник.КомпетенцииПерсонала КАК КомпетенцииПерсонала
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ХарактеристикиПерсонала КАК СуществующиеХарактеристики
		|		ПО КомпетенцииПерсонала.Наименование = СуществующиеХарактеристики.Наименование
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНайденыСоответствия КАК ВТНайденыСоответствия
		|		ПО КомпетенцииПерсонала.Ссылка = ВТНайденыСоответствия.Компетенция
		|ГДЕ
		|	ВТНайденыСоответствия.Компетенция ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	НайденыСоответствия.Компетенция,
		|	НайденыСоответствия.Характеристика
		|ИЗ
		|	ВТНайденыСоответствия КАК НайденыСоответствия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпетенцииХарактеристики.Компетенция КАК Компетенция,
		|	КомпетенцииХарактеристики.Характеристика КАК ХарактеристикаПерсонала
		|ПОМЕСТИТЬ ВТСоответствиеКомпетенцийХарактеристик
		|ИЗ
		|	ВТКомпетенцииХарактеристики КАК КомпетенцииХарактеристики
		|ГДЕ
		|	&ОтборПоВидуХарактеристики
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКомпетенцииХарактеристики
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНайденыСоответствия";
	Если ВидХарактеристикиОтбор = Неопределено Тогда
		Запрос.УстановитьПараметр("ОтборПоВидуХарактеристики", Истина);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоВидуХарактеристики", "КомпетенцииХарактеристики.Характеристика.ВидХарактеристики = &ВидХарактеристикиОтбор");
		Запрос.УстановитьПараметр("ВидХарактеристикиОтбор", ВидХарактеристикиОтбор);
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти