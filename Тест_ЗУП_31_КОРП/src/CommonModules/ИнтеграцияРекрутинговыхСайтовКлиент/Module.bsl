
#Область СлужебныйПрограммныйИнтерфейс

// Загрузка откликов по вакансии с сайтов. Обрабатываются все настроенные сайты последовательно.
// 
// Параметры:
//  Вакансия - СправочникСсылка.Вакансии - Вакансия, отклики на которую требуется получить.
//
Процедура ПолучитьОтклики(Вакансия) Экспорт
	
	ИспользуемыеСайты = ИспользуемыеСайты();
	
	Если ИспользуемыеСайты = Неопределено Тогда
		ОтобразитьПредупреждение(НСтр("ru = 'Не включено использование ни одного рекрутингового сайта. Включить использование сайтов можно в персональных настройках.'"));
		Возврат;
	КонецЕсли;
	
	Для Каждого Сайт Из ИспользуемыеСайты Цикл
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Вакансия", Вакансия);
		ДополнительныеПараметры.Вставить("Сайт", Сайт);
		
		ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ПолучитьОтклики(Сайт, ДополнительныеПараметры);
		
	КонецЦикла;
	
КонецПроцедуры

// Создает кандидата по идентификатору резюме. Идентификатор резюме зависит от сайта.
//
// Параметры:
//  ИдентификаторРезюме - Строка.
//  Сайт - СправочникСсылка.ИсточникиИнформацииОКандидатах - Сайт, с которого загружается кандидат.
//  Вакансия - СправочникСсылка.Вакансии - Вакансия, на которую ищется кандидат (может быть не заполнена).
//  Создано - Булево, признак того, что создание резюме выполнено.
//
Процедура СоздатьКандидатаПоРезюме(ИдентификаторРезюме, Сайт, Вакансия = Неопределено, Создано = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(ИдентификаторРезюме) Тогда
		Возврат;
	КонецЕсли;
		
	СтруктураДанныхКандидатаССайта = ИнтеграцияРекрутинговыхСайтовВызовСервера.СтруктураДанныхКандидатаССайта(Сайт, ИдентификаторРезюме);
	Если Не ЗначениеЗаполнено(СтруктураДанныхКандидатаССайта) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФормуКандидата(ПараметрыФормы, СтруктураДанныхКандидатаССайта, Сайт, Вакансия);
	
	Создано = Истина;
	
КонецПроцедуры

// Загружает вакансии с сайта.
//
// Параметры:
//  ИмяКоманды - Строка - Имя автоматически созданной команды загрузки вакансий формы списка вакансий.
//  СоответствиеКомандИСайтов - Соответствие - Соответствие команд формы и сайтов.
//  Форма - Управляемая форма - форма списка вакансий.
//
Процедура ЗагрузитьВакансииССайта(ИмяКоманды, СоответствиеКомандИСайтов, Форма) Экспорт
	
	Сайт = СоответствиеКомандИСайтов.Получить(ИмяКоманды);
	
	Если Не ЗначениеЗаполнено(Сайт) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Сайт", Сайт);
	ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ЗагрузитьВакансииССайта(Сайт, ДополнительныеПараметры);
	
КонецПроцедуры

// Опубликовывает вакансию на сайте.
//
// Параметры:
//  Форма - Управляемая форма - форма вакансий.
//  ИмяКоманды - Строка - Имя автоматически созданной команды публикации вакансий формы вакансии.
//  СоответствиеКомандИСайтов - Соответствие - Соответствие команд формы и сайтов.
//  Вакансия - СправочникСсылка.Вакансии - Вакансия, которую требуется опубликовать.
//
Процедура ОпубликоватьНаСайте(Форма, ИмяКоманды, СоответствиеКомандИСайтов, Вакансия) Экспорт
	
	Сайт = СоответствиеКомандИСайтов.Получить(ИмяКоманды);
	
	Если Не ЗначениеЗаполнено(Сайт) Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Вакансия", Вакансия);
	ДополнительныеПараметры.Вставить("Сайт", Сайт);
	ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ОпубликоватьНаСайте(Сайт, ДополнительныеПараметры);
	
КонецПроцедуры

// Создает кандидата по ссылке. Ссылка запрашивается у пользователя.
//
// Параметры:
//  Вакансия - СправочникСсылка.Вакансии - Вакансия, на которую ищется кандидат (может быть не заполнена).
//
Процедура СоздатьКандидатаПоСсылке(Вакансия = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Вакансия", Вакансия);
	
	СтрокаИзБуфера = "";
	
	Если Не ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
		
		ТипПлатформыКлиента = ОбщегоНазначенияКлиент.ТипПлатформыКлиента();
		Если ТипПлатформыКлиента = ТипПлатформы.Windows_x86 
			Или ТипПлатформыКлиента = ТипПлатформы.Windows_x86_64 Тогда
			
			Объект = Новый COMОбъект("htmlfile");
			СтрокаИзБуфера = Объект.ParentWindow.ClipboardData.Getdata("Text");
			
			Если ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(СтрокаИзБуфера, "hh.ru") = 0 
				И ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(СтрокаИзБуфера, "superjob.ru") = 0
				И ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(СтрокаИзБуфера, "rabota.ru") = 0
				И ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(СтрокаИзБуфера, "mail.ru") = 0 Тогда
				
				СтрокаИзБуфера = "";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.СоздатьКандидатаПоСсылке(СтрокаИзБуфера, ДополнительныеПараметры);
	
КонецПроцедуры

// Авторизация на сайте и загрузка справочников. Если сайт не указан, то происходит авторизация и загрузка справочников
// со всех доступных сайтов.
//
// Параметры:
//	Сайт - СправочникСсылка.ИсточникиИнформацииОКандидатах - Сайт, с которого нужно загрузить справочники.
//
Процедура ЗагрузкаКлассификаторов(Сайт = Неопределено) Экспорт
	
	Если Сайт = Неопределено Тогда
		
		ИспользуемыеСайты = ИспользуемыеСайты();
		
		Если ИспользуемыеСайты = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Для Каждого Сайт Из ИспользуемыеСайты Цикл
			АвторизацияИЗагрузкаКлассификаторовССайта(Сайт);
		КонецЦикла;
	Иначе
		АвторизацияИЗагрузкаКлассификаторовССайта(Сайт);
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму настройки публикации вакансии. Перед открытием формы происходит авторизация на сайте.
// 
// Параметры:
//  Форма - Управляемая форма - Форма-владелец отрываемых форм.
//  Вакансия - СправочникСсылка.Вакансии - Вакансия, которую требуется опубликовать.
//  Сайт - СправочникСсылка.ИсточникиИнформацииОКандидатах - Сайт, куда должна быть опубликована вакансия.
//
Процедура ОткрытьФормуНастройкиПубликацииАвторизация(Форма, Вакансия, Сайт) Экспорт
	
	Если Не ЗначениеЗаполнено(Сайт) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Вакансия", Вакансия);
	ДополнительныеПараметры.Вставить("Сайт", Сайт);
	ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ОпубликоватьНаСайте(Сайт, ДополнительныеПараметры);
	
КонецПроцедуры

// Выполняет авторизацию на сайте, если срок действия маркера доступа истек или не задан.
// 
// Параметры:
//  Сайт - СправочникСсылка.ИсточникиИнформацииОКандидатах - Сайт, на котором нужно выполнить авторизацию.
//  ИмяПользователя - Строка.
//  Пароль - Строка.
//
Процедура АвторизацияНаСайте(Сайт, ИмяПользователя = Неопределено, Пароль = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Сайт", Сайт);
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.АвторизацияНаСайте(Сайт, ИмяПользователя, Пароль, ДополнительныеПараметры);
	
КонецПроцедуры

// Открывает форму со страницей сайта для авторизации по протоколу OAuth 2.0.
// 
// Параметры:
//  Форма - Управляемая форма - Форма-владелец отрываемой формы.
//  Сайт - СправочникСсылка.ИсточникиИнформацииОКандидатах - Сайт, на котором нужно выполнить авторизацию.
//
Процедура ОткрытьФормуАвторизации(Форма, Сайт) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ОткрытьФормуАвторизации(Форма, Сайт);
	
КонецПроцедуры

// Открывает форму редактирования параметров доступа к сайтам
// 
// Параметры:
//  Форма - Управляемая форма - Форма-владелец отрываемой формы.
//
Процедура ОткрытьФормуРедактированияПараметровДоступаКСайтам(Форма) Экспорт
	ПараметрыФормы = Новый Структура;
	ОткрытьФормуОбработки("ОбщаяФорма.ПараметрыДоступаКРекрутинговымСайтам", ПараметрыФормы, Форма);
КонецПроцедуры

Функция ОткрытьСпециальнуюФормуРедактированияСписка(Форма, Путь, Список, Оповещение, Сайт = Неопределено) Экспорт
	
	Если Путь = "phones" 
		Или Путь = "contacts.phones" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СписокНомеров", Список);
		
		Возврат ОткрытьФормуОбработки("Обработка.ПубликацияВакансийНаРекрутинговыхСайтах.Форма.РедактированиеТелефона", ПараметрыФормы, Форма, Оповещение, Истина);
		
	ИначеЕсли Путь = "languages"
		Или Путь = "language" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СписокЯзыков", Список);
		ПараметрыФормы.Вставить("Сайт", Сайт);
		
		Возврат ОткрытьФормуОбработки("Обработка.ПубликацияВакансийНаРекрутинговыхСайтах.Форма.РедактированиеУровняВладенияЯзыками", ПараметрыФормы, Форма, Оповещение, Истина);
		
	КонецЕсли;
	
КонецФункции

Функция ОткрытьФормуРедактированияТекстаВHTML(Форма, Показатель, ТекстВHTML, Оповещение) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", Показатель);
	ПараметрыФормы.Вставить("ТекстВHTML", ТекстВHTML);
	
	Возврат ОткрытьФормуОбработки("Обработка.ПубликацияВакансийНаРекрутинговыхСайтах.Форма.РедактированиеТекстаВHTML", ПараметрыФормы, Форма, Оповещение, Истина);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МаркерДоступаАктивен(Сайт, ИмяПользователя) Экспорт 
	Возврат ИнтеграцияРекрутинговыхСайтовВызовСервера.МаркерДоступаАктивен(Сайт, ИмяПользователя);
КонецФункции

Функция ИспользуемыеСайты()
	Возврат ИнтеграцияРекрутинговыхСайтовВызовСервера.ИспользуемыеСайты();
КонецФункции

Процедура ОткрытьФормуКандидата(ПараметрыФормы, СтруктураДанныхКандидатаССайта, Сайт, Вакансия)
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ОткрытьФормуКандидата(ПараметрыФормы, СтруктураДанныхКандидатаССайта, Сайт, Вакансия);
	
КонецПроцедуры

Процедура ПолучитьОткликиАвторизацияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Истина Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось авторизоваться на сайте'") + " " + ДополнительныеПараметры.Сайт;
	КонецЕсли;
	
	ИнтеграцияРекрутинговыхСайтовВызовСервера.ПолучитьОтклики(ДополнительныеПараметры.Вакансия, ДополнительныеПараметры.Сайт);
	
КонецПроцедуры

Процедура ЗагрузитьВакансииССайтаАвторизацияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Истина Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось авторизоваться на сайте'") + " " + ДополнительныеПараметры.Сайт;
	КонецЕсли;
	
	МассивВакансий = ИнтеграцияРекрутинговыхСайтовВызовСервера.ВакансииССайта(ДополнительныеПараметры.Сайт);
	
	Если МассивВакансий <> Неопределено 
		И МассивВакансий.Количество() > 0 
		И МассивВакансий[0] <> Неопределено Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Вакансии", МассивВакансий);
		ПараметрыФормы.Вставить("Сайт", ДополнительныеПараметры.Сайт);
		
		ОткрытьФормуОбработки("Обработка.ПубликацияВакансийНаРекрутинговыхСайтах.Форма.ЗагрузкаВакансий", ПараметрыФормы, ДополнительныеПараметры.Форма);
		
	Иначе
		ОтобразитьПредупреждение(НСтр("ru = 'Нет вакансий для загрузки'"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпубликоватьНаСайтеАвторизацияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Истина Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось авторизоваться на сайте'") + " " + ДополнительныеПараметры.Сайт;
	КонецЕсли;

	ОткрытьФормуНастройкиПубликации(ДополнительныеПараметры.Форма, ДополнительныеПараметры.Вакансия, ДополнительныеПараметры.Сайт);
	
КонецПроцедуры	

Процедура СоздатьКандидатаПоСсылкеЗавершениеВводаСтроки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ИспользуемыеСайты = ИспользуемыеСайты();
	
	Если ИспользуемыеСайты = Неопределено Тогда
		ОтобразитьПредупреждение(НСтр("ru = 'Не включено использование ни одного рекрутингового сайта.'"));
		Возврат;
	КонецЕсли;
	
	Если ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(Результат, "hh.ru") 
		Или ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(Результат, "mail.ru") Тогда
		
		Если ИспользуемыеСайты.Найти(ИнтеграцияРекрутинговыхСайтовКлиентСервер.HeadHunter()) <> Неопределено Тогда
			Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.HeadHunter();
		Иначе
			ОтобразитьПредупреждение(НСтр("ru = 'Не включено использование сайта HeadHunter.'"));
			Возврат;
		КонецЕсли;
	ИначеЕсли ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(Результат, "rabota.ru") Тогда
		Если ИспользуемыеСайты.Найти(ИнтеграцияРекрутинговыхСайтовКлиентСервер.Rabota()) <> Неопределено Тогда
			Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.Rabota();
		Иначе
			ОтобразитьПредупреждение(НСтр("ru = 'Не включено использование сайта Rabota.'"));
			Возврат;
		КонецЕсли;
	ИначеЕсли ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(Результат, "superjob.ru") Тогда
		Если ИспользуемыеСайты.Найти(ИнтеграцияРекрутинговыхСайтовКлиентСервер.SuperJob()) <> Неопределено Тогда
			Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.SuperJob();
		Иначе
			ОтобразитьПредупреждение(НСтр("ru = 'Не включено использование сайта SuperJob.'"));
			Возврат;
		КонецЕсли;
	Иначе
		ОтобразитьПредупреждение(НСтр("ru = 'Введен неверный адрес резюме.'"));
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметрыНовые = Новый Структура;
	ПозицияСимвола = ИнтеграцияРекрутинговыхСайтовКлиентСервер.НайтиВСтроке(Результат, "?");
	Если ПозицияСимвола > 0 Тогда
		Результат = Лев(Результат, ПозицияСимвола - 1);
	КонецЕсли;
	
	ДополнительныеПараметрыНовые.Вставить("АдресРезюме", Результат);
	ДополнительныеПараметрыНовые.Вставить("Сайт", Сайт);
	ДополнительныеПараметрыНовые.Вставить("Вакансия", ДополнительныеПараметры.Вакансия);
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.СоздатьКандидатаПоСсылкеЗавершениеВводаСтроки(Сайт, ДополнительныеПараметрыНовые);
	
КонецПроцедуры

Процедура СоздатьКандидатаПоСсылкеАвторизацияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Истина Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось авторизоваться на сайте'") + " " + ДополнительныеПараметры.Сайт;
	КонецЕсли;
	
	АдресРезюме = ДополнительныеПараметры.АдресРезюме;
	
	Если ДополнительныеПараметры.Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.HeadHunter() Тогда
		ИдентификаторРезюме = ИнтеграцияРекрутинговыхСайтовКлиентСервер.ИдентификаторПоАдресу(АдресРезюме);
	ИначеЕсли ДополнительныеПараметры.Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.Rabota() Тогда
		ИдентификаторРезюме = ИнтеграцияРекрутинговыхСайтовКлиентСервер.ИдентификаторПоАдресу(АдресРезюме, "resume");
		ИдентификаторРезюме = СтрЗаменить(ИдентификаторРезюме, ".html", "");
	ИначеЕсли ДополнительныеПараметры.Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.SuperJob() Тогда
		ИдентификаторРезюме = ИнтеграцияРекрутинговыхСайтовКлиентСервер.ИдентификаторПоАдресу(АдресРезюме, "-");
		ИдентификаторРезюме = СтрЗаменить(ИдентификаторРезюме, ".html", "");
	КонецЕсли;
	
	СоздатьКандидатаПоРезюме(ИдентификаторРезюме, ДополнительныеПараметры.Сайт, ДополнительныеПараметры.Вакансия);
	
КонецПроцедуры

Процедура ЗагрузкаКлассификаторовАвторизацияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Истина Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось авторизоваться на сайте'") + " " + ДополнительныеПараметры.Сайт;
	КонецЕсли;
	
	ИнтеграцияРекрутинговыхСайтовВызовСервера.ЗагрузитьКлассификаторы(ДополнительныеПараметры.Сайт);
	
КонецПроцедуры

Процедура АвторизацияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Истина Тогда
		ТекстПредупреждения = НСтр("ru = 'Не удалось авторизоваться на сайте %1'");
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Авторизация на сайте %1 пройдена успешно'");
	КонецЕсли;
	
	ОтобразитьПредупреждение(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, ДополнительныеПараметры.Сайт));
	
КонецПроцедуры

Процедура АвторизацияИЗагрузкаКлассификаторовССайта(Сайт)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Сайт", Сайт);
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.АвторизацияИЗагрузкаКлассификаторовССайта(Сайт, ДополнительныеПараметры);
	
КонецПроцедуры

Функция ОткрытьФормуОбработки(ИмяФормы, ПараметрыФормы, Владелец, Оповещение = Неопределено, Модально = Ложь)
	
	Возврат ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ОткрытьФормуОбработки(ИмяФормы, ПараметрыФормы, Владелец, Оповещение, Модально);
	
КонецФункции

Процедура РегионНажатие(Форма, СтруктураПараметров) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.РегионНажатие(Форма, СтруктураПараметров);
	
КонецПроцедуры

Процедура НачалоОдиночногоВыбораИзСписка(Форма, СписокВыбора, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.НачалоОдиночногоВыбораИзСписка(Форма, СписокВыбора, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура НайтиВДлительнойОперации(Форма, ФормаДлительнойОперации, Результат, АдресХранилища, ПараметрыОбработчикаОжидания, ИдентификаторЗадания) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.НайтиВДлительнойОперации(Форма, ФормаДлительнойОперации, Результат, АдресХранилища, ПараметрыОбработчикаОжидания, ИдентификаторЗадания);
	
КонецПроцедуры

Процедура КомандаПоискРезюмеВИнтернете(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.КомандаПоискРезюмеВИнтернете(ПараметрКоманды, ПараметрыВыполненияКоманды);
	
КонецПроцедуры

Процедура КомандаПоискРезюмеВИнтернетеПоВакансии(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.КомандаПоискРезюмеВИнтернетеПоВакансии(ПараметрКоманды, ПараметрыВыполненияКоманды);
	
КонецПроцедуры

Процедура КомандаОбновитьПубликацию(Форма) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.КомандаОбновитьПубликацию(Форма);
	
КонецПроцедуры

Процедура КомандаОпубликовать(Форма) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.КомандаОпубликовать(Форма);
	
КонецПроцедуры

Процедура ВыборИзДереваЗначений(Форма, СтруктураПараметров, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ВыборИзДереваЗначений(Форма, СтруктураПараметров, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОдиночныйВыборИзСписка(Форма, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ОдиночныйВыборИзСписка(Форма, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура МножественныйВыборИзСписка(Форма, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.МножественныйВыборИзСписка(Форма, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура РедактированиеМногострочногоТекста(Форма, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.РедактированиеМногострочногоТекста(Форма, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура РедактированиеУровняВладенияЯзыками(Форма, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.РедактированиеУровняВладенияЯзыками(Форма, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура РедактированияСпискаТелефонов(Форма, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.РедактированияСпискаТелефонов(Форма, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура РедактированиеТекстаВHTML(Форма, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.РедактированиеТекстаВHTML(Форма, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура НачалоВыбораЗначения(Форма, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.НачалоВыбораЗначения(Форма, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОткрытьФормуНастройкиПубликации(Форма, Вакансия, Сайт)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Вакансия", Вакансия);
	СтруктураПараметров.Вставить("Сайт", Сайт);
	
	ОткрытьФормуОбработки("Обработка.ПубликацияВакансийНаРекрутинговыхСайтах.Форма.НастройкаПубликации", СтруктураПараметров, Форма);
	
КонецПроцедуры

Процедура ОтобразитьПредупреждение(ТекстПредупреждения)
	
	ИнтеграцияРекрутинговыхСайтовВнутреннийКлиент.ОтобразитьПредупреждение(ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти
