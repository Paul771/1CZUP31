
#Область СлужебныйПрограммныйИнтерфейс

Функция ДоступныеРезультатыАттестации(ВидАттестации) Экспорт 
	
	ДоступныеРезультаты = Новый Массив;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") 
		И АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ВидАттестации) Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		ДоступныеРезультаты = Модуль.ДоступныеРезультатыАттестацииГосударственныхСлужащих();		
		
	Иначе		
		
		ТипАттестации = АттестацииСотрудников.ТипАттестации(ВидАттестации);
		Если ТипАттестации = Перечисления.ТипыАттестацииСотрудников.ПодтверждениеСоответствияДолжности Тогда 
			ДоступныеРезультаты.Добавить(Перечисления.РезультатыАттестацииНаСоответствиеДолжности.СоответствуетЗамещаемойДолжности);
			ДоступныеРезультаты.Добавить(Перечисления.РезультатыАттестацииНаСоответствиеДолжности.НеСоответствуетЗамещаемойДолжности);
		Иначе 	
			ДоступныеРезультаты.Добавить(Перечисления.РезультатыПодтвержденияКвалификацииПоСпециальности.КвалификацияПодтверждена);
			ДоступныеРезультаты.Добавить(Перечисления.РезультатыПодтвержденияКвалификацииПоСпециальности.КвалификацияНеПодтверждена);
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат ДоступныеРезультаты;
	
КонецФункции

Функция ПоложительныйРезультатАттестации(ВидАттестации) Экспорт 
	
	ПоложительныйРезультатАттестации = Неопределено;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") 
		И АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ВидАттестации) Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		ПоложительныйРезультатАттестации = Модуль.ПоложительныйРезультатАттестации();		
		
	Иначе		
		
		ТипАттестации = АттестацииСотрудников.ТипАттестации(ВидАттестации);
		Если ТипАттестации = Перечисления.ТипыАттестацииСотрудников.ПодтверждениеСоответствияДолжности Тогда 
			ПоложительныйРезультатАттестации = Перечисления.РезультатыАттестацииНаСоответствиеДолжности.СоответствуетЗамещаемойДолжности;
		Иначе 	
			ПоложительныйРезультатАттестации = Перечисления.РезультатыПодтвержденияКвалификацииПоСпециальности.КвалификацияПодтверждена;
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат ПоложительныйРезультатАттестации;
	
КонецФункции

Функция ДлительностьАттестационнойКампанииГод(ВидАттестации) Экспорт
	
	ДлительностьАттестационнойКампанииГод = АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ВидАттестации);	
	
	Возврат ДлительностьАттестационнойКампанииГод;
	
КонецФункции

Функция РедактироватьВидАктаУтверждающегоКомиссию(ВидАттестации) Экспорт
	
	РедактироватьВидАктаУтверждающегоКомиссию = АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ВидАттестации);	
	
	Возврат РедактироватьВидАктаУтверждающегоКомиссию;
	
КонецФункции

Функция ПродолжительностьАттестацииОдногоСотрудникаПоУмолчанию() Экспорт
	КоличествоМинутНаПроведениеАттестацииОдногоСотрудника = 30;
	Возврат КоличествоМинутНаПроведениеАттестацииОдногоСотрудника;
КонецФункции

Функция НеобходимоОтображатьДатуВнеочереднойАттестации(ВидАттестации) Экспорт
	
	Отображать = Истина;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") 
		И АттестацииСотрудников.ЭтоАттестацияГосударственныхСлужащих(ВидАттестации) Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Отображать = Модуль.НеобходимоОтображатьДатуВнеочереднойАттестации(ВидАттестации);		
	Иначе		
		Отображать = АттестацииСотрудников.ЭтоВнешняяАттестация(ВидАттестации);
	КонецЕсли; 
	
	Возврат Отображать;
	
КонецФункции

#КонецОбласти