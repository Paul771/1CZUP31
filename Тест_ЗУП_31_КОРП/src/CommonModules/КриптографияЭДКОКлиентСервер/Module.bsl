////////////////////////////////////////////////////////////////////////////////
// Подсистема "Криптография".
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает список криптопровайдеров, поддерживаемых 1С-Отчетностью.
//
// Возвращаемое значение:
//	ФиксированныйМассив - массив с описаниями криптопровайдеров.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//  * Путь - Строка - путь к модулю криптопровайдера в nix-системах.
//  * Представление - Строка - представление криптопровайдера для отображение в интерфейсе.
//
Функция ПоддерживаемыеКриптопровайдеры() Экспорт
	
	СписокКриптопровайдеров = Новый Массив;
	СписокКриптопровайдеров.Добавить(КриптопровайдерCryptoPro());
	СписокКриптопровайдеров.Добавить(КриптопровайдерViPNet());
	
	Возврат Новый ФиксированныйМассив(СписокКриптопровайдеров);
	
КонецФункции

// Возвращает описание криптопровайдера CryptoPro CSP.
//
// Возвращаемое значение:
//	ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//  * Путь - Строка - путь к модулю криптопровайдера в nix-системах.
//  * Представление - Строка - представление криптопровайдера для отображение в интерфейсе.
//
Функция КриптопровайдерCryptoPro() Экспорт
	
	Свойства = Новый Структура();
	Свойства.Вставить("Имя", 			"Crypto-Pro GOST R 34.10-2001 Cryptographic Service Provider");
	Свойства.Вставить("Путь", 			"");
	Свойства.Вставить("Тип", 			75);
	Свойства.Вставить("Представление", 	"CryptoPro CSP");
	
	Возврат Новый ФиксированнаяСтруктура(Свойства);
	
КонецФункции

// Возвращает описание криптопровайдера ViPNet CSP.
//
// Возвращаемое значение:
//	ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//  * Путь - Строка - путь к модулю криптопровайдера в nix-системах.
//  * Представление - Строка - представление криптопровайдера для отображение в интерфейсе.
//
Функция КриптопровайдерViPNet() Экспорт
	
	Свойства = Новый Структура();
	Свойства.Вставить("Имя", 			"Infotecs Cryptographic Service Provider");
	Свойства.Вставить("Путь", 			"");
	Свойства.Вставить("Тип", 			2);
	Свойства.Вставить("Представление", 	"ViPNet CSP");
	
	Возврат Новый ФиксированнаяСтруктура(Свойства);
	
КонецФункции

// Возвращает описание криптопровайдера Signal-COM CSP.
//
// Возвращаемое значение:
//	ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//  * Путь - Строка - путь к модулю криптопровайдера в nix-системах.
//  * Представление - Строка - представление криптопровайдера для отображение в интерфейсе.
//
Функция КриптопровайдерSignalCOM() Экспорт
	
	Свойства = Новый Структура();
	Свойства.Вставить("Имя", 			"Signal-COM CPGOST Cryptographic Provider");
	Свойства.Вставить("Путь", 			"");
	Свойства.Вставить("Тип", 			75);
	Свойства.Вставить("Представление", 	"Signal-COM CSP");
	
	Возврат Новый ФиксированнаяСтруктура(Свойства);
	
КонецФункции

// Возвращает описание криптопровайдера ЛИССИ-CSP.
//
// Возвращаемое значение:
//	ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//  * Путь - Строка - путь к модулю криптопровайдера в nix-системах.
//  * Представление - Строка - представление криптопровайдера для отображение в интерфейсе.
//
Функция КриптопровайдерЛИССИ() Экспорт
	
	Свойства = Новый Структура();
	Свойства.Вставить("Имя", 			"LISSI-CSP");
	Свойства.Вставить("Путь", 			"");
	Свойства.Вставить("Тип", 			75);
	Свойства.Вставить("Представление", 	"ЛИССИ-CSP");
	
	Возврат Новый ФиксированнаяСтруктура(Свойства);
	
КонецФункции

// Возвращает описание криптопровайдера Microsoft Base Cryptographic Provider v1.0.
//
// Возвращаемое значение:
//	ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//  * Путь - Строка - путь к модулю криптопровайдера в *nix-системах.
//  * Представление - Строка - представление криптопровайдера для отображение в интерфейсе.
//
Функция КриптопровайдерMicrosoftBaseCryptographicProvider() Экспорт
	
	Свойства = Новый Структура();
	Свойства.Вставить("Имя", 			"Microsoft Base Cryptographic Provider v1.0");
	Свойства.Вставить("Путь", 			"");
	Свойства.Вставить("Тип", 			1);
	Свойства.Вставить("Представление", 	"Microsoft Base Cryptographic Provider v1.0");
	
	Возврат Новый ФиксированнаяСтруктура(Свойства);
	
КонецФункции

// Возвращает описание криптопровайдера облачного криптопровайдера.
//
// Возвращаемое значение:
//	ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//  * Путь - Строка - путь к модулю криптопровайдера в nix-системах.
//  * Представление - Строка - представление криптопровайдера для отображение в интерфейсе.
//
Функция КриптопровайдерОблачныйКриптопровайдер() Экспорт
	
	Свойства = Новый Структура();
	Свойства.Вставить("Имя", 			"Облачный криптопровайдер");
	Свойства.Вставить("Путь", 			"");
	Свойства.Вставить("Тип", 			0);
	Свойства.Вставить("Представление", 	"Облачный криптопровайдер");
	
	Возврат Новый ФиксированнаяСтруктура(Свойства);
	
КонецФункции

// Проверяем является ли переданный криптопровайдер поддерживаемым.
//
// Возвращаемое значение:
//	Криптопровайдер - Структура, ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//
// Возвращаемое значение:
//	 Булево - признак поддержки переданного криптопровайдера.
//
Функция ЭтоПоддерживаемыйКриптопровайдер(Криптопровайдер) Экспорт
	
	Результат = Ложь;
	Для Каждого ПоддерживаемыйКриптопровайдер Из ПоддерживаемыеКриптопровайдеры() Цикл
		Если Криптопровайдер.Имя = ПоддерживаемыйКриптопровайдер.Имя И Криптопровайдер.Тип = ПоддерживаемыйКриптопровайдер.Тип Тогда
			Результат = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Проверяет на равенство криптопровайдеру CryptoPro CSP.
//
// Параметры:
//  Криптопровайдер - Структура, ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//
Функция ЭтоКриптопровайдерCryptoPro(Криптопровайдер) Экспорт

	Образец = КриптопровайдерCryptoPro();
	Возврат Криптопровайдер.Имя = Образец.Имя И Криптопровайдер.Тип = Образец.Тип;		
	
КонецФункции

// Проверяет на равенство криптопровайдеру ViPNet CSP.
//
// Параметры:
//  Криптопровайдер - Структура, ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//
Функция ЭтоКриптопровайдерViPNet(Криптопровайдер) Экспорт

	Образец = КриптопровайдерViPNet();
	Возврат Криптопровайдер.Имя = Образец.Имя И Криптопровайдер.Тип = Образец.Тип;		
	
КонецФункции

// Проверяет на равенство криптопровайдеру Signal-COM CSP.
//
// Параметры:
//  Криптопровайдер - Структура, ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//
Функция ЭтоКриптопровайдерSignalCOM(Криптопровайдер) Экспорт

	Образец = КриптопровайдерSignalCOM();
	Возврат Криптопровайдер.Имя = Образец.Имя И Криптопровайдер.Тип = Образец.Тип;		
	
КонецФункции

// Проверяет на равенство криптопровайдеру ЛИССИ-CSP.
//
// Параметры:
//  Криптопровайдер - Структура, ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//
Функция ЭтоКриптопровайдерЛИССИ(Криптопровайдер) Экспорт

	Образец = КриптопровайдерЛИССИ();
	Возврат Криптопровайдер.Имя = Образец.Имя И Криптопровайдер.Тип = Образец.Тип;		
	
КонецФункции

// Проверяет на равенство облачному криптопровайдеру.
//
// Параметры:
//  Криптопровайдер - Структура, ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//
Функция ЭтоКриптопровайдерОблачныйКриптопровайдер(Криптопровайдер) Экспорт

	Образец = КриптопровайдерОблачныйКриптопровайдер();
	Возврат Криптопровайдер.Имя = Образец.Имя И Криптопровайдер.Тип = Образец.Тип;		
	
КонецФункции

// Проверяет на равенство криптопровайдеру Microsoft Base Cryptographic Provider v1.0.
//
// Параметры:
//  Криптопровайдер - Структура, ФиксированнаяСтруктура - описание криптопровайдера.
//  * Имя - Строка - имя криптопровайдера.
//  * Тип - Число  - тип криптопровайдера.
//
Функция ЭтоКриптопровайдерMicrosoftBaseCryptographicProvider(Криптопровайдер) Экспорт

	Образец = КриптопровайдерMicrosoftBaseCryptographicProvider();
	Возврат Криптопровайдер.Имя = Образец.Имя И Криптопровайдер.Тип = Образец.Тип;		
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПереместитьВоВременномХранилище(Знач ОткудаАдрес, Знач КудаАдрес, Знач ОчиститьИсходный = Ложь) Экспорт
	
	Если Не ЭтоАдресВременногоХранилища(ОткудаАдрес) Или 
		Не ЭтоАдресВременногоХранилища(КудаАдрес) Тогда 
		Возврат Ложь;
	КонецЕсли;
		
	ДанныеСодержимое = ПолучитьИзВременногоХранилища(ОткудаАдрес);
	ПоместитьВоВременноеХранилище(ДанныеСодержимое, КудаАдрес);
	
	Если ОчиститьИсходный Тогда 
		УдалитьИзВременногоХранилища(ОткудаАдрес);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗаписатьСобытиеВЖурнал(Имя, Уровень = "Ошибка", Комментарий) Экспорт
	
	КриптографияЭДКОСлужебныйВызовСервера.ЗаписатьСобытиеВЖурнал(Имя, Уровень, Комментарий);
	
КонецПроцедуры

#КонецОбласти


