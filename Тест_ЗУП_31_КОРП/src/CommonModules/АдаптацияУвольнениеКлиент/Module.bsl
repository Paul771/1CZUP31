////////////////////////////////////////////////////////////////////////////////
// Подсистема "Адаптация и увольнение".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ОтборыНазначения

// Выводит модальное окно, содержащее пояснение к предупреждающим полям.
//
Процедура МероприятияВыбор(Форма, Элемент, Поле, СтандартнаяОбработка) Экспорт
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = НеОпределено Тогда
		Возврат;
	КонецЕсли;
		
	Форма.МероприятиеПрежнее = ТекущиеДанные.Мероприятие;
		
	Если Поле.Имя = "МероприятияАдаптацииПредставлениеСобытий" 
		Или Поле.Имя = "МероприятияУвольненияПредставлениеСобытий" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокДоступныхСобытий = Новый СписокЗначений;
		ДоступныеСобытия = АдаптацияУвольнениеВызовСервера.ДоступныеВидыСобытий();
		
		Для Каждого Событие Из ДоступныеСобытия Цикл
			СписокДоступныхСобытий.Добавить(Событие, , ТекущиеДанные.События.НайтиПоЗначению(Событие) <> НеОпределено);
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.События) Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'События мероприятия:'"));
		ПараметрыФормы.Вставить("ИмяТаблицы", "Справочник.МероприятияАдаптацииУвольнения");
		ПараметрыФормы.Вставить("ТекущиеЗначения", ТекущиеДанные.События);
		ПараметрыФормы.Вставить("ТолькоПросмотр", Истина);
		
		ОткрытьФорму("Справочник.МероприятияАдаптацииУвольнения.Форма.ФормаЗначенийНазначения", 
			ПараметрыФормы, Форма,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

// Не позволяет выполнить копирование строки.
//
Процедура МероприятияПередНачаломДобавления(Форма, Элемент, Отказ, Копирование) Экспорт
	
	Отказ = Отказ Или Копирование;
	
КонецПроцедуры

Процедура МероприятияПередНачаломИзменения(Форма, Элемент, Отказ, ЭтоФормаПозицииШР) Экспорт
	
	Если ЭтоФормаПозицииШР Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Назначение = ТекущиеДанные.Назначение;
		
		Если ЗначениеЗаполнено(Назначение) 
			И Назначение <> АдаптацияУвольнениеКлиентСервер.НазначениеДляПозиции() Тогда
			
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура МероприятияПередУдалением(Форма, Элемент, Отказ, ЭтоФормаПозицииШР = Ложь) Экспорт
	
	Если ЭтоФормаПозицииШР Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Мероприятие = ТекущиеДанные.Мероприятие;
		
		Если ТекущиеДанные.Назначение <> АдаптацияУвольнениеКлиентСервер.НазначениеДляПозиции() Тогда
			
			ТекстСообщения = НСтр("ru = 'Можно удалять мероприятия только для позиции.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элемент.ВыделенныеСтроки Цикл
		
		СтрокаДанных = Форма[Элемент.Имя].НайтиПоИдентификатору(ВыделеннаяСтрока);
		
		Если СтрокаДанных <> НеОпределено Тогда
			
			ИмяТаблицы = ИмяПарнойТаблицы(Элемент.Имя);
			СтрокиМероприятия = Форма[ИмяТаблицы].НайтиСтроки(Новый Структура("Мероприятие", СтрокаДанных.Мероприятие));
			
			Если ЗначениеЗаполнено(СтрокиМероприятия) Тогда
				Форма[ИмяТаблицы].Удалить(СтрокиМероприятия[0]);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура МероприятияПриОкончанииРедактирования(Форма, Элемент, НоваяСтрока, ОтменаРедактирования) Экспорт
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Мероприятие) Тогда
		
		Если НоваяСтрока Тогда
			Форма[Элемент.Имя].Удалить(ТекущиеДанные);
		Иначе
			ТекущиеДанные.Мероприятие = Форма.МероприятиеПрежнее;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТекущиеДанные.Мероприятие = Форма.МероприятиеПрежнее Тогда
		ОтменаРедактирования = Истина;
	КонецЕсли;
	
	Если Не ОтменаРедактирования Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура МероприятияМероприятиеНачалоВыбора(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	МероприятиеНачалоВыбора(Форма, Элемент, СтандартнаяОбработка, Элемент.Имя = "МероприятияАдаптацииМероприятие");
	
КонецПроцедуры

Процедура МероприятияМероприятиеОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка, ЭтоФормаПозицииШР = Ложь) Экспорт
	
	ИмяТаблицы = Элемент.Родитель.Имя;
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	
	Мероприятие = ВыбранноеЗначение;
	МероприятиеПрежнее = ТекущиеДанные.Мероприятие;
	
	Если Мероприятие = МероприятиеПрежнее Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиМероприятия = Форма[ИмяТаблицы].НайтиСтроки(Новый Структура("Мероприятие", Мероприятие));
	
	Если ЗначениеЗаполнено(СтрокиМероприятия) И СтрокиМероприятия[0] <> ТекущиеДанные Тогда
		СтандартнаяОбработка = Ложь;
	Иначе
		
		ДанныеМероприятия = АдаптацияУвольнениеВызовСервера.ДанныеМероприятия(Мероприятие);
		
		Если (ИмяТаблицы = "МероприятияАдаптации" И Не ДанныеМероприятия.ЭтоМероприятиеАдаптации)
			Или (ИмяТаблицы = "МероприятияУвольнения" И Не ДанныеМероприятия.ЭтоМероприятиеУвольнения) Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
		
		Если СтандартнаяОбработка Тогда
			
			МероприятиеТекущее = ТекущиеДанные.Мероприятие;
			ИмяПарнойТаблицы = ИмяПарнойТаблицы(ИмяТаблицы);
			
			Если ЗначениеЗаполнено(МероприятиеПрежнее) Тогда
				
				СтрокиМероприятия = Форма[ИмяПарнойТаблицы].НайтиСтроки(Новый Структура("Мероприятие", МероприятиеПрежнее));
				Если ЗначениеЗаполнено(СтрокиМероприятия) Тогда
					Форма[ИмяПарнойТаблицы].Удалить((СтрокиМероприятия[0]));
				КонецЕсли;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеМероприятия, "События, ПредставлениеСобытий");
			
			Если ЭтоФормаПозицииШР Тогда
				ТекущиеДанные.Назначение = АдаптацияУвольнениеКлиентСервер.НазначениеДляПозиции();
			КонецЕсли;
			
			Если ДанныеМероприятия.ЭтоМероприятиеАдаптации
				И ДанныеМероприятия.ЭтоМероприятиеУвольнения Тогда
				
				НоваяСтрока = Форма[ИмяПарнойТаблицы].Добавить();
				НоваяСтрока.Мероприятие = Мероприятие;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеМероприятия, "События, ПредставлениеСобытий");
				
				Если ЭтоФормаПозицииШР Тогда
					НоваяСтрока.Назначение = АдаптацияУвольнениеКлиентСервер.НазначениеДляПозиции();
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область КадровыеДокументы

Процедура ОбработкаНавигационнойСсылкиРешения(Форма, НавигационнаяСсылка, СтандартнаяОбработка) Экспорт 
	
	Объект = Форма.Объект;
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ДокументРешение" Тогда
		
		ПоказатьЗначение(, Объект.Решение);
		
	Иначе
		
		ИмяОткрываемойФормы = СтрШаблон("Документ.%1.ФормаВыбора", НавигационнаяСсылка);
		СоответствиеРеквизитов = АдаптацияУвольнениеВызовСервера.СоответствиеРеквизитовОтбораРешенияРеквизитамПриказа(НавигационнаяСсылка);
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация", Объект.Организация);
		ПараметрыОтбора.Вставить("Проведен", Истина);
		
		Для каждого РеквизитОтбора Из СоответствиеРеквизитов Цикл
			ПараметрыОтбора.Вставить(РеквизитОтбора.Ключ, Объект[РеквизитОтбора.Значение]);
		КонецЦикла;
		
		ПараметрыОткрытияФормыВыбора = Новый Структура;
		ПараметрыОткрытияФормыВыбора.Вставить("РежимВыбора", Истина);
		ПараметрыОткрытияФормыВыбора.Вставить("Отбор", ПараметрыОтбора);
		
		Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработкаНавигационнойСсылкиРешенияЗавершение", Форма);
		
		ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыОткрытияФормыВыбора, Форма, Истина, , , Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НазначаемыеМероприятия

Процедура НазначаемыеМероприятияМероприятиеНачалоВыбора(Форма, Элемент, СтандартнаяОбработка, ДляАдаптации = Неопределено) Экспорт
	
	МероприятиеНачалоВыбора(Форма, Элемент, СтандартнаяОбработка, ДляАдаптации);
	
КонецПроцедуры

Процедура НазначаемыеМероприятияМероприятиеОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, ДопПараметры) Экспорт
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	
	Мероприятие = ВыбранноеЗначение;
	МероприятиеПрежнее = ТекущиеДанные.Мероприятие;
	
	Если ЗначениеЗаполнено(Мероприятие) 
		И Мероприятие <> МероприятиеПрежнее Тогда
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, АдаптацияУвольнениеВызовСервера.СвойстваНазначаемогоМероприятия(Мероприятие, ДопПараметры));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ПараметрыПолученияСвойствНазначаемогоМероприятия() Экспорт
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ФизическоеЛицо");
	ПараметрыЗаполнения.Вставить("ДатаСобытия");
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ИмяПарнойТаблицы(ИмяТаблицы)
	
	Возврат ?(ИмяТаблицы = "МероприятияАдаптации", "МероприятияУвольнения", "МероприятияАдаптации");
	
КонецФункции

Процедура МероприятиеНачалоВыбора(Форма, Элемент, СтандартнаяОбработка = Неопределено, ДляАдаптации = Неопределено)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	
	Отборы = Новый Структура;
	Отборы.Вставить("ПометкаУдаления", Ложь);
	Отборы.Вставить("ВАрхиве", Ложь);
	Отборы.Вставить("ДляАдаптации", ДляАдаптации);
	
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("Отбор", Отборы);
	
	ОткрытьФорму("Справочник.МероприятияАдаптацииУвольнения.Форма.ФормаСписка", ПараметрыОткрытия, Элемент);
	
КонецПроцедуры

#КонецОбласти


