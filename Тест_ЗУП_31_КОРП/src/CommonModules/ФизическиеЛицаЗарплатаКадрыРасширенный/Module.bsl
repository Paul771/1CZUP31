////////////////////////////////////////////////////////////////////////////////
// ФизическиеЛицаЗарплатаКадры: методы, дополняющие функциональность справочника
// 		ФизическиеЛица.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	ФизическиеЛицаЗарплатаКадрыРасширенныйПереопределяемый.ОбработкаПолученияФормыСправочникаФизическиеЛица(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
	Если Не СтандартнаяОбработка Тогда 
		Возврат;
	КонецЕсли;
	
	Если ВидФормы = "ФормаВыбора" Тогда
		
		Если Параметры.Свойство("Отбор") Тогда
			
			Если Параметры.Отбор.Свойство("Роль")
				И (Параметры.Отбор.Свойство("Организация")
					Или Параметры.Отбор.Свойство("ГоловнаяОрганизация")) Тогда
				
				Если Параметры.Отбор.Свойство("Организация") И ТипЗнч(Параметры.Отбор.Организация) = Тип("СправочникСсылка.Организации")
					Или Параметры.Отбор.Свойство("ГоловнаяОрганизация") И ТипЗнч(Параметры.Отбор.ГоловнаяОрганизация) = Тип("СправочникСсылка.Организации") Тогда
					
					СтандартнаяОбработка = Ложь;
					ВыбраннаяФорма = "ФормаВыбораПоРоли";
					Возврат;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ФизическиеЛицаЗарплатаКадрыБазовый.ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

Функция ПредставлениеРолиВоМножественномЧисле(Роль) Экспорт
	Если Роль = Перечисления.РолиФизическихЛиц.Акционер Тогда
		Возврат НСтр("ru = 'Акционеры'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.Сотрудник Тогда
		Возврат НСтр("ru = 'Сотрудники'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.БывшийСотрудник Тогда
		Возврат НСтр("ru = 'Бывшие сотрудники'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.ПрочийПолучательДоходов Тогда
		Возврат НСтр("ru = 'Прочие получатели доходов'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.РаздатчикЗарплаты Тогда
		Возврат НСтр("ru = 'Раздатчики зарплаты'");
	Иначе
		Возврат "" + Роль;
	КонецЕсли;
		
КонецФункции

Функция ПредставлениеРолиВРодительномПадеже(Роль) Экспорт
	Если Роль = Перечисления.РолиФизическихЛиц.Акционер Тогда
		Возврат НСтр("ru = 'акционера'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.Сотрудник Тогда
		Возврат НСтр("ru = 'сотрудника'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.БывшийСотрудник Тогда
		Возврат НСтр("ru = 'бывшего сотрудника'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.ПрочийПолучательДоходов Тогда
		Возврат НСтр("ru = 'прочего получателя доходов'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.РаздатчикЗарплаты Тогда
		Возврат НСтр("ru = 'раздатчика зарплаты'");
	Иначе
		Возврат "" + Роль;
	КонецЕсли;
		
КонецФункции

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	Перем Организация;
	Перем Подразделение;
	Перем РольФизическогоЛица;
	
	Параметры.Отбор.Свойство("Организация", Организация);
	Параметры.Отбор.Свойство("Подразделение", Подразделение);
	Параметры.Отбор.Свойство("Роль", РольФизическогоЛица);
	
	Если РольФизическогоЛица = Неопределено
		И Организация = Неопределено
		И Подразделение = Неопределено Тогда
		
		ФизическиеЛицаЗарплатаКадрыБазовый.ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка);
		
	ИначеЕсли Организация <> Неопределено
		Или Подразделение <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		
		ДатаНачалаОтбора = Неопределено;
		ДатаОкончанияОтбора = Неопределено;
		
		Если Параметры.Отбор.Свойство("ДатаПримененияОтбора") Тогда
			
			Если ЗначениеЗаполнено(Параметры.Отбор.ДатаПримененияОтбора) Тогда
				
				ДатаНачалаОтбора = НачалоДня(Параметры.Отбор.ДатаПримененияОтбора);
				ДатаОкончанияОтбора = КонецДня(Параметры.Отбор.ДатаПримененияОтбора);
				
			КонецЕсли;
			
			Параметры.Отбор.Удалить("ДатаПримененияОтбора");
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДатаНачалаОтбора) И Параметры.Отбор.Свойство("МесяцПримененияОтбора") Тогда
			
			Если ЗначениеЗаполнено(Параметры.Отбор.МесяцПримененияОтбора) Тогда
				
				ДатаНачалаОтбора = НачалоМесяца(Параметры.Отбор.МесяцПримененияОтбора);
				ДатаОкончанияОтбора = КонецМесяца(Параметры.Отбор.МесяцПримененияОтбора);
				
			КонецЕсли;
			
			Параметры.Отбор.Удалить("МесяцПримененияОтбора");
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("МаксимальнаяДатаНачалоДня", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()));
		
		ЗапросТекст =
			"ВЫБРАТЬ *
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|			ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудников
			|			ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ДанныеДляПодбораСотрудников.Сотрудник
			|				И (ДанныеДляПодбораСотрудников.Начало В
			|					(ВЫБРАТЬ
			|						МАКСИМУМ(Т.Начало)
			|					ИЗ
			|						РегистрСведений.ДанныеДляПодбораСотрудников КАК Т
			|					ГДЕ
			|						ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|						И ВЫБОР
			|							КОГДА ОсновныеСотрудникиФизическихЛиц.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
			|								ТОГДА Т.Начало
			|							ИНАЧЕ ОсновныеСотрудникиФизическихЛиц.ДатаНачала
			|						КОНЕЦ МЕЖДУ Т.Начало И ВЫБОР
			|							КОГДА Т.Окончание = ДАТАВРЕМЯ(1, 1, 1)
			|								ТОГДА ОсновныеСотрудникиФизическихЛиц.ДатаОкончания
			|							ИНАЧЕ Т.Окончание
			|						КОНЕЦ))
			|		ПО ФизическиеЛица.Ссылка = ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо
			|ГДЕ
			|	НЕ ФизическиеЛица.ЭтоГруппа
			|	И ОсновныеСотрудникиФизическихЛиц.ДатаОкончания = &МаксимальнаяДатаНачалоДня
			|	И ДанныеДляПодбораСотрудников.Филиал = &Организация
			|	И ДанныеДляПодбораСотрудников.Подразделение = &Подразделение
			|	И &ДополнительноеУсловие";
		
		ОрганизацияСписком = ТипЗнч(Организация) = Тип("Массив") ИЛИ ТипЗнч(Организация) = Тип("СписокЗначений");
		Если Организация = НеОпределено ИЛИ ОрганизацияСписком И Организация.Количество() = 0 Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "ДанныеДляПодбораСотрудников.Филиал = &Организация
				|	И ", "");
			
		ИначеЕсли ОрганизацияСписком Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "ДанныеДляПодбораСотрудников.Филиал = &Организация
				|	И ", "ДанныеДляПодбораСотрудников.Филиал В (&Организация)
				|	И ");
			
		КонецЕсли;
		
		ПодразделениеСписком = ТипЗнч(Подразделение) = Тип("Массив") ИЛИ ТипЗнч(Подразделение) = Тип("СписокЗначений");
		Если Подразделение = НеОпределено ИЛИ ПодразделениеСписком И Подразделение.Количество() = 0 Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "ДанныеДляПодбораСотрудников.Подразделение = &Подразделение
				|	И ", "");
			
		ИначеЕсли ПодразделениеСписком Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "ДанныеДляПодбораСотрудников.Подразделение = &Подразделение
				|	И ", "ДанныеДляПодбораСотрудников.Подразделение В (&Подразделение)
				|	И ");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачалаОтбора) Тогда
			
			ЗапросТекст = ЗапросТекст + Символы.ПС + "
				|	И ТекущиеКадровыеДанныеСотрудников.ДатаПриема <= &ДатаОкончанияОтбора
				|	И (ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения >= &ДатаНачалаОтбора
				|		ИЛИ ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1))";
			
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("ВАрхиве") Тогда
			ЗапросТекст = ЗапросТекст + Символы.ПС + "	И ТекущиеКадровыеДанныеСотрудников.Сотрудник.ВАрхиве = " + ?(Параметры.Отбор.ВАрхиве = Истина, "ИСТИНА", "ЛОЖЬ");
		КонецЕсли; 
		
		Запрос.Текст = ЗапросТекст;
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		
		Если ЗначениеЗаполнено(ДатаНачалаОтбора) Тогда
			
			Запрос.УстановитьПараметр("ДатаНачалаОтбора", ДатаНачалаОтбора);
			Запрос.УстановитьПараметр("ДатаОкончанияОтбора", ДатаОкончанияОтбора);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеВыбора) И ДанныеВыбора.Количество() > 0 Тогда
			ИспользоватьДанныеВыбора = Истина;
		Иначе
			ИспользоватьДанныеВыбора = Ложь;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
		ЗарплатаКадры.ЗаполнитьДанныеВыбораСправочника(ДанныеВыбора, Метаданные.Справочники.ФизическиеЛица, Параметры, Запрос, "ФизическиеЛица", ИспользоватьДанныеВыбора);
		
	Иначе
		
		ЗапросТекст =
			"ВЫБРАТЬ *
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РолиФизическихЛиц КАК РолиФизическихЛиц
			|		ПО ФизическиеЛица.Ссылка = РолиФизическихЛиц.ФизическоеЛицо
			|ГДЕ
			|	НЕ ФизическиеЛица.ЭтоГруппа
			|	И РолиФизическихЛиц.Организация = &Организация
			|	И РолиФизическихЛиц.Роль = &РольФизическогоЛица
			|	И &ДополнительноеУсловие";
		
		ОрганизацияСписком = ТипЗнч(Организация) = Тип("Массив")
			Или ТипЗнч(Организация) = Тип("ФиксированныйМассив")
			Или ТипЗнч(Организация) = Тип("СписокЗначений");
		
		Если Организация = НеОпределено ИЛИ ОрганизацияСписком И Организация.Количество() = 0 Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "РолиФизическихЛиц.Организация = &Организация
				|	И ", "");
			
		ИначеЕсли ОрганизацияСписком Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "РолиФизическихЛиц.Организация = &Организация
				|	И ", "РолиФизическихЛиц.Организация В (&Организация)
				|	И ");
			
		КонецЕсли;
		
		РолиСписком = ТипЗнч(РольФизическогоЛица) = Тип("Массив")
			Или ТипЗнч(РольФизическогоЛица) = Тип("ФиксированныйМассив")
			Или ТипЗнч(РольФизическогоЛица) = Тип("СписокЗначений");
		
		Если РолиСписком И РольФизическогоЛица.Количество() = 0 Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "РолиФизическихЛиц.Роль = &РольФизическогоЛица
				|	И ", "");
			
		ИначеЕсли РолиСписком Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "РолиФизическихЛиц.Роль = &РольФизическогоЛица
				|	И ", "РолиФизическихЛиц.Роль В (&РольФизическогоЛица)
				|	И ");
			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = ЗапросТекст;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("РольФизическогоЛица", РольФизическогоЛица);
		
		Если ЗначениеЗаполнено(ДанныеВыбора) И ДанныеВыбора.Количество() > 0 Тогда
			ИспользоватьДанныеВыбора = Истина;
		Иначе
			ИспользоватьДанныеВыбора = Ложь;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
		ЗарплатаКадры.ЗаполнитьДанныеВыбораСправочника(ДанныеВыбора, Метаданные.Справочники.ФизическиеЛица, Параметры, Запрос, "ФизическиеЛица", ИспользоватьДанныеВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаВыбораСотрудниковПриСозданииНаСервере(Форма, Параметры) Экспорт
	
	УстановитьЗапросСпискаВФормеВыбораСотрудников(Форма);
	
	Если Параметры.Отбор.Свойство("Подразделение")
		И Параметры.Свойство("УчитыватьОтборПоПодразделению")
		И Параметры.УчитыватьОтборПоПодразделению
		И Не ПолучитьФункциональнуюОпцию("ВыполнятьРасчетЗарплатыПоПодразделениям") Тогда
		
		Параметры.Отбор.Удалить("Подразделение");
		
	КонецЕсли;
	
	ТекстЗапроса = Форма.Список.ТекстЗапроса;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,  "ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация КАК Организация,",
		"ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация КАК Организация,
		|	ДанныеДляПодбораСотрудников.ВидДоговора КАК ВидДоговора,");
	
	Форма.Список.ТекстЗапроса = ТекстЗапроса;
	Форма.Список.УстановитьОбязательноеИспользование("ВидДоговора", Истина);
	
КонецПроцедуры

Процедура ПеренестиФотографииФизическихЛицВРегистр(ПараметрыОбновления) Экспорт
	
	ОбновлениеИнформационнойБазы.УдалитьОтложенныйОбработчикИзОчереди("ФизическиеЛицаЗарплатаКадрыРасширенный.ПеренестиФотографииФизическихЛиц");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
	|	ФизическиеЛица.УдалитьФотографияФайлом КАК Фотография
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.УдалитьФотографияФайлом <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛицаПрисоединенныеФайлы.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ПараметрыОбновления.ОбработкаЗавершена = Ложь;
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыОбновления.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;	

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл 
		
		ДанныеФайла = РаботаСФайлами.ДанныеФайла(Выборка.Фотография);
		
		ФотографииФизическихЛицМенеджерЗаписи = РегистрыСведений.ФотографииФизическихЛиц.СоздатьМенеджерЗаписи();
		ФотографииФизическихЛицМенеджерЗаписи.ФизическоеЛицо = Выборка.ФизическоеЛицо;
		ФотографииФизическихЛицМенеджерЗаписи.Фотография = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла));
		ФотографииФизическихЛицМенеджерЗаписи.Записать();
		
		ФизическоеЛицоОбъект = Выборка.ФизическоеЛицо.ПолучитьОбъект();
		ФизическоеЛицоОбъект.УдалитьФотографияФайлом = Справочники.ФизическиеЛицаПрисоединенныеФайлы.ПустаяСсылка();
		ФизическоеЛицоОбъект.ОбменДанными.Загрузка = Истина;
		ФизическоеЛицоОбъект.Записать();
		
		ПрисоединенныйФайлОбъект = Выборка.Фотография.ПолучитьОбъект();
		ПрисоединенныйФайлОбъект.Удалить();
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура УстановитьЗапросСпискаВФормеВыбораСотрудников(Форма)
	
	Список = Форма.Список;
	
	Если ПараметрыСеанса.АльтернативныйПодборСпискаСотрудников Тогда
		
		Список.ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СправочникФизическиеЛица.Ссылка КАК Ссылка,
			|	СправочникФизическиеЛица.ПометкаУдаления КАК ПометкаУдаления,
			|	СправочникФизическиеЛица.Предопределенный КАК Предопределенный,
			|	СправочникФизическиеЛица.Родитель КАК Родитель,
			|	СправочникФизическиеЛица.ЭтоГруппа КАК ЭтоГруппа,
			|	СправочникФизическиеЛица.Код КАК Код,
			|	СправочникФизическиеЛица.Наименование КАК Наименование,
			|	СправочникФизическиеЛица.ДатаРождения КАК ДатаРождения,
			|	СправочникФизическиеЛица.ИНН КАК ИНН,
			|	СправочникФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаПриема КАК ДатаПриема,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения КАК ДатаУвольнения,
			|	ОсновныеСотрудникиФизическихЛиц.Сотрудник.Код КАК ТабельныйНомер,
			|	ОсновныеСотрудникиФизическихЛиц.Сотрудник.ВАрхиве КАК ВАрхиве,
			|	ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация КАК Организация,
			|	ДанныеДляПодбораСотрудников.Организация КАК Филиал,
			|	ДанныеДляПодбораСотрудников.Подразделение КАК Подразделение,
			|	ВидыЗанятостиСотрудниковИнтервальный.ВидЗанятости КАК ВидЗанятости
			|ИЗ
			|	РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК СправочникФизическиеЛица
			|		ПО ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = СправочникФизическиеЛица.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация = ТекущиеКадровыеДанныеСотрудников.ГоловнаяОрганизация
			|			И ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо
			|			И ОсновныеСотрудникиФизическихЛиц.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудников
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ДанныеДляПодбораСотрудников.Сотрудник
			|			И (ДанныеДляПодбораСотрудников.ЭтоГоловнойСотрудник)
			|			И (ДанныеДляПодбораСотрудников.ИдентификаторЗаписи В
			|				(ВЫБРАТЬ
			|					МАКСИМУМ(ДанныеДляПодбораСотрудниковОтбор.ИдентификаторЗаписи)
			|				ИЗ
			|					РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудниковОтбор
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = ДанныеДляПодбораСотрудниковОтбор.Сотрудник
			|					И ДанныеДляПодбораСотрудников.Организация = ДанныеДляПодбораСотрудниковОтбор.Организация
			|					И ДанныеДляПодбораСотрудниковОтбор.Начало В
			|						(ВЫБРАТЬ
			|							МАКСИМУМ(Т.Начало)
			|						ИЗ
			|							РегистрСведений.ДанныеДляПодбораСотрудников КАК Т
			|						ГДЕ
			|							ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|							И Т.ЭтоГоловнойСотрудник
			|							И ДанныеДляПодбораСотрудниковОтбор.Организация = Т.Организация
			|							И ВЫБОР
			|								КОГДА ОсновныеСотрудникиФизическихЛиц.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
			|									ТОГДА Т.Начало
			|								ИНАЧЕ ОсновныеСотрудникиФизическихЛиц.ДатаНачала
			|							КОНЕЦ МЕЖДУ Т.Начало И ВЫБОР
			|								КОГДА Т.Окончание = ДАТАВРЕМЯ(1, 1, 1)
			|									ТОГДА ОсновныеСотрудникиФизическихЛиц.ДатаОкончания
			|								ИНАЧЕ Т.Окончание
			|							КОНЕЦ)))
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК ВидыЗанятостиСотрудниковИнтервальный
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ВидыЗанятостиСотрудниковИнтервальный.Сотрудник
			|			И (ВидыЗанятостиСотрудниковИнтервальный.ДатаНачала В
			|				(ВЫБРАТЬ
			|					МАКСИМУМ(Т.ДатаНачала) КАК ДатаНачала
			|				ИЗ
			|					РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК Т
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|					И ОсновныеСотрудникиФизическихЛиц.ДатаОкончания МЕЖДУ Т.ДатаНачала И Т.ДатаОкончания))
			|ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ДатаОкончания = &МаксимальнаяДатаНачалоДня
			|{ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация.* КАК Организация,
			|	ДанныеДляПодбораСотрудников.Организация.*,
			|	ДанныеДляПодбораСотрудников.Филиал.*}";
		
	Иначе
		
		Список.ТекстЗапроса =
			"ВЫБРАТЬ
			|	СправочникФизическиеЛица.Ссылка КАК Ссылка,
			|	СправочникФизическиеЛица.ПометкаУдаления КАК ПометкаУдаления,
			|	СправочникФизическиеЛица.Предопределенный КАК Предопределенный,
			|	СправочникФизическиеЛица.Родитель КАК Родитель,
			|	СправочникФизическиеЛица.ЭтоГруппа КАК ЭтоГруппа,
			|	СправочникФизическиеЛица.Код КАК Код,
			|	СправочникФизическиеЛица.Наименование КАК Наименование,
			|	СправочникФизическиеЛица.ДатаРождения КАК ДатаРождения,
			|	СправочникФизическиеЛица.ИНН КАК ИНН,
			|	СправочникФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаПриема КАК ДатаПриема,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения КАК ДатаУвольнения,
			|	ОсновныеСотрудникиФизическихЛиц.Сотрудник.Код КАК ТабельныйНомер,
			|	ОсновныеСотрудникиФизическихЛиц.Сотрудник.ВАрхиве КАК ВАрхиве,
			|	ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация КАК Организация,
			|	ДанныеДляПодбораСотрудников.Организация КАК Филиал,
			|	ДанныеДляПодбораСотрудников.Подразделение КАК Подразделение,
			|	ВидыЗанятостиСотрудниковИнтервальный.ВидЗанятости КАК ВидЗанятости
			|ИЗ
			|	РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК СправочникФизическиеЛица
			|		ПО ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = СправочникФизическиеЛица.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация = ТекущиеКадровыеДанныеСотрудников.ГоловнаяОрганизация
			|			И ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо
			|			И ОсновныеСотрудникиФизическихЛиц.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудников
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ДанныеДляПодбораСотрудников.Сотрудник
			|			И (ДанныеДляПодбораСотрудников.ИдентификаторЗаписи В
			|				(ВЫБРАТЬ ПЕРВЫЕ 1
			|					Т.ИдентификаторЗаписи
			|				ИЗ
			|					РегистрСведений.ДанныеДляПодбораСотрудников КАК Т
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|					И Т.ЭтоГоловнойСотрудник
			|					И ВЫБОР
			|						КОГДА ОсновныеСотрудникиФизическихЛиц.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
			|							ТОГДА Т.Начало
			|						ИНАЧЕ ОсновныеСотрудникиФизическихЛиц.ДатаНачала
			|					КОНЕЦ МЕЖДУ Т.Начало И ВЫБОР
			|						КОГДА Т.Окончание = ДАТАВРЕМЯ(1, 1, 1)
			|							ТОГДА ОсновныеСотрудникиФизическихЛиц.ДатаОкончания
			|						ИНАЧЕ Т.Окончание
			|					КОНЕЦ
			|				УПОРЯДОЧИТЬ ПО
			|					Т.Начало УБЫВ,
			|					Т.Организация,
			|					Т.Филиал,
			|					Т.Подразделение,
			|					Т.ПоДоговоруГПХ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК ВидыЗанятостиСотрудниковИнтервальный
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ВидыЗанятостиСотрудниковИнтервальный.Сотрудник
			|			И (ВидыЗанятостиСотрудниковИнтервальный.ДатаНачала В
			|				(ВЫБРАТЬ ПЕРВЫЕ 1
			|					Т.ДатаНачала
			|				ИЗ
			|					РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК Т
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|					И ОсновныеСотрудникиФизическихЛиц.ДатаОкончания МЕЖДУ Т.ДатаНачала И Т.ДатаОкончания
			|				УПОРЯДОЧИТЬ ПО
			|					Т.ДатаНачала УБЫВ))
			|ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ДатаОкончания = &МаксимальнаяДатаНачалоДня
			|{ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация.* КАК Организация,
			|	ДанныеДляПодбораСотрудников.Организация.*,
			|	ДанныеДляПодбораСотрудников.Филиал.*}";
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "МаксимальнаяДатаНачалоДня", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()), Истина);
	
КонецПроцедуры

#КонецОбласти
