#Область СлужебныеПроцедурыИФункции

// Функция возвращает массив файлов с двоичными данными
// для последующей выгрузки в кэш на клиенте или сервере.
//
Функция ДанныеРесурсовДляВыгрузкиВКэш(МассивРесурсов, ЭлектронныйРесурс, ИдентификаторФормы = Неопределено) Экспорт
	
	МассивФайлов = Новый Массив();
	
	КоммуникацииСуществуют = ОбщегоНазначения.ПодсистемаСуществует("УправлениеОбучением.Коммуникации");
	
	Если КоммуникацииСуществуют Тогда
		МодульУправленияОбучения = ОбщегоНазначения.ОбщийМодуль("УправлениеОбучениемСУО");
	КонецЕсли;
	
	Для каждого Ресурс Из МассивРесурсов Цикл
				
		Если ТипЗнч(Ресурс.Ссылка) = Тип("СправочникСсылка.ЭлектронныеРесурсы")
			И Ресурс.КодДанных = "" Тогда
			
			ДеревоФайлов        = Справочники.ЭлектронныеРесурсы.ДеревоЭлементов(Ресурс.Ссылка);
			МассивФайловРесурса = Справочники.ЭлектронныеРесурсы.СтруктураФайловРесурса(Ресурс.Ссылка, ДеревоФайлов.Строки, 1, ЭлектронныйРесурс, ИдентификаторФормы);			
				
		ИначеЕсли ТипЗнч(Ресурс.Ссылка) = Тип("Строка") Тогда	
			
			МассивФайловРесурса = Новый Массив;
		
			Файл = Справочники.ЭлектронныеРесурсы.ПустаяСтруктураФайлаДляВыгрузки();
			
			Файл.Вставить("ИмяФайла", "");
			Файл.Вставить("ЭтоКаталог", Ложь);
			Файл.Вставить("ДвоичныеДанные", ПолучитьОбщийМакет(Ресурс.Ссылка));
			Файл.Вставить("ТипФайла", ЭлектронноеОбучениеСлужебный.ИмяЗначенияПеречисления(Перечисления.ТипыЭлементовЭлектронныхРесурсов.Folder));
			Файл.Вставить("ПодчиненныеФайлы", Неопределено);
			
			МассивФайловРесурса.Добавить(Файл);			
			
		Иначе
			
			Если ТипЗнч(Ресурс.Ссылка) = Тип("СправочникСсылка.ТестовыеВопросы") Тогда
				
				ФорматированныйДокумент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ресурс.Ссылка, "Задание").Получить();
				
			ИначеЕсли КоммуникацииСуществуют И МодульУправленияОбучения.ЭтоСообщение(Ресурс.Ссылка) Тогда
				
				ФорматированныйДокумент = МодульУправленияОбучения.ФорматированныйДокументСообщения(Ресурс.Ссылка);				
			
			Иначе // Форматированный документ
				
				Если ЗначениеЗаполнено(Ресурс.КодДанных) Тогда
					ФорматированныйДокумент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ресурс.Ссылка, Ресурс.КодДанных);
				Иначе
					ФорматированныйДокумент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ресурс.Ссылка, "ФорматированныйДокумент");
				КонецЕсли;
				
				ФорматированныйДокумент = ФорматированныйДокумент.Получить();
			
			КонецЕсли;
			
			ТекстHTML = Неопределено;
			Вложения  = Неопределено;
			
			ФорматированныйДокумент.ПолучитьHTML(ТекстHTML, Вложения);
			
			МассивФайловРесурса = Новый Массив;
			
			Для каждого Вложение Из Вложения Цикл
				
				// Находим имя файла. Имя файла - это ключ вложения,
				// плюс расширение картинки, если это картинка.
				
				Если ТипЗнч(Вложение.Значение) = Тип("Картинка") Тогда
					Расширение = ЭлектронноеОбучениеСлужебныйКлиентСервер.РасширениеКартинки(Вложение.Значение.Формат());
					ИмяФайлаВложения = Вложение.Ключ + Расширение;
				Иначе
					ИмяФайлаВложения = Вложение.Ключ;
				КонецЕсли;
				
				Файл = Справочники.ЭлектронныеРесурсы.ПустаяСтруктураФайлаДляВыгрузки();
				
				Файл.Вставить("ИмяФайла", ИмяФайлаВложения);
				Файл.Вставить("ЭтоКаталог", Ложь);
				Файл.Вставить("ДвоичныеДанные", Вложение.Значение.ПолучитьДвоичныеДанные());
				Файл.Вставить("ТипФайла", ЭлектронноеОбучениеСлужебный.ИмяЗначенияПеречисления(Перечисления.ТипыЭлементовЭлектронныхРесурсов.Image));
				Файл.Вставить("ПодчиненныеФайлы", Неопределено);
				
				МассивФайловРесурса.Добавить(Файл);
								
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Ресурс.Идентификатор) Тогда
			
			Каталог = Справочники.ЭлектронныеРесурсы.ПустаяСтруктураФайлаДляВыгрузки();
			Каталог.Вставить("ИмяФайла", Ресурс.Идентификатор+Ресурс.ПостФикс);
			Каталог.Вставить("ЭтоКаталог", Истина);
			Каталог.Вставить("ДвоичныеДанные", Неопределено);
			Каталог.Вставить("ТипФайла", Неопределено);
			
			Каталог.Вставить("ПодчиненныеФайлы", МассивФайловРесурса); // Файлы ресурсы выгружается в каталог ресурса
			
			МассивФайлов.Добавить(Каталог);
			
		Иначе
			
			Для каждого Элемент Из МассивФайловРесурса Цикл
				МассивФайлов.Добавить(Элемент); // Файлы ресурса выгружается в корень каталога ресурсов.
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивФайлов;
	
КонецФункции

// Записывает в журнал регистрации описание ошибки.
//
// Параметры:
//	СообщениеОбОшибке - Строка - строковое представление ошибки.
//	Данные - Произвольный - данные, к которым относится сообщение об ошибке.
//
Процедура ЗаписатьОшибкуВЖурналРегистрации(СообщениеОбОшибке, Данные = Неопределено) Экспорт
	ЭлектронноеОбучениеСлужебный.ЗаписатьОшибкуВЖурналРегистрации(СообщениеОбОшибке, Данные);
КонецПроцедуры

Функция СмещениеСтандартногоВремениБазы() Экспорт
	Возврат СмещениеСтандартногоВремени();
КонецФункции

Функция СсылкаСуществуетВБазе(Ссылка, СчитатьПомеченныеНаУдалениеОтсутствующими = Ложь) Экспорт
	ЭлектронноеОбучениеСлужебный.СсылкаСуществуетВБазе(Ссылка, СчитатьПомеченныеНаУдалениеОтсутствующими); 
КонецФункции

Функция ИмяЗначенияПеречисления(ЗначениеПеречисления) Экспорт

	Возврат ЭлектронноеОбучениеСлужебный.ИмяЗначенияПеречисления(ЗначениеПеречисления); 
	
КонецФункции

#КонецОбласти
