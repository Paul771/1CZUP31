#Область СлужебныйПрограммныйИнтерфейс

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//
// Параметры:
//  Обработчики - это таблица значений, возвращаемая функцией
//                НоваяТаблицаОбработчиковОбновления модуля ОбновлениеИнформационнойБазы.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия    = "1.0.0.0";
//  Обработчик.Процедура = "ОбновлениеИБ.ПерейтиНаВерсию_1_0_0_0";
// 
//  Все свойства обработчика см. в комментарии к функции
//  НоваяТаблицаОбработчиковОбновления в модуле ОбновлениеИнформационнойБазы.
//
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.15.8";
	Обработчик.Процедура = "ЗарплатаКадрыБазоваяВерсия.УстановитьЗначениеКонстантыНеИспользуетсяБазоваяВерсия";
	Обработчик.НачальноеЗаполнение = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьЗначениеКонстантыНеИспользуетсяБазоваяВерсия() Экспорт
	
	Константы.НеИспользуетсяБазоваяВерсия.Установить(НЕ СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации());
	
КонецПроцедуры

Функция ЭтоБазоваяВерсияКонфигурации() Экспорт
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		Возврат Ложь
	Иначе
		УстановитьПривилегированныйРежим(Истина);
		Возврат Не Константы.НеИспользуетсяБазоваяВерсия.Получить();
	КонецЕсли
	
КонецФункции

#КонецОбласти
