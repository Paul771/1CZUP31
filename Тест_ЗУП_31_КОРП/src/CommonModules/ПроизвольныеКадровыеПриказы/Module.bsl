
////////////////////////////////////////////////////////////////////////////////
// Подсистема «Произвольные кадровые приказы».
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановитьИспользованиеПроизвольныхКадровыхПриказов() Экспорт
	
	// Включаем использование Произвольных кадровых приказов в том случае, 
	// если есть хотя бы один шаблон.
	
	ИспользоватьПроизвольныеКадровыеПриказы = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Справочник.ШаблоныПроизвольныхКадровыхПриказов КАК ШаблоныПроизвольныхКадровыхПриказов
	|ГДЕ
	|	НЕ ШаблоныПроизвольныхКадровыхПриказов.ПометкаУдаления
	|	И НЕ ШаблоныПроизвольныхКадровыхПриказов.ВАрхиве
	|	И НЕ ШаблоныПроизвольныхКадровыхПриказов.ЭтоГруппа";
	
	ИспользоватьПроизвольныеКадровыеПриказы = Не Запрос.Выполнить().Пустой();
	
	ТекущееИспользование = Константы.ИспользоватьПроизвольныеКадровыеПриказы.Получить();
	Если ТекущееИспользование <> ИспользоватьПроизвольныеКадровыеПриказы Тогда
		Константы.ИспользоватьПроизвольныеКадровыеПриказы.Установить(ИспользоватьПроизвольныеКадровыеПриказы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПодменюПроизвольныеКадровыеПриказы(ОписаниеМеню) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПроизвольныеКадровыеПриказы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.ШаблоныПроизвольныхКадровыхПриказов) Тогда
		Возврат;
	КонецЕсли;
	
	ГруппыКоманд = Новый Соответствие;
	
	ПунктыМеню = Новый Массив;
	
	ПунктМенюПроизвольныеКадровыеПриказы = СотрудникиФормы.РазделМеню(НСтр("ru='Произвольные кадровые приказы'"), ПунктыМеню);
	ОписаниеМеню.Пункты.Добавить(ПунктМенюПроизвольныеКадровыеПриказы);
		
	ТаблицаВидовДокументов = Справочники.ШаблоныПроизвольныхКадровыхПриказов.ТаблицаВидовДокументов();
   	Для Каждого СтрокаТаблицы Из ТаблицаВидовДокументов Цикл
		НоваяКомандаСозданияДокумента(СтрокаТаблицы.ВидДокумента, СтрокаТаблицы.Представление, СтрокаТаблицы.Родитель, ПунктМенюПроизвольныеКадровыеПриказы, ГруппыКоманд, ОписаниеМеню);
	КонецЦикла;	
			
КонецПроцедуры	

Процедура НоваяКомандаСозданияДокумента(ВидДокумента, Заголовок, Подменю, ПунктМенюПроизвольныеКадровыеПриказы, ГруппыКоманд, ОписаниеМеню)
	
	ИдентификаторВидаДокумента = ВидДокумента.УникальныйИдентификатор();
	
	ГруппаКнопок = ПодменюСозданияДокументов(Подменю, ПунктМенюПроизвольныеКадровыеПриказы, ГруппыКоманд, ОписаниеМеню);
			
	ГруппаКнопок.Пункты.Добавить(ЗарплатаКадры.ПунктМеню(
			Заголовок, "КомандаВводаНаОсновании_Документы_ПроизвольныйКадровыйПриказ__" + СтрЗаменить(Строка(ИдентификаторВидаДокумента), "-", "_"), "Подключаемый_ОформитьНаОсновании"));
	
КонецПроцедуры

Функция ПодменюСозданияДокументов(ПодменюСсылка, ПунктМенюПроизвольныеКадровыеПриказы, ГруппыКоманд, ОписаниеМеню)
	
	Если Не ЗначениеЗаполнено(ПодменюСсылка) Тогда
		Возврат ПунктМенюПроизвольныеКадровыеПриказы;
	КонецЕсли;
	
	Если ГруппыКоманд <> Неопределено Тогда
		ПодменюИмя = ГруппыКоманд.Получить(ПодменюСсылка);
		Если ПодменюИмя <> Неопределено Тогда
			Возврат НайтиПодменю(ПодменюИмя, ПунктМенюПроизвольныеКадровыеПриказы);
		КонецЕсли;
	КонецЕсли;
	
	ИдентификаторЭлемента = ЗарплатаКадрыРасширенныйКлиентСервер.УникальноеИмяРеквизита();
	
	ПодменюРодитель = ПодменюСозданияДокументов(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодменюСсылка, "Родитель"), ПунктМенюПроизвольныеКадровыеПриказы, ГруппыКоманд, ОписаниеМеню);
	
	ПунктыМеню = Новый Массив;

	ПунктМенюРодитель = СотрудникиФормы.РазделМеню(Строка(ПодменюСсылка), ПунктыМеню);
	ПодменюРодитель.Пункты.Добавить(ПунктМенюРодитель);

	ГруппыКоманд.Вставить(ПодменюСсылка, ПунктМенюРодитель);
	
	Возврат ПунктМенюРодитель;
	
КонецФункции

Функция НайтиПодменю(ПодменюИмя, Подменю)
	
	Индекс = Подменю.Пункты.Найти(ПодменюИмя);
	Если Индекс <> Неопределено Тогда
		Возврат Подменю.Пункты.Получить(Индекс);
	КонецЕсли;
	
	Для Каждого Пункт Из Подменю.Пункты Цикл
		
		Если Пункт.Вид = ВидГруппыФормы.Подменю Тогда
			Возврат НайтиПодменю(ПодменюИмя, Пункт);
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.ПроизвольныйКадровыйПриказ);
	
КонецПроцедуры

Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ПроизвольныйКадровыйПриказ", "Дата",	"КадровыйУчет", "Организация");	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПроизвольныйКадровыйПриказ") Тогда
		
		Объект.Организация = ДанныеЗаполнения.Организация;
		Объект.ДокументОснование = ДанныеЗаполнения;
		
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.Премия") Тогда
			Если ДанныеЗаполнения.Шаблон.НесколькоСотрудников Тогда
				Объект.Начисления.Загрузить(ДанныеЗаполнения.Сотрудники.Выгрузить());
			ИначеЕсли ЗначениеЗаполнено(ДанныеЗаполнения.Сотрудник) Тогда
				НоваяСтрокаНачисления = Объект.Начисления.Добавить();
				НоваяСтрокаНачисления.Сотрудник = ДанныеЗаполнения.Сотрудник;
			КонецЕсли;	
		КонецЕсли;	
			
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.93";
	Обработчик.Процедура = "ПроизвольныеКадровыеПриказы.ЗаполнитьТабличнуюЧастьФизическиеЛица";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("2f991f04-a145-4917-97ae-7522b86fa33d");
	Обработчик.Комментарий = НСтр("ru = 'Обновление сведений о физических лицах произвольных кадровых приказов.'");

КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьФизическиеЛица(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ПроизвольныйКадровыйПриказ.Ссылка
	|ИЗ
	|	Документ.ПроизвольныйКадровыйПриказ КАК ПроизвольныйКадровыйПриказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизвольныйКадровыйПриказ.ФизическиеЛица КАК ПроизвольныйКадровыйПриказФизическиеЛица
	|		ПО ПроизвольныйКадровыйПриказФизическиеЛица.Ссылка = ПроизвольныйКадровыйПриказ.Ссылка
	|ГДЕ
	|	ПроизвольныйКадровыйПриказФизическиеЛица.Ссылка ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Документ = Выборка.Ссылка.ПолучитьОбъект();
		Документ.ЗаполнитьТабличнуюЧастьФизическиеЛица();
		Документ.ОбменДанными.Загрузка = Истина;
		Документ.Записать();	
	
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Выборка.Количество() = 0;
	
КонецПроцедуры

#КонецОбласти