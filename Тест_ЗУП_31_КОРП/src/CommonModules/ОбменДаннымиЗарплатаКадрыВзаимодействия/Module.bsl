////////////////////////////////////////////////////////////////////////////////
// Подсистема "Взаимодействия"
// Серверные процедуры, обслуживающие правила регистрации объектов.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура ПриПолученииДанныхФайла(ПланОбменаОбъект, ЭлементДанных) Экспорт
	
	ДополнитьДополнительныеСвойстваПланаОбмена(ПланОбменаОбъект);
	
	ТипПолучаемогоОбъекта = ТипЗнч(ЭлементДанных);
	Если ТипПолучаемогоОбъекта = Тип("РегистрСведенийНаборЗаписей.КонтактыВзаимодействий") Тогда
		
		КонтактВзаимодействия = ЭлементДанных.Отбор.Контакт.Значение;
		
		Если ПланОбменаОбъект.ДополнительныеСвойства.КонтактыВзаимодействия.Найти(КонтактВзаимодействия) = Неопределено Тогда
			ПланОбменаОбъект.ДополнительныеСвойства.КонтактыВзаимодействия.Добавить(КонтактВзаимодействия);
		КонецЕсли;
		
	ИначеЕсли ТипПолучаемогоОбъекта = Тип("РегистрСведенийНаборЗаписей.ПредметыПапкиВзаимодействий") Тогда
		
		ПланОбменаОбъект.ДополнительныеСвойства.ПредметыВзаимодействия	= ОбменДаннымиЗарплатаКадрыРасширенный.ОбъединитьМассивы(
			ПланОбменаОбъект.ДополнительныеСвойства.ПредметыВзаимодействия,	ЭлементДанных.ВыгрузитьКолонку("Предмет"));
		ПланОбменаОбъект.ДополнительныеСвойства.ПапкиВзаимодействия	= ОбменДаннымиЗарплатаКадрыРасширенный.ОбъединитьМассивы(
			ПланОбменаОбъект.ДополнительныеСвойства.ПапкиВзаимодействия,		ЭлементДанных.ВыгрузитьКолонку("ПапкаЭлектронногоПисьма"));
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Взаимодействия
	
КонецПроцедуры

Процедура ПослеЗагрузкиДанных(ПланОбменаОбъект) Экспорт
	
	ДополнитьДополнительныеСвойстваПланаОбмена(ПланОбменаОбъект);
	
	// Расчет состояния контактов и очистка от дублей справочника СтроковыеКонтактыВзаимодействия.
	Если ПланОбменаОбъект.ДополнительныеСвойства.КонтактыВзаимодействия.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОсновнойОбход.Ссылка КАК Ссылка,
		|	ПовторнаяВыборка.Ссылка КАК Дубль,
		|	ПовторнаяВыборка.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.СтроковыеКонтактыВзаимодействий КАК ОсновнойОбход
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтроковыеКонтактыВзаимодействий КАК ПовторнаяВыборка
		|		ПО ОсновнойОбход.Наименование = ПовторнаяВыборка.Наименование
		|			И (НЕ ОсновнойОбход.Ссылка = ПовторнаяВыборка.Ссылка)
		|ГДЕ
		|	НЕ ПовторнаяВыборка.Ссылка ЕСТЬ NULL 
		|	И ОсновнойОбход.Ссылка В(&МассивПолученных)
		|	И НЕ ОсновнойОбход.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновнойОбход.Ссылка,
		|	ПовторнаяВыборка.Ссылка,
		|	ПовторнаяВыборка.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("МассивПолученных", ПланОбменаОбъект.ДополнительныеСвойства.КонтактыВзаимодействия);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			// Сформируем соответствие ссылок и дублей.
			СоответствиеЗначений = Новый Соответствие;
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
			
				СоответствиеЗначений.Вставить(Выборка.Дубль, Выборка.Ссылка);
				
				Если Не Выборка.ПометкаУдаления Тогда
					СправочникОбъект = Выборка.Дубль.ПолучитьОбъект();
					Попытка
						СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
					Исключение
					КонецПопытки;
				КонецЕсли;
				
			КонецЦикла;
			
			ЗарплатаКадры.ЗаменитьСсылки(СоответствиеЗначений);
		
		КонецЕсли;
		
		// Расчет состояния контактов
		Взаимодействия.РассчитатьРассмотреноПоКонтактам(Взаимодействия.ТаблицаДанныхДляРасчетаРассмотрено(
			ПланОбменаОбъект.ДополнительныеСвойства.КонтактыВзаимодействия, "Контакт"));
		
	КонецЕсли;
	
	// Расчет состояние предметов взаимодействия
	Если ПланОбменаОбъект.ДополнительныеСвойства.ПредметыВзаимодействия.Количество() > 0 Тогда
		Взаимодействия.РассчитатьРассмотреноПоПредметам(Взаимодействия.ТаблицаДанныхДляРасчетаРассмотрено(
			ПланОбменаОбъект.ДополнительныеСвойства.ПредметыВзаимодействия, "Предмет"));
	КонецЕсли;
	
	// Расчет состояния папок взаимодействия
	Если ПланОбменаОбъект.ДополнительныеСвойства.ПапкиВзаимодействия.Количество() > 0 Тогда
		Взаимодействия.РассчитатьРассмотреноПоПапкам(
			Взаимодействия.ТаблицаДанныхДляРасчетаРассмотрено(ПланОбменаОбъект.ДополнительныеСвойства.ПапкиВзаимодействия, "Папка"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьДополнительныеСвойстваПланаОбмена(ПланОбменаОбъект)
	
	Если Не ПланОбменаОбъект.ДополнительныеСвойства.Свойство("КонтактыВзаимодействия") Тогда
		ПланОбменаОбъект.ДополнительныеСвойства.Вставить("КонтактыВзаимодействия", Новый Массив);
	КонецЕсли;
	Если Не ПланОбменаОбъект.ДополнительныеСвойства.Свойство("ПредметыВзаимодействия") Тогда
		ПланОбменаОбъект.ДополнительныеСвойства.Вставить("ПредметыВзаимодействия", Новый Массив);
	КонецЕсли;
	Если Не ПланОбменаОбъект.ДополнительныеСвойства.Свойство("ПапкиВзаимодействия") Тогда
		ПланОбменаОбъект.ДополнительныеСвойства.Вставить("ПапкиВзаимодействия", Новый Массив);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
