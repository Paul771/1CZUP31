
#Область СлужебныеПроцедурыИФункции

// Возвращает Таблицу соответствия КодовДоходаНДФЛ, Категории начисления (для кода дохода 4800) и Категории дохода
// Если заполнен параметр КодДоходаНДФЛ тип СправочникСсылка.ВидыДоходовНДФЛ, то соответствие будет возвращено только
// для этого кода.
//
Функция СопоставлениеКодовИКатегорийДоходовНДФЛ(КодДоходаНДФЛ = Неопределено) Экспорт
	
	СоответствиеКодов = Новый ТаблицаЗначений;
	СоответствиеКодов.Колонки.Добавить("КодДохода", Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));
	СоответствиеКодов.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
	СоответствиеКодов.Колонки.Добавить("КатегорияНачисления", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"));
	СоответствиеКодов.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1)));
	
	ДивидендыПоСтавкам = Новый Массив;
	АвторскиеРоялтиПоСтавкам = Новый Массив;
	Если ПолучитьФункциональнуюОпцию("ИспользуютсяСтавкиНДФЛМеждународныхДоговоров") Тогда
		ДивидендыПоСтавкам = ОбщегоНазначенияКлиентСервер.РазностьМассивов(Перечисления.КатегорииДоходовНДФЛ.Дивиденды(), Перечисления.КатегорииДоходовНДФЛ.ПоОсновнойСтавке());
		АвторскиеРоялтиПоСтавкам = Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялти();
	КонецЕсли;

	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВидыДоходовНДФЛ.Ссылка КАК КодДохода,
	|	ВидыДоходовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК Код
	|ИЗ
	|	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	|ГДЕ
	|	&Условие";
	Если ЗначениеЗаполнено(КодДоходаНДФЛ) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие", "ВидыДоходовНДФЛ.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", КодДоходаНДФЛ);
	Иначе
		Запрос.УстановитьПараметр("Условие", Истина);
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		КатегорияДохода = УчетНДФЛПовтИсп.КатегорияДоходаПоЕгоКоду(Выборка.КодДохода);
		
		Если Выборка.Код = "2002" Тогда
			Если КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда Тогда
				УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, КатегорияДохода, Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности);
			Иначе  // как прочие доходы от трудовой деятельности в денежной форме
				УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, КатегорияДохода, Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы);
			КонецЕсли;
		ИначеЕсли КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда 
			Или КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы Тогда
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, КатегорияДохода);
			
		ИначеЕсли КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.Дивиденды Тогда
			
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, КатегорияДохода, ДивидендыПоСтавкам);
			
		// Оплата труда в натуральной форме
		ИначеЕсли КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности Тогда
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, КатегорияДохода, Перечисления.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы);
			
		// Прочие доходы от трудовой деятельности в денежной форме
		ИначеЕсли КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности Тогда
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, КатегорияДохода, Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы);
			
		// ПрочиеДоходы
		ИначеЕсли Выборка.Код = "1011"
			Или Выборка.Код = "1110"
			Или Выборка.Код = "1537"
			Или Выборка.Код = "1538"
			Или Выборка.Код = "1551"
			Или Выборка.Код = "1552"
			Или Выборка.Код = "1300"
			Или Выборка.Код = "1301"
			Или Выборка.Код = "2210" Тогда
			
			ДополнительныеКатегории = Новый Массив;
			ДополнительныеКатегории.Добавить(Перечисления.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДополнительныеКатегории, АвторскиеРоялтиПоСтавкам);
			
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы, 
											ДополнительныеКатегории);

		ИначеЕсли Выборка.Код = "2201"
			Или Выборка.Код = "2202"
			Или Выборка.Код = "2203"
			Или Выборка.Код = "2204"
			Или Выборка.Код = "2205"
			Или Выборка.Код = "2206"
			Или Выборка.Код = "2207"
			Или Выборка.Код = "2208"
			Или Выборка.Код = "2209" Тогда
			
			ДополнительныеКатегории = Новый Массив;
			ДополнительныеКатегории.Добавить(Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДополнительныеКатегории, АвторскиеРоялтиПоСтавкам);
			
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы, 
											ДополнительныеКатегории);
			
		ИначеЕсли Выборка.Код = "2760" Тогда
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности);
			
		// код 4800 обработываем отдельно
		ИначеЕсли Выборка.Код = "4800" Тогда
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
											Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда);
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
											Перечисления.КатегорииНачисленийИНеоплаченногоВремени.РайонныйКоэффициент);
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
											Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СевернаяНадбавка);
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы,
											Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаКомандировки);
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы, 
											,
											Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Прочее);
			
		// все остальные
		Иначе
			УчетФактическиПолученныхДоходов.НовоеСоответствиеКодуДохода(СоответствиеКодов, Выборка.КодДохода, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеДоходы, 
											Перечисления.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СоответствиеКодов;
	
КонецФункции

// Регистрирует полученный доход "Начислятелей" на новую дату получения дохода
// Параметры:
//		Регистратор - ДокументСсылка - документ выплаты
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - должен содержать временные таблицы 
//      	ВТСписокСотрудников, с данными о выплатах вида:
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты.
//          	ДокументОснование, необязательная
//          	СтатьяФинансирования, необязательная
//          	СтатьяРасходов, необязательная
//          	СуммаНачисленная, необязательная
//          	СуммаВыплаченная, необязательная, 
//			Если колонки СуммаНачисленная, СуммаВыплаченная отсутствуют, возможная частичная выплата не будет учтена.
//		Движения - коллекция движений регистратора.
//		ДатаВыплаты - дата - новая дата получения дохода.
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		Отказ - признак отказа от заполнения движений.
//
Процедура ЗарегистрироватьНовуюДатуПолученияДохода(Регистратор, Движения, МенеджерВременныхТаблиц, ДатаВыплаты, ДатаОперации, Отказ, Записывать = Ложь) Экспорт

	Если Отказ Или ДатаВыплаты < УчетФактическиПолученныхДоходов.ДатаНачалаИспользованияПодсистемы() Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеВедомости.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеВедомости.ДокументОснование КАК ДокументОснование,
	|	ДанныеВедомости.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ДанныеВедомости.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(ДанныеВедомости.СуммаВыплаты) КАК СуммаВыплаты,
	|	СУММА(ДанныеВедомости.СуммаНачисленная) КАК СуммаНачисленная,
	|	СУММА(ДанныеВедомости.СуммаВыплаченная) КАК СуммаВыплаченная
	|ПОМЕСТИТЬ ВТДанныеДляОтбора
	|ИЗ
	|	ВТСписокСотрудников КАК ДанныеВедомости
	|ГДЕ
	|	ДанныеВедомости.ДокументОснование <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеВедомости.ФизическоеЛицо,
	|	ДанныеВедомости.ДокументОснование,
	|	ДанныеВедомости.СтатьяФинансирования,
	|	ДанныеВедомости.СтатьяРасходов";
	КолонкиРезультата = МенеджерВременныхТаблиц.Таблицы["ВТСписокСотрудников"].Колонки;
	Если КолонкиРезультата.Найти("ДокументОснование") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.ДокументОснование", "НЕОПРЕДЕЛЕНО") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СуммаНачисленная") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.СуммаНачисленная", "0") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СуммаВыплаченная") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.СуммаВыплаченная", "0") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СтатьяФинансирования") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.СтатьяФинансирования", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	Если КолонкиРезультата.Найти("СтатьяРасходов") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеВедомости.СтатьяРасходов", "НЕОПРЕДЕЛЕНО") 
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	// Учет доходов для исчисления НДФЛ
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
	|	СведенияОДоходахНДФЛ.КодВычета КАК КодВычета,
	|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.Организация КАК Организация,
	|	СведенияОДоходахНДФЛ.Начисление КАК Начисление,
	|	СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|	СведенияОДоходахНДФЛ.Сотрудник КАК Сотрудник,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника КАК ПодразделениеСотрудника,
	|	СведенияОДоходахНДФЛ.УдалитьОрганизация КАК УдалитьОрганизация,
	|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ КАК НеУчитыватьДоходВ6НДФЛ,
	|	СведенияОДоходахНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СведенияОДоходахНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
	|	СведенияОДоходахНДФЛ.УстаревшаяДатаПолученияДохода КАК УстаревшаяДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ДокументОснование КАК ДокументОснование,
	|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
	|	СУММА(СведенияОДоходахНДФЛ.СуммаВычета) КАК СуммаВычета,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходахНДФЛ.Регистратор = СведенияОДоходахНДФЛ.ДокументОснование
	|				ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВаловаяСуммаДохода,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходахНДФЛ.Регистратор = СведенияОДоходахНДФЛ.ДокументОснование
	|				ТОГДА СведенияОДоходахНДФЛ.СуммаВычета
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВаловаяСуммаВычета,
	|	МАКСИМУМ(Выплаты.ДоляВыплаты) КАК ДоляВыплаты
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Выплаты.ФизическоеЛицо КАК ФизическоеЛицо,
	|			Выплаты.ДокументОснование КАК ДокументОснование,
	|			Выплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|			Выплаты.СтатьяРасходов КАК СтатьяРасходов,
	|			ВЫБОР
	|				КОГДА Выплаты.СуммаНачисленная = 0
	|					ТОГДА 1
	|				КОГДА Выплаты.СуммаНачисленная < 0
	|						И Выплаты.СуммаВыплаты = Выплаты.СуммаНачисленная
	|					ТОГДА 1
	|				КОГДА Выплаты.СуммаВыплаченная + Выплаты.СуммаВыплаты > Выплаты.СуммаНачисленная * 0.9
	|					ТОГДА 1
	|				КОГДА Выплаты.СуммаВыплаченная + Выплаты.СуммаВыплаты <= Выплаты.СуммаНачисленная * 0.1
	|					ТОГДА 0
	|				ИНАЧЕ Выплаты.СуммаВыплаты / Выплаты.СуммаНачисленная
	|			КОНЕЦ КАК ДоляВыплаты
	|		ИЗ
	|			ВТДанныеДляОтбора КАК Выплаты) КАК Выплаты
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = Выплаты.ФизическоеЛицо
	|			И СведенияОДоходахНДФЛ.ДокументОснование = Выплаты.ДокументОснование
	|			И (СведенияОДоходахНДФЛ.СтатьяФинансирования = Выплаты.СтатьяФинансирования
	|				ИЛИ Выплаты.СтатьяФинансирования = НЕОПРЕДЕЛЕНО)
	|			И (СведенияОДоходахНДФЛ.СтатьяРасходов = Выплаты.СтатьяРасходов
	|				ИЛИ Выплаты.СтатьяРасходов = НЕОПРЕДЕЛЕНО)
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор <> &Регистратор
	|	И СведенияОДоходахНДФЛ.УстаревшаяДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1)
	|	И НЕ СведенияОДоходахНДФЛ.ДатаПолученияДоходаФиксирована
	|	И СведенияОДоходахНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|	И СведенияОДоходахНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
	|	И Выплаты.ДоляВыплаты > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ,
	|	СведенияОДоходахНДФЛ.УстаревшаяДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.СтатьяРасходов,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ДокументОснование,
	|	СведенияОДоходахНДФЛ.Начисление,
	|	СведенияОДоходахНДФЛ.СтатьяФинансирования,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.УдалитьОрганизация,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДоходаФиксирована,
	|	СведенияОДоходахНДФЛ.КатегорияДохода,
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.Организация,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.КодДохода
	|
	|ИМЕЮЩИЕ
	|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) <> 0";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СуммаДохода = 0;
		СуммаВычета = 0;
		Если Выборка.СуммаДохода * Выборка.СуммаДохода > (Выборка.ВаловаяСуммаДохода * Выборка.ДоляВыплаты) * (Выборка.ВаловаяСуммаДохода * Выборка.ДоляВыплаты) Тогда
			СуммаДохода = Выборка.ВаловаяСуммаДохода * Выборка.ДоляВыплаты;
		Иначе
			СуммаДохода = Выборка.СуммаДохода;
		КонецЕсли;
		Если Выборка.СуммаВычета * Выборка.СуммаВычета > (Выборка.ВаловаяСуммаВычета * Выборка.ДоляВыплаты) * (Выборка.ВаловаяСуммаВычета * Выборка.ДоляВыплаты) Тогда
			СуммаВычета = Выборка.ВаловаяСуммаВычета * Выборка.ДоляВыплаты;
		Иначе
			СуммаВычета = Выборка.СуммаВычета;
		КонецЕсли;
		Если СуммаДохода = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		НовоеДвижение = Движения.СведенияОДоходахНДФЛ.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеДвижение, Выборка);
		НовоеДвижение.СуммаДохода = - СуммаДохода;
		НовоеДвижение.СуммаВычета = - СуммаВычета;
		НовоеДвижение.Период = ДатаОперации;
		
		НовоеДвижение = Движения.СведенияОДоходахНДФЛ.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеДвижение, Выборка);
		НовоеДвижение.СуммаДохода = СуммаДохода;
		НовоеДвижение.СуммаВычета = СуммаВычета;
		НовоеДвижение.УстаревшаяДатаПолученияДохода = Выборка.ДатаПолученияДохода;
		НовоеДвижение.ДатаПолученияДохода = ДатаВыплаты;
		НовоеДвижение.МесяцНалоговогоПериода = НачалоМесяца(ДатаВыплаты);
		НовоеДвижение.Период = ДатаОперации;
		
	КонецЦикла;
	Если Записывать Тогда
		Движения.СведенияОДоходахНДФЛ.Записать();
		Движения.СведенияОДоходахНДФЛ.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	// Расчеты налогоплательщиков с бюджетом по НДФЛ
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания КАК ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления КАК СрокПеречисления,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты КАК КрайнийСрокУплаты,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ КАК УчитыватьВыплаченныйДоходВ6НДФЛ,
	|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВаловаяСумма,
	|	МАКСИМУМ(Выплаты.ДоляВыплаты) КАК ДоляВыплаты
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Выплаты.ФизическоеЛицо КАК ФизическоеЛицо,
	|			Выплаты.ДокументОснование КАК ДокументОснование,
	|			Выплаты.СуммаВыплаты КАК СуммаВыплаты,
	|			Выплаты.СуммаНачисленная КАК СуммаНачисленная,
	|			Выплаты.СуммаВыплаченная КАК СуммаВыплаченная,
	|			ВЫБОР
	|				КОГДА Выплаты.СуммаНачисленная = 0
	|					ТОГДА 1
	|				КОГДА Выплаты.СуммаНачисленная < 0
	|						И Выплаты.СуммаВыплаты = Выплаты.СуммаНачисленная
	|					ТОГДА 1
	|				КОГДА Выплаты.СуммаВыплаченная + Выплаты.СуммаВыплаты > Выплаты.СуммаНачисленная * 0.9
	|					ТОГДА 1
	|				КОГДА Выплаты.СуммаВыплаченная + Выплаты.СуммаВыплаты <= Выплаты.СуммаНачисленная * 0.1
	|					ТОГДА 0
	|				ИНАЧЕ Выплаты.СуммаВыплаты / Выплаты.СуммаНачисленная
	|			КОНЕЦ КАК ДоляВыплаты
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ДанныеДляОтбора.ФизическоеЛицо КАК ФизическоеЛицо,
	|				ДанныеДляОтбора.ДокументОснование КАК ДокументОснование,
	|				СУММА(ДанныеДляОтбора.СуммаВыплаты) КАК СуммаВыплаты,
	|				СУММА(ДанныеДляОтбора.СуммаНачисленная) КАК СуммаНачисленная,
	|				СУММА(ДанныеДляОтбора.СуммаВыплаченная) КАК СуммаВыплаченная
	|			ИЗ
	|				ВТДанныеДляОтбора КАК ДанныеДляОтбора
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДанныеДляОтбора.ФизическоеЛицо,
	|				ДанныеДляОтбора.ДокументОснование) КАК Выплаты) КАК Выплаты
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = Выплаты.ДокументОснование
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Выплаты.ФизическоеЛицо
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	|	И НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДатаПолученияДоходаФиксирована
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УстаревшаяДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1)
	|	И Выплаты.ДоляВыплаты > 0
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода
	|
	|ИМЕЮЩИЕ
	|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) <> 0";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Сумма = 0;
		Если Выборка.Сумма * Выборка.Сумма > (Выборка.ВаловаяСумма * Выборка.ДоляВыплаты) * (Выборка.ВаловаяСумма * Выборка.ДоляВыплаты) Тогда
			Сумма = Выборка.ВаловаяСумма * Выборка.ДоляВыплаты;
		Иначе
			Сумма = Выборка.Сумма;
		КонецЕсли;
		Если Сумма = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		НовоеДвижение = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(НовоеДвижение, Выборка);
		НовоеДвижение.Сумма = - Сумма;
		НовоеДвижение.Период = ДатаОперации;
		
		НовоеДвижение = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(НовоеДвижение, Выборка);
		НовоеДвижение.Сумма = Сумма;
		НовоеДвижение.УстаревшаяДатаПолученияДохода = Выборка.МесяцНалоговогоПериода;
		НовоеДвижение.МесяцНалоговогоПериода = ДатаВыплаты;
		НовоеДвижение.Период = ДатаОперации;
		
	КонецЦикла;
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, "ВТДанныеДляОтбора");
	
КонецПроцедуры

Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.26";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("51e7db57-585a-4ebe-83dd-0f368b0532ac");
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Категория дохода"" в начислениях'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаНДФЛВНачислениях";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.26";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("69714da3-2bb2-4f35-9fe3-4249962753e5");
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Категория дохода"" в документе ""Операция учета НДФЛ""'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаВОперацияНалоговогоУчетаПоНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.26";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаВДвиженияхРеестрДСВ_3ПоРегиструСведенияОДоходахНДФЛ";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("cbdcac08-a163-499f-b16f-ba4eec5476a7");
	Обработчик.Комментарий = НСтр("ru = 'Заполниние «Категории Дохода» в движениях документа «Реестр ДСВ-3» по регистру «Учет доходов для исчисления НДФЛ».'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.26";
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаВДвиженияхРеестрДСВ_3ПоРегиструРасчетыНалогоплательщиковСБюджетомПоНДФЛ";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("291ad11c-9e25-48d8-b688-c5bc7668b4e3");
	Обработчик.Комментарий = НСтр("ru = 'Заполниние «Категории Дохода» в движениях документа «Реестр ДСВ-3» по регистру «Расчеты налогоплательщиков с бюджетом по НДФЛ».'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.27";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("770ea0f1-56d0-415e-9d99-31730aa39f6d");
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Категория дохода"" в регистре ""Учет доходов для исчисления НДФЛ""'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаВСведенияОДоходахНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.150";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("fdbc40ab-853e-44ae-9eb3-e0cdf11308f3");
	Обработчик.Комментарий = НСтр("ru='Удаление излишних движений документов выплаты по прошлым годам'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ВычеркнутьДвиженияНалоговПрошлыхЛет";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.150";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("832eb95a-2d29-4bfb-b9e0-2c14cd983b57");
	Обработчик.Комментарий = НСтр("ru='Удаление излишних движений документов выплаты по прошлым годам'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ВычеркнутьДвиженияДоходовПрошлыхЛет";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.158";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d6c695db-d5a9-45bb-b113-992d3a429c10");
	Обработчик.Комментарий = НСтр("ru='Исправить движения документов «Операция учета НДФЛ»'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ИсправитьДвиженияОперацияНалоговогоУчетаПоНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.162";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("32b78721-061c-4a41-a9c2-91f3c23d710e");
	Обработчик.Комментарий = НСтр("ru='Заполняет категории доходов исчисленного и удержанного НДФЛ в документах «Операция учета НДФЛ»'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаВОперацияНалоговогоУчетаПоНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.162";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("eccfeeb3-ab95-413d-8b52-0d6a103bd5a4");
	Обработчик.Комментарий = НСтр("ru='Заполняет категории доходов исчисленного и удержанного НДФЛ пропорционально доходам в документах «Операция учета НДФЛ»'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ИсправитьКатегорииДоходовНДФЛВОперацияНалоговогоУчетаПоНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.163";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e73653ad-c15a-4384-b2f1-f7c692966c7a");
	Обработчик.Комментарий = НСтр("ru='Заполняет категорию дохода в исчисленном НДФЛ межрасчетных документов'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаВИсчисленномНДФЛМежрасчетныхДокументах";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.164";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("12204f6e-fe62-45d0-833b-29750f364943");
	Обработчик.Комментарий = НСтр("ru='Заполняет категорию дохода в исчисленном НДФЛ расчета зарплаты'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаВИсчисленномНДФЛОкончательныйРасчет";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.165";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("b7f7ef93-1e3e-42a2-b32d-ccc0e872b82b");
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Категория дохода"" в удержанном НДФЛ'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ОбнулитьЛишниеСтрокиНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.166";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("47c84377-af9f-4b09-81ed-82815b140d61");
	Обработчик.Комментарий = НСтр("ru='Проверяет распределение суммы выплаченного дохода в удержанном НДФЛ по категориям'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.УточнитьСуммаВыплаченногоДоходаУдержанногоНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.168";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("cd68b480-4fbd-42d8-a88a-38d7dcbf626b");
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Категория дохода"" в удержанном НДФЛ'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКатегориюДоходаВУдержанномНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.169";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("84c4fb04-177b-48ab-8fd4-1593a1821d97");
	Обработчик.Комментарий = НСтр("ru='Проверяет категорию дохода в удержанном НДФЛ'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.УточнитьКатегориюДоходаВУдержанномНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.170";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("382f2e79-c5f1-46cb-9982-937134c16dfd");
	Обработчик.Комментарий = НСтр("ru='Проверяет категорию дохода в удержанном НДФЛ'");
	Обработчик.Процедура = "УчетФактическиПолученныхДоходов.ЗаполнитьКрайнийСрокУплатыУдержанногоНДФЛ";
	
КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВИсчисленномНДФЛМежрасчетныхДокументах(ПараметрыОбновления = Неопределено) Экспорт
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Увольнения", УчетФактическиПолученныхДоходов.РегистраторыУвольнения());
	Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ЗарплатаКадры.РегистраторыПереносаДанных());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТВсеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = СведенияОДоходахНДФЛ.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = СведенияОДоходахНДФЛ.Организация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = СведенияОДоходахНДФЛ.Подразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = СведенияОДоходахНДФЛ.КатегорияДохода
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|			ИЛИ ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) В (&Увольнения))
	|	И (СведенияОДоходахНДФЛ.КатегорияДохода ЕСТЬ NULL
	|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка))
	|	И НЕ ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = СведенияОДоходахНДФЛ.Регистратор)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = СведенияОДоходахНДФЛ.Организация)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = СведенияОДоходахНДФЛ.ДатаПолученияДохода)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = СведенияОДоходахНДФЛ.Подразделение)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = СведенияОДоходахНДФЛ.КатегорияДохода)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход))
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода >= ДАТАВРЕМЯ(2017,1,1)
	|	И (СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|			ИЛИ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&Увольнения))
	|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода ЕСТЬ NULL
	|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка))
	|	И НЕ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТИсключаемыеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				ВсеРегистраторы.Регистратор
	|			ИЗ
	|				ВТВсеРегистраторы КАК ВсеРегистраторы)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеРегистраторы.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	ВТВсеРегистраторы КАК ВсеРегистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключаемыеРегистраторы КАК РегистраторыУдержанногоНДФЛ
	|		ПО ВсеРегистраторы.Регистратор = РегистраторыУдержанногоНДФЛ.Регистратор
	|ГДЕ
	|	РегистраторыУдержанногоНДФЛ.Регистратор ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТРегистраторы.Регистратор КАК Регистратор
	|ИЗ
	|	ВТРегистраторы КАК ВТРегистраторы";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	КатегорииДоходов.КатегорияДохода КАК КатегорияДохода,
	|	КатегорииДоходов.СуммаДохода КАК СуммаДохода,
	|	ЛОЖЬ КАК ДатаПолученияДоходаФиксирована,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|			ВЫБОР
	|				КОГДА ЕСТЬNULL(СведенияОДоходахНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|					ТОГДА ВЫБОР
	|							КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|								ТОГДА ЗНАЧЕНИЕ(перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы)
	|							КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|								ТОГДА ЗНАЧЕНИЕ(перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|							ИНАЧЕ ЗНАЧЕНИЕ(перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|						КОНЕЦ
	|				ИНАЧЕ СведенияОДоходахНДФЛ.КатегорияДохода
	|			КОНЕЦ КАК КатегорияДохода,
	|			ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода - ВЫБОР
	|					КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|						ТОГДА 0
	|					ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|				КОНЕЦ, 0) КАК СуммаДохода
	|		ИЗ
	|			РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|				ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = СведенияОДоходахНДФЛ.Регистратор
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = СведенияОДоходахНДФЛ.Организация
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = СведенияОДоходахНДФЛ.Подразделение
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|					И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента
	|					И НЕ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|		ГДЕ
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|					(ВЫБРАТЬ
	|						Регистраторы.Регистратор КАК Регистратор
	|					ИЗ
	|						ВТРегистраторы КАК Регистраторы)
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)) КАК КатегорииДоходов
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = КатегорииДоходов.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки = КатегорииДоходов.НомерСтроки
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки";
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	ВременныйНабор = НаборЗаписей.ВыгрузитьКолонки();
	ВременныйНабор.Колонки.Добавить("СуммаДохода", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	
	КолонкиГруппировок =
	"Период,
	|Регистратор,
	|ВидДвижения,
	|Активность,
	|ГоловнаяОрганизация, 
	|ФизическоеЛицо, 
	|СтавкаНалогообложенияРезидента, 
	|МесяцНалоговогоПериода, 
	|КатегорияДохода, 
	|РегистрацияВНалоговомОргане, 
	|Организация, 
	|КодДохода,
	|Подразделение,
	|ДокументОснование,
	|ВариантУдержания,
	|ВключатьВДекларациюПоНалогуНаПрибыль,
	|РасчетМежрасчетногоПериода,
	|СуммаВыплаченногоДохода,
	|СрокПеречисления,
	|КрайнийСрокУплаты,
	|УчитыватьВыплаченныйДоходВ6НДФЛ,
	|УстаревшаяДатаПолученияДохода";
	
	КатегорииСФиксированнойДатойДохода = Перечисления.КатегорииДоходовНДФЛ.СФиксированнойДатойПолученияДохода();
	ДокументыСНДФЛ = Новый Соответствие;
	
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		НачатьТранзакцию();
		Попытка
			МетаданныеДокумента = Выборка.Регистратор.Метаданные();
			Регистратор = Выборка.Регистратор;
			ИмяДокумента = МетаданныеДокумента.Имя;
			Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Неопределено Тогда
				ОбновляемДокумент = Ложь;
				Если МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛ") <> Неопределено Тогда 
					ОбновляемДокумент = МетаданныеДокумента.ТабличныеЧасти.НДФЛ.Реквизиты.Найти("Налог") <> Неопределено;
				КонецЕсли;
				ДокументыСНДФЛ.Вставить(ИмяДокумента, ОбновляемДокумент);
			КонецЕсли;
			
			Если ПараметрыОбновления <> НеОпределено Тогда
				
				Блокировка = Новый БлокировкаДанных;
				Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Истина Тогда
					ЭлементБлокировки = Блокировка.Добавить("Документ." + ИмяДокумента);
					ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Регистратор);
				КонецЕсли;
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
				
				Блокировка.Заблокировать();
				
			КонецЕсли;
			
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Очистить();
			
			Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
				
				Если Выборка.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
					ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
					Продолжить;
				КонецЕсли;
				
				ВременныйНабор.Очистить();
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ВременныйНабор.Добавить(), Выборка);
				КонецЦикла;
				
				Если ВременныйНабор.Количество() = 1 Тогда
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, ВременныйНабор[0]);
					Если Не ЗначениеЗаполнено(Запись.КатегорияДохода) Тогда
						Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					КонецЕсли;
					
					Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
						Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
						Запись.ДатаПолученияДоходаФиксирована = Истина;
					КонецЕсли;
					
					Продолжить;
				КонецЕсли;
				
				Коэффициенты = ВременныйНабор.ВыгрузитьКолонку("СуммаДохода");
				РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНабор[0].Сумма, Коэффициенты, 0);
				
				Если РезультатыРаспределения = Неопределено Тогда
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, ВременныйНабор[0]);
					Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					Запись.ДатаПолученияДоходаФиксирована = Истина;
					
				Иначе
					
					Индекс = 0;
					Для Каждого Строка Из ВременныйНабор Цикл
						
						Запись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(Запись, Строка);
						Запись.Сумма = РезультатыРаспределения[Индекс];
						Если Не ЗначениеЗаполнено(Запись.КатегорияДохода) Тогда
							Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						КонецЕсли;
						
						Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
							Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
							Запись.ДатаПолученияДоходаФиксирована = Истина;
						КонецЕсли;
						
						Индекс = Индекс + 1;
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
			ЗаписиНабора = НаборЗаписей.Выгрузить();
			ЗаписиНабора.Свернуть(КолонкиГруппировок, "Сумма");
			НаборЗаписей.Загрузить(ЗаписиНабора);
			
			Для Каждого Запись Из НаборЗаписей Цикл
				Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
					Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
					Запись.ДатаПолученияДоходаФиксирована = Истина;
				КонецЕсли;
			КонецЦикла;
			
			УчетФактическиПолученныхДоходов.УточнитьКрайнийСрокУплаты(НаборЗаписей);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Истина Тогда
				ДокументОбъект = Регистратор.ПолучитьОбъект();
				
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
				Запрос.УстановитьПараметр("Ссылка", Выборка.Регистратор);
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
				|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
				|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
				|	НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
				|	НачислениеЗарплатыНДФЛ.КатегорияДохода КАК КатегорияДохода,
				|	СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
				|	СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
				|	НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ НДФЛДокумента
				|ИЗ
				|	Документ.НачислениеЗарплаты.НДФЛ КАК НачислениеЗарплатыНДФЛ
				|ГДЕ
				|	НачислениеЗарплатыНДФЛ.Ссылка = &Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
				|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
				|	НачислениеЗарплатыНДФЛ.Подразделение,
				|	НачислениеЗарплатыНДФЛ.Ссылка,
				|	НачислениеЗарплатыНДФЛ.КатегорияДохода
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	НДФЛ.НомерСтроки КАК НомерСтрокиДокумента,
				|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
				|	НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
				|	НДФЛ.Подразделение КАК Подразделение,
				|	НДФЛ.Налог КАК Налог,
				|	НДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежей,
				|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
				|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма, 0) КАК Сумма
				|ИЗ
				|	(ВЫБРАТЬ
				|		МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
				|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
				|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
				|		НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
				|		СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
				|		СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
				|		НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
				|	ИЗ
				|		НДФЛДокумента КАК НачислениеЗарплатыНДФЛ
				|	
				|	СГРУППИРОВАТЬ ПО
				|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
				|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
				|		НачислениеЗарплатыНДФЛ.Подразделение,
				|		НачислениеЗарплатыНДФЛ.Ссылка) КАК НДФЛ
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
				|		ПО НДФЛ.Ссылка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
				|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
				|			И НДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
				|			И НДФЛ.МесяцНалоговогоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
				|			И НДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
				|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
				|			И НДФЛ.Ссылка.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	0,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
				|	0,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
				|ИЗ
				|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
				|		ЛЕВОЕ СОЕДИНЕНИЕ НДФЛДокумента КАК НДФЛДокумента
				|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = НДФЛДокумента.Ссылка
				|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
				|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = НДФЛДокумента.ФизическоеЛицо
				|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = НДФЛДокумента.МесяцНалоговогоПериода
				|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = НДФЛДокумента.Подразделение
				|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = НДФЛДокумента.Ссылка.Организация
				|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
				|ГДЕ
				|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = &Ссылка
				|	И НДФЛДокумента.Ссылка ЕСТЬ NULL
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтрокиДокумента";
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.НачислениеЗарплаты.НДФЛ", "Документ." +ИмяДокумента + ".НДФЛ");
				ВыборкаИсчисленного = Запрос.Выполнить().Выбрать();
				
				ТаблицаНДФЛ = ДокументОбъект.НДФЛ.ВыгрузитьКолонки();
				ТаблицаНДФЛ.Колонки.Добавить("НомерСтрокиДокумента", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7)));
				ВременныйНаборИсчисленного = ТаблицаНДФЛ.Скопировать();
				ВременныйНаборИсчисленного.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
				
				Пока ВыборкаИсчисленного.СледующийПоЗначениюПоля("НомерСтрокиДокумента") Цикл
					ВременныйНаборИсчисленного.Очистить();
					
					НомерСтрокиДокумента = ВыборкаИсчисленного.НомерСтрокиДокумента;
					
					Если НомерСтрокиДокумента = 0 Тогда
						Пока ВыборкаИсчисленного.Следующий() Цикл
							НоваяСтрока = ТаблицаНДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИсчисленного);
							НоваяСтрока.Налог = ВыборкаИсчисленного.Сумма;
						КонецЦикла;
						Продолжить;
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(ВыборкаИсчисленного.КатегорияДохода) Тогда
						НоваяСтрока = ТаблицаНДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИсчисленного);
						НоваяСтрока.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						НоваяСтрока.Налог = 0;
						Продолжить;
					КонецЕсли;
					
					СтрокаДокумента = ТаблицаНДФЛ.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВыборкаИсчисленного);
					
					Пока ВыборкаИсчисленного.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ВременныйНаборИсчисленного.Добавить(), ВыборкаИсчисленного);
					КонецЦикла;
					
					Если ВременныйНаборИсчисленного.Количество() = 1 Тогда
						СтрокаДокумента.Налог = ВыборкаИсчисленного.Сумма;
						Продолжить;
					КонецЕсли;
					
					Коэффициенты = ВременныйНаборИсчисленного.ВыгрузитьКолонку("Сумма");
					РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНаборИсчисленного[0].Налог, Коэффициенты, 0);
					Если СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0 Тогда
						РезультатыРаспределенияАванса = Неопределено;
					Иначе
						РезультатыРаспределенияАванса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДокумента.ЗачтеноАвансовыхПлатежей, Коэффициенты, 0);
					КонецЕсли;
					
					Если РезультатыРаспределения = Неопределено Тогда
						
						Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
							СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
						КонецЕсли;
						СтрокаДокумента.Налог = 0;
						
					Иначе
						
						Индекс = 0;
						Для Каждого Строка Из ВременныйНаборИсчисленного Цикл
							
							Если Индекс = 0 Тогда
								СтрокаДокумента.КатегорияДохода = Строка.КатегорияДохода;
								СтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
								Если РезультатыРаспределенияАванса <> Неопределено Тогда
									СтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
								КонецЕсли;
								
							Иначе
								
								НоваяСтрокаДокумента = ТаблицаНДФЛ.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, Строка, , "ЗачтеноАвансовыхПлатежей, ПримененныйВычетЛичный, ПримененныйВычетЛичныйКодВычета, ПримененныйВычетЛичныйКЗачетуВозврату, ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета");
								НоваяСтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
								Если РезультатыРаспределенияАванса <> Неопределено Тогда
									НоваяСтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
								КонецЕсли;
								
							КонецЕсли;
							
							Индекс = Индекс + 1;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
				
				МаксимальныйИдентификатор = УчетНДФЛФормы.МаксимальныйИдентификаторСтрокиНДФЛ(ДокументОбъект.НДФЛ) + 1;
				СтруктураПоиска = Новый Структура("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
				СтрокиНДФЛКУдалению = Новый Массив;
				
				ОбновляемыеНаборыСтрок = ТаблицаНДФЛ.Скопировать();
				ОбновляемыеНаборыСтрок.Свернуть("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
				
				Для Каждого Строка Из ОбновляемыеНаборыСтрок Цикл
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
					СтрокиНДФЛ = ТаблицаНДФЛ.НайтиСтроки(СтруктураПоиска);
					СтрокиДокумента = ДокументОбъект.НДФЛ.НайтиСтроки(СтруктураПоиска);
					КоличествоСтрокДокумента = СтрокиДокумента.Количество();
					КоличествоСтрокНДФЛ = СтрокиНДФЛ.Количество();
					
					Индекс = 1;
					ИдентификаторСтрокиНДФЛ = 0;
					Для Каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
						Если Индекс <= КоличествоСтрокДокумента Тогда
							СтрокаДокумента = СтрокиДокумента[Индекс -1];
							СтрокаДокумента.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода;
							СтрокаДокумента.Налог = СтрокаНДФЛ.Налог;
							СтрокаДокумента.ЗачтеноАвансовыхПлатежей = СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей;
						Иначе
							СтрокаДокумента = ДокументОбъект.НДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаНДФЛ);
							СтрокаДокумента.ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
							
							МаксимальныйИдентификатор = МаксимальныйИдентификатор + 1;
						КонецЕсли;
						
						Индекс = Индекс + 1;
						
					КонецЦикла;
					
					КоличествоЛишнихСтрок = КоличествоСтрокДокумента - КоличествоСтрокНДФЛ;
					Если КоличествоЛишнихСтрок > 0 Тогда
						Для Индекс = 1 По КоличествоЛишнихСтрок Цикл
							СтрокаДокумента = СтрокиДокумента[КоличествоСтрокДокумента - Индекс];
							СтрокиНДФЛКУдалению.Добавить(СтрокаДокумента);
						КонецЦикла;
					КонецЕсли;
					
				КонецЦикла;
				
				Для Каждого СтрокаКУдалению Из СтрокиНДФЛКУдалению Цикл
					
					ДокументОбъект.НДФЛ.Удалить(СтрокаКУдалению);
					
				КонецЦикла;
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось заполнить категорию дохода исчисленного НДФЛ в документах и движения: '"), УровеньЖурналаРегистрации.Ошибка,, Выборка.Регистратор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьКатегориюДоходаВИсчисленномНДФЛОкончательныйРасчетЗаМесяц(Месяц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Месяц", Месяц);
	
	ТипыИсключаемыхРегистраторов = ЗарплатаКадры.РегистраторыПереносаДанных();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ТипыИсключаемыхРегистраторов, УчетФактическиПолученныхДоходов.РегистраторыУвольнения());
	Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ТипыИсключаемыхРегистраторов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТИсключаемыеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, МЕСЯЦ) = &Месяц
	|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы))
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТДанныеИсчисленногоНДФЛ
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, МЕСЯЦ) = &Месяц
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода = ЛОЖЬ
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|				(ВЫБРАТЬ
	|					ВТИсключаемыеРегистраторы.Регистратор КАК Регистратор
	|				ИЗ
	|					ВТИсключаемыеРегистраторы КАК ВТИсключаемыеРегистраторы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор КАК Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация КАК Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение КАК Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Период КАК Период,
	|	ВТДанныеИсчисленногоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
	|	СУММА(ВТДанныеИсчисленногоНДФЛ.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТОбщаяСуммаНалога
	|ИЗ
	|	ВТДанныеИсчисленногоНДФЛ КАК ВТДанныеИсчисленногоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.Организация,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.Период,
	|	ВТДанныеИсчисленногоНДФЛ.РасчетМежрасчетногоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТДанныеИсчисленногоНДФЛ.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор КАК Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация КАК Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение КАК Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	ВТДанныеИсчисленногоНДФЛ.Период КАК Период,
	|	ВТДанныеИсчисленногоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ВТДанныеИсчисленногоНДФЛ.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВТОбщаяСуммаНалога.Сумма ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВТДанныеИсчисленногоНДФЛ.Сумма / ВТОбщаяСуммаНалога.Сумма
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВТКоэффициентыИсчисленного
	|ИЗ
	|	ВТДанныеИсчисленногоНДФЛ КАК ВТДанныеИсчисленногоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбщаяСуммаНалога КАК ВТОбщаяСуммаНалога
	|		ПО ВТДанныеИсчисленногоНДФЛ.Регистратор = ВТОбщаяСуммаНалога.Регистратор
	|			И ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо = ВТОбщаяСуммаНалога.ФизическоеЛицо
	|			И ВТДанныеИсчисленногоНДФЛ.Организация = ВТОбщаяСуммаНалога.Организация
	|			И ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода = ВТОбщаяСуммаНалога.МесяцНалоговогоПериода
	|			И ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане = ВТОбщаяСуммаНалога.РегистрацияВНалоговомОргане
	|			И ВТДанныеИсчисленногоНДФЛ.Подразделение = ВТОбщаяСуммаНалога.Подразделение
	|			И ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = ВТОбщаяСуммаНалога.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ВТОбщаяСуммаНалога.СтавкаНалогообложенияРезидента
	|			И ВТДанныеИсчисленногоНДФЛ.Период = ВТОбщаяСуммаНалога.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор КАК Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация КАК Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение КАК Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Период КАК Период,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы)
	|					КОГДА ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|				КОНЕЦ
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КатегорияДохода
	|	КОНЕЦ КАК КатегорияДохода,
	|	СУММА(ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода - ВЫБОР
	|				КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|					ТОГДА 0
	|				ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|			КОНЕЦ, 0)) КАК СуммаДохода
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеИсчисленногоНДФЛ КАК ВТДанныеИсчисленногоНДФЛ
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо
	|			И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента
	|			И СведенияОДоходахНДФЛ.Организация = ВТДанныеИсчисленногоНДФЛ.Организация
	|			И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане
	|			И СведенияОДоходахНДФЛ.ДатаПолученияДохода = ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода
	|			И СведенияОДоходахНДФЛ.Подразделение = ВТДанныеИсчисленногоНДФЛ.Подразделение
	|			И СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода = ВТДанныеИсчисленногоНДФЛ.РасчетМежрасчетногоПериода
	|			И СведенияОДоходахНДФЛ.Период <= ВТДанныеИсчисленногоНДФЛ.Период
	|			И НЕ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.Период,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы)
	|					КОГДА ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|				КОНЕЦ
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КатегорияДохода
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.КатегорияДохода,
	|	СУММА(ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода - ВЫБОР
	|				КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|					ТОГДА 0
	|				ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|			КОНЕЦ, 0))
	|ИЗ
	|	ВТДанныеИсчисленногоНДФЛ КАК ВТДанныеИсчисленногоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|			ПО СведенияОДоходахНДФЛ.Регистратор = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|				И СведенияОДоходахНДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|				И СведенияОДоходахНДФЛ.КатегорияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|				И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента
	|				И СведенияОДоходахНДФЛ.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
	|				И СведенияОДоходахНДФЛ.ДатаПолученияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|				И СведенияОДоходахНДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|				И СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|				И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане
	|				И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|				И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|				И НЕ ТИПЗНАЧЕНИЯ(СведенияОДоходахНДФЛ.Регистратор) В (&ИсключаемыеРегистраторы)
	|		ПО ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И ВТДанныеИсчисленногоНДФЛ.Организация = СведенияОДоходахНДФЛ.Организация
	|			И ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
	|			И ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|			И ВТДанныеИсчисленногоНДФЛ.Подразделение = СведенияОДоходахНДФЛ.Подразделение
	|			И ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента = СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента
	|			И ВТДанныеИсчисленногоНДФЛ.Период >= СведенияОДоходахНДФЛ.Период
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанныеИсчисленногоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДанныеИсчисленногоНДФЛ.Подразделение,
	|	ВТДанныеИсчисленногоНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВТДанныеИсчисленногоНДФЛ.Период,
	|	ВТДанныеИсчисленногоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВТДанныеИсчисленногоНДФЛ.МесяцНалоговогоПериода,
	|	ВТДанныеИсчисленногоНДФЛ.ФизическоеЛицо,
	|	ВТДанныеИсчисленногоНДФЛ.Организация,
	|	ВТДанныеИсчисленногоНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.КатегорияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоходы.Регистратор КАК Регистратор,
	|	ВТДоходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДоходы.Организация КАК Организация,
	|	ВТДоходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДоходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДоходы.Подразделение КАК Подразделение,
	|	ВТДоходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДоходы.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДоходы.Период КАК Период,
	|	СУММА(ВТДоходы.СуммаДохода) КАК СуммаДохода
	|ПОМЕСТИТЬ ВТСуммаДоходов
	|ИЗ
	|	ВТДоходы КАК ВТДоходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДоходы.Регистратор,
	|	ВТДоходы.МесяцНалоговогоПериода,
	|	ВТДоходы.РегистрацияВНалоговомОргане,
	|	ВТДоходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДоходы.Период,
	|	ВТДоходы.СтавкаНалогообложенияРезидента,
	|	ВТДоходы.ФизическоеЛицо,
	|	ВТДоходы.Организация,
	|	ВТДоходы.Подразделение
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТДоходы.СуммаДохода) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоходы.Регистратор КАК Регистратор,
	|	ВТДоходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДоходы.Организация КАК Организация,
	|	ВТДоходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВТДоходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТДоходы.Подразделение КАК Подразделение,
	|	ВТДоходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВТДоходы.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВТДоходы.Период КАК Период,
	|	ВТДоходы.КатегорияДохода КАК КатегорияДохода,
	|	ВТДоходы.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА ВТСуммаДоходов.СуммаДохода ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВТДоходы.СуммаДохода / ВТСуммаДоходов.СуммаДохода
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВТКоэффициентыДоходов
	|ИЗ
	|	ВТДоходы КАК ВТДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммаДоходов КАК ВТСуммаДоходов
	|		ПО ВТДоходы.Регистратор = ВТСуммаДоходов.Регистратор
	|			И ВТДоходы.ФизическоеЛицо = ВТСуммаДоходов.ФизическоеЛицо
	|			И ВТДоходы.Организация = ВТСуммаДоходов.Организация
	|			И ВТДоходы.МесяцНалоговогоПериода = ВТСуммаДоходов.МесяцНалоговогоПериода
	|			И ВТДоходы.РегистрацияВНалоговомОргане = ВТСуммаДоходов.РегистрацияВНалоговомОргане
	|			И ВТДоходы.Подразделение = ВТСуммаДоходов.Подразделение
	|			И ВТДоходы.ВключатьВДекларациюПоНалогуНаПрибыль = ВТСуммаДоходов.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВТДоходы.СтавкаНалогообложенияРезидента = ВТСуммаДоходов.СтавкаНалогообложенияРезидента
	|			И ВТДоходы.Период = ВТСуммаДоходов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТКоэффициентыИсчисленного.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыКИсправлению
	|ИЗ
	|	ВТКоэффициентыИсчисленного КАК ВТКоэффициентыИсчисленного
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыДоходов КАК ВТКоэффициентыДоходов
	|		ПО ВТКоэффициентыИсчисленного.Регистратор = ВТКоэффициентыДоходов.Регистратор
	|			И ВТКоэффициентыИсчисленного.ФизическоеЛицо = ВТКоэффициентыДоходов.ФизическоеЛицо
	|			И ВТКоэффициентыИсчисленного.Организация = ВТКоэффициентыДоходов.Организация
	|			И ВТКоэффициентыИсчисленного.МесяцНалоговогоПериода = ВТКоэффициентыДоходов.МесяцНалоговогоПериода
	|			И ВТКоэффициентыИсчисленного.РегистрацияВНалоговомОргане = ВТКоэффициентыДоходов.РегистрацияВНалоговомОргане
	|			И ВТКоэффициентыИсчисленного.Подразделение = ВТКоэффициентыДоходов.Подразделение
	|			И ВТКоэффициентыИсчисленного.ВключатьВДекларациюПоНалогуНаПрибыль = ВТКоэффициентыДоходов.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И ВТКоэффициентыИсчисленного.СтавкаНалогообложенияРезидента = ВТКоэффициентыДоходов.СтавкаНалогообложенияРезидента
	|			И ВТКоэффициентыИсчисленного.КатегорияДохода = ВТКоэффициентыДоходов.КатегорияДохода
	|			И ВТКоэффициентыИсчисленного.Период = ВТКоэффициентыДоходов.Период
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВТКоэффициентыДоходов.Коэффициент ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			КОГДА ВТКоэффициентыИсчисленного.Коэффициент - ВТКоэффициентыДоходов.Коэффициент < 0
	|				ТОГДА ВТКоэффициентыИсчисленного.Коэффициент - ВТКоэффициентыДоходов.Коэффициент < -0.1
	|			ИНАЧЕ ВТКоэффициентыИсчисленного.Коэффициент - ВТКоэффициентыДоходов.Коэффициент > 0.1
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КоэффициентыДоходов.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
	|	КоэффициентыДоходов.СуммаДохода КАК СуммаДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыДоходов КАК КоэффициентыДоходов
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = КоэффициентыДоходов.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = КоэффициентыДоходов.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = КоэффициентыДоходов.Организация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = КоэффициентыДоходов.МесяцНалоговогоПериода
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = КоэффициентыДоходов.СтавкаНалогообложенияРезидента
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = КоэффициентыДоходов.РегистрацияВНалоговомОргане
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = КоэффициентыДоходов.Подразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль = КоэффициентыДоходов.ВключатьВДекларациюПоНалогуНаПрибыль
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				ВТРегистраторыКИсправлению.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТРегистраторыКИсправлению КАК ВТРегистраторыКИсправлению)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	НаборЗаписей = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	ВременныйНабор = НаборЗаписей.ВыгрузитьКолонки();
	ВременныйНабор.Колонки.Добавить("СуммаДохода", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	
	КолонкиГруппировок =
	"Период,
	|Регистратор,
	|ВидДвижения,
	|Активность,
	|ГоловнаяОрганизация, 
	|ФизическоеЛицо, 
	|СтавкаНалогообложенияРезидента, 
	|МесяцНалоговогоПериода, 
	|КатегорияДохода, 
	|РегистрацияВНалоговомОргане, 
	|Организация, 
	|КодДохода,
	|Подразделение,
	|ДокументОснование,
	|ВариантУдержания,
	|ВключатьВДекларациюПоНалогуНаПрибыль,
	|РасчетМежрасчетногоПериода,
	|СуммаВыплаченногоДохода,
	|СрокПеречисления,
	|КрайнийСрокУплаты,
	|УчитыватьВыплаченныйДоходВ6НДФЛ,
	|УстаревшаяДатаПолученияДохода";
	
	КатегорииСФиксированнойДатойДохода = Перечисления.КатегорииДоходовНДФЛ.СФиксированнойДатойПолученияДохода();
	ДокументыСНДФЛ = Новый Соответствие;
	
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		МетаданныеДокумента = Выборка.Регистратор.Метаданные();
		Регистратор = Выборка.Регистратор;
		ИмяДокумента = МетаданныеДокумента.Имя;
		Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Неопределено Тогда
			ОбновляемДокумент = Ложь;
			Если МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛ") <> Неопределено Тогда 
				ОбновляемДокумент = МетаданныеДокумента.ТабличныеЧасти.НДФЛ.Реквизиты.Найти("Налог") <> Неопределено;
			КонецЕсли;
			ДокументыСНДФЛ.Вставить(ИмяДокумента, ОбновляемДокумент);
		КонецЕсли;
		
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Очистить();
		
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			ВременныйНабор.Очистить();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ВременныйНабор.Добавить(), Выборка);
			КонецЦикла;
			
			Если ВременныйНабор.Количество() = 1 Тогда
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВременныйНабор[0]);
				Если Не ЗначениеЗаполнено(Запись.КатегорияДохода) Тогда
					Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
				КонецЕсли;
				
				Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
					Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
					Запись.ДатаПолученияДоходаФиксирована = Истина;
				КонецЕсли;
				
				Продолжить;
			КонецЕсли;
			
			Коэффициенты = ВременныйНабор.ВыгрузитьКолонку("СуммаДохода");
			РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНабор[0].Сумма, Коэффициенты, 0);
			
			Если РезультатыРаспределения = Неопределено Тогда
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВременныйНабор[0]);
				Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
				Запись.ДатаПолученияДоходаФиксирована = Истина;
				
			Иначе
				
				Индекс = 0;
				Для Каждого Строка Из ВременныйНабор Цикл
					
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Строка);
					Запись.Сумма = РезультатыРаспределения[Индекс];
					Если Не ЗначениеЗаполнено(Запись.КатегорияДохода) Тогда
						Запись.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					КонецЕсли;
					
					Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
						Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
						Запись.ДатаПолученияДоходаФиксирована = Истина;
					КонецЕсли;
					
					Индекс = Индекс + 1;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаписиНабора = НаборЗаписей.Выгрузить();
		ЗаписиНабора.Свернуть(КолонкиГруппировок, "Сумма");
		НаборЗаписей.Загрузить(ЗаписиНабора);
		
		Для Каждого Запись Из НаборЗаписей Цикл
			Если КатегорииСФиксированнойДатойДохода.Найти(Запись.КатегорияДохода) <> Неопределено 
				Или Запись.МесяцНалоговогоПериода < Запись.Период Тогда
				Запись.ДатаПолученияДоходаФиксирована = Истина;
			КонецЕсли;
		КонецЦикла;
		
		УчетФактическиПолученныхДоходов.УточнитьКрайнийСрокУплаты(НаборЗаписей);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
		Если ДокументыСНДФЛ.Получить(ИмяДокумента) = Истина Тогда
			
			ДокументОбъект = Регистратор.ПолучитьОбъект();
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("Ссылка", Выборка.Регистратор);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
			|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
			|	НачислениеЗарплатыНДФЛ.КатегорияДохода КАК КатегорияДохода,
			|	СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
			|	СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
			|	НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ НДФЛДокумента
			|ИЗ
			|	Документ.НачислениеЗарплаты.НДФЛ КАК НачислениеЗарплатыНДФЛ
			|ГДЕ
			|	НачислениеЗарплатыНДФЛ.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
			|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
			|	НачислениеЗарплатыНДФЛ.Подразделение,
			|	НачислениеЗарплатыНДФЛ.Ссылка,
			|	НачислениеЗарплатыНДФЛ.КатегорияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НДФЛ.НомерСтроки КАК НомерСтрокиДокумента,
			|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	НДФЛ.Подразделение КАК Подразделение,
			|	НДФЛ.Налог КАК Налог,
			|	НДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежей,
			|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
			|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма, 0) КАК Сумма
			|ИЗ
			|	(ВЫБРАТЬ
			|		МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
			|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|		НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
			|		СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
			|		СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
			|		НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
			|	ИЗ
			|		НДФЛДокумента КАК НачислениеЗарплатыНДФЛ
			|	
			|	СГРУППИРОВАТЬ ПО
			|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
			|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
			|		НачислениеЗарплатыНДФЛ.Подразделение,
			|		НачислениеЗарплатыНДФЛ.Ссылка) КАК НДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
			|		ПО НДФЛ.Ссылка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
			|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			|			И НДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
			|			И НДФЛ.МесяцНалоговогоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
			|			И НДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
			|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
			|			И НДФЛ.Ссылка.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	0,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
			|	0,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ НДФЛДокумента КАК НДФЛДокумента
			|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = НДФЛДокумента.Ссылка
			|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = НДФЛДокумента.ФизическоеЛицо
			|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = НДФЛДокумента.МесяцНалоговогоПериода
			|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = НДФЛДокумента.Подразделение
			|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = НДФЛДокумента.Ссылка.Организация
			|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
			|ГДЕ
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = &Ссылка
			|	И НДФЛДокумента.Ссылка ЕСТЬ NULL
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтрокиДокумента";
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.НачислениеЗарплаты.НДФЛ", "Документ." +ИмяДокумента + ".НДФЛ");
			ВыборкаИсчисленного = Запрос.Выполнить().Выбрать();
			
			
			ТаблицаНДФЛ = ДокументОбъект.НДФЛ.ВыгрузитьКолонки();
			ТаблицаНДФЛ.Колонки.Добавить("НомерСтрокиДокумента", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7)));
			ВременныйНаборИсчисленного = ТаблицаНДФЛ.Скопировать();
			ВременныйНаборИсчисленного.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
			
			Пока ВыборкаИсчисленного.СледующийПоЗначениюПоля("НомерСтрокиДокумента") Цикл
				ВременныйНаборИсчисленного.Очистить();
				
				НомерСтрокиДокумента = ВыборкаИсчисленного.НомерСтрокиДокумента;
				
				Если НомерСтрокиДокумента = 0 Тогда
					Пока ВыборкаИсчисленного.Следующий() Цикл
						НоваяСтрока = ТаблицаНДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИсчисленного);
						НоваяСтрока.Налог = ВыборкаИсчисленного.Сумма;
					КонецЦикла;
					Продолжить;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(ВыборкаИсчисленного.КатегорияДохода) Тогда
					НоваяСтрока = ТаблицаНДФЛ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИсчисленного);
					НоваяСтрока.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					НоваяСтрока.Налог = 0;
					Продолжить;
				КонецЕсли;
				
				СтрокаДокумента = ТаблицаНДФЛ.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВыборкаИсчисленного);
				
				Пока ВыборкаИсчисленного.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ВременныйНаборИсчисленного.Добавить(), ВыборкаИсчисленного);
				КонецЦикла;
				
				Если ВременныйНаборИсчисленного.Количество() = 1 Тогда
					СтрокаДокумента.Налог = ВыборкаИсчисленного.Сумма;
					Продолжить;
				КонецЕсли;
				
				Коэффициенты = ВременныйНаборИсчисленного.ВыгрузитьКолонку("Сумма");
				РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНаборИсчисленного[0].Налог, Коэффициенты, 0);
				Если СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0 Тогда
					РезультатыРаспределенияАванса = Неопределено;
				Иначе
					РезультатыРаспределенияАванса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДокумента.ЗачтеноАвансовыхПлатежей, Коэффициенты, 0);
				КонецЕсли;
				
				Если РезультатыРаспределения = Неопределено Тогда
					
					Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
						СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					КонецЕсли;
					СтрокаДокумента.Налог = 0;
					
				Иначе
					
					Индекс = 0;
					Для Каждого Строка Из ВременныйНаборИсчисленного Цикл
						
						Если Индекс = 0 Тогда
							
							СтрокаДокумента.КатегорияДохода = Строка.КатегорияДохода;
							СтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
							Если РезультатыРаспределенияАванса <> Неопределено Тогда
								СтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
							КонецЕсли;
							
						Иначе
							
							НоваяСтрокаДокумента = ТаблицаНДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, Строка, , "ЗачтеноАвансовыхПлатежей, ПримененныйВычетЛичный, ПримененныйВычетЛичныйКодВычета, ПримененныйВычетЛичныйКЗачетуВозврату, ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета");
							НоваяСтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
							Если РезультатыРаспределенияАванса <> Неопределено Тогда
								НоваяСтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
							КонецЕсли;
							
						КонецЕсли;
						
						Индекс = Индекс + 1;
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			МаксимальныйИдентификатор = УчетНДФЛФормы.МаксимальныйИдентификаторСтрокиНДФЛ(ДокументОбъект.НДФЛ) + 1;
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
			СтрокиНДФЛКУдалению = Новый Массив;
			
			ОбновляемыеНаборыСтрок = ТаблицаНДФЛ.Скопировать();
			ОбновляемыеНаборыСтрок.Свернуть("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
			Для Каждого Строка Из ОбновляемыеНаборыСтрок Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
				СтрокиНДФЛ = ТаблицаНДФЛ.НайтиСтроки(СтруктураПоиска);
				СтрокиДокумента = ДокументОбъект.НДФЛ.НайтиСтроки(СтруктураПоиска);
				КоличествоСтрокДокумента = СтрокиДокумента.Количество();
				КоличествоСтрокНДФЛ = СтрокиНДФЛ.Количество();
				
				Индекс = 1;
				ИдентификаторСтрокиНДФЛ = 0;
				Для Каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
					Если Индекс <= КоличествоСтрокДокумента Тогда
						СтрокаДокумента = СтрокиДокумента[Индекс -1];
						СтрокаДокумента.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода;
						СтрокаДокумента.Налог = СтрокаНДФЛ.Налог;
						СтрокаДокумента.ЗачтеноАвансовыхПлатежей = СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей;
					Иначе
						СтрокаДокумента = ДокументОбъект.НДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаНДФЛ);
						СтрокаДокумента.ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
						
						МаксимальныйИдентификатор = МаксимальныйИдентификатор + 1;
					КонецЕсли;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
				
				КоличествоЛишнихСтрок = КоличествоСтрокДокумента - КоличествоСтрокНДФЛ;
				Если КоличествоЛишнихСтрок > 0 Тогда
					Для Индекс = 1 По КоличествоЛишнихСтрок Цикл
						СтрокаДокумента = СтрокиДокумента[КоличествоСтрокДокумента - Индекс];
						СтрокиНДФЛКУдалению.Добавить(СтрокаДокумента);
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого СтрокаКУдалению Из СтрокиНДФЛКУдалению Цикл
				
				ДокументОбъект.НДФЛ.Удалить(СтрокаКУдалению);
				
			КонецЦикла;
			
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбнулитьЛишниеСтрокиНДФЛ(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТВсеРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2017,1,1)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) КАК ТипДокумента,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) КАК КоличествоРегистраторов
	|ИЗ
	|	ВТВсеРегистраторы КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор)";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ТекстШаблона =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Налоги.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛ.Ссылка КАК Ссылка,
	|		НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		НДФЛ.Подразделение КАК Подразделение,
	|		НДФЛ.КатегорияДохода КАК КатегорияДохода,
	|		НДФЛ.Организация КАК Организация,
	|		СУММА(НДФЛ.Налог) КАК Налог
	|	ИЗ
	|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка,
	|			НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|			НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|			НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
	|			НачислениеЗарплатыНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|			НачислениеЗарплатыНДФЛ.Ссылка.Организация КАК Организация,
	|			СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог
	|		ИЗ
	|			Документ.НачислениеЗарплаты.НДФЛ КАК НачислениеЗарплатыНДФЛ
	|		ГДЕ
	|			НачислениеЗарплатыНДФЛ.Ссылка В
	|					(ВЫБРАТЬ
	|						ВсеРегистраторы.Регистратор
	|					ИЗ
	|						ВТВсеРегистраторы КАК ВсеРегистраторы
	|					ГДЕ
	|						ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НачислениеЗарплатыНДФЛ.Ссылка,
	|			НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
	|			НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
	|			НачислениеЗарплатыНДФЛ.Подразделение,
	|			НачислениеЗарплатыНДФЛ.КатегорияДохода,
	|			НачислениеЗарплатыНДФЛ.Ссылка.Организация
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|			СУММА(-РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма)
	|		ИЗ
	|			РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ГДЕ
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|					(ВЫБРАТЬ
	|						ВсеРегистраторы.Регистратор
	|					ИЗ
	|						ВТВсеРегистраторы КАК ВсеРегистраторы
	|					ГДЕ
	|						ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|			РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода) КАК НДФЛ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛ.ФизическоеЛицо,
	|		НДФЛ.МесяцНалоговогоПериода,
	|		НДФЛ.Ссылка,
	|		НДФЛ.Подразделение,
	|		НДФЛ.Организация,
	|		НДФЛ.КатегорияДохода
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(НДФЛ.Налог) <> 0) КАК Налоги";
	ПервыйЗапрос = Истина;
	Запрос.Текст = "";
	Пока Выборка.Следующий() Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		Если МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛ") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если МетаданныеДокумента.ТабличныеЧасти.НДФЛ.Реквизиты.Найти("Налог") = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстШаблона, "Документ.НачислениеЗарплаты", МетаданныеДокумента.ПолноеИмя());
		
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТРегистраторы", "");
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		ПервыйЗапрос = Ложь;
		
	КонецЦикла;
	Если ПустаяСтрока(Запрос.Текст) Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Выполнить();
	Если Не ЗарплатаКадры.ВТСодержитСтроки(Запрос.МенеджерВременныхТаблиц, "ВТРегистраторы") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) КАК ТипДокумента,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор) КАК КоличествоРегистраторов
	|ИЗ
	|	ВТРегистраторы КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекстШаблона = 
	"ВЫБРАТЬ
	|	НачислениеЗарплатыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
	|	НачислениеЗарплатыНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	НачислениеЗарплатыНДФЛ.Налог КАК Налог,
	|	НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежей,
	|	НачислениеЗарплатыНДФЛ.Ссылка.Организация КАК Организация,
	|	НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НДФЛДокумента
	|ИЗ
	|	Документ.НачислениеЗарплаты.НДФЛ КАК НачислениеЗарплатыНДФЛ
	|ГДЕ
	|	НачислениеЗарплатыНДФЛ.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1000
	|				ВсеРегистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК ВсеРегистраторы
	|			ГДЕ
	|				ВсеРегистраторы.Регистратор ССЫЛКА Документ.НачислениеЗарплаты)";
	ПервыйЗапрос = Истина;
	Запрос.Текст = "";
	МаксимальноеКоличествоДокументов = 1000;
	Пока Выборка.Следующий() Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		
		ТекстЗапроса = СтрЗаменить(ТекстШаблона, "Документ.НачислениеЗарплаты", МетаданныеДокумента.ПолноеИмя());
		
		Если ПараметрыОбновления = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " ПЕРВЫЕ 1000", "");
		Иначе
			МаксимальноеКоличествоДокументов = МаксимальноеКоличествоДокументов - Выборка.КоличествоРегистраторов;
			Если МаксимальноеКоличествоДокументов > 0 Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ ПЕРВЫЕ 1000", "ВЫБРАТЬ ПЕРВЫЕ " + Формат(Выборка.КоличествоРегистраторов, "ЧГ="));
			КонецЕсли;
		КонецЕсли;
		
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			| 
			|" + СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ НДФЛДокумента", "");
			
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		ПервыйЗапрос = Ложь;
		
	КонецЦикла;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(НДФЛ.Ссылка) КАК ТипДокумента,
	|	НДФЛ.Ссылка КАК Ссылка,
	|	НДФЛ.НомерСтроки КАК НомерСтрокиДокумента,
	|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛ.Подразделение КАК Подразделение,
	|	НДФЛ.Налог КАК Налог,
	|	НДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежей,
	|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
	|	ЕСТЬNULL(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма, 0) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(НачислениеЗарплатыНДФЛ.НомерСтроки) КАК НомерСтроки,
	|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		НачислениеЗарплатыНДФЛ.Подразделение КАК Подразделение,
	|		СУММА(НачислениеЗарплатыНДФЛ.Налог) КАК Налог,
	|		СУММА(НачислениеЗарплатыНДФЛ.ЗачтеноАвансовыхПлатежей) КАК ЗачтеноАвансовыхПлатежей,
	|		НачислениеЗарплатыНДФЛ.Организация КАК Организация,
	|		НачислениеЗарплатыНДФЛ.Ссылка КАК Ссылка
	|	ИЗ
	|		НДФЛДокумента КАК НачислениеЗарплатыНДФЛ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачислениеЗарплатыНДФЛ.ФизическоеЛицо,
	|		НачислениеЗарплатыНДФЛ.МесяцНалоговогоПериода,
	|		НачислениеЗарплатыНДФЛ.Подразделение,
	|		НачислениеЗарплатыНДФЛ.Организация,
	|		НачислениеЗарплатыНДФЛ.Ссылка) КАК НДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО НДФЛ.Ссылка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И НДФЛ.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И НДФЛ.МесяцНалоговогоПериода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|			И НДФЛ.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|			И НДФЛ.Организация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор),
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	0,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	0,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ НДФЛДокумента КАК НДФЛДокумента
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = НДФЛДокумента.Ссылка
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = НДФЛДокумента.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = НДФЛДокумента.МесяцНалоговогоПериода
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение = НДФЛДокумента.Подразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = НДФЛДокумента.Организация
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Регистраторы.Ссылка
	|			ИЗ
	|				НДФЛДокумента КАК Регистраторы)
	|	И НДФЛДокумента.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипДокумента,
	|	Ссылка,
	|	НомерСтрокиДокумента";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("ТипДокумента") Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Выборка.ТипДокумента);
		ИмяПространстваБлокировки = МетаданныеДокумента.ПолноеИмя();
		
		Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, ИмяПространстваБлокировки, "Ссылка", Выборка.Ссылка) Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			ТаблицаНДФЛ = ДокументОбъект.НДФЛ.ВыгрузитьКолонки();
			ТаблицаНДФЛ.Колонки.Добавить("НомерСтрокиДокумента", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7)));
			ВременныйНаборИсчисленного = ТаблицаНДФЛ.Скопировать();
			ВременныйНаборИсчисленного.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
			
			Пока Выборка.СледующийПоЗначениюПоля("НомерСтрокиДокумента") Цикл
				ВременныйНаборИсчисленного.Очистить();
				
				НомерСтрокиДокумента = Выборка.НомерСтрокиДокумента;
				
				Если НомерСтрокиДокумента = 0 Тогда
					Пока Выборка.Следующий() Цикл
						НоваяСтрока = ТаблицаНДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
						НоваяСтрока.Налог = Выборка.Сумма;
					КонецЦикла;
					Продолжить;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Выборка.КатегорияДохода) Тогда
					НоваяСтрока = ТаблицаНДФЛ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
					НоваяСтрока.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					НоваяСтрока.Налог = 0;
					Продолжить;
				КонецЕсли;
				
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ВременныйНаборИсчисленного.Добавить(), Выборка);
				КонецЦикла;
				
				СтрокаДокумента = ТаблицаНДФЛ.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, Выборка);
				
				Если ВременныйНаборИсчисленного.Количество() = 1 Тогда
					СтрокаДокумента.Налог = Выборка.Сумма;
					Продолжить;
				КонецЕсли;
				
				Коэффициенты = ВременныйНаборИсчисленного.ВыгрузитьКолонку("Сумма");
				РезультатыРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВременныйНаборИсчисленного[0].Налог, Коэффициенты, 0);
				Если СтрокаДокумента.ЗачтеноАвансовыхПлатежей = 0 Тогда
					РезультатыРаспределенияАванса = Неопределено;
				Иначе
					РезультатыРаспределенияАванса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДокумента.ЗачтеноАвансовыхПлатежей, Коэффициенты, 0);
				КонецЕсли;
				
				Если РезультатыРаспределения = Неопределено Тогда
					
					Если Не ЗначениеЗаполнено(СтрокаДокумента.КатегорияДохода) Тогда
						СтрокаДокумента.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
					КонецЕсли;
					СтрокаДокумента.Налог = 0;
					
				Иначе
					
					Индекс = 0;
					Для Каждого Строка Из ВременныйНаборИсчисленного Цикл
						
						Если Индекс = 0 Тогда
							
							СтрокаДокумента.КатегорияДохода = Строка.КатегорияДохода;
							СтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
							Если РезультатыРаспределенияАванса <> Неопределено Тогда
								СтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
							КонецЕсли;
							
						Иначе
							
							НоваяСтрокаДокумента = ТаблицаНДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, Строка, , "ЗачтеноАвансовыхПлатежей, ПримененныйВычетЛичный, ПримененныйВычетЛичныйКодВычета, ПримененныйВычетЛичныйКЗачетуВозврату, ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета");
							НоваяСтрокаДокумента.Налог = РезультатыРаспределения[Индекс];
							Если РезультатыРаспределенияАванса <> Неопределено Тогда
								НоваяСтрокаДокумента.ЗачтеноАвансовыхПлатежей = РезультатыРаспределенияАванса[Индекс];
							КонецЕсли;
							
						КонецЕсли;
						
						Индекс = Индекс + 1;
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			МаксимальныйИдентификатор = УчетНДФЛФормы.МаксимальныйИдентификаторСтрокиНДФЛ(ДокументОбъект.НДФЛ) + 1;
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
			СтрокиНДФЛКУдалению = Новый Массив;
			
			ОбновляемыеНаборыСтрок = ТаблицаНДФЛ.Скопировать();
			ОбновляемыеНаборыСтрок.Свернуть("ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение");
			Для Каждого Строка Из ОбновляемыеНаборыСтрок Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
				СтрокиНДФЛ = ТаблицаНДФЛ.НайтиСтроки(СтруктураПоиска);
				СтрокиДокумента = ДокументОбъект.НДФЛ.НайтиСтроки(СтруктураПоиска);
				КоличествоСтрокДокумента = СтрокиДокумента.Количество();
				КоличествоСтрокНДФЛ = СтрокиНДФЛ.Количество();
				
				Индекс = 1;
				ИдентификаторСтрокиНДФЛ = 0;
				Для Каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
					Если Индекс <= КоличествоСтрокДокумента Тогда
						СтрокаДокумента = СтрокиДокумента[Индекс -1];
						СтрокаДокумента.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода;
						СтрокаДокумента.Налог = СтрокаНДФЛ.Налог;
						СтрокаДокумента.ЗачтеноАвансовыхПлатежей = СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей;
					Иначе
						СтрокаДокумента = ДокументОбъект.НДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаНДФЛ);
						СтрокаДокумента.ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
						
						МаксимальныйИдентификатор = МаксимальныйИдентификатор + 1;
					КонецЕсли;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
				
				КоличествоЛишнихСтрок = КоличествоСтрокДокумента - КоличествоСтрокНДФЛ;
				Если КоличествоЛишнихСтрок > 0 Тогда
					Для Индекс = 1 По КоличествоЛишнихСтрок Цикл
						СтрокаДокумента = СтрокиДокумента[КоличествоСтрокДокумента - Индекс];
						СтрокиНДФЛКУдалению.Добавить(СтрокаДокумента);
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого СтрокаКУдалению Из СтрокиНДФЛКУдалению Цикл
				
				ДокументОбъект.НДФЛ.Удалить(СтрокаКУдалению);
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция РегистраторыУвольнения() Экспорт
	
	ТипыДокументовУвольнения = Новый Массив;
	ТипыДокументовУвольнения.Добавить(Тип("ДокументСсылка.Увольнение"));
	
	Возврат ТипыДокументовУвольнения;
	
КонецФункции

#КонецОбласти
