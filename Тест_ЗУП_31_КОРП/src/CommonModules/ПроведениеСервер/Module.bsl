
#Область СлужебныйПрограммныйИнтерфейс

// Очищает записи наборов из коллекции Движения и проставляет флаг Записывать наборам, по которым 
// документ уже имеет движения.
// 
//	Параметры:
//		Объект - документ
//		ЭтоНовый - признак того, что пишется новый документ.
//		ДвиженияМетаданные - свойство метаданных Движения.
//		ОтключитьПроверкуДатыЗапретаИзменения - Булево
//
Процедура ПодготовитьНаборыЗаписейКРегистрацииДвижений(Объект, ЭтоНовый = Ложь, ДвиженияМетаданные = НеОпределено, ОтключитьПроверкуДатыЗапретаИзменения = Ложь) Экспорт
	
	Для Каждого НаборЗаписей Из Объект.Движения Цикл
		
		Если НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Очистить();
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЭтоНовый Тогда
		МассивИменРегистров = ПолучитьИспользуемыеРегистры(Объект.Ссылка, Объект.Метаданные().Движения);
		Для Каждого ИмяРегистра Из МассивИменРегистров Цикл
			Объект.Движения[ИмяРегистра].Записывать = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Если ОтключитьПроверкуДатыЗапретаИзменения Тогда
		ОтключитьПроверкуДатыЗапретаИзменения(Объект.Движения, ОтключитьПроверкуДатыЗапретаИзменения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьНаборыЗаписейКУдалениюПроведения(Объект, ОтключитьПроверкуДатыЗапретаИзменения = Ложь) Экспорт
	
	Если ОтключитьПроверкуДатыЗапретаИзменения Тогда
		ОтключитьПроверкуДатыЗапретаИзменения(Объект.Движения, ОтключитьПроверкуДатыЗапретаИзменения);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает набор записей регистра по имени регистра.
//                                                                
// Параметры:
//  Движения - КоллекцияДвижений, Структура - Коллекция движений.
//  Имя      - Строка                       - Имя набора записей, который нужно получить.
// 
// Возвращаемое значение:
//  РегистрСведенийНаборЗаписей, РегистрНакопленияНаборЗаписей, Неопределено - Набор записей регистра, 
//                                                                             Неопределено - если не найден.
//
Функция НайтиНаборЗаписей(Движения, Имя) Экспорт 
	НаборЗаписей = Неопределено;
    Если ТипЗнч(Движения) = Тип("Структура") Тогда
        Движения.Свойство(Имя, НаборЗаписей);
    Иначе 
        НаборЗаписей = Движения.Найти(Имя);
	КонецЕсли; 
	Возврат НаборЗаписей;
КонецФункции

// Проверяет наличие набора записей регистра в коллекции движений.
//                                                                
// Параметры:
//  Движения - КоллекцияДвижений, Структура - Коллекция движений.
//  Имя      - Строка                       - Имя набора записей, наличие которого нужно проверить.
// 
// Возвращаемое значение:
//  Булево - Истина, если в коллекции движений есть указанынй набор записей. 
//
Функция ЕстьНаборЗаписей(Движения, Имя) Экспорт 
	Возврат ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Движения, Имя)
КонецФункции

// Проверяет наличие записей в указанном наборе записей коллекции движений.
//                                                                
// Параметры:
//  Движения - КоллекцияДвижений, Структура - Коллекция движений.
//  Имя      - Строка,                      - Имя набора записей, наличие записей в котором нужно проверить.
//                                            Если не указано, то проверяется наличие записей
//                                            во всех наборах переданной коллекции движений. 
// 
// Возвращаемое значение:
//  Булево - Истина, если в наборе (наборах) записей есть записи. 
//
Функция ЕстьДвижения(Движения, Имя = Неопределено) Экспорт 
	
	ПроверяемыеНаборы = Новый Массив;
	Если ЗначениеЗаполнено(Имя) Тогда
		ПроверяемыеНаборы.Добавить(Имя);
	Иначе
		Для Каждого НаборЗаписей Из Движения Цикл
			ПроверяемыеНаборы.Добавить(НаборЗаписей.Метаданные().Имя);
		КонецЦикла;	
	КонецЕсли;
	
	ЕстьДвижения = Ложь;
	Для Каждого ПроверяемыйНабор Из ПроверяемыеНаборы Цикл
		Если НайтиНаборЗаписей(Движения, ПроверяемыйНабор) <> Неопределено И Движения[ПроверяемыйНабор].Количество() <> 0 Тогда
			ЕстьДвижения = Истина;
			Прервать;
		КонецЕсли	
	КонецЦикла;	
	
	Возврат ЕстьДвижения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует массив имен регистров, по которым документ имеет движения.
// Вызывается при подготовке записей к регистрации движений.
//
Функция ПолучитьИспользуемыеРегистры(Регистратор, Движения, МассивИсключаемыхРегистров = Неопределено)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);

	Результат = Новый Массив;
	МаксимумТаблицВЗапросе = 256;

	СчетчикТаблиц   = 0;
	СчетчикДвижений = 0;

	ВсегоДвижений = Движения.Количество();
	ТекстЗапроса  = "";
	Для Каждого Движение Из Движения Цикл

		СчетчикДвижений = СчетчикДвижений + 1;

		ПропуститьРегистр = МассивИсключаемыхРегистров <> Неопределено
							И МассивИсключаемыхРегистров.Найти(Движение.Имя) <> Неопределено;

		Если Не ПропуститьРегистр Тогда

			Если СчетчикТаблиц > 0 Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|ОБЪЕДИНИТЬ ВСЕ
				|";

			КонецЕсли;

			СчетчикТаблиц = СчетчикТаблиц + 1;

			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|""" + Движение.Имя + """ КАК ИмяРегистра
			|
			|ИЗ " + Движение.ПолноеИмя() + "
			|
			|ГДЕ Регистратор = &Регистратор
			|";

		КонецЕсли;

		Если СчетчикТаблиц = МаксимумТаблицВЗапросе Или СчетчикДвижений = ВсегоДвижений Тогда

			Запрос.Текст  = ТекстЗапроса;
			ТекстЗапроса  = "";
			СчетчикТаблиц = 0;

			Если Результат.Количество() = 0 Тогда

				Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИмяРегистра");

			Иначе

				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					Результат.Добавить(Выборка.ИмяРегистра);
				КонецЦикла;

			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

Процедура ОтключитьПроверкуДатыЗапретаИзменения(КоллекцияДвижений, ОтключитьПроверкуДатыЗапретаИзменения) Экспорт
	
	Если ОтключитьПроверкуДатыЗапретаИзменения Тогда
		
		Для Каждого ЭлементКоллекции Из КоллекцияДвижений Цикл
			
			Если ТипЗнч(ЭлементКоллекции) = Тип("КлючИЗначение") Тогда
				НаборЗаписей = ЭлементКоллекции.Значение;
			Иначе
				НаборЗаписей = ЭлементКоллекции;
			КонецЕсли;
			
			НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
