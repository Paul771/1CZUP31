////////////////////////////////////////////////////////////////////////////////
// Подсистема "Управленческая зарплата"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьВидимостьУправленческихНачисленийПозицииШтатногоРасписания(Форма) Экспорт
		
	ИспользоватьУправленческиеНачисления = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
		Форма, 
		"НастройкиРасчетаУправленческойЗарплатыПозицийШтатногоРасписания.ИспользоватьУправленческиеНачисления");
	
	// Видимость таблицы управленческих начислений.
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, 
		"УправленческиеНачисленияГруппа",
		"Видимость", 
		ИспользоватьУправленческиеНачисления);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, 
		"ДоначислятьДоУправленческогоУчета",
		"Видимость", 
		ИспользоватьУправленческиеНачисления);
	
КонецПроцедуры

Функция ОписаниеТаблицыУправленческихНачисленийПозицииШтатногоРасписания() Экспорт
	
	ОписаниеТаблицыВидовРасчета = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыРасчета();
	
	ОписаниеТаблицыВидовРасчета.ИмяТаблицы = "УправленческиеНачисления";
	ОписаниеТаблицыВидовРасчета.НомерТаблицы = 1;
	ОписаниеТаблицыВидовРасчета.ПутьКДанным = "Объект.УправленческиеНачисления";
	ОписаниеТаблицыВидовРасчета.ПутьКДаннымПоказателей = "Объект.УправленческиеПоказатели";
	ОписаниеТаблицыВидовРасчета.ЭтоПлановыеНачисленияУдержания = Истина;
	
	Возврат ОписаниеТаблицыВидовРасчета;
	
КонецФункции

Процедура ШтатноеРасписаниеУстановитьОтображениеЭлементовФормы(Форма) Экспорт
	
	УстановитьВидимостьУправленческихНачисленийПозицииШтатногоРасписания(Форма);
	
	ИспользоватьУправленческиеНачисления = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
		Форма,
		"НастройкиРасчетаУправленческойЗарплатыПозицийШтатногоРасписания.ИспользоватьУправленческиеНачисления");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"РегламентированныйУчетГруппа",
		"ОтображатьЗаголовок",
		ИспользоватьУправленческиеНачисления);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ЗначенияТарифныхСтавок",
		"Видимость",
		Не ИспользоватьУправленческиеНачисления);
	
КонецПроцедуры

Процедура УстановитьРазмерДоплатыДоУправленческихНачислений(Форма, СтрокаДоначисления) Экспорт
	
	Объект = Форма.Объект;
	
	Если Форма.ИспользоватьВилкуСтавок Тогда
		
		Если Объект.ФОТУправленческийМин > Объект.ФОТМин Тогда
			СтрокаДоначисления.РазмерМин = Объект.ФОТУправленческийМин - Объект.ФОТМин;
		Иначе
			СтрокаДоначисления.РазмерМин = 0;
		КонецЕсли;
		
		Если Объект.ФОТУправленческийМакс > Объект.ФОТМакс Тогда
			СтрокаДоначисления.РазмерМакс = Объект.ФОТУправленческийМакс - Объект.ФОТМакс;
		Иначе
			СтрокаДоначисления.РазмерМакс = 0;
		КонецЕсли;
		
	Иначе
		
		Если Объект.ФОТУправленческий > Объект.ФОТ Тогда
			СтрокаДоначисления.Размер = Объект.ФОТУправленческий - Объект.ФОТ;
		Иначе
			СтрокаДоначисления.Размер = 0;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПредставлениеФОТ(Форма) Экспорт
	
	ФорматнаяСтрока = "ЧДЦ=2; ЧН=";
	
	Если Форма.ИспользоватьВилкуСтавок Тогда
		
		Если Форма.Объект.ФОТУправленческийМин < Форма.Объект.ФОТУправленческийМакс Тогда
			Форма.ФОТУправленческий = Формат(Форма.Объект.ФОТУправленческийМин, ФорматнаяСтрока) + " - " + Формат(Форма.Объект.ФОТУправленческийМакс, ФорматнаяСтрока);
		ИначеЕсли Форма.Объект.ФОТУправленческийМин > 0 И Форма.Объект.ФОТУправленческийМин = Форма.Объект.ФОТУправленческийМакс Тогда
			Форма.ФОТУправленческий = Формат(Форма.Объект.ФОТУправленческийМин, ФорматнаяСтрока);
		Иначе
			
			Если Форма.НастройкиРасчетаУправленческойЗарплатыПозицийШтатногоРасписания.ДоначислятьДоУправленческогоУчета Тогда
				Форма.ФОТУправленческий = Формат(0, ФорматнаяСтрока);
			Иначе
				Форма.ФОТУправленческий = "";
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Форма.ФОТУправленческий = Формат(Форма.Объект.ФОТУправленческий, ФорматнаяСтрока);
		
	КонецЕсли;
	
	Если Не Форма.НастройкиРасчетаУправленческойЗарплатыПозицийШтатногоРасписания.ДоначислятьДоУправленческогоУчета Тогда
		
		Если Не ПустаяСтрока(Форма.ФОТ) Тогда
			Форма.ФОТУправленческий = Форма.ФОТУправленческий + " (" + НСтр("ru='в т.ч. регл'") + ". " + Форма.ФОТ + ")";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПриемНаРаботуОписаниеТаблицыУправленческихНачислений() Экспорт
	
	ОписаниеТаблицыВидовРасчета = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыПлановыхНачислений(Истина, Ложь);
	
	ОписаниеТаблицыВидовРасчета.ИмяТаблицы = "УправленческиеНачисления";
	ОписаниеТаблицыВидовРасчета.НомерТаблицы = 2;
	ОписаниеТаблицыВидовРасчета.ПутьКДанным = "Объект.УправленческиеНачисления";
	ОписаниеТаблицыВидовРасчета.ПутьКДаннымПоказателей = "Объект.Показатели";
	ОписаниеТаблицыВидовРасчета.РедактироватьНачисленияВОтдельныхПолях = Ложь;
	
	ОписаниеТаблицыВидовРасчета.Вставить("ЗапретитьИзменениеПоказателяТарифнойСетки", Истина);
	ОписаниеТаблицыВидовРасчета.ИмяРеквизитаДокументОснование = "";
	
	Возврат ОписаниеТаблицыВидовРасчета;
	
КонецФункции

Функция ПриемНаРаботуРассчитатьИтогиПоФОТ(Форма, ОписаниеТаблицыНачислений) Экспорт
	
	ИспользоватьУправленческиеНачисления = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
		Форма, "ИспользоватьУправленческиеНачисления");
		
	Если ИспользоватьУправленческиеНачисления Тогда
		Возврат ИтогиПоФОТ(Форма, ПриемНаРаботуОписаниеТаблицыУправленческихНачислений());
	Иначе
		Возврат ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПоФОТ(Форма, ОписаниеТаблицыНачислений);
	КонецЕсли;
	
КонецФункции

Функция КадровыйПереводОписаниеТаблицыУправленческихНачислений() Экспорт
	
	ОписаниеТаблицыВидовРасчета = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыПлановыхНачислений(Истина, Ложь);
	
	ОписаниеТаблицыВидовРасчета.ИмяТаблицы = "УправленческиеНачисления";
	ОписаниеТаблицыВидовРасчета.НомерТаблицы = 2;
	ОписаниеТаблицыВидовРасчета.ПутьКДанным = "Объект.УправленческиеНачисления";
	ОписаниеТаблицыВидовРасчета.ПутьКДаннымПоказателей = "Объект.Показатели";
	ОписаниеТаблицыВидовРасчета.РедактироватьНачисленияВОтдельныхПолях = Ложь;
	
	ОписаниеТаблицыВидовРасчета.СодержитПолеДействие = Истина;
	
	ОписаниеТаблицыВидовРасчета.Вставить("ЗапретитьИзменениеПоказателяТарифнойСетки", Истина);
	ОписаниеТаблицыВидовРасчета.ИмяРеквизитаДокументОснование = "";
	
	Возврат ОписаниеТаблицыВидовРасчета;
	
КонецФункции

Процедура КадровыйПереводУстановитьДоступностьЭлементов(Форма, ИзменитьНачисления) Экспорт
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"КомандныеПанелиУправленческихНачислений",
		"Доступность",
		ИзменитьНачисления);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"УправленческиеНачисления",
		"Доступность",
		ИзменитьНачисления);
	
	КадровыйУчетРасширенныйКлиентСервер.УстановитьДоступностьКоманднойПанели(Форма, "СтраницыКоманднойПанелиУправленческихНачислений", ИзменитьНачисления);
	
КонецПроцедуры

Функция КадровыйПереводРассчитатьИтогиПоФОТ(Форма, ОписаниеТаблицыНачислений) Экспорт
	
	ИспользоватьУправленческиеНачисления = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
		Форма, "ИспользоватьУправленческиеНачисления");
		
	Если ИспользоватьУправленческиеНачисления Тогда
		Возврат ИтогиПоФОТ(Форма, КадровыйПереводОписаниеТаблицыУправленческихНачислений());
	Иначе
		Возврат ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПоФОТ(Форма, ОписаниеТаблицыНачислений);
	КонецЕсли;
	
КонецФункции

Функция ИтогиПоФОТ(Форма, ОписаниеТаблицыНачислений)
	
	Возврат ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПоФОТ(Форма, ОписаниеТаблицыНачислений);
	
КонецФункции

Функция ИмяТаблицыПоОписанию(ОписаниеТаблицыВидовРасчета) Экспорт
	
	Если ОписаниеТаблицыВидовРасчета.ИмяТаблицы = "УправленческиеНачисления" Тогда
		ИмяТаблицы = "Начисления";
	Иначе
		ИмяТаблицы = ОписаниеТаблицыВидовРасчета.ИмяТаблицы;
	КонецЕсли;
	
	Возврат ИмяТаблицы;
	
КонецФункции

#Область ДокументНачисленияЗарплаты

Процедура ПриЗаполненииСтруктурыОписанийТаблицНачисленияЗарплаты(СтруктураОписаний, РежимДоначисления = Ложь, ИспользоватьНачисления = Истина) Экспорт
	
	Если РежимДоначисления Или ИспользоватьНачисления Тогда
		СтруктураОписаний.Вставить("УправленческиеНачисления", ОписаниеТаблицыУправленческихНачислений());
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаполненииМассиваОписанийТаблицНачисленияЗарплаты(МассивОписаний, РежимДоначисления = Ложь, ИспользоватьНачисления = Истина) Экспорт
	
	Если РежимДоначисления Или ИспользоватьНачисления Тогда
		МассивОписаний.Добавить(ОписаниеТаблицыУправленческихНачислений());
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеТаблицыУправленческихНачислений() Экспорт
	
	Описание = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыРасчета();
	
	Описание.ИмяТаблицы = "УправленческиеНачисления";
	Описание.СодержитПолеСотрудник = Истина;
	Описание.ИмяРеквизитаСотрудник = "Сотрудник";
	Описание.ИмяПоляДляВставкиПоказателей = "ДатыУправленческиеНачисления";
	Описание.НомерТаблицы = 9;
	Описание.ПутьКДанным = "Объект.УправленческиеНачисления";
	Описание.ПутьКДаннымПоказателей = "Объект.Показатели";
	Описание.ОтображатьПоляОписанияВремени = Истина;
	Описание.ОтображатьПоляНормыВремени = Истина;
	Описание.УправлятьОтображениемПолейОписанияВремени = Истина;
	Описание.ОтменятьВсеИсправления	= Истина;
	Описание.ПутьКДаннымРаспределениеРезультатов = "";
	Описание.ПутьКДаннымАдресРаспределенияРезультатовВХранилище = "";
	Описание.ИмяПоляДляВставкиРаспределенияРезультатов = "";
	Описание.ОтображатьПоляРаспределенияРезультатов = Ложь;
	Описание.СодержитПолеКодВычета = Ложь;
	Описание.ИмяРеквизитаКодВычета = "";
	Описание.ИмяРеквизитаФиксРасчет = "УправленческиеНачисленияФиксРасчет";
	Описание.ИмяРеквизитаДокументОснование = "";
	
	Возврат Описание;
	
КонецФункции

Процедура ДополнитьОписаниеРасчетногоДокумента(ОписаниеДокумента, РежимДоначисления = Ложь, ИспользоватьНачисление = Истина) Экспорт
	
	Если РежимДоначисления Или ИспользоватьНачисление Тогда
		ОписаниеДокумента.УправленческиеНачисленияИмя = "УправленческиеНачисления";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти