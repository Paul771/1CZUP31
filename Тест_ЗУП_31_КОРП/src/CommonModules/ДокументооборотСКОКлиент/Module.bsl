
////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура получает Контекст ЭДО и возвращает его в Обработку оповещения, 
// переданную в параметрах к этой процедуре.
// 
//
// Параметры:
//	ВыполняемоеОповещение                  - ОписаниеОповещения - Описание оповещения, которое будет вызвано после получения Контекста ЭДО.
//                                                       В качестве результата описания оповещения передается структура с ключами: 
//                                                       * КонтекстЭДО    - Форма обработки, либо неопределено 
//                                                       * ТекстОшибки - Текст сообщения об ошибке, из-за которой не удалось получить контекст
//	ВызовИзМастераПодключенияК1СОтчетности - Булево - .
//
Процедура ПолучитьКонтекстЭДО(
		ВыполняемоеОповещение, 
		ОбновитьСейчас = Ложь,
		ЭтоОбновлениеИзМастера = Ложь) Экспорт
	
	ТекстСообщения = "";
	
	СтруктураПараметров = Новый Структура("КонтекстЭДО");
	Оповестить("Получение контекста ЭДО", СтруктураПараметров);
	
	Если СтруктураПараметров.КонтекстЭДО <> Неопределено И НЕ ОбновитьСейчас Тогда
		
		СтруктураРезультата = Новый Структура;
		СтруктураРезультата.Вставить("ТекстОшибки", ТекстСообщения);
		СтруктураРезультата.Вставить("КонтекстЭДО", СтруктураПараметров.КонтекстЭДО);
		
		ПараметрыПриложения.Вставить("РегламентированнаяОтчетность.КонтекстЭДО", СтруктураПараметров.КонтекстЭДО);

		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, СтруктураРезультата);
		
	ИначеЕсли ДокументооборотСКОВызовСервера.ПодключатьВнешнююОбработкуЭДО() Тогда
		Если ДокументооборотСКОВызовСервера.ЕстьПравоНаДОсКО(Истина) Тогда
			Попытка
				ФормаРезультат = ПолучитьФорму("ВнешняяОбработка.Обработка_ДокументооборотСКО.Форма.КонтейнерКлиентскихМетодов");
				ФормаРезультат.ПутьКОбъекту = "ВнешняяОбработка.Обработка_ДокументооборотСКО";
			Исключение
				Состояние(НСтр("ru = 'Не удалось загрузить внешний модуль для документооборота с налоговыми органами.
					|Будет использован модуль, встроенный в конфигурацию.'"));
				ФормаРезультат = ПолучитьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.КонтейнерКлиентскихМетодов");
				ФормаРезультат.ПутьКОбъекту = "Обработка.ДокументооборотСКонтролирующимиОрганами";
			КонецПопытки;
			
			// Проверка обновления
			ДополнительныеПараметры = Новый Структура();
			ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", 	ВыполняемоеОповещение);
			ДополнительныеПараметры.Вставить("ФормаРезультат", 			ФормаРезультат);
			ДополнительныеПараметры.Вставить("ЭтоОбновлениеИзМастера", 	ЭтоОбновлениеИзМастера);
			
			ФормаРезультат.ОбновитьМодульДокументооборотаСФНСПриНеобходимости(ОбновитьСейчас, ДополнительныеПараметры);
				
		Иначе
			ТекстСообщения = НСтр("ru = 'Недостаточно прав для использования методов электронного документооборота с контролирующими органами.'");
			
			СтруктураРезультата = Новый Структура;
			СтруктураРезультата.Вставить("ТекстОшибки", ТекстСообщения);
			СтруктураРезультата.Вставить("КонтекстЭДО", Неопределено);
			
			ПараметрыПриложения.Вставить("РегламентированнаяОтчетность.КонтекстЭДО", Неопределено);
			
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, СтруктураРезультата);
		КонецЕсли;
		
	Иначе
		Если ДокументооборотСКОВызовСервера.ЕстьПравоНаДОсКО(Ложь) Тогда
			ФормаРезультат = ПолучитьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.КонтейнерКлиентскихМетодов");
			ФормаРезультат.ПутьКОбъекту = "Обработка.ДокументооборотСКонтролирующимиОрганами";
			
			// Проверка обновления
			ДополнительныеПараметры = Новый Структура();
			ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", 	ВыполняемоеОповещение);
			ДополнительныеПараметры.Вставить("ФормаРезультат", 			ФормаРезультат);
			ДополнительныеПараметры.Вставить("ЭтоОбновлениеИзМастера", 	ЭтоОбновлениеИзМастера);
			
			ФормаРезультат.ОбновитьМодульДокументооборотаСФНСПриНеобходимости(ОбновитьСейчас, ДополнительныеПараметры);
			
		Иначе
			ТекстСообщения = НСтр("ru = 'Недостаточно прав для использования методов электронного документооборота с контролирующими органами.'");
			
			СтруктураРезультата = Новый Структура;
			СтруктураРезультата.Вставить("ТекстОшибки", ТекстСообщения);
			СтруктураРезультата.Вставить("КонтекстЭДО", Неопределено);
			
			ПараметрыПриложения.Вставить("РегламентированнаяОтчетность.КонтекстЭДО", Неопределено);

			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, СтруктураРезультата);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИПолучитьКонтекстЭДО(ВыполняемоеОповещение = Неопределено) Экспорт
	
	Попытка
		КонтекстИнициализирован = ДокументооборотСКОВызовСервера.ИнициализироватьКонтекстДокументооборотаСНалоговымиОрганами();
	Исключение
		КонтекстИнициализирован = Ложь;
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не удалось загрузить внешний модуль для документооборота с налоговыми органами.
			|%1
			|Будет продолжено использование текущего модуля конфигурации.'"), ИнформацияОбОшибке().Описание);
		ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(ТекстОшибки);
	КонецПопытки;
	
	Если КонтекстИнициализирован Тогда
		Попытка
			ФормаРезультат = ПолучитьФорму("ВнешняяОбработка.Обработка_ДокументооборотСКО.Форма.КонтейнерКлиентскихМетодов");
			ФормаРезультат.ПутьКОбъекту = "ВнешняяОбработка.Обработка_ДокументооборотСКО";
		Исключение
			Состояние(НСтр("ru = 'Не удалось загрузить внешний модуль для документооборота с налоговыми органами.
				|Будет использован модуль, встроенный в конфигурацию.'"));
			ФормаРезультат = ПолучитьФорму("Обработка.ДокументооборотСКонтролирующимиОрганами.Форма.КонтейнерКлиентскихМетодов");
			ФормаРезультат.ПутьКОбъекту = "Обработка.ДокументооборотСКонтролирующимиОрганами";
		КонецПопытки;
	КонецЕсли;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ТекстОшибки", "");
	СтруктураРезультата.Вставить("КонтекстЭДО", ФормаРезультат);
	
	ПараметрыПриложения.Вставить("РегламентированнаяОтчетность.КонтекстЭДО", ФормаРезультат);
	
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, СтруктураРезультата);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(
		Форма, 
		КонтролирующийОрган, 
		ЭтоОтправкаИзФормыОтчетность = Ложь, 
		СсылкаНаОтчет = Неопределено, 
		ОрганизацияОтчета = Неопределено) Экспорт
	
	Если НЕ ЭтоОтправкаИзФормыОтчетность Тогда
		СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	КонецЕсли;
	
	ЭтоУведомлениеФНС 			= ЭтоУведомлениеФНС(СсылкаНаОтчет);
	ЭтоЖурналСчетовФактурФНС 	= ЭтоЖурналСчетовФактурФНС(СсылкаНаОтчет);
	ЭтоЗаявлениеОВвозе 			= ЭтоЗаявлениеОВвозе(СсылкаНаОтчет);
	ЭтоРеестрНДС				= ЭтоРеестрНДС(СсылкаНаОтчет);
	ЭтоРеестрАкцизы 			= ЭтоРеестрАкцизы(СсылкаНаОтчет);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СсылкаНаОтчет",					СсылкаНаОтчет);
	ДополнительныеПараметры.Вставить("Форма",							Форма);
	ДополнительныеПараметры.Вставить("КонтролирующийОрган",				КонтролирующийОрган);
	ДополнительныеПараметры.Вставить("ЭтоОтправкаИзФормыОтчетность",	ЭтоОтправкаИзФормыОтчетность);
	ДополнительныеПараметры.Вставить("СсылкаНаОтчет",					СсылкаНаОтчет);
	ДополнительныеПараметры.Вставить("ОрганизацияОтчета",				ОрганизацияОтчета);
	ДополнительныеПараметры.Вставить("ЭтоУведомлениеФНС",				ЭтоУведомлениеФНС);
	ДополнительныеПараметры.Вставить("ЭтоЖурналСчетовФактурФНС",		ЭтоЖурналСчетовФактурФНС);
	ДополнительныеПараметры.Вставить("ЭтоРеестрНДС",					ЭтоРеестрНДС);
	ДополнительныеПараметры.Вставить("ЭтоРеестрАкцизы",					ЭтоРеестрАкцизы);
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	
	Если ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка.РегламентированныйОтчет")
		ИЛИ ТипЗнчСсылкаНаОтчет = Тип("Неопределено") Тогда
		
		Если НЕ ЭтоОтправкаИзФормыОтчетность Тогда
			
			// Сохраняем перед отправкой
			Если Форма.Модифицированность Тогда
				
				ОписаниеОповещения = Новый ОписаниеОповещения("ПродолжитьОтправкуПослеСохраненияРегОтчета", ЭтотОбъект, ДополнительныеПараметры);
				Форма.СохранитьНаКлиенте(,ОписаниеОповещения);
				Возврат;
				
			КонецЕсли;
		КонецЕсли;
			
	ИначеЕсли ЭтоУведомлениеФНС Тогда
		
		Если ЭтоОтправкаИзФормыОтчетность Тогда
			// Уведомление будет записано
		ИначеЕсли Форма.Модифицированность ИЛИ НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			
			ИмяДокументаУведомлениеОКонтролируемыхСделках
				= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
			
			// Записываем
			Если ИмяДокументаУведомлениеОКонтролируемыхСделках <> Неопределено 
					И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках) Тогда
				Форма.Записать();
			Иначе
				Форма.СохранитьДанные();
			КонецЕсли;
			
			// Получаем ссылку еще раз после записи
			СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
			// Обновляем данные после сохранения.
			ДополнительныеПараметры.СсылкаНаОтчет = СсылкаНаОтчет;
			
		КонецЕсли;
			
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ЭтоЖурналСчетовФактурФНС Тогда
		
		Если ЭтоОтправкаИзФормыОтчетность Тогда
			// Уведомление будет записано
		ИначеЕсли Форма.Модифицированность ИЛИ НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			
			// Записываем
			Форма.Записать();
			
			// Получаем ссылку еще раз после записи
			СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
			// Обновляем данные после сохранения.
			ДополнительныеПараметры.СсылкаНаОтчет = СсылкаНаОтчет;
			
		КонецЕсли;
			
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			Возврат;
		КонецЕсли;
				
	ИначеЕсли ЭтоЗаявлениеОВвозе Тогда
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			ПоказатьПредупреждение(,"Перед отправкой необходимо записать заявление.");
			Возврат;
		КонецЕсли;
		
		Если НЕ ЭтоОтправкаИзФормыОтчетность И Форма.Модифицированность Тогда
			ПоказатьПредупреждение(, "Перед отправкой необходимо записать заявление.");
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			ПоказатьПредупреждение(,"Перед отправкой необходимо записать отчет.");
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
		
	ПроверитьЧтоЭДОПодключенИПродолжитьОтправку(ДополнительныеПараметры);

КонецПроцедуры

Процедура ПродолжитьОтправкуПослеСохраненияРегОтчета(Результат, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.СсылкаНаОтчет = Неопределено Тогда
		
		СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(ДополнительныеПараметры.Форма);
		
		// Обновляем данные после сохранения.
		ДополнительныеПараметры.СсылкаНаОтчет 		= СсылкаНаОтчет;
		ДополнительныеПараметры.ЭтоРеестрНДС 		= ЭтоРеестрНДС(СсылкаНаОтчет);
		ДополнительныеПараметры.ЭтоРеестрАкцизы 	= ЭтоРеестрАкцизы(СсылкаНаОтчет);
		
	КонецЕсли;
	
	ПроверитьЧтоЭДОПодключенИПродолжитьОтправку(ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ПроверитьЧтоЭДОПодключенИПродолжитьОтправку(ДополнительныеПараметры)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПроверитьЧтоЭДОПодключенПослеПолученияКонтекста", 
		ЭтотОбъект, 
		ДополнительныеПараметры);
		
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ПроверитьЧтоЭДОПодключенПослеПолученияКонтекста_ПослеПроверкиЗаявления(Результат, ВходящийКонтекст) Экспорт
	
	ПроверитьЧтоЭДОПодключенПослеДобавленияКонтекстаВПараметры(ВходящийКонтекст);
	
КонецПроцедуры

Процедура ПроверитьЧтоЭДОПодключенПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.КонтекстЭДО = Неопределено Тогда
		ПоказатьПредупреждение(, "Недостаточно прав для использования модуля документооборота!");
		Возврат;
	Иначе
		КонтекстЭДОКлиент = Результат.КонтекстЭДО;
		ДополнительныеПараметры.Вставить("КонтекстЭДОКлиент", КонтекстЭДОКлиент);
		ПроверитьЧтоЭДОПодключенПослеДобавленияКонтекстаВПараметры(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры
	
Процедура ПроверитьЧтоЭДОПодключенПослеДобавленияКонтекстаВПараметры(ДополнительныеПараметры) Экспорт
	
	Форма				 			= ДополнительныеПараметры.Форма;
	КонтролирующийОрган 			= ДополнительныеПараметры.КонтролирующийОрган;
	ОрганизацияОтчета				= ДополнительныеПараметры.ОрганизацияОтчета;
	ЭтоОтправкаИзФормыОтчетность	= ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	
	Если НЕ ЭтоОтправкаИзФормыОтчетность Тогда
		ОрганизацияОтчета = ДокументооборотСКОКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
		ДополнительныеПараметры.ОрганизацияОтчета = ОрганизацияОтчета;
	КонецЕсли;
	
	НастроенОбменВУниверсальномФормате = Ложь;
	УчетнаяЗаписьПредназначенаДляДокументооборотаСКО = Ложь;
	
	ДокументооборотСКОВызовСервера.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(
		ОрганизацияОтчета, 
		КонтролирующийОрган, 
		НастроенОбменВУниверсальномФормате, 
		УчетнаяЗаписьПредназначенаДляДокументооборотаСКО);
	
	Если НЕ НастроенОбменВУниверсальномФормате Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПроверитьЧтоЭДОПодключенПослеПолученияКонтекста_ПослеПроверкиЗаявления", 
			ЭтотОбъект, 
			ДополнительныеПараметры);
			
		ПроверитьСтатусПодключенияПередОтправкой(ДополнительныеПараметры.СсылкаНаОтчет, ОписаниеОповещения); // +

		Возврат;
		
	Иначе
		
		Если УчетнаяЗаписьПредназначенаДляДокументооборотаСКО = Неопределено Тогда
			
			ПоказатьПредупреждение(, "Недостаточно прав для использования модуля документооборота!");
			Возврат;
			
		ИначеЕсли УчетнаяЗаписьПредназначенаДляДокументооборотаСКО = Ложь Тогда
			
			СообщитьОНеподключенномНаправлении(ДополнительныеПараметры.СсылкаНаОтчет);
			Возврат;
			
		ИначеЕсли ДокументооборотСКОКлиентСервер.ЭтоФНС(КонтролирующийОрган)
			И НЕ ДокументооборотСКОВызовСервера.ОрганизацияПодключенаКИнспекции(ДополнительныеПараметры.СсылкаНаОтчет) Тогда
			
			СообщитьОНеподключенномНаправлении(ДополнительныеПараметры.СсылкаНаОтчет);
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПроверитьЧтоЭДОПодключенПослеДобавленияКонтекстаВПараметры_ПослеНастройкиЗаявления", 
		ЭтотОбъект, 
		ДополнительныеПараметры);
		
	ЗавершитьНастройкуЗаявленияНаИзменение(ДополнительныеПараметры.СсылкаНаОтчет, ОписаниеОповещения);
	
КонецПроцедуры
	
Процедура ПроверитьЧтоЭДОПодключенПослеДобавленияКонтекстаВПараметры_ПослеНастройкиЗаявления(Результат, ВходящийКонтекст) Экспорт
		
	ОтправкаВКонтролирующийОрганПослеПроверкиПодключенностиЭДО(ВходящийКонтекст);
	
КонецПроцедуры

Процедура ОтправкаВКонтролирующийОрганПослеПроверкиПодключенностиЭДО(ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОтправкаВКонтролирующийОрганПослеПодтвержденияОтправки", 
		ЭтотОбъект, 
		ДополнительныеПараметры);
	
	// при отправке из списка подтверждение запрашивается перед запуском отправки для предотвращения попадания сообщений в диалог подтверждения
	Если ДополнительныеПараметры.Форма = Неопределено ИЛИ ДополнительныеПараметры.Форма.ИмяФормы <> "ОбщаяФорма.РегламентированнаяОтчетность" Тогда
		
		ПараметрыФормы = Новый Структура("СсылкаНаОтчет", ДополнительныеПараметры.СсылкаНаОтчет);
		
		КонтекстЭДОКлиент = ДополнительныеПараметры.КонтекстЭДОКлиент;
		
		ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.ПодтверждениеОтправкиОтчета", 
			ПараметрыФормы,,,,, 
			ОписаниеОповещения, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	Иначе
			
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОрганизацияПодключенаКНаправлению(ОрганизацияОтчета, КонтролирующийОрган) Экспорт
	
	// Выписка из ЕГРЮЛ.
	Если НЕ ЗначениеЗаполнено(КонтролирующийОрган) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ВидОргана = ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов." + КонтролирующийОрган);
	
	ПодключенЭДО = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ПодключенДокументооборотСКонтролирующимОрганом(
		ОрганизацияОтчета, 
		ВидОргана);
	
	Если НЕ ПодключенЭДО Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Для организации не включена возможность отправки в %1!'");
		ТекстПредупреждения = СтрШаблон(ТекстПредупреждения, КонтролирующийОрган);
		
		ПоказатьПредупреждение(, ТекстПредупреждения);
			
		Возврат Ложь;
			
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ОповеститьОЗавершенииОтправкиИПерерисоватьПанельОтправки(РезультатОтправки, ДополнительныеПараметры) Экспорт
	
	ЭтоОтправкаИзФормыОтчетность 	= ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	Форма 							= ДополнительныеПараметры.Форма;
	КонтролирующийОрган 			= ДополнительныеПараметры.КонтролирующийОрган;
	СсылкаНаОтчет 					= ДополнительныеПараметры.СсылкаНаОтчет;
	ОрганизацияОтчета 				= ДополнительныеПараметры.ОрганизацияОтчета;
	
	Если НЕ ЭтоОтправкаИзФормыОтчетность Тогда
		Если РезультатОтправки Тогда
			ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(Форма, КонтролирующийОрган);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура(); 
	ПараметрыОповещения.Вставить("Ссылка", 		СсылкаНаОтчет);
	ПараметрыОповещения.Вставить("Организация", ОрганизацияОтчета);
	Оповестить("Завершение отправки в контролирующий орган", ПараметрыОповещения, );
	
КонецПроцедуры

Процедура ОтправкаВКонтролирующийОрганПослеПодтвержденияОтправки(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Форма 						= ВходящийКонтекст.Форма;
	ОрганизацияОтчета			= ВходящийКонтекст.ОрганизацияОтчета;
	ЭтоУведомлениеФНС			= ВходящийКонтекст.ЭтоУведомлениеФНС;
	ЭтоЖурналСчетовФактурФНС	= ВходящийКонтекст.ЭтоЖурналСчетовФактурФНС;
	ЭтоРеестрНДС				= ВходящийКонтекст.ЭтоРеестрНДС;
	ЭтоРеестрАкцизы				= ВходящийКонтекст.ЭтоРеестрАкцизы;
	КонтекстЭДОКлиент			= ВходящийКонтекст.КонтекстЭДОКлиент;
	КонтролирующийОрган			= ВходящийКонтекст.КонтролирующийОрган;
	СсылкаНаОтчет 				= ВходящийКонтекст.СсылкаНаОтчет;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОповеститьОЗавершенииОтправкиИПерерисоватьПанельОтправки", 
		ЭтотОбъект, 
		ВходящийКонтекст);
	
	Если ЭтоУведомлениеФНС Тогда
		
		КонтекстЭДОКлиент.ОтправкаУведомлениеФНС(
			СсылкаНаОтчет, 
			Форма.УникальныйИдентификатор, 
			ОписаниеОповещения);
		
	ИначеЕсли ЭтоЖурналСчетовФактурФНС Тогда
		
		КонтекстЭДОКлиент.ОтправкаЖурналаСчетовФактурВФНС(
			СсылкаНаОтчет, 
			ОрганизацияОтчета, 
			Форма.УникальныйИдентификатор, 
			ОписаниеОповещения);
			
	ИначеЕсли ЭтоРеестрНДС ИЛИ ЭтоРеестрАкцизы Тогда
		
		КонтекстЭДОКлиент.ОтправкаРеестраНДС(
			ОписаниеОповещения);
		
	Иначе
		
		// регистрируем заявку на отправку
		Если КонтролирующийОрган = "ФНС" Тогда
			КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВФНС(СсылкаНаОтчет, ОписаниеОповещения);
		ИначеЕсли КонтролирующийОрган = "ФСГС" Тогда
			КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВФСГС(СсылкаНаОтчет, ОписаниеОповещения);
		Иначе
			КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВПФР(СсылкаНаОтчет, ОписаниеОповещения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВИнтернете(Форма, КонтролирующийОрган = "ФНС", АдресГотовыхДанных = Неопределено, ИмяФайлаГотовыхДанных = Неопределено) Экспорт
	
	СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	ИмяДокументаУведомлениеОКонтролируемыхСделках 					= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
	ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде	= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
	ИмяДокументаИсходящееУведомлениеФНС					 			= "УведомлениеОСпецрежимахНалогообложения";
	
	ИмяДокументаЗаявлениеОВвозеТоваров 	= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЗаявлениеОВвозеТоваров");
	
	Если ИмяДокументаЗаявлениеОВвозеТоваров <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаЗаявлениеОВвозеТоваров) Тогда
		ЭтоЗаявлениеОВвозе = Истина;
	Иначе
		ЭтоЗаявлениеОВвозе = Ложь;
	КонецЕсли;
	
	Если (ИмяДокументаУведомлениеОКонтролируемыхСделках <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках))
		ИЛИ (ИмяДокументаИсходящееУведомлениеФНС <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаИсходящееУведомлениеФНС)) Тогда
		ЭтоУведомлениеФНС = Истина;
	Иначе
		ЭтоУведомлениеФНС = Ложь;
	КонецЕсли;
	
	Если ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде) Тогда
		ЭтоЖурналСчетовФактурФНС = Истина;
	Иначе
		ЭтоЖурналСчетовФактурФНС = Ложь;
	КонецЕсли;
	
	Если ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка.РегламентированныйОтчет")
		ИЛИ ТипЗнчСсылкаНаОтчет = Тип("Неопределено") Тогда
		
		// отправляем только из записанной формы
		Если Форма.Модифицированность Тогда
			
			ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
			ДополнительныеПараметры.Вставить("АдресГотовыхДанных", АдресГотовыхДанных);
			ДополнительныеПараметры.Вставить("ИмяФайлаГотовыхДанных", ИмяФайлаГотовыхДанных);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			
			Форма.СохранитьНаКлиенте(, ОписаниеОповещения);
			
		Иначе
			ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет, АдресГотовыхДанных, ИмяФайлаГотовыхДанных)
		КонецЕсли;
		
	ИначеЕсли ЭтоУведомлениеФНС Тогда
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) ИЛИ Форма.Модифицированность Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Перед проверкой необходимо записать уведомление.'"));
			Возврат;
		КонецЕсли;
		
		ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет)
		
	ИначеЕсли ЭтоЖурналСчетовФактурФНС Тогда
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) ИЛИ Форма.Модифицированность Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Перед проверкой необходимо записать журнал.'"));
			Возврат;
		КонецЕсли;
		
		ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет)
		
	ИначеЕсли ЭтоЗаявлениеОВвозе Тогда
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) ИЛИ Форма.Модифицированность Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Перед проверкой необходимо записать заявление.'"));
			Возврат;
		КонецЕсли;
		
		ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет)
		
	Иначе // все, кроме документа РегламентированныйОтчет
		
		Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Перед проверкой необходимо записать отчет.'"));
			Возврат;
		КонецЕсли;
		
		ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет)
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	
	АдресГотовыхДанных = Неопределено;
	ИмяФайлаГотовыхДанных = Неопределено;
	Если ДополнительныеПараметры.Свойство("АдресГотовыхДанных") Тогда 
		АдресГотовыхДанных = ДополнительныеПараметры.АдресГотовыхДанных;
		ИмяФайлаГотовыхДанных = ДополнительныеПараметры.ИмяФайлаГотовыхДанных;
	КонецЕсли;
			
	ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет, АдресГотовыхДанных, ИмяФайлаГотовыхДанных)
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПослеСохранения(Форма, КонтролирующийОрган, СсылкаНаОтчет, АдресГотовыхДанных = Неопределено, ИмяФайлаГотовыхДанных = Неопределено)
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", 					Форма);
	ДополнительныеПараметры.Вставить("КонтролирующийОрган", 	КонтролирующийОрган);
	ДополнительныеПараметры.Вставить("СсылкаНаОтчет", 			СсылкаНаОтчет);
	
	ДополнительныеПараметры.Вставить("АдресГотовыхДанных", 		АдресГотовыхДанных);
	ДополнительныеПараметры.Вставить("ИмяФайлаГотовыхДанных", 	ИмяФайлаГотовыхДанных);
	
	ДополнительныеПараметры.Вставить("СледуетОбновлятьПанельОтправки", 	Истина);
	ДополнительныеПараметры.Вставить("Форма", 							Форма);
			
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеПослеПолученияКонтекста", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Недостаточно прав для использования методов электронного документооборота с контролирующими органами.'"));
	Иначе
		КонтекстЭДОКлиент.ПроверитьОтчетСИспользованиемСервисаОнлайнПроверки(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПоСсылке(Ссылка, КонтролирующийОрган = "ФНС", АдресГотовыхДанных = Неопределено, ИмяФайлаГотовыхДанных = Неопределено) Экспорт
	
	ТипЗнчСсылка = ТипЗнч(Ссылка);
	ИмяДокументаУведомлениеОКонтролируемыхСделках 					= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
	ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде	= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
	ИмяДокументаИсходящееУведомлениеФНС 							= "УведомлениеОСпецрежимахНалогообложения";
	
	Если (ИмяДокументаУведомлениеОКонтролируемыхСделках <> Неопределено И ТипЗнчСсылка = Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках))
	ИЛИ (ИмяДокументаИсходящееУведомлениеФНС <> Неопределено И ТипЗнчСсылка = Тип("ДокументСсылка." + ИмяДокументаИсходящееУведомлениеФНС)) Тогда
		ЭтоУведомлениеФНС = Истина;
	Иначе
		ЭтоУведомлениеФНС = Ложь;
	КонецЕсли;
	
	Если ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде <> Неопределено И ТипЗнчСсылка = Тип("ДокументСсылка." + ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде) Тогда
		ЭтоЖурналСчетовФактурФНС = Истина;
	Иначе
		ЭтоЖурналСчетовФактурФНС = Ложь;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("Ссылка, КонтролирующийОрган", Ссылка, КонтролирующийОрган);
	
	ДополнительныеПараметры.Вставить("АдресГотовыхДанных", 		АдресГотовыхДанных);
	ДополнительныеПараметры.Вставить("ИмяФайлаГотовыхДанных", 	ИмяФайлаГотовыхДанных);
	
	ДополнительныеПараметры.Вставить("СледуетОбновлятьПанельОтправки", 	Ложь);
	ДополнительныеПараметры.Вставить("Форма", 							Неопределено);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеПослеПолученияКонтекста", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ПослеЗапускаСистемы() Экспорт
	
	Если ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске();
	ТекущемуПользователюЭДОДоступен = ПараметрыРаботыКлиентаПриЗапуске.ДокументооборотСКонтролирующимиОрганами_ТекущемуПользователюЭДОДоступен;
	ВыбранныйCSPИзВременныхНастроек = ПараметрыРаботыКлиентаПриЗапуске.ДокументооборотСКонтролирующимиОрганами_ВыбранныйCSPИзВременныхНастроек;
	
	Если ТекущемуПользователюЭДОДоступен Тогда
		ПодключитьОбработчикОжидания("ПолучитьИнформациюОВходящихСообщенияхДляПользователяЭДО", 60, Истина);
	КонецЕсли;
	ПодключениеОбработчикаОжиданияАвтообмена(Истина);
	ОткрытьМастерПодключенияК1СОтчетности(ВыбранныйCSPИзВременныхНастроек);
	Если ТекущемуПользователюЭДОДоступен Тогда
		ПодключитьОбработчикОжидания("ПредупредитьОПроблемах1СОтчетности", 300, Истина);
		
		ПодключитьОбработчикОжидания("ПредупредитьОНекорректныхСтатусахОтправки2НДФЛ", 3 * 60, Истина);		
	КонецЕсли;
	ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске();
	Если ЗначениеЗаполнено(ПараметрыРаботыКлиентаПриЗапуске.ДоступныеЛокальныеСертификатыПользователя)
		И НЕ ПараметрыРаботыКлиентаПриЗапуске.НеПоказыватьПредупреждениеОКонфликтеКриптопровайдеров Тогда
		ПодключитьОбработчикОжидания("ПредупредитьОКонфликтеКриптопровайдеров", 30, Истина);
	КонецЕсли;

	// Подключаем без повторения, иначе при повторении сохранится короткий интервал в 10 секунд,
	// а нужен значительно больший.
	Если ПараметрыРаботыКлиентаПриЗапуске.ДокументооборотСКонтролирующимиОрганами_ЕстьОтправленныеЗаявленияАбонентов Тогда 
		ОбработкаЗаявленийАбонентаКлиент.ПодключитьОбработчикПроверкиЗаявлений(10);
	КонецЕсли;
	

КонецПроцедуры

Процедура ПодключениеОбработчикаОжиданияАвтообмена(Подключать = Истина) Экспорт
	
	Если Подключать Тогда
		
		ПараметрыРаботыКлиентаПриЗапуске 	= СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске();
		ТекущемуПользователюАОДоступен 		= ПараметрыРаботыКлиентаПриЗапуске.ДокументооборотСКонтролирующимиОрганами_ТекущемуПользователюАОДоступен;
	
		// проверяем, является ли текущий пользователь пользователем ДО
		// проверяем отключение автообмена на уровне учетной записи документооборота
		// Может равняться Неопределено.
		Если ТекущемуПользователюАОДоступен = Истина Тогда
			
			// если проверки пройдены, определяем интервал выполнения
			Интервал = 30 * 60; // 30 мин.
			ПодключитьОбработчикОжидания("ПолучитьИнформациюОВходящихСообщениях", Интервал);
			
		КонецЕсли;
		
	Иначе
		ОтключитьОбработчикОжидания("ПолучитьИнформациюОВходящихСообщениях");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьМастерПодключенияК1СОтчетности(СохраненныеНастройки)
	
	// Если пользователь в мастере подключения остановился на шаге установки криптопровайдеров (шаг 2)
	// и после установки криптопровайдера перезагрузил компьютер, то необходимо открыть мастер для продолжения
	// подключения к 1С-Отчетности
	Если СохраненныеНастройки <> Неопределено Тогда
		
		ДополнительныеПараметры = Новый Структура("СохраненныеНастройки", СохраненныеНастройки);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьМастерПодключенияК1СОтчетностиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьМастерПодключенияК1СОтчетностиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	СохраненныеНастройки = ДополнительныеПараметры.СохраненныеНастройки;
	
	Если КонтекстЭДОКлиент <> Неопределено Тогда
		
		Если ТипЗнч(СохраненныеНастройки) = Тип("СправочникСсылка.Организации") Тогда
			ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьФормуМастераЗаявленияНаПодключение(СохраненныеНастройки);
		Иначе
			ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьФормуМастераЗаявленияНаПодключение();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьИнформациюОВходящихСообщенияхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КонтекстЭДОКлиент.ПолучитьИОбработатьВходящиеКлиент();
	
КонецПроцедуры

Процедура ПолучитьИнформациюОВходящихСообщенияхДляПользователяЭДОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КонтекстЭДОКлиент.ПолучитьИОбработатьВходящиеКлиент();
	
КонецПроцедуры

Процедура ПредупредитьОПроблемах1СОтчетностиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КонтекстЭДОКлиент.ПредупредитьОПроблемах1СОтчетностиКлиент();
	
КонецПроцедуры

Процедура ПредупредитьОНекорректныхСтатусахОтправки2НДФЛПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент.ПредупредитьОбОшибкеВСтатусахОтправки2НДФЛ();
	
КонецПроцедуры

Процедура СоздатьЭлектронноеПредставлениеРегламентированныхОтчетовИзФайлов(Файлы, Адрес) Экспорт
	
	МассивФайлов = Новый Массив;
	Если ТипЗнч(Файлы) = Тип("Файл") Тогда
		МассивФайлов.Добавить(Файлы.ПолноеИмя);
	ИначеЕсли ТипЗнч(Файлы) = Тип("Массив") Тогда
		Для Каждого Значение Из Файлы Цикл
			Если ТипЗнч(Значение) = Тип("Файл") Тогда
				МассивФайлов.Добавить(Значение.ПолноеИмя);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивФайлов.Количество() > 0 Тогда
		ФайлыИмпорта = СтрСоединить(МассивФайлов, Символы.ПС);
				              
		ДополнительныеПараметры = Новый Структура("Адрес, ФайлыИмпорта", Адрес, ФайлыИмпорта);
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьЭлектронноеПредставлениеРегламентированныхОтчетовИзФайловЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЭлектронноеПредставлениеРегламентированныхОтчетовИзФайловЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПолучениеФайловДляИмпортаНачало(ДополнительныеПараметры.Адрес, ДополнительныеПараметры.ФайлыИмпорта);
		
КонецПроцедуры

#Область ПроверкаСтатусаЗаявленияПередОтправкой

// Проверяет, было ли отправлено и одобрено заявление на подключение к 1С-Отчетности.
// Если было, то предлагает завершить настройку 1С-Отчетности и повторяет отправку объекта,
// если указан параметр ВыполняемоеОповещение.
// Если заявления отправлено не было, то показывает предложение подключиться к 1С-Отчетности.
//
// Параметры:
//  СсылкаНаОбъект			 - ДокументСсылка, СправочникСсылка - Отправляемый объект
//  ВыполняемоеОповещение	 - ОписаниеОповещения, Неопределено - Описание действия, которое должно быть повторено после
//		успешной настройки заявления по 1С-Отчетности. Неопределено - если отправку повторять не нужно. 

Процедура ПроверитьСтатусПодключенияПередОтправкой(СсылкаНаОбъект, ВыполняемоеОповещение = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", 	ВыполняемоеОповещение);
	ДополнительныеПараметры.Вставить("СсылкаНаОбъект", 			СсылкаНаОбъект);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПроверитьСтатусПодключенияПередОтправкойПослеПолученияКонтекста", 
		ЭтотОбъект, 
		ДополнительныеПараметры);
		
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ПроверитьСтатусПодключенияПередОтправкойПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.КонтекстЭДО = Неопределено Тогда
		ПоказатьПредупреждение(, "Недостаточно прав для использования модуля документооборота!");
	Иначе
		КонтекстЭДОКлиент = Результат.КонтекстЭДО;
		КонтекстЭДОКлиент.ПроверитьСтатусПодключенияПередОтправкой(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

// Проверяет, было ли отправлено и одобрено заявление на изменение подключения к 1С-Отчетности.
// Если было, то предлагает завершить его настройку и затем продолжает отправку.
//
// Параметры:
//  СсылкаНаОбъект			 - ДокументСсылка, СправочникСсылка - Отправляемый объект 
//  ВыполняемоеОповещение	 - ОписаниеОповещения, Неопределено - Описание действия, которое должно быть выполнено
//		после настройки заявления на изменение 1С-Отчетности.
//
Процедура ЗавершитьНастройкуЗаявленияНаИзменение(СсылкаНаОбъект, ВыполняемоеОповещение) Экспорт
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", 	ВыполняемоеОповещение);
	ДополнительныеПараметры.Вставить("СсылкаНаОбъект", 			СсылкаНаОбъект);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗавершитьНастройкуЗаявленияНаИзменениеПоСсылке_ПослеПолученияКонтекста", 
		ЭтотОбъект, 
		ДополнительныеПараметры);
		
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ЗавершитьНастройкуЗаявленияНаИзменениеПоСсылке_ПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.КонтекстЭДО = Неопределено Тогда
		ПоказатьПредупреждение(, "Недостаточно прав для использования модуля документооборота!");
	Иначе
		
		КонтекстЭДОКлиент = Результат.КонтекстЭДО;
		
		КонтекстЭДОКлиент.ЗавершитьНастройкуЗаявленияНаИзменение(
			ДополнительныеПараметры.СсылкаНаОбъект,
			ДополнительныеПараметры.ВыполняемоеОповещение);
			
	КонецЕсли;
	
КонецПроцедуры

// Показывает предупреждение о том, что направление сдачи отчетности не подключено и предлагает
// отправить заявление для подключения этого направления. 
// Если заявление было отправлено, то предлагает завершить настройку заявления, если оно одобрено
// или сообщает о том, что оно еще не одобрено.
// По завершению работы вызывается процедура, указанная в параметре ВыполняемоеОповещение 
// с результатом, указанным в параметре РезультатОтправки.
//
// Параметры:
//  СсылкаНаОбъект			 - ДокументСсылка, СправочникСсылка - Отправляемый объект
//  ВыполняемоеОповещение	 - ОписаниеОповещения, Неопределено - Действие, которое должно быть выполенено в случае неуспешной отправки.
//  РезультатОтправки		 - Произвольный - Результат, который должен быть возвращен в случае неуспешной отправки отчета.
//
Процедура СообщитьОНеподключенномНаправлении(СсылкаНаОбъект, ВыполняемоеОповещение = Неопределено, РезультатОтправки = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("СсылкаНаОбъект",	 		СсылкаНаОбъект);
	ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", 	ВыполняемоеОповещение);
	ДополнительныеПараметры.Вставить("РезультатОтправки", 		РезультатОтправки);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СообщитьОНеподключенномНаправленииПослеПолученияКонтекста", 
		ЭтотОбъект, 
		ДополнительныеПараметры);
		
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры
	
Процедура СообщитьОНеподключенномНаправленииПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.КонтекстЭДО = Неопределено Тогда
		ПоказатьПредупреждение(, "Недостаточно прав для использования модуля документооборота!");
	Иначе
		КонтекстЭДОКлиент = Результат.КонтекстЭДО;
		КонтекстЭДОКлиент.СообщитьОНеподключенномНаправлении(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоУведомлениеФНС(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);

	ЭтоУведомлениеФНС = Ложь;
	
	ИмяДокументаУведомлениеОКонтролируемыхСделках
		= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("УведомлениеОКонтролируемыхСделках");
	ИмяДокументаИсходящееУведомлениеФНС = "УведомлениеОСпецрежимахНалогообложения";
	
	Если (ИмяДокументаУведомлениеОКонтролируемыхСделках <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаУведомлениеОКонтролируемыхСделках))
		ИЛИ (ИмяДокументаИсходящееУведомлениеФНС <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаИсходящееУведомлениеФНС)) Тогда
		ЭтоУведомлениеФНС = Истина;
	Иначе
		ЭтоУведомлениеФНС = Ложь;
	КонецЕсли;
	
	Возврат ЭтоУведомлениеФНС;

КонецФункции

Функция ЭтоЖурналСчетовФактурФНС(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	
	ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде	= 
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
		
	ЭтоЖурналСчетовФактурФНС = Ложь;
		
	Если ТипЗнч(СсылкаНаОтчет) = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
		ЭтоЖурналСчетовФактурФНС = 
			ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЗначениеРеквизитаОбъекта(СсылкаНаОтчет, "ВидОтчета") =
				ПредопределенноеЗначение("Справочник.ВидыОтправляемыхДокументов.ЖурналУчетаСчетовФактур");	
	Иначе	
		
		Если ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде <> Неопределено 
			И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде) Тогда
			
			ЭтоЖурналСчетовФактурФНС = Истина;
		Иначе
			ЭтоЖурналСчетовФактурФНС = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЭтоЖурналСчетовФактурФНС;

КонецФункции

Функция ЭтоРеестрНДС(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	
	ЭтоРеестрНДС = Ложь;
		
	Если ТипЗнч(СсылкаНаОтчет) = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
		
		ВидОтчета = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЗначениеРеквизитаОбъекта(
			СсылкаНаОтчет, 
			"ВидОтчета");
			
		ВидыОтчетов = ДокументооборотСКОКлиентСервер.ВидыОтправляемыхДокументовРеестровНДС();
		
		ЭтоРеестрНДС = ВидыОтчетов.Найти(ВидОтчета) <> Неопределено;
		
	Иначе
		
		ЭтоРеестрНДС = ДокументооборотСКОВызовСервера.ЭтоРегламентированныйОтчетРеестрНДС(СсылкаНаОтчет);
		
	КонецЕсли;
	
	Возврат ЭтоРеестрНДС;

КонецФункции 

Функция ЭтоРеестрАкцизы(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	
	ЭтоРеестрАкцизы = Ложь;
	
	Если ТипЗнч(СсылкаНаОтчет) = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда
		
		ВидОтчета = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЗначениеРеквизитаОбъекта(
			СсылкаНаОтчет,
			"ВидОтчета");
			
		ВидыОтчетов = ДокументооборотСКОКлиентСервер.ВидыОтправляемыхДокументовРеестровАкцизов();
		
		ЭтоРеестрАкцизы = ВидыОтчетов.Найти(ВидОтчета) <> Неопределено;
		
	Иначе
		
		ЭтоРеестрАкцизы = ДокументооборотСКОВызовСервера.ЭтоРегламентированныйОтчетРеестрАкцизы(СсылкаНаОтчет);
		
	КонецЕсли;
	
	Возврат ЭтоРеестрАкцизы;
	
КонецФункции

Функция ЭтоЗаявлениеОВвозе(СсылкаНаОтчет)
	
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);

	ЭтоЗаявлениеОВвозе = Ложь;
	
	ИмяДокументаЗаявлениеОВвозеТоваров = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ИмяОбъектаМетаданных("ЗаявлениеОВвозеТоваров");
	
	Если ИмяДокументаЗаявлениеОВвозеТоваров <> Неопределено И ТипЗнчСсылкаНаОтчет = Тип("ДокументСсылка." + ИмяДокументаЗаявлениеОВвозеТоваров) Тогда
		ЭтоЗаявлениеОВвозе = Истина;
	Иначе
		ЭтоЗаявлениеОВвозе = Ложь;
	КонецЕсли;
	
	Возврат ЭтоЗаявлениеОВвозе;

КонецФункции

#КонецОбласти