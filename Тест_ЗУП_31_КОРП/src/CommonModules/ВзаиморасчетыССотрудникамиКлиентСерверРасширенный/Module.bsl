
#Область СлужебныйПрограммныйИнтерфейс

#Область МестаВыплатыЗарплаты

Функция ФормаОплатыВедомости(Ведомость) Экспорт
	
	Если ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк") Или ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыПеречислением") Тогда
		ФормаОплатыВедомости = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Безналичная")
	ИначеЕсли ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу") Или ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыРаздатчиком") Тогда
		ФормаОплатыВедомости = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличная")
	Иначе
		ФормаОплатыВедомости = Неопределено
	КонецЕсли;	
	
	Возврат ФормаОплатыВедомости
	
КонецФункции	

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииФормВедомостейНаВыплатуЗарплаты

Процедура ВедомостьУстановитьПредставлениеОснований(Форма) Экспорт
	
	Если ЗначениеЗаполнено(Форма.ВидДокументаОснования) Тогда
	
		Если Форма.Объект.Основания.Количество() = 0 Тогда
			Форма.ОснованияПредставление = НСтр("ru = 'Не выбраны'");
			Форма.ОснованияВыбраны = Ложь;
		Иначе	
			Форма.ОснованияПредставление = ЧислоПрописью(Форма.Объект.Основания.Количество(),,НСтр("ru = 'документ, документа, документов, м, ,,,,0'"));
			Форма.ОснованияВыбраны = Истина;
		КонецЕсли;	
		
	Иначе
		
		Форма.ОснованияПредставление = "";
		Форма.ОснованияВыбраны = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВедомостьУстановитьПредставлениеПараметровРасчета(Форма) Экспорт
	
	Ведомость = Форма.Объект;
	
	// Проконтролируем сомнительные настройки.
	Если НЕ ЗначениеЗаполнено(Ведомость.ПроцентВыплаты) ИЛИ Ведомость.ПроцентВыплаты < 0 Тогда
		ТекстОшибки = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'размер выплаты %1% ?'"), 
				Ведомость.ПроцентВыплаты)
	Иначе
		ТекстОшибки = ""
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		
		ПредставлениеПараметровРасчета = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Внимание. Проверьте настройки расчета: %1'"),  
				ТекстОшибки);
			
	Иначе
	
	// Штатная работа
	
		Если ЗначениеЗаполнено(Ведомость.ПроцентВыплаты) И Ведомость.ПроцентВыплаты <> 100 Тогда
			ТекстПроцент = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1% от причитающихся сумм'"),  
					Ведомость.ПроцентВыплаты);
		Иначе
			ТекстПроцент = НСтр("ru = 'всеми причитающимися суммами'")
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Ведомость.Округление) Тогда
			ТекстОкругление = ", " + НРег(Ведомость.Округление);
		Иначе
			ТекстОкругление = ""
		КонецЕсли;
		
		ПредставлениеПараметровРасчета = 
			НСтр("ru = 'Заполнение'") + " " + 
			ТекстПроцент +
			ТекстОкругление;
			
	КонецЕсли;
	
	Форма.Элементы.ПараметрыРасчетаГруппа.ЗаголовокСвернутогоОтображения =  ПредставлениеПараметровРасчета;
	
КонецПроцедуры

Процедура УстановитьОтображениеВХО(Форма, УстанавливатьОтображениеВыплатыЗарплаты = Истина,  УстанавливатьОтображениеПеречисленияНДФЛ = Истина) Экспорт
	УстановитьОтображениеВХОВыплатыЗарплаты(Форма);
	УстановитьОтображениеВХОПеречисленияНДФЛ(Форма);
	УстановитьОтображениеВХОПВыплатыДоходов(Форма);
КонецПроцедуры

Процедура УстановитьОтображениеВХОВыплатыЗарплаты(Форма) Экспорт
	
	Ведомость = Форма.Объект.Ссылка;
	
	ЕстьНевыплаты = Ложь;
	
	ФормаОплатыВедомости = ФормаОплатыВедомости(Ведомость);
	
	Если ЗначениеЗаполнено(ФормаОплатыВедомости) 
		И ФормаОплатыВедомости = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Безналичная") Тогда
		
		ЕстьНевыплаты = ВзаиморасчетыССотрудникамиВызовСервераРасширенный.ЕстьНезачисленияПоВедомости(Ведомость, Истина);
		
	ИначеЕсли ЗначениеЗаполнено(ФормаОплатыВедомости)
		И ФормаОплатыВедомости = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличная") Тогда
		
		ЕстьНевыплаты = ВзаиморасчетыССотрудникамиВызовСервераРасширенный.ЕстьДепонированияПоВедомости(Ведомость, Истина);
		
	КонецЕсли;
	
	Если ЕстьНевыплаты Тогда
		Форма.Элементы.ВыплатаЗарплатыСтраницы.ТекущаяСтраница = Форма.Элементы.ВыплатаЗарплатыСтраницыЧастично
	Иначе
		Форма.Элементы.ВыплатаЗарплатыСтраницы.ТекущаяСтраница = Форма.Элементы.ВыплатаЗарплатыСтраницыПолностью
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОтображениеВХОПеречисленияНДФЛ(Форма) Экспорт
	
	Если Форма.Объект.ПеречислениеНДФЛВыполнено Тогда
		Форма.Элементы.ПеречислениеНДФЛСтраницы.ТекущаяСтраница = Форма.Элементы.ПеречислениеНДФЛСтраницаПолностью
	Иначе
		Форма.Элементы.ПеречислениеНДФЛСтраницы.ТекущаяСтраница = Форма.Элементы.ПеречислениеНДФЛСтраницаЧастично
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОтображениеВХОПВыплатыДоходов(Форма) Экспорт
	
	Ведомость = Форма.Объект.Ссылка;
	
	Форма.ДатаВыплаты = ВедомостьДатаВыплаты(Форма.Объект);
	
	ЕстьПодтверждениеВыплатыДоходов = ВзаиморасчетыССотрудникамиВызовСервераРасширенный.ЕстьПодтверждениеВыплатыДоходовПоВедомости(Ведомость);
	Если ЕстьПодтверждениеВыплатыДоходов Тогда
		Форма.Элементы.УточнениеДатыВыплаты.ТекущаяСтраница = Форма.Элементы.ПодтверждениеВыплатыГруппа
	Иначе
		Форма.Элементы.УточнениеДатыВыплаты.ТекущаяСтраница = Форма.Элементы.ДатаВыплатыГруппа
	КонецЕсли;
	
КонецПроцедуры

Функция ВедомостьДатаВыплаты(Ведомость) Экспорт
	Возврат ?(ЗначениеЗаполнено(Ведомость.ДатаВыплаты), Ведомость.ДатаВыплаты, НачалоДня(Ведомость.Дата));
КонецФункции

#КонецОбласти

#КонецОбласти
