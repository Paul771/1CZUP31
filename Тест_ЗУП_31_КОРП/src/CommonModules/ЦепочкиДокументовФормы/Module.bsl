
#Область СлужебныйПрограммныйИнтерфейс

#Область ГенерацияРеквизитовИЭлементовФорм

Процедура ДополнитьФормуДокументаЭлементамиЗамещения(Форма, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьЦепочкиДокументов") Тогда
		Возврат;
	КонецЕсли;
	
	ДобавлятьРеквизитыПодчиненного = ЦепочкиДокументов.ЭтоПодчиненныйДокумент(Форма.Объект.Ссылка);
	
	Если ДобавлятьРеквизитыФормы Тогда
		СоздатьРеквизитыФормыДляЗамещения(Форма, ДобавлятьРеквизитыПодчиненного, ОтложенноеИзменение);
	КонецЕсли;
	
	Если ДобавлятьЭлементыФормы Тогда
		СоздатьЭлементыФормыДляЗамещения(Форма);
	КонецЕсли;

	Если Не ОтложенноеИзменение Тогда
		// Значит реквизиты уже созданы - присваеваем им значения.
		УстановитьРеквизитФормыДокументОснование(Форма);
		УстановитьИнфоНадписьЗамещения(Форма);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

// Фунция формирует форматированную строку с инфо-надписью о документах замещения и устанавливает ее как значение для
// реквизита формы документа. Параметры
//		- Форма - управляемая форма
//		- ИмяРеквизитаФормы - имя реквизита формы
//		- ИмяЭлементаФормы - имя элемента формы.
//
Процедура УстановитьИнфоНадписьЗамещения(Форма) Экспорт

	ИмяРеквизитаДокументОснование = "ЗамещениеДокументОснование";
	ИмяРеквизитаФормы = "ЗамещениеИнфоНадпись";
	ИмяЭлементаФормы = "ЗамещениеИнфоНадпись";
	
	СтруктураИсходногоДокумента = ИсходныйДокументЗамещения(Форма.Объект);
	ИсходныйДокумент = СтруктураИсходногоДокумента.ИсходныйДокумент;
	
	ЭтоСопутствующийДокумент = СтруктураИсходногоДокумента.НайденоИсправление ИЛИ СтруктураИсходногоДокумента.НайденоОснование;
	
	Если ЦепочкиДокументов.ЭтоПодчиненныйДокумент(ИсходныйДокумент) Тогда
		Если ЭтоСопутствующийДокумент Тогда
			ДокументОснование = ЦепочкиДокументов.ДокументОснование(ИсходныйДокумент);
		Иначе
			ДокументОснование = Форма[ИмяРеквизитаДокументОснование];
		КонецЕсли;
	Иначе
		ДокументОснование = Неопределено;
	КонецЕсли;
	
	ТаблицаДокументовОснования = ЦепочкиДокументов.ТаблицаСДокументомОснованием(ДокументОснование);
	ТаблицаПодчиненныхДокументов = ЦепочкиДокументов.ПодчиненныеДокументы(ИсходныйДокумент);
	
	СтруктураНадписи = ТекстИнфоНадписиЗамещения(СтруктураИсходногоДокумента, ТаблицаДокументовОснования, ТаблицаПодчиненныхДокументов);
	
	ТекстНадписи							= СтруктураНадписи.ТекстНадписи;
	Форма.Элементы[ИмяЭлементаФормы].Высота = СтруктураНадписи.Высота;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаЦепочкиДокументов",
		"Видимость",
		ЗначениеЗаполнено(ТекстНадписи));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ЗамещениеКартинка",
		"Видимость",
		ЭтоСопутствующийДокумент);
		
	Если Не ЗначениеЗаполнено(ТекстНадписи) Тогда
		Возврат;
	КонецЕсли; 
		
	Форма[ИмяРеквизитаФормы] = Новый ФорматированнаяСтрока(ТекстНадписи);
	
КонецПроцедуры

Функция ИнфоНавигационнаяСсылка(Режим, ДокументСсылка, ФормироватьПараметрыПоСсылке = Ложь) Экспорт 

	МассивСтрок = Новый Массив;
	
	МассивСтрок.Добавить(Режим);
	МассивСтрок.Добавить(ДокументСсылка.Метаданные().Имя);
	МассивСтрок.Добавить(Строка(ДокументСсылка.УникальныйИдентификатор()));
	МассивСтрок.Добавить(?(ФормироватьПараметрыПоСсылке, "1", "0"));
	
	Возврат СтрСоединить(МассивСтрок, "%");

КонецФункции

Функция ТекстИнфоНадписиЗамещения(СтруктураИсходногоДокумента, ТаблицаДокументовОснования, ТаблицаПодчиненныхДокументов) 
	
	ДокументСсылка = СтруктураИсходногоДокумента.ИсходныйДокумент;
	ЭтоСопутствующийДокумент = СтруктураИсходногоДокумента.НайденоИсправление ИЛИ СтруктураИсходногоДокумента.НайденоОснование;
	
	ТекстНадписи = Новый Массив;
	
	ЕстьПодчиненные = ТаблицаПодчиненныхДокументов.Количество() > 0;
	ЕстьОснования = ТаблицаДокументовОснования.Количество() > 0;

	ЭтоДокументОснование	 = ЦепочкиДокументов.ЭтоДокументОснование(ДокументСсылка);
	ЭтоПодчиненныйДокумент	 = ЦепочкиДокументов.ЭтоПодчиненныйДокумент(ДокументСсылка);
	
	Высота = 0;
	
	Если НЕ ЭтоДокументОснование И НЕ ЭтоПодчиненныйДокумент Тогда
		Возврат Новый Структура("ТекстНадписи, Высота", ТекстНадписи, Высота);
	КонецЕсли;
	
	// Формируем информацию про основания этого документа.
	Если ЭтоПодчиненныйДокумент И ЕстьОснования Тогда
		ДобавитьИнфоДокументаОснования(ТекстНадписи, ТаблицаДокументовОснования);
		Высота = Высота + 1;
	КонецЕсли;
	
	// Формируем информацию про документы, введеные на основании данного документа.
	Если ЭтоДокументОснование Тогда
		
		Если Высота = 1 Тогда
			ТекстНадписи.Добавить(Символы.ПС);
		КонецЕсли;
		
		Высота = Высота + 1;
		Если ЕстьПодчиненные Тогда
			ДобавитьИнфоПодчиненныхДокументов(ТекстНадписи, ТаблицаПодчиненныхДокументов, СтруктураИсходногоДокумента);
		Иначе
			ДобавитьКомандуВызоваПомощника(ТекстНадписи, ДокументСсылка, ЭтоСопутствующийДокумент);
		КонецЕсли;
		
	КонецЕсли;

	Возврат Новый Структура("ТекстНадписи, Высота", ТекстНадписи, Высота);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьИнфоДокументаОснования(ТекстНадписи, ТаблицаДокументовОснования)

	ТекстНадписи.Добавить(НСтр("ru = 'Создан на период отсутствия'"));
	ТекстНадписи.Добавить(" ");
	
	Если ТаблицаДокументовОснования.Количество() > 0 Тогда
		ДокументОснование = ТаблицаДокументовОснования[0];
	КонецЕсли;
	
	СсылкаСотрудника = ИнфоНавигационнаяСсылка("ОткрытьДокумент", ДокументОснование.Основание);
	Родительный = ЦепочкиДокументов.ФамилияИОПадеж(ДокументОснование.СотрудникОснованияФамилияИО, 2);
	
	ТекстНадписи.Добавить(Новый ФорматированнаяСтрока(Родительный,,,, СсылкаСотрудника));

КонецПроцедуры

Процедура ДобавитьИнфоПодчиненныхДокументов(ТекстНадписи, ТаблицаПодчиненныхДокументов, СтруктураИсходногоДокумента)

	ДокументСсылка = СтруктураИсходногоДокумента.ИсходныйДокумент;
	ФормироватьПараметрыПоСсылке = СтруктураИсходногоДокумента.НайденоИсправление ИЛИ СтруктураИсходногоДокумента.НайденоОснование;
	
	МаксимумСотрудниковНаФорме = 2;
	КоличествоОтображаемыхСотрудников = МаксимумСотрудниковНаФорме - ?(ТаблицаПодчиненныхДокументов.Количество() > МаксимумСотрудниковНаФорме, 1, 0);
	
	МассивСтрок = Новый Массив;
	
	Если СтруктураИсходногоДокумента.НайденоОснование Тогда
		ОписаниеДокумента = ЦепочкиДокументов.ОписаниеДокументовЗамещения(ДокументСсылка);
		ТекстСтроки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'На время %1'"), ОписаниеДокумента.КраткоеНазваниеРодительныйПадеж);
		МассивСтрок.Добавить(ТекстСтроки);
		МассивСтрок.Добавить(" ");
		Если ТаблицаПодчиненныхДокументов.Количество() > 1 Тогда
			ТекстЗамещает = НСтр("ru = 'замещали:'");
		Иначе
			ТекстЗамещает = НСтр("ru = 'замещал'");
		КонецЕсли;
	Иначе
		Если ТаблицаПодчиненныхДокументов.Количество() > 1 Тогда
			ТекстЗамещает = НСтр("ru = 'Замещают:'");
		Иначе
			ТекстЗамещает = НСтр("ru = 'Замещает'");
		КонецЕсли;
	КонецЕсли;
	МассивСтрок.Добавить(ТекстЗамещает);
	МассивСтрок.Добавить(" ");
	
	Всего = 1;
	Для каждого ПодчиненныйДокумент Из ТаблицаПодчиненныхДокументов Цикл
		Если Всего > 1 Тогда
			МассивСтрок.Добавить(", ");
		КонецЕсли;
		МассивСтрок.Добавить(ПодчиненныйДокумент.СотрудникПодчиненногоФамилияИО);
		Если Всего >= КоличествоОтображаемыхСотрудников Тогда
			Прервать;
		КонецЕсли;
		Всего = Всего + 1;
	КонецЦикла; 
	
	Если ТаблицаПодчиненныхДокументов.Количество() > КоличествоОтображаемыхСотрудников Тогда
		МассивСтрок.Добавить(" ");
		Остаток = ТаблицаПодчиненныхДокументов.Количество() - Всего;
		Если Остаток < 5 Тогда
			МассивСтрок.Добавить(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'и еще %1 сотрудника'"), Остаток));
		Иначе
			МассивСтрок.Добавить(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'и еще %1 сотрудников'"), Остаток));
		КонецЕсли;
	КонецЕсли;
	
	ТекстНадписи.Добавить(Новый ФорматированнаяСтрока(МассивСтрок,,,, ИнфоНавигационнаяСсылка("ВызовФормыЗамещения", ДокументСсылка, ФормироватьПараметрыПоСсылке)));

КонецПроцедуры

Процедура ДобавитьКомандуВызоваПомощника(ТекстНадписи, ДокументСсылка, ЭтоСопутствующийДокумент)
	
	ФормироватьПараметрыПоСсылке = ЭтоСопутствующийДокумент;
	
	Если НЕ ЭтоСопутствующийДокумент Тогда
		ТекстЗаголовка = НСтр("ru = 'Ввести замещение на период'") + " " + ЦепочкиДокументов.ОписаниеДокументовЗамещения(ДокументСсылка).КраткоеНазваниеРодительныйПадеж;
		ТекстНадписи.Добавить(Новый ФорматированнаяСтрока(ТекстЗаголовка,,,, ИнфоНавигационнаяСсылка("ВызовФормыЗамещения", ДокументСсылка, ФормироватьПараметрыПоСсылке)));
	КонецЕсли;

КонецПроцедуры

Функция ИсходныйДокументЗамещения(ТекущийОбъект)
	
	ДокументОснование = Ложь;
	
	СтруктураИсправления = ИсходныйДокументИсправления(ТекущийОбъект);
	СтруктураОснования = ИсходныйДокументОснования(ТекущийОбъект, СтруктураИсправления);
	
	ВозвращаемаяСтруктура = Новый Структура;
	ВозвращаемаяСтруктура.Вставить("ИсходныйДокумент", СтруктураОснования.ИсходныйДокумент);
	ВозвращаемаяСтруктура.Вставить("НайденоИсправление", СтруктураИсправления.НайденоИсправление);
	ВозвращаемаяСтруктура.Вставить("НайденоОснование", СтруктураОснования.НайденоОснование);
	
	Возврат ВозвращаемаяСтруктура;
	
КонецФункции

Функция ИсходныйДокументИсправления(ТекущийОбъект)
	
	ИмяРеквизитОснование = "ИсправленныйДокумент";
	ДругойДокумент = Ложь;
	
	ИсходныйДокументСсылка = ТекущийОбъект.Ссылка;
	ИсправленныйДокументСсылка = ТекущийОбъект[ИмяРеквизитОснование];
	
	ТекущийДокументСсылка = ИсправленныйДокументСсылка;
	
	Пока ЗначениеЗаполнено(ТекущийДокументСсылка) Цикл
		ДругойДокумент = Истина;
		ИсходныйДокументСсылка = ТекущийДокументСсылка;
		ТекущийДокументСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсходныйДокументСсылка, ИмяРеквизитОснование);
	КонецЦикла; 
	
	Возврат Новый Структура("ИсходныйДокумент, НайденоИсправление", ИсходныйДокументСсылка, ДругойДокумент);
	
КонецФункции

Функция ИсходныйДокументОснования(ТекущийОбъект, СтруктураИсправления)
	
	ИсходныйДокументСсылка = СтруктураИсправления.ИсходныйДокумент;
	БратьИзТекущегоОбъекта = Не СтруктураИсправления.НайденоИсправление;
	ДругойДокумент = Ложь;
	
	ИмяРеквизитОснование = ЦепочкиДокументов.ОписаниеДокументовЗамещения(ИсходныйДокументСсылка).ИмяРеквизитаДокументОснование;
	Если Не ЗначениеЗаполнено(ИмяРеквизитОснование) Тогда
		Возврат Новый Структура("ИсходныйДокумент, НайденоОснование", ИсходныйДокументСсылка, ДругойДокумент)
	КонецЕсли;
	
	Если БратьИзТекущегоОбъекта Тогда
		ТекущийДокументСсылка = ТекущийОбъект[ИмяРеквизитОснование];
	Иначе
		ТекущийДокументСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсходныйДокументСсылка, ИмяРеквизитОснование);
	КонецЕсли;
	
	Пока ЗначениеЗаполнено(ТекущийДокументСсылка) Цикл
		ДругойДокумент = Истина;
		ИсходныйДокументСсылка = ТекущийДокументСсылка;
		
		ИмяРеквизитОснование = ЦепочкиДокументов.ОписаниеДокументовЗамещения(ИсходныйДокументСсылка).ИмяРеквизитаДокументОснование;
		Если НЕ ЗначениеЗаполнено(ИмяРеквизитОснование) Тогда
			Прервать;
		КонецЕсли;
		
		ТекущийДокументСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсходныйДокументСсылка, ИмяРеквизитОснование);
	КонецЦикла; 
	
	Возврат Новый Структура("ИсходныйДокумент, НайденоОснование", ИсходныйДокументСсылка, ДругойДокумент);
	
КонецФункции

#Область ГенерацияРеквизитовИЭлементовФорм

Процедура СоздатьРеквизитыФормыДляЗамещения(Форма, ДобавлятьРеквизитыПодчиненного = Ложь, ОтложенноеИзменение = Ложь)

	// Создание реквизитов формы.
	МассивРеквизитов = Новый Массив;
	
	// инфо-надпись
	РеквизитЗамещениеИнфоНадпись = Новый РеквизитФормы("ЗамещениеИнфоНадпись", Новый ОписаниеТипов("ФорматированнаяСтрока"));
	РеквизитЗамещениеИнфоНадпись.Заголовок = НСтр("ru = 'Инфо-надпись подсистемы Замещение'");
	МассивРеквизитов.Добавить(РеквизитЗамещениеИнфоНадпись);
	
	Если ДобавлятьРеквизитыПодчиненного Тогда
		РеквизитЗамещениеДокументОснование = Новый РеквизитФормы("ЗамещениеДокументОснование", Метаданные.ОпределяемыеТипы.ЦепочкиДокументовОснования.Тип);
		МассивРеквизитов.Добавить(РеквизитЗамещениеДокументОснование);
	КонецЕсли;
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, МассивРеквизитов, МассивИменРеквизитовФормы,, ОтложенноеИзменение);

КонецПроцедуры

Процедура СоздатьЭлементыФормыДляЗамещения(Форма)

	ПрилуняемаяГруппа = Форма.Элементы.Найти("ГруппаЦепочкиДокументов");
	
	Если ПрилуняемаяГруппа = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Декорация
	Если Форма.Элементы.Найти("ЗамещениеКартинка") = Неопределено Тогда
		Элемент = Форма.Элементы.Добавить("ЗамещениеКартинка", Тип("ДекорацияФормы"), ПрилуняемаяГруппа);
		Элемент.Вид = ВидДекорацииФормы.Картинка;
		Элемент.Картинка = БиблиотекаКартинок.Предупреждение;
		Элемент.Ширина = 2;
		Элемент.Высота = 1;
	КонецЕсли;
	
	Если Форма.Элементы.Найти("ЗамещениеИнфоНадпись") = Неопределено Тогда
		Элемент = Форма.Элементы.Вставить("ЗамещениеИнфоНадпись", Тип("ПолеФормы"), ПрилуняемаяГруппа);
		Элемент.Вид = ВидПоляФормы.ПолеНадписи;
		Элемент.ПутьКДанным = "ЗамещениеИнфоНадпись";
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элемент.УстановитьДействие("ОбработкаНавигационнойСсылки", "Подключаемый_ЗамещениеИнфоНадписьОбработкаНавигационнойСсылки");
	КонецЕсли;	

КонецПроцедуры

Процедура УстановитьРеквизитФормыДокументОснование(Форма)

	ИмяРеквизита = "ЗамещениеДокументОснование";
	
	// Если документ основание есть в параметрах формы - установим его.
	Если Форма.Параметры.Свойство("ДокументОснование") Тогда
		Форма[ИмяРеквизита] = Форма.Параметры.ДокументОснование;
		Возврат;
	КонецЕсли;
	
	Основание = ЦепочкиДокументов.ДокументОснование(Форма.Объект.Ссылка);
	Если Основание <> Неопределено Тогда
		Форма[ИмяРеквизита] = Основание;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти