
#Область СлужебныйПрограммныйИнтерфейс

// Вызывается при изменении элементов отбора на форме физических лиц с похожими данными.
//
// Параметры:
//		Форма - Управляемая форма физических лиц с похожими данными
//		Элемент - Измененный элемент.
//
Процедура ЭлементОтбораПриИзменении(Форма, Элемент, ИмяТаблицы) Экспорт
	
	ОбязательностьЗаполнения = ЗначениеЗаполнено(Форма.ОтборДокументВид) Или ЗначениеЗаполнено(Форма.ОтборДокументСерия)
		Или ЗначениеЗаполнено(Форма.ОтборДокументНомер) Или ЗначениеЗаполнено(Форма.ОтборДокументДатаВыдачи);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтборДокументВид", "АвтоОтметкаНезаполненного", ОбязательностьЗаполнения);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтборДокументВид", "ОтметкаНезаполненного", ОбязательностьЗаполнения И Не ЗначениеЗаполнено(Форма.ОтборДокументВид));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтборДокументСерия", "АвтоОтметкаНезаполненного", ОбязательностьЗаполнения);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтборДокументСерия", "ОтметкаНезаполненного", ОбязательностьЗаполнения И Не ЗначениеЗаполнено(Форма.ОтборДокументСерия));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтборДокументНомер", "АвтоОтметкаНезаполненного", ОбязательностьЗаполнения);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтборДокументНомер", "ОтметкаНезаполненного", ОбязательностьЗаполнения И Не ЗначениеЗаполнено(Форма.ОтборДокументНомер));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтборДокументДатаВыдачи", "АвтоОтметкаНезаполненного", ОбязательностьЗаполнения);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтборДокументДатаВыдачи", "ОтметкаНезаполненного", ОбязательностьЗаполнения И Не ЗначениеЗаполнено(Форма.ОтборДокументДатаВыдачи));
	
	ПараметрыФормы = АрхивФизическихЛицКлиентСервер.ПараметрыФормыСОтборами(Форма, ИмяТаблицы);
	АрхивФизическихЛицВызовСервера.УстановитьОтборДанныхФизическихЛиц(ПараметрыФормы);
	ЗавершениеИзмененияЭлементаОтбора(Форма, ИмяТаблицы, ПараметрыФормы.ОтборУстановлен, ПараметрыФормы.МассивФизическихЛиц);
	
КонецПроцедуры

// Вызывается при начале выбора элементов отбора на форме физических лиц с похожими данными.
//
// Параметры:
//		Форма - Управляемая форма физических лиц с похожими данными
//		Элемент - Изменяемый элемент.
//
Процедура ЭлементОтбораНачалоВыбора(Форма, Элемент, ИмяТаблицы) Экспорт
	
	ИмяЭлемента = СтрЗаменить(Элемент.Имя, "Представление", "");
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица"));
	ПараметрыОткрытия.Вставить("ЗначенияПолей", Форма[ИмяЭлемента]);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	ПараметрыОповещения.Вставить("ИмяЭлемента", ИмяЭлемента);
	ПараметрыОповещения.Вставить("ИмяТаблицы", ИмяТаблицы);
	
	Оповещение = Новый ОписаниеОповещения("ЗавершениеВыбораКИ", ЭтотОбъект, ПараметрыОповещения);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, Форма, Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗавершениеВыбораКИ(РезультатОткрытияФормы, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(РезультатОткрытияФормы) <> Тип("Структура") Тогда
		// не было изменений в данных
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения.Форма[ПараметрыОповещения.ИмяЭлемента] = РезультатОткрытияФормы.КонтактнаяИнформация;
	ПараметрыОповещения.Форма[ПараметрыОповещения.ИмяЭлемента + "Представление"] = РезультатОткрытияФормы.Представление;
	
	ПараметрыФормы = АрхивФизическихЛицКлиентСервер.ПараметрыФормыСОтборами(ПараметрыОповещения.Форма, ПараметрыОповещения.ИмяТаблицы);
	АрхивФизическихЛицВызовСервера.УстановитьОтборДанныхФизическихЛиц(ПараметрыФормы);
	ЗавершениеИзмененияЭлементаОтбора(ПараметрыОповещения.Форма, ПараметрыОповещения.ИмяТаблицы, ПараметрыФормы.ОтборУстановлен, ПараметрыФормы.МассивФизическихЛиц);
	
КонецПроцедуры

Процедура ЗавершениеИзмененияЭлементаОтбора(Форма, ИмяТаблицы, ОтборУстановлен, МассивФизическихЛиц)
	
	ДанныеФизическихЛиц = Форма[ИмяТаблицы];
	
	Если Не ОтборУстановлен Тогда
		// Показываем всех отобранных физических лиц без дополнительного отбора
		Для Каждого СтрокаДанныеФизическихЛиц Из Форма.ДанныеФизическихЛицОсновная Цикл
			МассивФизическихЛиц.Добавить(СтрокаДанныеФизическихЛиц.ФизическоеЛицо);;
		КонецЦикла;
	КонецЕсли;
	
	МассивСтрокДляУдаления = Новый Массив;
	Для каждого СтрокаДанныеФизическихЛиц Из ДанныеФизическихЛиц Цикл
		Если МассивФизическихЛиц.Найти(СтрокаДанныеФизическихЛиц.ФизическоеЛицо) = Неопределено Тогда
			МассивСтрокДляУдаления.Добавить(СтрокаДанныеФизическихЛиц);
			Продолжить;
		КонецЕсли;
		УстановитьЗначенияОтбораВСтроку(Форма, СтрокаДанныеФизическихЛиц, Неопределено);
	КонецЦикла;
	Для Каждого СтрокаДляУдаления Из МассивСтрокДляУдаления Цикл
		ДанныеФизическихЛиц.Удалить(СтрокаДляУдаления);
	КонецЦикла;
	Для Каждого ФизическоеЛицоМассива Из МассивФизическихЛиц Цикл
		СтруктураОтбора = Новый Структура("ФизическоеЛицо", ФизическоеЛицоМассива);
		НайденныеСтроки = ДанныеФизическихЛиц.НайтиСтроки(СтруктураОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НайденныеСтроки = Форма.ДанныеФизическихЛицОсновная.НайтиСтроки(СтруктураОтбора);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НоваяСтрока = ДанныеФизическихЛиц.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
				УстановитьЗначенияОтбораВСтроку(Форма, НоваяСтрока, НайденнаяСтрока);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЗначенияОтбораВСтроку(Форма, СтрокаДанных, СтрокаДанныхОсновнойТаблицы)
	
	Если СтрокаДанныхОсновнойТаблицы = Неопределено Тогда
		СтруктураОтбора = Новый Структура("ФизическоеЛицо", СтрокаДанных.ФизическоеЛицо);
		НайденныеСтроки = Форма.ДанныеФизическихЛицОсновная.НайтиСтроки(СтруктураОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаДанныхОсновнойТаблицы = НайденныеСтроки[0];
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ОтборДатаРождения) И Не ЗначениеЗаполнено(СтрокаДанных.ДатаРождения) Тогда
		СтрокаДанных.ДатаРождения = Форма.ОтборДатаРождения;
		Если СтрокаДанныхОсновнойТаблицы <> Неопределено Тогда
			СтрокаДанныхОсновнойТаблицы.ДатаРождения = Форма.ОтборДатаРождения;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.ОтборИНН) И Не ЗначениеЗаполнено(СтрокаДанных.ИНН) Тогда
		СтрокаДанных.ИНН = Форма.ОтборИНН;
		Если СтрокаДанныхОсновнойТаблицы <> Неопределено Тогда
			СтрокаДанныхОсновнойТаблицы.ИНН = Форма.ОтборИНН;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.ОтборСтраховойНомерПФР) И Не ЗначениеЗаполнено(СтрокаДанных.СтраховойНомерПФР) Тогда
		СтрокаДанных.СтраховойНомерПФР = Форма.ОтборСтраховойНомерПФР;
		Если СтрокаДанныхОсновнойТаблицы <> Неопределено Тогда
			СтрокаДанныхОсновнойТаблицы.СтраховойНомерПФР = Форма.ОтборСтраховойНомерПФР;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ОтборДокументВид) И ЗначениеЗаполнено(Форма.ОтборДокументСерия)
		И ЗначениеЗаполнено(Форма.ОтборДокументНомер) И ЗначениеЗаполнено(Форма.ОтборДокументДатаВыдачи)
		И Не ЗначениеЗаполнено(СтрокаДанных.ДокументПредставление) Тогда
		ПредставлениеДокумента = Строка(Форма.ОтборДокументВид) + ", "
		+ "серия: " + Форма.ОтборДокументСерия + ", "
		+ "№ " + Форма.ОтборДокументНомер + ", "
		+ "выдан: " + Формат(Форма.ОтборДокументДатаВыдачи, "ДЛФ=ДД");
		СтрокаДанных.ДокументПредставление = ПредставлениеДокумента;
		Если СтрокаДанныхОсновнойТаблицы <> Неопределено Тогда
			СтрокаДанныхОсновнойТаблицы.ДокументПредставление = ПредставлениеДокумента;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
