
#Область СлужебныйПрограммныйИнтерфейс

// Заполнение сведений о показателях, используемых при расчете результата предопределенным способом.
//
// Параметры:
//	- ТаблицаПоказателей - таблица значений с колонками
//		СпособРасчета.
//		Показатель
//
Процедура ЗаполнитьПоказателиРасчетаПростоевСотрудников(ТаблицаПоказателей) Экспорт
	
	// Простои сотрудников
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	НоваяСтрока.СпособРасчета = Перечисления.СпособыРасчетаНачислений.ОплатаПростоя;
	НоваяСтрока.Показатель = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.ТарифПростоя");
	
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	НоваяСтрока.СпособРасчета = Перечисления.СпособыРасчетаНачислений.ОплатаПростоя;
	НоваяСтрока.Показатель = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.ДоляНеполногоРабочегоВремени");
	
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	НоваяСтрока.СпособРасчета = Перечисления.СпособыРасчетаНачислений.ОплатаПростоя;
	НоваяСтрока.Показатель = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.ВремяВДняхЧасах");

	НоваяСтрока = ТаблицаПоказателей.Добавить();
	НоваяСтрока.СпособРасчета = Перечисления.СпособыРасчетаНачислений.ОплатаПростоя;
	НоваяСтрока.Показатель = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.НормаДней");

	НоваяСтрока = ТаблицаПоказателей.Добавить();
	НоваяСтрока.СпособРасчета = Перечисления.СпособыРасчетаНачислений.ОплатаПростоя;
	НоваяСтрока.Показатель = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.НормаВремениВДнях");
	
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	НоваяСтрока.СпособРасчета = Перечисления.СпособыРасчетаНачислений.ОплатаПростоя;
	НоваяСтрока.Показатель = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.НормаВремениВЧасах");
	
КонецПроцедуры

// Метод выполняет расчет записей с предопределенным способом расчета ОплатаПростоя.
//
Процедура РассчитатьОплатуПростоя(СпособРасчета, СтрокиРасчета, МенеджерВременныхТаблиц) Экспорт
	
	Если СпособРасчета <> Перечисления.СпособыРасчетаНачислений.ОплатаПростоя Тогда
		Возврат;
	КонецЕсли;	
	
	ИдентификаторыСтрок = Новый Массив;
	СтрокиПоИдентификатору = Новый Соответствие;
	Для Каждого СтрокаТаблицы Из СтрокиРасчета Цикл		
		ИдентификаторыСтрок.Добавить(СтрокаТаблицы.ИдентификаторСтроки);
		СтрокиПоИдентификатору.Вставить(СтрокаТаблицы.ИдентификаторСтроки, СтрокаТаблицы);
	КонецЦикла;	
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИдентификаторыСтрок", ИдентификаторыСтрок);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Начисления.Сотрудник,
		|	Начисления.ПериодДействияНачало КАК Период
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТРегистрРасчета_Начисления КАК Начисления
		|ГДЕ
		|	Начисления.ИдентификаторСтроки В(&ИдентификаторыСтрок)";
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТСотрудники");
	
	ОписаниеВТ = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписаниеВТ, Истина, "ОсновноеНачисление,ПоказательТарифнойСтавки");
	УдалитьВТ.Добавить("ВТКадровыеДанныеСотрудников");

	Запрос.УстановитьПараметр("ДоляНеполногоРабочегоВремени", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.ДоляНеполногоРабочегоВремени"));
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.ИдентификаторСтроки,
		|	Начисления.ПериодДействияНачало КАК Период,
		|	Начисления.Сотрудник,
		|	КадровыеДанные.ПоказательТарифнойСтавки,
		|	ВидыРасчета.УчетВремениВЧасах,
		|	ВЫБОР
		|		КОГДА ИСТИНА В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА
		|				ИЗ
		|					ПланВидовРасчета.Начисления.Показатели КАК ПоказателиРасчета
		|				ГДЕ
		|					ПоказателиРасчета.Ссылка = КадровыеДанные.ОсновноеНачисление
		|					И ПоказателиРасчета.Показатель = &ДоляНеполногоРабочегоВремени)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьПоказательДоляНеполногоРабочегоВремени
		|ИЗ
		|	ВТРегистрРасчета_Начисления КАК Начисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК ВидыРасчета
		|			ПО КадровыеДанные.ОсновноеНачисление = ВидыРасчета.Ссылка
		|		ПО (Начисления.ИдентификаторСтроки В (&ИдентификаторыСтрок))
		|			И Начисления.Сотрудник = КадровыеДанные.Сотрудник
		|			И Начисления.ПериодДействияНачало = КадровыеДанные.Период";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = СтрокиПоИдентификатору[Выборка.ИдентификаторСтроки];
		Если Не ЗначениеЗаполнено(Выборка.ПоказательТарифнойСтавки) Тогда 
			Продолжить;
		КонецЕсли;
		ОписаниеСтавки = ЗарплатаКадрыРасширенный.СведенияОПоказателеРасчетаЗарплаты(Выборка.ПоказательТарифнойСтавки);
		ТарифПростоя = РасчетЗарплатыРасширенный.ЗначениеПоказателяПоИдентификатору(СтрокаТаблицы.Показатели, "ТарифПростоя");
		ВремяВДняхЧасах = РасчетЗарплатыРасширенный.ЗначениеПоказателяПоИдентификатору(СтрокаТаблицы.Показатели, "ВремяВДняхЧасах");
		Если ОписаниеСтавки.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.МесячнаяТарифнаяСтавка Тогда
			ДоляНеполногоВремени = ДоляНеполногоВремени(Выборка, СтрокаТаблицы); 
			НормаВремени = НормаВремени(Выборка, СтрокаТаблицы);
			СтрокаТаблицы.Результат = ТарифПростоя * ДоляНеполногоВремени * ВремяВДняхЧасах / НормаВремени;
		ИначеЕсли ОписаниеСтавки.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.ДневнаяТарифнаяСтавка Тогда
			СтрокаТаблицы.Результат = ТарифПростоя * ВремяВДняхЧасах;
		ИначеЕсли ОписаниеСтавки.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.ЧасоваяТарифнаяСтавка Тогда
			СтрокаТаблицы.Результат = ТарифПростоя * ВремяВДняхЧасах;
		КонецЕсли;
	КонецЦикла;		
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
			
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоказателяТарифПростоя(МенеджерВременныхТаблиц, ЗначенияПоказателей, ВыявленныеПоказатели) Экспорт
	
	ТарифПростоя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.ТарифПростоя");
	Если ТарифПростоя = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТарифПростоя", ТарифПростоя);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеПоказатели.Сотрудник,
		|	ДополнительныеПоказатели.ДатаНачала КАК Период
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТДополнительныеПоказатели КАК ДополнительныеПоказатели
		|ГДЕ
		|	ДополнительныеПоказатели.Показатель = &ТарифПростоя";
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТСотрудники");
	
	Если Не ЗарплатаКадры.ВТСодержитСтроки(МенеджерВременныхТаблиц, "ВТСотрудники") Тогда
		ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
		Возврат;
	КонецЕсли;
	
	ОписательВТКадровыеДанные = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВТКадровыеДанные, Истина, "ПоказательТарифнойСтавки,ТарифнаяСтавка");
	УдалитьВТ.Добавить("ВТКадровыеДанныеСотрудников");
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеПоказатели.ИдентификаторСтроки,
		|	КадровыеДанные.Период,
		|	КадровыеДанные.ПоказательТарифнойСтавки,
		|	КадровыеДанные.ТарифнаяСтавка
		|ИЗ
		|	ВТДополнительныеПоказатели КАК ДополнительныеПоказатели
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|		ПО (КадровыеДанные.Сотрудник = ДополнительныеПоказатели.Сотрудник)
		|			И (КадровыеДанные.Период = ДополнительныеПоказатели.ДатаНачала)
		|			И (ДополнительныеПоказатели.Показатель = &ТарифПростоя)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПоказателиТарифнойСтавки = Новый Массив;
	Пока Выборка.Следующий() Цикл
		ПоказателиТарифнойСтавки.Добавить(Выборка.ПоказательТарифнойСтавки);	
	КонецЦикла;
	
	ТочностьТарифаПростоя = ЗарплатаКадрыРасширенный.СведенияОПоказателеРасчетаЗарплаты(ТарифПростоя).Точность;
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.ПоказательТарифнойСтавки) Тогда 
			Продолжить;
		КонецЕсли;
		ОписаниеСтавки = ЗарплатаКадрыРасширенный.СведенияОПоказателеРасчетаЗарплаты(Выборка.ПоказательТарифнойСтавки);
		Значение = Неопределено;
		Если ОписаниеСтавки.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.МесячнаяТарифнаяСтавка Тогда
			Значение = Выборка.ТарифнаяСтавка * (2/3);
		ИначеЕсли ОписаниеСтавки.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.ЧасоваяТарифнаяСтавка Тогда
			Значение = Выборка.ТарифнаяСтавка * (2/3);
		ИначеЕсли ОписаниеСтавки.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.ДневнаяТарифнаяСтавка Тогда
			Значение = Выборка.ТарифнаяСтавка * (2/3);
		КонецЕсли;
		Если Значение <> Неопределено Тогда
			НоваяСтрока = ЗначенияПоказателей.Добавить();
			НоваяСтрока.ИдентификаторСтроки = Выборка.ИдентификаторСтроки;
			НоваяСтрока.Показатель = ТарифПростоя;
			НоваяСтрока.Значение = Окр(Значение, ТочностьТарифаПростоя);
		КонецЕсли;
	КонецЦикла;		
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НормаВремени(Выборка, СтрокаТаблицы)
	
	Если ЭтоОплатаПростояПоЧасам(СтрокаТаблицы) Тогда
		Возврат РасчетЗарплатыРасширенный.ЗначениеПоказателяПоИдентификатору(СтрокаТаблицы.Показатели, "НормаЧасов");
	КонецЕсли;
	
	Если Выборка.ЕстьПоказательДоляНеполногоРабочегоВремени Тогда
		Возврат РасчетЗарплатыРасширенный.ЗначениеПоказателяПоИдентификатору(СтрокаТаблицы.Показатели, "НормаДней");
	КонецЕсли;
	
	Возврат РасчетЗарплатыРасширенный.ЗначениеПоказателяПоИдентификатору(СтрокаТаблицы.Показатели, "НормаДнейПоГрафикуПолногоРабочегоВремени");
	
КонецФункции 

Функция ДоляНеполногоВремени(Выборка, СтрокаТаблицы)
	
	ДоляНеполногоВремени = 1;
	
	Если Не ЭтоОплатаПростояПоЧасам(СтрокаТаблицы) И Выборка.ЕстьПоказательДоляНеполногоРабочегоВремени Тогда
		ДоляНеполногоВремени = РасчетЗарплатыРасширенный.ЗначениеПоказателяПоИдентификатору(СтрокаТаблицы.Показатели, "ДоляНеполногоРабочегоВремени");
	КонецЕсли;
	
	Возврат ДоляНеполногоВремени;	
	
КонецФункции 

Функция ЭтоОплатаПростояПоЧасам(ЗаписьРасчета)
	
	Возврат ЗаписьРасчета.ВремяВЧасах;
	
КонецФункции

#КонецОбласти
