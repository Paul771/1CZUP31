
#Область СлужебныйПрограммныйИнтерфейс

// Дополняет коллекцию ДанныеФизическихЛиц данными из архива по физическим лицам
//
// Параметры:
//		Форма - Управляемая форма, где находится коллекция с физическими лицами
//		ИмяТаблицы - Строка - Имя таблицы с коллекцией, которая содержит данные по физическим лицам.
//
Процедура ДанныеФизическихЛицПриЗаполненииНаСервере(Форма, ПараметрыЭлементов) Экспорт
	
	ИмяГруппы			= ПараметрыЭлементов.ИмяГруппы;
	ИмяТаблицы			= ПараметрыЭлементов.ИмяТаблицы;
	ИмяГруппыСотрудника	= ПараметрыЭлементов.ИмяГруппыСотрудника;
	ИмяГруппыКандидата	= ПараметрыЭлементов.ИмяГруппыКандидата;
	ДанныеФизическихЛиц	= Форма[ИмяТаблицы];
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	МассивФизическихЛиц = ДанныеФизическихЛиц.Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТДанныеФизическихЛиц
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&МассивФизическихЛиц)";
	
	Запрос.Выполнить();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.АнализТекучестиПерсонала") Тогда
		
		МодульАнализТекучестиПерсонала = ОбщегоНазначения.ОбщийМодуль("АнализТекучестиПерсонала");
		ПоляСвязиТаблиц = Новый Структура("ФизическоеЛицо", "ФизическоеЛицо");
		ОписательВременныхТаблиц = МодульАнализТекучестиПерсонала.ОписательВременныхТаблицДляСоздатьВТПричиныУвольнений(
			Запрос.МенеджерВременныхТаблиц, "ВТДанныеФизическихЛиц", ПоляСвязиТаблиц);
		МодульАнализТекучестиПерсонала.СоздатьВТПричиныУвольнений(ОписательВременныхТаблиц, Истина);
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	NULL КАК Сотрудник,
		|	NULL КАК ФизическоеЛицо,
		|	NULL КАК ПричинаHR,
		|	NULL КАК ПричинаРуководитель,
		|	NULL КАК ДатаРегистрации,
		|	NULL КАК Комментарий,
		|	NULL КАК Позиция
		|ПОМЕСТИТЬ ВТПричиныУвольнений";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ПодборПерсонала") Тогда
		ОписательВременныхТаблиц = ПодборПерсонала.ОписательВременныхТаблицДляСоздатьВТПричиныОтклонений(
			Запрос.МенеджерВременныхТаблиц, "ВТДанныеФизическихЛиц", ПоляСвязиТаблиц);
		ПодборПерсонала.СоздатьВТПричиныОтклонений(ОписательВременныхТаблиц, Истина);
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	NULL КАК Кандидат,
		|	NULL КАК ФизическоеЛицо,
		|	NULL КАК ПричинаОтклонения,
		|	NULL КАК ДатаРешения,
		|	NULL КАК КомментарийРешения,
		|	NULL КАК Вакансия
		|ПОМЕСТИТЬ ВТПричиныОтклонений";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПричиныОтклонений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НЕОПРЕДЕЛЕНО КАК ПричинаHR,
	|	НЕОПРЕДЕЛЕНО КАК ПричинаРуководитель,
	|	ПричиныОтклонений.ПричинаОтклонения КАК ПричинаОтклонения,
	|	ПричиныОтклонений.КомментарийРешения КАК Комментарий,
	|	ПричиныОтклонений.ДатаРешения КАК ДатаРегистрации,
	|	ПричиныОтклонений.Кандидат КАК Объект,
	|	ПричиныОтклонений.Вакансия КАК Вакансия,
	|	NULL КАК Позиция
	|ПОМЕСТИТЬ ВТПричины
	|ИЗ
	|	ВТПричиныОтклонений КАК ПричиныОтклонений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПричиныУвольнений.ФизическоеЛицо,
	|	ПричиныУвольнений.ПричинаHR,
	|	ПричиныУвольнений.ПричинаРуководитель,
	|	НЕОПРЕДЕЛЕНО,
	|	ПричиныУвольнений.Комментарий,
	|	ПричиныУвольнений.ДатаРегистрации,
	|	ПричиныУвольнений.Сотрудник,
	|	NULL,
	|	ПричиныУвольнений.Позиция
	|ИЗ
	|	ВТПричиныУвольнений КАК ПричиныУвольнений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Причины.ФизическоеЛицо КАК ФизическоеЛицо,
	|	МАКСИМУМ(Причины.ДатаРегистрации) КАК ДатаРегистрации
	|ПОМЕСТИТЬ ВТМаксимальныеДатыРешения
	|ИЗ
	|	ВТПричины КАК Причины
	|
	|СГРУППИРОВАТЬ ПО
	|	Причины.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Причины.ПричинаHR КАК ПричинаHR,
	|	Причины.ПричинаРуководитель КАК ПричинаРуководитель,
	|	Причины.ПричинаОтклонения КАК ПричинаОтклонения,
	|	Причины.Комментарий КАК Комментарий,
	|	Причины.ДатаРегистрации КАК ДатаРегистрации,
	|	Причины.Объект КАК Объект,
	|	Причины.Вакансия КАК Вакансия,
	|	Причины.Позиция КАК Позиция
	|ИЗ
	|	ВТДанныеФизическихЛиц КАК ДанныеФизическихЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМаксимальныеДатыРешения КАК МаксимальныеДатыРешения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПричины КАК Причины
	|			ПО МаксимальныеДатыРешения.ФизическоеЛицо = Причины.ФизическоеЛицо
	|				И МаксимальныеДатыРешения.ДатаРегистрации = Причины.ДатаРегистрации
	|		ПО ДанныеФизическихЛиц.ФизическоеЛицо = МаксимальныеДатыРешения.ФизическоеЛицо
	|ГДЕ
	|	ИСТИНА";
	
	ДокументыФизическихЛиц = КадровыйУчет.ДокументыФизическихЛиц(МассивФизическихЛиц, Истина);
	
	МассивТиповКонтактнойИнформации = Новый Массив;
	МассивТиповКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.Телефон);
	МассивТиповКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	МассивТиповКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.Факс);
	КонтактнаяИнформацияФизическихЛиц = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивФизическихЛиц, МассивТиповКонтактнойИнформации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураОтбора = Новый Структура("ФизическоеЛицо", Выборка.ФизическоеЛицо);
		СтруктураОтбораКИ = Новый Структура("Объект", Выборка.ФизическоеЛицо);
		НайденныеСтроки = ДанныеФизическихЛиц.НайтиСтроки(СтруктураОтбора);
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока, Выборка);
			ПояснениеКОбъекту = ПояснениеКОбъекту(Выборка.Объект, Выборка.ДатаРегистрации, НайденнаяСтрока.Фамилия, НайденнаяСтрока.Имя, НайденнаяСтрока.Отчество);
			НайденнаяСтрока.ПояснениеКОбъекту = ПояснениеКОбъекту.Пояснение;
			НайденнаяСтрока.ОписаниеОбъекта = ПояснениеКОбъекту.Описание;
			
			НоваяСтрокаДанныеФизическихЛицОсновная = Форма.ДанныеФизическихЛицОсновная.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДанныеФизическихЛицОсновная, НайденнаяСтрока);
			НоваяСтрокаДанныеФизическихЛицОсновная.ХешСуммаФамилия = ПолучитьХешСумму(НайденнаяСтрока.Фамилия);
			НоваяСтрокаДанныеФизическихЛицОсновная.ХешСуммаИмя = ПолучитьХешСумму(НайденнаяСтрока.Имя);
			НоваяСтрокаДанныеФизическихЛицОсновная.ХешСуммаОтчество = ПолучитьХешСумму(НайденнаяСтрока.Отчество);
			НоваяСтрокаДанныеФизическихЛицОсновная.ХешСуммаИНН = ПолучитьХешСумму(НайденнаяСтрока.ИНН);
			НоваяСтрокаДанныеФизическихЛицОсновная.ХешСуммаСНИЛС = ПолучитьХешСумму(НайденнаяСтрока.СтраховойНомерПФР);
			НоваяСтрокаДанныеФизическихЛицОсновная.ХешСуммаДатаРождения = ПолучитьХешСумму(НайденнаяСтрока.ДатаРождения);
			
			// Документы
			НайденныеСтрокиДокументов = ДокументыФизическихЛиц.НайтиСтроки(СтруктураОтбора);
			Для каждого НайденнаяСтрокаДокумента Из НайденныеСтрокиДокументов Цикл
				НоваяСтрокаДокумента = Форма.ДанныеФизическихЛицДокументыУдостоверяющиеЛичность.Добавить();
				НоваяСтрокаДокумента.ФизическоеЛицо = Выборка.ФизическоеЛицо;
				НоваяСтрокаДокумента.ВидДокумента = НайденнаяСтрокаДокумента.ВидДокумента;
				НоваяСтрокаДокумента.ХешСуммаПредставлениеДокумента = ПолучитьХешСуммуДокумента(НайденнаяСтрокаДокумента.Серия, НайденнаяСтрокаДокумента.Номер, НайденнаяСтрокаДокумента.ДатаВыдачи);
			КонецЦикла;
			
			// Контактная информация
			НайденныеСтрокиКИ = КонтактнаяИнформацияФизическихЛиц.НайтиСтроки(СтруктураОтбораКИ);
			Для каждого НайденнаяСтрокаКИ Из НайденныеСтрокиКИ Цикл
				НоваяСтрокаКИ = Форма.ДанныеФизическихЛицКонтактнаяИнформация.Добавить();
				НоваяСтрокаКИ.ФизическоеЛицо = Выборка.ФизическоеЛицо;
				НоваяСтрокаКИ.ВидКонтактнойИнформации = НайденнаяСтрокаКИ.Вид;
				НоваяСтрокаКИ.ХешСуммаПредставлениеКонтактнойИнформации = ПолучитьХешСумму(НайденнаяСтрокаКИ.Представление);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Элементы = Форма.Элементы;
	Если Форма.ДанныеФизическихЛицОсновная.Количество() = 1 Тогда
		
		ДанныеФизическогоЛица = Форма.ДанныеФизическихЛицОсновная[0];
		Форма.ФизическоеЛицоСсылка = ДанныеФизическогоЛица.ФизическоеЛицо;
		
		ОбъектЗаполнен = ЗначениеЗаполнено(ДанныеФизическогоЛица.Объект);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяГруппы, "Видимость", ОбъектЗаполнен);
		
		Если ОбъектЗаполнен Тогда
			
			Если ЗначениеЗаполнено(ДанныеФизическогоЛица.Объект) Тогда
				Если ТипЗнч(ДанныеФизическогоЛица.Объект) = Тип("СправочникСсылка.Сотрудники") Тогда
					ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
						Элементы, "ДанныеФизическихЛицПричинаHR", "Видимость", Истина);
					ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
						Элементы, "ДанныеФизическихЛицПричинаРуководитель", "Видимость", Истина);
					ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
						Элементы, "ПозицияСотрудника", "Видимость", Истина);
				Иначе
					ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
						Элементы, "ПричинаОтклонения", "Видимость", Истина);
					ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
						Элементы, "ВакансияКандидата", "Видимость", Истина);
				КонецЕсли;
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияПояснениеКОбъекту", "Заголовок", 
					Новый ФорматированнаяСтрока(ДанныеФизическогоЛица.ПояснениеКОбъекту,,,, ПолучитьНавигационнуюСсылку(ДанныеФизическогоЛица.Объект)));
				
				Если ЗначениеЗаполнено(ДанныеФизическогоЛица.ОписаниеОбъекта) Тогда
					ЭлементФормы = Элементы.Найти("ДекорацияПояснениеКОбъекту");
					Если ЭлементФормы <> Неопределено Тогда
						ЭлементФормы.РасширеннаяПодсказка.Заголовок = ДанныеФизическогоЛица.ОписаниеОбъекта;
						ЭлементФормы.РасширеннаяПодсказка.АвтоМаксимальнаяШирина = Ложь;
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
						Элементы, "ДекорацияПояснениеКОбъекту", "ОтображениеПодсказки", ОтображениеПодсказки.ОтображатьСверху);
				Иначе
					ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
						Элементы, "ДекорацияПояснениеКОбъекту", "ОтображениеПодсказки", ОтображениеПодсказки.Нет);
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			
			ПараметрыЗапроса = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
			ПараметрыЗапроса.СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеФизическогоЛица.ФизическоеЛицо);;
			ПараметрыЗапроса.РаботникиПоДоговорамГПХ = Истина;
			ПараметрыЗапроса.ПодработкиРаботниковПоТрудовымДоговорам = Истина;
			УстановитьПривилегированныйРежим(Истина);
			СотрудникиОрганизации = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыЗапроса);
			УстановитьПривилегированныйРежим(Ложь);
			
			Если СотрудникиОрганизации.Количество() > 0 Тогда
				СотрудникиФормы.ЗаполнитьФормуМестамиРаботы(Форма, ИмяГруппыСотрудника);
				АрхивФизическихЛицФормы.УстановитьПараметрыИнфоНадписиФормыСотрудника(Форма);
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяГруппыСотрудника, "Видимость", Истина);
			Иначе
				ПодборПерсонала.ЗаполнитьФормуКандидатом(Форма, ИмяГруппыКандидата, ДанныеФизическогоЛица.ФизическоеЛицо, Неопределено);
				АрхивФизическихЛицФормы.УстановитьПараметрыИнфоНадписиФормыКандидата(Форма);
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяГруппыКандидата, "Видимость", Истина);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьОтборДанныхФизическихЛиц(ПараметрыФормы) Экспорт
	
	МассивФизическихЛиц = Новый Массив;
	ОтборУстановлен = Ложь;
	
	// Отбор по основным полям
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(ПараметрыФормы.ОтборДатаРождения) Тогда
		СтруктураОтбора.Вставить("ХешСуммаДатаРождения", ПолучитьХешСумму(ПараметрыФормы.ОтборДатаРождения));
		ОтборУстановлен = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыФормы.ОтборСтраховойНомерПФР) Тогда
		СтруктураОтбора.Вставить("ХешСуммаСНИЛС", ПолучитьХешСумму(ПараметрыФормы.ОтборСтраховойНомерПФР));
		ОтборУстановлен = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыФормы.ОтборИНН) Тогда
		СтруктураОтбора.Вставить("ХешСуммаИНН", ПолучитьХешСумму(ПараметрыФормы.ОтборИНН));
		ОтборУстановлен = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураОтбора) Тогда
		НайденныеСтроки = ПараметрыФормы.ДанныеФизическихЛицОсновная.НайтиСтроки(СтруктураОтбора);
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если МассивФизическихЛиц.Найти(НайденнаяСтрока.ФизическоеЛицо) = Неопределено Тогда
				МассивФизическихЛиц.Добавить(НайденнаяСтрока.ФизическоеЛицо);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Отбор по документу
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(ПараметрыФормы.ОтборДокументВид) И ЗначениеЗаполнено(ПараметрыФормы.ОтборДокументНомер)
		И ЗначениеЗаполнено(ПараметрыФормы.ОтборДокументСерия) И ЗначениеЗаполнено(ПараметрыФормы.ОтборДокументДатаВыдачи) Тогда
		СтруктураОтбора.Вставить("ВидДокумента", ПараметрыФормы.ОтборДокументВид);
		СтруктураОтбора.Вставить("ХешСуммаПредставлениеДокумента", ПолучитьХешСуммуДокумента(ПараметрыФормы.ОтборДокументСерия, ПараметрыФормы.ОтборДокументНомер, ПараметрыФормы.ОтборДокументДатаВыдачи));
		ОтборУстановлен = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураОтбора) Тогда
		НайденныеСтроки = ПараметрыФормы.ДанныеФизическихЛицДокументыУдостоверяющиеЛичность.НайтиСтроки(СтруктураОтбора);
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если МассивФизическихЛиц.Найти(НайденнаяСтрока.ФизическоеЛицо) = Неопределено Тогда
				МассивФизическихЛиц.Добавить(НайденнаяСтрока.ФизическоеЛицо);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Отбор по Email
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(ПараметрыФормы.ОтборEmailПредставление) Тогда
		СтруктураОтбора.Вставить("ХешСуммаПредставлениеКонтактнойИнформации", ПолучитьХешСумму(ПараметрыФормы.ОтборEmailПредставление));
		ОтборУстановлен = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураОтбора) Тогда
		НайденныеСтроки = ПараметрыФормы.ДанныеФизическихЛицКонтактнаяИнформация.НайтиСтроки(СтруктураОтбора);
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если МассивФизическихЛиц.Найти(НайденнаяСтрока.ФизическоеЛицо) = Неопределено Тогда
				МассивФизическихЛиц.Добавить(НайденнаяСтрока.ФизическоеЛицо);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Отбор по телефону
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(ПараметрыФормы.ОтборТелефонПредставление) Тогда
		СтруктураОтбора.Вставить("ХешСуммаПредставлениеКонтактнойИнформации", ПолучитьХешСумму(ПараметрыФормы.ОтборТелефонПредставление));
		ОтборУстановлен = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураОтбора) Тогда
		НайденныеСтроки = ПараметрыФормы.ДанныеФизическихЛицКонтактнаяИнформация.НайтиСтроки(СтруктураОтбора);
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если МассивФизическихЛиц.Найти(НайденнаяСтрока.ФизическоеЛицо) = Неопределено Тогда
				МассивФизическихЛиц.Добавить(НайденнаяСтрока.ФизическоеЛицо);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ОтборУстановлен", ОтборУстановлен);
	ПараметрыФормы.Вставить("МассивФизическихЛиц", МассивФизическихЛиц);
	
КонецПроцедуры

Функция ПояснениеКОбъекту(Объект, ДатаРегистрации, Фамилия, Имя, Отчество)
	
	ФИО = Новый Структура("Фамилия, Имя, Отчество", Фамилия, Имя, Отчество);
	
	ПояснениеКОбъекту = Новый Структура("Пояснение, Описание", "", "");
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Сотрудники") Тогда
		ПояснениеКОбъекту.Пояснение = НСтр("ru='Сотрудник был уволен'") + " " + Формат(ДатаРегистрации, "ДЛФ=Д");
		ПояснениеКОбъекту.Описание = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(ФИО)
			+ " " + НСтр("ru='являлся нашим сотрудником.
			|Для перехода к полной информации о сотруднике используйте соответствующую ссылку.'") + "
			|";
	Иначе
		ПояснениеКОбъекту.Пояснение = НСтр("ru='Кандидат был отклонен'") + " " + Формат(ДатаРегистрации, "ДЛФ=Д");
		ПояснениеКОбъекту.Описание = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(ФИО)
			+ " " + НСтр("ru='зарегистрирован в системе как кандидат.
			|Для перехода к полной информации о кандидате используйте соответствующую ссылку.'") + "
			|";
	КонецЕсли;
	
	Возврат ПояснениеКОбъекту;
	
КонецФункции

Функция ПолучитьХешСуммуДокумента(Серия, Номер, ДатаВыдачи)
	Возврат ПолучитьХешСумму(Серия + Номер + Строка(ДатаВыдачи));
КонецФункции

Функция ПолучитьХешСумму(Значение)
	
	СтрокаЗначения = ВРег(Строка(Значение));
	
	НедопустимыеСимволы = ":;!@#$%^&-~`'.,?{}[]+=*/|\ ()_""";
	Результат = "";
	Для Индекс = 1 По СтрДлина(СтрокаЗначения) Цикл
		Символ =  Сред(СтрокаЗначения, Индекс, 1);
		Если СтрНайти(НедопустимыеСимволы, Символ) > 0 Тогда
			Продолжить;
		Иначе
			Результат = Результат + Символ;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(Результат) Тогда
		Возврат "";
	КонецЕсли;
	
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA256);
	ХешированиеДанных.Добавить(Результат);
	ХешСумма = СтрЗаменить(ХешированиеДанных.ХешСумма, " ", "");
	
	Возврат ХешСумма;
	
КонецФункции

#КонецОбласти
