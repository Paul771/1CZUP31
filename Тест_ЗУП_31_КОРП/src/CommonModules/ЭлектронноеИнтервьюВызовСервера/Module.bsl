
#Область ПрограммныйИнтерфейс

// Создает и записывает анкету кандидата и возвращает ссылку на нее.
//
// Параметры:
//   ПараметрыФормы - Структура - структура с параметром ЗначенияЗаполнения - структурой для заполнения новой анкеты.
//   Кандидат - СправочникСсылка.Кандидаты - кандидат, для которого создается анкета.
//   ЭтапРаботы - СправочникСсылка.ЭтапыРаботыСКандидатами - этап работы, для которого создается анкета.
//   ОтвеченныеВопросы - Массив - массив ранее полученных ответов, использующихся для заполнения ответов в новой анкете.
//
// ВозвращаемоеЗначение:
//   ДокументСсылка.Анкета - ссылка на созданную анкету.
//
Функция АнкетаКандидата(ПараметрыФормы, Кандидат, ЭтапРаботы, ОтвеченныеВопросы) Экспорт
	
	Анкета = Документы.Анкета.СоздатьДокумент();
	Анкета.Дата = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(Анкета, ПараметрыФормы.ЗначенияЗаполнения);
	Если ОтвеченныеВопросы <> Неопределено Тогда
		Для Каждого Ответ Из ОтвеченныеВопросы Цикл
			НоваяСтрока = Анкета.Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Ответ);
		КонецЦикла;
	КонецЕсли;
	Анкета.Записать();
	
	ЗаписьАнкетыКандидата = РегистрыСведений.АнкетыКандидатов.СоздатьМенеджерЗаписи();
	ЗаписьАнкетыКандидата.Вакансия = Кандидат.Вакансия;
	ЗаписьАнкетыКандидата.ЭтапРаботыСКандидатом = ЭтапРаботы;
	ЗаписьАнкетыКандидата.Кандидат = Кандидат;
	ЗаписьАнкетыКандидата.Анкета = Анкета.Ссылка;
	ЗаписьАнкетыКандидата.ФизическоеЛицо = Кандидат.ФизическоеЛицо;
	ЗаписьАнкетыКандидата.Записать();
	
	Возврат Анкета.Ссылка;
	
КонецФункции

// Возвращает ранее полученные ответы на вопросы шаблона анкеты.
//
// Параметры:
//   Респондент - СправочникСсылка.ФизическиеЛица - физлицо, для которого ищутся ранее полученные ответы.
//   ШаблонАнкеты - СправочникСсылка.ШаблоныАнкет - шаблон анкеты, на вопросы которого ищутся ранее полученные ответы.
//
// ВозвращаемоеЗначение:
//   Массив - массив структур ранее полученных ответов.
//
Функция ОтвеченныеВопросы(Респондент, ШаблонАнкеты) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты,
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования,
		|	NULL КАК ЭлементарныйВопрос
		|ПОМЕСТИТЬ ВТВопросы
		|ИЗ
		|	РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|ГДЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты.Владелец = &ШаблонАнкеты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВопросыШаблонаАнкеты.Ссылка,
		|	NULL,
		|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос
		|ИЗ
		|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|		ПО (ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты = ВопросыШаблонаАнкеты.Ссылка)
		|ГДЕ
		|	ВопросыШаблонаАнкеты.Владелец = &ШаблонАнкеты
		|	И ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтветыНаВопросыАнкет.Ответ,
		|	ОтветыНаВопросыАнкет.Анкета,
		|	ОтветыНаВопросыАнкет.Вопрос,
		|	ОтветыНаВопросыАнкет.ЭлементарныйВопрос,
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования,
		|	ОтветыНаВопросыАнкет.ОткрытыйОтвет,
		|	ОтветыНаВопросыАнкет.НомерЯчейки
		|ПОМЕСТИТЬ ВТСтарыеОтветы
		|ИЗ
		|	РегистрСведений.ОтветыНаВопросыАнкет КАК ОтветыНаВопросыАнкет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|		ПО ОтветыНаВопросыАнкет.Вопрос = ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты
		|ГДЕ
		|	ОтветыНаВопросыАнкет.Анкета.Респондент = &Респондент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вопросы.ВопросШаблонаАнкеты,
		|	СтарыеОтветы.Вопрос КАК СтарыйВопрос,
		|	СтарыеОтветы.ЭлементарныйВопрос,
		|	СтарыеОтветы.Ответ,
		|	СтарыеОтветы.Анкета.Дата КАК Дата,
		|	ВЫРАЗИТЬ(СтарыеОтветы.ОткрытыйОтвет КАК СТРОКА(500)) КАК ОткрытыйОтвет,
		|	СтарыеОтветы.НомерЯчейки,
		|	СтарыеОтветы.Анкета
		|ПОМЕСТИТЬ ВТОтветы
		|ИЗ
		|	ВТВопросы КАК Вопросы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтарыеОтветы КАК СтарыеОтветы
		|		ПО (Вопросы.ВопросДляСобеседования = СтарыеОтветы.ВопросДляСобеседования
		|				ИЛИ Вопросы.ВопросДляСобеседования ЕСТЬ NULL 
		|					И СтарыеОтветы.ВопросДляСобеседования ЕСТЬ NULL 
		|					И Вопросы.ЭлементарныйВопрос = СтарыеОтветы.ЭлементарныйВопрос)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.ВопросШаблонаАнкеты,
		|	ВложенныйЗапрос.ЭлементарныйВопрос,
		|	МАКСИМУМ(Ответы.Анкета) КАК Анкета
		|ПОМЕСТИТЬ ВТПоследниеОтветы
		|ИЗ
		|	(ВЫБРАТЬ
		|		Ответы.ВопросШаблонаАнкеты КАК ВопросШаблонаАнкеты,
		|		Ответы.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|		МАКСИМУМ(Ответы.Дата) КАК ПоследняяДата
		|	ИЗ
		|		ВТОтветы КАК Ответы
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Ответы.ВопросШаблонаАнкеты,
		|		Ответы.ЭлементарныйВопрос) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветы КАК Ответы
		|		ПО ВложенныйЗапрос.ВопросШаблонаАнкеты = Ответы.ВопросШаблонаАнкеты
		|			И ВложенныйЗапрос.ЭлементарныйВопрос = Ответы.ЭлементарныйВопрос
		|			И ВложенныйЗапрос.ПоследняяДата = Ответы.Дата
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ВопросШаблонаАнкеты,
		|	ВложенныйЗапрос.ЭлементарныйВопрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоследниеОтветы.ВопросШаблонаАнкеты,
		|	ПоследниеОтветы.ЭлементарныйВопрос,
		|	Ответы.Ответ,
		|	Ответы.ОткрытыйОтвет,
		|	Ответы.НомерЯчейки
		|ИЗ
		|	ВТПоследниеОтветы КАК ПоследниеОтветы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветы КАК Ответы
		|		ПО ПоследниеОтветы.ВопросШаблонаАнкеты = Ответы.ВопросШаблонаАнкеты
		|			И ПоследниеОтветы.ЭлементарныйВопрос = Ответы.ЭлементарныйВопрос
		|			И ПоследниеОтветы.Анкета = Ответы.Анкета";
	Запрос.УстановитьПараметр("ШаблонАнкеты", ШаблонАнкеты);
	Запрос.УстановитьПараметр("Респондент", Респондент);
	Выборка = Запрос.Выполнить().Выбрать();
	МассивОтветов = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Вопрос = Выборка.ВопросШаблонаАнкеты;
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("Вопрос", Вопрос);
		СтруктураОтвета.Вставить("ЭлементарныйВопрос", Выборка.ЭлементарныйВопрос);
		СтруктураОтвета.Вставить("Ответ", Выборка.Ответ);
		СтруктураОтвета.Вставить("ОткрытыйОтвет", Выборка.ОткрытыйОтвет);
		СтруктураОтвета.Вставить("НомерЯчейки", Выборка.НомерЯчейки);
		МассивОтветов.Добавить(СтруктураОтвета);	
	КонецЦикла;
	
	Возврат МассивОтветов;
	
КонецФункции

// Возвращает печатную форму шаблона анкеты
//
// Параметры:
//   ШаблонАнкеты - СправочникСсылка.ШаблоныАнкет - шаблон анкеты для печати.
//
// ВозвращаемоеЗначение:
//   ТабличныйДокумент - печатная форма шаблона анкеты.
//
Функция ПечатьАнкетыНаСервере(ШаблонАнкеты) Экспорт
	
	Возврат ЭлектронноеИнтервью.ПечатьАнкеты(ШаблонАнкеты);
	
КонецФункции

// Возвращает список удаляемых характеристик персонала и их значений при удалении действий сотрудника.
//
// Параметры:
//   ДействияСотрудника - Массив - массив удаляемых действий сотрудников.
//   ПрочиеДействия - Массив - массив остающихся действий сотрудников.
//   Характеристики - Массив - массив характеристик персонала, среди которых нужно определить удаляемые.
//   ЗначенияХарактеристик - Массив - массив значений характеристик персонала, среди которых нужно определить удаляемые.
//
// ВозвращаемоеЗначение:
//   Структура - структура массивов удаляемых характеристик персонала и значений характеристик.
//
Функция СписокУдаляемыхСтрок(ДействияСотрудника, ПрочиеДействия, Характеристики, ЗначенияХарактеристик) Экспорт
	
	ТаблицаХарактеристик = Новый ТаблицаЗначений;
	ТаблицаХарактеристик.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ХарактеристикиПерсонала"));
	Для Каждого Характеристика Из Характеристики Цикл
		НоваяСтрока = ТаблицаХарактеристик.Добавить();
		НоваяСтрока.Характеристика = Характеристика;
	КонецЦикла;
	
	ТаблицаЗначенийХарактеристик = Новый ТаблицаЗначений;
	ТаблицаЗначенийХарактеристик.Колонки.Добавить("ЗначениеХарактеристики", Метаданные.ПланыВидовХарактеристик.ХарактеристикиПерсонала.Тип);
	ТаблицаЗначенийХарактеристик.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ХарактеристикиПерсонала"));
	Для Каждого ЗначениеХарактеристики Из ЗначенияХарактеристик Цикл
		НоваяСтрока = ТаблицаЗначенийХарактеристик.Добавить();
		НоваяСтрока.ЗначениеХарактеристики = ЗначениеХарактеристики;
		НоваяСтрока.Характеристика = ЗначениеХарактеристики.Владелец;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ХарактеристикиПерсонала", ТаблицаХарактеристик);
	Запрос.УстановитьПараметр("ЗначенияХарактеристик", ТаблицаЗначенийХарактеристик);
	Запрос.УстановитьПараметр("ДействияСотрудника", ДействияСотрудника);
	Запрос.УстановитьПараметр("ПрочиеДействия", ПрочиеДействия);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХарактеристикиПерсонала.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВТХарактеристикиПерсонала
		|ИЗ
		|	&ХарактеристикиПерсонала КАК ХарактеристикиПерсонала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияХарактеристик.Характеристика КАК Характеристика,
		|	ЗначенияХарактеристик.ЗначениеХарактеристики КАК ЗначениеХарактеристики
		|ПОМЕСТИТЬ ВТЗначенияХарактеристик
		|ИЗ
		|	&ЗначенияХарактеристик КАК ЗначенияХарактеристик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДействияСотрудниковХарактеристикиПерсонала.Характеристика КАК Характеристика,
		|	ДействияСотрудниковХарактеристикиПерсонала.Значение КАК ЗначениеХарактеристики
		|ПОМЕСТИТЬ ВТУдаляемыеХарактеристики
		|ИЗ
		|	Справочник.ДействияСотрудников.ХарактеристикиПерсонала КАК ДействияСотрудниковХарактеристикиПерсонала
		|ГДЕ
		|	ДействияСотрудниковХарактеристикиПерсонала.Ссылка В(&ДействияСотрудника)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДействияСотрудниковХарактеристикиПерсонала.Характеристика,
		|	ДействияСотрудниковХарактеристикиПерсонала.Значение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДействияСотрудниковХарактеристикиПерсонала.Характеристика КАК Характеристика,
		|	ДействияСотрудниковХарактеристикиПерсонала.Значение КАК ЗначениеХарактеристики
		|ПОМЕСТИТЬ ВТПрочиеХарактеристики
		|ИЗ
		|	Справочник.ДействияСотрудников.ХарактеристикиПерсонала КАК ДействияСотрудниковХарактеристикиПерсонала
		|ГДЕ
		|	ДействияСотрудниковХарактеристикиПерсонала.Ссылка В(&ПрочиеДействия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДействияСотрудниковХарактеристикиПерсонала.Характеристика,
		|	ДействияСотрудниковХарактеристикиПерсонала.Значение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХарактеристикиПерсонала.Характеристика КАК Характеристика
		|ИЗ
		|	ВТХарактеристикиПерсонала КАК ХарактеристикиПерсонала
		|ГДЕ
		|	ХарактеристикиПерсонала.Характеристика В
		|			(ВЫБРАТЬ
		|				УдаляемыеХарактеристики.Характеристика
		|			ИЗ
		|				ВТУдаляемыеХарактеристики КАК УдаляемыеХарактеристики)
		|	И НЕ ХарактеристикиПерсонала.Характеристика В
		|				(ВЫБРАТЬ
		|					ПрочиеХарактеристики.Характеристика
		|				ИЗ
		|					ВТПрочиеХарактеристики КАК ПрочиеХарактеристики)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияХарактеристик.ЗначениеХарактеристики КАК ЗначениеХарактеристики
		|ИЗ
		|	ВТЗначенияХарактеристик КАК ЗначенияХарактеристик
		|ГДЕ
		|	ЗначенияХарактеристик.ЗначениеХарактеристики В
		|			(ВЫБРАТЬ
		|				УдаляемыеХарактеристики.ЗначениеХарактеристики
		|			ИЗ
		|				ВТУдаляемыеХарактеристики КАК УдаляемыеХарактеристики)
		|	И НЕ ЗначенияХарактеристик.ЗначениеХарактеристики В
		|				(ВЫБРАТЬ
		|					ПрочиеХарактеристики.ЗначениеХарактеристики
		|				ИЗ
		|					ВТПрочиеХарактеристики КАК ПрочиеХарактеристики)
		|	И ЗначенияХарактеристик.Характеристика В
		|				(ВЫБРАТЬ
		|					ПрочиеХарактеристики.Характеристика
		|				ИЗ
		|					ВТПрочиеХарактеристики КАК ПрочиеХарактеристики)";
	
	Результат = Запрос.ВыполнитьПакет();
	СтруктураУдаляемыхСтрок = Новый Структура;
	СтруктураУдаляемыхСтрок.Вставить("Характеристики", Результат[4].Выгрузить().ВыгрузитьКолонку("Характеристика"));
	СтруктураУдаляемыхСтрок.Вставить("ЗначенияХарактеристик", Результат[5].Выгрузить().ВыгрузитьКолонку("ЗначениеХарактеристики"));
	Возврат СтруктураУдаляемыхСтрок;
	
КонецФункции

// Определяет наличие шаблона анкеты для переданного этапа работы вакансии для кандидата.
//
// Параметры:
//   Кандидат - СправочникСсылка.Кандидаты - ссылка на кандидата.
//   Этап - СправочникСсылка.ЭтапыРаботыСКандидатами - ссылка на этап работы.
//   Вакансия - СправочникСсылка.Вакансии - ссылка на вакансию.
//
// ВозвращаемоеЗначение:
//   Булево - признак существования шаблона анкеты.
//
Функция ЕстьШаблон(Кандидат, Этап, Вакансия) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.АнкетыКандидатов) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РаботаСКандидатами.Кандидат,
		|	РаботаСКандидатами.Период,
		|	РаботаСКандидатами.СостояниеЭтапа,
		|	РаботаСКандидатами.ШаблонАнкеты
		|ИЗ
		|	РегистрСведений.РаботаСКандидатами КАК РаботаСКандидатами
		|ГДЕ
		|	РаботаСКандидатами.Кандидат = &Кандидат
		|	И РаботаСКандидатами.ЭтапРаботы = &ЭтапРаботы";
	Запрос.УстановитьПараметр("Кандидат", Кандидат);
	Запрос.УстановитьПараметр("ЭтапРаботы", Этап);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.СостояниеЭтапа = Перечисления.СостоянияЭтаповРаботыСКандидатами.Запланирован Или Не ЗначениеЗаполнено(Выборка.СостояниеЭтапа) Тогда
			Возврат ЗначениеЗаполнено(Выборка.ШаблонАнкеты);
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ЭтапРаботы", Этап);
		СтрокиЭтапа = Вакансия.ЭтапыРаботыСКандидатами.НайтиСтроки(СтруктураПоиска);
		Если СтрокиЭтапа.Количество() > 0 Тогда
			Возврат ЗначениеЗаполнено(СтрокиЭтапа[0].ШаблонАнкеты);
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Возвращает шаблон анкеты и анкету для переданного этапа работы вакансии для кандидата.
//
// Параметры:
//   Кандидат - СправочникСсылка.Кандидаты - ссылка на кандидата.
//   Этап - СправочникСсылка.ЭтапыРаботыСКандидатами - ссылка на этап работы.
//   Вакансия - СправочникСсылка.Вакансии - ссылка на вакансию.
//
// ВозвращаемоеЗначение:
//   Структура - структура с шаблоном анкеты, анкетой и признаком возможности редактирования анкеты.
//
Функция ШаблонАнкеты(Кандидат, ЭтапРаботы, Вакансия) Экспорт
	
	ДанныеАнкеты = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РаботаСКандидатами.Кандидат,
		|	РаботаСКандидатами.Период,
		|	РаботаСКандидатами.ШаблонАнкеты
		|ИЗ
		|	РегистрСведений.РаботаСКандидатами КАК РаботаСКандидатами
		|ГДЕ
		|	РаботаСКандидатами.Кандидат = &Кандидат
		|	И РаботаСКандидатами.ЭтапРаботы = &ЭтапРаботы
		|	И РаботаСКандидатами.СостояниеЭтапа = &СостояниеЭтапа";
	Запрос.УстановитьПараметр("Кандидат", Кандидат);
	Запрос.УстановитьПараметр("ЭтапРаботы", ЭтапРаботы);
	Запрос.УстановитьПараметр("СостояниеЭтапа", Перечисления.СостоянияЭтаповРаботыСКандидатами.Запланирован);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Не ЗначениеЗаполнено(Выборка.ШаблонАнкеты) Тогда
			ДанныеАнкеты.Вставить("ШаблонАнкеты", Неопределено);
			Возврат ДанныеАнкеты;
		КонецЕсли;
		ДанныеАнкеты.Вставить("ШаблонАнкеты", Выборка.ШаблонАнкеты);
	Иначе
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ЭтапРаботы", ЭтапРаботы);
		СтрокиЭтапа = Вакансия.ЭтапыРаботыСКандидатами.НайтиСтроки(СтруктураПоиска);
		Если СтрокиЭтапа.Количество() = 0 Тогда
			ДанныеАнкеты.Вставить("ШаблонАнкеты", Неопределено);
			Возврат ДанныеАнкеты;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокиЭтапа[0].ШаблонАнкеты) Тогда
			ДанныеАнкеты.Вставить("ШаблонАнкеты", Неопределено);
			Возврат ДанныеАнкеты;
		КонецЕсли;
		ДанныеАнкеты.Вставить("ШаблонАнкеты", СтрокиЭтапа[0].ШаблонАнкеты);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	АнкетыКандидатов.Анкета,
		|	АнкетыКандидатов.Анкета.Проведен КАК ТолькоПросмотр
		|ИЗ
		|	РегистрСведений.АнкетыКандидатов КАК АнкетыКандидатов
		|ГДЕ
		|	АнкетыКандидатов.Вакансия = &Вакансия
		|	И АнкетыКандидатов.ЭтапРаботыСКандидатом = &ЭтапРаботы
		|	И АнкетыКандидатов.Кандидат = &Кандидат";
	Запрос.УстановитьПараметр("Кандидат", Кандидат);
	Запрос.УстановитьПараметр("ЭтапРаботы", ЭтапРаботы);
	Запрос.УстановитьПараметр("Вакансия", Вакансия);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДанныеАнкеты.Вставить("Анкета", Выборка.Анкета);
		ДанныеАнкеты.Вставить("ТолькоПросмотр", Выборка.ТолькоПросмотр);
	Иначе
		ДанныеАнкеты.Вставить("Анкета", Неопределено);
		ДанныеАнкеты.Вставить("ТолькоПросмотр", Истина);
	КонецЕсли;
	
	Возврат ДанныеАнкеты;
	
КонецФункции

// Удаляет характеристики персонала из настроек вопросов для собеседования
//
// Параметры:
//   УдаляемыеХарактеристики - Массив - массив удаляемых характеристик персонала.
//   Ссылка - СправочникСсылка.Вакансии, СправочникСсылка.ПрофилиДолжностей - ссылка на элемент справочника, из которого
//                                                                            удаляются характеристики персонала.
//
Процедура УдалитьХарактеристикиИзНастроек(УдаляемыеХарактеристики, Ссылка) Экспорт
	
	НаборНастроек = РегистрыСведений.НастройкаВопросовДляСобеседования.СоздатьНаборЗаписей();
	НаборНастроек.Отбор.Объект.Установить(Ссылка);
	НаборНастроек.Прочитать();
	Для Каждого Запись Из НаборНастроек Цикл
		Если УдаляемыеХарактеристики.Найти(Запись.ХарактеристикаПерсонала) <> Неопределено Тогда
			Запись.ХарактеристикаПерсонала = ПланыВидовХарактеристик.ХарактеристикиПерсонала.ПустаяСсылка();
			Запись.ЗначениеХарактеристики = Справочники.ЗначенияХарактеристикПерсонала.ПустаяСсылка();
			Запись.Балл = 0;
		КонецЕсли;
	КонецЦикла;
	ТаблицаНастроек = НаборНастроек.Выгрузить();
	ТаблицаНастроек.Свернуть("Объект, ВопросДляСобеседования, ЭлементарныйВопрос, ОтветНаВопрос, ХарактеристикаПерсонала, ЗначениеХарактеристики, Балл, ЭлементарныйВопросВопросаДляСобеседования, ОтветНаВопросВопросаДляСобеседования, Подразделение");
	НаборНастроек.Загрузить(ТаблицаНастроек);
	НаборНастроек.Записать();	
	
КонецПроцедуры

// Возвращает массивы добавляемых и удаляемых характеристик персонала в списке требований к характеристикам.
//
// Параметры:
//   СписокДействий - СписокЗначений - массив действий сотрудников, на основании которых заполняются требования к характеристикам.
//   СписокХарактеристик - СписокЗначений - массив характеристик персонала, присутствующих в текущих требованиях к характеристикам.
//
// ВозвращаемоеЗначение:
//   Структура - структура массивов добавляемых и удаляемых характеристик персонала.
//
Функция ИзменяемыеХарактеристики(СписокДействий, СписокХарактеристик) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХарактеристикиПерсонала.Ссылка КАК Характеристика
		|ПОМЕСТИТЬ ВТХарактеристикиОбъекта
		|ИЗ
		|	ПланВидовХарактеристик.ХарактеристикиПерсонала КАК ХарактеристикиПерсонала
		|ГДЕ
		|	ХарактеристикиПерсонала.Ссылка В(&СписокХарактеристик)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	СУММА(ВложенныйЗапрос.Вес) КАК Вес,
		|	МАКСИМУМ(ВложенныйЗапрос.ТребуетсяПроверка) КАК ТребуетсяПроверка,
		|	МАКСИМУМ(ВложенныйЗапрос.ТребуетсяОбучение) КАК ТребуетсяОбучение
		|ПОМЕСТИТЬ ВТВесаХарактеристик
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДействияСотрудниковХарактеристикиПерсонала.Характеристика КАК Характеристика,
		|		МАКСИМУМ(ДействияСотрудниковХарактеристикиПерсонала.Вес) КАК Вес,
		|		ДействияСотрудниковХарактеристикиПерсонала.Ссылка КАК Ссылка,
		|		МАКСИМУМ(ДействияСотрудниковХарактеристикиПерсонала.ТребуетсяПроверка) КАК ТребуетсяПроверка,
		|		МАКСИМУМ(ДействияСотрудниковХарактеристикиПерсонала.ТребуетсяОбучение) КАК ТребуетсяОбучение
		|	ИЗ
		|		Справочник.ДействияСотрудников.ХарактеристикиПерсонала КАК ДействияСотрудниковХарактеристикиПерсонала
		|	ГДЕ
		|		ДействияСотрудниковХарактеристикиПерсонала.Ссылка В(&СписокДействий)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДействияСотрудниковХарактеристикиПерсонала.Характеристика,
		|		ДействияСотрудниковХарактеристикиПерсонала.Ссылка) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДействияСотрудниковХарактеристикиПерсонала.Характеристика КАК Характеристика,
		|	ДействияСотрудниковХарактеристикиПерсонала.Значение КАК Значение,
		|	ВТВесаХарактеристик.Вес КАК Вес,
		|	ВТВесаХарактеристик.ТребуетсяПроверка КАК ТребуетсяПроверка,
		|	ВТВесаХарактеристик.ТребуетсяОбучение КАК ТребуетсяОбучение,
		|	ДействияСотрудниковХарактеристикиПерсонала.ВесЗначения КАК ВесЗначения
		|ПОМЕСТИТЬ ВТХарактеристикиДействий
		|ИЗ
		|	Справочник.ДействияСотрудников.ХарактеристикиПерсонала КАК ДействияСотрудниковХарактеристикиПерсонала
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВесаХарактеристик КАК ВТВесаХарактеристик
		|		ПО ДействияСотрудниковХарактеристикиПерсонала.Характеристика = ВТВесаХарактеристик.Характеристика
		|ГДЕ
		|	ДействияСотрудниковХарактеристикиПерсонала.Ссылка В(&СписокДействий)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТХарактеристикиОбъекта.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВТПересечения
		|ИЗ
		|	ВТХарактеристикиОбъекта КАК ВТХарактеристикиОбъекта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТХарактеристикиДействий КАК ВТХарактеристикиДействий
		|		ПО ВТХарактеристикиОбъекта.Характеристика = ВТХарактеристикиДействий.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТХарактеристикиДействий.Характеристика КАК Характеристика,
		|	ВТХарактеристикиДействий.Значение КАК Значение,
		|	ВТХарактеристикиДействий.Вес КАК Вес,
		|	ВТХарактеристикиДействий.ТребуетсяПроверка КАК ТребуетсяПроверка,
		|	ВТХарактеристикиДействий.ТребуетсяОбучение КАК ТребуетсяОбучение,
		|	ВТХарактеристикиДействий.ВесЗначения КАК ВесЗначения
		|ИЗ
		|	ВТХарактеристикиДействий КАК ВТХарактеристикиДействий
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПересечения КАК ВТПересечения
		|		ПО ВТХарактеристикиДействий.Характеристика = ВТПересечения.Характеристика
		|ГДЕ
		|	ВТПересечения.Характеристика ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТХарактеристикиОбъекта.Характеристика КАК Характеристика
		|ИЗ
		|	ВТХарактеристикиОбъекта КАК ВТХарактеристикиОбъекта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПересечения КАК ВТПересечения
		|		ПО ВТХарактеристикиОбъекта.Характеристика = ВТПересечения.Характеристика
		|ГДЕ
		|	ВТПересечения.Характеристика ЕСТЬ NULL";
	Запрос.УстановитьПараметр("СписокДействий", СписокДействий);
	Запрос.УстановитьПараметр("СписокХарактеристик", СписокХарактеристик);
	Результат = Запрос.ВыполнитьПакет();
	НовыеХарактеристики = Результат[4].Выбрать();
	ДобавляемыеХарактеристики = Новый Массив;
	Пока НовыеХарактеристики.Следующий() Цикл
		СтруктураСтроки = Новый Структура;
		СтруктураСтроки.Вставить("Характеристика", НовыеХарактеристики.Характеристика);
		СтруктураСтроки.Вставить("Значение", НовыеХарактеристики.Значение);
		СтруктураСтроки.Вставить("Вес", НовыеХарактеристики.Вес);
		СтруктураСтроки.Вставить("ТребуетсяПроверка", НовыеХарактеристики.ТребуетсяПроверка);
		СтруктураСтроки.Вставить("ТребуетсяОбучение", НовыеХарактеристики.ТребуетсяОбучение);
		СтруктураСтроки.Вставить("ВесЗначения", НовыеХарактеристики.ВесЗначения);
		ДобавляемыеХарактеристики.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	СтарыеХарактеристики = Результат[5].Выбрать();
	УдаляемыеХарактеристики = Новый Массив;
	Пока СтарыеХарактеристики.Следующий() Цикл
		УдаляемыеХарактеристики.Добавить(СтарыеХарактеристики.Характеристика);
	КонецЦикла;
	
	ИзменяемыеХарактеристики = Новый Структура;
	ИзменяемыеХарактеристики.Вставить("ДобавляемыеХарактеристики", ДобавляемыеХарактеристики);
	ИзменяемыеХарактеристики.Вставить("УдаляемыеХарактеристики", УдаляемыеХарактеристики);
	Возврат ИзменяемыеХарактеристики;
	
КонецФункции

// Возвращает вопросы шаблона анкеты для удаления
//
// Параметры:
//   УдаляемыеХарактеристики - Массив - массив удаляемых характеристик персонала.
//   Ссылка - СправочникСсылка.Вакансии, СправочникСсылка.ПрофилиДолжностей - ссылка на элемент справочника, из которого
//                                                                            удаляются характеристики персонала.
//   ШаблоныАнкет - СписокЗначений - шаблоны анкет для изменяемого профиля должности или вакансии.
//
// ВозвращаемоеЗначение:
//   Массив - массив вопросов шаблонов анкет для удаления.
//
Функция УдаляемыеВопросыШаблона(УдаляемыеХарактеристики, Ссылка, ШаблоныАнкет) Экспорт
	
	УдаляемыеВопросыШаблона = Новый Массив;
	УдаляемыеВопросыДляСобеседования = Новый Массив;
	УдаляемыеПрочиеХарактеристики = Новый Массив;
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НастройкаВопросовДляСобеседования.ВопросДляСобеседования КАК ВопросДляСобеседования,
			|	НастройкаВопросовДляСобеседования.ЭлементарныйВопрос КАК ЭлементарныйВопрос
			|ПОМЕСТИТЬ ВТВопросы
			|ИЗ
			|	РегистрСведений.НастройкаВопросовДляСобеседования КАК НастройкаВопросовДляСобеседования
			|ГДЕ
			|	НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала В(&УдаляемыеХарактеристики)
			|	И НастройкаВопросовДляСобеседования.Объект = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТВопросы.ВопросДляСобеседования КАК ВопросДляСобеседования
			|ИЗ
			|	ВТВопросы КАК ВТВопросы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаВопросовДляСобеседования КАК НастройкаВопросовДляСобеседования
			|		ПО ВТВопросы.ВопросДляСобеседования = НастройкаВопросовДляСобеседования.ВопросДляСобеседования
			|			И (НастройкаВопросовДляСобеседования.Объект = &Ссылка)
			|			И (НЕ(НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала В (&УдаляемыеХарактеристики)
			|					ИЛИ НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиПерсонала.ПустаяСсылка)))
			|ГДЕ
			|	НастройкаВопросовДляСобеседования.ВопросДляСобеседования ЕСТЬ NULL
			|	И ВТВопросы.ВопросДляСобеседования <> ЗНАЧЕНИЕ(Справочник.ВопросыДляСобеседования.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТВопросы.ЭлементарныйВопрос КАК ЭлементарныйВопрос
			|ИЗ
			|	ВТВопросы КАК ВТВопросы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаВопросовДляСобеседования КАК НастройкаВопросовДляСобеседования
			|		ПО ВТВопросы.ЭлементарныйВопрос = НастройкаВопросовДляСобеседования.ЭлементарныйВопрос
			|			И (НастройкаВопросовДляСобеседования.Объект = &Ссылка)
			|			И (НЕ(НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала В (&УдаляемыеХарактеристики)
			|					ИЛИ НастройкаВопросовДляСобеседования.ХарактеристикаПерсонала = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиПерсонала.ПустаяСсылка)))
			|ГДЕ
			|	ВТВопросы.ВопросДляСобеседования = ЗНАЧЕНИЕ(Справочник.ВопросыДляСобеседования.ПустаяСсылка)
			|	И НастройкаВопросовДляСобеседования.ВопросДляСобеседования ЕСТЬ NULL";
		Запрос.УстановитьПараметр("УдаляемыеХарактеристики", УдаляемыеХарактеристики);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Результат = Запрос.ВыполнитьПакет();
		ВыборкаВопросовДляСобеседования = Результат[1].Выбрать();
		ВыборкаПрочихХарактеристик = Результат[2].Выбрать();
		Пока ВыборкаВопросовДляСобеседования.Следующий() Цикл
			УдаляемыеВопросыДляСобеседования.Добавить(ВыборкаВопросовДляСобеседования.ВопросДляСобеседования);
		КонецЦикла;
		Пока ВыборкаПрочихХарактеристик.Следующий() Цикл
			УдаляемыеПрочиеХарактеристики.Добавить(ВыборкаПрочихХарактеристик.ЭлементарныйВопрос);
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВопросыШаблонаАнкеты.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТВопросыШаблона
			|ИЗ
			|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
			|ГДЕ
			|	ВопросыШаблонаАнкеты.Владелец В(&ШаблоныАнкет)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТВопросыШаблона.Ссылка КАК Ссылка
			|ИЗ
			|	ВТВопросыШаблона КАК ВТВопросыШаблона
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
			|		ПО ВТВопросыШаблона.Ссылка = ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты
			|ГДЕ
			|	(ВТВопросыШаблона.Ссылка.ЭлементарныйВопрос В (&УдаляемыеПрочиеХарактеристики)
			|			ИЛИ ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования В (&УдаляемыеВопросыДляСобеседования))";
		Запрос.УстановитьПараметр("ШаблоныАнкет", ШаблоныАнкет);
		Запрос.УстановитьПараметр("УдаляемыеПрочиеХарактеристики", УдаляемыеПрочиеХарактеристики);
		Запрос.УстановитьПараметр("УдаляемыеВопросыДляСобеседования", УдаляемыеВопросыДляСобеседования);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			УдаляемыеВопросыШаблона.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;	
	Возврат УдаляемыеВопросыШаблона;
	
КонецФункции

// Удаляет вопросы шаблона анкеты
//
// Параметры:
//   УдаляемыеВопросыШаблона - Массив - массив ссылок на удаляемые вопросы.
//   Ссылка - СправочникСсылка.Вакансии, СправочникСсылка.ПрофилиДолжностей - ссылка на элемент справочника, для
//                                                                            которого удаляются вопросы.
//
Процедура УдалитьВопросыШаблона(УдаляемыеВопросыШаблона, Ссылка) Экспорт
	
	МассивВопросовДляСобеседования = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросДляСобеседования КАК ВопросДляСобеседования
		|ИЗ
		|	РегистрСведений.ВопросыДляСобеседованияВопросовШаблоновАнкет КАК ВопросыДляСобеседованияВопросовШаблоновАнкет
		|ГДЕ
		|	ВопросыДляСобеседованияВопросовШаблоновАнкет.ВопросШаблонаАнкеты В(&УдаляемыеВопросы)";
	Запрос.УстановитьПараметр("УдаляемыеВопросы", УдаляемыеВопросыШаблона);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивВопросовДляСобеседования.Добавить(Выборка.ВопросДляСобеседования);
	КонецЦикла;
	
	НаборНастроек = РегистрыСведений.НастройкаВопросовДляСобеседования.СоздатьНаборЗаписей();
	НаборНастроек.Отбор.Объект.Установить(Ссылка);
	НаборНастроек.Прочитать();
	УдаляемыеЗаписи = Новый Массив;
	Для Каждого Запись Из НаборНастроек Цикл
		Если МассивВопросовДляСобеседования.Найти(Запись.ВопросДляСобеседования) <> Неопределено Тогда
			УдаляемыеЗаписи.Добавить(Запись);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Запись Из УдаляемыеЗаписи Цикл
		НаборНастроек.Удалить(Запись);
	КонецЦикла;
	НаборНастроек.Записать();
	
	УстановитьПривилегированныйРежим(Истина);
	Для Каждого УдаляемыйВопрос Из УдаляемыеВопросыШаблона Цикл
		СправочникОбъект = УдаляемыйВопрос.ПолучитьОбъект();
		Если (НЕ СправочникОбъект = Неопределено) Тогда
			СправочникОбъект.Удалить();
		КонецЕсли;
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);	
	
КонецПроцедуры

// Возвращает пользовательские настройки отчета по мотиваторам
//
// Параметры:
//   Вакансия - СправочникСсылка.Вакансии - ссылка на вакансию, для которой формируется отчет.
//   СписокКандидатов - СписокЗначений - список ссылок на кандидатов, по которым формируется отчет.
//
// ВозвращаемоеЗначение:
//   ПользовательскиеНастройкиКомпоновкиДанных - пользовательские настройки отчета по мотиваторам.
//
Функция ПользовательскиеНастройкиОтчетаПоМотиваторам(Вакансия, СписокКандидатов) Экспорт
	
	// Формируем пользовательские настройки
	ОтчетОбъект = Отчеты.СравнениеМотиваторов.Создать();
	НастройкиОтчета = ОтчетОбъект.СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	НастройкиОтчета.ПараметрыДанных.Элементы.Найти("Вакансия").Значение = Вакансия;
	Если СписокКандидатов.Количество() > 0 Тогда
		Для Каждого ТекущийОтбор Из НастройкиОтчета.Отбор.Элементы Цикл
			Если ТекущийОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Кандидат") Тогда
				ТекущийОтбор.ПравоеЗначение = СписокКандидатов;
				ТекущийОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				ТекущийОтбор.Использование = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтчета);
	
	Возврат ОтчетОбъект.КомпоновщикНастроек.ПользовательскиеНастройки;	
	
КонецФункции

// Возвращает элементарный вопрос по заметкам по мотивации
//
// ВозвращаемоеЗначение:
//   ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования - элементарный вопрос по заметкам по мотивации.
//
Функция ВопросПоЗаметкам() Экспорт
	
	Родитель = ПланыВидовХарактеристик.ВопросыДляАнкетирования.НайтиПоНаименованию("Мотивация", Истина, ПланыВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка());
	Если Не ЗначениеЗаполнено(Родитель) Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат ПланыВидовХарактеристик.ВопросыДляАнкетирования.НайтиПоНаименованию("Заметки по вопросу", Истина, Родитель);
	
КонецФункции

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ХарактеристикиПерсонала.ВидИКартинкаХарактеристики.
// 
// Возвращает вид характеристики и его картинку
//
// Параметры:
//   Характеристика - ПланВидовХарактеристикСсылка.ХарактеристикиПерсонала - характеристика персонала, вид которой нужно
//                                                                           получить.
//
// ВозвращаемоеЗначение:
//   Структура - структура с видом переданной характеристики персонала и его картинкой.
//
Функция ВидХарактеристики(Характеристика) Экспорт
	Возврат ХарактеристикиПерсонала.ВидИКартинкаХарактеристики(Характеристика);
КонецФункции

#КонецОбласти

#КонецОбласти
