
#Область СлужебныеПроцедурыИФункции

#Область НачальнаяНастройкаПрограммы

Процедура ЗначенияСохраняемыхРеквизитовФормыНачальнаяНастройкаПрограммы(Форма, СохраняемыеРеквизиты) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗарплатаКадрыКорпоративнаяПодсистемы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Форма.РаботаВКОРП Тогда
		Возврат;
	КонецЕсли;
	
	СохраняемыеРеквизиты.Вставить("НастройкиПодбораПерсонала", ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(
			Форма.НастройкиПодбораПерсонала, Метаданные.РегистрыСведений.НастройкиПодбораПерсонала));
	
КонецПроцедуры

Процедура СохраненныеНастройкиВРеквизитыФормыНачальнаяНастройкаПрограммы(Форма, СохраненныеНастройки) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗарплатаКадрыКорпоративнаяПодсистемы") Тогда
		Возврат;
	КонецЕсли;
	
	Если СохраненныеНастройки.Свойство("НастройкиПодбораПерсонала") Тогда
		ЗаполнитьЗначенияСвойств(Форма["НастройкиПодбораПерсонала"], СохраненныеНастройки["НастройкиПодбораПерсонала"]);
	КонецЕсли;
	
КонецПроцедуры

Процедура НастройкиПрограммыВРеквизитыФормы(Форма) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗарплатаКадрыКорпоративнаяПодсистемы") Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = РегистрыСведений.НастройкиПодбораПерсонала.СоздатьМенеджерЗаписи();
	Настройки.Прочитать();
	НастройкиСтруктура = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(Настройки, Метаданные.РегистрыСведений.НастройкиПодбораПерсонала);
	ЗаполнитьЗначенияСвойств(Форма.НастройкиПодбораПерсонала, НастройкиСтруктура);
	
КонецПроцедуры

#КонецОбласти

#Область ИнформацияОКандидате

Процедура ПриСозданииНаСервереФормыСотрудника(Форма, ФизическоеЛицо, Позиция) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодборПерсонала") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.Кандидаты) Тогда
		Возврат;
	КонецЕсли;
	
	Кандидат = ПодборПерсонала.КандидатСотрудника(ФизическоеЛицо, Позиция);
	
	Если Кандидат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ГиперссылкаКандидата = Форма.Элементы.Добавить("Кнопка", Тип("КнопкаФормы"), Форма.Элементы.ГруппаПодборПерсонала);
	ГиперссылкаКандидата.Вид = ВидКнопкиФормы.Гиперссылка;
	
	Команда = Форма.Команды.Добавить("ОткрытьКандидатаСотрудника");
	Команда.Заголовок = НСтр("ru = 'Открыть кандидата сотрудника'");
	Команда.Подсказка = НСтр("ru = 'Перейти к кандидату'");
	Команда.Действие = "Подключаемый_ОткрытьКандидатаСотрудника";
	
	ГиперссылкаКандидата.ИмяКоманды = "ОткрытьКандидатаСотрудника";
	ГиперссылкаКандидата.Заголовок = НСтр("ru = 'О кандидате'");
	
	КандидатРеквизитФормы = Новый РеквизитФормы("КандидатСсылка", Новый ОписаниеТипов("СправочникСсылка.Кандидаты"));
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(КандидатРеквизитФормы);
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	Форма.КандидатСсылка = Кандидат;
	
КонецПроцедуры

#КонецОбласти

Процедура УстановитьВидимостьЭлементаФормы(Элемент) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ИнтеграцияРекрутинговыхСайтов") Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияРекрутинговыхСайтов");
		Модуль.УстановитьВидимостьЭлементаФормы(Элемент);
		
	Иначе
		Элемент.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти