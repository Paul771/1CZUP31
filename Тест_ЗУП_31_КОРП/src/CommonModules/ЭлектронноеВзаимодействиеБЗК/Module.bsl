

////////////////////////////////////////////////////////////////////////////////
// ЭлектронноеВзаимодействиеПереопределяемый: общий механизм обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьСоответствиеФункциональныхОпций
Процедура ПолучитьСоответствиеФункциональныхОпций(СоответствиеФО) Экспорт
	ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииСоответствияФункциональныхОпций(СоответствиеФО);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьСоответствиеСправочников
Процедура ПолучитьСоответствиеСправочников(СоответствиеСправочников) Экспорт
	ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииСоответствияСправочников(СоответствиеСправочников);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ТекстСообщенияОНеобходимостиНастройкиСистемы
Процедура ТекстСообщенияОНеобходимостиНастройкиСистемы(ВидОперации, ТекстСообщения) Экспорт
	ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииТекстаСообщенияОНеобходимостиНастройкиСистемы(ВидОперации, ТекстСообщения);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ИзменитьСообщениеОбОшибке
Процедура ИзменитьСообщениеОбОшибке(КодОшибки, ТекстОшибки) Экспорт
	ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииСообщенияОбОшибке(КодОшибки, ТекстОшибки);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.НайтиСсылкуНаОбъект
Процедура НайтиСсылкуНаОбъект(ТипОбъекта, Результат, ИдОбъекта = "", ДополнительныеРеквизиты = Неопределено, ИДЭД = Неопределено) Экспорт
	Результат = ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииСсылкиНаОбъект(ТипОбъекта, ИдОбъекта, ДополнительныеРеквизиты, ИДЭД);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьПечатныйНомерДокумента
Процедура ПолучитьПечатныйНомерДокумента(СсылкаНаОбъект, Результат) Экспорт
	Результат = ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииПечатногоНомераДокумента(СсылкаНаОбъект);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПроверитьГотовностьИсточников
Процедура ПроверитьГотовностьИсточников(ДокументыМассив) Экспорт
	ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииГотовностиИсточников(ДокументыМассив);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьДанныеЮрФизЛица
Процедура ПолучитьДанныеЮрФизЛица(ЮрФизЛицо, Сведения) Экспорт
	Сведения = ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииДанныхЮрФизЛица(ЮрФизЛицо);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ОписаниеОрганизации
Процедура ОписаниеОрганизации(СведенияОрганизации, Результат, Список = "", СПрефиксом = Истина) Экспорт
	Результат = ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииОписанияОрганизации(СведенияОрганизации, Список, СПрефиксом);
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ЕстьПравоОткрытияЖурналаРегистрации
Процедура ЕстьПравоОткрытияЖурналаРегистрации(Результат) Экспорт
	Результат = ЗарплатаКадры.ЭлектронноеВзаимодействиеПриОпределенииПраваОткрытияЖурналаРегистрации();
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПередЗаписьюВладельцаЭлектронногоДокумента
Процедура ПередЗаписьюВладельцаЭлектронногоДокумента(Объект, ИзменилисьКлючевыеРеквизиты, Знач СостояниеЭлектронногоДокумента, ПодлежитОбменуЭД, Отказ) Экспорт
	
	Если ТипыВладельцевЭлектронныхДокументов().Найти(ТипЗнч(Объект)) <> Неопределено Тогда
		ИзменилисьКлючевыеРеквизиты = ИзменилисьКлючевыеРеквизиты Или Объект.ИзменилисьКлючевыеРеквизитыЭлектронногоДокумента();
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает признак изменения реквизитов объекта.
// Сравнивает указанные реквизиты объекта с их значениями в информационной базе
//
// Параметры:
//	Объект - СправочникОбъект, ДокументОбъект - Проверяемый объект.
//	Реквизиты - Строка                        - Список имен реквизитов объекта, разделенный запятыми, 
//                                              изменение которых необходимо проверить.
//	ИсключаяРеквизиты - Строка                - Список имен реквизитов объекта, разделенный запятыми,
//                                              которые необходимо исключить из проверки
//
// Возвращаемое значение:
//	Булево - Истина, если значение хотя бы одного из переданных реквизитов отличается от сохраненного в ИБ.
// 
Функция ИзменилисьРеквизитыОбъекта(Объект, Знач Реквизиты = Неопределено, Знач ИсключаяРеквизиты = Неопределено) Экспорт
	
	Если ПустаяСтрока(Реквизиты) Тогда
		СравниваемыеРеквизиты = Новый Массив;
		МетаданныеОбъекта = Объект.Метаданные();
		Для Каждого СтандартныйРеквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
			СравниваемыеРеквизиты.Добавить(СтандартныйРеквизит.Имя);
		КонецЦикла;	
		Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			СравниваемыеРеквизиты.Добавить(Реквизит.Имя);
		КонецЦикла;	
	Иначе
		СравниваемыеРеквизиты = СтроковыеФункцииБЗККлиентСервер.РазделитьИменаСвойств(Реквизиты);
	КонецЕсли;
	
	// Вычитаем исключаемые реквизиты
	СравниваемыеРеквизиты = 
		ОбщегоНазначенияКлиентСервер.РазностьМассивов(
			СравниваемыеРеквизиты, 
			СтроковыеФункцииБЗККлиентСервер.РазделитьИменаСвойств(ИсключаяРеквизиты));
	
	ПрежниеЗначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, СравниваемыеРеквизиты);
	
	ТекущиеЗначения = Новый Структура(СтрСоединить(СравниваемыеРеквизиты, ","));
	ЗаполнитьЗначенияСвойств(ТекущиеЗначения, Объект);
	
	Возврат Не ОбщегоНазначения.ДанныеСовпадают(ПрежниеЗначения, ТекущиеЗначения);
	
КонецФункции

// Возвращает признак изменения реквизитов объекта.
// Сравнивает указанные реквизиты объекта с их значениями в информационной базе
//
// Параметры:
//	Объект - СправочникОбъект, ДокументОбъект - Проверяемый объект.
//	ИмяТабличнойЧасти - Строка                - Имя табличной части объекта.
//                                              изменение которой необходимо проверить.
//	Реквизиты - Строка                         - Список имен реквизитов табличной части объекта, разделенный запятыми, 
//                                              изменение которых необходимо проверить.
//	ИсключаяРеквизиты - Строка                - Список имен реквизитов табличной части объекта, разделенный запятыми,
//                                              которые необходимо исключить из проверки
//
// Возвращаемое значение:
//	Булево - Истина, если значение хотя бы одного из переданных реквизитов отличается от сохраненного в ИБ.
// 
Функция ИзмениласьТабличнаяЧастьОбъекта(Объект, ИмяТабличнойЧасти, Знач Реквизиты = Неопределено, Знач ИсключаяРеквизиты = Неопределено) Экспорт
	
	МетаданныеТЧ = Объект.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти];
	
	Если ПустаяСтрока(Реквизиты) Тогда
		СравниваемыеРеквизиты = Новый Массив;
		Для Каждого СтандартныйРеквизит Из МетаданныеТЧ.СтандартныеРеквизиты Цикл
			СравниваемыеРеквизиты.Добавить(СтандартныйРеквизит.Имя);
		КонецЦикла;	
		Для Каждого Реквизит Из МетаданныеТЧ.Реквизиты Цикл
			СравниваемыеРеквизиты.Добавить(Реквизит.Имя);
		КонецЦикла;	
	Иначе
		СравниваемыеРеквизиты = СтроковыеФункцииБЗККлиентСервер.РазделитьИменаСвойств(Реквизиты);
	КонецЕсли;
	
	// Вычитаем исключаемые реквизиты
	СравниваемыеРеквизиты = 
		ОбщегоНазначенияКлиентСервер.РазностьМассивов(
			СравниваемыеРеквизиты, 
			СтроковыеФункцииБЗККлиентСервер.РазделитьИменаСвойств(ИсключаяРеквизиты));
	
	// Составляем запрос выбора сравниваемых реквизитов ТЧ
	Схема = Новый СхемаЗапроса;
	ЗапросВыбора = Схема.ПакетЗапросов.Добавить();
	ЗапросВыбора.ВыбиратьРазрешенные = Ложь;
	ОператорВыбрать = ЗапросВыбора.Операторы[0];	
	ОператорВыбрать.Источники.Добавить(Объект.Метаданные().ПолноеИмя() +"."+ ИмяТабличнойЧасти, "Таблица");
	ОператорВыбрать.ВыбираемыеПоля.Добавить("Ссылка");
	Для Каждого СравниваемыйРеквизит Из СравниваемыеРеквизиты Цикл
		ОператорВыбрать.ВыбираемыеПоля.Добавить(СравниваемыйРеквизит);
	КонецЦикла;	
	ОператорВыбрать.Отбор.Добавить("Таблица.Ссылка = &Ссылка");
	
	// получаем прежние значения табличной части из ИБ
	Запрос = Новый Запрос;
	Запрос.Текст = Схема.ПолучитьТекстЗапроса();
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	ПрежниеЗначения = Запрос.Выполнить().Выгрузить();
	
	Возврат Не ОбщегоНазначения.КоллекцииИдентичны(Объект[ИмяТабличнойЧасти], ПрежниеЗначения, СтрСоединить(СравниваемыеРеквизиты, ","))
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТипыВладельцевЭлектронныхДокументов()
	Возврат ЭлектронноеВзаимодействиеБЗКВнутренний.ТипыВладельцевЭлектронныхДокументов()
КонецФункции

#КонецОбласти
