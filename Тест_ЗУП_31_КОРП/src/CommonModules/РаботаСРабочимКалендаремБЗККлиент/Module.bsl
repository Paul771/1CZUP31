////////////////////////////////////////////////////////////////////////////////
// Подсистема "Рабочий календарь".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Дополняет передаваемую таблицу занятости сведениями об отсутствиях по кадровым документам.
// Описание см. РаботаСРабочимКалендаремКлиентПереопределяемый.ПоказатьПредупреждениеОбОтсутствииПоЗаписиРабочегоКалендаря.
//
Процедура ПриПроверкеОтсутствияПоЗаписиРабочегоКалендаря(Форма, Отказ, ИнформацияОбОтсутствии, ЕстьОтсутствия) Экспорт
	
	ЕстьОтсутствия = ЕстьОтсутствияПоЗаписиРабочегоКалендаря(Форма, Отказ, ИнформацияОбОтсутствии);
	
КонецПроцедуры

// Показывает предупреждение об отсутствии для записи рабочего календаря.
// Описание см. РаботаСРабочимКалендаремКлиент.ПоказатьПредупреждениеОбОтсутствииПоЗаписиРабочегоКалендаря.
//
Процедура ПриПоказеПредупрежденияОбОтсутствииПоЗаписиРабочегоКалендаря(
	ИнформацияОбОтсутствии, Оповещение, Владелец) Экспорт
	
	ТекстЗаголовка = НСтр("ru='Пользователь отсутствует во время данной записи календаря'");
	ТекстВопроса = НСтр("ru='По сотруднику пользователя введен документ %1.
		|Записать запись календаря?'");
	ТекстВопроса = СтрШаблон(ТекстВопроса, ИнформацияОбОтсутствии.Отсутствия[0]);
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, ТекстЗаголовка);
	
КонецПроцедуры

// Открывает форму выбора пользователей, чья занятость будет отражена в календаре.
// Описание см. РаботаСРабочимКалендаремКлиентПереопределяемый.ПриНачалеВыбораПользователейДляКалендаря.
//
Процедура ПриНачалеВыбораПользователейДляКалендаря(Форма, Знач Оповещение) Экспорт
	
	ОткрытьФормуПодбораПользователей(Форма, Оповещение);
	
КонецПроцедуры

// Заполняет коллекцию формы ПользователиКалендаря выбранными пользователями.
// Описание см. РаботаСРабочимКалендаремКлиентПереопределяемый.ПриОкончанииВыбораПользователейДляКалендаря.
//
Процедура ПриОкончанииВыбораПользователейДляКалендаря(Форма, Знач ВыбранныеПользователи) Экспорт
	
	ЗаполнитьПользователейКалендаря(Форма, ВыбранныеПользователи);
	
КонецПроцедуры

// Уточняет действие при выборе записи календаря для открытия в отдельной форме.
// Описание см. РаботаСРабочимКалендаремКлиентПереопределяемый.ПриПоказеЗаписиРабочегоКалендаря.
//
Процедура ПриПоказеЗаписиРабочегоКалендаря(ЗаписьКалендаря, ПользовательКалендаря, ПредметЗаписи) Экспорт
	
	ПоказатьФормуПредметаЗаписиРабочегоКалендаря(ЗаписьКалендаря, ПользовательКалендаря, ПредметЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьОтсутствияПоЗаписиРабочегоКалендаря(Форма, Отказ, ИнформацияОбОтсутствии)
	
	Объект = Форма.Объект;
	
	// Проверка необходимость проверки отсутствия
	Если Не Форма.ПроверятьОтсутствие Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не Форма.ПроверитьОтсутствие Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИнформацияОбОтсутствии = РаботаСРабочимКалендаремБЗКВызовСервера.ДанныеОбОтсутствииПользователя(Объект.Пользователь, Объект.ДатаНачала, Объект.ДатаОкончания);
	
	Если ИнформацияОбОтсутствии.ЕстьПредупреждения Тогда
		Отказ = Истина;
		Возврат Истина;
	КонецЕсли;
	
	Форма.ПроверитьОтсутствие = Ложь;
	
	Возврат Ложь;
	
КонецФункции

Процедура ПоказатьФормуПредметаЗаписиРабочегоКалендаря(ЗаписьКалендаря, ПользовательКалендаря, ПредметЗаписи)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ЗаписьКалендаря);
	Уникальность = ЗаписьКалендаря.УникальныйИдентификатор();
	
	Если ЗначениеЗаполнено(ПользовательКалендаря) Тогда
		ПараметрыФормы.Вставить("ПользовательКалендаря", ПользовательКалендаря);
	КонецЕсли;
	
	РаботаСРабочимКалендаремКлиент.ОткрытьФормуЗаписиКалендаря(ПараметрыФормы, Уникальность);
	
КонецПроцедуры

Процедура ОткрытьФормуПодбораПользователей(Форма, Оповещение)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("РасширенныйПодбор", Истина);
	ПараметрыФормы.Вставить("ПараметрыРасширеннойФормыПодбора", РаботаСРабочимКалендаремБЗКВызовСервера.ПараметрыРасширеннойФормыПодбора(Форма.ПользователиКалендаря));
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, Форма, , , , Оповещение);
	
КонецПроцедуры

Процедура ЗаполнитьПользователейКалендаря(Форма, ВыбранныеПользователи)
	
	ПользователиКалендаря = Форма.ПользователиКалендаря;
	
	Для Каждого ВыбранныйПользователь Из ВыбранныеПользователи Цикл
		ПользователиКалендаря.Добавить(ВыбранныйПользователь);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти