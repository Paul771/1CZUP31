
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗарегистрироватьПодатныеДанныеОТерриторияхИУсловиях(Движения, ДатаНачалаПериода, ДатаОкончанияПериода, ДанныеОТерриторияхИУсловиях) Экспорт	
	МенеджерВременныТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТПодневныеДанныеОТерриторияхИУсловиях(МенеджерВременныТаблиц, ДанныеОТерриторияхИУсловиях);
	
	ВыборкаПоСотрудникам = ВыборкаДляРегистрацииПодатныхДанных(МенеджерВременныТаблиц, ДатаНачалаПериода, ДатаОкончанияПериода);
	ВыборкаПоУсловиямТруда = ВыборкаДляРегистрацииПодатныхДанныхОУсловияхТруда(МенеджерВременныТаблиц, ДатаНачалаПериода, ДатаОкончанияПериода); 
	
	ДанныеДляРегистрации = УчетСтажаПФР.ДанныеДляРегистрацииВУчетеСтажаПФР();
		
	ПоляОписанияТекущегоПериода = "Сотрудник, ДатаНачала, ДатаОкончания, Территория, УсловияТруда, Открыт";
	Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("Сотрудник") Цикл
		ВыборкаПоУсловиямТруда.СледующийПоЗначениюПоля("Сотрудник");	
		
		ОписаниеТекущегоПериода = Новый Структура(ПоляОписанияТекущегоПериода); 
		ОписаниеТекущегоПериода.Сотрудник = ВыборкаПоСотрудникам.Сотрудник;
		ОписаниеТекущегоПериода.Открыт = Ложь;
		
		Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("Дата") Цикл
			ВыборкаПоУсловиямТруда.СледующийПоЗначениюПоля("Дата");
			
			Территория = ТерриторияНаДату(ВыборкаПоСотрудникам);
			УсловияТруда = УсловияТрудаНаДату(ВыборкаПоУсловиямТруда); 
			
			Если Не ОписаниеТекущегоПериода.Открыт Тогда
				ОписаниеТекущегоПериода.ДатаНачала = ВыборкаПоСотрудникам.Дата;
				ОписаниеТекущегоПериода.ДатаОкончания = ВыборкаПоСотрудникам.Дата;
				ОписаниеТекущегоПериода.Территория = Территория;
				ОписаниеТекущегоПериода.УсловияТруда = УсловияТруда;
				ОписаниеТекущегоПериода.Открыт = Истина;
			ИначеЕсли КонецДня(ОписаниеТекущегоПериода.ДатаОкончания) + 1 <> ВыборкаПоУсловиямТруда.Дата
				Или ОписаниеТекущегоПериода.Территория <> Территория
				Или ОписаниеТекущегоПериода.УсловияТруда <> УсловияТруда Тогда
				
				ЗарегистрироватьТекущийПериодПодатныхДанных(Движения, ДанныеДляРегистрации, ОписаниеТекущегоПериода);
				
				ОписаниеТекущегоПериода.ДатаНачала = ВыборкаПоСотрудникам.Дата;
				ОписаниеТекущегоПериода.ДатаОкончания = ВыборкаПоСотрудникам.Дата;
				ОписаниеТекущегоПериода.Территория = Территория;
				ОписаниеТекущегоПериода.УсловияТруда = УсловияТруда;
				ОписаниеТекущегоПериода.Открыт = Истина;
			Иначе
				ОписаниеТекущегоПериода.ДатаОкончания = ВыборкаПоСотрудникам.Дата;
			
			КонецЕсли;		
		КонецЦикла;
		
		Если ОписаниеТекущегоПериода.Открыт Тогда
			ЗарегистрироватьТекущийПериодПодатныхДанных(Движения, ДанныеДляРегистрации, ОписаниеТекущегоПериода);	
		КонецЕсли;	
		
	КонецЦикла;	
	
	УчетСтажаПФР.ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, ДанныеДляРегистрации);	
	
КонецПроцедуры	

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора = Неопределено, РежимЗагрузки = Ложь) Экспорт
	ОписаниеТаблицыФильтра = УчетСтажаПФР.ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР();
	ОписаниеТаблицыФильтра.ИмяВТОтбор = "ВТКлючиИзменившихсяДанных";
	Если ИзмеренияОтбора = Неопределено Тогда
		ОписаниеТаблицыФильтра.ИзмеренияОтбора.Добавить("ГоловнаяОрганизация");
		ОписаниеТаблицыФильтра.ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		ОписаниеТаблицыФильтра.ИзмеренияОтбора.Добавить("ТипДоговора");
	Иначе
		ОписаниеТаблицыФильтра.ИзмеренияОтбора = ИзмеренияОтбора;
	КонецЕсли;	
	
	Если РежимЗагрузки Тогда
		ВыявлятьНеобходимостьКорректировки = Ложь;	
	Иначе	
		ВыявлятьНеобходимостьКорректировки = ЕстьСформированнаяОтчетностьЗаПериодОбновляемогоНабора(МенеджерВременныхТаблиц);
	КонецЕсли;	
			
	Если ВыявлятьНеобходимостьКорректировки Тогда
		УчетСтажаПФР.СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ОписаниеТаблицыФильтра, "ВТСтарыеДанныеСтажа");
	КонецЕсли;	
	
	УчетСтажаПФРБазовый.ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора, РежимЗагрузки);
	
	Если ВыявлятьНеобходимостьКорректировки Тогда	
		ЗарегистрироватьКорректировкиСтажаПФР(МенеджерВременныхТаблиц);
	КонецЕсли;	
КонецПроцедуры	

Функция ЕстьСформированнаяОтчетностьЗаПериодОбновляемогоНабора(МенеджерВременныхТаблиц)
	ЕстьСформированнаяОтчетность = Ложь;
	
	ПериодыССуществующейОтчетностью = ПерсонифицированныйУчет.ПериодыССуществующейОтчетностью();
	ПериодыССуществующейОтчетностью.Индексы.Добавить("ОтчетныйПериод");

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлючиИзменившихсяДанных.Начало КАК Период
	|ИЗ
	|	ВТКлючиИзменившихсяДанных КАК КлючиИзменившихсяДанных
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючиИзменившихсяДанных.Начало";
			
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПроверяемыйПериод = НачалоКвартала(Выборка.Период);
		
		Для Каждого ПериодСуществующейОтчетности Из ПериодыССуществующейОтчетностью Цикл
			Если ПериодСуществующейОтчетности.ОтчетныйПериод >= ПроверяемыйПериод Тогда
				ЕстьСформированнаяОтчетность = Истина;
				Прервать;
				
			КонецЕсли;	
		КонецЦикла;				
	КонецЕсли;	
	
	Возврат ЕстьСформированнаяОтчетность;
КонецФункции	

Функция РесурсыУчетаСтажаПФР() Экспорт
	Ресурсы = Новый Массив;	
	Ресурсы.Добавить("ВидСтажаПФР");
	Ресурсы.Добавить("Организация");
	Ресурсы.Добавить("Подразделение");
	Ресурсы.Добавить("Должность");
	Ресурсы.Добавить("ДолжностьПоШтатномуРасписанию");
	Ресурсы.Добавить("ГрафикРаботы");
	Ресурсы.Добавить("КоличествоСтавок");
	Ресурсы.Добавить("ТерриториальныеУсловия");
	Ресурсы.Добавить("ОсобыеУсловияТруда");
	Ресурсы.Добавить("ОснованиеВыслугиЛет");
	Ресурсы.Добавить("Территория");
	Ресурсы.Добавить("УсловияТруда");
	Ресурсы.Добавить("ВнутреннееСовместительство");

	Возврат Ресурсы;
КонецФункции	

Функция НоваяЗаписьНабораРегистраУчетаСтажаПФР(НаборЗаписей) Экспорт
	НоваяЗапись = НаборЗаписей.Добавить();
	
	НоваяЗапись.ИспользованиеРесурсаОрганизация = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаПодразделение = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаДолжностьПоШтатномуРасписанию = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаДолжность = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаГрафикРаботы = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаКоличествоСтавок = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаТерритория = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаУсловияТруда = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаВнутреннееСовместительство = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	
	НоваяЗапись.ИспользованиеРесурсаВидСтажаПФР = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.НеУстановлено;
	НоваяЗапись.ИспользованиеРесурсаТерриториальныеУсловия = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.УстановленоЗначениеПоУмолчанию;
	НоваяЗапись.ИспользованиеРесурсаОсобыеУсловияТруда = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.УстановленоЗначениеПоУмолчанию;
	НоваяЗапись.ИспользованиеРесурсаОснованиеВыслугиЛет = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.УстановленоЗначениеПоУмолчанию;
	
	НоваяЗапись.ДокументОснование = НаборЗаписей.Отбор.Регистратор.Значение;
	
	Возврат НоваяЗапись;
КонецФункции	

Функция ТекстДополнительныхПолейЗапросаВТДанныеУчетаСтажаПФР() Экспорт
	
	ТекстыПолейЗапроса = Новый Соответствие;
	
	ТекстПоля = "ПериодыСтажаПФР.КоличествоСтавок";
	ТекстыПолейЗапроса.Вставить("КоличествоСтавок", ТекстПоля);
	
	ТекстПоля = "ПериодыСтажаПФР.ГрафикРаботы.НеполныйРабочийДень";
	ТекстыПолейЗапроса.Вставить("НеполныйРабочийДень", ТекстПоля);
	
	ТекстПоля = "ВЫБОР
	|		КОГДА ПериодыСтажаПФР.ЗарегистрированоЗначениеОснованиеВыслугиЛет
	|			ТОГДА ПериодыСтажаПФР.ОснованиеВыслугиЛет
	|		КОГДА ПериодыСтажаПФР.УсловияТруда <> ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)
	|			ТОГДА ПериодыСтажаПФР.УсловияТруда.ОснованиеДосрочногоНазначенияПенсии
	|		КОГДА ПериодыСтажаПФР.ДолжностьПоШтатномуРасписанию <> ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)
	|			ТОГДА ПериодыСтажаПФР.ДолжностьПоШтатномуРасписанию.ОснованиеДосрочногоНазначенияПенсии
	|		ИНАЧЕ ПериодыСтажаПФР.Должность.ОснованиеДосрочногоНазначенияПенсии
	|	КОНЕЦ";
	ТекстыПолейЗапроса.Вставить("ОснованиеДосрочногоНазначенияПенсии", ТекстПоля);
	
	ТекстПоля = "ВЫБОР
	|		КОГДА ПериодыСтажаПФР.УсловияТруда <> ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)
	|			ТОГДА ПериодыСтажаПФР.УсловияТруда.КодПозицииСпискаПФР
	|		КОГДА ПериодыСтажаПФР.ДолжностьПоШтатномуРасписанию <> ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)
	|			ТОГДА ПериодыСтажаПФР.ДолжностьПоШтатномуРасписанию.КодПозицииСпискаПФР
	|		ИНАЧЕ ПериодыСтажаПФР.Должность.КодПозицииСпискаПФР
	|	КОНЕЦ";
	ТекстыПолейЗапроса.Вставить("КодПозицииСписка", ТекстПоля);
	
	ТекстПоля = "ПериодыСтажаПФР.ТерриториальныеУсловия";
	ТекстыПолейЗапроса.Вставить("ТерриториальныеУсловия", ТекстПоля);
	
	ТекстПоля = "ВЫБОР
	|				КОГДА ПериодыСтажаПФР.ЗарегистрированоЗначениеОсобыеУсловияТруда
	|					ТОГДА ПериодыСтажаПФР.ОсобыеУсловияТруда
	|				КОГДА ПериодыСтажаПФР.УсловияТруда <> ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)
	|					ТОГДА ПериодыСтажаПФР.УсловияТруда.ОсобыеУсловияТрудаПФР
	|		КОГДА ПериодыСтажаПФР.ДолжностьПоШтатномуРасписанию <> ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)
	|			ТОГДА ПериодыСтажаПФР.ДолжностьПоШтатномуРасписанию.ОсобыеУсловияТрудаПФР
	|				ИНАЧЕ ПериодыСтажаПФР.Должность.ОсобыеУсловияТрудаПФР
	|			КОНЕЦ";
	ТекстыПолейЗапроса.Вставить("ОсобыеУсловияТруда", ТекстПоля);
	
	ТекстПоля = "ПериодыСтажаПФР.ЗарегистрированоЗначениеТерриториальныеУсловия";
	ТекстыПолейЗапроса.Вставить("ЗарегистрированоЗначениеТерриториальныеУсловия", ТекстПоля);
	
	ТекстПоля = "ПериодыСтажаПФР.ЗарегистрированоЗначениеОснованиеВыслугиЛет";
	ТекстыПолейЗапроса.Вставить("ЗарегистрированоЗначениеОснованиеВыслугиЛет", ТекстПоля);
	
	ТекстПоля = "ПериодыСтажаПФР.ЗарегистрированоЗначениеОсобыеУсловияТруда";
	ТекстыПолейЗапроса.Вставить("ЗарегистрированоЗначениеОсобыеУсловияТруда", ТекстПоля);
	
	ТекстПоля = "ВЫБОР
				|		КОГДА ПериодыСтажаПФР.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
				|			ТОГДА ПериодыСтажаПФР.Территория
				|		КОГДА ПериодыСтажаПФР.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
				|			ТОГДА ПериодыСтажаПФР.Подразделение
				|		ИНАЧЕ ПериодыСтажаПФР.Организация
				|	КОНЕЦ";
	ТекстыПолейЗапроса.Вставить("СтруктурнаяЕдиница", ТекстПоля);
	
	ТекстПоля = "ВЫБОР
	|		КОГДА ПериодыСтажаПФР.УсловияТруда <> ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)
	|			ТОГДА ПериодыСтажаПФР.УсловияТруда
	|		ИНАЧЕ ПериодыСтажаПФР.Должность
	|	КОНЕЦ";
	ИспользоватьШтатноеРасписание = ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание");
	Если ИспользоватьШтатноеРасписание Тогда
		ТекстПоля = СтрЗаменить(ТекстПоля, "ПериодыСтажаПФР.Должность", "ПериодыСтажаПФР.ДолжностьПоШтатномуРасписанию");
	КонецЕсли;;
	ТекстыПолейЗапроса.Вставить("Должность", ТекстПоля);
	
	Возврат ТекстыПолейЗапроса;
	
КонецФункции

Процедура СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2014(МенеджерВременныхТаблиц) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.Декрет) КАК ВидСтажа,
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ) КАК ПараметрИсчисляемогоСтажа
	|ПОМЕСТИТЬ ВТСоответствиеВидовСтажаПараметрамИсчисления2014
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.Дети),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕТИ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВременнаяНетрудоспособность),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ВРНЕТРУД)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ДЛОТПУСК),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЛОТПУСК)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВАХТА),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ВАХТА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.КВАЛИФ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.КВАЛИФ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.МЕДНЕТРУД),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.МЕДНЕТРУД)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.МЕСЯЦ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ОБЩЕСТ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ОБЩЕСТ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ПРОСТОЙ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПРОСТОЙ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.СДКРОВ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.СДКРОВ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.УЧОТПУСК),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.УЧОТПУСК)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ДОПВЫХ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДОПВЫХ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ДЛДЕТИ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЛДЕТИ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ОТСТРАН),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ОТСТРАН)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ОтпускБезСохраненияЗарплаты),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.НЕОПЛ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ЧАЭС),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ЧАЭС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.НЕОПЛ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.НЕОПЛ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтраховойСтаж),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)";	
	
	Запрос.Выполнить();
КонецПроцедуры	

Процедура СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2013(МенеджерВременныхТаблиц) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.Декрет) КАК ВидСтажа,
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ) КАК ПараметрИсчисляемогоСтажа
	|ПОМЕСТИТЬ ВТСоответствиеВидовСтажаПараметрамИсчисления2013
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.Дети),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕТИ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВременнаяНетрудоспособность),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ВРНЕТРУД)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ОтпускБезСохраненияЗарплаты),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.АДМИНИСТР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ДЛДЕТИ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЛДЕТИ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ЧАЭС),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ЧАЭС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.НЕОПЛ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.НЕОПЛ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтраховойСтаж),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВАХТА),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.КВАЛИФ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.МЕДНЕТРУД),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.МЕСЯЦ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ОБЩЕСТ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ОТСТРАН),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ПРОСТОЙ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.СДКРОВ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.УЧОТПУСК),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ДОПВЫХ),
	|	ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)";
	
	Запрос.Выполнить();	
КонецПроцедуры	

Функция ВыборкаПоИзменившимсяДаннымСтажа(МенеджерВременныхТаблиц)
	ОписаниеТаблицыФильтра = УчетСтажаПФР.ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР();
	ОписаниеТаблицыФильтра.ИмяВТОтбор = "ВТКлючиИзменившихсяДанных";
	ОписаниеТаблицыФильтра.ИзмеренияОтбора.Добавить("ГоловнаяОрганизация");
	ОписаниеТаблицыФильтра.ИзмеренияОтбора.Добавить("ФизическоеЛицо");
	ОписаниеТаблицыФильтра.ИзмеренияОтбора.Добавить("ТипДоговора");
	
	УчетСтажаПФР.СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ОписаниеТаблицыФильтра, "ВТНовыеДанныеСтажа");	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИзменившиесяДанныеСтажа.ГоловнаяОрганизация,
	|	ИзменившиесяДанныеСтажа.Организация,
	|	ИзменившиесяДанныеСтажа.ОтчетныйПериод,
	|	ИзменившиесяДанныеСтажа.ФизическоеЛицо,
	|	ИзменившиесяДанныеСтажа.ТипДоговора,
	|	ИзменившиесяДанныеСтажа.ДатаНачалаПериода,
	|	ИзменившиесяДанныеСтажа.ОснованиеВыслугиЛет,
	|	ИзменившиесяДанныеСтажа.ОсобыеУсловияТруда,
	|	ИзменившиесяДанныеСтажа.КодПозицииСписка,
	|	ИзменившиесяДанныеСтажа.ТерриториальныеУсловия,
	|	ИзменившиесяДанныеСтажа.ПараметрТерриториальныхУсловий,
	|	ИзменившиесяДанныеСтажа.ТретийПараметрВыслугиЛет,
	|	ИзменившиесяДанныеСтажа.ДатаОкончанияПериода,
	|	ИзменившиесяДанныеСтажа.ТретийПараметрИсчисляемогоСтажа,
	|	СУММА(ИзменившиесяДанныеСтажа.ПризнакИзменения) КАК ПризнакИзменения
	|ПОМЕСТИТЬ ВТИзменившиесяДанныеСтажа
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтарыеДанные.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		СтарыеДанные.Организация КАК Организация,
	|		СтарыеДанные.ОтчетныйПериод КАК ОтчетныйПериод,
	|		СтарыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СтарыеДанные.ТипДоговора КАК ТипДоговора,
	|		СтарыеДанные.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|		СтарыеДанные.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|		СтарыеДанные.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|		СтарыеДанные.КодПозицииСписка КАК КодПозицииСписка,
	|		СтарыеДанные.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|		СтарыеДанные.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|		СтарыеДанные.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|		СтарыеДанные.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|		СтарыеДанные.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|		1 КАК ПризнакИзменения
	|	ИЗ
	|		ВТСтарыеДанныеСтажа КАК СтарыеДанные
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НовыеДанные.ГоловнаяОрганизация,
	|		НовыеДанные.Организация,
	|		НовыеДанные.ОтчетныйПериод,
	|		НовыеДанные.ФизическоеЛицо,
	|		НовыеДанные.ТипДоговора,
	|		НовыеДанные.ДатаНачалаПериода,
	|		НовыеДанные.ОснованиеВыслугиЛет,
	|		НовыеДанные.ОсобыеУсловияТруда,
	|		НовыеДанные.КодПозицииСписка,
	|		НовыеДанные.ТерриториальныеУсловия,
	|		НовыеДанные.ПараметрТерриториальныхУсловий,
	|		НовыеДанные.ТретийПараметрВыслугиЛет,
	|		НовыеДанные.ДатаОкончанияПериода,
	|		НовыеДанные.ТретийПараметрИсчисляемогоСтажа,
	|		-1
	|	ИЗ
	|		ВТНовыеДанныеСтажа КАК НовыеДанные) КАК ИзменившиесяДанныеСтажа
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзменившиесяДанныеСтажа.ТерриториальныеУсловия,
	|	ИзменившиесяДанныеСтажа.ДатаНачалаПериода,
	|	ИзменившиесяДанныеСтажа.Организация,
	|	ИзменившиесяДанныеСтажа.ТипДоговора,
	|	ИзменившиесяДанныеСтажа.КодПозицииСписка,
	|	ИзменившиесяДанныеСтажа.ГоловнаяОрганизация,
	|	ИзменившиесяДанныеСтажа.ОтчетныйПериод,
	|	ИзменившиесяДанныеСтажа.ОсобыеУсловияТруда,
	|	ИзменившиесяДанныеСтажа.ДатаОкончанияПериода,
	|	ИзменившиесяДанныеСтажа.ФизическоеЛицо,
	|	ИзменившиесяДанныеСтажа.ОснованиеВыслугиЛет,
	|	ИзменившиесяДанныеСтажа.ПараметрТерриториальныхУсловий,
	|	ИзменившиесяДанныеСтажа.ТретийПараметрВыслугиЛет,
	|	ИзменившиесяДанныеСтажа.ТретийПараметрИсчисляемогоСтажа
	|
	|ИМЕЮЩИЕ
	|	СУММА(ИзменившиесяДанныеСтажа.ПризнакИзменения) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменившиесяДанныеСтажа.Организация КАК Организация,
	|	ИзменившиесяДанныеСтажа.ОтчетныйПериод КАК ОтчетныйПериод,
	|	ИзменившиесяДанныеСтажа.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ИзменившиесяДанныеСтажа.ТипДоговора
	|ИЗ
	|	ВТИзменившиесяДанныеСтажа КАК ИзменившиесяДанныеСтажа
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ОтчетныйПериод,
	|	ФизическоеЛицо";
	
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции	

Процедура ЗарегистрироватьКорректировкиСтажаПФР(МенеджерВременныхТаблиц)	
	ВыборкаПоИзменившимсяДаннымСтажа = ВыборкаПоИзменившимсяДаннымСтажа(МенеджерВременныхТаблиц);	
	
	ПериодыССуществующейОтчетностью = ПерсонифицированныйУчет.ПериодыССуществующейОтчетностью();
	ПериодыССуществующейОтчетностью.Индексы.Добавить("Организация, ОтчетныйПериод");
	
	СтруктураПоиска = Новый Структура("Организация, ОтчетныйПериод");
	Пока ВыборкаПоИзменившимсяДаннымСтажа.СледующийПоЗначениюПоля("Организация") Цикл
		Пока ВыборкаПоИзменившимсяДаннымСтажа.СледующийПоЗначениюПоля("ОтчетныйПериод") Цикл 
			СтруктураПоиска.Организация = ВыборкаПоИзменившимсяДаннымСтажа.Организация;
			СтруктураПоиска.ОтчетныйПериод = ВыборкаПоИзменившимсяДаннымСтажа.ОтчетныйПериод;
			
			ОтчетностьСуществует = (ПериодыССуществующейОтчетностью.НайтиСтроки(СтруктураПоиска).Количество() > 0);
			
			Если ОтчетностьСуществует Тогда
				Пока ВыборкаПоИзменившимсяДаннымСтажа.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
					ЗарегистрироватьКорректировкиСтажаПФРПоФизическомуЛицу(ВыборкаПоИзменившимсяДаннымСтажа);		
				КонецЦикла;	
			КонецЕсли;				
		КонецЦикла;
	КонецЦикла;	
		
КонецПроцедуры	

Процедура ЗарегистрироватьКорректировкиСтажаПФРПоФизическомуЛицу(ВыборкаПоИзменившимсяДаннымСтажа)
	РегистрироватьИзменение = Ложь;
	Пока ВыборкаПоИзменившимсяДаннымСтажа.Следующий() Цикл
		Если ВыборкаПоИзменившимсяДаннымСтажа.ОтчетныйПериод >= '20130101'
			Или ВыборкаПоИзменившимсяДаннымСтажа.ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.Трудовой Тогда 
			
			РегистрироватьИзменение = Истина;
		КонецЕсли;	
		
		Если РегистрироватьИзменение Тогда
			Набор = РегистрыСведений.НеобходимыеКорректировкиСтажаПФР.СоздатьНаборЗаписей();
			Набор.Отбор.Организация.Установить(ВыборкаПоИзменившимсяДаннымСтажа.Организация);
			Набор.Отбор.ОтчетныйПериод.Установить(ВыборкаПоИзменившимсяДаннымСтажа.ОтчетныйПериод);
			Набор.Отбор.ФизическоеЛицо.Установить(ВыборкаПоИзменившимсяДаннымСтажа.ФизическоеЛицо);
			
			Запись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаПоИзменившимсяДаннымСтажа);
			
			Набор.Записать();
		КонецЕсли;	
	КонецЦикла;			
КонецПроцедуры	

Процедура УдалитьЗаписиКорректировокСтажаПФРПоСотрудникамИзДокумента(Ссылка, ОтчетныйПериод, Организация, ИмяТаблицыСотрудники = "Сотрудники", ИмяПоляСотрудник = "Сотрудник") Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НеобходимыеКорректировкиСтажаПФР.Организация,
	|	НеобходимыеКорректировкиСтажаПФР.ФизическоеЛицо,
	|	НеобходимыеКорректировкиСтажаПФР.ОтчетныйПериод
	|ИЗ
	|	#Сотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НеобходимыеКорректировкиСтажаПФР КАК НеобходимыеКорректировкиСтажаПФР
	|		ПО Сотрудники.Сотрудник = НеобходимыеКорректировкиСтажаПФР.ФизическоеЛицо
	|			И (Сотрудники.Ссылка = &Ссылка)
	|			И (НеобходимыеКорректировкиСтажаПФР.Организация = &Организация)
	|			И (НеобходимыеКорректировкиСтажаПФР.ОтчетныйПериод = &ОтчетныйПериод)";
	
	ИмяТаблицы = Ссылка.Метаданные().ПолноеИмя() + "." + ИмяТаблицыСотрудники;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сотрудники", ИмяТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Сотрудники.Сотрудник", "Сотрудники." + ИмяПоляСотрудник);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		УдалитьЗаписиКорректировокСтажаПФР(Выборка.Организация, Выборка.ОтчетныйПериод, Выборка.ФизическоеЛицо)			
	КонецЦикла;	
	
КонецПроцедуры	

Процедура УдалитьЗаписиКорректировокСтажаПФР(Организация, ОтчетныйПериод, ФизическоеЛицо) Экспорт
	Набор = РегистрыСведений.НеобходимыеКорректировкиСтажаПФР.СоздатьНаборЗаписей();
	Набор.Отбор.Организация.Установить(Организация);
	Набор.Отбор.ОтчетныйПериод.Установить(ОтчетныйПериод);
	Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
		
	Набор.Записать();
	
КонецПроцедуры	

Функция ОписаниеПолейКадровогоПеревода() Экспорт
	ОписаниеПолей = Новый Структура;
	ОписаниеПолей.Вставить("ИмяПоляДатаОкончания");
	ОписаниеПолей.Вставить("ИмяПоляПризнакаСохраненияЛьготногоСтажа");
	ОписаниеПолей.Вставить("ИмяПоляВидСтажаПФР");
	
	Возврат ОписаниеПолей;
КонецФункции	

Процедура ПроверитьДанныеКадровогоПеревода(ДанныеОбъекта, ОписаниеПолейОбъекта, Отказ) Экспорт
	ДатаОкончания = ДанныеОбъекта[ОписаниеПолейОбъекта.ИмяПоляДатаОкончания];
	СохранятьЛьготныйСтаж = ДанныеОбъекта[ОписаниеПолейОбъекта.ИмяПоляПризнакаСохраненияЛьготногоСтажа];
	
	Если СохранятьЛьготныйСтаж Тогда
		Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
			ТекстСообщения = НСтр("ru = 'При переводе с работы, дающей право на досрочное назначение пенсии, на работу не дающее такое право с сохранением льготного стажа необходимо указывать дату окончания перевода.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДанныеОбъекта.Ссылка, ОписаниеПолейОбъекта.ИмяПоляДатаОкончания, "Объект", Отказ); 
		КонецЕсли;	
		
		ВидСтажаПФР = ДанныеОбъекта[ОписаниеПолейОбъекта.ИмяПоляВидСтажаПФР];
		
		Если Не ЗначениеЗаполнено(ВидСтажаПФР) Тогда
			ТекстСообщения = НСтр("ru = 'Не указан вид стажа ПФР.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДанныеОбъекта.Ссылка, ОписаниеПолейОбъекта.ИмяПоляВидСтажаПФР, "Объект", Отказ);
		КонецЕсли;	
	КонецЕсли;		
КонецПроцедуры	

#Область РегистрацияПодатныхДанныхОТерриторияхИУсловиях

Процедура СоздатьВТПодневныеДанныеОТерриторияхИУсловиях(МенеджерВременныхТаблиц, ДанныеОТерриторияхИУсловиях)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДанныеОТерриторияхИУсловиях", ДанныеОТерриторияхИУсловиях);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеОТерриторияхИУсловиях.Сотрудник,
	|	ДанныеОТерриторияхИУсловиях.Дата,
	|	ДанныеОТерриторияхИУсловиях.Территория,
	|	ДанныеОТерриторияхИУсловиях.УсловияТруда,
	|	ДанныеОТерриторияхИУсловиях.Часов
	|ПОМЕСТИТЬ ВТПодневныеДанныеОТерриторияхИУсловиях
	|ИЗ
	|	&ДанныеОТерриторияхИУсловиях КАК ДанныеОТерриторияхИУсловиях";	
	
	Запрос.Выполнить();
КонецПроцедуры	
	
Функция ВыборкаДляРегистрацииПодатныхДанных(МенеджерВременныхТаблиц, ДатаНачала, ДатаОкончания)
	СоздатьВТПериодыДействияТерриториальныхУсловий(МенеджерВременныхТаблиц, ДатаНачала, ДатаОкончания);
	 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодневныеДанныеОТерриторияхИУсловиях.Территория,
	|	ПодневныеДанныеОТерриторияхИУсловиях.Дата КАК Дата,
	|	ЕСТЬNULL(ПериодыДействияТерриториальныхУсловий.ТерриториальныеУсловияПФР, ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)) КАК ТерриториальныеУсловияПФР,
	|	ЕСТЬNULL(ПериодыДействияТерриториальныхУсловий.Вредность, ЛОЖЬ) КАК Вредность,
	|	ПодневныеДанныеОТерриторияхИУсловиях.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТПодневныеДанныеОТерриторияхИУсловиях КАК ПодневныеДанныеОТерриторияхИУсловиях
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыДействияТерриториальныхУсловий КАК ПериодыДействияТерриториальныхУсловий
	|		ПО ПодневныеДанныеОТерриторияхИУсловиях.Территория = ПериодыДействияТерриториальныхУсловий.Территория
	|			И ПодневныеДанныеОТерриторияхИУсловиях.Дата >= ПериодыДействияТерриториальныхУсловий.ДатаНачала
	|			И ПодневныеДанныеОТерриторияхИУсловиях.Дата <= ПериодыДействияТерриториальныхУсловий.ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Дата,
	|	Вредность УБЫВ,
	|	ТерриториальныеУсловияПФР УБЫВ";
	
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции	

Функция ВыборкаДляРегистрацииПодатныхДанныхОУсловияхТруда(МенеджерВременныхТаблиц, ДатаНачала, ДатаОкончания)
	СоздатьВТПериодыДействияКлассовУсловийТруда(МенеджерВременныхТаблиц, ДатаНачала, ДатаОкончания);
	 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодневныеДанныеОТерриторияхИУсловиях.Сотрудник КАК Сотрудник,
	|	ПодневныеДанныеОТерриторияхИУсловиях.УсловияТруда,
	|	ПодневныеДанныеОТерриторияхИУсловиях.Дата КАК Дата,
	|	ЕСТЬNULL(ПериодыДействияКлассовУсловийТруда.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) КАК КлассУсловийТруда,
	|	ВЫБОР
	|		КОГДА ПериодыДействияКлассовУсловийТруда.Вредность ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА ПериодыДействияКлассовУсловийТруда.Вредность
	|				И ПодневныеДанныеОТерриторияхИУсловиях.УсловияТруда.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией <> ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Вредность,
	|	СУММА(ПодневныеДанныеОТерриторияхИУсловиях.Часов) КАК Часов
	|ИЗ
	|	ВТПодневныеДанныеОТерриторияхИУсловиях КАК ПодневныеДанныеОТерриторияхИУсловиях
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыДействияКлассовУсловийТруда КАК ПериодыДействияКлассовУсловийТруда
	|		ПО ПодневныеДанныеОТерриторияхИУсловиях.УсловияТруда = ПериодыДействияКлассовУсловийТруда.УсловияТруда
	|			И ПодневныеДанныеОТерриторияхИУсловиях.Дата >= ПериодыДействияКлассовУсловийТруда.ДатаНачала
	|			И ПодневныеДанныеОТерриторияхИУсловиях.Дата <= ПериодыДействияКлассовУсловийТруда.ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодневныеДанныеОТерриторияхИУсловиях.Сотрудник,
	|	ПодневныеДанныеОТерриторияхИУсловиях.Дата,
	|	ПодневныеДанныеОТерриторияхИУсловиях.УсловияТруда,
	|	ЕСТЬNULL(ПериодыДействияКлассовУсловийТруда.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)),
	|	ВЫБОР
	|		КОГДА ПериодыДействияКлассовУсловийТруда.Вредность ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА ПериодыДействияКлассовУсловийТруда.Вредность
	|				И ПодневныеДанныеОТерриторияхИУсловиях.УсловияТруда.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией <> ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Дата,
	|	Вредность УБЫВ,
	|	Часов УБЫВ,
	|	КлассУсловийТруда";
	
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции	

Процедура СоздатьВТПериодыДействияКлассовУсловийТруда(МенеджерВременныхТаблиц, ДатаНачала, ДатаОкончания)
	НевредныеКлассыУсловий = Новый Массив;
	НевредныеКлассыУсловий.Добавить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка());
	НевредныеКлассыУсловий.Добавить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный);
	НевредныеКлассыУсловий.Добавить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УсловияТруда.Ссылка КАК УсловияТруда,
	|	&ДатаНачала КАК ДатаНачала,
	|	&ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТУсловияТруда
	|ИЗ
	|	Справочник.УсловияТруда КАК УсловияТруда";
	
	Запрос.Выполнить();
	
	ПараметрыДляСоздатьВТИмяРегистра = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ПараметрыДляСоздатьВТИмяРегистра.ВключатьЗаписиНаНачалоПериода = Истина;
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТУсловияТруда", "Должность");
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("Должность", "УсловияТруда");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"КлассыУсловийТрудаПоДолжностям", 
		МенеджерВременныхТаблиц, 
		Ложь, 
		ОписаниеФильтра, 
		ПараметрыДляСоздатьВТИмяРегистра,
		"ВТКлассыУсловийТруда");
		
	Запрос.УстановитьПараметр("НевредныеКлассыУсловий", НевредныеКлассыУсловий);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассыУсловийТруда.Период КАК ДатаНачала,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА КлассыУсловийТрудаСлед.Период ЕСТЬ NULL 
	|				ТОГДА &ДатаОкончания
	|			ИНАЧЕ КлассыУсловийТрудаСлед.Период
	|		КОНЕЦ) КАК ДатаОкончания,
	|	КлассыУсловийТруда.Должность КАК УсловияТруда,
	|	КлассыУсловийТруда.КлассУсловийТруда,
	|	ВЫБОР
	|		КОГДА КлассыУсловийТруда.КлассУсловийТруда В (&НевредныеКлассыУсловий)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Вредность
	|ПОМЕСТИТЬ ВТПериодыДействияКлассовУсловийТруда
	|ИЗ
	|	ВТКлассыУсловийТруда КАК КлассыУсловийТруда
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКлассыУсловийТруда КАК КлассыУсловийТрудаСлед
	|		ПО КлассыУсловийТруда.Должность = КлассыУсловийТрудаСлед.Должность
	|			И КлассыУсловийТруда.Период < КлассыУсловийТрудаСлед.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	КлассыУсловийТруда.Период,
	|	КлассыУсловийТруда.Должность,
	|	КлассыУсловийТруда.КлассУсловийТруда";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТПериодыДействияТерриториальныхУсловий(МенеджерВременныхТаблиц, ДатаНачала, ДатаОкончания)
	
	ИсключаемыеТерриториальныеУсловия = ПерсонифицированныйУчет.ИсключаемыеТерриториальныеУсловияПФР();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТерриторииВыполненияРабот.Ссылка КАК СтруктурнаяЕдиница,
	|	&ДатаНачала КАК ДатаНачала,
	|	&ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТТерритории
	|ИЗ
	|	Справочник.ТерриторииВыполненияРабот КАК ТерриторииВыполненияРабот";
	
	Запрос.Выполнить();
	
	ПараметрыДляСоздатьВТИмяРегистра = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ПараметрыДляСоздатьВТИмяРегистра.ВключатьЗаписиНаНачалоПериода = Истина;
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТТерритории", "СтруктурнаяЕдиница");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"ТерриториальныеУсловияПФР", 
		МенеджерВременныхТаблиц, 
		Ложь, 
		ОписаниеФильтра, 
		ПараметрыДляСоздатьВТИмяРегистра,
		"ВТТерриториальныеУсловияПФР");
		
	Запрос.УстановитьПараметр("ИсключаемыеТерриториальныеУсловия", ИсключаемыеТерриториальныеУсловия);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТерриториальныеУсловияДляТерриторий.Период КАК ДатаНачала,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ТерриториальныеУсловияДляТерриторийСлед.Период ЕСТЬ NULL 
	|				ТОГДА &ДатаОкончания
	|			ИНАЧЕ ТерриториальныеУсловияДляТерриторийСлед.Период
	|		КОНЕЦ) КАК ДатаОкончания,
	|	ТерриториальныеУсловияДляТерриторий.СтруктурнаяЕдиница КАК Территория,
	|	ТерриториальныеУсловияДляТерриторий.ТерриториальныеУсловияПФР КАК ТерриториальныеУсловияПФР,
	|	ВЫБОР
	|		КОГДА ТерриториальныеУсловияДляТерриторий.ТерриториальныеУсловияПФР В (&ИсключаемыеТерриториальныеУсловия)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Вредность
	|ПОМЕСТИТЬ ВТПериодыДействияТерриториальныхУсловий
	|ИЗ
	|	ВТТерриториальныеУсловияПФР КАК ТерриториальныеУсловияДляТерриторий
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТерриториальныеУсловияПФР КАК ТерриториальныеУсловияДляТерриторийСлед
	|		ПО ТерриториальныеУсловияДляТерриторий.СтруктурнаяЕдиница = ТерриториальныеУсловияДляТерриторийСлед.СтруктурнаяЕдиница
	|			И ТерриториальныеУсловияДляТерриторий.Период < ТерриториальныеУсловияДляТерриторийСлед.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТерриториальныеУсловияДляТерриторий.Период,
	|	ТерриториальныеУсловияДляТерриторий.СтруктурнаяЕдиница,
	|	ТерриториальныеУсловияДляТерриторий.ТерриториальныеУсловияПФР";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТТипыРегистраторовПриемаНаРаботу(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТИП(Документ.ПриемНаРаботу) КАК ТипРегистратора
		|ПОМЕСТИТЬ ВТТипыРегистраторовПриемаНаРаботу
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТИП(Документ.ПриемНаРаботуСписком)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТИП(Документ.НачальнаяШтатнаяРасстановка)";
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТерриторияНаДату(ВыборкаПоТерриториям)
	Возврат ВыборкаПоТерриториям.Территория;				
КонецФункции

Функция УсловияТрудаНаДату(ВыборкаПоУсловиямТруда)
	ОтработаноВсего = 0;
	ОтработаноВоВредныхУсловиях = 0;
	ВсегоУсловийТрудаНаДату = 0;
	УсловияТруда = Неопределено;
	Пока ВыборкаПоУсловиямТруда.Следующий() Цикл
		ВсегоУсловийТрудаНаДату = ВсегоУсловийТрудаНаДату + 1;	
		ОтработаноВсего = ОтработаноВсего + ВыборкаПоУсловиямТруда.Часов;
		
		Если ВыборкаПоУсловиямТруда.Вредность Тогда
			ОтработаноВоВредныхУсловиях = ОтработаноВоВредныхУсловиях + ВыборкаПоУсловиямТруда.Часов;
		КонецЕсли;	
		
		Если УсловияТруда = Неопределено Тогда
			УсловияТруда = ВыборкаПоУсловиямТруда.УсловияТруда;
		КонецЕсли;	
	КонецЦикла;	
	
	Если ВсегоУсловийТрудаНаДату = 1 Тогда
		Возврат УсловияТруда;
	ИначеЕсли ОтработаноВсего = 0 Тогда
		Возврат Справочники.УсловияТруда.ПустаяСсылка();
	ИначеЕсли ОтработаноВоВредныхУсловиях / ОтработаноВсего >= 0.8 Тогда
		Возврат УсловияТруда;
	Иначе
		Возврат Справочники.УсловияТруда.ПустаяСсылка();
	КонецЕсли;	
КонецФункции

Процедура ЗарегистрироватьТекущийПериодПодатныхДанных(Движения, ДанныеДляРегистрации, ОписаниеТекущегоПериода)
	Если Не ЗначениеЗаполнено(ОписаниеТекущегоПериода.Территория)
		И Не ЗначениеЗаполнено(ОписаниеТекущегоПериода.УсловияТруда) Тогда
		
		Возврат;
	КонецЕсли;	
	
	ОписаниеРегистрируемогоПериода = УчетСтажаПФР.ОписаниеРегистрируемогоПериода();
	
	ОписаниеРегистрируемогоПериода.Сотрудник = ОписаниеТекущегоПериода.Сотрудник;
	ОписаниеРегистрируемогоПериода.ДатаНачалаПериода = ОписаниеТекущегоПериода.ДатаНачала;
	ОписаниеРегистрируемогоПериода.ДатаОкончанияПериода = ОписаниеТекущегоПериода.ДатаОкончания;
	ОписаниеРегистрируемогоПериода.Состояние = Перечисления.СостоянияСотрудника.Факт;
	
	РегистрируемыйПериод = УчетСтажаПФР.ДобавитьЗаписьВДанныеДляРегистрацииВУчета(ДанныеДляРегистрации, ОписаниеРегистрируемогоПериода);
	УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "Территория", ОписаниеТекущегоПериода.Территория); 
	УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "УсловияТруда", ОписаниеТекущегоПериода.УсловияТруда); 	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиОбновленияИБ

Процедура ЗаполнитьПервоначальныеДанныеУчета() Экспорт
	ЗаполнитьПервоначальныеДанныеУчетаПоДокументам();	
	ЗаполнитьПервоначальныеДанныеУчетаДокументаСторнирование();
	ЗарегистрироватьДанныеДокументовПереносДанных();
	ЗаполнитьПервоначальныеДанныеВторичногоРегистра();
КонецПроцедуры	

Процедура ЗаполнитьПервоначальныеДанныеУчетаПоДокументам() 
	ОписаниеРегистраторов = ОписаниеРегистраторовДляПервоначальногоЗаполненияУчета();
	
	Для Каждого МетаданныеДокумента Из ОписаниеРегистраторов Цикл
		ЗаполнитьПервоначальныеДанныеУчетаПоТипуДокумента(МетаданныеДокумента);		
	КонецЦикла;	
КонецПроцедуры	

Процедура ЗаполнитьПервоначальныеДанныеУчетаДокументаСторнирование()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СторнированиеНачислений.СторнируемыйДокумент,
	|	СторнированиеНачислений.Ссылка
	|ИЗ
	|	Документ.СторнированиеНачислений КАК СторнированиеНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФРСторно
	|		ПО ПараметрыПериодовСтажаПФРСторно.Регистратор = СторнированиеНачислений.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ПО ПараметрыПериодовСтажаПФР.Регистратор = СторнированиеНачислений.СторнируемыйДокумент
	|ГДЕ
	|	СторнированиеНачислений.Проведен
	|	И НЕ ПараметрыПериодовСтажаПФР.Регистратор ЕСТЬ NULL 
	|	И ПараметрыПериодовСтажаПФРСторно.Регистратор ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движения = Новый Структура;
		НаборЗаписей = РегистрыСведений.ПараметрыПериодовСтажаПФР.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		Движения.Вставить("ПараметрыПериодовСтажаПФР", НаборЗаписей);

		УчетСтажаПФР.ЗарегистрироватьСторноПериодовСтажаПФР(Движения, Выборка.Ссылка, Выборка.СторнируемыйДокумент);
		
		Движения.ПараметрыПериодовСтажаПФР.Записать();	
	КонецЦикла;		
КонецПроцедуры	

Функция ОписаниеРегистраторовДляПервоначальногоЗаполненияУчета()
	ОписаниеРегистраторов = Новый Массив;
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.БольничныйЛист);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ВозвратИзОтпускаПоУходуЗаРебенком);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ДоговорАвторскогоЗаказа);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ДоговорРаботыУслуги);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.КадровыйПеревод);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.Командировка);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.НачальнаяШтатнаяРасстановка);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ОплатаДнейУходаЗаДетьмиИнвалидами);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ОплатаПоСреднемуЗаработку);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.Отпуск);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ОтпускБезСохраненияОплаты);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ОтпускПоУходуЗаРебенком);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ПеремещениеВДругоеПодразделение);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ПриемНаРаботу);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ПрогулНеявка);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.ПростойСотрудников);
	ОписаниеРегистраторов.Добавить(Метаданные.Документы.Увольнение);
	
	Возврат ОписаниеРегистраторов;	
КонецФункции	

Процедура ЗаполнитьПервоначальныеДанныеУчетаПоТипуДокумента(МетаданныеДокумента)
	ИмяДокумента = МетаданныеДокумента.ПолноеИмя();
	
	Если МетаданныеДокумента.Реквизиты.Найти("ИсправленныйДокумент") = Неопределено Тогда
		ВыборкаРегистраторов = ВыборкаНеотраженныхВУчетеРегистраторовБезПоддержкиИсправления(ИмяДокумента);	
	Иначе	
		ВыборкаРегистраторов = ВыборкаНеотраженныхВУчетеРегистраторовСПоддержкойИсправления(ИмяДокумента);	
	КонецЕсли;	
	
	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяДокумента);

	МассивСсылок = Новый Массив;
	СоответствиеИсправленныхДокументов = Новый Соответствие;
	
	Пока ВыборкаРегистраторов.Следующий() Цикл
		МассивСсылок.Добавить(ВыборкаРегистраторов.Ссылка);		
		
		Если ВыборкаРегистраторов.ЭтоИсправленныйДокумент Тогда
			СоответствиеИсправленныхДокументов.Вставить(ВыборкаРегистраторов.Ссылка, ВыборкаРегистраторов.ДокументИсправление);
		КонецЕсли;	
	КонецЦикла;	
	
	ДанныеДляРегистрацииВУчете = МенеджерДокумента.ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок);
	
	Для Каждого ДанныеДляРегистрацииПоДокументу Из ДанныеДляРегистрацииВУчете Цикл
		ДокументИсправление = СоответствиеИсправленныхДокументов.Получить(ДанныеДляРегистрацииПоДокументу.Ключ);
		
		Движения = Новый Структура;
		НаборЗаписей = РегистрыСведений.ПараметрыПериодовСтажаПФР.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ДанныеДляРегистрацииПоДокументу.Ключ);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		Движения.Вставить("ПараметрыПериодовСтажаПФР", НаборЗаписей);
		
		НачатьТранзакцию();
		
		УчетСтажаПФР.ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, ДанныеДляРегистрацииПоДокументу.Значение);
		Движения.ПараметрыПериодовСтажаПФР.Записать();
		
		Если ДокументИсправление <> Неопределено Тогда
			
			ИсправлениеПериодическихСведений.ЗафиксироватьИсправленияПоРегистру(
				Метаданные.РегистрыСведений.ПараметрыПериодовСтажаПФР,
				ДокументИсправление,
				ДанныеДляРегистрацииПоДокументу.Ключ,
				Истина);
				
		КонецЕсли;		
		
		ЗафиксироватьТранзакцию();	
	КонецЦикла;	
	
КонецПроцедуры	

Функция ВыборкаНеотраженныхВУчетеРегистраторовСПоддержкойИсправления(ИмяДокумента)
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяДокумента);
	ПустаяСсылка = Менеджер.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяСсылка", ПустаяСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.ИсправленныйДокумент,
	|	ДанныеДокумента.Ссылка КАК ДокументИсправление
	|ПОМЕСТИТЬ ВТИсправленныеДокументы
	|ИЗ
	|	#ДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПериодовСтажаПФРИспр КАК ПараметрыПериодовСтажаПФРИспр
	|		ПО ДанныеДокумента.ИсправленныйДокумент = ПараметрыПериодовСтажаПФРИспр.РегистраторИзмерение
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ПараметрыПериодовСтажаПФРИспр.РегистраторИзмерение ЕСТЬ NULL 
	|	И ДанныеДокумента.ИсправленныйДокумент <> &ПустаяСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка,
	|	NULL КАК ДокументИсправление,
	|	ЛОЖЬ КАК ЭтоИсправленныйДокумент
	|ИЗ
	|	#ДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ПО (ПараметрыПериодовСтажаПФР.Регистратор = ДанныеДокумента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО (ИсправленныеДокументы.ИсправленныйДокумент = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ПараметрыПериодовСтажаПФР.Регистратор ЕСТЬ NULL 
	|	И ИсправленныеДокументы.ИсправленныйДокумент ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсправленныеДокументы.ИсправленныйДокумент,
	|	ИсправленныеДокументы.ДокументИсправление,
	|	ИСТИНА
	|ИЗ
	|	ВТИсправленныеДокументы КАК ИсправленныеДокументы";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДанныеДокумента", ИмяДокумента);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции	

Функция ВыборкаНеотраженныхВУчетеРегистраторовБезПоддержкиИсправления(ИмяДокумента)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка,
	|	NULL КАК ДокументИсправление,
	|	ЛОЖЬ КАК ЭтоИсправленныйДокумент
	|ИЗ
	|	#ДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ПО (ПараметрыПериодовСтажаПФР.Регистратор = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ПараметрыПериодовСтажаПФР.Регистратор ЕСТЬ NULL ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДанныеДокумента", ИмяДокумента);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции	

Процедура ЗаполнитьДатыОкончанияВторичногоРегистраПоДоговорамГПХ(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодыСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Начало,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Окончание
		|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
		|ИЗ
		|	РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФР
		|ГДЕ
		|	ПериодыСтажаПФР.ТипДоговора = &ТипДоговора
		|	И ПериодыСтажаПФР.Окончание = ДАТАВРЕМЯ(1, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВТКлючиИзменившихсяДанных.ФизическоеЛицо
		|ИЗ
		|	ВТКлючиИзменившихсяДанных КАК ВТКлючиИзменившихсяДанных";
			
	Запрос.УстановитьПараметр("ТипДоговора", Перечисления.ТипыДоговоровСЗВ63.ГражданскоПравовой);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	Иначе
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	КонецЕсли;
	
	ИзмеренияОтбора = Новый Массив;
	ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		
	ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора, Истина);
	
КонецПроцедуры

// для док. перенос данных

Процедура ЗарегистрироватьДанныеДокументовПереносДанных()  
	НеобработанныеДокументы = НеобработанныеДокументыПереносДанных();		
	
	РазмерПорцииДокументов = 1000;
	
	ДокументыДляОбработки = Новый Массив;
	Для Каждого ДокументПереноса Из НеобработанныеДокументы Цикл
		Если ДокументыДляОбработки.Количество() < РазмерПорцииДокументов Тогда
			ДокументыДляОбработки.Добавить(ДокументПереноса);
		Иначе
			ЗарегистрироватьДанныеПоСпискуДокументовПереносДанных(ДокументыДляОбработки);	
			ДокументыДляОбработки.Очистить();
		КонецЕсли;	
	КонецЦикла;	
	
	Если ДокументыДляОбработки.Количество() > 0 Тогда
		ЗарегистрироватьДанныеПоСпискуДокументовПереносДанных(ДокументыДляОбработки);
	КонецЕсли;	
		
КонецПроцедуры	

Процедура ЗарегистрироватьДанныеПоСпискуДокументовПереносДанных(СписокДокументов)
	ВыборкаДанных = ВыборкаДанныхУчетаСтажаПоДокументамПереносДанных(СписокДокументов);
	
	Пока ВыборкаДанных.СледующийПоЗначениюПоля("Регистратор") Цикл
		ЗарегистрироватьДанныеПоДокументуПереносДанных(ВыборкаДанных);			
	КонецЦикла;		
КонецПроцедуры	

Процедура ЗарегистрироватьДанныеПоДокументуПереносДанных(ВыборкаДанных)	
	Набор = РегистрыСведений.ПараметрыПериодовСтажаПФР.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(ВыборкаДанных.Регистратор);
	Набор.ОбменДанными.Загрузка = Истина;
	Движения = Новый Структура("ПараметрыПериодовСтажаПФР", Набор);
		
	Пока ВыборкаДанных.СледующийПоЗначениюПоля("ТипДоговора") Цикл
		Если ВыборкаДанных.ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.Трудовой Тогда
			ДанныеДляРегистрации = УчетСтажаПФР.ДанныеДляРегистрацииВУчетеСтажаПФР();
		Иначе
			ДанныеДляРегистрации = УчетСтажаПФР.ДанныеДляРегистрацииДоговоровГПХВУчетеСтажаПФР();
		КонецЕсли;
		
		Пока ВыборкаДанных.СледующийПоЗначениюПоля("Сотрудник") Цикл
			ЗарегистрироватьДанныеПоСотрудникуДокументаПереносДанных(ДанныеДляРегистрации, ВыборкаДанных);		
		КонецЦикла;		
		
		УчетСтажаПФР.ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, ДанныеДляРегистрации);
	КонецЦикла;	
	
	Набор.Записать();
КонецПроцедуры	

Процедура ЗарегистрироватьДанныеПоСотрудникуДокументаПереносДанных(ДанныеДляРегистрации, ВыборкаДанных);	
	Пока ВыборкаДанных.СледующийПоЗначениюПоля("ДатаНачала") Цикл
		Пока ВыборкаДанных.СледующийПоЗначениюПоля("Состояние") Цикл
			ОписаниеПериода = УчетСтажаПФР.ОписаниеРегистрируемогоПериода();
			
			ОписаниеПериода.Сотрудник = ВыборкаДанных.Сотрудник;
			ОписаниеПериода.ДатаНачалаПериода = ВыборкаДанных.ДатаНачала;
			ОписаниеПериода.ДатаОкончанияПериода = ВыборкаДанных.ДатаОкончания;
			ОписаниеПериода.Состояние = ВыборкаДанных.Состояние;
			ОписаниеПериода.ВидЗанятости = ВыборкаДанных.ВидЗанятости;
			ОписаниеПериода.ДатаНачалаСобытия = ВыборкаДанных.ДатаНачалаСобытия;
			
			ДанныеРегистрируемогоПериода = УчетСтажаПФР.ДобавитьЗаписьВДанныеДляРегистрацииВУчета(ДанныеДляРегистрации, ОписаниеПериода);
			
			Пока ВыборкаДанных.Следующий() Цикл
				РегистрируемыеРесурсы = РегистрируемыеДокументовПереносДанныхРесурсы();				
				
				Для Каждого Ресурс Из РегистрируемыеРесурсы Цикл
					Если ВыборкаДанных[Ресурс] <> Неопределено
						И ВыборкаДанных[Ресурс] <> NULL Тогда
						
						УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(ДанныеРегистрируемогоПериода, Ресурс, ВыборкаДанных[Ресурс]);
						
					КонецЕсли;						
				КонецЦикла;	
				
			КонецЦикла;	
			
		КонецЦикла;
		
	КонецЦикла;				

КонецПроцедуры	

Функция РегистрируемыеДокументовПереносДанныхРесурсы()
	Ресурсы = Новый Массив;
	
	Ресурсы.Добавить("ВидСтажаПФР");
	Ресурсы.Добавить("Организация");
	Ресурсы.Добавить("Подразделение");
	Ресурсы.Добавить("ДолжностьПоШтатномуРасписанию");
	Ресурсы.Добавить("ГрафикРаботы");
	Ресурсы.Добавить("Должность");
	Ресурсы.Добавить("КоличествоСтавок");
	
	Возврат Ресурсы;
КонецФункции	

Функция НеобработанныеДокументыПереносДанных()
	СписокДокументов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПереносДанных.Ссылка
	|ИЗ
	|	Документ.ПереносДанных КАК ПереносДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ПО ПараметрыПериодовСтажаПФР.Регистратор = ПереносДанных.Ссылка
	|ГДЕ
	|	ПараметрыПериодовСтажаПФР.Регистратор ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокДокументов.Добавить(Выборка.Ссылка);
	КонецЦикла;	
	
	Возврат СписокДокументов;
КонецФункции	

Функция ВыборкаДанныхУчетаСтажаПоДокументамПереносДанных(МассивСсылок)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска) КАК КатегорияНачисления,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускОсновной) КАК Состояние
	|ПОМЕСТИТЬ ВТСоответствиеКатегорийНачисленийСостояниям
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускБезОплаты),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускНеоплачиваемыйПоЗаконодательству)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.НеявкаПоНевыясненнымПричинам),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтсутствиеПоНевыясненнымПричинам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.НеявкаПоБолезни),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Болезнь)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.Прогул),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Прогул)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПростойПоВинеРаботника),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ПростойПоВинеРаботника)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПростояПоВинеРаботодателя),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ПростойПоВинеРаботодателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПростояПоНезависящимОтРаботодателяПричинам),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ПростойНеЗависящийОтРаботодателяИРаботника)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаКомандировки),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Командировка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПоСреднемуЗаработку),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ВыполнениеГосударственныхОбязанностей)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Болезнь)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Болезнь)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Болезнь)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Болезнь)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаДнейУходаЗаДетьмиИнвалидами),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ДополнительныеВыходныеДниОплачиваемые)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеОплатаДнейУходаЗаДетьмиИнвалидами),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ДополнительныеВыходныеДниОплачиваемые)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.БолезньБезОплаты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускПоБеременностиИРодам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодамБезОплаты),
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускПоБеременностиИРодам)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрименениеПлановыхНачислений.Сотрудник КАК Сотрудник,
	|	ПрименениеПлановыхНачислений.Период КАК Период,
	|	ПрименениеПлановыхНачислений.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТОтпускаПоУходу
	|ИЗ
	|	РегистрСведений.ПрименениеПлановыхНачислений КАК ПрименениеПлановыхНачислений
	|ГДЕ
	|	ПрименениеПлановыхНачислений.Регистратор В(&МассивСсылок)
	|	И НЕ ПрименениеПлановыхНачислений.Применение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускаПоУходу.Сотрудник КАК Сотрудник,
	|	ОтпускаПоУходу.Период КАК ДатаНачалаСобытия,
	|	ОтпускаПоУходу.Период КАК ДатаНачала,
	|	ПлановыеНачисления.ДействуетДо КАК ДатаОкончанияПособияДоПолутораЛет,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.Период ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВыплачиватьПособиеДоПолутораЛет,
	|	ОтпускаПоУходу.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТДанныеОтпусковПоУходу
	|ИЗ
	|	ВТОтпускаПоУходу КАК ОтпускаПоУходу
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисления КАК ПлановыеНачисления
	|		ПО ОтпускаПоУходу.Сотрудник = ПлановыеНачисления.Сотрудник
	|			И (ОтпускаПоУходу.Период = НАЧАЛОПЕРИОДА(ПлановыеНачисления.Период, ДЕНЬ))
	|			И (ПлановыеНачисления.Начисление.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоПолутораЛет))
	|			И (ПлановыеНачисления.Используется)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрименениеПлановыхНачислений.Сотрудник КАК Сотрудник,
	|	ПрименениеПлановыхНачислений.Период КАК ДатаНачала,
	|	ПрименениеПлановыхНачислений.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии) КАК ВидСтажаПФР
	|ПОМЕСТИТЬ ВТВозвратыИзОтпусковПоУходу
	|ИЗ
	|	РегистрСведений.ПрименениеПлановыхНачислений КАК ПрименениеПлановыхНачислений
	|ГДЕ
	|	ПрименениеПлановыхНачислений.Регистратор В(&МассивСсылок)
	|	И ПрименениеПлановыхНачислений.Применение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	Начисления.ВидСтажаПФР2014 КАК ВидСтажаПФР,
	|	СоответствиеКатегорийНачисленийСостояниям.Состояние КАК Состояние
	|ПОМЕСТИТЬ ВТНачисленияОтклонения
	|ИЗ
	|	ВТСоответствиеКатегорийНачисленийСостояниям КАК СоответствиеКатегорийНачисленийСостояниям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|		ПО СоответствиеКатегорийНачисленийСостояниям.КатегорияНачисления = Начисления.КатегорияНачисленияИлиНеоплаченногоВремени
	|			И (Начисления.ВидСтажаПФР2014 <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.ПериодДействияНачало КАК ДатаНачала,
	|	Начисления.ПериодДействияКонец КАК ДатаОкончания,
	|	НачисленияОтклонения.ВидСтажаПФР КАК ВидСтажаПФР,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.Сторно КАК Сторно,
	|	НачисленияОтклонения.Начисление КАК Начисление,
	|	НачисленияОтклонения.Состояние КАК Состояние
	|ПОМЕСТИТЬ ВТОтклонения
	|ИЗ
	|	ВТНачисленияОтклонения КАК НачисленияОтклонения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
	|		ПО НачисленияОтклонения.Начисление = Начисления.ВидРасчета
	|			И (Начисления.ПериодДействия >= ДАТАВРЕМЯ(2010, 1, 1))
	|			И (Начисления.Регистратор В (&МассивСсылок))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадроваяИсторияСотрудников.Период КАК Период,
	|	КадроваяИсторияСотрудников.Регистратор КАК Регистратор,
	|	КадроваяИсторияСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой) КАК ТипДоговора,
	|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
	|	КадроваяИсторияСотрудников.Период КАК ДатаНачала,
	|	КадроваяИсторияСотрудников.ДействуетДо КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|		КОГДА КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перемещение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|		КОГДА КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.увольнение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
	|		КОГДА КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.НачальныеДанные)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|	КОНЕЦ КАК Состояние,
	|	ВЫБОР
	|		КОГДА КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии)
	|		КОГДА КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перемещение)
	|			ТОГДА NULL
	|		КОГДА КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.увольнение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
	|		КОГДА КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.НачальныеДанные)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии)
	|	КОНЕЦ КАК ВидСтажаПФР,
	|	КадроваяИсторияСотрудников.Организация КАК Организация,
	|	КадроваяИсторияСотрудников.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
	|	КадроваяИсторияСотрудников.КоличествоСтавок КАК КоличествоСтавок,
	|	КадроваяИсторияСотрудников.Должность КАК Должность,
	|	NULL КАК ДатаНачалаСобытия,
	|	ЛОЖЬ КАК Сторно,
	|	КадроваяИсторияСотрудников.Подразделение КАК Подразделение,
	|	NULL КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТКадроваяИсторияСотрудников
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|ГДЕ
	|	КадроваяИсторияСотрудников.Регистратор В(&МассивСсылок)";
	
	Запрос.Выполнить();
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ВидыЗанятостиСотрудников",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТКадроваяИсторияСотрудников", "Сотрудник"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КадроваяИсторияСотрудников.Регистратор КАК Регистратор,
	|	КадроваяИсторияСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадроваяИсторияСотрудников.ТипДоговора КАК ТипДоговора,
	|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
	|	КадроваяИсторияСотрудников.ДатаНачала КАК ДатаНачала,
	|	КадроваяИсторияСотрудников.ДатаОкончания КАК ДатаОкончания,
	|	КадроваяИсторияСотрудников.Состояние КАК Состояние,
	|	КадроваяИсторияСотрудников.ВидСтажаПФР КАК ВидСтажаПФР,
	|	ВидыЗанятости.ВидЗанятости КАК ВидЗанятости,
	|	КадроваяИсторияСотрудников.Организация КАК Организация,
	|	КадроваяИсторияСотрудников.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
	|	КадроваяИсторияСотрудников.КоличествоСтавок КАК КоличествоСтавок,
	|	КадроваяИсторияСотрудников.Должность КАК Должность,
	|	КадроваяИсторияСотрудников.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|	КадроваяИсторияСотрудников.Сторно КАК Сторно,
	|	КадроваяИсторияСотрудников.Подразделение КАК Подразделение,
	|	КадроваяИсторияСотрудников.ГрафикРаботы КАК ГрафикРаботы
	|ИЗ
	|	ВТКадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыЗанятостиСотрудниковСрезПоследних КАК ВидыЗанятости
	|		ПО КадроваяИсторияСотрудников.Период = ВидыЗанятости.Период
	|			И КадроваяИсторияСотрудников.Сотрудник = ВидыЗанятости.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеОтпусковПоУходу.Регистратор,
	|	Сотрудники.ГоловнаяОрганизация,
	|	Сотрудники.ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой),
	|	ДанныеОтпусковПоУходу.Сотрудник,
	|	ДанныеОтпусковПоУходу.ДатаНачала,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускПоУходуЗаРебенком),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.Дети),
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ДанныеОтпусковПоУходу.ДатаНачалаСобытия,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТДанныеОтпусковПоУходу КАК ДанныеОтпусковПоУходу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ДанныеОтпусковПоУходу.Сотрудник = Сотрудники.Ссылка
	|			И (ДанныеОтпусковПоУходу.ВыплачиватьПособиеДоПолутораЛет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеОтпусковПоУходу.Регистратор,
	|	Сотрудники.ГоловнаяОрганизация,
	|	Сотрудники.ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой),
	|	ДанныеОтпусковПоУходу.Сотрудник,
	|	ВЫБОР
	|		КОГДА ДанныеОтпусковПоУходу.ВыплачиватьПособиеДоПолутораЛет
	|			ТОГДА ДанныеОтпусковПоУходу.ДатаОкончанияПособияДоПолутораЛет
	|		ИНАЧЕ ДанныеОтпусковПоУходу.ДатаНачала
	|	КОНЕЦ,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускПоУходуЗаРебенком),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ДЛДети),
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ДанныеОтпусковПоУходу.ДатаНачалаСобытия,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТДанныеОтпусковПоУходу КАК ДанныеОтпусковПоУходу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ДанныеОтпусковПоУходу.Сотрудник = Сотрудники.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Отклонения.Регистратор,
	|	Сотрудники.ГоловнаяОрганизация,
	|	Отклонения.ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой),
	|	Отклонения.Сотрудник,
	|	Отклонения.ДатаНачала,
	|	Отклонения.ДатаОкончания,
	|	Отклонения.Состояние,
	|	Отклонения.ВидСтажаПФР,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Отклонения.Сторно,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТОтклонения КАК Отклонения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО Отклонения.Сотрудник = Сотрудники.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Регистратор,
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник.ГоловнаяОрганизация,
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ГражданскоПравовой),
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник,
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаНачала,
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаОкончания,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии),
	|	НЕОПРЕДЕЛЕНО,
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Организация,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
	|ГДЕ
	|	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Регистратор В(&МассивСсылок)
	|	И (ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаОкончания >= ДАТАВРЕМЯ(2010, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратыИзОтпусковПоУходу.Регистратор,
	|	Сотрудники.ГоловнаяОрганизация,
	|	Сотрудники.ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой),
	|	ВозвратыИзОтпусковПоУходу.Сотрудник,
	|	ВозвратыИзОтпусковПоУходу.ДатаНачала,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа),
	|	ВозвратыИзОтпусковПоУходу.ВидСтажаПФР,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТВозвратыИзОтпусковПоУходу КАК ВозвратыИзОтпусковПоУходу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ВозвратыИзОтпусковПоУходу.Сотрудник = Сотрудники.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГрафикРаботыСотрудников.Регистратор,
	|	ГрафикРаботыСотрудников.ГоловнаяОрганизация,
	|	ГрафикРаботыСотрудников.Сотрудник.ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой),
	|	ГрафикРаботыСотрудников.Сотрудник,
	|	ГрафикРаботыСотрудников.Период,
	|	ГрафикРаботыСотрудников.ДействуетДо,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа),
	|	NULL,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	ГрафикРаботыСотрудников.ГрафикРаботы
	|ИЗ
	|	РегистрСведений.ГрафикРаботыСотрудников КАК ГрафикРаботыСотрудников
	|ГДЕ
	|	ГрафикРаботыСотрудников.Регистратор В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	ТипДоговора,
	|	Сотрудник,
	|	ДатаНачала,
	|	Состояние";

	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции	

// Первоначальное заполнение данных вторичного регистра.

Процедура ЗаполнитьПервоначальныеДанныеВторичногоРегистра() 
	ПоследнееОбработанноеФизическоеЛицо = Неопределено;
	
	ПродолжатьОбновление = Истина;
	
	Пока ПродолжатьОбновление Цикл
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПоследнееФизическоеЛицоВыборки = СоздатьВТПорцияФизическихЛицДляОбновления(МенеджерВременныхТаблиц, ПоследнееОбработанноеФизическоеЛицо);
		
		ИзмеренияОтбора = Новый Массив;
		ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		
		ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора, Истина);
		
		Если ПоследнееФизическоеЛицоВыборки = Неопределено Тогда
			ПродолжатьОбновление = Ложь;
		Иначе
			ПоследнееОбработанноеФизическоеЛицо = ПоследнееФизическоеЛицоВыборки;
		КонецЕсли;
	КонецЦикла;	
			
КонецПроцедуры	

Функция СоздатьВТПорцияФизическихЛицДляОбновления(МенеджерВременныхТаблиц, ПоследнееОбработанноеФизическоеЛицо = Неопределено)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстУсловияФизическоеЛицо = "ИСТИНА";
	Если ПоследнееОбработанноеФизическоеЛицо <> Неопределено Тогда
		Запрос.УстановитьПараметр("ПоследнееОбработанноеФизическоеЛицо", ПоследнееОбработанноеФизическоеЛицо);
		
		ТекстУсловияФизическоеЛицо = "ПараметрыПериодовСтажаПФР.ФизическоеЛицо > &ПоследнееОбработанноеФизическоеЛицо";
	КонецЕсли;	
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Начало,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Окончание
	|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФР
	|		ПО ПараметрыПериодовСтажаПФР.ФизическоеЛицо = ПериодыСтажаПФР.ФизическоеЛицо
	|ГДЕ
	|	ПериодыСтажаПФР.ФизическоеЛицо ЕСТЬ NULL 
	|	И &УсловиеФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТКлючиИзменившихсяДанных КАК ФизическиеЛица
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо УБЫВ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ФизическоеЛицо;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции	

Процедура ЗаполнитьПолеГоловнаяОрганизацияВРегистреИспр(ПараметрыОбновления = Неопределено) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.ФизическоеЛицо,
	|	Сотрудники.ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТГоловныеОрганизацииФизическихЛицПредварительно
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГоловныеОрганизацииФизическихЛиц.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛицаСОднойОрганизацией
	|ИЗ
	|	ВТГоловныеОрганизацииФизическихЛицПредварительно КАК ГоловныеОрганизацииФизическихЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	ГоловныеОрганизацииФизическихЛиц.ФизическоеЛицо
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ГоловныеОрганизацииФизическихЛиц.ГоловнаяОрганизация) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГоловныеОрганизацииФизическихЛицПредварительно.ФизическоеЛицо,
	|	ГоловныеОрганизацииФизическихЛицПредварительно.ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТГоловныеОрганизацииФизическихЛиц
	|ИЗ
	|	ВТГоловныеОрганизацииФизическихЛицПредварительно КАК ГоловныеОрганизацииФизическихЛицПредварительно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСОднойОрганизацией КАК ФизическиеЛицаСОднойОрганизацией
	|		ПО ГоловныеОрганизацииФизическихЛицПредварительно.ФизическоеЛицо = ФизическиеЛицаСОднойОрганизацией.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыПериодовСтажаПФРИспр.РегистраторИзмерение КАК РегистраторИзмерение
	|ПОМЕСТИТЬ ВТКлючиОбновляемыхДанных
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФРИспр КАК ПараметрыПериодовСтажаПФРИспр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоловныеОрганизацииФизическихЛиц КАК ГоловныеОрганизацииФизическихЛиц
	|		ПО ПараметрыПериодовСтажаПФРИспр.ФизическоеЛицо = ГоловныеОрганизацииФизическихЛиц.ФизическоеЛицо
	|ГДЕ
	|	ПараметрыПериодовСтажаПФРИспр.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И (НЕ ГоловныеОрганизацииФизическихЛиц.ФизическоеЛицо ЕСТЬ NULL 
	|			ИЛИ ПараметрыПериодовСтажаПФРИспр.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыПериодовСтажаПФРИспр.РегистраторИзмерение КАК РегистраторИзмерение,
	|	ВЫБОР
	|		КОГДА ПараметрыПериодовСтажаПФРИспр.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПараметрыПериодовСтажаПФРИспр.ГоловнаяОрганизация
	|		КОГДА ГоловныеОрганизацииФизическихЛиц.ГоловнаяОрганизация ЕСТЬ NULL 
	|			ТОГДА ПараметрыПериодовСтажаПФРИспр.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ ГоловныеОрганизацииФизическихЛиц.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ПараметрыПериодовСтажаПФРИспр.ФизическоеЛицо,
	|	ПараметрыПериодовСтажаПФРИспр.ТипДоговора,
	|	ПараметрыПериодовСтажаПФРИспр.Начало,
	|	ПараметрыПериодовСтажаПФРИспр.Окончание,
	|	ПараметрыПериодовСтажаПФРИспр.Приоритет,
	|	ПараметрыПериодовСтажаПФРИспр.Сторно,
	|	ПараметрыПериодовСтажаПФРИспр.ДокументОснование,
	|	ПараметрыПериодовСтажаПФРИспр.ДатаНачалаСобытия,
	|	ПараметрыПериодовСтажаПФРИспр.Сотрудник,
	|	ПараметрыПериодовСтажаПФРИспр.ВидСтажаПФР,
	|	ПараметрыПериодовСтажаПФРИспр.Организация,
	|	ПараметрыПериодовСтажаПФРИспр.Подразделение,
	|	ПараметрыПериодовСтажаПФРИспр.ДолжностьПоШтатномуРасписанию,
	|	ПараметрыПериодовСтажаПФРИспр.ГрафикРаботы,
	|	ПараметрыПериодовСтажаПФРИспр.Должность,
	|	ПараметрыПериодовСтажаПФРИспр.КоличествоСтавок,
	|	ПараметрыПериодовСтажаПФРИспр.Территория,
	|	ПараметрыПериодовСтажаПФРИспр.УсловияТруда,
	|	ПараметрыПериодовСтажаПФРИспр.ТерриториальныеУсловия,
	|	ПараметрыПериодовСтажаПФРИспр.УдалитьТерриториальныеУсловия,
	|	ПараметрыПериодовСтажаПФРИспр.ОсобыеУсловияТруда,
	|	ПараметрыПериодовСтажаПФРИспр.УдалитьОсобыеУсловияТруда,
	|	ПараметрыПериодовСтажаПФРИспр.ОснованиеВыслугиЛет,
	|	ПараметрыПериодовСтажаПФРИспр.ВнутреннееСовместительство,
	|	ПараметрыПериодовСтажаПФРИспр.УдалитьОснованиеВыслугиЛет,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаВидСтажаПФР,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаОрганизация,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаПодразделение,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаДолжностьПоШтатномуРасписанию,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаДолжность,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаГрафикРаботы,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаКоличествоСтавок,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаТерритория,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаУсловияТруда,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаТерриториальныеУсловия,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаОсобыеУсловияТруда,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаОснованиеВыслугиЛет,
	|	ПараметрыПериодовСтажаПФРИспр.ИспользованиеРесурсаВнутреннееСовместительство
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФРИспр КАК ПараметрыПериодовСтажаПФРИспр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКлючиОбновляемыхДанных КАК КлючиОбновляемыхДанных
	|		ПО ПараметрыПериодовСтажаПФРИспр.РегистраторИзмерение = КлючиОбновляемыхДанных.РегистраторИзмерение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоловныеОрганизацииФизическихЛиц КАК ГоловныеОрганизацииФизическихЛиц
	|		ПО ПараметрыПериодовСтажаПФРИспр.ФизическоеЛицо = ГоловныеОрганизацииФизическихЛиц.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистраторИзмерение";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина); 
		Возврат;
	КонецЕсли;	
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.СледующийПоЗначениюПоля("РегистраторИзмерение") Цикл
		Набор = РегистрыСведений.ПараметрыПериодовСтажаПФРИспр.СоздатьНаборЗаписей();
		Набор.Отбор.РегистраторИзмерение.Установить(Выборка.РегистраторИзмерение);
		Набор.ОбменДанными.Загрузка = Истина;
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.ПараметрыПериодовСтажаПФРИспр", "РегистраторИзмерение", Выборка.РегистраторИзмерение) Тогда 
			Продолжить;
		КонецЕсли;	
		
		Пока Выборка.Следующий() Цикл
			ЗаписьНабора = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, Выборка);
		КонецЦикла;
		
		Набор.Записать();
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;	
	
	
КонецПроцедуры	

Процедура ЗаполнитьПолеСотрудникВРегистрахУчетаИспр(ПараметрыОбновления = Неопределено) Экспорт 
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыПериодовСтажаПФР.РегистраторИзмерение КАК РегистраторИзмерение,
	|	ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация,
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо,
	|	ПараметрыПериодовСтажаПФР.Начало
	|ПОМЕСТИТЬ ВТЗаписиКОбновлению
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФРИспр КАК ПараметрыПериодовСтажаПФР
	|ГДЕ
	|	ПараметрыПериодовСтажаПФР.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И ПараметрыПериодовСтажаПФР.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|	И 1 В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				1 КАК Поле1
	|			ИЗ
	|				Справочник.Сотрудники КАК Сотрудники
	|			ГДЕ
	|				Сотрудники.ФизическоеЛицо = ПараметрыПериодовСтажаПФР.ФизическоеЛицо
	|				И Сотрудники.ГоловнаяОрганизация = ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПараметрыПериодовСтажаПФР.РегистраторИзмерение,
	|	ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация,
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо,
	|	ПараметрыПериодовСтажаПФР.Начало
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФРИспр КАК ПараметрыПериодовСтажаПФР
	|ГДЕ
	|	ПараметрыПериодовСтажаПФР.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|	И ПараметрыПериодовСтажаПФР.ИспользованиеРесурсаВнутреннееСовместительство = ЗНАЧЕНИЕ(Перечисление.ЗначениеРесурсаРегистровСостоянийСотрудника.ПустаяСсылка)
	|	И ПараметрыПериодовСтажаПФР.ИспользованиеРесурсаПодразделение = ЗНАЧЕНИЕ(Перечисление.ЗначениеРесурсаРегистровСостоянийСотрудника.Установлено)
	|	И ПараметрыПериодовСтажаПФР.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	ВТЗаписиКОбновлению";
	
	Если Запрос.Выполнить().Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина); 
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);

	УчетСтажаПФР.ЗаполнитьПолеСотрудникВРегистре(МенеджерВременныхТаблиц, "ПараметрыПериодовСтажаПФРИспр", "РегистраторИзмерение", ПараметрыОбновления);	
КонецПроцедуры	

#КонецОбласти
	

#КонецОбласти	