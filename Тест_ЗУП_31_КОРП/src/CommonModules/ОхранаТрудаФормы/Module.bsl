////////////////////////////////////////////////////////////////////////////////
// Подсистема "Охрана труда"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Создает команду "Кадровый резерв" в формах элементов Сотрудники и ФизическиеЛица
//
Процедура СоздатьКомандуОхранаТрудаВФормеСотрудника(Форма, ГруппаКнопки) Экспорт
	
	Если Форма.Команды.Найти("ОхранаТруда") = Неопределено Тогда
		КомандаКадровыйРезерв = Форма.Команды.Добавить("ОхранаТруда");
		КомандаКадровыйРезерв.Действие = "Подключаемый_ОхранаТруда";
		КомандаКадровыйРезерв.Заголовок = НСтр("ru = 'Охрана труда'");
	КонецЕсли;
	
	// Добавляем кнопку
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСпециальнуюОценкуУсловийТруда")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьИнструктажиПоОхранеТруда") Тогда
		Если Форма.Элементы.Найти("ОхранаТруда") = Неопределено Тогда
			Элемент = Форма.Элементы.Вставить("ОхранаТруда", Тип("КнопкаФормы"), ГруппаКнопки);
			Элемент.Вид = ВидКнопкиФормы.Гиперссылка;
			Элемент.ИмяКоманды = "ОхранаТруда"; 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ОтветственныеЛица

Процедура ДополнитьФормуОтветственныхЛицОрганизации(Форма, ИмяНабораЗаписей, ИмяГруппы) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСпециальнуюОценкуУсловийТруда")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьИнструктажиПоОхранеТруда")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьНесчастныеСлучаиНаПроизводстве") Тогда
		
		Элементы = Форма.Элементы;
		ГруппаОтветственныйЗаОхрануТруда = Элементы[ИмяГруппы];
		
		ОтветственныйЗаОхрануТруда = Элементы.Найти("СведенияОбОтветственныхЛицахОтветственныйЗаОхрануТруда");
		Если ОтветственныйЗаОхрануТруда = Неопределено Тогда
			Элемент = Элементы.Добавить("СведенияОбОтветственныхЛицахОтветственныйЗаОхрануТруда", Тип("ПолеФормы"), ГруппаОтветственныйЗаОхрануТруда);
			Элемент.ПутьКДанным = ИмяНабораЗаписей + ".ОтветственныйЗаОхрануТруда";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
		КонецЕсли;
		ДолжностьОтветственногоЗаОхрануТруда = Элементы.Найти("СведенияОбОтветственныхЛицахДолжностьОтветственногоЗаОхрануТруда");
		Если ДолжностьОтветственногоЗаОхрануТруда = Неопределено Тогда
			Элемент = Элементы.Добавить("СведенияОбОтветственныхЛицахДолжностьОтветственногоЗаОхрануТруда", Тип("ПолеФормы"), ГруппаОтветственныйЗаОхрануТруда);
			Элемент.ПутьКДанным = ИмяНабораЗаписей + ".ДолжностьОтветственногоЗаОхрануТруда";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПозицияШтатногоРасписания

Процедура ДополнитьФормуПозицииШтатногоРасписания(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	ДобавляемыеРеквизиты = Новый Массив;
	//Спецоценка
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьСпециальнуюОценкуУсловийТруда", Новый ОписаниеТипов("Булево")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("НомераРабочихМестСпециальнойОценкиУсловийТруда", Новый ОписаниеТипов("РегистрСведенийМенеджерЗаписи.НомераРабочихМестСпециальнойОценкиУсловийТруда"),,, Истина));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("НомераРабочихМестСпециальнойОценкиУсловийТрудаПрежняя", Новый ОписаниеТипов("Неопределено")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("АналогичноеРабочееМесто", Новый ОписаниеТипов("СправочникСсылка.ШтатноеРасписание")));
	// Инструктажи
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИнструктажиПоРабочимМестам", Новый ОписаниеТипов("ТаблицаЗначений"),,, Истина));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Инструктаж", Новый ОписаниеТипов("СправочникСсылка.ВидыИнструктажейПоОхранеТруда"), "ИнструктажиПоРабочимМестам"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Период", ОбщегоНазначения.ОписаниеТипаСтрока(50), "ИнструктажиПоРабочимМестам"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Используется", Новый ОписаниеТипов("Булево"), "ИнструктажиПоРабочимМестам"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользуетсяДляВсехРабочихМест", Новый ОписаниеТипов("Булево"), "ИнструктажиПоРабочимМестам"));
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	
	УстановитьУсловноеОформление = Ложь;
	Если МассивИменРеквизитовФормы.Найти("ИспользоватьСпециальнуюОценкуУсловийТруда") = Неопределено Тогда
		ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
		УстановитьУсловноеОформление = Истина;
	КонецЕсли;
	
	Форма.ИспользоватьСпециальнуюОценкуУсловийТруда = ПолучитьФункциональнуюОпцию("ИспользоватьСпециальнуюОценкуУсловийТруда");
	
	Если Форма.ИспользоватьСпециальнуюОценкуУсловийТруда Тогда
		ГруппаСпецоценкаУсловийТруда = Элементы.ГруппаСпецоценкаУсловийТрудаДополнительно;
		Если Элементы.Найти("НомераРабочихМестСпециальнойОценкиУсловийТрудаНомер") = Неопределено
			И ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда) Тогда
			Элемент = Элементы.Добавить("НомераРабочихМестСпециальнойОценкиУсловийТрудаНомер", Тип("ПолеФормы"), ГруппаСпецоценкаУсловийТруда);
			Элемент.ПутьКДанным = "НомераРабочихМестСпециальнойОценкиУсловийТруда.Номер";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
			Элемент.РастягиватьПоГоризонтали = Ложь;
			Элемент.РасширеннаяПодсказка.Заголовок = НСтр("ru = 'Номер рабочего места используется при формировании перечня рабочих мест, подлежащих специальной оценке условий труда'");
			Элемент.ТолькоПросмотр = Форма.ВнешниеДанные;
		КонецЕсли;
		Если Элементы.Найти("АналогичноеРабочееМесто") = Неопределено
			И ПравоДоступа("Чтение", Метаданные.РегистрыСведений.АналогичныеРабочиеМестаСпециальнойОценкиУсловийТруда) Тогда
			Элемент = Элементы.Добавить("АналогичноеРабочееМесто", Тип("ПолеФормы"), ГруппаСпецоценкаУсловийТруда);
			Элемент.ПутьКДанным = "АналогичноеРабочееМесто";
			Элемент.Заголовок = НСтр("ru = 'Рабочее место аналогично'");
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьИнструктажиПоОхранеТруда")
		И ПравоДоступа("Чтение", Метаданные.Справочники.ВидыИнструктажейПоОхранеТруда) Тогда
		
		ГруппаИнструктажи = Элементы.ГруппаИнструктажиПоОхранеТруда;
		ТаблицаИнструктажей = Элементы.Найти("ИнструктажиПоРабочимМестам");
		Если ТаблицаИнструктажей = Неопределено Тогда
			ТаблицаИнструктажей = Элементы.Добавить("ИнструктажиПоРабочимМестам", Тип("ТаблицаФормы"), ГруппаИнструктажи);
			ТаблицаИнструктажей.ПутьКДанным = "ИнструктажиПоРабочимМестам";
			ТаблицаИнструктажей.Отображение = ОтображениеТаблицы.Список;
			ТаблицаИнструктажей.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
			ТаблицаИнструктажей.КонтекстноеМеню.Видимость = Ложь;
			ТаблицаИнструктажей.ИзменятьСоставСтрок = Ложь;
			ТаблицаИнструктажей.ИзменятьПорядокСтрок = Ложь;
			ТаблицаИнструктажей.Шапка = Ложь;;
		КонецЕсли;
		Если Элементы.Найти("ИнструктажиПоРабочимМестамИспользуется") = Неопределено Тогда
			Элемент = Элементы.Добавить("ИнструктажиПоРабочимМестамИспользуется", Тип("ПолеФормы"), ТаблицаИнструктажей);
			Элемент.ПутьКДанным = "ИнструктажиПоРабочимМестам.Используется";
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		КонецЕсли;
		Если Элементы.Найти("ИнструктажиПоРабочимМестамИнструктаж") = Неопределено Тогда
			Элемент = Элементы.Добавить("ИнструктажиПоРабочимМестамИнструктаж", Тип("ПолеФормы"), ТаблицаИнструктажей);
			Элемент.ПутьКДанным = "ИнструктажиПоРабочимМестам.Инструктаж";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
		КонецЕсли;
		Если Элементы.Найти("ИнструктажиПоРабочимМестамПериод") = Неопределено Тогда
			Элемент = Элементы.Добавить("ИнструктажиПоРабочимМестамПериод", Тип("ПолеФормы"), ТаблицаИнструктажей);
			Элемент.ПутьКДанным = "ИнструктажиПоРабочимМестам.Период";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
		КонецЕсли;
		Если УстановитьУсловноеОформление Тогда
			ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
			
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ИнструктажиПоРабочимМестамИспользуется");
			
			ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИнструктажиПоРабочимМестам.ИспользуетсяДляВсехРабочихМест");
			ЭлементОтбора.ПравоеЗначение = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочитатьДополнительныеЗначенияПозицииШтатногоРасписания(Форма, РабочееМесто) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСпециальнуюОценкуУсловийТруда") Тогда
	
		Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.АналогичныеРабочиеМестаСпециальнойОценкиУсловийТруда) Тогда
			МенеджерЗаписи = РегистрыСведений.АналогичныеРабочиеМестаСпециальнойОценкиУсловийТруда.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.АналогичноеРабочееМесто = РабочееМесто;
			МенеджерЗаписи.Прочитать();
			Форма.АналогичноеРабочееМесто = МенеджерЗаписи.РабочееМесто;
		КонецЕсли;
		
		МетаданныеРегистра = Метаданные.РегистрыСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда;
		Если ПравоДоступа("Чтение", МетаданныеРегистра) Тогда
			МенеджерЗаписи = РегистрыСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.РабочееМесто = РабочееМесто;
			МенеджерЗаписи.Прочитать();
			Если Не ЗначениеЗаполнено(МенеджерЗаписи.РабочееМесто) Тогда
				// Если это новая позиция штатного расписания и для нее еще не установлен номер рабочего места.
				МенеджерЗаписи.РабочееМесто = РабочееМесто;
			КонецЕсли;
			Форма.ЗначениеВРеквизитФормы(МенеджерЗаписи, "НомераРабочихМестСпециальнойОценкиУсловийТруда");
			
			ЗаписьКакСтруктура = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(МенеджерЗаписи, МетаданныеРегистра);
			Форма.НомераРабочихМестСпециальнойОценкиУсловийТрудаПрежняя = Новый ФиксированнаяСтруктура(ЗаписьКакСтруктура);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьИнструктажиПоОхранеТруда")
		И ПравоДоступа("Чтение", Метаданные.Справочники.ВидыИнструктажейПоОхранеТруда) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВидыИнструктажейПоОхранеТруда.Ссылка КАК Инструктаж,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВидыИнструктажейПоОхранеТруда.ИспользоватьДляВсехРабочихМест
		|					ИЛИ ВидыИнструктажейПоОхранеТрудаРабочиеМеста.РабочееМесто = &РабочееМесто
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК Используется,
		|	ВидыИнструктажейПоОхранеТруда.ПредставлениеПериода КАК Период,
		|	ВидыИнструктажейПоОхранеТруда.ИспользоватьДляВсехРабочихМест КАК ИспользуетсяДляВсехРабочихМест
		|ИЗ
		|	Справочник.ВидыИнструктажейПоОхранеТруда КАК ВидыИнструктажейПоОхранеТруда
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыИнструктажейПоОхранеТруда.РабочиеМеста КАК ВидыИнструктажейПоОхранеТрудаРабочиеМеста
		|		ПО ВидыИнструктажейПоОхранеТруда.Ссылка = ВидыИнструктажейПоОхранеТрудаРабочиеМеста.Ссылка
		|ГДЕ
		|	ВидыИнструктажейПоОхранеТруда.КонтролироватьПроведениеИнструктажа
		|
		|СГРУППИРОВАТЬ ПО
		|	ВидыИнструктажейПоОхранеТруда.Ссылка,
		|	ВидыИнструктажейПоОхранеТруда.ПредставлениеПериода,
		|	ВидыИнструктажейПоОхранеТруда.ИспользоватьДляВсехРабочихМест";
		
		Форма.ИнструктажиПоРабочимМестам.Очистить();
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Форма.ИнструктажиПоРабочимМестам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПозицииШтатногоРасписания(Форма, ПроверяемыеРеквизиты, Отказ) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСпециальнуюОценкуУсловийТруда")
		И ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НомерРабочегоМеста", Форма.НомераРабочихМестСпециальнойОценкиУсловийТруда.Номер);
		Запрос.УстановитьПараметр("Ссылка", ?(ЗначениеЗаполнено(Форма.СсылкаНаОбъект), Форма.СсылкаНаОбъект, Форма.РедактируемаяПозиция));
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НомераРабочихМестСпециальнойОценкиУсловийТруда.РабочееМесто,
		|	НомераРабочихМестСпециальнойОценкиУсловийТруда.Номер
		|ИЗ
		|	РегистрСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда КАК НомераРабочихМестСпециальнойОценкиУсловийТруда
		|ГДЕ
		|	НомераРабочихМестСпециальнойОценкиУсловийТруда.Номер = &НомерРабочегоМеста
		|	И НомераРабочихМестСпециальнойОценкиУсловийТруда.РабочееМесто <> &Ссылка";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Номер рабочего места %1 используется в %2.'"),
				Выборка.Номер, Выборка.РабочееМесто);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "НомераРабочихМестСпециальнойОценкиУсловийТруда.Номер", , Отказ);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьДополнительныеЗначенияПозицииШтатногоРасписания(Форма, СсылкаНаОбъект) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСпециальнуюОценкуУсловийТруда")
		И ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда) Тогда
		
		Если Форма.НомераРабочихМестСпециальнойОценкиУсловийТруда <> Неопределено
			И Форма.НомераРабочихМестСпециальнойОценкиУсловийТруда.Номер <> Форма.НомераРабочихМестСпециальнойОценкиУсловийТрудаПрежняя.Номер Тогда
			Набор = РегистрыСведений.НомераРабочихМестСпециальнойОценкиУсловийТруда.СоздатьНаборЗаписей();
			Набор.Отбор.РабочееМесто.Установить(СсылкаНаОбъект);
			
			НоваяЗапись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Форма.НомераРабочихМестСпециальнойОценкиУсловийТруда);
			НоваяЗапись.Организация = СсылкаНаОбъект.Владелец;
			НоваяЗапись.РабочееМесто = СсылкаНаОбъект;
			
			Набор.Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьИнструктажиПоОхранеТруда")
		И ПравоДоступа("Изменение", Метаданные.Справочники.ВидыИнструктажейПоОхранеТруда) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИнструктажиПоРабочимМестам", Форма.ИнструктажиПоРабочимМестам.Выгрузить());
		Запрос.УстановитьПараметр("РабочееМесто", СсылкаНаОбъект);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИнструктажиПоРабочимМестам.Инструктаж,
		|	ИнструктажиПоРабочимМестам.Используется
		|ПОМЕСТИТЬ ВТИнструктажиПоРабочимМестам
		|ИЗ
		|	&ИнструктажиПоРабочимМестам КАК ИнструктажиПоРабочимМестам
		|ГДЕ
		|	НЕ ИнструктажиПоРабочимМестам.ИспользуетсяДляВсехРабочихМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыИнструктажейПоОхранеТруда.Ссылка КАК Инструктаж,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВидыИнструктажейПоОхранеТруда.ИспользоватьДляВсехРабочихМест
		|					ИЛИ ВидыИнструктажейПоОхранеТрудаРабочиеМеста.РабочееМесто = &РабочееМесто
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК Используется,
		|	ВидыИнструктажейПоОхранеТруда.ПредставлениеПериода КАК Период,
		|	ВидыИнструктажейПоОхранеТруда.ИспользоватьДляВсехРабочихМест КАК ИспользуетсяДляВсехРабочихМест
		|ПОМЕСТИТЬ ВТДанные
		|ИЗ
		|	Справочник.ВидыИнструктажейПоОхранеТруда КАК ВидыИнструктажейПоОхранеТруда
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыИнструктажейПоОхранеТруда.РабочиеМеста КАК ВидыИнструктажейПоОхранеТрудаРабочиеМеста
		|		ПО ВидыИнструктажейПоОхранеТруда.Ссылка = ВидыИнструктажейПоОхранеТрудаРабочиеМеста.Ссылка
		|ГДЕ
		|	ВидыИнструктажейПоОхранеТруда.КонтролироватьПроведениеИнструктажа
		|
		|СГРУППИРОВАТЬ ПО
		|	ВидыИнструктажейПоОхранеТруда.Ссылка,
		|	ВидыИнструктажейПоОхранеТруда.ПредставлениеПериода,
		|	ВидыИнструктажейПоОхранеТруда.ИспользоватьДляВсехРабочихМест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнструктажиПоРабочимМестам.Инструктаж,
		|	ИнструктажиПоРабочимМестам.Используется
		|ИЗ
		|	ВТИнструктажиПоРабочимМестам КАК ИнструктажиПоРабочимМестам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанные КАК Данные
		|		ПО ИнструктажиПоРабочимМестам.Инструктаж = Данные.Инструктаж
		|ГДЕ
		|	НЕ Данные.ИспользуетсяДляВсехРабочихМест
		|	И ИнструктажиПоРабочимМестам.Используется <> Данные.Используется";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Справочник.ВидыИнструктажейПоОхранеТруда");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Инструктаж);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ИнформацияОбОшибке = Неопределено;
			Попытка
				Блокировка.Заблокировать();
			Исключение
				ИнформацияОбОшибке = ИнформацияОбОшибке();
			КонецПопытки;
			Если ИнформацияОбОшибке <> Неопределено Тогда
				ПредставлениеОбъекта = Выборка.Инструктаж.Метаданные().ПредставлениеОбъекта;
				Если ПустаяСтрока(ПредставлениеОбъекта) Тогда
					ПредставлениеОбъекта = Выборка.Инструктаж.Метаданные().Представление();
				КонецЕсли;
				ПредставлениеОбъекта = ПредставлениеОбъекта + " " + Строка(Выборка.Инструктаж);
				ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Не удалось заблокировать объект ""%1"":
					|%2'"),
					ПредставлениеОбъекта,
					КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ИнструктажОбъект = Выборка.Инструктаж.ПолучитьОбъект();
			Если Выборка.Используется Тогда
				НоваяСтрока = ИнструктажОбъект.РабочиеМеста.Добавить();
				НоваяСтрока.РабочееМесто = СсылкаНаОбъект;
			Иначе
				ОтборСтрок = Новый Структура("РабочееМесто", СсылкаНаОбъект);
				НайденныеСтроки = ИнструктажОбъект.РабочиеМеста.НайтиСтроки(ОтборСтрок);
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					ИнструктажОбъект.РабочиеМеста.Удалить(НайденнаяСтрока);
				КонецЦикла;
			КонецЕсли;
			ИнструктажОбъект.Записать();
			
			ЗафиксироватьТранзакцию();
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СпециальнаяОценкаУсловийТруда

Функция КлассыУсловийТрудаДоступныДляИзменения() Экспорт
	Возврат Не ПолучитьФункциональнуюОпцию("ИспользоватьСпециальнуюОценкуУсловийТруда");
КонецФункции

#КонецОбласти

#Область Периодичность

Процедура ПериодичностьДополнитьФорму(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("СписокВыбораПериодов", Новый ОписаниеТипов("СписокЗначений")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроизвольноеЗначениеСпискаВыбора", Новый ОписаниеТипов("Строка")));
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораПериода(Форма, ИмяЭлементаФормы, СписокВыбораПериодов, ПроизвольноеЗначениеСпискаВыбораПериодов) Экспорт
	
	СписокВыбораЭлементаФормы = Форма.Элементы[ИмяЭлементаФормы].СписокВыбора;
	СписокВыбораЭлементаФормы.Очистить();
	Форма.СписокВыбораПериодов.Очистить();
	
	Для каждого ЗначениеСписка Из СписокВыбораПериодов Цикл
		СписокВыбораЭлементаФормы.Добавить(?(ПустаяСтрока(ЗначениеСписка.Представление), ЗначениеСписка.Значение, ЗначениеСписка.Представление));
		Форма.СписокВыбораПериодов.Добавить(ЗначениеСписка.Значение, ЗначениеСписка.Представление);
	КонецЦикла;
	
	Форма.ПроизвольноеЗначениеСпискаВыбора = ПроизвольноеЗначениеСпискаВыбораПериодов;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

