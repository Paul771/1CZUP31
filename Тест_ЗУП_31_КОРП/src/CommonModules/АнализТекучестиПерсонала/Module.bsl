
#Область СлужебныйПрограммныйИнтерфейс

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "АнализТекучестиПерсонала.НачальноеЗаполнениеПодсистемыАнализТекучестиПерсонала";
	Обработчик.НачальноеЗаполнение = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.88";
	Обработчик.Процедура = "АнализТекучестиПерсонала.НачальноеЗаполнениеПодсистемыАнализТекучестиПерсонала";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("1908a417-bb0c-489f-acd1-20cc7e4111a3");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение причин увольнения.'");
	
КонецПроцедуры

Процедура НачальноеЗаполнениеПодсистемыАнализТекучестиПерсонала(ПараметрыОбновления = Неопределено) Экспорт
	
	Если ПараметрыОбновления = Неопределено Тогда
		ПараметрыОбновления = Новый Структура("ОбработкаЗавершена");
	КонецЕсли;
	
	Справочники.ПричиныУвольнений.НачальноеЗаполнение();
	Константы.ИспользоватьАнализТекучестиПерсонала.Установить(Истина);
	
	ПараметрыОбновления.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ПанельНастроекУправлениеПерсоналом

// Обновляет значение константы "АнализаТекучестиПерсонала".
//
// Параметры:
//  Значение - Булево - значение константы.
//
Процедура ОбновитьИспользованиеАнализаТекучестиПерсонала(Знач Значение) Экспорт
	
	Константы.ИспользоватьАнализТекучестиПерсонала.Установить(Значение);
	
КонецПроцедуры

#КонецОбласти

#Область НастройкиВариантовОтчетов

// Содержит настройки размещения вариантов отчетов в панели отчетов.
// Описание см. ЗарплатаКадрыВариантыОтчетов.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.АнализТекучестиПерсонала);
	
КонецПроцедуры

#КонецОбласти

// Возвращает структуру с параметрами для метода СоздатьВТПричиныУвольнений.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц в котором формируется временная таблица.
//			Сотрудник - ссылка на сотрудника
//			ФизическоеЛицо - ссылка на физическое лицо
//			ПричинаHR - Справочника.ПричиныУвольнений - Причина по мнению HR
//			ПричинаРуководитель - Справочника.ПричиныУвольнений - Причина по мнению руководителя
//			ДатаРегистрации - Дата, на которую зарегистрирована причина увольнения сотрудника
//			Комментарий - Строка - комментарий к причине увольнения
//		ИмяВременнойТаблицы - имя временной таблицы - "фильтра".
//		ПоляСвязиТаблиц - Структура с именами полей для связи таблиц, где
//			Ключ - имя поля таблицы "ПричиныУвольненияСотрудников".
//			Значение - имя поля временной таблицы.
//
// Возвращаемое значение:
//		Структура с полями:
//			МенеджерВременныхТаблиц
//			ИмяВременнойТаблицы - имя временной таблицы - "фильтра".
//			ПоляСвязиТаблиц - Структура, см. ПоляСвязиТаблиц.
//			ИмяВТПричиныУвольнений - имя результирующей временной таблицы.
//
Функция ОписательВременныхТаблицДляСоздатьВТПричиныУвольнений(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ПоляСвязиТаблиц = Неопределено) Экспорт
	
	ОписательВременныхТаблиц = Новый Структура;
	
	ОписательВременныхТаблиц.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	ОписательВременныхТаблиц.Вставить("ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	Если ПоляСвязиТаблиц = Неопределено Тогда
		ПоляСвязиТаблиц = Новый Структура("Сотрудник", "Сотрудник");
	КонецЕсли;
	ОписательВременныхТаблиц.Вставить("ПоляСвязиТаблиц", ПоляСвязиТаблиц);
	ОписательВременныхТаблиц.Вставить("ИмяВТПричиныУвольнений", "ВТПричиныУвольнений");
	
	Возврат ОписательВременныхТаблиц;
	
КонецФункции

// Формирует временную таблицу ВТПричиныУвольнений, содержащую причины увольнений сотрудников.
//
// Параметры:
//		ОписательВременныхТаблиц - см. описание ОписательВременныхТаблицДляСоздатьВТПричиныУвольнений
//		ТолькоРазрешенные - Истина, если требуется выбрать только разрешенные данные.
//
Процедура СоздатьВТПричиныУвольнений(ОписательВременныхТаблиц, ТолькоРазрешенные = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ОписательВременныхТаблиц.МенеджерВременныхТаблиц;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.ПричиныУвольненияСотрудников;
	Если ПривилегированныйРежим() Тогда 
		ЕстьПравоЧтения = ПравоДоступа("Чтение", МетаданныеРегистра, ПользователиИнформационнойБазы.ТекущийПользователь());
	Иначе
		ЕстьПравоЧтения = ПравоДоступа("Чтение", МетаданныеРегистра);
	КонецЕсли;
	
	Если ЕстьПравоЧтения Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПричиныУвольненияСотрудников.Сотрудник КАК Сотрудник,
		|	ПричиныУвольненияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПричиныУвольненияСотрудников.ПричинаHR КАК ПричинаHR,
		|	ПричиныУвольненияСотрудников.ПричинаРуководитель КАК ПричинаРуководитель,
		|	ПричиныУвольненияСотрудников.ДатаРегистрации КАК ДатаРегистрации,
		|	ПричиныУвольненияСотрудников.ДатаРегистрации КАК Период,
		|	ПричиныУвольненияСотрудников.Комментарий КАК Комментарий
		|ПОМЕСТИТЬ ВТПричиныУвольненийСотрудников
		|ИЗ
		|	РегистрСведений.ПричиныУвольненияСотрудников КАК ПричиныУвольненияСотрудников";
		
		ИмяТаблицы = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТПричиныУвольненийСотрудников");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПричиныУвольненийСотрудников", ИмяТаблицы);
		
		ПервоеПоле = Истина;
		Для каждого ПолеСвязи Из ОписательВременныхТаблиц.ПоляСвязиТаблиц Цикл
			Если ПервоеПоле Тогда
				ПервоеПоле = Ложь;
				Запрос.Текст = Запрос.Текст + "
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
				|		ПО &Параметр1 = &Параметр2";
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТСотрудники", ОписательВременныхТаблиц.ИмяВременнойТаблицы);
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|		И &Параметр1 = &Параметр2";
			КонецЕсли;
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Параметр1", "ПричиныУвольненияСотрудников." + ПолеСвязи.Ключ);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Параметр2", "Сотрудники" + "." + ПолеСвязи.Значение);
		КонецЦикла;
		Если Не ТолькоРазрешенные Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
		КонецЕсли;
		
		Запрос.Выполнить();
		
		ОписательВременныхТаблицКД = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, ИмяТаблицы);
		КадровыеДанные = "ДолжностьПоШтатномуРасписанию";
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблицКД, Истина, КадровыеДанные);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПричиныУвольненийСотрудников.Сотрудник КАК Сотрудник,
		|	ПричиныУвольненийСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПричиныУвольненийСотрудников.ПричинаHR КАК ПричинаHR,
		|	ПричиныУвольненийСотрудников.ПричинаРуководитель КАК ПричинаРуководитель,
		|	ПричиныУвольненийСотрудников.ДатаРегистрации КАК ДатаРегистрации,
		|	ПричиныУвольненийСотрудников.Комментарий КАК Комментарий,
		|	КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию КАК Позиция
		|ПОМЕСТИТЬ ВТПричиныУвольнений
		|ИЗ
		|	ВТПричиныУвольненийСотрудников КАК ПричиныУвольненийСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО ПричиныУвольненийСотрудников.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
		|			И ПричиныУвольненийСотрудников.Период = КадровыеДанныеСотрудников.Период";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПричиныУвольненийСотрудников", ИмяТаблицы);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПричиныУвольнений", ОписательВременныхТаблиц.ИмяВТПричиныУвольнений);
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.ПричиныУвольнений.ПустаяСсылка) КАК ПричинаHR,
		|	ЗНАЧЕНИЕ(Справочник.ПричиныУвольнений.ПустаяСсылка) КАК ПричинаРуководитель,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРегистрации,
		|	"""" КАК Комментарий,
		|	ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка) КАК Позиция
		|ПОМЕСТИТЬ ВТПричиныУвольнений";
		
	КонецЕсли;
	
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьВидимостьПричиныУвольнения(Форма, СотрудникСсылка = Неопределено, ИмяЭлемента = "ПричинаУвольнения") Экспорт
	
	Элементы = Форма.Элементы;
	Если Элементы.Найти(ИмяЭлемента) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказыватьПричинуУвольнения = ПолучитьФункциональнуюОпцию("ИспользоватьАнализТекучестиПерсонала")
		И ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПричиныУвольненияСотрудников);
		
	Если ПоказыватьПричинуУвольнения И НЕ СотрудникСсылка = Неопределено Тогда 
		ПоказыватьПричинуУвольнения = НЕ СотрудникСсылка.Пустая() 
			И РегистрыСведений.ПричиныУвольненияСотрудников.МожноРегистрироватьПричиныУвольнения(СотрудникСсылка);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		ИмяЭлемента,
		"Видимость",
		ПоказыватьПричинуУвольнения);
		
КонецПроцедуры

Процедура ОбновитьПричинуУвольнения(Форма, СотрудникСсылка, ИмяЭлемента = "ПричинаУвольнения") Экспорт
	
	Если Форма.Элементы.Найти(ИмяЭлемента) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма[ИмяЭлемента] = РегистрыСведений.ПричиныУвольненияСотрудников.ПредставлениеПричинСотрудника(СотрудникСсылка);

КонецПроцедуры

Функция ПредставлениеПричинУвольненияСотрудника(СотрудникСсылка) Экспорт
	
	Если Не РегистрыСведений.ПричиныУвольненияСотрудников.МожноРегистрироватьПричиныУвольнения(СотрудникСсылка) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РегистрыСведений.ПричиныУвольненияСотрудников.ПредставлениеПричинСотрудника(СотрудникСсылка, , Ложь);
	
КонецФункции

#КонецОбласти

