#Область ПрограммныйИнтерфейс

// Открывает подбор действий.
//
// Параметры:
//	Форма - Форма - форма, из которой открывается форма подбора действий.
//	Отказ - Булево - признак отказа от стандартной обработки.
//	ИмяРеквизитаТаблицыДействий - Строка - имя реквизита формы, содержащего таблицу действий.
// 	ДополнительныеПараметры - Структура.
//	
Процедура ОткрытьФормуДобавленияДействий(Форма, Отказ, ИмяРеквизитаТаблицыДействий = "Объект.ДействияСотрудников", ДополнительныеПараметры = Неопределено) Экспорт 
	
	Отказ = Истина;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	ПараметрыОповещения.Вставить("ИмяРеквизитаТаблицыДействий", ИмяРеквизитаТаблицыДействий);
	Если ДополнительныеПараметры <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыОповещения, ДополнительныеПараметры);
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗавершениеДобавленияДействий", ЭтотОбъект, ПараметрыОповещения);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("Справочник.ДействияСотрудников.ФормаВыбора", ПараметрыФормы, Форма, Форма.УникальныйИдентификатор,,, Оповещение);

КонецПроцедуры

// Открывает подбор характеристик.
//
// Параметры:
//	Форма - Форма - форма, из которой открывается настройка весов значений характеристики.
//	ДополнительныеПараметры - Структура, с полями:
//		- ДобавлятьЗначенияХарактеристик - Булево - признак необходимости после завершения подбора добавлять не только характеристики,
//											но и их значения. Значение по умолчанию - Истина.
//		- СтрокаСкрываемыхРеквизитов - Строка - строка реквизитов формы, которые необходимо скрыть.
//	
Процедура ОткрытьФормуПодбораХарактеристик(Форма, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыОповещения = Новый Структура;
	
	ПараметрыОповещения.Вставить("Форма", Форма);
	ПараметрыОповещения.Вставить("ДобавлятьЗначенияХарактеристик", Истина);
	Если ДополнительныеПараметры <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыОповещения, ДополнительныеПараметры, Истина);
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗавершениеДобавленияХарактеристик", ЭтотОбъект, ПараметрыОповещения);
	
	СтрокаСкрываемыхРеквизитов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "СтрокаСкрываемыхРеквизитов", "");
	
	ПараметрыФормы = Новый Структура;
	Если Не ПустаяСтрока(СтрокаСкрываемыхРеквизитов) Тогда
		СкрытьРеквизиты = Новый Структура;
		МассивРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(СтрокаСкрываемыхРеквизитов, ",");
		Для каждого ИмяРеквизита Из МассивРеквизитов Цикл
			СкрытьРеквизиты.Вставить(ИмяРеквизита);
		КонецЦикла; 
		ПараметрыФормы.Вставить("СкрытьРеквизиты", СкрытьРеквизиты);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ПодборХарактеристикПерсонала", ПараметрыФормы, Форма, Форма.УникальныйИдентификатор,,, Оповещение);

КонецПроцедуры

// Открывает форму добавления характеристик.
//
// Параметры:
//	- Форма - Форма - форма, из которой открывается форма подбора характеристик.
//	- Копирование - Булево - признак копирования.
//	- Отказ - Булево - признак отказа от стандартной обработки.
//	- СтруктураЗначенийПоУмолчанию - Структура - значения заполнения для новой строки характеристик.
//	
Процедура ОткрытьФормуДобавленияХарактеристик(Форма, Копирование, Отказ = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт 

	Если Отказ <> Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	ПараметрыОповещения.Вставить("ДобавлятьЗначенияХарактеристик", Ложь);
	Если ДополнительныеПараметры <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыОповещения, ДополнительныеПараметры);
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗавершениеДобавленияХарактеристик", ЭтотОбъект, ПараметрыОповещения);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("ПланВидовХарактеристик.ХарактеристикиПерсонала.ФормаВыбора", ПараметрыФормы, Форма, Форма.УникальныйИдентификатор,,, Оповещение);

КонецПроцедуры

// Открывает форму добавления этапов.
//
// Параметры 
//	Форма - Форма - форма, из которой открывается форма подбора этапов работы с кандидатом.
//	Копирование - Булево - признак копирования.
//	Отказ - Булево - признак отказа от стандартной обработки.
//	
Процедура ОткрытьФормуДобавленияЭтапов(Форма, Копирование, Отказ) Экспорт 

	Отказ = Истина;
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	Оповещение = Новый ОписаниеОповещения("ЗавершениеДобавленияЭтапов", ЭтотОбъект, ПараметрыОповещения);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("Справочник.ЭтапыРаботыСКандидатами.ФормаВыбора", ПараметрыФормы, Форма, Форма.УникальныйИдентификатор,,, Оповещение);

КонецПроцедуры

// Открывает настройку значений характеристик
//
// Параметры:
//	- Форма - Форма - форма, из которой открывается настройка весов значений характеристики.
//	- Характеристика - ПланВидовХарактеристикСсылка.ХарактеристикиПерсонала - ссылка на характеристику персонала, для которой настраиваются веса значений.
//	- СтрокаСкрываемыхРеквизитов - Строка - строка реквизитов формы, которые необходимо скрыть.
//	- ИмяПроцедуры - Строка - имя экспортной процедуры формы, которую следует вызвать после удаления характеристик.
//
Процедура ОткрытьНастройкуЗначенийХарактеристик(Форма, Характеристика, СтрокаСкрываемыхРеквизитов = "", ИмяПроцедуры = "") Экспорт
	
	МассивЗначений = Новый Массив;
	СтрокиЗначений = Форма.ЗначенияХарактеристики.НайтиСтроки(Новый Структура("Характеристика", Характеристика));
	Для Каждого ТекущаяСтрока Из СтрокиЗначений Цикл
		СтруктураЗначения = Новый Структура;
		СтруктураЗначения.Вставить("Значение", ТекущаяСтрока.Значение);
		Если ТекущаяСтрока.Свойство("ВесЗначения") Тогда
			СтруктураЗначения.Вставить("ВесЗначения", ТекущаяСтрока.ВесЗначения);
		КонецЕсли;
		МассивЗначений.Добавить(СтруктураЗначения);
	КонецЦикла;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Характеристика", Характеристика);
	ПараметрыОповещения.Вставить("Форма", Форма);
	Если ЗначениеЗаполнено(ИмяПроцедуры) Тогда
		ПараметрыОповещения.Вставить("ИмяПроцедуры", ИмяПроцедуры);
	КонецЕсли;

	Оповещение = Новый ОписаниеОповещения("ХарактеристикиЗначениеОкончаниеВыбора", ЭтотОбъект, ПараметрыОповещения);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Характеристика", Характеристика);
	ПараметрыФормы.Вставить("МассивЗначений", МассивЗначений);
	
	Если Не ПустаяСтрока(СтрокаСкрываемыхРеквизитов) Тогда
		СкрытьРеквизиты = Новый Структура;
		МассивРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(СтрокаСкрываемыхРеквизитов, ",");
		Для каждого ИмяРеквизита Из МассивРеквизитов Цикл
			СкрытьРеквизиты.Вставить(ИмяРеквизита);
		КонецЦикла; 
		ПараметрыФормы.Вставить("СкрытьРеквизиты", СкрытьРеквизиты);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.НастройкаЗначенийХарактеристик", ПараметрыФормы, Форма, Форма.УникальныйИдентификатор,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

// Добавляет выбранные действия в табличную часть
//
// Параметры:
//	Форма - Форма - форма, из которой открывается настройка весов значений характеристики.
//	ТаблицаДействий - ДанныеФормыСтруктура - табличная часть Действий.
//	Результат - Массив - массив добавляемых характеристик.
//
Функция ДобавитьДействияВТабличнуюЧасть(Форма, ТаблицаДействий, Результат) Экспорт

	ДобавленныеДействия = Новый Массив;
	
	Если Результат = Неопределено Тогда
		Возврат ДобавленныеДействия;
	КонецЕсли;
	
	Для Каждого ДобавленноеДействие Из Результат Цикл
		СтруктураПоиска = Новый Структура("ДействиеСотрудника", ДобавленноеДействие);
		Если ТаблицаДействий.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		НовСтрока = ТаблицаДействий.Добавить();
		НовСтрока.ДействиеСотрудника = ДобавленноеДействие;
		ДобавленныеДействия.Добавить(ДобавленноеДействие);
	КонецЦикла;

	Форма.Модифицированность = Форма.Модифицированность ИЛИ (ДобавленныеДействия.Количество() > 0);
	
	Возврат ДобавленныеДействия;

КонецФункции

// Удаляет действие сотрудника из требований на форме
//
// Параметры 
//	Форма 					- Форма - форма, в которой была добавлена характеристика.
//	УдаляемыеСтроки		 	- массив удаляемых строк характеристик.
//	ТаблицаХарактеристик	- ДанныеФормыСтруктура - таблица характеристик.
//	ТаблицаЗначений			- ДанныеФормыСтруктура - таблица значений характеристик.
//	ИмяПроцедуры			- Строка - имя экспортной процедуры формы, которую следует вызвать после удаления характеристик.
//
Процедура УдалитьХарактеристикиИЗначенияВТаблицах(Форма, УдаляемыеСтроки, ТаблицаХарактеристик, ТаблицаЗначений, ИмяПроцедуры = "") Экспорт
	
	Если УдаляемыеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("УдаляемыеСтроки", УдаляемыеСтроки);
	ПараметрыОповещения.Вставить("Форма", Форма);
	Если ЗначениеЗаполнено(ИмяПроцедуры) Тогда
		ПараметрыОповещения.Вставить("ИмяПроцедуры", ИмяПроцедуры);
	КонецЕсли;
	ПараметрыОповещения.Вставить("ТаблицаХарактеристик", ТаблицаХарактеристик);
	ПараметрыОповещения.Вставить("ТаблицаЗначений", ТаблицаЗначений);
	
	Оповещение = Новый ОписаниеОповещения("УдалитьХарактеристикиИЗначенияВТаблицахЗавершение", ЭтотОбъект, ПараметрыОповещения);
	ТекстВопроса = НСтр("ru = 'Удалить характеристики, связанные
		|с текущим действием?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

// Обрабатывает изменение характеристики персонала в требованиях на форме
//
// Параметры:
//	- Форма - Форма - форма, в которой была изменена характеристика.
//	- ТекущиеДанные - ДанныеФормыЭлементКоллекции - данные текущей строки, в которой была изменена характеристика.
//
Процедура ОбработатьИзменениеХарактеристики(Форма, ТекущиеДанные) Экспорт
	
	ТекущиеДанные.ЗначенияСтрокой = ХарактеристикиПерсоналаКлиентСервер.ЗначенияСтрокой(Форма.ЗначенияХарактеристики, ТекущиеДанные.Характеристика);
	
	УдалитьНеиспользуемыеЗначенияХарактеристик(Форма.Характеристики, Форма.ЗначенияХарактеристики, ТекущиеДанные.Характеристика);
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ХарактеристикиВыбор(ТекущиеДанные, ИмяПоляХарактеристика = "Характеристика") Экспорт
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные[ИмяПоляХарактеристика]);

КонецПроцедуры

Процедура ДействияСотрудниковВыбор(ТекущиеДанные) Экспорт

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.ДействиеСотрудника);

КонецПроцедуры

// Удаляет значения удаляемых характеристик
// Параметры:
//	Форма - Форма - форма, из которой открывается настройка весов значений характеристики.
//	ВыделенныеСтроки - коллекция выделенных строк Характеристик.
//
Процедура УдалитьЗначенияХарактеристик(Форма, ВыделенныеСтроки) Экспорт

	Если ВыделенныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ТекущиеДанные = Форма.Характеристики.НайтиПоИдентификатору(ВыделеннаяСтрока);
		СтрокиЗначений = Форма.ЗначенияХарактеристики.НайтиСтроки(Новый Структура("Характеристика", ТекущиеДанные.Характеристика));
		Для Каждого ТекущаяСтрока Из СтрокиЗначений Цикл
			Форма.ЗначенияХарактеристики.Удалить(ТекущаяСтрока);
		КонецЦикла;
	КонецЦикла; 

КонецПроцедуры

Процедура ДействияСотрудниковПередУдалением(Форма, ИмяПроцедуры = "", ИмяРеквизитаТаблицыДействий = "Объект.ДействияСотрудников") Экспорт 

	Объект = Форма.Объект;
	ТаблицаДействий = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ИмяРеквизитаТаблицыДействий);
	
	УдаляемыеДействия = УдаляемыеСтрокиТаблицы(Форма.Элементы.ДействияСотрудников, ТаблицаДействий);
	
	СтруктураМассивовДанныхФормы = МассивыДанныхДействийХарактеристик(Форма, ТаблицаДействий);
	УдаляемыеСтроки = ХарактеристикиПерсоналаВызовСервера.ТаблицаУдаляемыхХарактеристикИЗначенийПоУдаляемымДействиям(УдаляемыеДействия, СтруктураМассивовДанныхФормы);
	
	ХарактеристикиПерсоналаКлиент.УдалитьХарактеристикиИЗначенияВТаблицах(Форма, УдаляемыеСтроки, Форма.Характеристики, Форма.ЗначенияХарактеристики, ИмяПроцедуры);

КонецПроцедуры

// Возвращает список удаляемых характеристик по выделенным строкам
//
Функция УдаляемыеСтрокиТаблицы(ТаблицаЭлемент, ТаблицаРеквизит, ИмяПоля = "ДействиеСотрудника")

	УдаляемыеСтроки = Новый Массив;
	Для каждого ИдентификаторВыбраннойСтроки Из ТаблицаЭлемент.ВыделенныеСтроки Цикл
		ТекущиеДанные = ТаблицаРеквизит.НайтиПоИдентификатору(ИдентификаторВыбраннойСтроки);
		УдаляемыеСтроки.Добавить(ТекущиеДанные[ИмяПоля]);
	КонецЦикла; 
	
	Возврат УдаляемыеСтроки;

КонецФункции

// Добавляет новые характеристики в таблицы Характеристик и ЗначенийХарактеристик
//
Процедура ДобавитьХарактеристикиВТаблицу(ТаблицаХарактеристик, ТаблицаЗначений, НовыеХарактеристики) Экспорт
	
	Для каждого ТекущаяСтрока Из НовыеХарактеристики Цикл
		НайденныеСтроки = ТаблицаХарактеристик.НайтиСтроки(Новый Структура("Характеристика", ТекущаяСтрока.Характеристика));
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаХарактеристики = ТаблицаХарактеристик.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаХарактеристики, ТекущаяСтрока);
			СтруктураВида = ХарактеристикиПерсоналаВызовСервера.ВидХарактеристики(ТекущаяСтрока.Характеристика);
			СтрокаХарактеристики.ВидХарактеристики = СтруктураВида.ВидХарактеристики;
			СтрокаХарактеристики.КартинкаВида = СтруктураВида.Картинка;
		Иначе
			СтрокаХарактеристики = НайденныеСтроки[0];
		КонецЕсли;

		НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Характеристика, Значение", ТекущаяСтрока.Характеристика, ТекущаяСтрока.Значение));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].ВесЗначения = НайденныеСтроки[0].ВесЗначения + ТекущаяСтрока.ВесЗначения;
		Иначе
			ЗаполнитьЗначенияСвойств(ТаблицаЗначений.Добавить(), ТекущаяСтрока);
			СтрокаХарактеристики.ЗначенияСтрокой = СтрокаХарактеристики.ЗначенияСтрокой + ?(СтрокаХарактеристики.ЗначенияСтрокой = "", "", ", ") + СокрЛП(Строка(ТекущаяСтрока.Значение));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьХарактеристикиИзТаблицы(Характеристики, ЗначенияХарактеристики, УдаляемыеХарактеристики, Ссылка) Экспорт
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ЭлектронноеИнтервьюВызовСервера.УдалитьХарактеристикиИзНастроек(УдаляемыеХарактеристики, Ссылка);
	КонецЕсли;
	
	УдаляемыеСтроки = Новый Массив;
	УдаляемыеЗначения = Новый Массив;
	Для Каждого ТекущаяХарактеристика Из УдаляемыеХарактеристики Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Характеристика", ТекущаяХарактеристика);
		СтрокаТаблицы = Характеристики.НайтиСтроки(СтруктураПоиска)[0];
		УдаляемыеСтроки.Добавить(СтрокаТаблицы);
		СтрокиЗначений = ЗначенияХарактеристики.НайтиСтроки(СтруктураПоиска);
		Для Каждого ТекущаяСтрока Из СтрокиЗначений Цикл
			УдаляемыеЗначения.Добавить(ТекущаяСтрока);
		КонецЦикла;
	КонецЦикла;
	Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
		Характеристики.Удалить(УдаляемаяСтрока);
	КонецЦикла;
	Для каждого УдаляемаяСтрока Из УдаляемыеЗначения Цикл
		ЗначенияХарактеристики.Удалить(УдаляемаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

#Область ШтатноеРасписание

Процедура ШтатноеРасписаниеДействияВыбор(Элементы) Экспорт
	ПоказатьЗначение(, Элементы.ДействияСотрудников.ТекущиеДанные.ДействиеСотрудника);
КонецПроцедуры

Процедура ШтатноеРасписаниеОткрытьФормуДобавленияДействий(Форма, Отказ) Экспорт 
	ОткрытьФормуДобавленияДействий(Форма, Отказ, "ДействияСотрудников", Новый Структура("Подключаемый_"));
КонецПроцедуры

Процедура ШтатноеРасписаниеДействияСотрудниковПередУдалением(Форма) Экспорт 
	ДействияСотрудниковПередУдалением(Форма,, "ДействияСотрудников");
КонецПроцедуры

Процедура ШтатноеРасписаниеПриИзмененииДействияХарактеристикиСоответствуютПрофилюДолжности(Форма) Экспорт

	Если Форма.ДействияХарактеристикиСоответствуютПрофилюДолжностиЧисло = 1 Тогда
		ЗаполнитьДействияХарактеристикиИзПрофиля(Форма);
	КонецЕсли;
	
	ХарактеристикиПерсоналаКлиентСервер.ШтатноеРасписаниеУстановитьДоступностьЭлементовДействийХарактеристик(Форма);

КонецПроцедуры

Процедура ШтатноеРасписаниеПрофильДолжностиПриИзменении(Форма) Экспорт 

	Если Форма.ДействияХарактеристикиСоответствуютПрофилюДолжностиЧисло = 1 Тогда
		Форма.Подключаемый_ЗаполнитьДействияХарактеристикиИзПрофиляНаСервере();
	КонецЕсли;

КонецПроцедуры

Процедура ШтатноеРасписаниеХарактеристикиВыбор(Форма, Поле, СтандартнаяОбработка) Экспорт

	Если Форма.ДействияХарактеристикиСоответствуютПрофилюДолжностиЧисло = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя <> "ХарактеристикиЗначение"
		И Поле.Имя <> "ХарактеристикиХарактеристика" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Форма.Элементы.Характеристики.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или Не ЗначениеЗаполнено(ТекущиеДанные.Характеристика) Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ХарактеристикиЗначение" Тогда
		ОткрытьНастройкуЗначенийХарактеристик(Форма, ТекущиеДанные.Характеристика);
	ИначеЕсли Поле.Имя = "ХарактеристикиХарактеристика" Тогда
		ПоказатьЗначение(, ТекущиеДанные.Характеристика);
	КонецЕсли;

КонецПроцедуры

Процедура ШтатноеРасписаниеХарактеристикиПередНачаломДобавления(Форма, Копирование, Отказ) Экспорт
	ОткрытьФормуДобавленияХарактеристик(Форма, Копирование, Отказ, Новый Структура("Подключаемый_"));
КонецПроцедуры

Процедура ШтатноеРасписаниеХарактеристикиПередУдалением(Форма) Экспорт
	УдалитьЗначенияХарактеристик(Форма, Форма.Элементы.Характеристики.ВыделенныеСтроки);
КонецПроцедуры

Процедура ПодобратьХарактеристики(Форма) Экспорт
	ОткрытьФормуПодбораХарактеристик(Форма, Новый Структура("Подключаемый_"));
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗавершениеДобавленияДействий(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ДополнительныеПараметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеПараметры.Свойство("Форма") 
		ИЛИ НЕ ДополнительныеПараметры.Свойство("ИмяРеквизитаТаблицыДействий") Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	ТаблицаДействий = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ДополнительныеПараметры.ИмяРеквизитаТаблицыДействий);
	
	МассивДобавленныхДействий = ДобавитьДействияВТабличнуюЧасть(Форма, ТаблицаДействий, Результат);
	Если МассивДобавленныхДействий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("Подключаемый_") Тогда
		Форма.Подключаемый_ДобавитьХарактеристикиИзДействийНаСервере(МассивДобавленныхДействий);
	Иначе
		Форма.ДобавитьХарактеристикиИзДействийНаСервере(МассивДобавленныхДействий);
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ВыполнитьПроцедуруНаКлиентеЗавершение") Тогда
		Форма.ДобавитьХарактеристикиИзДействийНаКлиентеЗавершение();
	КонецЕсли;

КонецПроцедуры

Процедура ЗавершениеДобавленияХарактеристик(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ДополнительныеПараметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеПараметры.Свойство("Форма") 
		ИЛИ НЕ ДополнительныеПараметры.Свойство("ДобавлятьЗначенияХарактеристик") Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	ДополнительныеПараметры.Удалить("Форма");
	
	Форма.Модифицированность = Истина;
	
	Если ДополнительныеПараметры.Свойство("Подключаемый_") Тогда
		Форма.Подключаемый_ДобавитьХарактеристикиПерсоналаНаСервере(Результат, ДополнительныеПараметры);
	Иначе
		Форма.ДобавитьХарактеристикиПерсоналаНаСервере(Результат, ДополнительныеПараметры);
	КонецЕсли;

КонецПроцедуры

Процедура ЗавершениеДобавленияЭтапов(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ДополнительныеПараметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеПараметры.Свойство("Форма") Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Для Каждого ДобавляемыйЭтап Из Результат Цикл
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("ЭтапРаботы", ДобавляемыйЭтап);
		СтрокиЭтапа = Форма.Объект.ЭтапыРаботыСКандидатами.НайтиСтроки(ПараметрыПоиска);
		Если СтрокиЭтапа.Количество() > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Этап ""%1"" уже есть в списке'"), Строка(ДобавляемыйЭтап));
			Сообщение.Сообщить();
		Иначе
			НовыйЭтап = Форма.Объект.ЭтапыРаботыСКандидатами.Добавить();
			НовыйЭтап.ЭтапРаботы = ДобавляемыйЭтап;
		КонецЕсли;
	КонецЦикла;
	Форма.ЗаполнитьОтображениеНастроекАнкет();
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура УдалитьХарактеристикиИЗначенияВТаблицахЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	УдаляемыеСтроки = ДополнительныеПараметры.УдаляемыеСтроки;
	ТаблицаХарактеристик = ДополнительныеПараметры.ТаблицаХарактеристик;
	ТаблицаЗначений = ДополнительныеПараметры.ТаблицаЗначений;
	
	Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
		УдалитьЗначениеХарактеристики(ТаблицаЗначений, УдаляемаяСтрока);
		УдалитьХарактеристику(ТаблицаХарактеристик, ТаблицаЗначений, УдаляемаяСтрока);
	КонецЦикла; 
	
	ХарактеристикиПерсоналаКлиентСервер.УстановитьЗначенияСтрокой(ТаблицаХарактеристик, ТаблицаЗначений);
	
	Если ДополнительныеПараметры.Свойство("ИмяПроцедуры") Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяПроцедуры, Форма);
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

// Обрабатывает настройки значений характеристик, сделанную в форме "НастройкаЗначенийХарактеристик".
//
Процедура ХарактеристикиЗначениеОкончаниеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяХарактеристика = Результат.Характеристика;
	Форма = ДополнительныеПараметры.Форма;
	
	СтрокиХарактеристики = Форма.Характеристики.НайтиСтроки(Новый Структура("Характеристика", ТекущаяХарактеристика));
	Если СтрокиХарактеристики.Количество() > 0 Тогда
		СтрокаХарактеристики = СтрокиХарактеристики[0];
	Иначе
		СтрокаХарактеристики = Форма.Характеристики.Добавить();
		СтрокаХарактеристики.Характеристика = ТекущаяХарактеристика;
		Если СтрокаХарактеристики.Свойство("Вес") Тогда
			СтрокаХарактеристики.Вес = 1;
		КонецЕсли;
	КонецЕсли;
	
	СтрокиЗначений = Форма.ЗначенияХарактеристики.НайтиСтроки(Новый Структура("Характеристика", ТекущаяХарактеристика));
	Для Каждого ТекущаяСтрока Из СтрокиЗначений Цикл
		Форма.ЗначенияХарактеристики.Удалить(ТекущаяСтрока);
	КонецЦикла;
	
	Для Каждого ТекущаяСтрока Из Результат.МассивЗначений Цикл
		НоваяСтрока = Форма.ЗначенияХарактеристики.Добавить();
		НоваяСтрока.Характеристика = ТекущаяХарактеристика;
		НоваяСтрока.Значение = ТекущаяСтрока.Значение;
		Если НоваяСтрока.Свойство("ВесЗначения") Тогда
			НоваяСтрока.ВесЗначения = ТекущаяСтрока.ВесЗначения;
		КонецЕсли;
	КонецЦикла;
	
	СтрокаХарактеристики.ЗначенияСтрокой = ХарактеристикиПерсоналаКлиентСервер.ЗначенияСтрокой(Форма.ЗначенияХарактеристики, ТекущаяХарактеристика);
	
	Если ДополнительныеПараметры.Свойство("ИмяПроцедуры") Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяПроцедуры, Форма);
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура УдалитьЗначениеХарактеристики(ТаблицаЗначений, УдаляемаяСтрока)

	НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(УдаляемаяСтрока);
	Для каждого НайденнаяСтрока Из НайденныеСтроки  Цикл
		ТаблицаЗначений.Удалить(НайденнаяСтрока);
	КонецЦикла; 

КонецПроцедуры

Процедура УдалитьХарактеристику(ТаблицаХарактеристик, ТаблицаЗначений, УдаляемаяСтрока)

	// Удалять характеристику можно только если у нее не остается значений.
	НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Характеристика", УдаляемаяСтрока.Характеристика));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = ТаблицаХарактеристик.НайтиСтроки(Новый Структура("Характеристика", УдаляемаяСтрока.Характеристика));
	Для каждого НайденнаяСтрока Из НайденныеСтроки  Цикл
		ТаблицаХарактеристик.Удалить(НайденнаяСтрока);
	КонецЦикла; 

КонецПроцедуры

Процедура УдалитьНеиспользуемыеЗначенияХарактеристик(Характеристики, ЗначенияХарактеристики, Характеристика)

	УдаляемыеСтроки = Новый Массив;
	
	Для Каждого ТекущаяСтрока Из ЗначенияХарактеристики Цикл
		СтрокиХарактеристики = Характеристики.НайтиСтроки(Новый Структура("Характеристика", Характеристика));
		Если СтрокиХарактеристики.Количество() = 0 Тогда
			УдаляемыеСтроки.Добавить(ТекущаяСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекущаяСтрока Из УдаляемыеСтроки Цикл
		ЗначенияХарактеристики.Удалить(ТекущаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

Функция МассивыДанныхДействийХарактеристик(Форма, ТаблицаДействий)

	ВозвращаемаяСтруктура = Новый Структура;
	
	// Действия.
	МассивДействий = Новый Массив;
	Для каждого СтрокаДействий Из ТаблицаДействий Цикл
		СтруктураДействий = Новый Структура("ДействиеСотрудника");
		ЗаполнитьЗначенияСвойств(СтруктураДействий, СтрокаДействий);
		МассивДействий.Добавить(СтруктураДействий);
	КонецЦикла; 
	ВозвращаемаяСтруктура.Вставить("ДействияСотрудников", МассивДействий);
	
	// Характеристики.
	МассивХарактеристик = Новый Массив;
	Для каждого СтрокаХарактеристик Из Форма.Характеристики Цикл
		СтруктураХарактеристик = Новый Структура("Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураХарактеристик, СтрокаХарактеристик);
		МассивХарактеристик.Добавить(СтруктураХарактеристик);
	КонецЦикла; 
	ВозвращаемаяСтруктура.Вставить("Характеристики", МассивХарактеристик);
	
	// Действия.
	МассивЗначенийХарактеристик = Новый Массив;
	Для каждого СтрокаЗначенийХарактеристик Из Форма.ЗначенияХарактеристики Цикл
		СтруктураЗначенийХарактеристик = Новый Структура("Характеристика, Значение");
		ЗаполнитьЗначенияСвойств(СтруктураЗначенийХарактеристик, СтрокаЗначенийХарактеристик);
		МассивЗначенийХарактеристик.Добавить(СтруктураЗначенийХарактеристик);
	КонецЦикла; 
	ВозвращаемаяСтруктура.Вставить("ЗначенияХарактеристики", МассивЗначенийХарактеристик);

	Возврат ВозвращаемаяСтруктура;
	
КонецФункции

Процедура ЗаполнитьДействияХарактеристикиИзПрофиля(Форма)

	Если Не ЗначениеЗаполнено(Форма.ПрофильДолжности) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	
	Если Форма.ДействияСотрудников.Количество() > 0
		ИЛИ Форма.Характеристики.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru = 'Функции и требования к характеристикам будут заменены функциями и требованиями к характеристикам из профиля должности.
                             |Продолжить?'");
		
		ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ЗаполнитьДействияХарактеристикиИзПрофиляЗавершение", ЭтотОбъект, ПараметрыОповещения);
		
		ПоказатьВопрос(ОбработчикОповещенияОЗакрытии,ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да, НСтр("ru = 'Продолжить?'"));
		
	Иначе
		ЗаполнитьДействияХарактеристикиИзПрофиляЗавершение(КодВозвратаДиалога.Да, ПараметрыОповещения);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьДействияХарактеристикиИзПрофиляЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ДополнительныеПараметры = Неопределено
		ИЛИ НЕ ДополнительныеПараметры.Свойство("Форма") Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Форма.ДействияХарактеристикиСоответствуютПрофилюДолжностиЧисло = 0;
		Возврат;
	КонецЕсли;
	
	Форма.Подключаемый_ЗаполнитьДействияХарактеристикиИзПрофиляНаСервере();

КонецПроцедуры

#КонецОбласти