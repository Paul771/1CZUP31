
#Область СлужебныйПрограммныйИнтерфейс

#Область МестаВыплатыЗарплаты

Процедура МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = ЗначениеЗаполнено(Элемент.ТекстРедактирования);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииВедомостейНаВыплатуЗарплаты

#Область ОбработчикиСобытийФормы

Процедура ВедомостьОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	ВзаиморасчетыССотрудникамиКлиент.ВедомостьОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = ВзаиморасчетыССотрудникамиКлиент.ИмяСобытияИзмененияОплатыВедомости() Тогда
		
		Если Форма.Элементы.ВнешниеОперацииГруппа.Видимость Тогда
			ВзаиморасчетыССотрудникамиКлиентСерверРасширенный.УстановитьОтображениеВХО(Форма)		
		КонецЕсли	
		
	ИначеЕсли ИмяСобытия = "ВыборДокументовОснованийВедомостейНаВыплатуЗарплаты" Тогда
		
		Форма.Активизировать();
	
		Форма.Объект.Основания.Очистить();
		Для Каждого Основание Из Параметр Цикл
			Строка = Форма.Объект.Основания.Добавить();
			Строка.Документ = Основание.Значение
		КонецЦикла;	
		ВзаиморасчетыССотрудникамиКлиентСерверРасширенный.ВедомостьУстановитьПредставлениеОснований(Форма);
		
		Если Форма.Объект.Основания.Количество() > 0 Тогда
			ВзаиморасчетыССотрудникамиКлиент.ВедомостьЗаполнить(Форма);
		Иначе
			ВзаиморасчетыССотрудникамиКлиент.ВедомостьОчистить(Форма);
		КонецЕсли	
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

Процедура ВедомостьПредставлениеОснованийНажатие(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранныеДокументы = Новый СписокЗначений;
	Для Каждого Основание Из Форма.Объект.Основания Цикл
		ВыбранныеДокументы.Добавить(Основание.Документ)
	КонецЦикла;	
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидДокумента", Форма.ВидДокументаОснования);
	ПараметрыФормы.Вставить("Организация", Форма.Объект.Организация);
	ПараметрыФормы.Вставить("Подразделение", Форма.Объект.Подразделение);
	ПараметрыФормы.Вставить("ПериодВзаиморасчетов", Форма.Объект.ПериодРегистрации);
	ПараметрыФормы.Вставить("ВыбранныеДокументы", ВыбранныеДокументы);
	
	ОткрытьФорму("ОбщаяФорма.ВыборДокументовОснованийВедомостейНаВыплатуЗарплаты", ПараметрыФормы, Форма);
	
КонецПроцедуры

Процедура ВедомостьДатаПриИзменении(Форма) Экспорт
	Форма.ДатаВыплаты = ВзаиморасчетыССотрудникамиКлиентСерверРасширенный.ВедомостьДатаВыплаты(Форма.Объект);
КонецПроцедуры

Процедура ВедомостьДатаВыплатыПриИзменении(Форма) Экспорт
	Форма.Объект.ДатаВыплаты = Форма.ДатаВыплаты;
	Форма.ДатаВыплаты = ВзаиморасчетыССотрудникамиКлиентСерверРасширенный.ВедомостьДатаВыплаты(Форма.Объект);
КонецПроцедуры

// Внешние хозяйственные операции.

Процедура ВедомостьПеречислениеНДФЛВыполненоПриИзменении(Форма, Элемент) Экспорт
	ВзаиморасчетыССотрудникамиКлиентСерверРасширенный.УстановитьОтображениеВХОПеречисленияНДФЛ(Форма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСостав

Процедура ВедомостьСоставВыбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт

	ТекущиеДанные = Форма.Элементы.Состав.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторСтроки) Тогда
		Если Поле.ГиперссылкаЯчейки И Поле.Имя = "СоставНДФЛРасшифровка" ИЛИ Поле.Имя = "СоставНДФЛ" Тогда
			Форма.РедактироватьНДФЛСтроки(ТекущиеДанные);
			СтандартнаяОбработка = Ложь;
			Возврат
		КонецЕсли	
	КонецЕсли;
	
	ВзаиморасчетыССотрудникамиКлиент.ВедомостьСоставВыбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

Процедура ВедомостьРедактироватьНДФЛСтроки(Форма, ДанныеСтроки) Экспорт
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	
	ПараметрыОткрытия.Вставить("Организация",			ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
	ПараметрыОткрытия.Вставить("Подразделение",			ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка"));
	ПараметрыОткрытия.Вставить("ПериодРегистрации",		Дата(1,1,1));
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытия, Форма.Объект);
	
	ПараметрыОткрытия.Вставить("ДатаВыплаты", ВзаиморасчетыССотрудникамиКлиентСерверРасширенный.ВедомостьДатаВыплаты(Форма.Объект));
	
	ПараметрыОткрытия.Вставить("ИдентификаторСтроки",	ДанныеСтроки.ИдентификаторСтроки);
	ПараметрыОткрытия.Вставить("ФизическоеЛицо", 		ДанныеСтроки.ФизическоеЛицо);
	ПараметрыОткрытия.Вставить("АдресВХранилищеНДФЛПоСтроке", Форма.АдресВХранилищеНДФЛПоСтроке(ДанныеСтроки.ИдентификаторСтроки));
	
	ПараметрыОткрытия.Вставить("ТолькоПросмотр",		Форма.ТолькоПросмотр);
	
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	Оповещение = Новый ОписаниеОповещения("ВедомостьРедактироватьНДФЛСтрокиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("ОбщаяФорма.РедактированиеНДФЛСтрокиВедомости", ПараметрыОткрытия, Форма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ВедомостьРедактироватьНДФЛСтрокиЗавершение(РезультатыРедактирования, ДополнительныеПараметры) Экспорт
	
	Если РезультатыРедактирования <> Неопределено И РезультатыРедактирования.Модифицированность Тогда
		ДополнительныеПараметры.Форма.РедактироватьНДФЛСтрокиЗавершениеНаСервере(РезультатыРедактирования)
	КонецЕсли;
	
КонецПроцедуры

Процедура ВедомостьОбновитьНДФЛ(Форма) Экспорт
	
	Если Форма.Элементы.Состав.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат
	КонецЕсли;	
	
	ТекущаяСтрока = Форма.Элементы.Состав.ТекущаяСтрока;
	
	Форма.ОбновитьНДФЛНаСервере(Новый ФиксированныйМассив(Форма.Элементы.Состав.ВыделенныеСтроки));
	
	Форма.Элементы.Состав.ТекущаяСтрока = ТекущаяСтрока;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
