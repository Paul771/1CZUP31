#Область ПрограммныйИнтерфейс

// Возвращает имя события оповещения об изменении состояния оплаты ведомости на выплату зарплаты.
// Уместно использовать в платежных документах в вызовах Оповестить:
// 	Оповестить(ВзаиморасчетыССотрудникамиКлиент.ИмяСобытияИзмененияОплатыВедомости());
//
//	Возвращаемое значение
//		строка
//
Функция ИмяСобытияИзмененияОплатыВедомости() Экспорт
	Возврат "ИзменениеОплатыВедомости"
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииВедомостейНаВыплатуЗарплаты

#Область ОбработчикиСобытийФормы

Процедура ВедомостьОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = ВзаиморасчетыССотрудникамиКлиент.ИмяСобытияИзмененияОплатыВедомости() Тогда
		Форма.УстановитьДоступностьЭлементов();
		Форма.УстановитьПредставлениеОплаты();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

Процедура КомментарийНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		Форма,
		"Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицФормы

Процедура ВедомостьСоставВыбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт

	ТекущиеДанные = Форма.Элементы.Состав.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторСтроки) Тогда
		Если Поле.ГиперссылкаЯчейки ИЛИ Поле.ТолькоПросмотр Тогда
			Форма.РедактироватьЗарплатуСтроки(ТекущиеДанные);
			СтандартнаяОбработка = Ложь;
		КонецЕсли	
	КонецЕсли;
	
КонецПроцедуры

Процедура ВедомостьСоставПередУдалением(Форма, Элемент, Отказ) Экспорт
	
	ИдентификаторыСтрок = Новый Массив;
	
	Для Каждого ВыделеннаяСтрока Из Элемент.ВыделенныеСтроки Цикл
		
		Строка = Форма.Объект.Состав.НайтиПоИдентификатору(ВыделеннаяСтрока);
		
		Если Строка <> Неопределено Тогда
			ИдентификаторыСтрок.Добавить(Строка.ИдентификаторСтроки);
		КонецЕсли	
		
	КонецЦикла;	
	
	Форма.ИдентификаторыСтрок = Новый ФиксированныйМассив(ИдентификаторыСтрок);
	
КонецПроцедуры

Процедура ВедомостьСоставКВыплатеОткрытие(Форма, Элемент, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	Форма.РедактироватьЗарплатуСтроки(Форма.Элементы.Состав.ТекущиеДанные);	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

Процедура ВедомостьЗаполнить(Форма) Экспорт
	
	ОчиститьСообщения();
	Форма.ЗаполнитьНаСервере()
	
КонецПроцедуры	

Процедура ВедомостьПодобрать(Форма) Экспорт
	
	КадровыйУчетКлиент.ПодобратьФизическихЛицОрганизации(
		Форма.Элементы.Состав, 
		Форма.Объект.Организация, 
		Форма.АдресСпискаПодобранныхСотрудников());
	
КонецПроцедуры

Процедура ВедомостьОчистить(Форма) Экспорт
	
	ОчиститьСообщения();
	Форма.ОчиститьНаСервере()
	
КонецПроцедуры	

Процедура ВедомостьОплатаПоказать(Форма, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если Форма.ОплатыСписок.Количество() = 0 Тогда
		Возврат
	ИначеЕсли Форма.ОплатыСписок.Количество() = 1 Тогда
		ПоказатьЗначение(, Форма.ОплатыСписок[0].Значение)
	Иначе
		Оповещение = Новый ОписаниеОповещения("ВедомостьОплатаПоказатьОповещение", ЭтотОбъект, Форма);
		Форма.ПоказатьВыборИзМеню(Оповещение, Форма.ОплатыСписок, Элемент);
	КонецЕсли	
		
КонецПроцедуры

Процедура ВедомостьОплатаПоказатьОповещение(ВыбранныйЭлемент, Форма) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ПоказатьЗначение(, ВыбранныйЭлемент.Значение)
	КонецЕсли	
КонецПроцедуры

#КонецОбласти

Процедура ВедомостьРедактироватьЗарплатуСтроки(Форма, ДанныеСтроки) Экспорт
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	
	ПараметрыОткрытия.Вставить("Организация",			ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
	ПараметрыОткрытия.Вставить("Подразделение",			ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка"));
	ПараметрыОткрытия.Вставить("ПериодРегистрации",		Дата(1,1,1));
	ПараметрыОткрытия.Вставить("СтатьяФинансирования",	ПредопределенноеЗначение("Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка"));
	ПараметрыОткрытия.Вставить("СтатьяРасходов",		ПредопределенноеЗначение("Справочник.СтатьиРасходовЗарплата.ПустаяСсылка"));
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытия, Форма.Объект);
	
	ПараметрыОткрытия.Вставить("ИдентификаторСтроки",	ДанныеСтроки.ИдентификаторСтроки);
	ПараметрыОткрытия.Вставить("ФизическоеЛицо", 		ДанныеСтроки.ФизическоеЛицо);
	ПараметрыОткрытия.Вставить("АдресВХранилищеЗарплатыПоСтроке", Форма.АдресВХранилищеЗарплатыПоСтроке(ДанныеСтроки.ИдентификаторСтроки));
	
	ПараметрыОткрытия.Вставить("ТолькоПросмотр",		Форма.ТолькоПросмотр);
	
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	Оповещение = Новый ОписаниеОповещения("ВедомостьРедактироватьЗарплатуСтрокиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("ОбщаяФорма.РедактированиеЗарплатыСтрокиВедомости", ПараметрыОткрытия, Форма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ВедомостьРедактироватьЗарплатуСтрокиЗавершение(РезультатыРедактирования, ДополнительныеПараметры) Экспорт
	
	Если РезультатыРедактирования <> Неопределено И РезультатыРедактирования.Модифицированность Тогда
		ДополнительныеПараметры.Форма.РедактироватьЗарплатуСтрокиЗавершениеНаСервере(РезультатыРедактирования)
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
