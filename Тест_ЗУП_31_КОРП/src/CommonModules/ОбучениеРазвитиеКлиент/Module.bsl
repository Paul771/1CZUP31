
#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриИзмененииПродолжительностиПланаОбучения(Форма, ДополнительныеПараметры = Неопределено, СтруктураИменРеквизитов = Неопределено) Экспорт

	Если СтруктураИменРеквизитов = Неопределено Тогда
		СтруктураИменРеквизитов = ОбучениеРазвитиеКлиентСервер.ОписаниеСтруктурыИменРеквизитовПрограммыОбучения();
	КонецЕсли;
	
	ОбучениеРазвитиеКлиентСервер.ПроверитьМаксимальнуюПродолжительностьПланаОбучения(Форма, СтруктураИменРеквизитов.ИмяРеквизитаЧислаКолонок);
	
	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("Подключаемый_") Тогда
		
		Форма.Подключаемый_ПересоздатьКолонкиПериодовПрограммыОбучения();
	Иначе		
		Форма.ПересоздатьКолонкиПериодовПрограммыОбучения();
	КонецЕсли;
	
	ОбучениеРазвитиеКлиентСервер.АктуализироватьНачалоОкончаниеПериодовПрограммыОбучения(Форма, СтруктураИменРеквизитов);
	ОбучениеРазвитиеКлиентСервер.УстановитьЗначенияПериодовПрограммыОбучения(Форма, СтруктураИменРеквизитов);

КонецПроцедуры

Процедура ПрограммаОбученияПриИзменении(Форма, Элемент, ПрограммаОбученияЭлемент, СтруктураИменРеквизитов = Неопределено) Экспорт

	ТекущиеДанные = ПрограммаОбученияЭлемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Элемент.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураИменРеквизитов = Неопределено Тогда
		СтруктураИменРеквизитов = ОбучениеРазвитиеКлиентСервер.ОписаниеСтруктурыИменРеквизитовПрограммыОбучения();
	КонецЕсли;
	
	Если СтрНайти(Элемент.ТекущийЭлемент.Имя, "ПериодПлана") <> 0 Тогда
		ЧислоСтрокой = СтрЗаменить(Элемент.ТекущийЭлемент.Имя, "ПериодПлана", "");
		ОбучениеРазвитиеКлиентСервер.ИзменениеПериодовПрограммыОбучения(Форма, ТекущиеДанные, ЧислоСтрокой, СтруктураИменРеквизитов);
	КонецЕсли; 

КонецПроцедуры

Процедура ПодобратьМероприятиеПоХарактеристике(Форма, ТекущиеДанные, СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	
	Если ТекущиеДанные.ВсегоМероприятий = 1 Тогда
		Форма.ДобавитьЕдинственноеМероприятие(ТекущиеДанные.Характеристика);
	Иначе
		ОткрытьПодборМероприятийПоХарактеристикам(Форма, ТекущиеДанные, "ПрограммаОбучения");
	КонецЕсли;

КонецПроцедуры

#Область ШтатноеРасписание

Процедура ШтатноеРасписаниеПриИзмененииПрограммаОбученияСоответствуютПрофилюДолжности(Форма) Экспорт

	Если Форма.ПрограммаОбученияСоответствуютПрофилюДолжностиЧисло = 1 Тогда
		ЗаполнитьПрограммуОбученияИзПрофиля(Форма);
	КонецЕсли;
	
	ОбучениеРазвитиеКлиентСервер.ШтатноеРасписаниеУстановитьДоступностьЭлементовПрограммыОбучения(Форма);

КонецПроцедуры

Процедура ШтатноеРасписаниеПрофильДолжностиПриИзменении(Форма) Экспорт 

	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПрограммаОбученияСоответствуютПрофилюДолжностиЧисло") Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.ПрограммаОбученияСоответствуютПрофилюДолжностиЧисло = 1 Тогда
		Форма.Подключаемый_ЗаполнитьПрограммуОбученияИзПрофиляНаСервере();
	КонецЕсли;

КонецПроцедуры

Процедура ШтатноеРасписаниеРазмерностьПродолжительностьПланаОбученияПриИзменении(Форма) Экспорт
	
	СтруктураИменРеквизитов = ОбучениеРазвитиеКлиентСервер.ОписаниеСтруктурыИменРеквизитовПрограммыОбученияШтатногоРасписания();
	ОбучениеРазвитиеКлиент.ПриИзмененииПродолжительностиПланаОбучения(Форма, Новый Структура("Подключаемый_"), СтруктураИменРеквизитов);
	
КонецПроцедуры

Процедура ШтатноеРасписаниеРазмерностьПродолжительностиПланаОбученияПриИзменении(Форма) Экспорт

	СтруктураИменРеквизитов = ОбучениеРазвитиеКлиентСервер.ОписаниеСтруктурыИменРеквизитовПрограммыОбученияШтатногоРасписания();
	ОбучениеРазвитиеКлиентСервер.УстановитьЗаголовкиКолонкамПрограммыОбучения(Форма, СтруктураИменРеквизитов);

КонецПроцедуры

Процедура ШтатноеРасписаниеОткрытьПодборПрограммыОбученияПоХарактеристикам(Форма) Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресХарактеристикПерсонала", Форма.Подключаемый_АдресХарактеристикПерсонала());
	СтруктураПараметров.Вставить("АдресПрограммыОбучения", Форма.Подключаемый_АдресПрограммыОбучения());
	Если Форма.ДействияХарактеристикиСоответствуютПрофилюДолжностиЧисло = 1 Тогда
		СтруктураПараметров.Вставить("НедоступныеРеквизиты", Новый Структура("ТребуетсяОбучение"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПараметрыФормыПодбора", СтруктураПараметров);
	ПараметрыФормы.Вставить("Подключаемый_");
	
	ОткрытьФормуПодбораПрограммыОбучения(Форма, ПараметрыФормы);

КонецПроцедуры

Процедура ШтатноеРасписаниеПрограммаОбученияПриИзменении(Форма, Элемент) Экспорт
	
	СтруктураИменРеквизитов = ОбучениеРазвитиеКлиентСервер.ОписаниеСтруктурыИменРеквизитовПрограммыОбученияШтатногоРасписания();
	ПрограммаОбученияПриИзменении(Форма, Элемент, Форма.Элементы.ПрограммаОбучения, СтруктураИменРеквизитов);
	
КонецПроцедуры

Процедура ШтатноеРасписаниеПрограммаОбученияМероприятиеПриИзменении(Форма) Экспорт
	
	ТекущиеДанные = Форма.Элементы.ПрограммаОбучения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма.Подключаемый_ЗаполнитьВторичныеДанныеОбученияНаСервере(ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВводНаОсновании

Процедура ОформитьКадровыйПриказ(Форма, ИмяТаблицы, ДанныеДокументаОбучения) Экспорт 
	
	Объект = Форма.Объект;
	ДополнительныеПараметры = Новый Структура("Форма, ИмяТаблицы, ДанныеДокументаОбучения", Форма, ИмяТаблицы, ДанныеДокументаОбучения);
	
	Если Объект.Ссылка.Пустая() Или Форма.Модифицированность Тогда
		
		Если Объект.Ссылка.Пустая() Тогда
			ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
								|Оформление документа возможно только после записи данных.
								|Данные будут записаны.'");
				
			ОписаниеОповещения = Новый ОписаниеОповещения("ОформитьКадровыйПриказЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе 
			ОформитьКадровыйПриказЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		КонецЕсли;
		
	Иначе 
		ОформитьКадровыйПриказЗавершение(Неопределено, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформитьКадровыйПриказЗавершение(Ответ, ДополнительныеПараметры) Экспорт 

	Форма = ДополнительныеПараметры.Форма;
	ИмяТаблицы = ДополнительныеПараметры.ИмяТаблицы;
	ДанныеДокументаОбучения = ДополнительныеПараметры.ДанныеДокументаОбучения;
	
	Объект = Форма.Объект;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Форма.Записать();
		Если Объект.Ссылка.Пустая() Или Форма.Модифицированность Тогда
			Возврат; // Запись не удалась, сообщения о причинах выводит платформа.
		КонецЕсли;
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура;
	Основание.Вставить("Ссылка", Объект.Ссылка);
	Основание.Вставить("Действие", "ЗаполнитьИзОбучения");
	Основание.Вставить("ДанныеДокументаОбучения", ДанныеДокументаОбучения);
	
	ПараметрыФормы = Новый Структура("Основание", Основание);
	
	Если ИмяТаблицы = "ОбразованиеФизическихЛиц" Тогда
		ОткрытьФорму("Справочник." + ИмяТаблицы + ".ФормаОбъекта", ПараметрыФормы, Форма);
	Иначе
		ОткрытьФорму("Документ." + ИмяТаблицы + ".ФормаОбъекта", ПараметрыФормы, Форма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Рассчитывает реквизит объекта по табличной части.
//
Процедура РассчитатьСуммуРасходов(Форма) Экспорт 
	Форма.Объект.СуммаРасходов = Форма.Объект.Расходы.Итог("Сумма");
КонецПроцедуры

#Область ШтатноеРасписание

Процедура ЗаполнитьПрограммуОбученияИзПрофиля(Форма)

	Если Не ЗначениеЗаполнено(Форма.ПрофильДолжности) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	
	Если Форма.ПрограммаОбучения.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru = 'Программа обучения будет заменена программой из профиля должности.
                             |Продолжить?'");
		
		ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ЗаполнитьПрограммуОбученияИзПрофиляЗавершение", ЭтотОбъект, ПараметрыОповещения);
		
		ПоказатьВопрос(ОбработчикОповещенияОЗакрытии,ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да, НСтр("ru = 'Продолжить?'"));
		
	Иначе
		ЗаполнитьПрограммуОбученияИзПрофиляЗавершение(КодВозвратаДиалога.Да, ПараметрыОповещения);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПрограммуОбученияИзПрофиляЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ДополнительныеПараметры = Неопределено
		ИЛИ НЕ ДополнительныеПараметры.Свойство("Форма") Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Форма.ПрограммаОбученияСоответствуютПрофилюДолжностиЧисло = 0;
		Возврат;
	КонецЕсли;
	
	Форма.Подключаемый_ЗаполнитьПрограммуОбученияИзПрофиляНаСервере();

КонецПроцедуры

#КонецОбласти

#Область ПрограммаОбучения

Процедура ОткрытьФормуПодбораПрограммыОбучения(Форма, ДополнительныеПараметры) Экспорт 

	ПараметрыФормыПодбора = ДополнительныеПараметры.ПараметрыФормыПодбора;
	ДополнительныеПараметры.Удалить("ПараметрыФормыПодбора");
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	Если ДополнительныеПараметры.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыОповещения, ДополнительныеПараметры);
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПодборПрограммыОбученияЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму("ОбщаяФорма.ПодборМероприятийПоХарактеристикам", ПараметрыФормыПодбора, Форма, Форма.УникальныйИдентификатор,,, Оповещение);

КонецПроцедуры

Процедура ПодборПрограммыОбученияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено 
		Или ТипЗнч(Результат) <> Тип("Структура") Тогда
		
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры = Неопределено ИЛИ НЕ ДополнительныеПараметры.Свойство("Форма") Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если ДополнительныеПараметры.Свойство("Подключаемый_") Тогда
		Форма.Подключаемый_ЗагрузитьПрограммуОбучения(Результат);
	Иначе
		Форма.ЗагрузитьПрограммуОбучения(Результат);
	КонецЕсли;

КонецПроцедуры

Процедура ОткрытьПодборМероприятийПоХарактеристикам(Форма, ТекущиеДанные, ИмяРеквизитаПрограммаОбучения = "Объект.ПрограммаОбучения")
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ВсегоМероприятий = ТекущиеДанные.ПодобраноМероприятий Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	
	Если ТекущиеДанные <> Неопределено Тогда
		ПараметрыОткрытия.Вставить("ОтборПоХарактеристике", ТекущиеДанные.Характеристика);
	КонецЕсли;
	
	ТаблицаПрограммаОбученияРеквизит = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ИмяРеквизитаПрограммаОбучения);
	ПараметрыОткрытия.Вставить("АдресСпискаПодобранныхМероприятий", ОбучениеРазвитиеВызовСервера.АдресМероприятийПрограммыОбучения(ТаблицаПрограммаОбученияРеквизит, Форма.УникальныйИдентификатор));
	
	ПараметрыОповещения = Новый Структура("Форма", Форма);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОткрытьПодборМероприятийПоХарактеристикамЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму("Справочник.МероприятияОбученияРазвития.ФормаВыбора", ПараметрыОткрытия, Форма, Форма.УникальныйИдентификатор,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

Процедура ОткрытьПодборМероприятийПоХарактеристикамЗавершение(РезультатЗакрытия, ДополнительныеПараметры = Неопределено) Экспорт

	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "Форма");
	Если Форма = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Форма.ОбработкаПодбораМероприятийПоХарактеристикамНаСервере(РезультатЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
