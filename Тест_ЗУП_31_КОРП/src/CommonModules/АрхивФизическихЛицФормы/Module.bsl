
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру для заполнения наименований групп элементов, в которых будут добавлены элементы подсистемы.
//
// Возвращаемое значение:
//		Структура
//			ИмяГруппы - Строка - Имя элемента группы, где располагаются элементы по одному человеку
//			ИмяГруппыКолонок - Строка - Имя элемента группы колонок в таблице, где отображаются сведения для нескольких человек
//			ИмяГруппыОтборов - Строка - Имя элемента группы, где располагаются элементы отбора
//			ИмяГруппыСотрудника - Строка - Имя элемента группы, где располагаются элементы по работающему сотруднику
//			ИмяГруппыКандидата - Строка - Имя элемента группы, где располагаются элементы по кандидату
//			ИмяТаблицы - Строка - Имя таблицы реквизита формы. Элемент формы должен называться также.
//			
Функция ОписаниеСтруктурыЭлементов() Экспорт
	
	СтруктураЭлементов = Новый Структура;
	СтруктураЭлементов.Вставить("ИмяГруппы",			"");
	СтруктураЭлементов.Вставить("ИмяГруппыКолонок",		"");
	СтруктураЭлементов.Вставить("ИмяГруппыОтборов",		"");
	СтруктураЭлементов.Вставить("ИмяГруппыСотрудника",	"");
	СтруктураЭлементов.Вставить("ИмяГруппыКандидата",	"");
	СтруктураЭлементов.Вставить("ИмяТаблицы",			"");
	
	Возврат СтруктураЭлементов;
	
КонецФункции

// Создает реквизиты и элементы формы физических лиц с похожими данными
// Вызывается ПриСозданииНаСервере.
//
// Параметры:
//		Форма - Управляемая форма физических лиц с похожими данными
//		ПараметрыЭлементов - Структура - см. описание ОписаниеСтруктурыЭлементов().
//
Процедура ФизическиеЛицаСПохожимиДаннымиПриСозданииНаСервере(Форма, ПараметрыЭлементов) Экспорт
	
	ИмяГруппы			= ПараметрыЭлементов.ИмяГруппы;
	ИмяГруппыКолонок	= ПараметрыЭлементов.ИмяГруппыКолонок;
	ИмяГруппыОтборов	= ПараметрыЭлементов.ИмяГруппыОтборов;
	ИмяТаблицы			= ПараметрыЭлементов.ИмяТаблицы;
	
	ДобавляемыеРеквизиты = Новый Массив;
	МассивТиповОбъекта = Новый Массив;
	МассивТиповОбъекта.Добавить(Тип("СправочникСсылка.Сотрудники"));
	МассивТиповОбъекта.Добавить(Тип("СправочникСсылка.Кандидаты"));
	
	// Реквизиты таблицы
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Объект", Новый ОписаниеТипов(МассивТиповОбъекта), ИмяТаблицы));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОписаниеОбъекта", Новый ОписаниеТипов("Строка"), ИмяТаблицы));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПояснениеКОбъекту", Новый ОписаниеТипов("Строка"), ИмяТаблицы));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Позиция", Новый ОписаниеТипов("СправочникСсылка.ШтатноеРасписание"), ИмяТаблицы));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Вакансия", Новый ОписаниеТипов("СправочникСсылка.Вакансии"), ИмяТаблицы));
	ТипПричинУвольнения = Неопределено;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.АнализТекучестиПерсонала") Тогда
		ТипПричинУвольнения = "СправочникСсылка.ПричиныУвольнений";
	КонецЕсли;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПричинаHR", Новый ОписаниеТипов(ТипПричинУвольнения), ИмяТаблицы, НСтр("ru='Причина по мнению HR'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПричинаРуководитель", Новый ОписаниеТипов(ТипПричинУвольнения), ИмяТаблицы, НСтр("ru='Причина по мнению руководителя'")));
	ТипПричиныОтклонения = Неопределено;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ПодборПерсонала") Тогда
		ТипПричиныОтклонения = "СправочникСсылка.ПричиныОтклоненияКандидатов";
	КонецЕсли;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПричинаОтклонения", Новый ОписаниеТипов(ТипПричиныОтклонения), ИмяТаблицы, НСтр("ru='Причина отклонения'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Комментарий", Новый ОписаниеТипов("Строка"), ИмяТаблицы));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДатаРегистрации", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата), ИмяТаблицы, НСтр("ru='Дата регистрации'")));
	
	// Таблица переданных параметров
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДанныеФизическихЛицОсновная", Новый ОписаниеТипов("ТаблицаЗначений")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДатаРождения", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИНН", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("СтраховойНомерПФР", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ФИОПолные", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Фамилия", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Имя", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Отчество", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("АдресФотографии", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДокументВид", Новый ОписаниеТипов("СправочникСсылка.ВидыДокументовФизическихЛиц"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДокументСерия", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДокументНомер", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДокументДатаВыдачи", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДокументПредставление", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Объект", Новый ОписаниеТипов(МассивТиповОбъекта), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОписаниеОбъекта", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПояснениеКОбъекту", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Позиция", Новый ОписаниеТипов("СправочникСсылка.ШтатноеРасписание"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Вакансия", Новый ОписаниеТипов("СправочникСсылка.Вакансии"), "ДанныеФизическихЛицОсновная"));
	ТипПричинУвольнения = Неопределено;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.АнализТекучестиПерсонала") Тогда
		ТипПричинУвольнения = "СправочникСсылка.ПричиныУвольнений";
	КонецЕсли;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПричинаHR", Новый ОписаниеТипов(ТипПричинУвольнения), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПричинаРуководитель", Новый ОписаниеТипов(ТипПричинУвольнения), "ДанныеФизическихЛицОсновная"));
	ТипПричиныОтклонения = Неопределено;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ПодборПерсонала") Тогда
		ТипПричиныОтклонения = "СправочникСсылка.ПричиныОтклоненияКандидатов";
	КонецЕсли;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПричинаОтклонения", Новый ОписаниеТипов(ТипПричиныОтклонения), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Комментарий", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДатаРегистрации", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ХешСуммаФамилия", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ХешСуммаИмя", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ХешСуммаОтчество", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ХешСуммаИНН", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ХешСуммаСНИЛС", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ХешСуммаДатаРождения", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицОсновная"));
	
	// Таблица документов физических лиц
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДанныеФизическихЛицДокументыУдостоверяющиеЛичность", Новый ОписаниеТипов("ТаблицаЗначений")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), "ДанныеФизическихЛицДокументыУдостоверяющиеЛичность"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ВидДокумента", Новый ОписаниеТипов("СправочникСсылка.ВидыДокументовФизическихЛиц"), "ДанныеФизическихЛицДокументыУдостоверяющиеЛичность"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ХешСуммаПредставлениеДокумента", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицДокументыУдостоверяющиеЛичность"));
	
	// Таблица контактной информации физических лиц
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ДанныеФизическихЛицКонтактнаяИнформация", Новый ОписаниеТипов("ТаблицаЗначений")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), "ДанныеФизическихЛицКонтактнаяИнформация"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ВидКонтактнойИнформации", Новый ОписаниеТипов("СправочникСсылка.ВидыКонтактнойИнформации"), "ДанныеФизическихЛицКонтактнаяИнформация"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ХешСуммаПредставлениеКонтактнойИнформации", Новый ОписаниеТипов("Строка"), "ДанныеФизическихЛицКонтактнаяИнформация"));
	
	// Отборы
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборФамилия", Новый ОписаниеТипов("Строка"),, НСтр("ru='Фамилия'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборИмя", Новый ОписаниеТипов("Строка"),, НСтр("ru='Имя'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборОтчество", Новый ОписаниеТипов("Строка"),, НСтр("ru='Отчество'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборИНН", Новый ОписаниеТипов("Строка"),, НСтр("ru='ИНН'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборСтраховойНомерПФР", Новый ОписаниеТипов("Строка"),, НСтр("ru='СНИЛС'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборДатаРождения", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата),, НСтр("ru='Дата рождения'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборДокументВид", Новый ОписаниеТипов("СправочникСсылка.ВидыДокументовФизическихЛиц"),, НСтр("ru='Вид документа'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборДокументСерия", Новый ОписаниеТипов("Строка"),, НСтр("ru='Серия'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборДокументНомер", Новый ОписаниеТипов("Строка"),, НСтр("ru='Номер'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборДокументДатаВыдачи", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата),, НСтр("ru='Дата выдачи'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборТелефон", Новый ОписаниеТипов("Строка")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборТелефонПредставление", Новый ОписаниеТипов("Строка"),, НСтр("ru='Телефон'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборEmail", Новый ОписаниеТипов("Строка")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОтборEmailПредставление", Новый ОписаниеТипов("Строка"),, НСтр("ru='Email'")));
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	Элементы = Форма.Элементы;
	ГруппаАрхивФизическихЛиц = Элементы[ИмяГруппы];
	ГруппаАрхивФизическихЛицТаблица = Элементы[ИмяГруппыКолонок];
	ГруппаПоляИдентификации = Элементы[ИмяГруппыОтборов];
	
	// Отборы
	
	Если Элементы.Найти("ГруппаПоляИдентификацииОсновные") = Неопределено Тогда
		
		ГруппаПоляИдентификацииОсновные = Элементы.Добавить("ГруппаПоляИдентификацииОсновные", Тип("ГруппаФормы"), ГруппаПоляИдентификации);
		ГруппаПоляИдентификацииОсновные.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаПоляИдентификацииОсновные.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаПоляИдентификацииОсновные.Заголовок = НСтр("ru='Основные сведения'");
		ГруппаПоляИдентификацииОсновные.ОтображатьЗаголовок = Истина;
		ГруппаПоляИдентификацииОсновные.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаПоляИдентификацииОсновные.СквозноеВыравнивание = СквозноеВыравнивание.Использовать;
		
		// ГруппаПоляИдентификацииДатаРождения
		Если Элементы.Найти("ГруппаПоляИдентификацииДатаРождения") = Неопределено Тогда
			ГруппаПоляИдентификацииДатаРождения = Элементы.Добавить("ГруппаПоляИдентификацииДатаРождения", Тип("ГруппаФормы"), ГруппаПоляИдентификацииОсновные);
			ГруппаПоляИдентификацииДатаРождения.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаПоляИдентификацииДатаРождения.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			ГруппаПоляИдентификацииДатаРождения.ОтображатьЗаголовок = Ложь;
			ГруппаПоляИдентификацииДатаРождения.Отображение = ОтображениеОбычнойГруппы.Нет;
			
			// ОтборДатаРождения
			Если Элементы.Найти("ОтборДатаРождения") = Неопределено Тогда
				Элемент = Элементы.Добавить("ОтборДатаРождения", Тип("ПолеФормы"), ГруппаПоляИдентификацииДатаРождения);
				Элемент.ПутьКДанным = "ОтборДатаРождения";
				Элемент.Вид = ВидПоляФормы.ПолеВвода;
				Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
				Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
			КонецЕсли;
		КонецЕсли;
		
		// ГруппаПоляИдентификацииОсновныеНиз
		Если Элементы.Найти("ГруппаПоляИдентификацииОсновныеНиз") = Неопределено Тогда
			ГруппаПоляИдентификацииОсновныеНиз = Элементы.Добавить("ГруппаПоляИдентификацииОсновныеНиз", Тип("ГруппаФормы"), ГруппаПоляИдентификацииОсновные);
			ГруппаПоляИдентификацииОсновныеНиз.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаПоляИдентификацииОсновныеНиз.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			ГруппаПоляИдентификацииОсновныеНиз.ОтображатьЗаголовок = Ложь;
			ГруппаПоляИдентификацииОсновныеНиз.Отображение = ОтображениеОбычнойГруппы.Нет;
			
			// ГруппаПоляИдентификацииЛевая
			Если Элементы.Найти("ГруппаПоляИдентификацииЛевая") = Неопределено Тогда
				ГруппаПоляИдентификацииЛевая = Элементы.Добавить("ГруппаПоляИдентификацииЛевая", Тип("ГруппаФормы"), ГруппаПоляИдентификацииОсновныеНиз);
				ГруппаПоляИдентификацииЛевая.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				ГруппаПоляИдентификацииЛевая.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				ГруппаПоляИдентификацииЛевая.ОтображатьЗаголовок = Ложь;
				ГруппаПоляИдентификацииЛевая.Отображение = ОтображениеОбычнойГруппы.Нет;
				
				// ОтборСтраховойНомерПФР
				Если Элементы.Найти("ОтборСтраховойНомерПФР") = Неопределено Тогда
					Элемент = Элементы.Добавить("ОтборСтраховойНомерПФР", Тип("ПолеФормы"), ГруппаПоляИдентификацииЛевая);
					Элемент.ПутьКДанным = "ОтборСтраховойНомерПФР";
					Элемент.Вид = ВидПоляФормы.ПолеВвода;
					Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
					Элемент.Маска = "999-999-999 99";
					Элемент.Подсказка = НСтр("ru='Страховой номер ПФР'");
					Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
					Элемент.Ширина = 12;
					Элемент.РастягиватьПоГоризонтали = Ложь;
					Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
				КонецЕсли;
				
				// ОтборТелефонПредставление
				Если Элементы.Найти("ОтборТелефонПредставление") = Неопределено Тогда
					Элемент = Элементы.Добавить("ОтборТелефонПредставление", Тип("ПолеФормы"), ГруппаПоляИдентификацииЛевая);
					Элемент.ПутьКДанным = "ОтборТелефонПредставление";
					Элемент.Вид = ВидПоляФормы.ПолеВвода;
					Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
					Элемент.РедактированиеТекста = Ложь;
					Элемент.КнопкаВыбора = Истина;
					Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
					Элемент.УстановитьДействие("НачалоВыбора", "Подключаемый_ЭлементОтбораНачалоВыбора");
				КонецЕсли;
			КонецЕсли;
			
			// ГруппаПоляИдентификацииПравая
			Если Элементы.Найти("ГруппаПоляИдентификацииПравая") = Неопределено Тогда
				ГруппаПоляИдентификацииПравая = Элементы.Добавить("ГруппаПоляИдентификацииПравая", Тип("ГруппаФормы"), ГруппаПоляИдентификацииОсновныеНиз);
				ГруппаПоляИдентификацииПравая.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				ГруппаПоляИдентификацииПравая.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				ГруппаПоляИдентификацииПравая.ОтображатьЗаголовок = Ложь;
				ГруппаПоляИдентификацииПравая.Отображение = ОтображениеОбычнойГруппы.Нет;
				
				// ОтборИНН
				Если Элементы.Найти("ОтборИНН") = Неопределено Тогда
					Элемент = Элементы.Добавить("ОтборИНН", Тип("ПолеФормы"), ГруппаПоляИдентификацииПравая);
					Элемент.ПутьКДанным = "ОтборИНН";
					Элемент.Вид = ВидПоляФормы.ПолеВвода;
					Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
					Элемент.Подсказка = НСтр("ru='ИНН, присвоенный налоговым органом'");
					Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
					Элемент.Ширина = 12;
					Элемент.РастягиватьПоГоризонтали = Ложь;
					Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
				КонецЕсли;
				
				// ОтборEmailПредставление
				Если Элементы.Найти("ОтборEmailПредставление") = Неопределено Тогда
					Элемент = Элементы.Добавить("ОтборEmailПредставление", Тип("ПолеФормы"), ГруппаПоляИдентификацииПравая);
					Элемент.ПутьКДанным = "ОтборEmailПредставление";
					Элемент.Вид = ВидПоляФормы.ПолеВвода;
					Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
					Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элементы.Найти("ГруппаПоляИдентификацииДокументУдостоверяющийЛичность") = Неопределено Тогда
		
		ГруппаПоляИдентификацииДокументУдостоверяющийЛичность = Элементы.Добавить("ГруппаПоляИдентификацииДокументУдостоверяющийЛичность", Тип("ГруппаФормы"), ГруппаПоляИдентификации);
		ГруппаПоляИдентификацииДокументУдостоверяющийЛичность.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаПоляИдентификацииДокументУдостоверяющийЛичность.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаПоляИдентификацииДокументУдостоверяющийЛичность.Заголовок = НСтр("ru='Документ удостоверяющий личность'");
		ГруппаПоляИдентификацииДокументУдостоверяющийЛичность.ОтображатьЗаголовок = Истина;
		ГруппаПоляИдентификацииДокументУдостоверяющийЛичность.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		// ОтборДокументВид
		Если Элементы.Найти("ОтборДокументВид") = Неопределено Тогда
			Элемент = Элементы.Добавить("ОтборДокументВид", Тип("ПолеФормы"), ГруппаПоляИдентификацииДокументУдостоверяющийЛичность);
			Элемент.ПутьКДанным = "ОтборДокументВид";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
		КонецЕсли;
		
		// ГруппаПоляИдентификацииДокументСерияНомер
		Если Элементы.Найти("ГруппаПоляИдентификацииДокументСерияНомер") = Неопределено Тогда
			ГруппаПоляИдентификацииДокументСерияНомер = Элементы.Добавить("ГруппаПоляИдентификацииДокументСерияНомер", Тип("ГруппаФормы"), ГруппаПоляИдентификацииДокументУдостоверяющийЛичность);
			ГруппаПоляИдентификацииДокументСерияНомер.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаПоляИдентификацииДокументСерияНомер.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			ГруппаПоляИдентификацииДокументСерияНомер.ОтображатьЗаголовок = Ложь;
			ГруппаПоляИдентификацииДокументСерияНомер.Отображение = ОтображениеОбычнойГруппы.Нет;
			
			// ОтборДокументСерия
			Если Элементы.Найти("ОтборДокументСерия") = Неопределено Тогда
				Элемент = Элементы.Добавить("ОтборДокументСерия", Тип("ПолеФормы"), ГруппаПоляИдентификацииДокументСерияНомер);
				Элемент.ПутьКДанным = "ОтборДокументСерия";
				Элемент.Вид = ВидПоляФормы.ПолеВвода;
				Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
				Элемент.Подсказка = НСтр("ru='Серия документа'");
				Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
				Элемент.Ширина = 10;
				Элемент.РастягиватьПоГоризонтали = Ложь;
				Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
			КонецЕсли;
		
			// ОтборДокументНомер
			Если Элементы.Найти("ОтборДокументНомер") = Неопределено Тогда
				Элемент = Элементы.Добавить("ОтборДокументНомер", Тип("ПолеФормы"), ГруппаПоляИдентификацииДокументСерияНомер);
				Элемент.ПутьКДанным = "ОтборДокументНомер";
				Элемент.Вид = ВидПоляФормы.ПолеВвода;
				Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
				Элемент.Подсказка = НСтр("ru='Номер документа'");
				Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
				Элемент.Ширина = 10;
				Элемент.РастягиватьПоГоризонтали = Ложь;
				Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
			КонецЕсли;
		
		КонецЕсли;
		
		// ОтборДокументДатаВыдачи
		Если Элементы.Найти("ОтборДокументДатаВыдачи") = Неопределено Тогда
			Элемент = Элементы.Добавить("ОтборДокументДатаВыдачи", Тип("ПолеФормы"), ГруппаПоляИдентификацииДокументУдостоверяющийЛичность);
			Элемент.ПутьКДанным = "ОтборДокументДатаВыдачи";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
		КонецЕсли;
		
	КонецЕсли;
	
	// Страница одного человека
	
	// ДекорацияПояснениеКОбъекту
	Если Элементы.Найти("ДекорацияПояснениеКОбъекту") = Неопределено Тогда
		Элемент = Элементы.Добавить("ДекорацияПояснениеКОбъекту", Тип("ДекорацияФормы"), ГруппаАрхивФизическихЛиц);
		Элемент.Вид = ВидДекорацииФормы.Надпись;
	КонецЕсли;
	
	// ПозицияСотрудника
	Если Элементы.Найти("ПозицияСотрудника") = Неопределено Тогда
		Элемент = Элементы.Добавить("ПозицияСотрудника", Тип("ПолеФормы"), ГруппаАрхивФизическихЛиц);
		Элемент.ПутьКДанным = "Элементы." + ИмяТаблицы + ".ТекущиеДанные.Позиция";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ТолькоПросмотр = Истина;
		Элемент.Видимость = Ложь;
	КонецЕсли;
	
	// ВакансияКандидата
	Если Элементы.Найти("ВакансияКандидата") = Неопределено Тогда
		Элемент = Элементы.Добавить("ВакансияКандидата", Тип("ПолеФормы"), ГруппаАрхивФизическихЛиц);
		Элемент.ПутьКДанным = "Элементы." + ИмяТаблицы + ".ТекущиеДанные.Вакансия";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ТолькоПросмотр = Истина;
		Элемент.Видимость = Ложь;
	КонецЕсли;
	
	// ГруппаПричины
	Если Элементы.Найти("ГруппаПричины") = Неопределено Тогда
		
		ГруппаПричины = Элементы.Добавить("ГруппаПричины", Тип("ГруппаФормы"), ГруппаАрхивФизическихЛиц);
		ГруппаПричины.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаПричины.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаПричины.ОтображатьЗаголовок = Ложь;
		ГруппаПричины.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		// ПричинаОтклонения
		Если Элементы.Найти("ПричинаОтклонения") = Неопределено Тогда
			Элемент = Элементы.Добавить("ПричинаОтклонения", Тип("ПолеФормы"), ГруппаПричины);
			Элемент.ПутьКДанным = "Элементы." + ИмяТаблицы + ".ТекущиеДанные.ПричинаОтклонения";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
			Элемент.Видимость = Ложь;
		КонецЕсли;
		
		// ДанныеФизическихЛицПричинаHR
		Если Элементы.Найти("ДанныеФизическихЛицПричинаHR") = Неопределено Тогда
			Элемент = Элементы.Добавить("ДанныеФизическихЛицПричинаHR", Тип("ПолеФормы"), ГруппаПричины);
			Элемент.ПутьКДанным = "Элементы." + ИмяТаблицы + ".ТекущиеДанные.ПричинаHR";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
			Элемент.Видимость = Ложь;
		КонецЕсли;
		
		// ДанныеФизическихЛицПричинаРуководитель
		Если Элементы.Найти("ДанныеФизическихЛицПричинаРуководитель") = Неопределено Тогда
			Элемент = Элементы.Добавить("ДанныеФизическихЛицПричинаРуководитель", Тип("ПолеФормы"), ГруппаПричины);
			Элемент.ПутьКДанным = "Элементы." + ИмяТаблицы + ".ТекущиеДанные.ПричинаРуководитель";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
			Элемент.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	// Комментарий
	Если Элементы.Найти("Комментарий") = Неопределено Тогда
		Элемент = Элементы.Добавить("Комментарий", Тип("ПолеФормы"), ГруппаАрхивФизическихЛиц);
		Элемент.ПутьКДанным = "Элементы." + ИмяТаблицы + ".ТекущиеДанные.Комментарий";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.МногострочныйРежим = Истина;
		Элемент.АвтоМаксимальнаяШирина = Ложь;
		Элемент.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	// Страница нескольких человек
	
	// ГруппаАрхивФизическихЛицТаблицаЛевая
	Если Элементы.Найти("ГруппаАрхивФизическихЛицТаблицаЛевая") = Неопределено Тогда
		ГруппаАрхивФизическихЛицТаблицаЛевая = Элементы.Добавить("ГруппаАрхивФизическихЛицТаблицаЛевая", Тип("ГруппаФормы"), ГруппаАрхивФизическихЛицТаблица);
		ГруппаАрхивФизическихЛицТаблицаЛевая.Вид = ВидГруппыФормы.ГруппаКолонок;
		ГруппаАрхивФизическихЛицТаблицаЛевая.Группировка = ГруппировкаКолонок.Вертикальная;
		
		// ДанныеФизическихЛицПричинаHRПоле
		Если Элементы.Найти("ДанныеФизическихЛицПричинаHRПоле") = Неопределено Тогда
			Элемент = Элементы.Добавить("ДанныеФизическихЛицПричинаHRПоле", Тип("ПолеФормы"), ГруппаАрхивФизическихЛицТаблицаЛевая);
			Элемент.ПутьКДанным = ИмяТаблицы + ".ПричинаHR";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		// ДанныеФизическихЛицПричинаРуководительПоле
		Если Элементы.Найти("ДанныеФизическихЛицПричинаРуководительПоле") = Неопределено Тогда
			Элемент = Элементы.Добавить("ДанныеФизическихЛицПричинаРуководительПоле", Тип("ПолеФормы"), ГруппаАрхивФизическихЛицТаблицаЛевая);
			Элемент.ПутьКДанным = ИмяТаблицы + ".ПричинаРуководитель";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		// ДанныеФизическихЛицПричинаОтклоненияПоле
		Если Элементы.Найти("ДанныеФизическихЛицПричинаОтклоненияПоле") = Неопределено Тогда
			Элемент = Элементы.Добавить("ДанныеФизическихЛицПричинаОтклоненияПоле", Тип("ПолеФормы"), ГруппаАрхивФизическихЛицТаблицаЛевая);
			Элемент.ПутьКДанным = ИмяТаблицы + ".ПричинаОтклонения";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// ГруппаАрхивФизическихЛицТаблицаПравая
	Если Элементы.Найти("ГруппаАрхивФизическихЛицТаблицаПравая") = Неопределено Тогда
		ГруппаАрхивФизическихЛицТаблицаПравая = Элементы.Добавить("ГруппаАрхивФизическихЛицТаблицаПравая", Тип("ГруппаФормы"), ГруппаАрхивФизическихЛицТаблица);
		ГруппаАрхивФизическихЛицТаблицаПравая.Вид = ВидГруппыФормы.ГруппаКолонок;
		ГруппаАрхивФизическихЛицТаблицаПравая.Группировка = ГруппировкаКолонок.Вертикальная;
		
		// ДанныеФизическихЛицДатаРегистрацииПоле
		Если Элементы.Найти("ДанныеФизическихЛицДатаРегистрацииПоле") = Неопределено Тогда
			Элемент = Элементы.Добавить("ДанныеФизическихЛицДатаРегистрацииПоле", Тип("ПолеФормы"), ГруппаАрхивФизическихЛицТаблицаПравая);
			Элемент.ПутьКДанным = ИмяТаблицы + ".ДатаРегистрации";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.Формат = "ДЛФ=D";
			Элемент.ФорматРедактирования = "ДЛФ=D";
			Элемент.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		// ДанныеФизическихЛицКомментарийПоле
		Если Элементы.Найти("ДанныеФизическихЛицКомментарийПоле") = Неопределено Тогда
			Элемент = Элементы.Добавить("ДанныеФизическихЛицКомментарийПоле", Тип("ПолеФормы"), ГруппаАрхивФизическихЛицТаблицаПравая);
			Элемент.ПутьКДанным = ИмяТаблицы + ".Комментарий";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// ГруппаФотография
	Если Элементы.Найти("ГруппаФотография") = Неопределено Тогда
		
		ГруппаФотография = Элементы.Добавить("ГруппаФотография", Тип("ГруппаФормы"), ГруппаПоляИдентификации);
		ГруппаФотография.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаФотография.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаФотография.ОтображатьЗаголовок = Ложь;
		ГруппаФотография.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		// Фотография
		Если Элементы.Найти("Фотография") = Неопределено Тогда
			Элемент = Элементы.Добавить("Фотография", Тип("ПолеФормы"), ГруппаФотография);
			Элемент.ПутьКДанным = "Элементы." + ИмяТаблицы + ".ТекущиеДанные.АдресФотографии";
			Элемент.Вид = ВидПоляФормы.ПолеКартинки;
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.ТолькоПросмотр = Истина;
			Элемент.ТекстНевыбраннойКартинки = НСтр("ru='Нет фотографии'");
			Элемент.РазмерКартинки = РазмерКартинки.Пропорционально;
			Элемент.ЦветТекста = ЦветаСтиля.НепринятаяВерсия;
			Элемент.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная);
			Элемент.Ширина = 6;
			Элемент.Высота = 5;
			Элемент.РастягиватьПоВертикали = Ложь;
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементОтбораПриИзменении");
		КонецЕсли;
		
	КонецЕсли;
	
	// Причины увольнения
	ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
	
	ГруппаОтбора =  ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".ПричинаHR");
	
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".ПричинаРуководитель");
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДанныеФизическихЛицПричинаHRПоле"); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДанныеФизическихЛицПричинаРуководительПоле"); 
	ОформляемоеПоле.Использование = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Причина отклонения
	ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".ПричинаОтклонения");
	ЭлементОтбора.Использование = Истина;
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДанныеФизическихЛицПричинаОтклоненияПоле"); 
	ОформляемоеПоле.Использование = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	Форма.ОтборФамилия = Форма.Параметры.Фамилия;
	Форма.ОтборИмя = Форма.Параметры.Имя;
	Форма.ОтборОтчество = Форма.Параметры.Отчество;
	
КонецПроцедуры

Процедура УстановитьПараметрыИнфоНадписиФормыСотрудника(Форма) Экспорт
	
	Если Форма.ИмеютсяАктуальныеСотрудники  Тогда
		
		ИнфоНадписьМестаРаботы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 является нашим сотрудником. Ниже приведены места работы.
			|Для перехода к полной информации о месте работы используйте соответствующую ссылку.'"),
			Форма.ФизическоеЛицоСсылка);
		
	ИначеЕсли Форма.ИмеютсяАктуальныеСотрудникиНеОтображаемые Тогда
		
		ИнфоНадписьМестаРаботы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 является нашим сотрудником.'"),
			Форма.ФизическоеЛицоСсылка);
		
	Иначе
		
		ИнфоНадписьМестаРаботы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 не является нашим сотрудником.'"),
			Форма.ФизическоеЛицоСсылка);
		
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
		Форма,
		"ГруппаФизическиеЛицаРабота",
		ИнфоНадписьМестаРаботы);
	
КонецПроцедуры

Процедура УстановитьПараметрыИнфоНадписиФормыКандидата(Форма) Экспорт
	
	ИнфоНадписьКандидата = "";
	Если ЗначениеЗаполнено(Форма.КандидатСсылка) Тогда
		КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, Форма.КандидатСсылка.ФизическоеЛицо, "Фамилия, Имя, Отчество, ФИОПолные", ТекущаяДатаСеанса());
		ИнфоНадписьКандидата = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 зарегистрирован в системе как кандидат %2.
				|Для перехода к полной информации о кандидате используйте соответствующую ссылку.'"),
				?(КадровыеДанные.Количество() > 0, КадровыеДанные[0].ФИОПолные, Форма.КандидатСсылка),
				Формат(Форма.ДатаРегистрации, "ДЛФ=Д"));
		
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
		Форма,
		"ГруппаДанныеОКандидате",
		ИнфоНадписьКандидата);
	
КонецПроцедуры

#КонецОбласти
