////////////////////////////////////////////////////////////////////////////////
//
//   Расширенная реализация подсистемы персонифицированного учета.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьВТЗарегистрированныеКорректировкиСтажа(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НеобходимыеКорректировкиСтажаПФР.Организация,
	|	НеобходимыеКорректировкиСтажаПФР.ОтчетныйПериод КАК КорректируемыйПериод,
	|	НеобходимыеКорректировкиСтажаПФР.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТЗарегистрированныеКорректировкиСтажа
	|ИЗ
	|	РегистрСведений.НеобходимыеКорректировкиСтажаПФР КАК НеобходимыеКорректировкиСтажаПФР
	|ГДЕ
	|	НеобходимыеКорректировкиСтажаПФР.Организация = &Организация
	|	И НеобходимыеКорректировкиСтажаПФР.ОтчетныйПериод < &ОтчетныйПериод";	
	Запрос.Выполнить();
КонецПроцедуры

Процедура СоздатьВТЗаписиСтажаПоДаннымУчета(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияДанных, ПараметрыОтбора) Экспорт
	
	ПараметрыОтбораСтажа = УчетСтажаПФР.ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР();
	ПараметрыОтбораСтажа.Организация = Организация;
	ПараметрыОтбораСтажа.НачалоПериода = ОтчетныйПериод;
	ПараметрыОтбораСтажа.ОкончаниеПериода = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаСтажаПерсУчета(ОтчетныйПериод);
	
	Если ПараметрыОтбора.СписокФизическихЛиц <> Неопределено Тогда	
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("СписокФизическихЛиц", ПараметрыОтбора.СписокФизическихЛиц);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФильтрДляФормированияСтажа
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&СписокФизическихЛиц)";
		
		Запрос.Выполнить();
		
		ПараметрыОтбораСтажа.ИмяВТОтбор = "ВТФильтрДляФормированияСтажа";
		ПараметрыОтбораСтажа.ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		ПараметрыОтбораСтажа.ИзмеренияОтбора.Добавить("ГоловнаяОрганизация");
		
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	РегистрСведений.ЗаписиОСтажеДоНачалаЭксплуатации КАК ЗаписиОСтажеДоНачалаЭксплуатации
		|ГДЕ
		|	ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода >= &НачалоПериода";
	Запрос.УстановитьПараметр("НачалоПериода", ОтчетныйПериод);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() И ОтчетныйПериод >= '20130101' Тогда
		УчетСтажаПФР.СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ПараметрыОтбораСтажа, "ВТЗаписиСтажаПоДаннымУчета");
		Возврат;
	Иначе
		УчетСтажаПФР.СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ПараметрыОтбораСтажа, "ВТЗаписиСтажаПоДаннымУчетаВременная");
	КонецЕсли;
	
	Если ОтчетныйПериод < '20130101' Тогда	
		СоздатьВТЗаписиСтажаПоДаннымУчетаБезВыделенияГПХ(МенеджерВременныхТаблиц);
	Иначе
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаписиСтажаПоДаннымУчета.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ЗаписиСтажаПоДаннымУчета.Организация КАК Организация,
			|	ЗаписиСтажаПоДаннымУчета.ОтчетныйПериод КАК ОтчетныйПериод,
			|	ЗаписиСтажаПоДаннымУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ЗаписиСтажаПоДаннымУчета.ТипДоговора КАК ТипДоговора,
			|	ЗаписиСтажаПоДаннымУчета.ДатаНачалаПериода КАК ДатаНачалаПериода,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.ОснованиеВыслугиЛет, ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка)) КАК ОснованиеВыслугиЛет,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.ОсобыеУсловияТруда, ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)) КАК ОсобыеУсловияТруда,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.КодПозицииСписка, ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)) КАК КодПозицииСписка,
			|	ЕСТЬNULL(ЗаписиСтажаПоДаннымУчета.ТерриториальныеУсловия, ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)) КАК ТерриториальныеУсловия,
			|	ЗаписиСтажаПоДаннымУчета.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
			|	ЗаписиСтажаПоДаннымУчета.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
			|	ЗаписиСтажаПоДаннымУчета.ЗамещениеГосударственныхМуниципальныхДолжностей КАК ЗамещениеГосударственныхМуниципальныхДолжностей,
			|	ЗаписиСтажаПоДаннымУчета.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
			|	ЗаписиСтажаПоДаннымУчета.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
			|	ЗаписиСтажаПоДаннымУчета.ОснованиеИсчисляемогоСтажа КАК ОснованиеИсчисляемогоСтажа,
			|	ЗаписиСтажаПоДаннымУчета.ПервыйПараметрИсчисляемогоСтажа КАК ПервыйПараметрИсчисляемогоСтажа,
			|	ЗаписиСтажаПоДаннымУчета.ВторойПараметрИсчисляемогоСтажа КАК ВторойПараметрИсчисляемогоСтажа,
			|	ЗаписиСтажаПоДаннымУчета.ПервыйПараметрВыслугиЛет КАК ПервыйПараметрВыслугиЛет,
			|	ЗаписиСтажаПоДаннымУчета.ВторойПараметрВыслугиЛет КАК ВторойПараметрВыслугиЛет,
			|	ЗаписиСтажаПоДаннымУчета.ФиксСтаж КАК ФиксСтаж,
			|	ЗаписиСтажаПоДаннымУчета.СложныйСтаж КАК СложныйСтаж
			|ИЗ
			|	ВТЗаписиСтажаПоДаннымУчетаВременная КАК ЗаписиСтажаПоДаннымУчета
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ГоловнаяОрганизация,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.Организация,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ОтчетныйПериод,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ФизическоеЛицо,
			|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка),
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ДатаНачалаПериода,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ОснованиеВыслугиЛет,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ОсобыеУсловияТруда,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.КодПозицииСписка,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ТерриториальныеУсловия,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ПараметрТерриториальныхУсловий,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ТретийПараметрВыслугиЛет,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ЗамещениеГосударственныхМуниципальныхДолжностей,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ТретийПараметрИсчисляемогоСтажа,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ОснованиеИсчисляемогоСтажа,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ПервыйПараметрИсчисляемогоСтажа,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ВторойПараметрИсчисляемогоСтажа,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ПервыйПараметрВыслугиЛет,
			|	ЗаписиОСтажеДоНачалаЭксплуатации.ВторойПараметрВыслугиЛет,
			|	ЛОЖЬ,
			|	ИСТИНА
			|ИЗ
			|	РегистрСведений.ЗаписиОСтажеДоНачалаЭксплуатации КАК ЗаписиОСтажеДоНачалаЭксплуатации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФильтр КАК Фильтр
			|		ПО (&УсловияСвязиПоИзмерениям)
			|ГДЕ
			|	ЗаписиОСтажеДоНачалаЭксплуатации.Организация = &Организация
			|	И ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода >= &НачалоПериода
			|	И ЗаписиОСтажеДоНачалаЭксплуатации.ДатаНачалаПериода <= &ОкончаниеПериода
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаНачалаПериода";
		
		Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтбораСтажа.НачалоПериода);
		Запрос.УстановитьПараметр("ОкончаниеПериода", ПараметрыОтбораСтажа.ОкончаниеПериода);
		Запрос.УстановитьПараметр("Организация", Организация);
		Если ПараметрыОтбораСтажа.ИмяВТОтбор = Неопределено Тогда
			ПодстрокаЗамены = "ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФильтр КАК Фильтр
							   |		ПО (&УсловияСвязиПоИзмерениям)";
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ПодстрокаЗамены, "");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТФильтр", ПараметрыОтбораСтажа.ИмяВТОтбор);
			
			УсловиеСвязи = "";
			Для Каждого ИзмерениеФильтра Из ПараметрыОтбораСтажа.ИзмеренияОтбора Цикл 
				УсловиеСвязи = УсловиеСвязи + "
											|	И ЗаписиОСтажеДоНачалаЭксплуатации." + ИзмерениеФильтра + " = Фильтр." + ИзмерениеФильтра;
			КонецЦикла;
			
			УсловиеСвязи = Сред(УсловиеСвязи, 4);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияСвязиПоИзмерениям", УсловиеСвязи);
		КонецЕсли;
		
		Если ПараметрыОтбораСтажа.Организация = Неопределено Тогда
			ТекстУсловияОрганизация = "ИСТИНА";
		Иначе
			ТекстУсловияОрганизация = "ЗаписиОСтажеДоНачалаЭксплуатации.Организация = &Организация";
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОрганизация", ТекстУсловияОрганизация);
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьЗапросУничтоженияВременнойТаблицы(Запрос.Текст, "ВТЗаписиСтажаПоДаннымУчетаВременная");
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		ТаблицаСтажа = Результат.Выгрузить();
		ОбъединитьЗаписиНепрерывногоСтажа(ТаблицаСтажа, Ложь);
		ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерВременныхТаблиц, ТаблицаСтажа, "ВТЗаписиСтажаПоДаннымУчета");
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура СоздатьВТЗаписиСтажаПоДаннымУчетаБезВыделенияГПХ(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеУчетаСтажаПФРВременная.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеУчетаСтажаПФРВременная.ТипДоговора,
	|	ДанныеУчетаСтажаПФРВременная.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеУчетаСтажаПФРВременная.ОснованиеВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ОсобыеУсловияТруда,
	|	ДанныеУчетаСтажаПФРВременная.КодПозицииСписка,
	|	ДанныеУчетаСтажаПФРВременная.ТерриториальныеУсловия,
	|	ДанныеУчетаСтажаПФРВременная.ПараметрТерриториальныхУсловий,
	|	ДанныеУчетаСтажаПФРВременная.ТретийПараметрВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ДатаОкончанияПериода,
	|	ДанныеУчетаСтажаПФРВременная.ТретийПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ОснованиеИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ПервыйПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ВторойПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ПервыйПараметрВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ВторойПараметрВыслугиЛет
	|ИЗ
	|	ВТЗаписиСтажаПоДаннымУчетаВременная КАК ДанныеУчетаСтажаПФРВременная
	|ГДЕ
	|	ДанныеУчетаСтажаПФРВременная.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	ДатаНачалаПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУчетаСтажаПФРВременная.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеУчетаСтажаПФРВременная.ТипДоговора,
	|	ДанныеУчетаСтажаПФРВременная.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеУчетаСтажаПФРВременная.ОснованиеВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ОсобыеУсловияТруда,
	|	ДанныеУчетаСтажаПФРВременная.КодПозицииСписка,
	|	ДанныеУчетаСтажаПФРВременная.ТерриториальныеУсловия,
	|	ДанныеУчетаСтажаПФРВременная.ПараметрТерриториальныхУсловий,
	|	ДанныеУчетаСтажаПФРВременная.ТретийПараметрВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ДатаОкончанияПериода,
	|	ДанныеУчетаСтажаПФРВременная.ТретийПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ОснованиеИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ПервыйПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ВторойПараметрИсчисляемогоСтажа,
	|	ДанныеУчетаСтажаПФРВременная.ПервыйПараметрВыслугиЛет,
	|	ДанныеУчетаСтажаПФРВременная.ВторойПараметрВыслугиЛет
	|ИЗ
	|	ВТЗаписиСтажаПоДаннымУчетаВременная КАК ДанныеУчетаСтажаПФРВременная
	|ГДЕ
	|	ДанныеУчетаСтажаПФРВременная.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ГражданскоПравовой)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	ДатаНачалаПериода";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаСтажа = Результат[0].Выгрузить();
	ТаблицаСтажаПоДоговорам = Результат[1].Выгрузить();
	
	ТаблицаСтажаПоДоговорам.Сортировать("ФизическоеЛицо,ДатаНачалаПериода");
	ПредшествующееФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
	МассивСтрок = Новый Массив;
	СтрокСтажа = 0;
	СтруктураПоиска = Новый Структура("ТипДоговора, ФизическоеЛицо");
	НомерСтроки = ТаблицаСтажаПоДоговорам.Количество();
	Пока НомерСтроки > 0 Цикл
		
		ТекущаяЗапись = ТаблицаСтажаПоДоговорам[НомерСтроки - 1];
		
		Если ТекущаяЗапись.ФизическоеЛицо <> ПредшествующееФизЛицо Тогда
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,ТекущаяЗапись);
			МассивСтрок = ТаблицаСтажа.НайтиСтроки(СтруктураПоиска);
			ПредшествующееФизЛицо = ТекущаяЗапись.ФизическоеЛицо;
		КонецЕсли;
		
		СтрокСтажа = МассивСтрок.Количество();
		Если СтрокСтажа = 0 Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаСтажа.Добавить(),ТекущаяЗапись);
			НомерСтроки = НомерСтроки - 1;
			Продолжить;
		КонецЕсли;
		
		ДатаНачалаПериода = НачалоДня(ТекущаяЗапись.ДатаНачалаПериода);
		ДатаОкончанияПериода = КонецДня(ТекущаяЗапись.ДатаОкончанияПериода);
		
		Для Сч = 1 По СтрокСтажа Цикл
			
			СтрокаСтажа = МассивСтрок[СтрокСтажа - Сч];
			ДатаНачалаСтрокиСтажа = НачалоДня(СтрокаСтажа.ДатаНачалаПериода);
			ДатаОкончанияСтрокиСтажа = КонецДня(СтрокаСтажа.ДатаОкончанияПериода);
			
			Если ДатаНачалаСтрокиСтажа > ДатаОкончанияПериода Тогда
			ИначеЕсли ДатаНачалаСтрокиСтажа > ДатаНачалаПериода Тогда
				Если ДатаОкончанияСтрокиСтажа < ДатаОкончанияПериода Тогда
					НоваяСтрока = ТаблицаСтажа.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяЗапись);
					НоваяСтрока.ДатаНачалаПериода = ДатаОкончанияСтрокиСтажа + 1;
					НоваяСтрока.ДатаОкончанияПериода = ДатаОкончанияПериода;
				КонецЕсли;
				ДатаОкончанияПериода = НачалоДня(СтрокаСтажа.ДатаНачалаПериода - 1);
			Иначе
				Если ДатаОкончанияСтрокиСтажа >= ДатаНачалаПериода Тогда
					ДатаНачалаПериода = ДатаОкончанияСтрокиСтажа + 1;
				КонецЕсли;
				Прервать;
			КонецЕсли;
			МассивСтрок.Удалить(СтрокСтажа - Сч);
		КонецЦикла;
		
		Если ДатаОкончанияПериода >= ДатаНачалаПериода Тогда
			НоваяСтрока = ТаблицаСтажа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяЗапись);
			НоваяСтрока.ДатаНачалаПериода = ДатаНачалаПериода;
			НоваяСтрока.ДатаОкончанияПериода = ДатаОкончанияПериода;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
	
	ТаблицаСтажа.Сортировать("ФизическоеЛицо, ДатаНачалаПериода");
	ОбъединитьЗаписиНепрерывногоСтажа(ТаблицаСтажа);

	Запрос.УстановитьПараметр("ПериодыРаботыСорт", ТаблицаСтажа);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныйСтаж.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ПустаяСсылка) КАК ТипДоговора,
	|	ИсходныйСтаж.ДатаНачалаПериода,
	|	ИсходныйСтаж.ДатаОкончанияПериода,
	|	ИсходныйСтаж.ОсобыеУсловияТруда,
	|	ИсходныйСтаж.КодПозицииСписка,
	|	ИсходныйСтаж.ТретийПараметрИсчисляемогоСтажа,
	|	ИсходныйСтаж.ОснованиеВыслугиЛет,
	|	ИсходныйСтаж.ТерриториальныеУсловия,
	|	ИсходныйСтаж.ПараметрТерриториальныхУсловий,
	|	ИсходныйСтаж.ТретийПараметрВыслугиЛет,
	|	ЗНАЧЕНИЕ(Справочник.ОснованияИсчисляемогоСтраховогоСтажа.ПустаяСсылка) КАК ОснованиеИсчисляемогоСтажа,
	|	ЗНАЧЕНИЕ(Справочник.ЗамещениеГосударственныхМуниципальныхДолжностейПФР.ПустаяСсылка) КАК ЗамещениеГосударственныхМуниципальныхДолжностей,
	|	"""" КАК ПервыйПараметрИсчисляемогоСтажа,
	|	"""" КАК ВторойПараметрИсчисляемогоСтажа,
	|	"""" КАК ПервыйПараметрВыслугиЛет,
	|	"""" КАК ВторойПараметрВыслугиЛет,
	|	ЛОЖЬ КАК ФиксСтаж,
	|	ИСТИНА КАК СложныйСтаж
	|ПОМЕСТИТЬ ВТЗаписиСтажаПоДаннымУчета
	|ИЗ
	|	&ПериодыРаботыСорт КАК ИсходныйСтаж";

	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура ОбъединитьЗаписиНепрерывногоСтажа(ТаблицаСтажа, УчитыватьТипДоговора = Истина)
	НомерСтроки = ТаблицаСтажа.Количество() - 1;
	Пока НомерСтроки > 0 Цикл
		
		ТекущаяЗапись = ТаблицаСтажа[НомерСтроки];
		ПредшествующаяЗапись = ТаблицаСтажа[НомерСтроки - 1];
		
		Если ТекущаяЗапись.ФизическоеЛицо = ПредшествующаяЗапись.ФизическоеЛицо // Если совпадает ФизическоеЛицо.
			И (ТекущаяЗапись.ТипДоговора = ПредшествующаяЗапись.ТипДоговора
			ИЛИ Не УчитыватьТипДоговора)
			И (ТекущаяЗапись.ДатаНачалаПериода = КонецДня(ПредшествующаяЗапись.ДатаОкончанияПериода)+1 
			// Если записи непрерывны (идут друг за другом по времени)
			ИЛИ КонецДня(ТекущаяЗапись.ДатаНачалаПериода) = КонецДня(ПредшествующаяЗапись.ДатаОкончанияПериода))
			// и совпадают параметры стажа.
			И ТекущаяЗапись.ОсобыеУсловияТруда = ПредшествующаяЗапись.ОсобыеУсловияТруда
			И СокрЛП(ТекущаяЗапись.КодПозицииСписка) = СокрЛП(ПредшествующаяЗапись.КодПозицииСписка)
			И ТекущаяЗапись.ОснованиеВыслугиЛет = ПредшествующаяЗапись.ОснованиеВыслугиЛет
			И ТекущаяЗапись.ТерриториальныеУсловия = ПредшествующаяЗапись.ТерриториальныеУсловия
			И ТекущаяЗапись.ПараметрТерриториальныхУсловий = ПредшествующаяЗапись.ПараметрТерриториальныхУсловий
			И ТекущаяЗапись.ТретийПараметрИсчисляемогоСтажа = ПредшествующаяЗапись.ТретийПараметрИсчисляемогоСтажа
			И ТекущаяЗапись.ТретийПараметрВыслугиЛет = ПредшествующаяЗапись.ТретийПараметрВыслугиЛет
			Тогда
			// объединим записи в одну
			ПредшествующаяЗапись.ДатаОкончанияПериода = ТекущаяЗапись.ДатаОкончанияПериода;
			ТаблицаСтажа.Удалить(ТекущаяЗапись);
		КонецЕсли;
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
КонецПроцедуры

Функция ВидСтажаПРФ2014ПоСвойствамНачисления(КатегорияНачисления, ВидУчетаВремени, ВидПособияСоциальногоСтрахования, ВидСтажаСЗВ) Экспорт 
	ВидСтажаПерсУчета2014 = Неопределено;
	
	Если ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.ЧАЭС Тогда
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.ЧАЭС;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.ПустаяСсылка() Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.ПустаяСсылка();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидУчетаВремени) Тогда
		ОсновноеВремя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидУчетаВремени, "ОсновноеВремя");
	Иначе
		ОсновноеВремя = Справочники.ВидыИспользованияРабочегоВремени.ПустаяСсылка();
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ВидПособияСоциальногоСтрахования)
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Болезнь")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ДополнительныйОтпуск")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОсновнойОтпуск")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ПростойПоВинеРаботодателя")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ПовышениеКвалификацииВДругойМестности")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтпускНаОбучение")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ГосударственныеОбязанности")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтстранениеОтРаботыСОплатой")
		Или ОсновноеВремя = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты") Тогда
		
		ВидСтажаПерсУчета2014 = ПорядокВключенияПериодаВСтраховойСтаж2014(ВидПособияСоциальногоСтрахования, ОсновноеВремя);
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.ВключаетсяВСтажДляДосрочногоНазначенияПенсии Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.ВключаетсяВСтраховойСтаж Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.ВключаетсяВСтраховойСтаж;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.ВременнаяНетрудоспособность Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.ВременнаяНетрудоспособность;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.Декрет Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.Декрет;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.Дети Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.Дети;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.ДЛДЕТИ Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.ДЛДЕТИ;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.НеВключаетсяВСтраховойСтаж Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.НеВключаетсяВСтраховойСтаж;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.НЕОПЛ Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.НЕОПЛ;
	ИначеЕсли ВидСтажаСЗВ = Перечисления.ВидыСтажаСЗВ.ОтпускБезСохраненияЗарплаты Тогда 	
		ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПФР2014.ОтпускБезСохраненияЗарплаты;
	КонецЕсли; 
	
	Возврат ВидСтажаПерсУчета2014;
КонецФункции

Функция ПорядокВключенияПериодаВСтраховойСтаж2014(ВидПособияСоциальногоСтрахования, ОбозначениеВТабелеУчетаРабочегоВремени) Экспорт 
	
	ВидСтажа = Неопределено;
	
	Если ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.БеременностьРоды 
		ИЛИ ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.Декрет;
	ИначеЕсли ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.ПоУходуЗаРебенком Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.Дети;
	ИначеЕсли ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ДОПВЫХ;
	ИначеЕсли ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность
		ИЛИ ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай
		ИЛИ ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание 
		ИЛИ ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Болезнь") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ВременнаяНетрудоспособность;
	ИначеЕсли ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ВключаетсяВСтраховойСтаж;
	ИначеЕсли ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев
		Или ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ДополнительныйОтпуск")
		Или ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОсновнойОтпуск") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ДЛОТПУСК;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ДЛДЕТИ;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ПростойПоВинеРаботодателя") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ПРОСТОЙ;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ПовышениеКвалификацииВДругойМестности") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.КВАЛИФ;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтпускНаОбучение") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.УЧОТПУСК;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ГосударственныеОбязанности") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ОБЩЕСТ;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтстранениеОтРаботыСОплатой") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ОТСТРАН;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.НЕОПЛ;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Простой")
		ИЛИ ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Командировка") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ВключаетсяВСтраховойСтаж;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству")
		ИЛИ ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя") 
		ИЛИ ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.НЕОПЛ;
	ИначеЕсли ОбозначениеВТабелеУчетаРабочегоВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ДополнительныеВыходныеДниОплачиваемые") Тогда
		
		ВидСтажа = Перечисления.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии;
	КонецЕсли;
	
    Возврат ВидСтажа
	
КонецФункции 

Функция КвартальнаяОтчетностьПерераспределятьВзносыАвтоматически() Экспорт 
	Возврат Ложь;	
КонецФункции

Процедура КвартальнаяОтчетностьПФРДополнитьКомандыФормы(Форма) Экспорт
	Команда = Форма.Команды.Добавить("НеобходимыеКорректировкиСтажа");
	Команда.Действие = "Подключаемый_ВыполнитьНазначеннуюКоманду";
	Команда.Заголовок = НСтр("ru = 'Зарегистрированные изменения стажа'");

	Гиперссылка = Форма.Элементы.Добавить("НеобходимыеКорректировкиСтажа", Тип("КнопкаФормы"), Форма.Элементы.Шапка);
	Гиперссылка.Вид  = ВидКнопкиФормы.Гиперссылка;
	Гиперссылка.ИмяКоманды = "НеобходимыеКорректировкиСтажа";	
	
КонецПроцедуры

Процедура КвартальнаяОтчетностьПФРОбновитьДанныеФормы(Форма) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Форма.Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НеобходимыеКорректировкиСтажаПФР.Организация
	|ИЗ
	|	РегистрСведений.НеобходимыеКорректировкиСтажаПФР КАК НеобходимыеКорректировкиСтажаПФР
	|ГДЕ
	|	НеобходимыеКорректировкиСтажаПФР.Организация = &Организация";
	
	Если Запрос.Выполнить().Пустой() Тогда
		Форма.Элементы.НеобходимыеКорректировкиСтажа.Видимость = Ложь;	
	Иначе
		Форма.Элементы.НеобходимыеКорректировкиСтажа.Видимость = Истина;	
	КонецЕсли;	
КонецПроцедуры

Функция ПараметрыДляСоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, СписокФизическихЛиц) Экспорт
	
	ПараметрыПолученияСотрудников = ПерсонифицированныйУчетБазовый.ПараметрыДляСоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, СписокФизическихЛиц);
	
	// Если используются договоры ГПХ, то проверяем должны ли они попадать в СЗВ_М
	Если ПараметрыПолученияСотрудников.Свойство("РаботникиПоДоговорамГПХ") Тогда
		
		ПараметрыПолученияСотрудников.Вставить("СписокСотрудников", Неопределено);
		Если СписокФизическихЛиц <> Неопределено Тогда
			ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПолученияСотрудников.Отборы, "ФизическоеЛицо", "В", СписокФизическихЛиц);
		КонецЕсли;
		
		// Сотрудники по трудовым договорам
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Неопределено;
		КадровыйУчет.СоздатьВТРабочиеМестаСотрудников(МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников, "ВТРаботникиПоТрудовымДоговорам");
		
		// Сотрудники по договорам ГПХ
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
		ПараметрыПолученияСотрудников.РаботникиПоТрудовымДоговорам = Неопределено;
		КадровыйУчет.СоздатьВТРабочиеМестаСотрудников(МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников, "ВТРаботникиПоДоговорамГПХ");
		
		// Соберем список физических лиц:
		// - все с трудовыми договорами
		// - с договорами ГПХ, облагаемыми страховыми взносами.
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НеоблагаемыеВидыДоходов", УчетСтраховыхВзносовРасширенный.ВидыДоходовНеоблагаемыеСтраховымиВзносами());
		Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сотрудники.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФильтрФизическихЛиц
		|ИЗ
		|	ВТРаботникиПоТрудовымДоговорам КАК Сотрудники
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УсловияДоговораГПХСрезПоследних.ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.УсловияДоговораГПХ.СрезПоследних(
		|			КОНЕЦПЕРИОДА(&ОтчетныйПериод, МЕСЯЦ),
		|			(Сотрудник, ФизическоеЛицо, Договор) В
		|					(ВЫБРАТЬ
		|						Договорники.Сотрудник,
		|						Договорники.ФизическоеЛицо,
		|						Договорники.ДокументОснование
		|					ИЗ
		|						ВТРаботникиПоДоговорамГПХ КАК Договорники)
		|				И НЕ КодДоходаСтраховыеВзносы В (&НеоблагаемыеВидыДоходов)) КАК УсловияДоговораГПХСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПлановыеНачисленияПоДоговорам.ФизическоеЛицо
		|ИЗ
		|	ВТРаботникиПоДоговорамГПХ КАК Договорники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияПоДоговорам КАК ПлановыеНачисленияПоДоговорам
		|		ПО Договорники.Сотрудник = ПлановыеНачисленияПоДоговорам.Сотрудник
		|			И Договорники.ФизическоеЛицо = ПлановыеНачисленияПоДоговорам.ФизическоеЛицо
		|			И Договорники.ДокументОснование = ПлановыеНачисленияПоДоговорам.Договор
		|			И (НЕ ПлановыеНачисленияПоДоговорам.КодДоходаСтраховыеВзносы В (&НеоблагаемыеВидыДоходов))";
		УстановитьПривилегированныйРежим(Истина);
		Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		// Переопределим параметры получения сотрудников организации
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоВременнойТаблице();
		ПараметрыПолученияСотрудников.Организация = Организация;
		ПараметрыПолученияСотрудников.НачалоПериода = НачалоМесяца(ОтчетныйПериод);
		ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(ОтчетныйПериод);
		ПараметрыПолученияСотрудников.КадровыеДанные = "ГоловнаяОрганизация, ЯвляетсяПрокурором, ЯвляетсяВоеннослужащим, РаботаетВСтуденческомОтряде, ВидЗастрахованногоЛица, СтраховойНомерПФР";
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
		ПараметрыПолученияСотрудников.ИмяВТФизическиеЛица = "ВТФильтрФизическихЛиц";
		
		УдалитьВТ = Новый Массив;
		УдалитьВТ.Добавить("ВТРаботникиПоТрудовымДоговорам");
		УдалитьВТ.Добавить("ВТРаботникиПоДоговорамГПХ");
		ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
		
	КонецЕсли;
	
	Возврат ПараметрыПолученияСотрудников;
	
КонецФункции

Процедура СоздатьВТДосрочноеНазначениеПенсииДляСЗВ_СТАЖ(МенеджерВременныхТаблиц, Организация, Год, ЗаписиОСтаже) Экспорт
	
	ФизическиеЛица = Новый Массив;
	  
	ОснованияВыслугиЛетСотрудников = Новый ТаблицаЗначений;
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("ОсобыеУсловияТруда", Новый ОписаниеТипов("СправочникСсылка.ОсобыеУсловияТрудаПФР,СправочникСсылка.ОсобыеУсловияТрудаДляСЗВКПФР"));
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("КодПозицииСписка", Новый ОписаниеТипов("СправочникСсылка.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения"));
	
	Для Каждого СтрокаСотрудника Из ЗаписиОСтаже Цикл 
		Если Не ЗначениеЗаполнено(СтрокаСотрудника.ОсобыеУсловияТруда) Тогда 
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ОснованияВыслугиЛетСотрудников.Добавить(), СтрокаСотрудника);
		ФизическиеЛица.Добавить(СтрокаСотрудника.Сотрудник);
	КонецЦикла;
	
	ОснованияВыслугиЛетСотрудников.Свернуть("Сотрудник,ОсобыеУсловияТруда,КодПозицииСписка");
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ОснованияВыслугиЛетСотрудников", ОснованияВыслугиЛетСотрудников);
	
	Если ОснованияВыслугиЛетСотрудников.Количество() = 0 Тогда 
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 0
		               |	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
		               |	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка) КАК Должность,
		               |	0 КАК КоличествоРаботающих,
		               |	0 КАК КоличествоРабочихМест,
		               |	ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка) КАК ОснованиеВыслугиЛет,
		               |	ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка) КАК КодПозицииСписка,
		               |	"""" КАК ХарактерВыполняемыхРабот,
		               |	"""" КАК ПервичныеДокументы
		               |ПОМЕСТИТЬ ВТДосрочноеНазначениеПенсии";
		Запрос.Выполнить();
		Возврат;
	КонецЕсли;
	
	ОтчетныйПериод = Дата(Год, 1, 1);
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	
	ПараметрыПолученияСотрудников.Организация = Организация;
	ПараметрыПолученияСотрудников.НачалоПериода = ОтчетныйПериод; 
	ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецГода(ОтчетныйПериод); 
	ПараметрыПолученияСотрудников.КадровыеДанные = "ФизическоеЛицо, Подразделение, Должность, ДолжностьПоШтатномуРасписанию";
	
	Если ПараметрыПолученияСотрудников.Свойство("РаботникиПоДоговорамГПХ") Тогда
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
	КонецЕсли;	
	
	ПараметрыПолученияСотрудников.СписокФизическихЛиц = ФизическиеЛица;
	
	УстановитьПривилегированныйРежим(Истина);
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПолученияСотрудников);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда 
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОснованияВыслугиЛетСотрудников.Сотрудник КАК ФизическоеЛицо,
		               |	ОснованияВыслугиЛетСотрудников.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
		               |	ОснованияВыслугиЛетСотрудников.КодПозицииСписка КАК КодПозицииСписка
		               |ПОМЕСТИТЬ ВТОснованияВыслугиЛет
		               |ИЗ
		               |	&ОснованияВыслугиЛетСотрудников КАК ОснованияВыслугиЛетСотрудников
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СотрудникиОрганизации.Подразделение КАК Подразделение,
		               |	СотрудникиОрганизации.Должность КАК Должность,
		               |	СотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо,
		               |	СотрудникиОрганизации.Должность.ОсобыеУсловияТрудаПФР КАК ОсобыеУсловияТруда,
		               |	СотрудникиОрганизации.Должность.КодПозицииСпискаПФР КАК КодПозицииСписка
		               |ПОМЕСТИТЬ ВТКадровыеДанные
		               |ИЗ
		               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	КадровыеДанные.Подразделение КАК Подразделение,
		               |	КадровыеДанные.Должность КАК Должность,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КадровыеДанные.ФизическоеЛицо) КАК КоличествоРаботающих,
		               |	ОснованияВыслугиЛет.ОсобыеУсловияТруда КАК ОснованиеВыслугиЛет,
		               |	ОснованияВыслугиЛет.КодПозицииСписка КАК КодПозицииСписка
		               |ПОМЕСТИТЬ ВТДанныеСотрудников
		               |ИЗ
		               |	ВТКадровыеДанные КАК КадровыеДанные
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОснованияВыслугиЛет КАК ОснованияВыслугиЛет
		               |		ПО КадровыеДанные.ФизическоеЛицо = ОснованияВыслугиЛет.ФизическоеЛицо
		               |			И КадровыеДанные.ОсобыеУсловияТруда = ОснованияВыслугиЛет.ОсобыеУсловияТруда
		               |			И КадровыеДанные.КодПозицииСписка = ОснованияВыслугиЛет.КодПозицииСписка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	КадровыеДанные.Подразделение,
		               |	КадровыеДанные.Должность,
		               |	ОснованияВыслугиЛет.ОсобыеУсловияТруда,
		               |	ОснованияВыслугиЛет.КодПозицииСписка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСотрудников.Подразделение КАК Подразделение,
		               |	ДанныеСотрудников.Должность КАК Должность,
		               |	ДанныеСотрудников.КоличествоРаботающих КАК КоличествоРаботающих,
		               |	ДанныеСотрудников.КоличествоРаботающих КАК КоличествоРабочихМест,
		               |	ДанныеСотрудников.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
		               |	ДанныеСотрудников.КодПозицииСписка КАК КодПозицииСписка,
		               |	Должности.ХарактерВыполняемыхРаботПФР КАК ХарактерВыполняемыхРабот,
		               |	Должности.ПервичныеДокументыПФР КАК ПервичныеДокументы
		               |ПОМЕСТИТЬ ВТДосрочноеНазначениеПенсии
		               |ИЗ
		               |	ВТДанныеСотрудников КАК ДанныеСотрудников
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
		               |		ПО ДанныеСотрудников.Должность = Должности.Ссылка";
					   
		Запрос.Выполнить();
		Возврат;
	
	КонецЕсли;
	
	ПараметрыПостроения = УправлениеШтатнымРасписанием.ПараметрыПостроенияВТШтатноеРасписание(КонецГода(ОтчетныйПериод), Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	УправлениеШтатнымРасписанием.СоздатьВТШтатноеРасписание(
		Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПостроения, "Подразделение,Должность,КоличествоСтавок,ОсобыеУсловияТрудаПФР,КодПозицииСпискаПФР,ХарактерВыполняемыхРаботПФР,ПервичныеДокументыПФР");
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПозицииШтатногоРасписания.Подразделение КАК Подразделение,
	               |	ПозицииШтатногоРасписания.Должность КАК Должность,
	               |	СУММА(ПозицииШтатногоРасписания.КоличествоСтавок) КАК КоличествоРабочихМест,
	               |	ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР КАК ОсобыеУсловияТруда,
	               |	ПозицииШтатногоРасписания.КодПозицииСпискаПФР КАК КодПозицииСписка,
	               |	ПозицииШтатногоРасписания.ХарактерВыполняемыхРаботПФР КАК ХарактерВыполняемыхРабот,
	               |	ПозицииШтатногоРасписания.ПервичныеДокументыПФР КАК ПервичныеДокументы
	               |ПОМЕСТИТЬ ВТДанныеШтатногоРасписания
	               |ИЗ
	               |	ВТШтатноеРасписание КАК ПозицииШтатногоРасписания
	               |ГДЕ
	               |	ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПозицииШтатногоРасписания.Подразделение,
	               |	ПозицииШтатногоРасписания.Должность,
	               |	ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР,
	               |	ПозицииШтатногоРасписания.КодПозицииСпискаПФР,
	               |	ПозицииШтатногоРасписания.ХарактерВыполняемыхРаботПФР,
	               |	ПозицииШтатногоРасписания.ПервичныеДокументыПФР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СотрудникиОрганизации.Подразделение КАК Подразделение,
	               |	СотрудникиОрганизации.Должность КАК Должность,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК КоличествоРаботающих,
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.ОсобыеУсловияТрудаПФР КАК ОсобыеУсловияТруда,
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.КодПозицииСпискаПФР КАК КодПозицииСписка
	               |ПОМЕСТИТЬ ВТДанныеСотрудников
	               |ИЗ
	               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СотрудникиОрганизации.Подразделение,
	               |	СотрудникиОрганизации.Должность,
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.ОсобыеУсловияТрудаПФР,
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.КодПозицииСпискаПФР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеШтатногоРасписания.Подразделение КАК Подразделение,
	               |	ДанныеШтатногоРасписания.Должность КАК Должность,
	               |	ЕСТЬNULL(ДанныеСотрудников.КоличествоРаботающих, 0) КАК КоличествоРаботающих,
	               |	ДанныеШтатногоРасписания.КоличествоРабочихМест КАК КоличествоРабочихМест,
	               |	ДанныеШтатногоРасписания.ОсобыеУсловияТруда КАК ОснованиеВыслугиЛет,
	               |	ДанныеШтатногоРасписания.КодПозицииСписка КАК КодПозицииСписка,
	               |	ДанныеШтатногоРасписания.ХарактерВыполняемыхРабот КАК ХарактерВыполняемыхРабот,
	               |	ДанныеШтатногоРасписания.ПервичныеДокументы КАК ПервичныеДокументы
	               |ПОМЕСТИТЬ ВТДосрочноеНазначениеПенсии
	               |ИЗ
	               |	ВТДанныеШтатногоРасписания КАК ДанныеШтатногоРасписания
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудников КАК ДанныеСотрудников
	               |		ПО ДанныеШтатногоРасписания.Подразделение = ДанныеСотрудников.Подразделение
	               |			И ДанныеШтатногоРасписания.Должность = ДанныеСотрудников.Должность
	               |			И ДанныеШтатногоРасписания.ОсобыеУсловияТруда = ДанныеСотрудников.ОсобыеУсловияТруда
	               |			И ДанныеШтатногоРасписания.КодПозицииСписка = ДанныеСотрудников.КодПозицииСписка";
				   
	Запрос.Выполнить();			   
	
КонецПроцедуры

Процедура СоздатьВТЗамещениеГосударственныхДолжностей(МенеджерВременныхТаблиц) Экспорт 
	
	Если ИспользоватьЗамещениеГосударственныхМуниципальныхДолжностей()
		И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.СоздатьВТЗамещениеГосударственныхДолжностей(МенеджерВременныхТаблиц);
	Иначе 
		ПерсонифицированныйУчетБазовый.СоздатьВТЗамещениеГосударственныхДолжностей(МенеджерВременныхТаблиц);
	КонецЕсли;
	
КонецПроцедуры

Функция ИспользоватьЗамещениеГосударственныхМуниципальныхДолжностей() Экспорт 
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьГосударственнуюСлужбу") Или ПолучитьФункциональнуюОпцию("ИспользоватьМуниципальнуюСлужбу");
	
КонецФункции

Процедура ЗаполнитьДанныеДосрочногоНазначенияПенсии(Объект, Организация, ОтчетныйПериод) Экспорт
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	
	ПараметрыПолученияСотрудников.Организация = Организация;
	ПараметрыПолученияСотрудников.НачалоПериода = ОтчетныйПериод; 
	ПараметрыПолученияСотрудников.ОкончаниеПериода = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаСтажаПерсУчета(ОтчетныйПериод); 
	ПараметрыПолученияСотрудников.КадровыеДанные = "ФизическоеЛицо, Подразделение, Должность, ДолжностьПоШтатномуРасписанию";
	
	Если ПараметрыПолученияСотрудников.Свойство("РаботникиПоДоговорамГПХ") Тогда
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
	КонецЕсли;	
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Ложь, ПараметрыПолученияСотрудников);
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда 
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	СотрудникиОрганизации.Подразделение КАК Подразделение,
		               |	СотрудникиОрганизации.Должность КАК Должность,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК КоличествоРаботающих
		               |ПОМЕСТИТЬ ВТДанныеСотрудников
		               |ИЗ
		               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	СотрудникиОрганизации.Подразделение,
		               |	СотрудникиОрганизации.Должность
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСотрудников.Подразделение КАК Подразделение,
		               |	ДанныеСотрудников.Должность КАК Должность,
		               |	ДанныеСотрудников.КоличествоРаботающих КАК КоличествоРаботающих,
		               |	ДанныеСотрудников.КоличествоРаботающих КАК КоличествоРабочихМест,
		               |	Должности.ОсобыеУсловияТрудаПФР КАК ОснованиеВыслугиЛет,
		               |	Должности.КодПозицииСпискаПФР КАК КодПозицииСписка,
		               |	Должности.ХарактерВыполняемыхРаботПФР КАК ХарактерВыполняемыхРабот,
		               |	Должности.ПервичныеДокументыПФР КАК ПервичныеДокументы
		               |ИЗ
		               |	ВТДанныеСотрудников КАК ДанныеСотрудников
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
		               |		ПО ДанныеСотрудников.Должность = Должности.Ссылка
		               |			И (Должности.ОсобыеУсловияТрудаПФР <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка))";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			НоваяСтрока = Объект.ДосрочноеНазначениеПенсии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
		Возврат;
	
	КонецЕсли;
	
	ПараметрыПостроения = УправлениеШтатнымРасписанием.ПараметрыПостроенияВТШтатноеРасписание(КонецГода(ОтчетныйПериод), Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	
	УправлениеШтатнымРасписанием.СоздатьВТШтатноеРасписание(
		Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПостроения, "Подразделение,Должность,КоличествоСтавок,ОсобыеУсловияТрудаПФР,КодПозицииСпискаПФР,ХарактерВыполняемыхРаботПФР,ПервичныеДокументыПФР");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПозицииШтатногоРасписания.Подразделение КАК Подразделение,
	               |	ПозицииШтатногоРасписания.Должность КАК Должность,
	               |	СУММА(ПозицииШтатногоРасписания.КоличествоСтавок) КАК КоличествоРабочихМест,
	               |	ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР КАК ОснованиеВыслугиЛет,
	               |	ПозицииШтатногоРасписания.КодПозицииСпискаПФР КАК КодПозицииСписка,
	               |	ПозицииШтатногоРасписания.ХарактерВыполняемыхРаботПФР КАК ХарактерВыполняемыхРабот,
	               |	ПозицииШтатногоРасписания.ПервичныеДокументыПФР КАК ПервичныеДокументы
	               |ПОМЕСТИТЬ ВТДанныеШтатногоРасписания
	               |ИЗ
	               |	ВТШтатноеРасписание КАК ПозицииШтатногоРасписания
	               |ГДЕ
	               |	ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПозицииШтатногоРасписания.Подразделение,
	               |	ПозицииШтатногоРасписания.Должность,
	               |	ПозицииШтатногоРасписания.ОсобыеУсловияТрудаПФР,
	               |	ПозицииШтатногоРасписания.КодПозицииСпискаПФР,
	               |	ПозицииШтатногоРасписания.ХарактерВыполняемыхРаботПФР,
	               |	ПозицииШтатногоРасписания.ПервичныеДокументыПФР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СотрудникиОрганизации.Подразделение КАК Подразделение,
	               |	СотрудникиОрганизации.Должность КАК Должность,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК КоличествоРаботающих,
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.ОсобыеУсловияТрудаПФР КАК ОснованиеВыслугиЛет,
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.КодПозицииСпискаПФР КАК КодПозицииСписка
	               |ПОМЕСТИТЬ ВТДанныеСотрудников
	               |ИЗ
	               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СотрудникиОрганизации.Подразделение,
	               |	СотрудникиОрганизации.Должность,
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.ОсобыеУсловияТрудаПФР,
	               |	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию.КодПозицииСпискаПФР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеШтатногоРасписания.Подразделение КАК Подразделение,
	               |	ДанныеШтатногоРасписания.Должность КАК Должность,
	               |	ЕСТЬNULL(ДанныеСотрудников.КоличествоРаботающих, 0) КАК КоличествоРаботающих,
	               |	ДанныеШтатногоРасписания.КоличествоРабочихМест КАК КоличествоРабочихМест,
	               |	ДанныеШтатногоРасписания.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	               |	ДанныеШтатногоРасписания.КодПозицииСписка КАК КодПозицииСписка,
	               |	ДанныеШтатногоРасписания.ХарактерВыполняемыхРабот КАК ХарактерВыполняемыхРабот,
	               |	ДанныеШтатногоРасписания.ПервичныеДокументы КАК ПервичныеДокументы
	               |ИЗ
	               |	ВТДанныеШтатногоРасписания КАК ДанныеШтатногоРасписания
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудников КАК ДанныеСотрудников
	               |		ПО ДанныеШтатногоРасписания.Подразделение = ДанныеСотрудников.Подразделение
	               |			И ДанныеШтатногоРасписания.Должность = ДанныеСотрудников.Должность
	               |			И ДанныеШтатногоРасписания.ОснованиеВыслугиЛет = ДанныеСотрудников.ОснованиеВыслугиЛет
	               |			И ДанныеШтатногоРасписания.КодПозицииСписка = ДанныеСотрудников.КодПозицииСписка";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НоваяСтрока = Объект.ДосрочноеНазначениеПенсии.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьСвязиПараметровВыбораСотрудников(ЭлементФормы) Экспорт 
	
КонецПроцедуры

Процедура СоздатьВТКадровыеДанныеФизическихЛицДоНачалаЭксплуатации(МенеджерВременныхТаблиц, Организация, НачалоПериода, ОкончаниеПериода) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	РегистрСведений.ЗаписиОСтажеДоНачалаЭксплуатации КАК ЗаписиОСтажеДоНачалаЭксплуатации
		|ГДЕ
		|	&УсловиеПоОрганизации
		|	И ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода > &НачалоПериода";
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ЗаписиОСтажеДоНачалаЭксплуатации.Организация = &Организация");
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ИСТИНА");
	КонецЕсли;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	Если Результат.Пустой() Тогда
		ПерсонифицированныйУчетБазовый.СоздатьВТКадровыеДанныеФизическихЛицДоНачалаЭксплуатации(МенеджерВременныхТаблиц);
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаписиОСтажеДоНачалаЭксплуатации.ФизическоеЛицо КАК ФизическоеЛицо,
		|	&ОкончаниеПериода КАК Период
		|ПОМЕСТИТЬ ВТФизическиеЛица
		|ИЗ
		|	РегистрСведений.ЗаписиОСтажеДоНачалаЭксплуатации КАК ЗаписиОСтажеДоНачалаЭксплуатации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		|		ПО ЗаписиОСтажеДоНачалаЭксплуатации.ФизическоеЛицо = СотрудникиОрганизации.ФизическоеЛицо
		|ГДЕ
		|	&УсловиеПоОрганизации
		|	И ЗаписиОСтажеДоНачалаЭксплуатации.ДатаОкончанияПериода > &НачалоПериода
		|	И СотрудникиОрганизации.ФизическоеЛицо ЕСТЬ NULL";
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ЗаписиОСтажеДоНачалаЭксплуатации.Организация = &Организация");
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ИСТИНА");
	КонецЕсли;
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "Фамилия, Имя, Отчество, СтраховойНомерПФР");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТФизическиеЛица");
	
КонецПроцедуры

#КонецОбласти
