
#Область СлужебныеПроцедурыИФункции

// Дозаполняет описания поставляемых профилей групп доступа.
// Параметры:
// 		ПрофилиГруппДоступа - массив описателей профилей, сформированный 
//		ЗарплатаКадрыРасширенный.ПоставляемыеПрофилиГруппДоступа.
//
Процедура ЗаполнитьПоставляемыеПрофилиГруппДоступа(ОписанияПрофилей, ПараметрыОбновления) Экспорт
	
	Для Каждого ОписаниеПрофиля Из ОписанияПрофилей Цикл
		Если ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляКадровикБезДоступаКЗарплате()
			ИЛИ ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляКадровик() Тогда
			
			ОписаниеПрофиля.Роли.Добавить("ИнтерфейсРабочегоСтолаКадровик");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаКадры");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройка");
			
		ИначеЕсли ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляСтаршийКадровик() Тогда
			ОписаниеПрофиля.Роли.Добавить("ИнтерфейсРабочегоСтолаКадровик");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаКадры");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройка");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройкаИАдминистрирование");
		ИначеЕсли ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляРасчетчик() Тогда
			ОписаниеПрофиля.Роли.Добавить("ИнтерфейсРабочегоСтолаРасчетчик");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаКадры");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаЗарплата");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаВыплатыПеречисления");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаОтчетность");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНалогиИВзносы");
		ИначеЕсли ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляСтаршийРасчетчик() Тогда
			ОписаниеПрофиля.Роли.Добавить("ИнтерфейсРабочегоСтолаРасчетчик");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаКадры");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаЗарплата");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаВыплатыПеречисления");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаОтчетность");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройка");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНалогиИВзносы");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройкаИАдминистрирование");
		ИначеЕсли ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляТабельщик() Тогда
			ОписаниеПрофиля.Роли.Добавить("ИспользованиеОсновногоРабочегоСтола");
			ОписаниеПрофиля.Роли.Добавить("ИнтерфейсРабочегоСтолаТабельщик");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаКадры");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаЗарплата");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройка");
		ИначеЕсли ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляАудитор() Тогда
			ОписаниеПрофиля.Роли.Добавить("ИспользованиеОсновногоРабочегоСтола");
			ОписаниеПрофиля.Роли.Добавить("ИнтерфейсРабочегоСтолаАудитор");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаКадры");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаЗарплата");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаВыплатыПеречисления");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаОтчетность");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНалогиИВзносы");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройка");
		ИначеЕсли ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляКадровикРасчетчик() Тогда
			ОписаниеПрофиля.Роли.Добавить("ИнтерфейсРабочегоСтолаКадровикРасчетчик");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаКадры");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаЗарплата");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаВыплатыПеречисления");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаОтчетность");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНалогиИВзносы");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройка");
		ИначеЕсли ОписаниеПрофиля.Идентификатор = ЗарплатаКадрыРасширенный.ИдентификаторПрофиляСтаршийКадровикРасчетчик() Тогда
			ОписаниеПрофиля.Роли.Добавить("ИнтерфейсРабочегоСтолаКадровикРасчетчик");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаКадры");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаЗарплата");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаВыплатыПеречисления");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаОтчетность");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройка");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНалогиИВзносы");
			ОписаниеПрофиля.Роли.Добавить("ПодсистемаНастройкаИАдминистрирование");
		КонецЕсли;
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ПодборПерсонала") Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("ПодборПерсонала");
			Модуль.ДополнитьОписаниеПрофиляДоступомКИнтерфейсу(ОписаниеПрофиля);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// См. описание ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	// Основной раздел Зарплата
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "ПолныйСводНачисленийУдержанийИВыплат");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата, "Важный");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "РасчетныйЛисток");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата, "Важный");
	
	// Формируем см. также раздела Зарплата.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "КраткийСводНачисленийИУдержаний");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата, "СмТакже");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "КраткийСводПоИсточникамФинансирования");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата, "СмТакже");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ЛицевыеСчетаСотрудников, "Т54");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата, "СмТакже");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Договорники, "Договоры");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата, "СмТакже");
	
	// Формирование подраздела АнализЗарплаты.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "АнализЗарплатыПоПодразделениямИСотрудникам");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.АнализЗарплаты);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "АнализЗарплатыПоИсточникамФинансирования");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.АнализЗарплаты);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализПлановыхНачислений, "АнализФОТПоНачислениям");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.АнализЗарплаты);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализПлановыхНачислений, "АнализФОТПоСотрудникам");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.АнализЗарплаты);
	
	// Формирование подраздела ПерваяПоловинаМесяца.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержанийАвансом, "Т51ПерваяПоловинаМесяца");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.ПерваяПоловинаМесяца);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержанийАвансом, "РасчетныйЛистокПерваяПоловинаМесяца");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.ПерваяПоловинаМесяца);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержанийАвансом, "РасчетныйЛистокСРазбивкойПоИсточникамФинансированияПерваяПоловинаМесяца");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.ПерваяПоловинаМесяца);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержанийАвансом, "Форма0504402ПерваяПоловинаМесяца");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.ПерваяПоловинаМесяца);
	
	// Формирование подраздела ВыплатыПеречисления.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "ВедомостиСРазбивкойПоИсточникамФинансирования");
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.ВыплатыПеречисления);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "Т49");
	Вариант.Размещение.Очистить(); // Просто переносим в раздел ВыплатыПеречисления.
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.ВыплатыПеречисления);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "Т51");
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.ВыплатыПеречисления);
	
	// Формирование подраздела Удержания.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "УдержанияИзЗарплаты");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.Удержания);
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "УдержанияВРазрезеИсточниковФинансирования");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Зарплата.Подсистемы.Удержания);
	
	// Формируем см. также раздела Кадры.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.Договорники, "Договорники");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Кадры, "СмТакже");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ГрафикОтпусков, "Т7");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Кадры, "СмТакже");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВоинскийУчетОбщий, "СписокГражданПодлежащихПостановкеНаВоинскийУчет");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Кадры, "СмТакже");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВоинскийУчетОбщий, "СписокЮношейДляОВК");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Кадры, "СмТакже");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВоинскийУчетОбщий, "СписокПервоначальнойПостановкиНаВоинскийУчет");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Кадры, "СмТакже");
	
	// Формирование раздела НалогиИВзносы.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНДФЛ, "АнализУплатыНДФЛ");
	Вариант.Размещение.Очистить();
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.НалогиИВзносы, "СмТакже");
	
КонецПроцедуры

#КонецОбласти
