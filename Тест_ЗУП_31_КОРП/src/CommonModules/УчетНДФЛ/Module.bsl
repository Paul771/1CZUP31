
#Область ПрограммныйИнтерфейс

// Процедура переопределяет свойства объекта, с которыми он будет отображен в форме Отчетность.
// Параметры:
//  СвойстваОбъектов  - ТаблицаЗначений - (см. РегламентированнаяОтчетностьПереопределяемый.ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность)
Процедура ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность(СвойстваОбъектов) Экспорт
	Документ2НДФЛ = Новый Массив;
	ДокументыЗаявленияНаЗачетАвансов = Новый Массив;
	СоответствиеСсылокСвойствам = Новый Соответствие;
	Для Каждого ЗапрашиваемыеДанные Из СвойстваОбъектов Цикл
		Если ТипЗнч(ЗапрашиваемыеДанные.Ссылка) = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган") Тогда
			Документ2НДФЛ.Добавить(ЗапрашиваемыеДанные.Ссылка);
			СоответствиеСсылокСвойствам.Вставить(ЗапрашиваемыеДанные.Ссылка, ЗапрашиваемыеДанные);
		ИначеЕсли ТипЗнч(ЗапрашиваемыеДанные.Ссылка) = Тип("ДокументСсылка.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ") Тогда
			ДокументыЗаявленияНаЗачетАвансов.Добавить(ЗапрашиваемыеДанные.Ссылка);
			СоответствиеСсылокСвойствам.Вставить(ЗапрашиваемыеДанные.Ссылка, ЗапрашиваемыеДанные);	
		КонецЕсли;	
	КонецЦикла;		
	
	Если Документ2НДФЛ.Количество() = 0
		И ДокументыЗаявленияНаЗачетАвансов.Количество() = 0 Тогда
		
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ2НДФЛ", Документ2НДФЛ);
	Запрос.УстановитьПараметр("ДокументыЗаявленияНаЗачетАвансов", ДокументыЗаявленияНаЗачетАвансов);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка КАК Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Дата КАК ДатаСоздания,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Организация КАК Организация,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.РегистрацияВНалоговомОргане.Код КАК КодКонтролирующегоОргана,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.ПометкаУдаления КАК ПометкаУдаления,
	|	НАЧАЛОПЕРИОДА(СправкиНДФЛДляПередачиВНалоговыйОрган.НалоговыйПериодДата, ГОД) КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(СправкиНДФЛДляПередачиВНалоговыйОрган.НалоговыйПериодДата, ГОД) КАК ДатаОкончания,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Комментарий КАК Комментарий,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.НомерКорректировки КАК ВариантОтчета
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка В(&Документ2НДФЛ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Ссылка,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Дата,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Организация,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.КодИФНС,
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.ПометкаУдаления,
	|	НАЧАЛОПЕРИОДА(ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.НалоговыйПериодДата, ГОД),
	|	КОНЕЦПЕРИОДА(ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.НалоговыйПериодДата, ГОД),
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Комментарий,
	|	""-""
	|ИЗ
	|	Документ.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ КАК ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ
	|ГДЕ
	|	ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ.Ссылка В(&ДокументыЗаявленияНаЗачетАвансов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗапрашиваемыеДанные = СоответствиеСсылокСвойствам[Выборка.Ссылка];
		
		ЗаполнитьЗначенияСвойств(ЗапрашиваемыеДанные, Выборка);	
	КонецЦикла;	
	
КонецПроцедуры

// Определяет свойства, касающиеся общих свойств объектов конфигураций-потребителей для отображения в форме Отчетность
// и возможности создания новый объектов из формы Отчетность.
//
// Параметры:
//  ТаблицаОписания  - ТаблицаЗначений -  (см. РегламентированнаяОтчетностьПереопределяемый.ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности)
//	
Процедура ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности(ТаблицаОписания) Экспорт
	ОписаниеДокументаОтчетности = ТаблицаОписания.Добавить();
	
	ОписаниеДокументаОтчетности.ТипОбъекта = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган");
	ОписаниеДокументаОтчетности.ВидКонтролирующегоОргана = Перечисления.ТипыКонтролирующихОрганов.ФНС;
	ОписаниеДокументаОтчетности.ГруппаВДереве = НСтр("ru = 'Отчетность по физлицам'");
	ОписаниеДокументаОтчетности.ВидДокумента = Перечисления.СтраницыЖурналаОтчетность.Отчеты;
	ОписаниеДокументаОтчетности.НеОтправляетсяВКонтролирующийОрган = Ложь;
	ОписаниеДокументаОтчетности.ЯвляетсяАктуальным = Истина;
	ОписаниеДокументаОтчетности.ИмяОсновногоМакетаДляПечати = "Форма2НДФЛ";
	ОписаниеДокументаОтчетности.ВидЭлектронногоПредставления = Справочники.ВидыОтправляемыхДокументов.СправкаПоНДФЛВНалоговыйОрган;
	
	ОписаниеДокументаОтчетности = ТаблицаОписания.Добавить();
	
	ОписаниеДокументаОтчетности.ТипОбъекта = Тип("ДокументСсылка.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ");
	ОписаниеДокументаОтчетности.ВидКонтролирующегоОргана = Перечисления.ТипыКонтролирующихОрганов.ФНС;
	ОписаниеДокументаОтчетности.ГруппаВДереве = НСтр("ru = 'Отчетность по физлицам'");
	ОписаниеДокументаОтчетности.ВидДокумента = Перечисления.СтраницыЖурналаОтчетность.Отчеты;
	ОписаниеДокументаОтчетности.НеОтправляетсяВКонтролирующийОрган = Ложь;
	ОписаниеДокументаОтчетности.ЯвляетсяАктуальным = Истина;
	ОписаниеДокументаОтчетности.ИмяОсновногоМакетаДляПечати = "Заявление";
	ОписаниеДокументаОтчетности.ВидЭлектронногоПредставления = Справочники.ВидыОтправляемыхДокументов.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ;

КонецПроцедуры

// Предназначена для расчета и регистрации НДФЛ удержанного 
// по записанным в учете данным и по переданным данным о выплатах.
//
// Параметры:
//      Ссылка - ДокументСсылка - ссылка на документ-регистратор.
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации - должно быть непустым значением.
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение, должно быть непустым значением.
//      МенеджерТаблиц - МенеджерВременныхТаблиц - должен содержать временную таблицу с данными о выплатах ВТСписокСотрудников с колонками:
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты.
//          	ДокументОснование, необязательная
//          	СуммаНачисленная, необязательная
//          	СуммаВыплаченная, необязательная
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ПериодРегистрации - дата - 
//		ОкончательныйРасчет - булево - признак того, является ли выплата, для которой рассчитывается удержанный налог, выплатой "под расчет".
//
//  Формирует движения по регистрам подсистемы.
//
Процедура РассчитатьИЗарегистрироватьУдержанныеНалоги(Ссылка, Движения, Отказ, Организация, ДатаОперации, МенеджерТаблиц, Записывать = Ложь, ПериодРегистрации = Неопределено, ОкончательныйРасчет = Истина) Экспорт
	
	УдержанныйНалог = РассчитатьУдержанныеНалоги(Ссылка, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации, ОкончательныйРасчет);
	
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерТаблиц, УдержанныйНалог, "ВТНалогУдержанный");
	Если ДатаОперации >= ДатаИзмененияСроковУплатыНалога() Тогда
		ВписатьСуммыВыплаченногоДоходаВУдержанныеНалоги(МенеджерТаблиц, Ссылка);	
	КонецЕсли;
	СформироватьУдержанныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерТаблиц, , Истина);
	ЗарплатаКадры.УничтожитьВТ(МенеджерТаблиц, "ВТНалогУдержанный");
	
	Если Движения.Найти("УплатаНДФЛНалоговымиАгентамиКРаспределению") <> Неопределено И Движения.Найти("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ") <> Неопределено Тогда
		
		Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Очистить();
		Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записать();

		СформироватьПеречисленныйНалогПоФизическимЛицам(Ссылка, Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог.ВыгрузитьКолонку("ФизическоеЛицо"), , Записывать);
		
	КонецЕсли;
	
КонецПроцедуры	

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ПеречисленныйНалог - таблица значений с колонками.
//				МесяцНалоговогоПериода - должно быть непустым значением типа Дата.
//				Сумма
//				ПлатежноеПоручениеНомер - тип Строка (необязательно).
//				ПлатежноеПоручениеДата - тип Дата (необязательно).
//      ФизическиеЛица - массив физических лиц (необязательно), если не задан, перечисленная 
//						сумма будет распределена по всем физлицам организации.
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет использоваться регистрация для организации.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьПеречисленныйНалог(Ссылка, Движения, Отказ, Организация, ДатаОперации, ПеречисленныйНалог, ФизическиеЛица = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт
	
	Если ПеречисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Колонки = ПеречисленныйНалог.Колонки;
	ЕстьДанныеПлатежногоПоручения = Колонки.Найти("ПлатежноеПоручениеНомер") <> Неопределено И Колонки.Найти("ПлатежноеПоручениеДата") <> Неопределено;
	
	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;  
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ПеречисленныйНалог Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаУплатыНалоговогоАгента(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, СтрокаДанных);
		Если ЕстьДанныеПлатежногоПоручения Тогда
			НоваяСтрока.РеквизитыПлатежногоПоручения = РеквизитыПлатежногоПорученияПоДатеНомеру(СтрокаДанных.ПлатежноеПоручениеДата, СтрокаДанных.ПлатежноеПоручениеНомер);
		КонецЕсли;
		НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
		НоваяСтрока.ДатаПлатежа = ДатаОперации;
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записать();
		Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записывать = Ложь;
	КонецЕсли;
	
	Если Движения.Найти("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ") <> Неопределено Тогда
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Очистить();
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
	КонецЕсли;
	
	СформироватьПеречисленныйНалогПоФизическимЛицам(Ссылка, Движения, Отказ, Организация, ДатаОперации, ФизическиеЛица, РегистрацияВНалоговомОргане, Записывать);
	
КонецПроцедуры

// Предназначена для получения сумм перечисленного налога, зарегистрированных документом, в разрезе физических лиц.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор, для которого выполняется чтение движений.
//
//  Возвращаемое значение: 
//  	таблица значений с колонками
//			ФизическоеЛицо - СправочникСсылка.ФизическиеЛица -
//			Сумма - число -
//
Функция ПеречисленныйНалогРегистратораПоФизическимЛицам(Регистратор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	СУММА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор = &Регистратор
	|	И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Формирует движения по регистрам подсистемы.
// Параметры:
//		РеквизитыПлатежа - таблица значений с колонками.
//				Организация - СправочникСсылка.Организации - должно быть непустым значением.
//				МесяцНалоговогоПериода - дата - должно быть непустым значением.
//				ДатаПлатежа - дата - должно быть непустым значением.
//				ПлатежноеПоручениеНомер - строка (необязательно).
//				ПлатежноеПоручениеДата - дата (необязательно).
//              РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане  (необязательно)
//              ГлавныйБухгалтер - СправочникСсылка.ФизическиеЛица (необязательно)
//              Бухгалтер - СправочникСсылка.ФизическиеЛица (необязательно)
//
//  Возвращаемое значение: табличный документ.
//
Функция РеестрПеречисленныхСуммНалога(РеквизитыПлатежа) Экспорт 

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрПеречисленныхСумм";
	
	Если РеквизитыПлатежа.Количество() = 0 Тогда
		Возврат ТабличныйДокумент
	КонецЕсли;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_РеестрПеречисленныхСуммНДФЛ");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка работника
	ОбластьОстаткаАванса = Макет.ПолучитьОбласть("СтрокаОстаткаАванса");
	
	Колонки = РеквизитыПлатежа.Колонки;
	Если Колонки.Найти("РеквизитыПлатежногоПоручения") = Неопределено Тогда
		Колонки.Добавить("РеквизитыПлатежногоПоручения", Новый ОписаниеТипов("Строка", ,Новый КвалификаторыСтроки(50)));
	КонецЕсли;
	Если Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	КонецЕсли;
	
	ОтветственныеЛицаВДанныхДокументов = Истина;
	Если Колонки.Найти("ГлавныйБухгалтер") = Неопределено Тогда
		Колонки.Добавить("ГлавныйБухгалтер", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		Если Колонки.Найти("Бухгалтер") = Неопределено Тогда
			Колонки.Добавить("Бухгалтер", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		КонецЕсли;
		ОтветственныеЛицаВДанныхДокументов = Ложь;
	КонецЕсли;
	
	ЕстьДанныеПлатежногоПоручения = Колонки.Найти("ПлатежноеПоручениеНомер") <> Неопределено И Колонки.Найти("ПлатежноеПоручениеДата") <> Неопределено;
	Если ЕстьДанныеПлатежногоПоручения Тогда
		Для каждого СтрокаТЗ Из РеквизитыПлатежа Цикл
			СтрокаТЗ.РеквизитыПлатежногоПоручения = РеквизитыПлатежногоПорученияПоДатеНомеру(СтрокаТЗ.ПлатежноеПоручениеДата, СтрокаТЗ.ПлатежноеПоручениеНомер);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеквизитыПлатежа.Организация,
	|	ВЫБОР
	|		КОГДА РеквизитыПлатежа.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА РеквизитыПлатежа.МесяцНалоговогоПериода
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК МесяцНалоговогоПериода,
	|	РеквизитыПлатежа.РегистрацияВНалоговомОргане,
	|	РеквизитыПлатежа.ДатаПлатежа,
	|	РеквизитыПлатежа.РеквизитыПлатежногоПоручения,
	|	РеквизитыПлатежа.ГлавныйБухгалтер,
	|	РеквизитыПлатежа.Бухгалтер
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	&РеквизитыПлатежа КАК РеквизитыПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДанныеДокументов.ДатаПлатежа) КАК НачалоПериода,
	|	МАКСИМУМ(ДанныеДокументов.ДатаПлатежа) КАК ОкончаниеПериода
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов";

	Запрос.УстановитьПараметр("РеквизитыПлатежа", РеквизитыПлатежа);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Выборка.НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(Выборка.ОкончаниеПериода));
	ДатаАктуальности = ТекущаяДатаСеанса();
	Запрос.УстановитьПараметр("ТекущаяДата", ДатаАктуальности);
	Запрос.УстановитьПараметр("ДатаПереходаНаКодыОКТМО", ДатаПереходаНаКодыОКТМО());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.Организация,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.МесяцНалоговогоПериода,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.РегистрацияВНалоговомОргане,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.РеквизитыПлатежногоПоручения,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.ДатаПлатежа
	|ПОМЕСТИТЬ ВТРегистрацияАвансов
	|ИЗ
	|	РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			,
	|			(Организация, МесяцНалоговогоПериода, ДатаПлатежа, РеквизитыПлатежногоПоручения) В
	|				(ВЫБРАТЬ
	|					РеквизитыПлатежа.Организация,
	|					РеквизитыПлатежа.МесяцНалоговогоПериода,
	|					РеквизитыПлатежа.ДатаПлатежа,
	|					РеквизитыПлатежа.РеквизитыПлатежногоПоручения
	|				ИЗ
	|					ВТДанныеДокументов КАК РеквизитыПлатежа)) КАК УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты
	|ГДЕ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.СуммаПриход > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|			ТОГДА РегистрацияАвансов.РегистрацияВНалоговомОргане
	|		ИНАЧЕ ДанныеДокументов.РегистрацияВНалоговомОргане
	|	КОНЕЦ КАК РегистрацияВНалоговомОргане,
	|	ДанныеДокументов.ДатаПлатежа,
	|	ДанныеДокументов.РеквизитыПлатежногоПоручения,
	|	ДанныеДокументов.ГлавныйБухгалтер,
	|	ДанныеДокументов.Бухгалтер
	|ПОМЕСТИТЬ ВТДанныеСРегистрациями
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрацияАвансов КАК РегистрацияАвансов
	|		ПО ДанныеДокументов.Организация = РегистрацияАвансов.Организация
	|			И ДанныеДокументов.МесяцНалоговогоПериода = РегистрацияАвансов.МесяцНалоговогоПериода
	|			И ДанныеДокументов.ДатаПлатежа = РегистрацияАвансов.ДатаПлатежа
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = РегистрацияАвансов.РеквизитыПлатежногоПоручения
	|			И (ДанныеДокументов.РегистрацияВНалоговомОргане = РегистрацияАвансов.РегистрацияВНалоговомОргане
	|				ИЛИ ДанныеДокументов.РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Организация,
	|	УплатаПоФизическимЛицам.МесяцНалоговогоПериода,
	|	ДанныеДокументов.РегистрацияВНалоговомОргане,
	|	ДанныеДокументов.РеквизитыПлатежногоПоручения,
	|	ДанныеДокументов.ДатаПлатежа,
	|	УплатаПоФизическимЛицам.ФизическоеЛицо,
	|	УплатаПоФизическимЛицам.Ставка,
	|	СУММА(УплатаПоФизическимЛицам.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТУплатаПоФизическимЛицам
	|ИЗ
	|	ВТДанныеСРегистрациями КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК УплатаПоФизическимЛицам
	|		ПО ДанныеДокументов.Организация = УплатаПоФизическимЛицам.Организация
	|			И (ДанныеДокументов.МесяцНалоговогоПериода = УплатаПоФизическимЛицам.МесяцНалоговогоПериода
	|				ИЛИ ДанныеДокументов.МесяцНалоговогоПериода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					И УплатаПоФизическимЛицам.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0))
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения
	|			И ДанныеДокументов.РегистрацияВНалоговомОргане = УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане
	|ГДЕ
	|	УплатаПоФизическимЛицам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И УплатаПоФизическимЛицам.Сумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Организация,
	|	УплатаПоФизическимЛицам.МесяцНалоговогоПериода,
	|	ДанныеДокументов.РегистрацияВНалоговомОргане,
	|	УплатаПоФизическимЛицам.Ставка,
	|	УплатаПоФизическимЛицам.ФизическоеЛицо,
	|	ДанныеДокументов.РеквизитыПлатежногоПоручения,
	|	ДанныеДокументов.ДатаПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УплатаПоФизическимЛицам.ФизическоеЛицо
	|ИЗ
	|	ВТУплатаПоФизическимЛицам КАК УплатаПоФизическимЛицам";
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), "ФИОПолные", ДатаАктуальности);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.Организация,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.МесяцНалоговогоПериода,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.РегистрацияВНалоговомОргане,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.РеквизитыПлатежногоПоручения,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.ДатаПлатежа,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.СуммаОстаток
	|ПОМЕСТИТЬ ВТОстаткиАвансов
	|ИЗ
	|	РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению.Остатки(
	|			&ТекущаяДата,
	|			(Организация, МесяцНалоговогоПериода, РегистрацияВНалоговомОргане, ДатаПлатежа, РеквизитыПлатежногоПоручения) В
	|				(ВЫБРАТЬ
	|					РеквизитыПлатежа.Организация,
	|					РеквизитыПлатежа.МесяцНалоговогоПериода,
	|					РеквизитыПлатежа.РегистрацияВНалоговомОргане,
	|					РеквизитыПлатежа.ДатаПлатежа,
	|					РеквизитыПлатежа.РеквизитыПлатежногоПоручения
	|				ИЗ
	|					ВТДанныеСРегистрациями КАК РеквизитыПлатежа)) КАК УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки
	|ГДЕ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.СуммаОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УплатаПоФизическимЛицам.Организация,
	|	УплатаПоФизическимЛицам.МесяцНалоговогоПериода,
	|	УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане,
	|	УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения,
	|	УплатаПоФизическимЛицам.ДатаПлатежа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УплатаПоФизическимЛицам.ФизическоеЛицо) КАК КоличествоФизическихЛиц,
	|	СУММА(УплатаПоФизическимЛицам.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТКоличествоСтрок
	|ИЗ
	|	ВТУплатаПоФизическимЛицам КАК УплатаПоФизическимЛицам
	|ГДЕ
	|	УплатаПоФизическимЛицам.Сумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	УплатаПоФизическимЛицам.Организация,
	|	УплатаПоФизическимЛицам.МесяцНалоговогоПериода,
	|	УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане,
	|	УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения,
	|	УплатаПоФизическимЛицам.ДатаПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Организация,
	|	УплатаПоФизическимЛицам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ДанныеДокументов.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДанныеДокументов.ДатаПлатежа КАК ДатаПлатежа,
	|	ДанныеДокументов.РеквизитыПлатежногоПоручения КАК РеквизитыПлатежногоПоручения,
	|	ЕСТЬNULL(ОстаткиАвансов.СуммаОстаток, 0) КАК ОстатокАванса,
	|	УплатаПоФизическимЛицам.ФизическоеЛицо,
	|	КадровыеДанныеФизическихЛиц.ФИОПолные КАК Работник,
	|	УплатаПоФизическимЛицам.Ставка КАК Ставка,
	|	УплатаПоФизическимЛицам.Сумма,
	|	Организации.НаименованиеПолное КАК НазваниеОрганизации,
	|	Организации.ИНН,
	|	РегистрацииВНалоговомОргане.КПП,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.ДатаПлатежа < &ДатаПереходаНаКодыОКТМО
	|			ТОГДА РегистрацииВНалоговомОргане.КодПоОКАТО
	|		ИНАЧЕ РегистрацииВНалоговомОргане.КодПоОКТМО
	|	КОНЕЦ КАК КодТерритории,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.ДатаПлатежа < &ДатаПереходаНаКодыОКТМО
	|			ТОГДА ""ОКАТО""
	|		ИНАЧЕ ""ОКТМО""
	|	КОНЕЦ КАК ИмяКода,
	|	ЕСТЬNULL(КоличествоСтрок.КоличествоФизическихЛиц, 0) КАК ВсегоСтрок,
	|	ЕСТЬNULL(КоличествоСтрок.Сумма, 0) + ЕСТЬNULL(ОстаткиАвансов.СуммаОстаток, 0) КАК СуммаУплатыВсего,
	|	ДанныеДокументов.ГлавныйБухгалтер,
	|	ДанныеДокументов.Бухгалтер
	|ИЗ
	|	ВТДанныеСРегистрациями КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУплатаПоФизическимЛицам КАК УплатаПоФизическимЛицам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|			ПО УплатаПоФизическимЛицам.ФизическоеЛицо = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоСтрок КАК КоличествоСтрок
	|			ПО УплатаПоФизическимЛицам.Организация = КоличествоСтрок.Организация
	|				И УплатаПоФизическимЛицам.МесяцНалоговогоПериода = КоличествоСтрок.МесяцНалоговогоПериода
	|				И УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане = КоличествоСтрок.РегистрацияВНалоговомОргане
	|				И УплатаПоФизическимЛицам.ДатаПлатежа = КоличествоСтрок.ДатаПлатежа
	|				И УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения = КоличествоСтрок.РеквизитыПлатежногоПоручения
	|		ПО ДанныеДокументов.Организация = УплатаПоФизическимЛицам.Организация
	|			И (ДанныеДокументов.МесяцНалоговогоПериода = УплатаПоФизическимЛицам.МесяцНалоговогоПериода
	|				ИЛИ ДанныеДокументов.МесяцНалоговогоПериода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					И УплатаПоФизическимЛицам.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0))
	|			И ДанныеДокументов.РегистрацияВНалоговомОргане = УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане
	|			И ДанныеДокументов.ДатаПлатежа = УплатаПоФизическимЛицам.ДатаПлатежа
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения
	|			И (УплатаПоФизическимЛицам.Сумма <> 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиАвансов КАК ОстаткиАвансов
	|		ПО ДанныеДокументов.Организация = ОстаткиАвансов.Организация
	|			И ДанныеДокументов.МесяцНалоговогоПериода = ОстаткиАвансов.МесяцНалоговогоПериода
	|			И ДанныеДокументов.ДатаПлатежа = ОстаткиАвансов.ДатаПлатежа
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = ОстаткиАвансов.РеквизитыПлатежногоПоручения
	|			И ДанныеДокументов.РегистрацияВНалоговомОргане = ОстаткиАвансов.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО ДанныеДокументов.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ДанныеДокументов.Организация = Организации.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа,
	|	РеквизитыПлатежногоПоручения,
	|	РегистрацияВНалоговомОргане,
	|	МесяцНалоговогоПериода,
	|	Работник,
	|	Ставка";

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("ДатаПлатежа") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("РеквизитыПлатежногоПоручения") Цикл
			Пока Выборка.СледующийПоЗначениюПоля("РегистрацияВНалоговомОргане") Цикл
				Пока Выборка.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") Цикл
					
					Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ОбластьМакетаШапка.Параметры.Заполнить(Выборка);
					ОбластьМакетаШапка.Параметры.НазваниеОрганизации = СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
					ТабличныйДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
					
					ОбластьОстаткаАванса.Параметры.Заполнить(Выборка);
					
					ОбластьМакетаПодвал.Параметры.Заполнить(Выборка);
					
					ФизическиеЛица = Новый Массив;
					Если ОтветственныеЛицаВДанныхДокументов Тогда
						
						Если ЗначениеЗаполнено(Выборка.ГлавныйБухгалтер) Тогда
							ФизическиеЛица.Добавить(Выборка.ГлавныйБухгалтер);
						КонецЕсли;
						
						Если ЗначениеЗаполнено(Выборка.Бухгалтер) Тогда
							ФизическиеЛица.Добавить(Выборка.Бухгалтер);
						КонецЕсли; 

					Иначе
						
						ЗапрашиваемыеЗначения = Новый Структура("Организация,ГлавныйБухгалтер");
						ЗапрашиваемыеЗначения.Организация = Выборка.Организация;
						ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗапрашиваемыеЗначения);
						
						Если ЗначениеЗаполнено(ЗапрашиваемыеЗначения.ГлавныйБухгалтер) Тогда
							ФизическиеЛица.Добавить(ЗапрашиваемыеЗначения.ГлавныйБухгалтер);
						КонецЕсли;
						
					КонецЕсли;
					
					Если ФизическиеЛица.Количество() > 0 Тогда
						
						ТаблицаФИО = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ФизическиеЛица, "ИОФамилия");
						
						Если ЗначениеЗаполнено(Выборка.ГлавныйБухгалтер) Тогда
							ДанныеПодписанта = ТаблицаФИО.Найти(Выборка.ГлавныйБухгалтер, "ФизическоеЛицо");
						ИначеЕсли ЗначениеЗаполнено(ЗапрашиваемыеЗначения.ГлавныйБухгалтер) Тогда
							ДанныеПодписанта = ТаблицаФИО.Найти(ЗапрашиваемыеЗначения.ГлавныйБухгалтер, "ФизическоеЛицо");
						Иначе
							ДанныеПодписанта = Неопределено;
						КонецЕсли;
						
						Если ДанныеПодписанта <> Неопределено Тогда
							ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтерРасшифровкаПодписи = ДанныеПодписанта.ИОФамилия;
						КонецЕсли; 

						Если ЗначениеЗаполнено(Выборка.Бухгалтер) Тогда
							ДанныеПодписанта = ТаблицаФИО.Найти(Выборка.Бухгалтер, "ФизическоеЛицо");
							Если ДанныеПодписанта <> Неопределено Тогда
								ОбластьМакетаПодвал.Параметры.БухгалтерРасшифровкаПодписи = ДанныеПодписанта.ИОФамилия;
							КонецЕсли; 
						КонецЕсли; 
						
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Выборка.ВсегоСтрок) Тогда
						
						// Массив для разбиения на страницы.
						ВыводимыеОбласти = Новый Массив();
						ВыводимыеОбласти.Добавить(ОбластьМакета);
						ВыведеноСтрок = 0;
						Пока Выборка.Следующий() Цикл
							
							// Данные по работнику.
							ОбластьМакета.Параметры.Заполнить(Выборка);
							// разбиение на страницы
							ВыведеноСтрок = ВыведеноСтрок + 1;
							
							// Проверим, уместится ли строка на странице или надо открывать новую страницу.
							ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
							Если Не ВывестиПодвалЛиста И ВыведеноСтрок = Выборка.ВсегоСтрок Тогда
								ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
								ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
							КонецЕсли;
							Если ВывестиПодвалЛиста Тогда
								ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								ТабличныйДокумент.Вывести(ПовторятьПриПечатиСтроки);
							КонецЕсли;
							
							ОбластьМакета.Параметры.НомерСтроки = ВыведеноСтрок;
							ТабличныйДокумент.Вывести(ОбластьМакета);
							
						КонецЦикла;
						
					Иначе
						
						Для Сч = 1 По ОбластьМакета.Параметры.Количество() Цикл
							ОбластьМакета.Параметры.Установить(Сч - 1,""); 
						КонецЦикла;
						
						ОбластьМакета.Параметры.Работник = " " + Символы.ПС + " ";
						ТабличныйДокумент.Вывести(ОбластьМакета);
						
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Выборка.ОстатокАванса) Тогда
						ТабличныйДокумент.Вывести(ОбластьОстаткаАванса);
					КонецЕсли;
					
					// Выводим предварительно подготовленный Подвал документа.
					ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабличныйДокумент
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистрам подсистемы.
//
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - 
//		Организация -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		Начисления - ТаблицаЗначений - таблица значений с колонками:
//			* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - должно быть непустым.
//			* Подразделение - ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации -
//  	    * ДатаПолученияДохода - дата - должно быть непустым.
//			* КодДохода - СправочникСсылка.ВидыДоходовНДФЛ -
//			* СуммаДохода -
//			* КодВычета - СправочникСсылка.ВидыВычетовНДФЛ -
//  	    * СуммаВычета -
//			* Сотрудник - необязательная, может отсутствовать.
//  	    * Начисление - необязательная, может отсутствовать.
//  	    * КатегорияДохода - ПеречислениеСсылка.КатегорииДоходовНДФЛ - необязательная, может отсутствовать.
//  	    * ВключатьВДекларациюПоНалогуНаПрибыль - необязательная, может отсутствовать.
//  	    * РегистрацияВНалоговомОргане - необязательная, может отсутствовать; если отсутствует, значение соответствующего поля определяется по значению поля Подразделение.
//  	    * ПодразделениеСотрудника - СправочникСсылка.ПодразделенияОрганизаций - необязательная, может отсутствовать.
//  	    * ИсточникДоходаЗаПределамиРФ - булево - необязательная, может отсутствовать; если отсутствует, значение соответствующего поля определяется по значению поля ПодразделениеСотрудника (если такая колонка имеет место) или поля Подразделение.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//		Регистратор - ДокументСсылка - 
//		ДоходПолученНаТерриторииРФ - булево - признак того, надо ли регистрировать доход как полученный за пределами РФ: 
//		                               если ДоходПолученНаТерриторииРФ = Истина, весь доход регистрируется как полученный из источников на территории РФ.
//		КатегорияДохода - ПеречислениеСсылка.КатегорииДоходовНДФЛ - категория дохода документа
//
Процедура СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(Движения, Отказ, Организация, ДатаОперации, Начисления, Записывать = Ложь, ОкончательныйРасчет = Истина, Регистратор = Неопределено, ДоходПолученНаТерриторииРФ = Ложь, КатегорияДохода = Неопределено) Экспорт
	
	Если Начисления.Количество() = 0 Тогда // данных не оказалось
		Возврат;
	КонецЕсли;
	
	Если Начисления.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		ТаблицаДвижений = ТаблицаДвиженийСРегистрациейВНалоговомОргане(Начисления, "ДатаПолученияДохода");
	Иначе
		ТаблицаДвижений = Начисления;
	КонецЕсли;
	Если Начисления.Колонки.Найти("ИсточникДоходаЗаПределамиРФ") = Неопределено И ДоходПолученНаТерриторииРФ <> Истина Тогда
		ТаблицаДвижений = ТаблицаДвиженийСИсточникомДоходаЗаПределамиРФ(ТаблицаДвижений, "ДатаПолученияДохода");
	КонецЕсли;
	
	РегистрацияОрганизации = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	
	Для Каждого СтрокаДанных Из ТаблицаДвижений Цикл
		НоваяСтрока = СтрокаСведенийОДоходах(Движения.СведенияОДоходахНДФЛ, Организация, ДатаОперации, СтрокаДанных, ОкончательныйРасчет, Регистратор, КатегорияДохода);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, НоваяСтрока.РегистрацияВНалоговомОргане, РегистрацияОрганизации);
		НоваяСтрока.МесяцНалоговогоПериода = НачалоМесяца(НоваяСтрока.ДатаПолученияДохода);
	КонецЦикла;
	
	Если Начисления.Колонки.Найти("НеУчитыватьДоходВ6НДФЛ") = Неопределено Тогда
		ПроставитьПорядокУчетаДоходовВ6НДФЛ(Движения, Регистратор); 
	КонецЕсли;
	
	Если Записывать Тогда
		Движения.СведенияОДоходахНДФЛ.Записать();
		Движения.СведенияОДоходахНДФЛ.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
//
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления
//		МенеджерВременныхТаблиц, содержит вр. таблицу 
//			ВТНачисления с полями.
//				Сотрудник, тип СправочникСсылка.Сотрудники.
//				Начисление, тип ПланВидовРасчетаСсылка.Начисления
//				СуммаДохода
//				СуммаВычетаНДФЛ
//				КодВычетаНДФЛ.
//				Подразделение, тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				ПодразделениеОрганизации, тип СправочникСсылка.ПодразделенияОрганизаций
//				ПланируемаяДатаВыплаты, тип дата - необязательная
//				СуммаЗаСчетГрантов, тип число - необязательная
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//		ИмяВТНачисления - строка - имя вр. таблицы начислений, по умолчанию "ВТНачисления".
//		Регистратор - ДокументСсылка - 
//		МенеджерКадровогоУчета - Общий модуль - держатель метода СоздатьВТКадровыеДанныеСотрудников.
//		ДоходПолученНаТерриторииРФ - булево - признак того, надо ли регистрировать доход как полученный за пределами РФ: 
//		                               если ДоходПолученНаТерриторииРФ = Истина, весь доход регистрируется как полученный из источников на территории РФ.
//
Процедура СформироватьДоходыНДФЛПоНачислениям(Движения, Отказ, Организация, ДатаОперации, ДатаВыплаты, МенеджерВременныхТаблиц, МесяцНачисления = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина, ИмяВТНачисления = "ВТНачисления", Регистратор = Неопределено, МенеджерКадровогоУчета = Неопределено, ДоходПолученНаТерриторииРФ = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(МесяцНачисления) Тогда
		МесяцНачисления = ДатаОперации
	КонецЕсли;
	
	Если МенеджерКадровогоУчета = Неопределено Тогда
		МенеджерКадровогоУчета = КадровыйУчет;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаВыплаты", ДатаВыплаты);
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);
	Запрос.УстановитьПараметр("КонецМесяцаНачисления", КонецМесяца(МесяцНачисления));
	
	КолонкиТаблицыНачислений = МенеджерВременныхТаблиц.Таблицы[ИмяВТНачисления].Колонки;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	&КонецМесяцаНачисления КАК Период
	|ПОМЕСТИТЬ ВТПериодыСотрудников
	|ИЗ
	|	#ИмяВТНачисления КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Начисление ССЫЛКА ПланВидовРасчета.Начисления";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ИмяВТНачисления", ИмяВТНачисления);
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТПериодыСотрудников");
	МенеджерКадровогоУчета.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, "ДатаУвольнения, ЯвляетсяВоеннослужащимПоПризыву");
	РасчетЗарплаты.СоздатьВТДополнительныеСвойстваНачислений(МенеджерВременныхТаблиц);
	СоздатьВТДополнительныеСвойстваКодаДохода(МенеджерВременныхТаблиц);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Начисления.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(ВидыРасчета.КодДоходаНДФЛ, Начисления.Начисление) КАК КодДохода,
	|	ЕСТЬNULL(ВидыРасчета.КатегорияДохода, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК КатегорияДохода,
	|	ВЫБОР
	|		КОГДА НЕ Начисления.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|			ТОГДА &ДатаВыплаты
	|		КОГДА СвойстваКодаДохода.СоответствуетОплатеТруда
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления) < &КонецМесяцаНачисления
	|							И КОНЕЦПЕРИОДА(ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления), МЕСЯЦ) = &КонецМесяцаНачисления
	|						ТОГДА ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления)
	|					ИНАЧЕ &КонецМесяцаНачисления
	|				КОНЕЦ
	|		ИНАЧЕ &ДатаВыплаты
	|	КОНЕЦ КАК ДатаПолученияДохода,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА НЕ Начисления.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|				ТОГДА &ДатаВыплаты
	|			КОГДА СвойстваКодаДохода.СоответствуетОплатеТруда
	|				ТОГДА &КонецМесяцаНачисления
	|			ИНАЧЕ &ДатаВыплаты
	|		КОНЕЦ, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА Начисления.СуммаЗаСчетГрантов = 0
	|			ТОГДА Начисления.СуммаДохода
	|		КОГДА Начисления.СуммаДохода * Начисления.СуммаДохода < Начисления.СуммаЗаСчетГрантов * Начисления.СуммаЗаСчетГрантов
	|			ТОГДА 0
	|		ИНАЧЕ Начисления.СуммаДохода - Начисления.СуммаЗаСчетГрантов
	|	КОНЕЦ КАК СуммаДохода,
	|	Начисления.КодВычетаНДФЛ КАК КодВычета,
	|	ВЫБОР
	|		КОГДА Начисления.СуммаЗаСчетГрантов = 0
	|				ИЛИ Начисления.СуммаДохода = 0
	|			ТОГДА Начисления.СуммаВычетаНДФЛ
	|		ИНАЧЕ Начисления.СуммаВычетаНДФЛ * (1 - Начисления.СуммаЗаСчетГрантов / Начисления.СуммаДохода)
	|	КОНЕЦ КАК СуммаВычета,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Начисление КАК Начисление
	|ПОМЕСТИТЬ ВТДатыПолученияДохода
	|ИЗ
	|	#ИмяВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК ВидыРасчета
	|		ПО Начисления.Начисление = ВидыРасчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|		ПО Начисления.Сотрудник = ДанныеОСотруднике.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДополнительныеСвойстваНачислений КАК СвойстваНачислений
	|		ПО (СвойстваНачислений.Начисление = ВидыРасчета.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДополнительныеСвойстваКодаДохода КАК СвойстваКодаДохода
	|		ПО (ВидыРасчета.КодДоходаНДФЛ = СвойстваКодаДохода.КодДохода)
	|ГДЕ
	|	(Начисления.СуммаДохода <> 0
	|			ИЛИ Начисления.СуммаВычетаНДФЛ <> 0)
	|	И (НЕ ДанныеОСотруднике.ЯвляетсяВоеннослужащимПоПризыву
	|			ИЛИ ЕСТЬNULL(НЕ СвойстваНачислений.ЯвляетсяДенежнымДовольствием, ИСТИНА))
	|	И ЕСТЬNULL(ВидыРасчета.КодДоходаНДФЛ, Начисления.Начисление) <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяВТНачисления", ИмяВТНачисления);
	ТекстЗапроса = ?(КолонкиТаблицыНачислений.Найти("СуммаЗаСчетГрантов") <> Неопределено, ТекстЗапроса, СтрЗаменить(ТекстЗапроса, "Начисления.СуммаЗаСчетГрантов", "0"));
	Запрос.Текст = ?(КолонкиТаблицыНачислений.Найти("ПланируемаяДатаВыплаты") = Неопределено, ТекстЗапроса, СтрЗаменить(ТекстЗапроса, "&ДатаВыплаты", "Начисления.ПланируемаяДатаВыплаты"));
	Запрос.Выполнить();
	
	Если ДоходПолученНаТерриторииРФ Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДатыПолученияДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДатыПолученияДохода.КодДохода КАК КодДохода,
		|	ДатыПолученияДохода.КатегорияДохода КАК КатегорияДохода,
		|	ДатыПолученияДохода.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	ДатыПолученияДохода.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ДатыПолученияДохода.СуммаДохода КАК СуммаДохода,
		|	ДатыПолученияДохода.КодВычета КАК КодВычета,
		|	ДатыПолученияДохода.СуммаВычета КАК СуммаВычета,
		|	ДатыПолученияДохода.Подразделение КАК Подразделение,
		|	ДатыПолученияДохода.ПодразделениеОрганизации КАК ПодразделениеСотрудника,
		|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	ЛОЖЬ КАК ИсточникДоходаЗаПределамиРФ,
		|	ДатыПолученияДохода.Сотрудник КАК Сотрудник,
		|	ДатыПолученияДохода.Начисление КАК Начисление
		|ИЗ
		|	ВТДатыПолученияДохода КАК ДатыПолученияДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
		|		ПО ДатыПолученияДохода.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
		|			И (ДатыПолученияДохода.ДатаПолученияДохода МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДатыПолученияДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДатыПолученияДохода.КодДохода КАК КодДохода,
		|	ДатыПолученияДохода.КатегорияДохода КАК КатегорияДохода,
		|	ДатыПолученияДохода.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	ДатыПолученияДохода.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ДатыПолученияДохода.СуммаДохода КАК СуммаДохода,
		|	ДатыПолученияДохода.КодВычета КАК КодВычета,
		|	ДатыПолученияДохода.СуммаВычета КАК СуммаВычета,
		|	ДатыПолученияДохода.Подразделение КАК Подразделение,
		|	ДатыПолученияДохода.ПодразделениеОрганизации КАК ПодразделениеСотрудника,
		|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	ВЫБОР
		|		КОГДА СтруктурныеЕдиницыЗаПределамиРФ.Подразделение ЕСТЬ НЕ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ИсточникДоходаЗаПределамиРФ,
		|	ДатыПолученияДохода.Сотрудник КАК Сотрудник,
		|	ДатыПолученияДохода.Начисление КАК Начисление
		|ИЗ
		|	ВТДатыПолученияДохода КАК ДатыПолученияДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
		|		ПО ДатыПолученияДохода.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
		|			И (ДатыПолученияДохода.ДатаПолученияДохода МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодразделенияЗаПределамиРФ КАК СтруктурныеЕдиницыЗаПределамиРФ
		|		ПО ДатыПолученияДохода.ПодразделениеОрганизации = СтруктурныеЕдиницыЗаПределамиРФ.Подразделение
		|			И (ДатыПолученияДохода.ДатаПолученияДохода МЕЖДУ СтруктурныеЕдиницыЗаПределамиРФ.ДатаНачала И СтруктурныеЕдиницыЗаПределамиРФ.ДатаОкончания)";
	КонецЕсли;
	Результат = Запрос.Выполнить();
	
	РегистрацияОрганизации = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаСведенийОДоходах(Движения.СведенияОДоходахНДФЛ, Организация, ДатаОперации, Выборка, ОкончательныйРасчет, Регистратор);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияОрганизации);
	КонецЦикла;
	
	ТаблицыКУдалению = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ВТПериодыСотрудников");
	ТаблицыКУдалению.Добавить("ВТКадровыеДанныеСотрудников");
	ТаблицыКУдалению.Добавить("ВТДополнительныеСвойстваНачислений");
	ТаблицыКУдалению.Добавить("ВТДополнительныеСвойстваКодаДохода");
	ТаблицыКУдалению.Добавить("ВТДатыПолученияДохода");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, ТаблицыКУдалению);
	
	ПроставитьПорядокУчетаДоходовВ6НДФЛ(Движения, Регистратор); 
	
	Если Записывать Тогда
		// Записываем сразу и не выставляем признак Записывать этому набору записей движений документа.
		Движения.СведенияОДоходахНДФЛ.Записать();
		Движения.СведенияОДоходахНДФЛ.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// В отличие от СформироватьДоходыНДФЛПоНачислениям, дата выплаты содержится во временной
// таблице ВТНачисления
//
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МенеджерВременныхТаблиц, содержит вр. таблицу 
//			ВТНачисления с полями.
//				Сотрудник, тип СправочникСсылка.Сотрудники.
//				Начисление, тип ПланВидовРасчетаСсылка.Начисления
//				СуммаДохода
//				СуммаВычетаНДФЛ
//				КодВычетаНДФЛ.
//				Подразделение, тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				ПодразделениеОрганизации, тип СправочникСсылка.ПодразделенияОрганизаций
//				ПланируемаяДатаВыплаты
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//		ИмяВТНачисления - строка - имя вр. таблицы начислений, по умолчанию "ВТНачисления".
//		Регистратор - ДокументСсылка - 
//		ДоходПолученНаТерриторииРФ - булево - признак того, надо ли регистрировать доход как полученный за пределами РФ: 
//		                               если ДоходПолученНаТерриторииРФ = Истина, весь доход регистрируется как полученный из источников на территории РФ.
//
Процедура СформироватьДоходыНДФЛПоНачислениямСПланируемойДатойВыплаты(Движения, Отказ, Организация, ДатаОперации, МенеджерВременныхТаблиц, МесяцНачисления = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина, ИмяВТНачисления = "ВТНачисления", Регистратор = Неопределено, ДоходПолученНаТерриторииРФ = Ложь) Экспорт
	
	СформироватьДоходыНДФЛПоНачислениям(Движения, Отказ, Организация, ДатаОперации, Неопределено, МенеджерВременныхТаблиц, МесяцНачисления, Записывать, ОкончательныйРасчет, ИмяВТНачисления, Регистратор, , ДоходПолученНаТерриторииРФ); 
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		ИмущественныеВычеты
//			- таблица значений с колонками
//				МесяцРегистрации: должно быть непустым
//				ФизическоеЛицо: должно быть непустым
//				КодВычета: должно быть непустым.
//          	Год: должно быть непустым.
//				Сумма
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьПравоНаИмущественныеВычеты(Движения, Отказ, Организация, ДатаОперации, ИмущественныеВычеты, Записывать = Ложь) Экспорт
	
	Если ИмущественныеВычеты = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ИмущественныеВычеты Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		СтрокаИмущественныхВычетов(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, СтрокаДанных)
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.ИмущественныеВычетыНДФЛ.Записать();
			Движения.ИмущественныеВычетыНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ИмущественныеВычетыНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МенеджерВременныхТаблиц
//			- МенеджерВременныхТаблиц содержит вр. таблицу ВТДанныеОбИмущественныхВычетах с полями
//				ФизическоеЛицо: должно быть непустым
//          	КодВычета: должно быть непустым
//          	МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				Сумма
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьПредоставленныеИмущественныеВычетыПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Вычеты.КодВычета КАК КодВычета,
	|	ГОД(Вычеты.МесяцНалоговогоПериода) КАК Год,
	|	Вычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Вычеты.Сумма КАК Сумма,
	|	Вычеты.Подразделение КАК Подразделение,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОбИмущественныхВычетах КАК Вычеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО Вычеты.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И (Вычеты.МесяцНалоговогоПериода МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)
	|ГДЕ
	|	Вычеты.Сумма <> 0";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаИмущественныхВычетов(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, Выборка, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане); 
	КонецЦикла;
	Если Записывать Тогда
		Движения.ИмущественныеВычетыНДФЛ.Записать();
		Движения.ИмущественныеВычетыНДФЛ.Записывать = Ложь;
	Иначе
		Движения.ИмущественныеВычетыНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		ИмущественныеВычеты - ТаблицаЗначений - с колонками
//				ФизическоеЛицо: должно быть непустым
//				КодВычета: должно быть непустым.
//          	МесяцНалоговогоПериода: должно быть непустым.
//          	Год: должно быть непустым.
//				Сумма
//				Подразделение - ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации-
//      СоответствиеПодразделенийИРегистраций - необязательный устаревший параметр, не используется
//      РегистрацияВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные о вычетах передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьПредоставленныеИмущественныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ИмущественныеВычеты, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если ИмущественныеВычеты = Неопределено Или Не ЗначениеЗаполнено(ИмущественныеВычеты) Тогда
		Возврат
	КонецЕсли;
	
	Если ИмущественныеВычеты.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		ИмущественныеВычетыСРегистрациями = ТаблицаДвиженийСРегистрациейВНалоговомОргане(ИмущественныеВычеты, "МесяцНалоговогоПериода");
	Иначе
		ИмущественныеВычетыСРегистрациями = ИмущественныеВычеты;
	КонецЕсли;
	Если РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ИмущественныеВычетыСРегистрациями Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаИмущественныхВычетов(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, НоваяСтрока.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.ИмущественныеВычетыНДФЛ.Записать();
			Движения.ИмущественныеВычетыНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ИмущественныеВычетыНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МенеджерВременныхТаблиц
//			- МенеджерВременныхТаблиц, который содержит вр. таблицу ВТДанныеОСтандартныхВычетах с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	КодВычета: должно быть непустым
//      	   	МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				Сумма
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСтандартныеВычетыПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТДанныеОСтандартныхВычетах КАК Вычеты";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Вычеты.КодВычета КАК КодВычета,
	|	Вычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Вычеты.Сумма КАК Сумма,
	|	Вычеты.Подразделение КАК Подразделение,
	|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОСтандартныхВычетах КАК Вычеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО Вычеты.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И (Вычеты.МесяцНалоговогоПериода МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)
	|ГДЕ
	|	Вычеты.Сумма <> 0";
	Если МенеджерВременныхТаблиц.Таблицы["ВТДанныеОСтандартныхВычетах"].Колонки.Найти("ВключатьВДекларациюПоНалогуНаПрибыль") = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль", "Неопределено")
	Иначе 
		Запрос.Текст = ТекстЗапроса;
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаСтандартныхВычетов(Движения, Организация, ДатаОперации, Выборка, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане); 
	КонецЦикла;
	Если Записывать Тогда
		Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записать();
		Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записывать = Ложь;
	Иначе
		Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		СтандартныеВычеты
//			- таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//				КодВычета: должно быть непустым
//      	   	МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				Сумма
//				ВключатьВДекларациюПоНалогуНаПрибыль - необязательная колонка 
//      СоответствиеПодразделенийИРегистраций - необязательный устаревший параметр, не используется
//      РегистрацияВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные о вычетах передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСтандартныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, СтандартныеВычеты, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если СтандартныеВычеты = Неопределено Или Не ЗначениеЗаполнено(СтандартныеВычеты) Тогда
		Возврат
	КонецЕсли;
	
	Если СтандартныеВычеты.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		СтандартныеВычетыСРегистрациями = ТаблицаДвиженийСРегистрациейВНалоговомОргане(СтандартныеВычеты, "МесяцНалоговогоПериода");
	Иначе
		СтандартныеВычетыСРегистрациями = СтандартныеВычеты;
	КонецЕсли;
	Если РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из СтандартныеВычетыСРегистрациями Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаСтандартныхВычетов(Движения, Организация, ДатаОперации, СтрокаДанных, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, НоваяСтрока.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записать();
			Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ИсчисленныйНалог
//			- МенеджерВременныхТаблиц, который содержит вр. таблицу ВТНДФЛИсчисленный с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//  	    	КатегорияДохода - ПеречислениеСсылка.КатегорииДоходовНДФЛ: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				Сумма
//				ВключатьВДекларациюПоНалогуНаПрибыль: булево (необязательное)
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//		ДатаВыплаты - дата - "основная" дата выплаты документа-начисления.
//
Процедура СформироватьИсчисленныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, ИсчисленныйНалог, Записывать = Ложь, ОкончательныйРасчет = Истина, ДатаВыплаты = '00010101') Экспорт
	
	Если ИсчисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = ИсчисленныйНалог;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТНДФЛИсчисленный КАК Налоги";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Налоги.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Налоги.Сумма КАК Сумма,
	|	Налоги.КатегорияДохода КАК КатегорияДохода,
	|	Налоги.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Налоги.Подразделение КАК Подразделение,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТНДФЛИсчисленный КАК Налоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО Налоги.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И (Налоги.МесяцНалоговогоПериода МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)
	|ГДЕ
	|	Налоги.Сумма <> 0";
	
	ИмеющиесяКолонки = ИсчисленныйНалог.Таблицы["ВТНДФЛИсчисленный"].Колонки;
	Если ИмеющиесяКолонки.Найти("ВключатьВДекларациюПоНалогуНаПрибыль") = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "Налоги.ВключатьВДекларациюПоНалогуНаПрибыль", "Неопределено")
	Иначе 
		Запрос.Текст = ТекстЗапроса;
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, Выборка, , ОкончательныйРасчет, ДатаВыплаты);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане); 
	КонецЦикла;
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ИсчисленныйНалог 
//			- таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым
//  	    	КатегорияДохода - ПеречислениеСсылка.КатегорииДоходовНДФЛ: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации
//				Сумма
//				ВключатьВДекларациюПоНалогуНаПрибыль - необязательная колонка 
//      СоответствиеПодразделенийИРегистраций - необязательный устаревший параметр, не используется
//      РегистрацияВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные о налогах передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//		ДатаВыплаты - дата - "основная" дата выплаты документа-начисления.
//
Процедура СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ИсчисленныйНалог, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина, ДатаВыплаты = '00010101') Экспорт
	
	Если ИсчисленныйНалог = Неопределено Или Не ЗначениеЗаполнено(ИсчисленныйНалог) Тогда
		Возврат
	КонецЕсли;
	
	Если ИсчисленныйНалог.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		ИсчисленныйНалогСРегистрациями = ТаблицаДвиженийСРегистрациейВНалоговомОргане(ИсчисленныйНалог, "МесяцНалоговогоПериода");
	Иначе
		ИсчисленныйНалогСРегистрациями = ИсчисленныйНалог;
	КонецЕсли;
	
	Если РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ИсчисленныйНалогСРегистрациями Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, СтрокаДанных, , ОкончательныйРасчет, ДатаВыплаты);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, НоваяСтрока.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		УдержанныйНалог - МенеджерВременныхТаблиц - содержит вр. таблицу ВТНалогУдержанный с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//				МесяцНалоговогоПериода: должно быть непустым.
//  	    	КатегорияДохода - ПеречислениеСсылка.КатегорииДоходовНДФЛ: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				КодДохода
//				Сумма
//  	       	Ставка (необязательное)
//				РегистрацияВНалоговомОргане, тип СправочникСсылка.РегистрацииВНалоговомОргане (необязательное)
//				ДокументОснование (необязательное)
//				ВключатьВДекларациюПоНалогуНаПрибыль (необязательное)
//				СрокПеречисления: тип ПеречислениеСсылка.СрокиПеречисляемогоНалога (необязательное).
//				СуммаВыплаченногоДохода (необязательное)
//				СуммаОтпускныхБольничных (необязательное)
//				УчитыватьВыплаченныйДоходВ6НДФЛ (необязательное)
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет вычисляться по подразделениям и организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьУдержанныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт
	
	Если УдержанныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = УдержанныйНалог;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТНалогУдержанный КАК Налоги";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Налоги.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Налоги.Сумма КАК Сумма,
	|	Налоги.КодДохода КАК КодДохода,
	|	Налоги.КатегорияДохода КАК КатегорияДохода,
	|	Налоги.Подразделение КАК Подразделение,
	|	Налоги.Ставка КАК Ставка,
	|	Налоги.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Налоги.СрокПеречисления КАК СрокПеречисления,
	|	Налоги.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода,
	|	Налоги.СуммаОтпускныхБольничных КАК СуммаОтпускныхБольничных,
	|	Налоги.СуммаОблагаемогоДохода КАК СуммаОблагаемогоДохода,
	|	Налоги.ДокументОснование КАК ДокументОснование,
	|	Налоги.УчитыватьВыплаченныйДоходВ6НДФЛ КАК УчитыватьВыплаченныйДоходВ6НДФЛ,
	|	ВЫБОР
	|		КОГДА &ПроверкаРегистрации
	|			ТОГДА Налоги.РегистрацияВНалоговомОргане
	|		ИНАЧЕ ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане
	|	КОНЕЦ КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТВременнаяТаблица
	|ИЗ
	|	ВТНалогУдержанный КАК Налоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыОснования КАК ДокументыОснования
	|		ПО Налоги.ДокументОснование = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО Налоги.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И Налоги.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И Налоги.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И Налоги.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО Налоги.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И (ВЫБОР
	|				КОГДА Налоги.МесяцНалоговогоПериода > &ДатаОперации
	|					ТОГДА Налоги.МесяцНалоговогоПериода
	|				ИНАЧЕ &ДатаОперации
	|			КОНЕЦ МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)
	|			И (НЕ &ПроверкаРегистрации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВременнаяТаблица.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВременнаяТаблица.Ставка КАК Ставка,
	|	ВременнаяТаблица.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВременнаяТаблица.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВременнаяТаблица.СрокПеречисления КАК СрокПеречисления,
	|	ВременнаяТаблица.ДокументОснование КАК ДокументОснование,
	|	ВременнаяТаблица.КатегорияДохода КАК КатегорияДохода,
	|	ВременнаяТаблица.КодДохода КАК КодДохода,
	|	ВременнаяТаблица.Подразделение КАК Подразделение,
	|	ВременнаяТаблица.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(ВременнаяТаблица.Сумма) КАК Сумма,
	|	СУММА(ВременнаяТаблица.СуммаВыплаченногоДохода) КАК СуммаВыплаченногоДохода,
	|	СУММА(ВременнаяТаблица.СуммаОблагаемогоДохода) КАК СуммаОблагаемогоДохода,
	|	СУММА(ВременнаяТаблица.СуммаОтпускныхБольничных) КАК СуммаОтпускныхБольничных,
	|	ВременнаяТаблица.УчитыватьВыплаченныйДоходВ6НДФЛ КАК УчитыватьВыплаченныйДоходВ6НДФЛ
	|ИЗ
	|	ВТВременнаяТаблица КАК ВременнаяТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблица.ФизическоеЛицо,
	|	ВременнаяТаблица.СтавкаНалогообложенияРезидента,
	|	ВременнаяТаблица.Ставка,
	|	ВременнаяТаблица.МесяцНалоговогоПериода,
	|	ВременнаяТаблица.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВременнаяТаблица.СрокПеречисления,
	|	ВременнаяТаблица.ДокументОснование,
	|	ВременнаяТаблица.КатегорияДохода,
	|	ВременнаяТаблица.КодДохода,
	|	ВременнаяТаблица.Подразделение,
	|	ВременнаяТаблица.РегистрацияВНалоговомОргане,
	|	ВременнаяТаблица.УчитыватьВыплаченныйДоходВ6НДФЛ";
	
	ВычислятьСрокПеречисления = Истина;
	ИмеющиесяКолонки = УдержанныйНалог.Таблицы["ВТНалогУдержанный"].Колонки;
	Если ИмеющиесяКолонки.Найти("Ставка") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.Ставка КАК Ставка,", "СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,");
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Налоги.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	Налоги.МесяцНалоговогоПериода КАК Период,
		|	Налоги.КатегорияДохода КАК КатегорияДохода
		|ПОМЕСТИТЬ ВТПериодыНалогаУдержанного
		|ИЗ
		|	ВТНалогУдержанный КАК Налоги";
		Запрос.Выполнить();
		СоздатьВТСтавкаНДФЛПоСтавкеРезидента(УдержанныйНалог, "ВТПериодыНалогаУдержанного");
		Запрос.Текст = "УНИЧТОЖИТЬ ВТПериодыНалогаУдержанного";
		Запрос.Выполнить();
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка) КАК КатегорияДохода,
		|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.ПустаяСсылка) КАК СтавкаНалогообложенияРезидента,
		|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка) КАК СтавкаНДФЛ
		|ПОМЕСТИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
		Запрос.Выполнить();
	КонецЕсли;
	Если ИмеющиесяКолонки.Найти("ВключатьВДекларациюПоНалогуНаПрибыль") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.ВключатьВДекларациюПоНалогуНаПрибыль", "Неопределено")
	КонецЕсли;
	Если ИмеющиесяКолонки.Найти("ДокументОснование") = Неопределено Тогда
		ВычислятьСрокПеречисления = Ложь;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	ЛОЖЬ КАК УчитыватьВыплаченныйДоходВ6НДФЛ
		|ПОМЕСТИТЬ ВТДокументыОснования";
		Запрос.Выполнить();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.ДокументОснование", "Неопределено");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВременнаяТаблица.ДокументОснование", "Неопределено");
		Если ИмеющиесяКолонки.Найти("УчитыватьВыплаченныйДоходВ6НДФЛ") = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.УчитыватьВыплаченныйДоходВ6НДФЛ", "ЛОЖЬ")
		КонецЕсли;
	Иначе 	
		Если ИмеющиесяКолонки.Найти("УчитыватьВыплаченныйДоходВ6НДФЛ") = Неопределено Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор КАК ДокументОснование,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ) КАК УчитыватьВыплаченныйДоходВ6НДФЛ
			|ПОМЕСТИТЬ ВТДокументыОснования
			|ИЗ
			|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|ГДЕ
			|	СведенияОДоходахНДФЛ.Регистратор В
			|			(ВЫБРАТЬ
			|				ИсходныеДанные.ДокументОснование
			|			ИЗ
			|				ВТНалогУдержанный КАК ИсходныеДанные)
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.Регистратор";
			Запрос.Выполнить();
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.УчитыватьВыплаченныйДоходВ6НДФЛ", "ДокументыОснования.УчитыватьВыплаченныйДоходВ6НДФЛ")
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
			|	ЛОЖЬ КАК УчитыватьВыплаченныйДоходВ6НДФЛ
			|ПОМЕСТИТЬ ВТДокументыОснования";
			Запрос.Выполнить();
		КонецЕсли;
	КонецЕсли;
	Если ИмеющиесяКолонки.Найти("СрокПеречисления") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.СрокПеречисления", "Неопределено")
	Иначе 	
		ВычислятьСрокПеречисления = Ложь;
	КонецЕсли;
	Если ИмеющиесяКолонки.Найти("СуммаВыплаченногоДохода") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.СуммаВыплаченногоДохода", "0")
	КонецЕсли;
	Если ИмеющиесяКолонки.Найти("СуммаОблагаемогоДохода") = Неопределено Тогда
		Если ИмеющиесяКолонки.Найти("СуммаВыплаченногоДохода") = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.СуммаОблагаемогоДохода", "0")
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.СуммаОблагаемогоДохода", "Налоги.СуммаВыплаченногоДохода")
		КонецЕсли;
	КонецЕсли;
	Если ИмеющиесяКолонки.Найти("СуммаОтпускныхБольничных") = Неопределено Тогда
		Если ИмеющиесяКолонки.Найти("СуммаВыплаченногоДохода") = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.СуммаОтпускныхБольничных", "0")
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.СуммаОтпускныхБольничных", "Налоги.СуммаВыплаченногоДохода")
		КонецЕсли;
	КонецЕсли;
	Если ИмеющиесяКолонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		Запрос.УстановитьПараметр("ПроверкаРегистрации", Ложь);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.РегистрацияВНалоговомОргане", "Неопределено");
	Иначе
		Запрос.УстановитьПараметр("ПроверкаРегистрации", Истина);
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	Результаты = Запрос.Выполнить().Выгрузить();
	
	Если РегистрацияВНалоговомОргане = Неопределено Тогда 
		РегистрацияОрганизацииВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);	
	КонецЕсли;	
	БольничныеОтпуска = ?(ВычислятьСрокПеречисления, РасчетЗарплаты.ОснованиеИсчисленияНалогаСОтсроченнойУплатой(Результаты.ВыгрузитьКолонку("ДокументОснование")), Новый Соответствие);
	
	Для каждого СтрокаТЗ Из Результаты Цикл
		
		Если СтрокаТЗ.Сумма = 0 И СтрокаТЗ.СуммаВыплаченногоДохода = 0 И СтрокаТЗ.СуммаОтпускныхБольничных = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаРасчетовНалогоплательщика = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаТЗ, Перечисления.ВариантыУдержанияНДФЛ.Удержано);
		Если РегистрацияВНалоговомОргане = Неопределено Тогда
			ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрокаРасчетовНалогоплательщика, СтрокаТЗ.РегистрацияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане);
		Иначе
			НоваяСтрокаРасчетовНалогоплательщика.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
		КонецЕсли;
		Если ВычислятьСрокПеречисления Тогда
			Если БольничныеОтпуска[НоваяСтрокаРасчетовНалогоплательщика.ДокументОснование] = Истина И (СтрокаТЗ.СуммаОтпускныхБольничных > 0 Или СтрокаТЗ.СуммаВыплаченногоДохода < 0 Или (СтрокаТЗ.СуммаОтпускныхБольничных = 0 И СтрокаТЗ.СуммаВыплаченногоДохода = 0)) Тогда
				Если СтрокаТЗ.СуммаВыплаченногоДохода <= СтрокаТЗ.СуммаОтпускныхБольничных Или СтрокаТЗ.СуммаВыплаченногоДохода < 0 Тогда // весь доход считаем отпускными
					НоваяСтрокаРасчетовНалогоплательщика.СрокПеречисления = Перечисления.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные;
				Иначе
					ВтораяСтрокаРасчетовНалогоплательщика = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаТЗ, Перечисления.ВариантыУдержанияНДФЛ.Удержано);
					ЗаполнитьЗначенияСвойств(ВтораяСтрокаРасчетовНалогоплательщика, НоваяСтрокаРасчетовНалогоплательщика);
					НоваяСтрокаРасчетовНалогоплательщика.Сумма = Окр(СтрокаТЗ.Сумма / СтрокаТЗ.СуммаОблагаемогоДохода * СтрокаТЗ.СуммаОтпускныхБольничных, 0);
					НоваяСтрокаРасчетовНалогоплательщика.СуммаВыплаченногоДохода = СтрокаТЗ.СуммаОтпускныхБольничных;
					НоваяСтрокаРасчетовНалогоплательщика.СрокПеречисления = Перечисления.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные;
					ВтораяСтрокаРасчетовНалогоплательщика.Сумма = СтрокаТЗ.Сумма - НоваяСтрокаРасчетовНалогоплательщика.Сумма;
					ВтораяСтрокаРасчетовНалогоплательщика.СуммаВыплаченногоДохода = СтрокаТЗ.СуммаВыплаченногоДохода - СтрокаТЗ.СуммаОтпускныхБольничных;
					ВтораяСтрокаРасчетовНалогоплательщика.СрокПеречисления = Перечисления.СрокиПеречисляемогоНалога.ПрочиеДоходы;
				КонецЕсли;
			Иначе
				НоваяСтрокаРасчетовНалогоплательщика.СрокПеречисления = Перечисления.СрокиПеречисляемогоНалога.ПрочиеДоходы;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрокаРасчетовНалоговыхАгентов = СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, НоваяСтрокаРасчетовНалогоплательщика, СтрокаТЗ, , НоваяСтрокаРасчетовНалогоплательщика.КатегорияДохода);
		НоваяСтрокаРасчетовНалоговыхАгентов.РегистрацияВНалоговомОргане = НоваяСтрокаРасчетовНалогоплательщика.РегистрацияВНалоговомОргане;
		
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	Если Записывать Тогда
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	ТаблицыКУдалению = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ВТСтавкаНДФЛПоСтавкеРезидента");
	ТаблицыКУдалению.Добавить("ВТВременнаяТаблица");
	ТаблицыКУдалению.Добавить("ВТДокументыОснования");
	ЗарплатаКадры.УничтожитьВТ(УдержанныйНалог, ТаблицыКУдалению);
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		УдержанныйНалог - Таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//  	       	Ставка: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации
//				КодДохода
//				Сумма
//				РегистрацияВНалоговомОргане - необязательная колонка, если ее нет, то регистрация будет вычисляться.
//				РасчетМежрасчетногоПериода - необязательная колонка 
//				ВключатьВДекларациюПоНалогуНаПрибыль - необязательная колонка 
//				ДокументОснование: тип ОпределяемыйТип.ДокументыОснованияНДФЛ - необязательная колонка  
//				СрокПеречисления: тип ПеречислениеСсылка.СрокиПеречисляемогоНалога (необязательное).
//				СуммаВыплаченногоДохода (необязательное)
//				УчитыватьВыплаченныйДоходВ6НДФЛ (необязательное)
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет вычисляться по подразделениям и организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьУдержанныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт
	
	Если УдержанныйНалог = Неопределено Или УдержанныйНалог.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерВременныхТаблиц, УдержанныйНалог, "ВТНалогУдержанный");
	СформироватьУдержанныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерВременныхТаблиц, РегистрацияВНалоговомОргане, Записывать)

КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ПеречисленныйНалог - МенеджерВременныхТаблиц, который содержит вр. таблицу ВТНалогПеречисленный с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	Ставка: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Сумма
//				РеквизитыПлатежногоПоручения: тип Строка.
//				РегистрацияВНалоговомОргане: тип СправочникСсылка.РегистрацииВНалоговомОргане  
//				ВключатьВДекларациюПоНалогуНаПрибыль: тип Булево
//				ИсчисленоПоДивидендам: тип Булево
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьПеречисленныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, ПеречисленныйНалог, Записывать = Ложь) Экспорт
	
	Если ПеречисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = ПеречисленныйНалог;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.Ставка,
	|	Налоги.МесяцНалоговогоПериода,
	|	Налоги.Сумма,
	|	Налоги.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Налоги.ИсчисленоПоДивидендам,
	|	Налоги.РеквизитыПлатежногоПоручения,
	|	Налоги.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТНалогПеречисленный КАК Налоги
	|ГДЕ
	|	Налоги.Сумма <> 0";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияОрганизацииВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);	
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаРасчетовНалоговыхАгентов = СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, Выборка);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрокаРасчетовНалоговыхАгентов, Выборка.РегистрацияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане);
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		НалогиПереданныеВНалоговыйОрган - таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//  	       	Ставка: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				Сумма
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьНалогиПереданныеВНалоговыйОрган(Движения, Отказ, Организация, ДатаОперации, НалогиПереданныеВНалоговыйОрган, Записывать = Ложь) Экспорт
	
	Если НалогиПереданныеВНалоговыйОрган = Неопределено Тогда
		Возврат
	КонецЕсли;
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из НалогиПереданныеВНалоговыйОрган Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, Перечисления.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления
//			- МенеджерВременныхТаблиц, который содержит вр. таблицу ВТУдержания с полями
//				ФизическоеЛицо: должно быть непустым.
//				Удержание - тип ПланВидовРасчетаСсылка.Удержания.
//				Сумма
//		Записывать - булево - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСоциальныеВычетыПоВременнойТаблице(Регистратор, Движения,  Отказ, Организация, ДатаОперации, МесяцНачисления, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт 

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", НачалоМесяца(МесяцНачисления));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Ссылка", Регистратор);
	Запрос.УстановитьПараметр("МесяцДатыОперации", НачалоМесяца(ДатаОперации));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо,
	|	СУММА(Удержания.Сумма) КАК Сумма,
	|	&МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА Удержания.Удержание.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДСВ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код319)
	|	КОНЕЦ КАК КодВычета
	|ПОМЕСТИТЬ ВТИсходныеДанные
	|ИЗ
	|	ВТУдержания КАК Удержания
	|ГДЕ
	|	Удержания.Удержание.КатегорияУдержания В (ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДСВ), ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДобровольныеВзносыВНПФ))
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Удержания.Удержание.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДСВ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код319)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходныеДанные.ФизическоеЛицо
	|ИЗ
	|	ВТИсходныеДанные КАК ИсходныеДанные";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(МенеджерВременныхТаблиц, Ложь, Результат.Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), Организация, ДатаОперации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	&МесяцНалоговогоПериода КАК Период
	|ПОМЕСТИТЬ ВТПериодыСотрудников
	|ИЗ
	|	ВТОсновныеСотрудникиФизическихЛиц КАК Сотрудники";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТПериодыСотрудников");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, "Подразделение");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеДанные.ФизическоеЛицо,
	|	ИсходныеДанные.Сумма,
	|	ИсходныеДанные.МесяцНалоговогоПериода,
	|	ИсходныеДанные.ГоловнаяОрганизация,
	|	ИсходныеДанные.КодВычета,
	|	ЕСТЬNULL(Вычет320.Сумма, 0) КАК СуммаВычета320
	|ПОМЕСТИТЬ ВТСуммыВычетов
	|ИЗ
	|	ВТИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанные КАК Вычет320
	|		ПО ИсходныеДанные.ФизическоеЛицо = Вычет320.ФизическоеЛицо
	|			И (Вычет320.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.ФизическоеЛицо,
	|	СУММА(ИсходныеДанные.Сумма) КАК ПримененныйВычет
	|ПОМЕСТИТЬ ВТЗарегистрированоРанееВычетов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Сумма КАК Сумма
	|	ИЗ
	|		ВТИсходныеДанные КАК ИсходныеДанные
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК НДФЛПредоставленныеСтандартныеВычетыФизЛиц
	|			ПО ИсходныеДанные.ФизическоеЛицо = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ФизическоеЛицо
	|				И ИсходныеДанные.ГоловнаяОрганизация = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ГоловнаяОрганизация
	|				И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Регистратор <> &Ссылка)
	|				И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(ИсходныеДанные.МесяцНалоговогоПериода, ГОД) И ИсходныеДанные.МесяцНалоговогоПериода)
	|				И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные))
	|				И (НАЧАЛОПЕРИОДА(НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Период, МЕСЯЦ) <= &МесяцДатыОперации)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсходныеДанные.ФизическоеЛицо,
	|		ИмущественныеВычетыНДФЛ.Сумма
	|	ИЗ
	|		ВТИсходныеДанные КАК ИсходныеДанные
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|			ПО ИсходныеДанные.ФизическоеЛицо = ИмущественныеВычетыНДФЛ.ФизическоеЛицо
	|				И ИсходныеДанные.ГоловнаяОрганизация = ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация
	|				И (ИмущественныеВычетыНДФЛ.Регистратор <> &Ссылка)
	|				И (ИмущественныеВычетыНДФЛ.Период МЕЖДУ НАЧАЛОПЕРИОДА(ИсходныеДанные.МесяцНалоговогоПериода, ГОД) И ИсходныеДанные.МесяцНалоговогоПериода)
	|				И (ИмущественныеВычетыНДФЛ.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО))
	|				И (НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.МесяцРегистрации, МЕСЯЦ) <= &МесяцДатыОперации)
	|				И (ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))) КАК ИсходныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходныеДанные.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ИсходныеДанные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320)
	|			ТОГДА ВЫБОР
	|					КОГДА ИсходныеДанные.Сумма + ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) < 120000
	|						ТОГДА ИсходныеДанные.Сумма
	|					КОГДА ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) < 120000
	|						ТОГДА 120000 - ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИсходныеДанные.Сумма + ИсходныеДанные.СуммаВычета320 + ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) < 120000
	|					ТОГДА ИсходныеДанные.Сумма
	|				КОГДА ИсходныеДанные.СуммаВычета320 + ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) < 120000
	|					ТОГДА 120000 - ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) - ИсходныеДанные.СуммаВычета320
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	ИсходныеДанные.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ИсходныеДанные.КодВычета,
	|	ЕСТЬNULL(ДанныеОСотруднике.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение
	|ИЗ
	|	ВТСуммыВычетов КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗарегистрированоРанееВычетов КАК ЗарегистрированоРанееВычетов
	|		ПО ИсходныеДанные.ФизическоеЛицо = ЗарегистрированоРанееВычетов.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеСотрудникиФизическихЛиц КАК Сотрудники
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|			ПО Сотрудники.Сотрудник = ДанныеОСотруднике.Сотрудник
	|		ПО ИсходныеДанные.ФизическоеЛицо = Сотрудники.ФизическоеЛицо";
	Результаты = Запрос.ВыполнитьПакет();
	
	ТаблицыКУдалению = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ВТОсновныеСотрудникиФизическихЛиц");
	ТаблицыКУдалению.Добавить("ВТКадровыеДанныеСотрудников");
	ТаблицыКУдалению.Добавить("ВТПериодыСотрудников");
	ТаблицыКУдалению.Добавить("ВТИсходныеДанные");
	ТаблицыКУдалению.Добавить("ВТЗарегистрированоРанееВычетов");
	ТаблицыКУдалению.Добавить("ВТСуммыВычетов");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, ТаблицыКУдалению);
	
	СформироватьСтандартныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, Результаты[2].Выгрузить(), , , Записывать, ОкончательныйРасчет);
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления.
//		Удержания - таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым.
//				КатегорияУдержания - тип ПеречислениеСсылка.КатегорииУдержаний.
//				Удержание - тип ПланВидовРасчетаСсылка.Удержания.
//				Сумма
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСоциальныеВычетыПоУдержаниям(Регистратор, Движения, Отказ, Организация, ДатаОперации, МесяцНачисления, Удержания, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт 

	Если Удержания.Количество() = 0 Тогда // данных не оказалось
		Возврат	
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("КатегорияУдержания");
	СтруктураПоиска.КатегорияУдержания = Перечисления.КатегорииУдержаний.ДобровольныеВзносыВНПФ;
	Вычеты = Удержания.Скопировать(СтруктураПоиска);
	СтруктураПоиска.КатегорияУдержания = Перечисления.КатегорииУдержаний.ДСВ;
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Удержания.Скопировать(СтруктураПоиска), Вычеты);

	Если Вычеты.Количество() = 0 Тогда
		Возврат	
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Удержания", Вычеты);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Удержание КАК Удержание,
	|	Удержания.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТУдержания
	|ИЗ
	|	&Удержания КАК Удержания
	|";
	Запрос.Выполнить();
	
	СформироватьСоциальныеВычетыПоВременнойТаблице(Регистратор, Движения, Отказ, Организация, ДатаОперации, МесяцНачисления, Запрос.МенеджерВременныхТаблиц, Записывать, ОкончательныйРасчет);
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора либо структура, содержащая те же наборы записей с движениями.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ДанныеДокумента - Таблица значений с колонками
//			ФизическоеЛицо: должно быть непустым
//         	МесяцНалоговогоПериода: должно быть непустым.
//			Подразделение, тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации
//			необязательные колонки с суммами налогов и вычетов:
//          	НалогПоСтавке13, НалогПоСтавке09, НалогПоСтавке35
//          	ЗачтеноАвансовыхПлатежейПоСтавке13, ЗачтеноАвансовыхПлатежейПоСтавке09, ЗачтеноАвансовыхПлатежейПоСтавке35
//				КатегорияДохода
//              ПримененныйВычетЛичный
//              ПримененныйВычетНаДетей, ПримененныйВычетНаДетейДвойной, ПримененныйВычетНаДетейДвойнойВторой 
//              ПримененныйВычетНаВторогоРебенка, ПримененныйВычетНаВторогоРебенкаДвойной, ПримененныйВычетНаВторогоРебенкаДвойнойВторой
//              ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойнойВторой
//              ПримененныйВычетНаДетейИнвалидов, ПримененныйВычетНаДетейИнвалидовДвойной, ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//              ПримененныйВычетЛичныйОпекунов
//              ПримененныйВычетНаДетейОпекунов, ПримененныйВычетНаДетейДвойнойОпекунов, ПримененныйВычетНаДетейДвойнойВторойОпекунов 
//              ПримененныйВычетНаВторогоРебенкаОпекунов, ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов, ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов
//              ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов, ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов, ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов
//				ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
//				ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение,ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни
//              ПримененныйВычетИмущественныйРасходы, ПримененныйВычетИмущественныйПроцентыПоКредитам, ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//		ДатаВыплаты - дата - "основная" дата выплаты документа-начисления.
//
Процедура СформироватьНалогиВычеты(Движения, Отказ, Организация, ДатаОперации, ДанныеДокумента, Записывать = Ложь, ОкончательныйРасчет = Истина, ДатаВыплаты = '00010101') Экспорт
	
	Если ДанныеДокумента = Неопределено Или Не ЗначениеЗаполнено(ДанныеДокумента) Тогда
		Возврат
	КонецЕсли;
	
	ДанныеСРегистрациями = ТаблицаДвиженийСРегистрациейВНалоговомОргане(ДанныеДокумента, "МесяцНалоговогоПериода");
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации); 
	
	КолонкиДанных = ДанныеСРегистрациями.Колонки;
	
	СтрокИсчисленногоНалога = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Количество();
	СтрокЗачтеноАвансовыхПлатежей = Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Количество();
	
	Если КолонкиДанных.Найти("НалогПоСтавке13") <> Неопределено Тогда
		СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеСРегистрациями, "НалогПоСтавке13", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13), , РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет, ДатаВыплаты);
	КонецЕсли;
	Если КолонкиДанных.Найти("ЗачтеноАвансовыхПлатежейПоСтавке13") <> Неопределено Тогда
		СформироватьИспользованныеАвансовыеПлатежиПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеСРегистрациями, "ЗачтеноАвансовыхПлатежейПоСтавке13", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13), , РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("НалогПоСтавке09") <> Неопределено Тогда
		СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеСРегистрациями, "НалогПоСтавке09", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09), , РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет, ДатаВыплаты);
	КонецЕсли;
	Если КолонкиДанных.Найти("ЗачтеноАвансовыхПлатежейПоСтавке09") <> Неопределено Тогда
		СформироватьИспользованныеАвансовыеПлатежиПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеСРегистрациями, "ЗачтеноАвансовыхПлатежейПоСтавке09", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09), , РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("НалогПоСтавке35") <> Неопределено Тогда
		СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеСРегистрациями, "НалогПоСтавке35", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35), , РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет, ДатаВыплаты);
	КонецЕсли;
	Если КолонкиДанных.Найти("ЗачтеноАвансовыхПлатежейПоСтавке35") <> Неопределено Тогда
		СформироватьИспользованныеАвансовыеПлатежиПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеСРегистрациями, "ЗачтеноАвансовыхПлатежейПоСтавке35", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35), , РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("ПримененныйВычетЛичный") <> Неопределено Тогда
		СформироватьСтандартныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ЛичныйВычетИзДанныхДокумента(ДанныеСРегистрациями, "ПримененныйВычетЛичный", "ПримененныйВычетЛичныйКодВычета"), , РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	
	Если СтрокИсчисленногоНалога < Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Количество() Тогда
		Если ОкончательныйРасчет И ПроведениеСервер.ЕстьНаборЗаписей(Движения, "СведенияОДоходахНДФЛ") Тогда
			ДоходыДокумента = Движения.СведенияОДоходахНДФЛ.Выгрузить();
			ДоходыДокумента.Индексы.Добавить("ФизическоеЛицо,ДатаПолученияДохода");
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода");
			Для каждого Движение Из Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ Цикл
				Если Движение.ДатаПолученияДоходаФиксирована Или Движение.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
					Продолжить;
				КонецЕсли;
				СтруктураПоиска.ФизическоеЛицо = Движение.ФизическоеЛицо;
				СтруктураПоиска.ДатаПолученияДохода = Движение.МесяцНалоговогоПериода;
				Движение.ДатаПолученияДоходаФиксирована = ДоходыДокумента.НайтиСтроки(СтруктураПоиска).Количество() = 0;
			КонецЦикла;
		КонецЕсли;
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрокЗачтеноАвансовыхПлатежей < Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Количество() Тогда
		Если Записывать Тогда
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записать();
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// Определяем соответствие видов вычетов полям таблицы.
	ВидыВычетов = ВидыВычетовПоПолямТаблицы();
	
	// Вычеты на детей
	МассивВычетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыВычетовНаДетей());
	Для каждого ИмяРесурса Из МассивВычетов Цикл
		Если КолонкиДанных.Найти(ИмяРесурса) <> Неопределено Тогда
			СформироватьСтандартныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, СтандартныйВычетИзДанныхДокумента(ДанныеСРегистрациями, ИмяРесурса, ВидыВычетов[ИмяРесурса]), , РегистрацияВНалоговомОргане, Записывать, ОкончательныйРасчет);
		КонецЕсли;
	КонецЦикла;
	
	// Имущественные вычеты
	МассивВычетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыИмущественныхВычетов());
	Для каждого ИмяРесурса Из МассивВычетов Цикл
		Если КолонкиДанных.Найти(ИмяРесурса) <> Неопределено Тогда
			СформироватьПредоставленныеИмущественныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ИмущественныйВычетИзДанныхДокумента(ДанныеСРегистрациями, ИмяРесурса, ВидыВычетов[ИмяРесурса]), , РегистрацияВНалоговомОргане, Записывать, ОкончательныйРасчет);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		ДанныеДокумента - Таблица значений с колонками
//			МесяцРегистрации
//			ФизическоеЛицо
//			ГоловнаяОрганизация
//			ИзменитьВычетыНаДетей
//			ВычетыНаДетей: таблица значений, соответствующая по структуре регистру СтандартныеВычетыНаДетейНДФЛ
//			ИзменитьЛичныйВычет
//			КодВычетаЛичный
//			ДокументПодтверждающийПравоНаЛичныйВычет.
//		Записывать - Булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ЗаполнятьОснование - Булево - признак того, следует ли заполнять реквизит "Основание" для вычетов
//
Процедура СформироватьПрименениеСтандартныхВычетов(Движения, Отказ, ДанныеДокумента, Записывать = Ложь, ЗаполнятьОснование = Истина) Экспорт
	
	Если ДанныеДокумента = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ЗаписьОПримененииВычета						= Движения.ПрименениеСтандартныхВычетовПоНДФЛ.Добавить();
	ЗаписьОПримененииВычета.Период				= ДанныеДокумента.МесяцРегистрации;
	ЗаписьОПримененииВычета.ФизическоеЛицо		= ДанныеДокумента.ФизическоеЛицо;
	ЗаписьОПримененииВычета.ГоловнаяОрганизация	= ДанныеДокумента.ГоловнаяОрганизация;
	Если Записывать Тогда
		Движения.ПрименениеСтандартныхВычетовПоНДФЛ.Записать();
		Движения.ПрименениеСтандартныхВычетовПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.ПрименениеСтандартныхВычетовПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	Если ДанныеДокумента.ИзменитьВычетыНаДетей Тогда
		Для Каждого ВычетНаДетей Из ДанныеДокумента.ВычетыНаДетей Цикл
			ЗаполнитьЗначенияСвойств(Движения.СтандартныеВычетыНаДетейНДФЛ.Добавить(), ВычетНаДетей);
		КонецЦикла;
		Если Записывать Тогда
			Движения.СтандартныеВычетыНаДетейНДФЛ.Записать();
			Движения.СтандартныеВычетыНаДетейНДФЛ.Записывать = Ложь;
		Иначе
			Движения.СтандартныеВычетыНаДетейНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеДокумента.ИзменитьЛичныйВычет Тогда
		ЗаписьОЛичномВычете					= Движения.СтандартныеВычетыФизическихЛицНДФЛ.Добавить();
		ЗаписьОЛичномВычете.Период			= ДанныеДокумента.МесяцРегистрации;
		ЗаписьОЛичномВычете.ФизическоеЛицо	= ДанныеДокумента.ФизическоеЛицо;
		ЗаписьОЛичномВычете.КодВычетаЛичный	= ДанныеДокумента.КодВычетаЛичный;
		Если ЗаполнятьОснование Тогда
			
			ЗаписьОЛичномВычете.Основание = ДанныеДокумента.ДокументПодтверждающийПравоНаЛичныйВычет;
			
		КонецЕсли;
		Если Записывать Тогда
			Движения.СтандартныеВычетыФизическихЛицНДФЛ.Записать();
			Движения.СтандартныеВычетыФизическихЛицНДФЛ.Записывать = Ложь;
		Иначе
			Движения.СтандартныеВычетыФизическихЛицНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		АвансовыеПлатежи - ТаблицаЗначений - таблица с колонками:
//				ФизическоеЛицо: должно быть непустым
//          	Год: должно быть непустым.
//				Сумма
//		Записывать - булево  - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьАвансовыйПлатежИностранца(Движения, Отказ, Организация, ДатаОперации, АвансовыеПлатежи, Записывать = Ложь) Экспорт
	
	Если АвансовыеПлатежи = Неопределено Или ДатаОперации < ДатаИзмененияНалогообложенияДивидендов() Тогда
		Возврат
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого АвансовыйПлатеж Из АвансовыеПлатежи Цикл
		Если АвансовыйПлатеж.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		СтрокаАвансовыхПлатежейИностранцев(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, АвансовыйПлатеж)
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записать();
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу 
//			ВТДанныеОЗачтенныхПлатежах с полями
//				ФизическоеЛицо: должно быть непустым
//      	   	МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				Сумма
//				СтавкаНалогообложенияРезидента
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьИспользованныеАвансовыеПлатежиПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если МенеджерВременныхТаблиц = Неопределено Или ДатаОперации < ДатаИзмененияНалогообложенияДивидендов() Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГОД(Вычеты.МесяцНалоговогоПериода) КАК Год,
	|	Вычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Вычеты.Сумма КАК Сумма,
	|	Вычеты.Подразделение КАК Подразделение,
	|	Вычеты.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОЗачтенныхПлатежах КАК Вычеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО Вычеты.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И (Вычеты.МесяцНалоговогоПериода МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)
	|ГДЕ
	|	Вычеты.Сумма <> 0";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаАвансовыхПлатежейИностранцев(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, Выборка, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане); 
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, Выборка, Перечисления.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане);
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записать();
		Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		АвансовыеПлатежи - ТаблицаЗначений - с колонками:
//				ФизическоеЛицо: должно быть непустым
//				Год: должно быть непустым
//				Подразделение - ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				Сумма
//				СтавкаНалогообложенияРезидента
//				МесяцНалоговогоПериода
//      СоответствиеПодразделенийИРегистраций - необязательный устаревший параметр, не используется
//      РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьИспользованныеАвансовыеПлатежиПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, АвансовыеПлатежи, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если АвансовыеПлатежи = Неопределено Или ДатаОперации < ДатаИзмененияНалогообложенияДивидендов() Тогда
		Возврат
	КонецЕсли;
	
	Если АвансовыеПлатежи.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		АвансовыеПлатежиСРегистрациями = ТаблицаДвиженийСРегистрациейВНалоговомОргане(АвансовыеПлатежи, "ДатаПолученияДохода");
	Иначе
		АвансовыеПлатежиСРегистрациями = АвансовыеПлатежи;
	КонецЕсли;
	Если РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из АвансовыеПлатежиСРегистрациями Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		
		НоваяСтрока = СтрокаАвансовыхПлатежейИностранцев(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, НоваяСтрока.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане);
		
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, Перечисления.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей,ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, НоваяСтрока.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане);
		
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записать();
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует таблицу расчетной базы НДФЛ за указанный месяц.
// Параметры:
//		Организация
//		МесяцРасчета
//      ФизическиеЛицаМассив - содержит список людей по которым выполняется распределение НДФЛ.
//		РегистраторОграниченияБазы - документ, движениями которого ограничивается получаемая база для распределения.
//
//  Возвращаемое значение:
//  	таблица значений с колонками
//
Функция БазаРасчетаНДФЛ(МенеджерВременныхТаблиц, Организация, МесяцРасчета, ФизическиеЛицаМассив, РегистраторОграниченияБазы = Неопределено) Экспорт 

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(МесяцРасчета));
    Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛицаМассив);

	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.СведенияОДоходахНДФЛ");
	
	Запрос.Текст = 
	    "ВЫБРАТЬ
	    |	СведенияОДоходах.ФизическоеЛицо,
	    |	СведенияОДоходах.Сотрудник,
	    |	СведенияОДоходах.Подразделение,
	    |	СУММА(СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета) КАК Сумма
	    |ИЗ
	    |	(ВЫБРАТЬ
	    |		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	    |		СведенияОДоходах.СуммаДохода КАК СуммаДохода,
	    |		СведенияОДоходах.СуммаВычета КАК СуммаВычета,
	    |		СведенияОДоходах.Сотрудник КАК Сотрудник,
	    |		СведенияОДоходах.ПодразделениеСотрудника КАК Подразделение
	    |	ИЗ
	    |		РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
	    |	ГДЕ
	    |		СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
	    |		И СведенияОДоходах.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	    |		И НЕ СведенияОДоходах.ДоходМежрасчетногоПериода
	    |		И СведенияОДоходах.Организация = &Организация
	    |		И СведенияОДоходах.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	    |		И СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	    |		И СведенияОДоходах.ФизическоеЛицо В(&ФизическиеЛица)
	    |	
	    |	ОБЪЕДИНИТЬ ВСЕ
	    |	
	    |	ВЫБРАТЬ
	    |		СведенияОДоходах.ФизическоеЛицо,
	    |		СведенияОДоходах.СуммаДохода,
	    |		СведенияОДоходах.СуммаВычета,
	    |		СведенияОДоходах.Сотрудник,
	    |		СведенияОДоходах.ПодразделениеСотрудника
	    |	ИЗ
	    |		ВТРегистрНакопления_СведенияОДоходахНДФЛ КАК СведенияОДоходах
	    |	ГДЕ
	    |		СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
	    |		И СведенияОДоходах.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	    |		И НЕ СведенияОДоходах.ДоходМежрасчетногоПериода
	    |		И СведенияОДоходах.Организация = &Организация
	    |		И СведенияОДоходах.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	    |		И СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	    |		И СведенияОДоходах.ФизическоеЛицо В(&ФизическиеЛица)) КАК СведенияОДоходах
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	СведенияОДоходах.ФизическоеЛицо,
	    |	СведенияОДоходах.Сотрудник,
	    |	СведенияОДоходах.Подразделение";

	// Если базу расчета НДФЛ получаем в пределах движений регистратора (т.е. распределение НДФЛ межрасчетного документа).
	Если РегистраторОграниченияБазы <> НеОпределено Тогда
		Запрос.УстановитьПараметр("РегистраторОграниченияБазы", РегистраторОграниченияБазы);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕ СведенияОДоходах.ДоходМежрасчетногоПериода", "Регистратор = &РегистраторОграниченияБазы");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Формирует временную таблицу ВТСведенияОДоходахДляРаспределенияНДФЛ
// Параметры
//		МенеджерВременныхТаблиц, менеджер временных таблиц, в который помещается временная таблица ВТСведенияОДоходахДляРаспределенияНДФЛ
//		Организация 
//		ПериодРегистрации  - тип Дата, месяц, за который получаются данные
//		ИсключаемыеРегистраторы - массив ссылок на документы, которые исключаются при получении сведений о доходах
//		МассивФизическихЛиц - массив физических лиц, по которым получаются сведения о доходах
//		ОкончательныйРасчет - тип Булево, Истина если сведения о доходах получаются при окончательном расчете
//
Процедура СоздатьВТСведенияОДоходахДляРаспределенияНДФЛ(МенеджерВременныхТаблиц, Организация, ПериодРегистрации, ИсключаемыеРегистраторы, МассивФизическихЛиц, ОкончательныйРасчет) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.СведенияОДоходахНДФЛ");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ФизическиеЛица", МассивФизическихЛиц);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	
	Если ОкончательныйРасчет Тогда
		
		Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ИсключаемыеРегистраторы);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.Сотрудник КАК Сотрудник,
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.Начисление КАК Начисление,
		|	Доходы.Подразделение КАК Территория,
		|	Доходы.ПодразделениеСотрудника КАК Подразделение,
		|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	Доходы.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
		|	Доходы.КатегорияДохода КАК КатегорияДохода,
		|	СУММА(Доходы.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТСведенияОДоходахДляРаспределенияНДФЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		СведенияОДоходах.Сотрудник КАК Сотрудник,
		|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СведенияОДоходах.Подразделение КАК Подразделение,
		|		СведенияОДоходах.Начисление КАК Начисление,
		|		СведенияОДоходах.ПодразделениеСотрудника КАК ПодразделениеСотрудника,
		|		СведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|		СведенияОДоходах.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
		|		СведенияОДоходах.КатегорияДохода КАК КатегорияДохода,
		|		СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета КАК Сумма
		|	ИЗ
		|		РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
		|	ГДЕ
		|		СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И СведенияОДоходах.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|		И СведенияОДоходах.Организация = &Организация
		|		И СведенияОДоходах.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|		И СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		И СведенияОДоходах.ФизическоеЛицо В(&ФизическиеЛица)
		|		И НЕ СведенияОДоходах.Регистратор В (&ИсключаемыеРегистраторы)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОДоходах.Сотрудник,
		|		СведенияОДоходах.ФизическоеЛицо,
		|		СведенияОДоходах.Подразделение,
		|		СведенияОДоходах.Начисление,
		|		СведенияОДоходах.ПодразделениеСотрудника,
		|		СведенияОДоходах.ДатаПолученияДохода,
		|		СведенияОДоходах.ДоходМежрасчетногоПериода,
		|		СведенияОДоходах.КатегорияДохода,
		|		СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета
		|	ИЗ
		|		ВТРегистрНакопления_СведенияОДоходахНДФЛ КАК СведенияОДоходах
		|	ГДЕ
		|		СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И СведенияОДоходах.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|		И СведенияОДоходах.Организация = &Организация
		|		И СведенияОДоходах.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|		И СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		И СведенияОДоходах.ФизическоеЛицо В(&ФизическиеЛица)) КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Сотрудник,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.Подразделение,
		|	Доходы.Начисление,
		|	Доходы.ПодразделениеСотрудника,
		|	Доходы.ДатаПолученияДохода,
		|	Доходы.ДоходМежрасчетногоПериода,
		|	Доходы.КатегорияДохода";
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОДоходах.Сотрудник КАК Сотрудник,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.Начисление КАК Начисление,
		|	СведенияОДоходах.Подразделение КАК Территория,
		|	СведенияОДоходах.ПодразделениеСотрудника КАК Подразделение,
		|	СведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	СведенияОДоходах.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
		|	СведенияОДоходах.КатегорияДохода КАК КатегорияДохода,
		|	СУММА(СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета) КАК Сумма
		|ПОМЕСТИТЬ ВТСведенияОДоходахДляРаспределенияНДФЛ
		|ИЗ
		|	ВТРегистрНакопления_СведенияОДоходахНДФЛ КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И СведенияОДоходах.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|	И СведенияОДоходах.Организация = &Организация
		|	И СведенияОДоходах.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|	И СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|	И СведенияОДоходах.ФизическоеЛицо В(&ФизическиеЛица)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Сотрудник,
		|	СведенияОДоходах.Подразделение,
		|	СведенияОДоходах.ПодразделениеСотрудника,
		|	СведенияОДоходах.ДатаПолученияДохода,
		|	СведенияОДоходах.ДоходМежрасчетногоПериода,
		|	СведенияОДоходах.КатегорияДохода,
		|	СведенияОДоходах.Начисление";
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

// Предназначена для расчета НДФЛ по записанным в учете данным.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор для которого выполняется расчет НДФЛ.
//		Организация - СправочникСсылка.Организации -
//		МесяцРасчета - дата -
//      МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу со списком людей, по которым выполняется 
//								расчет НДФЛ
//      	ВТФизическиеЛица 
//				ФизическоеЛицо
//		ПервыйМесяцНалоговогоПериода - дата -
//		ПоследнийМесяцНалоговогоПериода - дата -
//		ИсключатьДоходыРегистратора - булево - 
//		ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//		                               (соответствует значению Истина).
//		ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по
//		                                         Регистратору.
//
//  Возвращаемое значение - таблица значений с колонками
//			ФизическоеЛицо
//			МесяцНалоговогоПериода.
//			Подразделение
//			КодВычетаЛичный
//			ПримененныйВычетЛичный
//			ПримененныйВычетНаДетей
//			ПримененныйВычетНаДетейДвойной
//			ПримененныйВычетНаДетейДвойнойВторой
//			ПримененныйВычетНаТретьегоРебенка
//			ПримененныйВычетНаТретьегоРебенкаДвойной
//			ПримененныйВычетНаТретьегоРебенкаДвойнойВторой
//			ПримененныйВычетНаВторогоРебенка
//			ПримененныйВычетНаВторогоРебенкаДвойной
//			ПримененныйВычетНаВторогоРебенкаДвойнойВторой
//			ПримененныйВычетНаДетейИнвалидов
//			ПримененныйВычетНаДетейИнвалидовДвойной
//			ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//			ПримененныйВычетНаДетейОпекунов
//			ПримененныйВычетНаДетейДвойнойОпекунов
//			ПримененныйВычетНаДетейДвойнойВторойОпекунов
//			ПримененныйВычетНаТретьегоРебенкаОпекунов
//			ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов
//			ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов
//			ПримененныйВычетНаВторогоРебенкаОпекунов
//			ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов
//			ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов
//			ПримененныйВычетНаДетейИнвалидовОпекунов
//			ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов
//			ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
//			НалогПоСтавке13
//			ЗачтеноАвансовыхПлатежейПоСтавке13
//			НалогПоСтавке13КЗачетуВозврату
//			ПримененныйВычетИмущественныйРасходы
//			ПримененныйВычетИмущественныйПроцентыПоКредитам
//			ПримененныйВычетИмущественныйПроцентыПриПерекредитовании, ....
//
Функция РассчитатьНалогПоОсновнойСтавке(Регистратор, Организация, МесяцРасчета, МенеджерВременныхТаблиц, Знач ПервыйМесяцНалоговогоПериода = Неопределено, Знач ПоследнийМесяцНалоговогоПериода = Неопределено, ИсключатьДоходыРегистратора = Истина, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяцаРасчета",НачалоМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета",КонецМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("НачалоГодаРасчета",НачалоГода(МесяцРасчета));
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДоходыРегистратора, Регистратор, Неопределено));
	Запрос.УстановитьПараметр("ОкончательныйРасчет", ОкончательныйРасчет);
	Запрос.УстановитьПараметр("ДатаЗакона285ФЗ", ДатаЗакона285ФЗ());
	ДатаИзмененияИсчисленияДляИностранцев = ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев();
	Запрос.УстановитьПараметр("ДатаИзмененияИсчисленияДляИностранцев", ДатаИзмененияИсчисленияДляИностранцев);
	
	УдаляемыеВТ = Новый Массив;
	
	КодыВычетовРезидентов = Новый Массив;
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код403);
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код404);
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код405);
	Запрос.УстановитьПараметр("КодыВычетовРезидентов", КодыВычетовРезидентов);
	
	ЭтоРасчетПоДоходамТекущегоМесяца = ПервыйМесяцНалоговогоПериода = Неопределено Или ПоследнийМесяцНалоговогоПериода = Неопределено;
	
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.СведенияОДоходахНДФЛ");
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ");
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.ИмущественныеВычетыНДФЛ");
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ");
	
	// Если мы расчитываем налог только по одному физ.лицу, будем использовать условие ФизическоеЛицо = &ФизическоеЛицо
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТФизическиеЛица КАК ФизическиеЛица";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Запрос.УстановитьПараметр("ФизическоеЛицо", Выборка.ФизическоеЛицо);
		ТекстУсловияФизическоеЛицо = "ФизическоеЛицо = &ФизическоеЛицо";
	Иначе
		ТекстУсловияФизическоеЛицо = 
		"ФизическоеЛицо В
		|	(ВЫБРАТЬ
		|		СписокСотрудников.ФизическоеЛицо
		|	ИЗ
		|		ВТФизическиеЛица КАК СписокСотрудников)";
	КонецЕсли;
	
	Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
		Запрос.УстановитьПараметр("МаксимальнаяДата", ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата());
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПериодыДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПериодыДохода.НеПодходит
		|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|			ИНАЧЕ НАЧАЛОПЕРИОДА(ПериодыДохода.Период, МЕСЯЦ)
		|		КОНЕЦ) КАК ПериодМакс,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ПериодыДохода.НеПодходит
		|				ТОГДА &МаксимальнаяДата
		|			КОГДА НАЧАЛОПЕРИОДА(ПериодыДохода.ПериодРегистрации, МЕСЯЦ) = &НачалоМесяцаРасчета
		|				ТОГДА НАЧАЛОПЕРИОДА(ПериодыДохода.Период, ГОД)
		|			ИНАЧЕ &НачалоГодаРасчета
		|		КОНЕЦ) КАК ПериодМин,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ПериодыДохода.ДоходМежрасчетногоПериода
		|					И ПериодыДохода.ПериодРегистрации >= &НачалоМесяцаРасчета
		|				ТОГДА ПериодыДохода.Период
		|			ИНАЧЕ &МаксимальнаяДата
		|		КОНЕЦ) КАК ПервыйМесяцНалоговогоПериода,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПериодыДохода.ДоходМежрасчетногоПериода
		|					И ПериодыДохода.ПериодРегистрации >= &НачалоМесяцаРасчета
		|				ТОГДА ПериодыДохода.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ПоследнийМесяцНалоговогоПериода
		|ПОМЕСТИТЬ ВТПериодыПоФизическимЛицам
		|ИЗ
		|	(ВЫБРАТЬ
		|		Доходы.МесяцНалоговогоПериода КАК Период,
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|		Доходы.Период КАК ПериодРегистрации,
		|		Доходы.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
		|		ВЫБОР
		|			КОГДА Доходы.КодДохода.НеОблагаетсяУНалоговогоАгента
		|					ИЛИ Доходы.Регистратор = &ИсключаемыйРегистратор
		|					ИЛИ Доходы.КодДохода.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|					ИЛИ НЕ &ОкончательныйРасчетДоходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК НеПодходит
		|	ИЗ
		|		РегистрНакопления.СведенияОДоходахНДФЛ КАК Доходы
		|	ГДЕ
		|		Доходы.Период МЕЖДУ &НачалоГодаРасчета И &КонецМесяцаРасчета
		|		И Доходы.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И &УсловиеФизическоеЛицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Доходы.МесяцНалоговогоПериода,
		|		Доходы.ФизическоеЛицо,
		|		Доходы.Период,
		|		Доходы.ДоходМежрасчетногоПериода,
		|		ВЫБОР
		|			КОГДА Доходы.КодДохода.НеОблагаетсяУНалоговогоАгента
		|					ИЛИ Доходы.Регистратор = &ИсключаемыйРегистратор
		|					ИЛИ Доходы.КодДохода.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|					ИЛИ НЕ &ОкончательныйРасчетДоходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|	ИЗ
		|		ВТРегистрНакопления_СведенияОДоходахНДФЛ КАК Доходы
		|	ГДЕ
		|		Доходы.Период МЕЖДУ &НачалоГодаРасчета И &КонецМесяцаРасчета
		|		И Доходы.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И Доходы.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		И &УсловиеФизическоеЛицо) КАК ПериодыДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыДохода.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(МесяцыНалоговогоПериода.ПоследнийМесяцНалоговогоПериода) КАК ПоследнийМесяцНалоговогоПериода,
		|	МИНИМУМ(МесяцыНалоговогоПериода.ПервыйМесяцНалоговогоПериода) КАК ПервыйМесяцНалоговогоПериода
		|ИЗ
		|	ВТПериодыПоФизическимЛицам КАК МесяцыНалоговогоПериода
		|ГДЕ
		|	МесяцыНалоговогоПериода.ПоследнийМесяцНалоговогоПериода <> ДАТАВРЕМЯ(1, 1, 1)";
		Если ОкончательныйРасчет Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПериодыДохода.ДоходМежрасчетногоПериода", "ИСТИНА");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетДоходы", "Истина");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетДоходы","(Доходы.ДоходМежрасчетногоПериода ИЛИ Доходы.Период < &НачалоМесяцаРасчета)");
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
		
		Выборка = Запрос.Выполнить().Выбрать();
		УдаляемыеВТ.Добавить("ВТПериодыПоФизическимЛицам");
		
		Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ПоследнийМесяцНалоговогоПериода) Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.ПоследнийМесяцНалоговогоПериода);
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.ПервыйМесяцНалоговогоПериода);
		Иначе
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(МесяцРасчета);
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(МесяцРасчета);
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПериодаРасчета", КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("КонецГодаПериодаРасчета", КонецГода(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("НачалоПредшествующегоГода", ДобавитьМесяц(НачалоГода(ПервыйМесяцНалоговогоПериода), -12));
	
	// Таблица ВТДатыПоМесяцам: список дат налоговых периодов, в которых рассчитывается налог.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(ПервыйМесяцНалоговогоПериода), НачалоМесяца(ПоследнийМесяцНалоговогоПериода),,,"ВТДатыПоМесяцам");
	УдаляемыеВТ.Добавить("ВТДатыПоМесяцам");
	
	Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПериодыДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Месяцы.Период КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД) КАК НачалоГодаНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК КонецГодаНалоговогоПериода,
		|	МАКСИМУМ(ЕСТЬNULL(РезидентствоФизлиц.РезидентРФНаКонецМесяца, ИСТИНА)
		|			ИЛИ ЕСТЬNULL(РезидентствоФизлиц.РезидентРФНаКонецГода, ИСТИНА)) КАК Резидент,
		|	МАКСИМУМ(ЕСТЬNULL(РезидентствоФизлиц.ПрименяетсяСтавкаПункта1Статьи224НК, ИСТИНА)) КАК ПрименяетсяСтавкаПункта1Статьи224НК
		|ПОМЕСТИТЬ ВТПериодыФизлиц
		|ИЗ
		|	ВТПериодыПоФизическимЛицам КАК ПериодыДохода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПоМесяцам КАК Месяцы
		|		ПО (Месяцы.Период МЕЖДУ ПериодыДохода.ПериодМин И ПериодыДохода.ПериодМакс)
		|			И (ПериодыДохода.ПериодМин <> ДАТАВРЕМЯ(1, 1, 1))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный КАК РезидентствоФизлиц
		|		ПО ПериодыДохода.ФизическоеЛицо = РезидентствоФизлиц.ФизическоеЛицо
		|			И (Месяцы.Период МЕЖДУ РезидентствоФизлиц.ДатаНачала И РезидентствоФизлиц.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыДохода.ФизическоеЛицо,
		|	Месяцы.Период,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД),
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД)";
		
	Иначе 
		// Расчет за конкретные месяцы налогового периода.
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Работники.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Месяцы.Период КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД) КАК НачалоГодаНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК КонецГодаНалоговогоПериода,
		|	МАКСИМУМ(ЕСТЬNULL(РезидентствоФизлиц.РезидентРФНаКонецМесяца, ИСТИНА)
		|			ИЛИ ЕСТЬNULL(РезидентствоФизлиц.РезидентРФНаКонецГода, ИСТИНА)) КАК Резидент,
		|	МАКСИМУМ(ЕСТЬNULL(РезидентствоФизлиц.ПрименяетсяСтавкаПункта1Статьи224НК, ИСТИНА)) КАК ПрименяетсяСтавкаПункта1Статьи224НК
		|ПОМЕСТИТЬ ВТПериодыФизлиц
		|ИЗ
		|	ВТФизическиеЛица КАК Работники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПоМесяцам КАК Месяцы
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный КАК РезидентствоФизлиц
		|		ПО Работники.ФизическоеЛицо = РезидентствоФизлиц.ФизическоеЛицо
		|			И (Месяцы.Период МЕЖДУ РезидентствоФизлиц.ДатаНачала И РезидентствоФизлиц.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	Работники.ФизическоеЛицо,
		|	Месяцы.Период,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД),
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД)";
	КонецЕсли;
	Запрос.Выполнить();
	УдаляемыеВТ.Добавить("ВТПериодыФизлиц");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Обороты.МесяцНалоговогоПериода,
	|	Обороты.ДатаПолученияДохода,
	|	Обороты.Регистратор,
	|	Обороты.Подразделение,
	|	Обороты.Период,
	|	Обороты.СтавкаНалогообложения,
	|	Обороты.ДоходМежрасчетногоПериода,
	|	Обороты.ИсточникДоходаЗаПределамиРФ,
	|	Обороты.КодВычета.НеПредоставляетсяНерезидентам КАК НеПредоставляетсяНерезидентам,
	|	Обороты.КодВычета,
	|	Обороты.КодДохода,
	|	Обороты.КатегорияДохода,
	|	Обороты.СуммаДохода,
	|	Обороты.СуммаВычета
	|ПОМЕСТИТЬ ВТСведенияОДоходахНДФЛ
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И &УсловиеФизическоеЛицо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо,
	|	Обороты.МесяцНалоговогоПериода,
	|	Обороты.ДатаПолученияДохода,
	|	Обороты.Регистратор,
	|	Обороты.Подразделение,
	|	Обороты.Период,
	|	Обороты.СтавкаНалогообложения,
	|	Обороты.ДоходМежрасчетногоПериода,
	|	Обороты.ИсточникДоходаЗаПределамиРФ,
	|	Обороты.КодВычета.НеПредоставляетсяНерезидентам,
	|	Обороты.КодВычета,
	|	Обороты.КодДохода,
	|	Обороты.КатегорияДохода,
	|	Обороты.СуммаДохода,
	|	Обороты.СуммаВычета
	|ИЗ
	|	ВТРегистрНакопления_СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И &УсловиеФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
	|	СведенияОДоходахНДФЛ.КатегорияДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода >= &ДатаИзмененияИсчисленияДляИностранцев";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
	Запрос.Выполнить();
	УдаляемыеВТ.Добавить("ВТСведенияОДоходахНДФЛ");
	УдаляемыеВТ.Добавить("ВТСтрокиУчета");
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "УчитыватьИзмененияСтатусаДляРасчета");
	УдаляемыеВТ.Добавить("ВТСтавкаНДФЛПоСтавкеРезидента");
	
	Запрос.УстановитьПараметр("ПериодСрезаПравНаВычеты",  НачалоМесяца(Макс(МесяцРасчета, ПоследнийМесяцНалоговогоПериода)));
	
	ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаПоНДФЛ.ОсобенностиИсчисленияНДФЛ КАК ОсобенностиИсчисленияНДФЛ
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК УчетнаяПолитикаПоНДФЛ
	|ГДЕ
	|	УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ОсобенностиУчетаВычетов = Выборка.ОсобенностиИсчисленияНДФЛ;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПериодаИмущественыхВычетов", Макс(КонецМесяца(МесяцРасчета), КонецМесяца(ПоследнийМесяцНалоговогоПериода)));
	
	ПакетЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Вычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Вычеты.КодВычета КАК КодВычета,
	|	Вычеты.Подразделение КАК Подразделение,
	|	СУММА(Вычеты.СуммаОборот) КАК СуммаОборот
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычеты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВычетыБД.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(ВычетыБД.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		ВычетыБД.КодВычета КАК КодВычета,
	|		ВычетыБД.Подразделение КАК Подразделение,
	|		ВычетыБД.Сумма КАК СуммаОборот
	|	ИЗ
	|		РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ВычетыБД
	|	ГДЕ
	|		ВычетыБД.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|		И ВычетыБД.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И &УсловиеФизическоеЛицо
	|		И ВычетыБД.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И ВычетыБД.Регистратор <> &Регистратор
	|		И &ОкончательныйРасчетВычеты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВычетыВТ.ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(ВычетыВТ.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ВычетыВТ.КодВычета,
	|		ВычетыВТ.Подразделение,
	|		ВычетыВТ.Сумма
	|	ИЗ
	|		ВТРегистрНакопления_ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ВычетыВТ
	|	ГДЕ
	|		ВычетыВТ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|		И ВычетыВТ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И &УсловиеФизическоеЛицо
	|		И ВычетыВТ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И ВычетыВТ.Регистратор <> &Регистратор
	|		И &ОкончательныйРасчетВычеты) КАК Вычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Вычеты.ФизическоеЛицо,
	|	Вычеты.МесяцНалоговогоПериода,
	|	Вычеты.КодВычета,
	|	Вычеты.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Резидент
	|				ТОГДА ЕСТЬNULL(ПредоставленныеВычетыФизЛиц.СуммаОборот, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОборот
	|ПОМЕСТИТЬ ВТСоциальныеВычетыПомесячно
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленныеСтандартныеИСоциальныеВычеты КАК ПредоставленныеВычетыФизЛиц
	|		ПО Периоды.ФизическоеЛицо = ПредоставленныеВычетыФизЛиц.ФизическоеЛицо
	|			И (ПредоставленныеВычетыФизЛиц.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные))
	|			И Периоды.МесяцНалоговогоПериода = ПредоставленныеВычетыФизЛиц.МесяцНалоговогоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(Обороты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	Обороты.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	Обороты.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	Обороты.КодВычета КАК КодВычета,
	|	Обороты.НеПредоставляетсяНерезидентам КАК НеПредоставляетсяНерезидентам,
	|	Обороты.СуммаДохода КАК СуммаДоходаОборот,
	|	Обороты.СуммаВычета КАК СуммаВычетаОборот,
	|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Обороты.КатегорияДохода КАК КатегорияДохода,
	|	Обороты.КодДохода КАК КодДохода,
	|	Обороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Обороты.Подразделение КАК Подразделение,
	|	Обороты.Период КАК Период,
	|	Обороты.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода
	|ПОМЕСТИТЬ ВТДанныеУчета
	|ИЗ
	|	ВТСведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И НЕ Обороты.КодДохода.НеОблагаетсяУНалоговогоАгента
	|	И Обороты.Регистратор <> &ИсключаемыйРегистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.НеПредоставляетсяНерезидентам,
	|	-СведенияОДоходахНДФЛ.СуммаДохода,
	|	-СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.КатегорияДохода,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|ИЗ
	|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	НЕ &ОкончательныйРасчет
	|	И НЕ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|	И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента
	|	И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор
	|	И СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТПредоставленныеСтандартныеИСоциальныеВычеты");
	УдаляемыеВТ.Добавить("ВТСоциальныеВычетыПомесячно");
	УдаляемыеВТ.Добавить("ВТДанныеУчета");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеУчета.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеУчета.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ДанныеУчета.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	ДанныеУчета.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	ДанныеУчета.КодВычета КАК КодВычета,
	|	ДанныеУчета.НеПредоставляетсяНерезидентам КАК НеПредоставляетсяНерезидентам,
	|	СУММА(ДанныеУчета.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|	СУММА(ДанныеУчета.СуммаВычетаОборот) КАК СуммаВычетаОборот
	|ПОМЕСТИТЬ ВТДоходыФизлиц
	|ИЗ
	|	ВТДанныеУчета КАК ДанныеУчета
	|ГДЕ
	|	ДанныеУчета.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеУчета.ФизическоеЛицо,
	|	ДанныеУчета.МесяцНалоговогоПериода,
	|	ДанныеУчета.СтавкаНалогообложения,
	|	ДанныеУчета.ИсточникДоходаЗаПределамиРФ,
	|	ДанныеУчета.НеПредоставляетсяНерезидентам,
	|	ДанныеУчета.КодВычета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.Резидент КАК Резидент,
	|	ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		КОГДА Обороты.СтавкаНалогообложения = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|		ИНАЧЕ Обороты.СтавкаНалогообложения
	|	КОНЕЦ КАК СтавкаНалогообложенияНеРезидента,
	|	ЕСТЬNULL(Обороты.СуммаДоходаОборот, 0) - ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА ЕСТЬNULL(Обороты.СуммаВычетаОборот, 0)
	|		КОГДА Обороты.НеПредоставляетсяНерезидентам
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(Обороты.СуммаВычетаОборот, 0)
	|	КОНЕЦ КАК ДоходыБезВычетов
	|ПОМЕСТИТЬ ВТДоходыСУчетомВычетовКДоходам
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФизлиц КАК Обороты
	|		ПО Периоды.ФизическоеЛицо = Обороты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = Обороты.МесяцНалоговогоПериода
	|			И (Периоды.Резидент
	|				ИЛИ НЕ Обороты.ИсточникДоходаЗаПределамиРФ)
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев";
	
	Если ПервыйМесяцНалоговогоПериода < Запрос.Параметры.ДатаИзмененияИсчисленияДляИностранцев Тогда
		ПакетЗапросов.Добавить(ТекстЗапроса);
		УдаляемыеВТ.Добавить("ВТДоходыФизлиц");
		УдаляемыеВТ.Добавить("ВТДоходыСУчетомВычетовКДоходам");
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Обороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Обороты.КодДохода КАК КодДохода,
	|	Обороты.КатегорияДохода КАК КатегорияДохода,
	|	ВЫБОР
	|		КОГДА Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И СтавкаНДФЛПоСтавкеРезидента.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИсчислятьНалогНарастающимИтогом,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом КАК СтавкаЧислом,
	|	Обороты.Подразделение КАК Подразделение,
	|	СУММА(ВЫБОР
	|			КОГДА Обороты.ИсточникДоходаЗаПределамиРФ
	|				ТОГДА ВЫБОР
	|						КОГДА СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							ТОГДА Обороты.СуммаДоходаОборот - Обороты.СуммаВычетаОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ Обороты.СуммаДоходаОборот - ВЫБОР
	|					КОГДА СтавкаНДФЛПоСтавкеРезидента.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС))
	|						ТОГДА Обороты.СуммаВычетаОборот
	|					КОГДА Обороты.НеПредоставляетсяНерезидентам
	|						ТОГДА 0
	|					ИНАЧЕ Обороты.СуммаВычетаОборот
	|				КОНЕЦ
	|		КОНЕЦ) КАК ДоходыБезВычетов,
	|	СУММА(Обороты.СуммаДоходаОборот) КАК ВсеДоходы,
	|	СтавкаНДФЛПоСтавкеРезидента.Статус КАК Статус,
	|	Обороты.Период КАК Период,
	|	Обороты.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода
	|ПОМЕСТИТЬ ВТДоходыСоСтавками
	|ИЗ
	|	ВТДанныеУчета КАК Обороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО Обороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И Обороты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И Обороты.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И Обороты.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
	|ГДЕ
	|	Обороты.ДатаПолученияДохода >= &ДатаИзмененияИсчисленияДляИностранцев
	|
	|СГРУППИРОВАТЬ ПО
	|	Обороты.ФизическоеЛицо,
	|	Обороты.МесяцНалоговогоПериода,
	|	Обороты.ДатаПолученияДохода,
	|	Обороты.КодДохода,
	|	Обороты.Подразделение,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом,
	|	СтавкаНДФЛПоСтавкеРезидента.Статус,
	|	ВЫБОР
	|		КОГДА Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И СтавкаНДФЛПоСтавкеРезидента.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Обороты.Период,
	|	Обороты.ДоходМежрасчетногоПериода,
	|	Обороты.КатегорияДохода";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТДоходыСоСтавками");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0) КАК ОблагаемыйДоходЗаГод,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|					ТОГДА Доходы.ДоходыБезВычетов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОблагаемыйДоходЗаМесяц
	|ПОМЕСТИТЬ ВТДоходыРезидентовНарастающимЗаГод
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО (Доходы.МесяцНалоговогоПериода МЕЖДУ Периоды.НачалоГодаНалоговогоПериода И Периоды.МесяцНалоговогоПериода)
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И (Доходы.ИсчислятьНалогНарастающимИтогом)
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо";
	
	Если ПервыйМесяцНалоговогоПериода < Запрос.Параметры.ДатаИзмененияИсчисленияДляИностранцев Тогда
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + 
		"ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Периоды.МесяцНалоговогоПериода,
		|	Периоды.ФизическоеЛицо,
		|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
		|					ТОГДА Доходы.ДоходыБезВычетов
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТПериодыФизлиц КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСУчетомВычетовКДоходам КАК Доходы
		|		ПО (Доходы.МесяцНалоговогоПериода МЕЖДУ Периоды.НачалоГодаНалоговогоПериода И Периоды.МесяцНалоговогоПериода)
		|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И (Периоды.Резидент)
		|ГДЕ
		|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
		|
		|СГРУППИРОВАТЬ ПО
		|	Периоды.МесяцНалоговогоПериода,
		|	Периоды.ФизическоеЛицо";
	КонецЕсли;
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТДоходыРезидентовНарастающимЗаГод");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.НачалоГодаНалоговогоПериода КАК НачалоГодаНалоговогоПериода,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.ДоходМежрасчетногоПериода КАК ЗарегистрированоДляПромежуточногоРасчета
	|ПОМЕСТИТЬ ВТДатыПолученияДоходаДляНарастающегоДохода
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.НачалоГодаНалоговогоПериода,
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ),
	|	ЛОЖЬ
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И (Доходы.ДатаПолученияДохода = НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ))
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|	И Доходы.ДатаПолученияДохода ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Периоды.ЗарегистрированоДляПромежуточногоРасчета КАК ЗарегистрированоДляПромежуточногоРасчета,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|						И Доходы.ИсчислятьНалогНарастающимИтогом
	|					ТОГДА Доходы.ДоходыБезВычетов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОблагаемыйДоходЗаМесяц,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ИсчислятьНалогНарастающимИтогом
	|					ТОГДА Доходы.ДоходыБезВычетов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОблагаемыйДоходЗаГод
	|ПОМЕСТИТЬ ВТДоходыПоДатамПолученияДоходаНарастающимЗаГод
	|ИЗ
	|	ВТДатыПолученияДоходаДляНарастающегоДохода КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО (Доходы.ДатаПолученияДохода >= Периоды.НачалоГодаНалоговогоПериода
	|					И Доходы.ДатаПолученияДохода < Периоды.ДатаПолученияДохода
	|				ИЛИ Доходы.ДатаПолученияДохода = Периоды.ДатаПолученияДохода
	|					И Доходы.ДоходМежрасчетногоПериода = Периоды.ЗарегистрированоДляПромежуточногоРасчета
	|				ИЛИ Доходы.ДатаПолученияДохода = Периоды.ДатаПолученияДохода
	|					И НЕ Периоды.ЗарегистрированоДляПромежуточногоРасчета)
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ДатаПолученияДохода,
	|	Периоды.ЗарегистрированоДляПромежуточногоРасчета,
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетей,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалида,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код130)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код135)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДвойнойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код143)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДвойнойВторойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код132)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код139)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДвойнойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код147)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДвойнойВторойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код131)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код137)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДвойнойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код145)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДвойнойВторойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код117о)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код121о)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДвойнойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код125о)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДвойнойВторойДляОпекунов,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(НЕ ВычетыНаДетей.ЛичныйВычет, ИСТИНА)
	|				ТОГДА РазмерВычетовНаДетей.ОграничениеПоДоходам
	|			ИНАЧЕ 0
	|		КОНЕЦ), 0) КАК ОграничениеПоДоходам,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.ЛичныйВычет
	|				ТОГДА 1 * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетЛичный,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВычетыНаДетей.ЛичныйВычет, ЛОЖЬ)
	|				ТОГДА ВычетыНаДетей.КодВычета
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		КОНЕЦ) КАК КодВычетаЛичный,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВычетыНаДетей.ЛичныйВычет, ЛОЖЬ)
	|				ТОГДА РазмерВычетовНаДетей.ОграничениеПоДоходам
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОграничениеПоДоходамЛичныйВычет
	|ПОМЕСТИТЬ ВТВычетыНаДетейИЛичные
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтандартныеВычетыПоНДФЛВторичный КАК ВычетыНаДетей
	|		ПО Периоды.ФизическоеЛицо = ВычетыНаДетей.ФизическоеЛицо
	|			И (ВЫБОР
	|				КОГДА Периоды.МесяцНалоговогоПериода > &ПериодСрезаПравНаВычеты
	|					ТОГДА &ПериодСрезаПравНаВычеты
	|				ИНАЧЕ Периоды.МесяцНалоговогоПериода
	|			КОНЕЦ МЕЖДУ ВычетыНаДетей.ПериодРегистрацииНачало И ВычетыНаДетей.ПериодРегистрацииОкончание)
	|			И (Периоды.МесяцНалоговогоПериода МЕЖДУ ВычетыНаДетей.ДатаНачала И ВычетыНаДетей.ДатаОкончания)
	|			И (НЕ ВычетыНаДетей.ЛичныйВычет
	|				ИЛИ ВычетыНаДетей.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерВычетовНДФЛВторичный КАК РазмерВычетовНаДетей
	|		ПО (ВычетыНаДетей.КодВычета = РазмерВычетовНаДетей.КодВычета)
	|			И (Периоды.НачалоГодаНалоговогоПериода МЕЖДУ РазмерВычетовНаДетей.ДатаНачала И РазмерВычетовНаДетей.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВычетыНаДетей.КодВычетаЛичный КАК КодВычетаЛичный,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ЕСТЬNULL(ВычетыНаДетей.ОграничениеПоДоходамЛичныйВычет, 0)
	|					ИЛИ ЕСТЬNULL(ВычетыНаДетей.ОграничениеПоДоходамЛичныйВычет, 0) = 0)
	|			ТОГДА ЕСТЬNULL(ВычетыНаДетей.ВычетЛичный, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыЛичные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетей
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетские,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДвойной
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДвойнойВторой
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенка
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенка,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДвойной
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДвойнойВторой
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенка
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенка,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДвойной
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДвойнойВторой
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалида
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДвойной
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДвойнойВторой
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДвойнойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойныеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДвойнойВторойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойныеВторыеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДвойнойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДвойнойВторойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДвойнойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДвойнойВторойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДвойнойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДвойнойВторойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов,
	|	ВычетыНаДетей.ОграничениеПоДоходамЛичныйВычет КАК ОграничениеПоДоходамЛичные,
	|	ВычетыНаДетей.ОграничениеПоДоходам КАК ОграничениеПоДоходамНаДетей
	|ПОМЕСТИТЬ ВТПраваНаСтандартныеВычетыПоМесяцам
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеСтандартныхВычетовПоНДФЛВторичный КАК ПрименениеВычетов
	|		ПО Периоды.ФизическоеЛицо = ПрименениеВычетов.ФизическоеЛицо
	|			И ПрименениеВычетов.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|			И (Периоды.МесяцНалоговогоПериода МЕЖДУ ПрименениеВычетов.ДатаНачала И ПрименениеВычетов.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоходыПредыдущегоМестаРаботыНДФЛ КАК ДоходыСПредыдущегоМестаРаботы
	|		ПО Периоды.МесяцНалоговогоПериода = ДоходыСПредыдущегоМестаРаботы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = ДоходыСПредыдущегоМестаРаботы.ФизическоеЛицо
	|			И (ДоходыСПредыдущегоМестаРаботы.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыНарастающимИтогом
	|		ПО Периоды.МесяцНалоговогоПериода = ДоходыНарастающимИтогом.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = ДоходыНарастающимИтогом.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВычетыНаДетейИЛичные КАК ВычетыНаДетей
	|		ПО Периоды.ФизическоеЛицо = ВычетыНаДетей.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетей.МесяцНалоговогоПериода";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТДатыПолученияДоходаДляНарастающегоДохода");
	УдаляемыеВТ.Добавить("ВТДоходыПоДатамПолученияДоходаНарастающимЗаГод");
	УдаляемыеВТ.Добавить("ВТВычетыНаДетейИЛичные");
	УдаляемыеВТ.Добавить("ВТПраваНаСтандартныеВычетыПоМесяцам");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА Доходы.Резидент
	|					ТОГДА 0
	|				ИНАЧЕ Доходы.ДоходыБезВычетов
	|			КОНЕЦ * &СтавкиНалогаВПроцентахРазмер КАК ЧИСЛО(13, 0))) КАК НалогНерезидента
	|ПОМЕСТИТЬ ВТНалогНерезидентов
	|ИЗ
	|	ВТДоходыСУчетомВычетовКДоходам КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода";
	ВписатьТекстПолученияЗначенияСтавкиНДФЛЧислом(ТекстЗапроса, "&СтавкиНалогаВПроцентахРазмер", "Доходы", "СтавкаНалогообложенияНеРезидента");
	Если ПервыйМесяцНалоговогоПериода < Запрос.Параметры.ДатаИзмененияИсчисленияДляИностранцев Тогда
		ПакетЗапросов.Добавить(ТекстЗапроса);
		УдаляемыеВТ.Добавить("ВТНалогНерезидентов");
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ЕСТЬNULL(ДатыДохода.ДатаПолученияДохода, МАКСИМУМ(ЕСТЬNULL(Доходы.ДатаПолученияДохода, НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ)))) КАК ДатаПолученияДохода,
	|	ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент) КАК Статус,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка) КАК КодДохода,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка) КАК КатегорияДохода,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ЕСТЬNULL(СУММА(Доходы.ВсеДоходы), 0) КАК СуммаДохода,
	|	0 КАК НалогНерезидента,
	|	ИСТИНА КАК ИсчислятьНалогНарастающимИтогом,
	|	ЕСТЬNULL(ДатыДохода.ДоходМежрасчетногоПериода, ЛОЖЬ) КАК ЗарегистрированоДляПромежуточногоРасчета,
	|	МАКСИМУМ(ЕСТЬNULL(Доходы.ДатаПолученияДохода, НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ))) КАК МаксимальнаяДатаПолученияДохода
	|ПОМЕСТИТЬ ВТДоходыНалоги
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК ДатыДохода
	|		ПО Периоды.ФизическоеЛицо = ДатыДохода.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ДатыДохода.МесяцНалоговогоПериода
	|			И (ДатыДохода.ИсчислятьНалогНарастающимИтогом)
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо,
	|	ДатыДохода.ДатаПолученияДохода,
	|	ДатыДохода.ДоходМежрасчетногоПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.Статус,
	|	Доходы.КодДохода,
	|	Доходы.КатегорияДохода,
	|	Доходы.Подразделение,
	|	СУММА(Доходы.ДоходыБезВычетов),
	|	ВЫРАЗИТЬ(СУММА(Доходы.ДоходыБезВычетов) * Доходы.СтавкаЧислом КАК ЧИСЛО(13, 0)),
	|	ЛОЖЬ,
	|	Доходы.ДоходМежрасчетногоПериода,
	|	Доходы.ДатаПолученияДохода
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И (НЕ Доходы.ИсчислятьНалогНарастающимИтогом)
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|	И Доходы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.ДоходМежрасчетногоПериода,
	|	Доходы.КодДохода,
	|	Доходы.КатегорияДохода,
	|	Доходы.Подразделение,
	|	Доходы.СтавкаЧислом,
	|	Доходы.Статус,
	|	Доходы.ДатаПолученияДохода
	|
	|ИМЕЮЩИЕ
	|	СУММА(Доходы.ДоходыБезВычетов) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ИмущественныеВычеты.ВидДвижения КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|			ТОГДА ИмущественныеВычеты.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320о)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетРасходыНаСвоеОбучение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код321)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетРасходыНаОбучениеДетей,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код324)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетРасходыНаЛечение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код325)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетСтраховыеВзносыНаМедУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код326)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетРасходыНаДорогостоящееЛечение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код329)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетВзносыНаДобровольноеСтрахованиеЖизни,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйРасходы,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйПроцентыПоКредитам,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйПроцентыПриПерекредитовании,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320о)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетРасходыНаСвоеОбучение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код321)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетРасходыНаОбучениеДетей,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код324)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетРасходыНаЛечение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код325)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетСтраховыеВзносыНаМедУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код326)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетРасходыНаДорогостоящееЛечение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код329)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйРасходы,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИмущественныеВычеты.Период КАК Период,
	|		ИмущественныеВычеты.ВидДвижения КАК ВидДвижения,
	|		ИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ИмущественныеВычеты.Подразделение КАК Подразделение,
	|		ИмущественныеВычеты.КодВычета КАК КодВычета,
	|		ИмущественныеВычеты.Сумма КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычеты
	|	ГДЕ
	|		ИмущественныеВычеты.Регистратор <> &Регистратор
	|		И ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаИмущественыхВычетов
	|		И ИмущественныеВычеты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И &УсловиеФизическоеЛицо
	|		И ВЫБОР
	|				КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ИмущественныеВычеты.Год = ГОД(ИмущественныеВычеты.Период)
	|				ИНАЧЕ &ОкончательныйРасчетВычеты
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИмущественныеВычеты.Период,
	|		ИмущественныеВычеты.ВидДвижения,
	|		ИмущественныеВычеты.ФизическоеЛицо,
	|		ИмущественныеВычеты.Подразделение,
	|		ИмущественныеВычеты.КодВычета,
	|		ИмущественныеВычеты.Сумма
	|	ИЗ
	|		ВТРегистрНакопления_ИмущественныеВычетыНДФЛ КАК ИмущественныеВычеты
	|	ГДЕ
	|		ИмущественныеВычеты.Регистратор <> &Регистратор
	|		И ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаИмущественыхВычетов
	|		И ИмущественныеВычеты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И &УсловиеФизическоеЛицо
	|		И ВЫБОР
	|				КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ИмущественныеВычеты.Год = ГОД(ИмущественныеВычеты.Период)
	|				ИНАЧЕ &ОкончательныйРасчетВычеты
	|			КОНЕЦ) КАК ИмущественныеВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИмущественныеВычеты.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ),
	|	ИмущественныеВычеты.ВидДвижения,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|			ТОГДА ИмущественныеВычеты.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГОД(Периоды.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.ИсчислятьНалогНарастающимИтогом КАК ИсчислятьНалогНарастающимИтогом,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.МаксимальнаяДатаПолученияДохода КАК МаксимальнаяДатаПолученияДоходаМесяца,
	|	Доходы.ЗарегистрированоДляПромежуточногоРасчета КАК ЗарегистрированоДляПромежуточногоРасчета,
	|	Доходы.Статус КАК Статус,
	|	ВЫБОР
	|		КОГДА Доходы.ИсчислятьНалогНарастающимИтогом
	|			ТОГДА 0
	|		ИНАЧЕ Доходы.СуммаДохода
	|	КОНЕЦ КАК СуммаДохода,
	|	Доходы.СуммаДохода КАК ВсеДоходыЗаМесяц,
	|	ЕСТЬNULL(ДоходыПоДатамПолученияДоходаНарастающимИтогом.ОблагаемыйДоходЗаМесяц, 0) КАК ОблагаемыйДоход,
	|	Доходы.НалогНерезидента КАК НалогНерезидента,
	|	Доходы.КатегорияДохода,
	|	Доходы.Подразделение,
	|	ЕСТЬNULL(ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаМесяц, 0) КАК ОблагаемыйДоходЗаМесяц,
	|	ЕСТЬNULL(ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаГод, 0) КАК ОблагаемыйДоходНарастающимИтогом,
	|	СоциальныеВычеты.СуммаОборот КАК СоциальныйВычет,
	|	0.13 КАК СтавкаДляРезидента,
	|	ПравоНаСтандартныеВычеты.КодВычетаЛичный КАК КодВычетаЛичный,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыЛичные КАК СтандартныеВычетыЛичные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетские КАК СтандартныеВычетыДетские,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойные КАК СтандартныеВычетыДетскиеДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторые КАК СтандартныеВычетыДетскиеДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенка КАК СтандартныеВычетыНаТретьегоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойные КАК СтандартныеВычетыНаТретьегоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенка КАК СтандартныеВычетыНаВторогоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойные КАК СтандартныеВычетыНаВторогоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидов КАК СтандартныеВычетыДетскиеИнвалидов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойные КАК СтандартныеВычетыДетскиеИнвалидовДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовОпекунов КАК СтандартныеВычетыДетскиеИнвалидовОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов КАК СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеОпекунов КАК СтандартныеВычетыДетскиеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеОпекунов КАК СтандартныеВычетыДетскиеДвойныеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторыеОпекунов КАК СтандартныеВычетыДетскиеДвойныеВторыеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаОпекунов КАК СтандартныеВычетыНаТретьегоРебенкаОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаОпекунов КАК СтандартныеВычетыНаВторогоРебенкаОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов КАК СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтандартныеВычетыПоМесяцам КАК ПравоНаСтандартныеВычеты
	|		ПО Периоды.ФизическоеЛицо = ПравоНаСтандартныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ПравоНаСтандартныеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоциальныеВычетыПомесячно КАК СоциальныеВычеты
	|		ПО Периоды.ФизическоеЛицо = СоциальныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = СоциальныеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыРезидентовНарастающимЗаГод
	|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовНарастающимЗаГод.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовНарастающимЗаГод.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыНалоги КАК Доходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоДатамПолученияДоходаНарастающимЗаГод КАК ДоходыПоДатамПолученияДоходаНарастающимИтогом
	|			ПО Доходы.ФизическоеЛицо = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ФизическоеЛицо
	|				И Доходы.МесяцНалоговогоПериода = ДоходыПоДатамПолученияДоходаНарастающимИтогом.МесяцНалоговогоПериода
	|				И Доходы.ДатаПолученияДохода = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ДатаПолученияДохода
	|				И Доходы.ЗарегистрированоДляПромежуточногоРасчета = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ЗарегистрированоДляПромежуточногоРасчета
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|	И (НЕ Доходы.ИсчислятьНалогНарастающимИтогом
	|			ИЛИ Доходы.ДатаПолученияДохода = Доходы.МаксимальнаяДатаПолученияДохода
	|			ИЛИ ЕСТЬNULL(ДоходыПоДатамПолученияДоходаНарастающимИтогом.ОблагаемыйДоходЗаМесяц, 0) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	НалоговыйПериод,
	|	МесяцНалоговогоПериода,
	|	Доходы.ИсчислятьНалогНарастающимИтогом УБЫВ,
	|	ДатаПолученияДохода,
	|	ЗарегистрированоДляПромежуточногоРасчета УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.Подразделение КАК Подразделение,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.КатегорияДохода КАК КатегорияДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПериодыФизлиц.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|		СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|		ЕСТЬNULL(СведенияОДоходахНДФЛ.ДоходыБезВычетов, 0) КАК СуммаДохода,
	|		СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода
	|	ИЗ
	|		ВТПериодыФизлиц КАК ПериодыФизлиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК СведенияОДоходахНДФЛ
	|			ПО ПериодыФизлиц.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|				И (ПериодыФизлиц.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|				И (&ОкончательныйРасчетДоходы)
	|	ГДЕ
	|		ПериодыФизлиц.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода,
	|	Доходы.Подразделение,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.КатегорияДохода";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТДоходыНалоги");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.Резидент КАК Резидент,
	|	ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаМесяц КАК ОблагаемыйДоходЗаМесяц,
	|	ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаГод КАК ОблагаемыйДоходНарастающимИтогом,
	|	СоциальныеВычеты.СуммаОборот КАК СоциальныйВычет,
	|	ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(НалогНерезидентов.НалогНерезидента, 0)
	|	КОНЕЦ КАК НалогЗаМесяц,
	|	0.13 КАК СтавкаДляРезидента,
	|	ПравоНаСтандартныеВычеты.КодВычетаЛичный КАК КодВычетаЛичный,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыЛичные КАК СтандартныеВычетыЛичные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетские КАК СтандартныеВычетыДетские,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойные КАК СтандартныеВычетыДетскиеДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторые КАК СтандартныеВычетыДетскиеДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидов КАК СтандартныеВычетыДетскиеИнвалидов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойные КАК СтандартныеВычетыДетскиеИнвалидовДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	|	ГОД(Периоды.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенка КАК СтандартныеВычетыНаТретьегоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойные КАК СтандартныеВычетыНаТретьегоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.ОграничениеПоДоходамЛичные КАК ОграничениеПоДоходамЛичные,
	|	ПравоНаСтандартныеВычеты.ОграничениеПоДоходамНаДетей КАК ОграничениеПоДоходамНаДетей,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенка КАК СтандартныеВычетыНаВторогоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойные КАК СтандартныеВычетыНаВторогоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторые
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалогНерезидентов КАК НалогНерезидентов
	|		ПО Периоды.ФизическоеЛицо = НалогНерезидентов.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = НалогНерезидентов.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтандартныеВычетыПоМесяцам КАК ПравоНаСтандартныеВычеты
	|		ПО Периоды.ФизическоеЛицо = ПравоНаСтандартныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ПравоНаСтандартныеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыРезидентовНарастающимЗаГод
	|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовНарастающимЗаГод.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовНарастающимЗаГод.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоциальныеВычетыПомесячно КАК СоциальныеВычеты
	|		ПО Периоды.ФизическоеЛицо = СоциальныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = СоциальныеВычеты.МесяцНалоговогоПериода
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	НалоговыйПериод,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.Подразделение КАК Подразделение,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПериодыФизлиц.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|		ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода, 0) - ВЫБОР
	|			КОГДА ПериодыФизлиц.Резидент
	|				ТОГДА ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаВычета, 0)
	|			КОГДА СведенияОДоходахНДФЛ.КодВычета В (&КодыВычетовРезидентов)
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаВычета, 0)
	|		КОНЕЦ КАК СуммаДохода
	|	ИЗ
	|		ВТПериодыФизлиц КАК ПериодыФизлиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|			ПО ПериодыФизлиц.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|				И (ПериодыФизлиц.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|				И (ПериодыФизлиц.Резидент
	|					ИЛИ НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ)
	|				И (СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|				И (НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента)
	|				И (СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор)
	|				И (&ОкончательныйРасчетДоходы)
	|	ГДЕ
	|		ПериодыФизлиц.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода,
	|	Доходы.Подразделение";
	
	Если ПервыйМесяцНалоговогоПериода < Запрос.Параметры.ДатаИзмененияИсчисленияДляИностранцев Тогда
		ПакетЗапросов.Добавить(ТекстЗапроса);
		Сдвиг = 0;
	Иначе
		Сдвиг = 2;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериодаДляПоиска,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	-СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) КАК НалогПоСтавке13,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма КАК Сумма,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода
	|	ИЗ
	|		РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|	ГДЕ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		И &УсловиеФизическоеЛицо
	|		И &ОкончательныйРасчетПоРасчетам
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|	ИЗ
	|		ВТРегистрНакопления_РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|	ГДЕ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		И &УсловиеФизическоеЛицо
	|		И &ОкончательныйРасчетПоРасчетам) КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛПредоставленныеСтандартныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛПредоставленныеСтандартныеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛПредоставленныеСтандартныеВычеты.Подразделение КАК Подразделение,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код103), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код104), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код105))
	|				ТОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		КОНЕЦ) КАК КодВычетаЛичный,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код103), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код104), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код105))
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетЛичный,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетей,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код130)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код135)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойнойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код143)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойнойВторойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код131)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код137)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код145)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код132)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код139)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код147)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код117о)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код121о)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код125о)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычеты КАК НДФЛПредоставленныеСтандартныеВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛПредоставленныеСтандартныеВычеты.Подразделение,
	|	НДФЛПредоставленныеСтандартныеВычеты.МесяцНалоговогоПериода,
	|	НДФЛПредоставленныеСтандартныеВычеты.ФизическоеЛицо";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(ПакетЗапросов, Символы.ПС + ";" + Символы.ПС);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
	
	Если Не ИсключатьДоходыРегистратора Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И (СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор)", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор", "");
	КонецЕсли;
	
	Если ОкончательныйРасчет Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетВычеты", "Истина");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", "Истина");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетПоРасчетам", "Истина");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетВычеты", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ ВычетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", 
		"(СведенияОДоходахНДФЛ.Период < &НачалоМесяцаРасчета
		|					ИЛИ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
		|						И (СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетПоРасчетам", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ РасчетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВсегоРезультатов = Результат.Количество();
	
	ИмущественныеВычеты = Результат[ВсегоРезультатов - 7 + Сдвиг].Выгрузить();
	ИсчисленоРанее = Результат[ВсегоРезультатов - 2].Выгрузить();
	СтандартныхВычетовРанее = Результат[ВсегоРезультатов - 1].Выгрузить();
	
	ПоляПоиска = "ФизическоеЛицо, МесяцНалоговогоПериода";
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	СтандартныхВычетовРанее.Индексы.Добавить(ПоляПоиска);
	ПоляПоискаИмущественныхВычетов = ПоляПоиска + ", ВидДвижения";
	СтрутураПоискаВычетов = Новый Структура(ПоляПоискаИмущественныхВычетов);
	ИмущественныеВычеты.Индексы.Добавить(ПоляПоискаИмущественныхВычетов);
	
	СтрокаРесурсов = РассчитываемыеРесурсыПоОсновнойСтавке();
	МассивРесурсов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаРесурсов);
	
	РезультатыРасчетов = ТаблицаНДФЛ();
	
	ВспомогательнаяТаблицаМесяца = РезультатыРасчетов.СкопироватьКолонки();
	ВспомогательнаяТаблицаФизическогоЛица = РезультатыРасчетов.СкопироватьКолонки();
	
	ТекущийГод = Год(МесяцРасчета);
		
	// Помесячный расчет
	Если ПервыйМесяцНалоговогоПериода < ДатаИзмененияИсчисленияДляИностранцев Тогда
		ВыборкаРасчетов = Результат[ВсегоРезультатов - 4].Выбрать();
		ИсчисленоРанее.Индексы.Добавить(ПоляПоиска);
		РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 3].Выгрузить();
		РаспределениеДоходовПоПодразделениям.Индексы.Добавить(ПоляПоиска);
		Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			ВспомогательнаяТаблицаФизическогоЛица.Очистить();
			
			// Подготовим распределение, которое будет использоваться при отсутствии базы соответствующего месяца.
			СтруктураПоиска.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;

			БазаРаспределения = 0;
			МесяцПоиска = НачалоМесяца(МесяцРасчета);
			Пока БазаРаспределения = 0 И Год(МесяцПоиска) = ТекущийГод Цикл
				СтруктураПоиска.МесяцНалоговогоПериода = МесяцПоиска;
				ДоходыМесяцаРасчета = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
				БазаРаспределения = 0;
				Для каждого СтрокаРаспределения Из ДоходыМесяцаРасчета Цикл
					БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
				КонецЦикла; 
				МесяцПоиска = ДобавитьМесяц(МесяцПоиска, -1);
			КонецЦикла;
			
			КоэффициентыПодразделенийМесяцаРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ДоходыМесяцаРасчета, "СуммаДохода");
			
			Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
				
				ВычетЛичныйОстаток = 0;
				ВычетНаДетейОстаток = 0;
				ВычетНаДетейДвойнойОстаток = 0;
				ВычетНаДетейДвойнойВторойОстаток = 0;
				ВычетНаТретьегоРебенкаОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойВторойОстаток = 0;
				ВычетНаВторогоРебенкаОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойВторойОстаток = 0;
				ВычетНаДетейИнвалидовОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойВторойОстаток = 0;
				ВычетИмущественныйРасходыОстаток = 0;
				ВычетИмущественныйПроцентыПоКредитамОстаток = 0;
				ВычетИмущественныйПроцентыПриПерекредитованииОстаток = 0;
				ВычетСоциальныйОстаток = 0;
				ОблагаемыйДоход = 0;
				ДоходЗаМесяцОстаток = 0;
				НалогИсчисленный = 0;
				
				Пока ВыборкаРасчетов.Следующий() Цикл
					
					Если ВыборкаРасчетов.МесяцНалоговогоПериода >= ДатаИзмененияИсчисленияДляИностранцев Тогда
						Продолжить;
					КонецЕсли;
					
					ВспомогательнаяТаблицаМесяца.Очистить();
					ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРасчетов);
					Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
					
					БазаРаспределения = 0;
					Для каждого СтрокаРаспределения Из Доходы Цикл
						БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
					КонецЦикла; 
					Если БазаРаспределения = 0 Тогда
						// Если доходов за прошлый месяц нет - будем использовать текущее распределение.
						Доходы = ДоходыМесяцаРасчета;
						КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
					Иначе
						КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(СтрутураПоискаВычетов, СтруктураПоиска);
					СтрутураПоискаВычетов.ВидДвижения = ВидДвиженияНакопления.Расход;

					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленоРанее.НайтиСтроки(СтруктураПоиска), "НалогПоСтавке13");
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоиска), "ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей());
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИмущественныеВычеты.НайтиСтроки(СтруктураПоиска), РассчитываемыеРесурсыИмущественныхВычетов());
					
					Если ВыборкаРасчетов.Резидент Тогда
						
						// Расчет сумм примененных вычетов и налога.
						
						ВычетЛичныйЗаМесяц = 0;
						ВычетНаДетейЗаМесяц = 0;
						ВычетНаДетейЗаМесяц = 0;
						ВычетСоциальныйЗаМесяц = 0;
						ВычетНаДетейДвойнойЗаМесяц = 0;
						ВычетНаДетейДвойнойВторойЗаМесяц = 0;
						ВычетНаТретьегоРебенкаЗаМесяц = 0;
						ВычетНаТретьегоРебенкаДвойнойЗаМесяц = 0;
						ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = 0;
						ВычетНаВторогоРебенкаЗаМесяц = 0;
						ВычетНаВторогоРебенкаДвойнойЗаМесяц = 0;
						ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = 0;
						ВычетНаДетейИнвалидовЗаМесяц = 0;
						ВычетНаДетейИнвалидовДвойнойЗаМесяц = 0;
						ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = 0;
						ВычетИмущественныйРасходыЗаМесяц = 0;
						ВычетИмущественныйПроцентыПоКредитамЗаМесяц = 0;
						ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = 0;
						
						ВычетСоциальныйОстаток = ВычетСоциальныйОстаток + ВыборкаРасчетов.СоциальныйВычет;
						
						ЗаполнитьЗначенияСвойств(СтрутураПоискаВычетов, СтруктураПоиска);
						СтрутураПоискаВычетов.ВидДвижения = ВидДвиженияНакопления.Приход;
						СтрокиПравНаИмущественныеВычеты = ИмущественныеВычеты.НайтиСтроки(СтруктураПоиска);
						
						Если СтрокиПравНаИмущественныеВычеты.Количество() > 0 Тогда
							ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйРасходы;
							ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПоКредитам;
							ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПриПерекредитовании;
						КонецЕсли;
						Если ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
							ВычетЛичныйОстаток = ВычетЛичныйОстаток + ВыборкаРасчетов.СтандартныеВычетыЛичные;
							ВычетНаДетейОстаток = ВычетНаДетейОстаток + ВыборкаРасчетов.СтандартныеВычетыДетские;
							ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
							ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
							ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
							ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
							ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
							ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
							ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
							ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
							ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
							ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
							ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
						Иначе
							ДоходЗаМесяцОстаток = ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
							ВычетЛичныйОстаток = ВыборкаРасчетов.СтандартныеВычетыЛичные;
							ВычетНаДетейОстаток = ВыборкаРасчетов.СтандартныеВычетыДетские;
							ВычетНаДетейДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
							ВычетНаДетейДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
							ВычетНаТретьегоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
							ВычетНаТретьегоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
							ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
							ВычетНаВторогоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
							ВычетНаВторогоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
							ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
							ВычетНаДетейИнвалидовОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
							ВычетНаДетейИнвалидовДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
							ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
						КонецЕсли;
						
						Если ДоходЗаМесяцОстаток > 0 Тогда
							
							ВычетСоциальныйЗаМесяц = Мин(ДоходЗаМесяцОстаток, ВычетСоциальныйОстаток);
							ВычетСоциальныйОстаток = ВычетСоциальныйОстаток - ВычетСоциальныйЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСоциальныйЗаМесяц;
							
							Если ВыборкаРасчетов.КодВычетаЛичный = Справочники.ВидыВычетовНДФЛ.Код103 Тогда
								ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
								ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
							КонецЕсли;
							
							ВычетНаДетейЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОстаток);
							ВычетНаДетейОстаток = ВычетНаДетейОстаток - ВычетНаДетейЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейЗаМесяц;
							
							ВычетНаДетейДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОстаток);
							ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток - ВычетНаДетейДвойнойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойЗаМесяц;
							
							ВычетНаДетейДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОстаток);
							ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
							
							ВычетНаВторогоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОстаток);
							ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток - ВычетНаВторогоРебенкаЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаЗаМесяц;
							
							ВычетНаВторогоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОстаток);
							ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
							
							ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОстаток);
							ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;

							ВычетНаТретьегоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОстаток);
							ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
							
							ВычетНаТретьегоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОстаток);
							ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
							
							ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОстаток);
							ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;

							ВычетНаДетейИнвалидовЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОстаток);
							ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток - ВычетНаДетейИнвалидовЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовЗаМесяц;
							
							ВычетНаДетейИнвалидовДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОстаток);
							ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
							
							ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОстаток);
							ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
								
							Если ВыборкаРасчетов.КодВычетаЛичный <> Справочники.ВидыВычетовНДФЛ.Код103 Тогда
								ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
								ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
							КонецЕсли;
							
							ДоходЗаМесяцДляИмущественныхВычетов = Макс(0, ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - ВычетСоциальныйЗаМесяц - ВычетЛичныйЗаМесяц 
									- ВычетНаДетейЗаМесяц - ВычетНаДетейДвойнойЗаМесяц - ВычетНаДетейДвойнойВторойЗаМесяц 
									- ВычетНаВторогоРебенкаЗаМесяц - ВычетНаВторогоРебенкаДвойнойЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
									- ВычетНаТретьегоРебенкаЗаМесяц - ВычетНаТретьегоРебенкаДвойнойЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
									- ВычетНаДетейИнвалидовЗаМесяц - ВычетНаДетейИнвалидовДвойнойЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц);
							
							Если ДоходЗаМесяцДляИмущественныхВычетов > 0 Тогда
								
								ВычетИмущественныйПроцентыПоКредитамЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПоКредитамОстаток);
								ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
								ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
								
								ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПриПерекредитованииОстаток);
								ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
								ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
								
								ВычетИмущественныйРасходыЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйРасходыОстаток);
								ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток - ВычетИмущественныйРасходыЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйРасходыЗаМесяц;
								
							КонецЕсли;
							
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетЛичныйЗаМесяц, "ПримененныйВычетЛичный", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейЗаМесяц, "ПримененныйВычетНаДетей", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейДвойнойЗаМесяц, "ПримененныйВычетНаДетейДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаЗаМесяц, "ПримененныйВычетНаВторогоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаЗаМесяц, "ПримененныйВычетНаТретьегоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовЗаМесяц, "ПримененныйВычетНаДетейИнвалидов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовДвойнойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйРасходыЗаМесяц, "ПримененныйВычетИмущественныйРасходы", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйПроцентыПоКредитамЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПоКредитам", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						КонецЕсли;
						
						ОблагаемыйДоход = Макс(0, ОблагаемыйДоход + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - (ВычетСоциальныйЗаМесяц + ВычетЛичныйЗаМесяц 
									+ ВычетНаДетейЗаМесяц + ВычетНаДетейДвойнойЗаМесяц + ВычетНаДетейДвойнойВторойЗаМесяц 
									+ ВычетНаТретьегоРебенкаЗаМесяц + ВычетНаТретьегоРебенкаДвойнойЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
									+ ВычетНаВторогоРебенкаЗаМесяц + ВычетНаВторогоРебенкаДвойнойЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
									+ ВычетНаДетейИнвалидовЗаМесяц + ВычетНаДетейИнвалидовДвойнойЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц 
									+ ВычетИмущественныйПроцентыПоКредитамЗаМесяц + ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц + ВычетИмущественныйРасходыЗаМесяц));
							
						НалогЗаМесяц = Окр(ОблагаемыйДоход * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
						НалогИсчисленный = НалогИсчисленный + НалогЗаМесяц;
						
					Иначе	
						
						НалогЗаМесяц = ВыборкаРасчетов.НалогЗаМесяц;
						
					КонецЕсли;
					
					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, НалогЗаМесяц, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
					
					ВспомогательнаяТаблицаМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, КатегорияДохода", СтрокаРесурсов);
					Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
						ЕстьДанныеВСтроке = Ложь;
						Для каждого ИмяРесурса Из МассивРесурсов Цикл
							ЕстьДанныеВСтроке = СтрокаТЗ[ИмяРесурса] <> 0;
							Если ЕстьДанныеВСтроке Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если ЕстьДанныеВСтроке Тогда
							ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(), СтрокаТЗ);
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если Не ОкончательныйРасчет И ВспомогательнаяТаблицаФизическогоЛица.Количество() > 0 Тогда
				ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультат(РезультатыРасчетов, ВспомогательнаяТаблицаФизическогоЛица, ДатаУдержанияИсчисленногоНалога, МесяцРасчета);
			Иначе
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВспомогательнаяТаблицаФизическогоЛица, РезультатыРасчетов)
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Расчет по каждой дате получения дохода
	Если ПоследнийМесяцНалоговогоПериода >= ДатаИзмененияИсчисленияДляИностранцев Тогда
		ВспомогательнаяТаблицаВычетовМесяца = РезультатыРасчетов.СкопироватьКолонки();
		ЭтоПерерасчет = Не ЭтоРасчетПоДоходамТекущегоМесяца;
		ПоляПоискаПоДатам = ПоляПоиска + ", ДатаПолученияДохода"; 
		СтруктураПоискаПоДатам = Новый Структура(ПоляПоискаПоДатам);
		СтруктураПоискаИсчисленного = Новый Структура("ФизическоеЛицо, МесяцНалоговогоПериодаДляПоиска");
		ВыборкаРасчетов = Результат[ВсегоРезультатов - 6 + Сдвиг].Выбрать();
		ИсчисленоРанее.Индексы.Добавить("ФизическоеЛицо,МесяцНалоговогоПериодаДляПоиска"); 
		РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 5 + Сдвиг].Выгрузить();
		РаспределениеДоходовПоПодразделениям.Индексы.Добавить(ПоляПоискаПоДатам);
		РаспределениеДоходовПоПодразделениям.Индексы.Добавить(ПоляПоиска);
		Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			ВспомогательнаяТаблицаФизическогоЛица.Очистить();
			
			// Подготовим распределение, которое будет использоваться при отсутствии базы соответствующего месяца.
			СтруктураПоиска.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;
			СтруктураПоискаИсчисленного.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;

			БазаРаспределения = 0;
			МесяцПоиска = НачалоМесяца(МесяцРасчета);
			Пока БазаРаспределения = 0 И Год(МесяцПоиска) = ТекущийГод Цикл
				СтруктураПоиска.МесяцНалоговогоПериода = МесяцПоиска;
				ДоходыМесяцаРасчета = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
				БазаРаспределения = 0;
				Для каждого СтрокаРаспределения Из ДоходыМесяцаРасчета Цикл
					БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
				КонецЦикла; 
				МесяцПоиска = ДобавитьМесяц(МесяцПоиска, -1);
			КонецЦикла;
			
			КоэффициентыПодразделенийМесяцаРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ДоходыМесяцаРасчета, "СуммаДохода");
			
			Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
				
				ВычетЛичныйОстаток = 0;
				ВычетНаДетейОстаток = 0;
				ВычетНаДетейДвойнойОстаток = 0;
				ВычетНаДетейДвойнойВторойОстаток = 0;
				ВычетНаТретьегоРебенкаОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойВторойОстаток = 0;
				ВычетНаВторогоРебенкаОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойВторойОстаток = 0;
				ВычетНаДетейИнвалидовОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойВторойОстаток = 0;
				ВычетНаДетейОпекуновОстаток = 0;
				ВычетНаДетейДвойнойОпекуновОстаток = 0;
				ВычетНаДетейДвойнойВторойОпекуновОстаток = 0;
				ВычетНаТретьегоРебенкаОпекуновОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = 0;
				ВычетНаВторогоРебенкаОпекуновОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = 0;
				ВычетНаДетейИнвалидовОпекуновОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = 0;
				ВычетИмущественныйРасходыОстаток = 0;
				ВычетИмущественныйПроцентыПоКредитамОстаток = 0;
				ВычетИмущественныйПроцентыПриПерекредитованииОстаток = 0;
				ВычетРасходыНаСвоеОбучениеОстаток = 0;
				ВычетРасходыНаОбучениеДетейОстаток = 0;
				ВычетРасходыНаЛечениеОстаток = 0;
				ВычетСтраховыеВзносыНаМедУслугиОстаток = 0;
				ВычетРасходыНаДорогостоящееЛечениеОстаток = 0;
				ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток = 0;
				ВычетСоциальныйОстаток = 0;
				ОблагаемыйДоход = 0;
				ДоходЗаМесяцОстаток = 0;
				НалогИсчисленный = 0;
				
				Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") Цикл
					
					Если ВыборкаРасчетов.МесяцНалоговогоПериода < ДатаИзмененияИсчисленияДляИностранцев Тогда
						Продолжить;
					КонецЕсли;
					
					ВспомогательнаяТаблицаВычетовМесяца.Очистить();
					ВспомогательнаяТаблицаМесяца.Очистить();
					ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРасчетов);
					СтруктураПоискаИсчисленного.МесяцНалоговогоПериодаДляПоиска = ВыборкаРасчетов.МесяцНалоговогоПериода;
					
					Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
					БазаРаспределения = 0;
					Для каждого СтрокаРаспределения Из Доходы Цикл
						БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
					КонецЦикла; 
					Если БазаРаспределения = 0 Тогда
						// Если доходов за прошлый месяц нет - будем использовать текущее распределение.
						Доходы = ДоходыМесяцаРасчета;
						КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
					Иначе
						КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
					КонецЕсли;
					
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленоРанее.НайтиСтроки(СтруктураПоискаИсчисленного), "КатегорияДохода, НалогПоСтавке13");
					
					// Расчет сумм примененных вычетов
					
					ВсегоВычетовЗаМесяц = 0;
					
					ВычетСоциальныйЗаМесяц = 0;
					ВычетЛичныйЗаМесяц = 0;
					ВычетНаДетейЗаМесяц = 0;
					ВычетНаДетейДвойнойЗаМесяц = 0;
					ВычетНаДетейДвойнойВторойЗаМесяц = 0;
					ВычетНаТретьегоРебенкаЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = 0;
					ВычетНаВторогоРебенкаЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = 0;
					ВычетНаДетейИнвалидовЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = 0;
					ВычетНаДетейОпекуновЗаМесяц = 0;
					ВычетНаДетейДвойнойОпекуновЗаМесяц = 0;
					ВычетНаДетейДвойнойВторойОпекуновЗаМесяц = 0;
					ВычетНаТретьегоРебенкаОпекуновЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц = 0;
					ВычетНаВторогоРебенкаОпекуновЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц = 0;
					ВычетНаДетейИнвалидовОпекуновЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц = 0;
					ВычетИмущественныйРасходыЗаМесяц = 0;
					ВычетИмущественныйПроцентыПоКредитамЗаМесяц = 0;
					ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = 0;
					ВычетРасходыНаСвоеОбучениеЗаМесяц = 0;
					ВычетРасходыНаОбучениеДетейЗаМесяц = 0;
					ВычетРасходыНаЛечениеЗаМесяц = 0;
					ВычетСтраховыеВзносыНаМедУслугиЗаМесяц = 0;
					ВычетРасходыНаДорогостоящееЛечениеЗаМесяц = 0;
					ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц = 0;
					
					ВычетСоциальныйОстаток = ВычетСоциальныйОстаток + ВыборкаРасчетов.СоциальныйВычет;

					ЗаполнитьЗначенияСвойств(СтрутураПоискаВычетов, СтруктураПоиска);
					СтрутураПоискаВычетов.ВидДвижения = ВидДвиженияНакопления.Приход;
					СтрокиПравНаИмущественныеВычеты = ИмущественныеВычеты.НайтиСтроки(СтрутураПоискаВычетов);

					Если СтрокиПравНаИмущественныеВычеты.Количество() > 0 Тогда
						ВычетРасходыНаСвоеОбучениеОстаток = ВычетРасходыНаСвоеОбучениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаСвоеОбучение;
						ВычетРасходыНаОбучениеДетейОстаток = ВычетРасходыНаОбучениеДетейОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаОбучениеДетей;
						ВычетРасходыНаЛечениеОстаток = ВычетРасходыНаЛечениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаЛечение;
						ВычетСтраховыеВзносыНаМедУслугиОстаток = ВычетСтраховыеВзносыНаМедУслугиОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетСтраховыеВзносыНаМедУслуги;
						ВычетРасходыНаДорогостоящееЛечениеОстаток = ВычетРасходыНаДорогостоящееЛечениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаДорогостоящееЛечение;
						ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток = ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетВзносыНаДобровольноеСтрахованиеЖизни;
						ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйРасходы;
						ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПоКредитам;
						ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПриПерекредитовании;
					КонецЕсли;
					Если ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
						ВычетЛичныйОстаток = ВычетЛичныйОстаток + ВыборкаРасчетов.СтандартныеВычетыЛичные;
						ВычетНаДетейОстаток = ВычетНаДетейОстаток + ВыборкаРасчетов.СтандартныеВычетыДетские;
						ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
						ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
						ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
						ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
						ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
						ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
						ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
						ВычетНаДетейОпекуновОстаток = ВычетНаДетейОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеОпекунов;
						ВычетНаДетейДвойнойОпекуновОстаток = ВычетНаДетейДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеОпекунов;
						ВычетНаДетейДвойнойВторойОпекуновОстаток = ВычетНаДетейДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторыеОпекунов;
						ВычетНаТретьегоРебенкаОпекуновОстаток = ВычетНаТретьегоРебенкаОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаОпекунов;
						ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов;
						ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов;
						ВычетНаВторогоРебенкаОпекуновОстаток = ВычетНаВторогоРебенкаОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаОпекунов;
						ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов;
						ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов;
						ВычетНаДетейИнвалидовОпекуновОстаток = ВычетНаДетейИнвалидовОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовОпекунов;
						ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов;
						ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов;
					Иначе
						ДоходЗаМесяцОстаток = ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
						ВычетЛичныйОстаток = ВыборкаРасчетов.СтандартныеВычетыЛичные;
						ВычетНаДетейОстаток = ВыборкаРасчетов.СтандартныеВычетыДетские;
						ВычетНаДетейДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
						ВычетНаДетейДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
						ВычетНаТретьегоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
						ВычетНаВторогоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
						ВычетНаВторогоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
						ВычетНаДетейИнвалидовОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
						ВычетНаДетейИнвалидовДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
						ВычетНаДетейОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеОпекунов;
						ВычетНаДетейДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеОпекунов;
						ВычетНаДетейДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторыеОпекунов;
						ВычетНаТретьегоРебенкаОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаОпекунов;
						ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов;
						ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов;
						ВычетНаВторогоРебенкаОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаОпекунов;
						ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов;
						ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов;
						ВычетНаДетейИнвалидовОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовОпекунов;
						ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов;
						ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов;
					КонецЕсли;
					ЕстьВычетыЗаМесяц = Ложь;
					Если ДоходЗаМесяцОстаток > 0 И (ВыборкаРасчетов.ВсеДоходыЗаМесяц <> 0 Или ЭтоПерерасчет) Тогда
						
						ВычетСоциальныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетСоциальныйОстаток);
						ВычетСоциальныйОстаток = ВычетСоциальныйОстаток - ВычетСоциальныйЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСоциальныйЗаМесяц;
						
						ВычетНаДетейЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОстаток);
						ВычетНаДетейОстаток = ВычетНаДетейОстаток - ВычетНаДетейЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейЗаМесяц;
						
						ВычетНаДетейДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОстаток);
						ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток - ВычетНаДетейДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойЗаМесяц;
						
						ВычетНаДетейДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОстаток);
						ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
						
						ВычетНаВторогоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОстаток);
						ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток - ВычетНаВторогоРебенкаЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОстаток);
						ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОстаток);
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
						
						ВычетНаТретьегоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОстаток);
						ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОстаток);
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОстаток);
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
						
						ВычетНаДетейИнвалидовЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОстаток);
						ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток - ВычетНаДетейИнвалидовЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОстаток);
						ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОстаток);
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
						
						ВычетНаДетейОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОпекуновОстаток);
						ВычетНаДетейОпекуновОстаток = ВычетНаДетейОпекуновОстаток - ВычетНаДетейОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейОпекуновЗаМесяц;
						
						ВычетНаДетейДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОпекуновОстаток);
						ВычетНаДетейДвойнойОпекуновОстаток = ВычетНаДетейДвойнойОпекуновОстаток - ВычетНаДетейДвойнойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойОпекуновЗаМесяц;
						
						ВычетНаДетейДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОпекуновОстаток);
						ВычетНаДетейДвойнойВторойОпекуновОстаток = ВычетНаДетейДвойнойВторойОпекуновОстаток - ВычетНаДетейДвойнойВторойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойОпекуновЗаМесяц;
						
						ВычетНаВторогоРебенкаОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОпекуновОстаток);
						ВычетНаВторогоРебенкаОпекуновОстаток = ВычетНаВторогоРебенкаОпекуновОстаток - ВычетНаВторогоРебенкаОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаОпекуновЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОпекуновОстаток);
						ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойОпекуновОстаток - ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток);
						ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток - ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц;
						
						ВычетНаТретьегоРебенкаОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОпекуновОстаток);
						ВычетНаТретьегоРебенкаОпекуновОстаток = ВычетНаТретьегоРебенкаОпекуновОстаток - ВычетНаТретьегоРебенкаОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаОпекуновЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток);
						ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток - ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток);
						ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток - ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц;
						
						ВычетНаДетейИнвалидовОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОпекуновОстаток);
						ВычетНаДетейИнвалидовОпекуновОстаток = ВычетНаДетейИнвалидовОпекуновОстаток - ВычетНаДетейИнвалидовОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовОпекуновЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОпекуновОстаток);
						ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойОпекуновОстаток - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток);
						ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц;
						
						ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
						ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
						
						ДоходЗаМесяцДляИмущественныхВычетов = Макс(0, ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - ВычетСоциальныйЗаМесяц - ВычетЛичныйЗаМесяц 
							- ВычетНаДетейЗаМесяц - ВычетНаДетейДвойнойЗаМесяц - ВычетНаДетейДвойнойВторойЗаМесяц 
							- ВычетНаТретьегоРебенкаЗаМесяц - ВычетНаТретьегоРебенкаДвойнойЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
							- ВычетНаВторогоРебенкаЗаМесяц - ВычетНаВторогоРебенкаДвойнойЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
							- ВычетНаДетейИнвалидовЗаМесяц - ВычетНаДетейИнвалидовДвойнойЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц
							- ВычетНаДетейОпекуновЗаМесяц - ВычетНаДетейДвойнойОпекуновЗаМесяц - ВычетНаДетейДвойнойВторойОпекуновЗаМесяц 
							- ВычетНаТретьегоРебенкаОпекуновЗаМесяц - ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц 
							- ВычетНаВторогоРебенкаОпекуновЗаМесяц - ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц 
							- ВычетНаДетейИнвалидовОпекуновЗаМесяц - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц);
						
						Если ДоходЗаМесяцДляИмущественныхВычетов > 0 Тогда
							
							ВычетРасходыНаДорогостоящееЛечениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаДорогостоящееЛечениеОстаток);
							ВычетРасходыНаДорогостоящееЛечениеОстаток = ВычетРасходыНаДорогостоящееЛечениеОстаток - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
							
							ВычетСтраховыеВзносыНаМедУслугиЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетСтраховыеВзносыНаМедУслугиОстаток);
							ВычетСтраховыеВзносыНаМедУслугиОстаток = ВычетСтраховыеВзносыНаМедУслугиОстаток - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
							
							ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток);
							ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток = ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток - ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц;
							
							ВычетРасходыНаЛечениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаЛечениеОстаток);
							ВычетРасходыНаЛечениеОстаток = ВычетРасходыНаЛечениеОстаток - ВычетРасходыНаЛечениеЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаЛечениеЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаЛечениеЗаМесяц;
							
							ВычетРасходыНаОбучениеДетейЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаОбучениеДетейОстаток);
							ВычетРасходыНаОбучениеДетейОстаток = ВычетРасходыНаОбучениеДетейОстаток - ВычетРасходыНаОбучениеДетейЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаОбучениеДетейЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаОбучениеДетейЗаМесяц;
							
							ВычетРасходыНаСвоеОбучениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаСвоеОбучениеОстаток);
							ВычетРасходыНаСвоеОбучениеОстаток = ВычетРасходыНаСвоеОбучениеОстаток - ВычетРасходыНаСвоеОбучениеЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаСвоеОбучениеЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаСвоеОбучениеЗаМесяц;
							
							ВычетИмущественныйПроцентыПоКредитамЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПоКредитамОстаток);
							ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							
							ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПриПерекредитованииОстаток);
							ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							
							ВычетИмущественныйРасходыЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйРасходыОстаток);
							ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток - ВычетИмущественныйРасходыЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйРасходыЗаМесяц;
							
						КонецЕсли;
						
						ВсегоВычетовЗаМесяц = ВычетСоциальныйЗаМесяц + ВычетЛичныйЗаМесяц 
								+ ВычетНаДетейЗаМесяц + ВычетНаДетейДвойнойЗаМесяц + ВычетНаДетейДвойнойВторойЗаМесяц 
								+ ВычетНаТретьегоРебенкаЗаМесяц + ВычетНаТретьегоРебенкаДвойнойЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
								+ ВычетНаВторогоРебенкаЗаМесяц + ВычетНаВторогоРебенкаДвойнойЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
								+ ВычетНаДетейИнвалидовЗаМесяц + ВычетНаДетейИнвалидовДвойнойЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц 
								+ ВычетНаДетейОпекуновЗаМесяц + ВычетНаДетейДвойнойОпекуновЗаМесяц + ВычетНаДетейДвойнойВторойОпекуновЗаМесяц 
								+ ВычетНаТретьегоРебенкаОпекуновЗаМесяц + ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц 
								+ ВычетНаВторогоРебенкаОпекуновЗаМесяц + ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц 
								+ ВычетНаДетейИнвалидовОпекуновЗаМесяц + ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц 
								+ ВычетРасходыНаСвоеОбучениеЗаМесяц + ВычетРасходыНаОбучениеДетейЗаМесяц + ВычетРасходыНаЛечениеЗаМесяц + ВычетСтраховыеВзносыНаМедУслугиЗаМесяц + ВычетРасходыНаДорогостоящееЛечениеЗаМесяц + ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц
								+ ВычетИмущественныйПроцентыПоКредитамЗаМесяц + ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц + ВычетИмущественныйРасходыЗаМесяц;
						
						ЕстьВычетыЗаМесяц = ВычетСоциальныйЗаМесяц <> 0 Или ВычетЛичныйЗаМесяц <> 0 
								Или ВычетНаДетейЗаМесяц <> 0 Или ВычетНаДетейДвойнойЗаМесяц <> 0 Или ВычетНаДетейДвойнойВторойЗаМесяц <> 0 
								Или ВычетНаВторогоРебенкаЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц <> 0 
								Или ВычетНаТретьегоРебенкаЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц <> 0 
								Или ВычетНаДетейИнвалидовЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц <> 0 
								Или ВычетНаДетейОпекуновЗаМесяц <> 0 Или ВычетНаДетейДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаДетейДвойнойВторойОпекуновЗаМесяц <> 0 
								Или ВычетНаВторогоРебенкаОпекуновЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц <> 0 
								Или ВычетНаТретьегоРебенкаОпекуновЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц <> 0 
								Или ВычетНаДетейИнвалидовОпекуновЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц <> 0 
								Или ВычетРасходыНаСвоеОбучениеЗаМесяц <> 0 Или ВычетРасходыНаОбучениеДетейЗаМесяц <> 0 Или ВычетРасходыНаЛечениеЗаМесяц <> 0 Или ВычетСтраховыеВзносыНаМедУслугиЗаМесяц <> 0 Или ВычетРасходыНаДорогостоящееЛечениеЗаМесяц <> 0 Или ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц <> 0
								Или ВычетИмущественныйПроцентыПоКредитамЗаМесяц <> 0 Или ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц <> 0 Или ВычетИмущественныйРасходыЗаМесяц <> 0;
					КонецЕсли;
					
					ДатаУчетаВычетов = ВыборкаРасчетов.МесяцНалоговогоПериода;
					ДоходыДляРаспределенияВычетов = Новый Массив;
					КоэффициентыДляРаспределенияВычетов = Новый Массив;
					
					НалогЗаМесяц = 0;
					Если ВыборкаРасчетов.ВсеДоходыЗаМесяц <> 0 Или ЭтоПерерасчет Тогда
						Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ИсчислятьНалогНарастающимИтогом") Цикл
							Если ВыборкаРасчетов.ИсчислятьНалогНарастающимИтогом Тогда
								
								// Расчет сумм налога
								ОблагаемыйДоходНаНачалоМесяца = ОблагаемыйДоход;
								НалогЗаМесяц = 0;
								НачисленныйДоходЗаДату = 0;
								ИспользованоВычетовЗаМесяц = 0;
								Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ДатаПолученияДохода") Цикл
									
									ЗаполнитьЗначенияСвойств(СтруктураПоискаПоДатам, ВыборкаРасчетов);
									
									Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоискаПоДатам);
									БазаРаспределения = 0;
									Для каждого СтрокаРаспределения Из Доходы Цикл
										БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
									КонецЦикла; 
									Если БазаРаспределения = 0 Тогда
										// если доходов за прошлый месяц нет - будем использовать текущее распределение
										Доходы = ДоходыМесяцаРасчета;
										КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
									Иначе
										КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
									КонецЕсли;
									ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоходыДляРаспределенияВычетов, Доходы);
									ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КоэффициентыДляРаспределенияВычетов, КоэффициентыПодразделений);
									ДатаУчетаВычетов = ВыборкаРасчетов.ДатаПолученияДохода;

									ОблагаемыйДоходНаНачалоМесяца = ОблагаемыйДоход;
									ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета = 0;
									ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета = 0;
									ЕстьДоходыПромежуточногоРасчета = Ложь;
									ЕстьДоходыОкончательногоРасчета = Ложь;
									Пока ВыборкаРасчетов.Следующий() Цикл
										НачисленныйДоходЗаДату = ВыборкаРасчетов.ОблагаемыйДоход;
										Если ВыборкаРасчетов.ЗарегистрированоДляПромежуточногоРасчета  Тогда 
											ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета = Мин(ВыборкаРасчетов.ОблагаемыйДоходНарастающимИтогом, Макс(0, ОблагаемыйДоходНаНачалоМесяца + ВыборкаРасчетов.ОблагаемыйДоход - ВсегоВычетовЗаМесяц));
											ЕстьДоходыПромежуточногоРасчета = Истина;
										Иначе
											ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета = Мин(ВыборкаРасчетов.ОблагаемыйДоходНарастающимИтогом, Макс(0, ОблагаемыйДоходНаНачалоМесяца + ВыборкаРасчетов.ОблагаемыйДоход - ВсегоВычетовЗаМесяц));
											ЕстьДоходыОкончательногоРасчета = Истина;
										КонецЕсли;
									КонецЦикла;
									
									// Расчет сумм налога
									Если ВыборкаРасчетов.ДатаПолученияДохода < ВыборкаРасчетов.МаксимальнаяДатаПолученияДоходаМесяца Тогда
										
										Если ЕстьДоходыПромежуточногоРасчета Тогда
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета);
											НалогСДохода = Макс(Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный, 0);
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
										КонецЕсли;
										
										Если ЕстьДоходыОкончательногоРасчета Тогда
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
											НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
										КонецЕсли;
										
									Иначе
										
										Если ЕстьДоходыПромежуточногоРасчета И ЕстьДоходыОкончательногоРасчета Тогда
											
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета);
											НалогСДохода = Макс(Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный, 0);
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
											
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
											НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
											
											ОблагаемыйДоход = ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
											
										Иначе
											
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
											НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
											
											ОблагаемыйДоход = ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
											
										КонецЕсли;
										
									КонецЕсли;
									
									Если ЕстьДоходыПромежуточногоРасчета И ЕстьДоходыОкончательногоРасчета Тогда
										ОблагаемыйДоходЗаДату = ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
									Иначе
										ОблагаемыйДоходЗаДату = ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
									КонецЕсли;
									ВсегоВычетовЗаДату = НачисленныйДоходЗаДату - (ОблагаемыйДоходЗаДату - ОблагаемыйДоходНаНачалоМесяца) - ИспользованоВычетовЗаМесяц;
									ИспользованоВычетовЗаМесяц = ИспользованоВычетовЗаМесяц + ВсегоВычетовЗаДату;
									
									Если ВсегоВычетовЗаДату * ВычетНаДетейЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетей", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейЗаМесяц = ВычетНаДетейЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейДвойнойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейДвойнойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейДвойнойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейДвойнойЗаМесяц = ВычетНаДетейДвойнойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейДвойнойВторойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейДвойнойВторойЗаМесяц = ВычетНаДетейДвойнойВторойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаЗаМесяц = ВычетНаВторогоРебенкаЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаДвойнойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаДвойнойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаДвойнойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаДвойнойЗаМесяц = ВычетНаВторогоРебенкаДвойнойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаЗаМесяц = ВычетНаТретьегоРебенкаЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаДвойнойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаДвойнойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаДвойнойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаДвойнойЗаМесяц = ВычетНаТретьегоРебенкаДвойнойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовЗаМесяц = ВычетНаДетейИнвалидовЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовДвойнойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовДвойнойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовДвойнойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовДвойнойЗаМесяц = ВычетНаДетейИнвалидовДвойнойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейОпекуновЗаМесяц = ВычетНаДетейОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейДвойнойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейДвойнойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейДвойнойОпекуновЗаМесяц = ВычетНаДетейДвойнойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейДвойнойВторойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейДвойнойВторойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейДвойнойВторойОпекуновЗаМесяц = ВычетНаДетейДвойнойВторойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаОпекуновЗаМесяц = ВычетНаВторогоРебенкаОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц = ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц = ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаОпекуновЗаМесяц = ВычетНаТретьегоРебенкаОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц = ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц = ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовОпекуновЗаМесяц = ВычетНаДетейИнвалидовОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц = ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц = ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетЛичныйЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетЛичныйЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетЛичныйЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетЛичный", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетЛичныйЗаМесяц = ВычетЛичныйЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетРасходыНаДорогостоящееЛечениеЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетРасходыНаДорогостоящееЛечениеЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетРасходыНаДорогостоящееЛечениеЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетРасходыНаДорогостоящееЛечение", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетРасходыНаДорогостоящееЛечениеЗаМесяц = ВычетРасходыНаДорогостоящееЛечениеЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц = ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетСтраховыеВзносыНаМедУслугиЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетСтраховыеВзносыНаМедУслугиЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетСтраховыеВзносыНаМедУслугиЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетСтраховыеВзносыНаМедУслуги", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетСтраховыеВзносыНаМедУслугиЗаМесяц = ВычетСтраховыеВзносыНаМедУслугиЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетРасходыНаЛечениеЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетРасходыНаЛечениеЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетРасходыНаЛечениеЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетРасходыНаЛечение", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетРасходыНаЛечениеЗаМесяц = ВычетРасходыНаЛечениеЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетРасходыНаОбучениеДетейЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетРасходыНаОбучениеДетейЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетРасходыНаОбучениеДетейЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетРасходыНаОбучениеДетей", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетРасходыНаОбучениеДетейЗаМесяц = ВычетРасходыНаОбучениеДетейЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетРасходыНаСвоеОбучениеЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетРасходыНаСвоеОбучениеЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетРасходыНаСвоеОбучениеЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетРасходыНаСвоеОбучение", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетРасходыНаСвоеОбучениеЗаМесяц = ВычетРасходыНаСвоеОбучениеЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетИмущественныйПроцентыПоКредитамЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетИмущественныйПроцентыПоКредитамЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетИмущественныйПроцентыПоКредитамЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетИмущественныйПроцентыПоКредитам", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетИмущественныйПроцентыПоКредитамЗаМесяц = ВычетИмущественныйПроцентыПоКредитамЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетИмущественныйРасходыЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетИмущественныйРасходыЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетИмущественныйРасходыЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетИмущественныйРасходы", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВычетИмущественныйРасходыЗаМесяц = ВычетИмущественныйРасходыЗаМесяц - Учтено;
									КонецЕсли;
									
								КонецЦикла;
								
							Иначе	
								
								Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ДатаПолученияДохода") Цикл
									
									ЗаполнитьЗначенияСвойств(СтруктураПоискаПоДатам, ВыборкаРасчетов);
									
									Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоискаПоДатам);
									БазаРаспределения = 0;
									Для каждого СтрокаРаспределения Из Доходы Цикл
										БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
									КонецЦикла; 
									Если БазаРаспределения = 0 Тогда
										// если доходов за прошлый месяц нет - будем использовать текущее распределение
										Доходы = ДоходыМесяцаРасчета;
										КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
									Иначе
										КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
									КонецЕсли;
									ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоходыДляРаспределенияВычетов, Доходы);
									ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КоэффициентыДляРаспределенияВычетов, КоэффициентыПодразделений);
									ДатаУчетаВычетов = ВыборкаРасчетов.ДатаПолученияДохода;
									
									Пока ВыборкаРасчетов.Следующий() Цикл
										
										НалогСДохода = ВыборкаРасчетов.НалогНерезидента;
										НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
										
										СтрокаНалога = ВспомогательнаяТаблицаМесяца.Добавить();
										ЗаполнитьЗначенияСвойств(СтрокаНалога, ВыборкаРасчетов, "ФизическоеЛицо, Подразделение, КатегорияДохода");
										СтрокаНалога.НалогПоСтавке13 = НалогСДохода;
										СтрокаНалога.МесяцНалоговогоПериода = ВыборкаРасчетов.ДатаПолученияДохода;
										
									КонецЦикла;
									
								КонецЦикла;
								
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаВычетовМесяца, СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоиска), "ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей());

					ЗаполнитьЗначенияСвойств(СтрутураПоискаВычетов, СтруктураПоиска);
					СтрутураПоискаВычетов.ВидДвижения = ВидДвиженияНакопления.Расход;
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаВычетовМесяца, ИмущественныеВычеты.НайтиСтроки(СтрутураПоискаВычетов), РассчитываемыеРесурсыИмущественныхВычетов());
					
					Если ЕстьВычетыЗаМесяц Тогда
						
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетЛичныйЗаМесяц, "ПримененныйВычетЛичный", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейЗаМесяц, "ПримененныйВычетНаДетей", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейДвойнойЗаМесяц, "ПримененныйВычетНаДетейДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаЗаМесяц, "ПримененныйВычетНаТретьегоРебенка", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаЗаМесяц, "ПримененныйВычетНаВторогоРебенка", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовЗаМесяц, "ПримененныйВычетНаДетейИнвалидов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовДвойнойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейОпекуновЗаМесяц, "ПримененныйВычетНаДетейОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаДетейДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаОпекуновЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаОпекуновЗаМесяц, "ПримененныйВычетНаВторогоРебенкаОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетИмущественныйРасходыЗаМесяц, "ПримененныйВычетИмущественныйРасходы", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетИмущественныйПроцентыПоКредитамЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПоКредитам", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетРасходыНаСвоеОбучениеЗаМесяц, "ПримененныйВычетРасходыНаСвоеОбучение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетРасходыНаОбучениеДетейЗаМесяц, "ПримененныйВычетРасходыНаОбучениеДетей", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетРасходыНаЛечениеЗаМесяц, "ПримененныйВычетРасходыНаЛечение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетСтраховыеВзносыНаМедУслугиЗаМесяц, "ПримененныйВычетСтраховыеВзносыНаМедУслуги", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетРасходыНаДорогостоящееЛечениеЗаМесяц, "ПримененныйВычетРасходыНаДорогостоящееЛечение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц, "ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						
					КонецЕсли;
					
					Если ВспомогательнаяТаблицаВычетовМесяца.Количество() > 0 Тогда
						ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица = ВспомогательнаяТаблицаВычетовМесяца.Скопировать( ,"ФизическоеЛицо, Подразделение, " + СтрокаРесурсов);
						ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица.Свернуть("ФизическоеЛицо, Подразделение", СтрокаРесурсов);
						Если ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица.Количество() = 1 Тогда
							СтрокаТЗ = ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица[0];
							Для каждого ИмяРесурса Из МассивРесурсов Цикл
								Если СтрокаТЗ[ИмяРесурса] <> 0 Тогда
									ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, СтрокаТЗ[ИмяРесурса], ИмяРесурса, СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов,, "Подразделение, КатегорияДохода");
								КонецЕсли;
							КонецЦикла;
						Иначе 	
							Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица Цикл
								Доходы = Новый Массив;
								Для каждого СтрокаРаспределения Из ДоходыДляРаспределенияВычетов Цикл
									Если СтрокаРаспределения.Подразделение = СтрокаТЗ.Подразделение Тогда
										Доходы.Добавить(СтрокаРаспределения)
									КонецЕсли;
								КонецЦикла;
								Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
								Для каждого ИмяРесурса Из МассивРесурсов Цикл
									Если СтрокаТЗ[ИмяРесурса] <> 0 Тогда
										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, СтрокаТЗ[ИмяРесурса], ИмяРесурса, СтруктураПоиска, Доходы, Коэффициенты,, "Подразделение, КатегорияДохода");
									КонецЕсли;
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
					
					// для 2015 года парные записи с + и - за месяц из-за уточнения учета в результаты расчетов не пишем
					ВспомогательнаяТаблицаМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода,Подразделение, КатегорияДохода", СтрокаРесурсов);
					Если НачалоГода(ВыборкаРасчетов.МесяцНалоговогоПериода) = ДатаИзмененияИсчисленияДляИностранцев Тогда
						НачалоМесяца = НачалоМесяца(ВыборкаРасчетов.МесяцНалоговогоПериода);
						СтрокиНалогов = ВспомогательнаяТаблицаМесяца.Скопировать(,"Подразделение, НалогПоСтавке13");
						СтрокиНалогов.Свернуть("Подразделение", "НалогПоСтавке13");
						СтрокиОкругления = Новый Массив;
						СуммаСтрокОкругления = 0;
						Для каждого СтрокаТЗ Из СтрокиНалогов Цикл
							Если СтрокаТЗ.НалогПоСтавке13 * СтрокаТЗ.НалогПоСтавке13 = 1 Тогда
								СтрокиОкругления.Добавить(СтрокаТЗ);
								СуммаСтрокОкругления = СуммаСтрокОкругления + СтрокаТЗ.НалогПоСтавке13;
							КонецЕсли;
						КонецЦикла;
						Если СуммаСтрокОкругления = 0 Тогда
							Для каждого СтрокаТЗ Из СтрокиОкругления Цикл
								СтрокаТЗ.НалогПоСтавке13 = 0
							КонецЦикла;
						КонецЕсли;
						Для каждого СтрокаТЗ Из СтрокиНалогов Цикл
							СтрокиПодразделения = ВспомогательнаяТаблицаМесяца.НайтиСтроки(Новый Структура("Подразделение",СтрокаТЗ.Подразделение));
							Если СтрокиПодразделения.Количество() = 1 Тогда
								Продолжить;
							КонецЕсли;
							Если СтрокаТЗ.НалогПоСтавке13 = 0 Тогда
								Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
									СтрокаПодразделения.НалогПоСтавке13 = 0
								КонецЦикла;
							Иначе
								СуммаПерерасчета = 0;
								Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
									Если СтрокаПодразделения.МесяцНалоговогоПериода = НачалоМесяца И СтрокаПодразделения.НалогПоСтавке13 < 0 Тогда
										СуммаПерерасчета = СтрокаПодразделения.НалогПоСтавке13;
										СтрокаНачалаМесяца = СтрокаПодразделения;
										Прервать;
									КонецЕсли;
								КонецЦикла;
								Если СуммаПерерасчета < 0 Тогда
									Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
										Если СуммаПерерасчета < 0 И СтрокаПодразделения.МесяцНалоговогоПериода > НачалоМесяца И СтрокаПодразделения.НалогПоСтавке13 > 0 Тогда
											СуммаЗачета = Мин(-СуммаПерерасчета, СтрокаПодразделения.НалогПоСтавке13);
											СтрокаНачалаМесяца.НалогПоСтавке13 = СтрокаНачалаМесяца.НалогПоСтавке13 + СуммаЗачета;
											СтрокаПодразделения.НалогПоСтавке13 = СтрокаПодразделения.НалогПоСтавке13 - СуммаЗачета;
											СуммаПерерасчета = СтрокаНачалаМесяца.НалогПоСтавке13;
										ИначеЕсли СуммаПерерасчета = 0 Тогда 
											Прервать;
										КонецЕсли;
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
						ЕстьДанныеВСтроке = Ложь;
						Для каждого ИмяРесурса Из МассивРесурсов Цикл
							ЕстьДанныеВСтроке = СтрокаТЗ[ИмяРесурса] <> 0;
							Если ЕстьДанныеВСтроке Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если ЕстьДанныеВСтроке Тогда
							ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(),СтрокаТЗ);
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если Не ОкончательныйРасчет И ВспомогательнаяТаблицаФизическогоЛица.Количество() > 0 Тогда
				ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультат(РезультатыРасчетов, ВспомогательнаяТаблицаФизическогоЛица, ДатаУдержанияИсчисленногоНалога, МесяцРасчета);
			Иначе 
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВспомогательнаяТаблицаФизическогоЛица, РезультатыРасчетов)
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Заполнение поля КодВычетаЛичный в результате расчета будем делать с минимальным использованием СУБД,
	// для чего выгрузим ВТВычетыНаДетейИЛичные в таблицу значений, проиндексируем ее и будем искать в ней личные вычеты.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПравоНаЛичныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПравоНаЛичныеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПравоНаЛичныеВычеты.КодВычетаЛичный КАК КодВычета
	|ИЗ
	|	ВТВычетыНаДетейИЛичные КАК ПравоНаЛичныеВычеты
	|ГДЕ
	|	ПравоНаЛичныеВычеты.КодВычетаЛичный <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)";
	
	ЛичныеВычеты = Запрос.Выполнить().Выгрузить();
	ЛичныеВычеты.Индексы.Добавить(ПоляПоиска);
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	
	Для Каждого СтрокаРезультат Из РезультатыРасчетов Цикл
		Если Не ЗначениеЗаполнено(СтрокаРезультат.КатегорияДохода) Тогда
			СтрокаРезультат.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаРезультат.ПримененныйВычетЛичный) Тогда
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаРезультат);
			СтруктураПоиска.МесяцНалоговогоПериода = НачалоМесяца(СтруктураПоиска.МесяцНалоговогоПериода);
			НайденныеСтроки = ЛичныеВычеты.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				СтрокаРезультат.КодВычетаЛичный = НайденныеСтроки[0].КодВычета;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаРезультат.КодВычетаЛичный) Тогда
				Для каждого СтрокаВычетов Из СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоиска) Цикл
					Если ЗначениеЗаполнено(СтрокаВычетов.КодВычетаЛичный) Тогда
						СтрокаРезультат.КодВычетаЛичный = СтрокаВычетов.КодВычетаЛичный;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдаляемыеВТ);
	
	ВписатьВРезультатЗачтенныеАвансы(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "НалогПоСтавке13", "ЗачтеноАвансовыхПлатежейПоСтавке13", ИсключатьДоходыРегистратора, МенеджерВременныхТаблиц);
	
	Возврат РезультатыРасчетов;
	
КонецФункции

// Для расчета налога в "межрасчетном" варианте обеспечивает неотрицательность налога, вписываемого в документ.
//
// Параметры:
//      РезультатыРасчетов - ТаблицаЗначений - таблица значений, содержащая будущий результат работы метода РассчитатьНалогПоОсновнойСтавке().
//		МежрасчетныйНДФЛ - ТаблицаЗначений - таблица значений, содержащая посчитанный налог по физическому лицу с учетом всех перерасчетов.
//		ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен.
//		МесяцРасчета - дата -
//
Процедура ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультат(РезультатыРасчетов, МежрасчетныйНДФЛ, ДатаУдержанияИсчисленногоНалога, МесяцРасчета) 
	
	ТекущийПериод = НачалоМесяца(?(ЗначениеЗаполнено(ДатаУдержанияИсчисленногоНалога), ДатаУдержанияИсчисленногоНалога, МесяцРасчета));
	СтруктураПоискаТекущегоНДФЛ = Новый Структура("МесяцНалоговогоПериодаДляПоиска", ТекущийПериод);
	
	Если МежрасчетныйНДФЛ.Колонки.Найти("МесяцНалоговогоПериодаДляПоиска") = Неопределено Тогда
		МежрасчетныйНДФЛ.Колонки.Добавить("МесяцНалоговогоПериодаДляПоиска", Новый ОписаниеТипов("Дата"));
	КонецЕсли;
	Для каждого СтрокаДанных Из МежрасчетныйНДФЛ Цикл
		Если ЗначениеЗаполнено(СтрокаДанных.МесяцНалоговогоПериода) Тогда
			СтрокаДанных.МесяцНалоговогоПериодаДляПоиска = НачалоМесяца(СтрокаДанных.МесяцНалоговогоПериода)
		КонецЕсли;
	КонецЦикла;
	
	НДФЛТекущегоПериода = МежрасчетныйНДФЛ.Скопировать(СтруктураПоискаТекущегоНДФЛ);
	НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериода.Итог("НалогПоСтавке13");
	Если НДФЛТекущегоПериодаВсего < 0 Тогда // произошел перерасчет обязательств текущего периода из-за изменения данных "задним" числом
		Возврат
	КонецЕсли;
		
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НДФЛТекущегоПериода, РезультатыРасчетов);
	МежрасчетныйНДФЛ.Сортировать("МесяцНалоговогоПериода Убыв");
	// Налоги предыдущих периодов добавляем в пределах положительного налога текущего периода,
	// не допуская возврата налога.
	Для каждого СтрокаДанных Из МежрасчетныйНДФЛ Цикл
		Если СтрокаДанных.МесяцНалоговогоПериодаДляПоиска = ТекущийПериод Тогда
			Продолжить;
		КонецЕсли;
		Если НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13 >= 0 Тогда
			ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаДанных);
			НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13;
		ИначеЕсли НДФЛТекущегоПериодаВсего > 0 Тогда
			НоваяСтрока = РезультатыРасчетов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
			НоваяСтрока.НалогПоСтавке13 = - НДФЛТекущегоПериодаВсего;
			НДФЛТекущегоПериодаВсего = 0
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Предназначена для дополнения рассчитанных сумм НДФЛ информацией о суммах подлежащих зачету авансовых платежей.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор, для которого выполняется обработка исчисленного НДФЛ.
//		Организация - СправочникСсылка.Организации -
//		МесяцРасчета
//		РезультатыРасчетов - ТаблицаЗначений - с колонками
//				ФизическоеЛицо: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации
//              колонки сумм исчисленного налога и сумм авансов к зачету, их имена передаются дополнительно
//				может содержать другие колонки
//		СтавкаНалога - ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента
//		ИмяКолонкиНалогаИсчисленного - строка -
//		ИмяКолонкиАвансаЗачтенного - строка -
//		ИсключатьДвиженияРегистратора - булево - признак того, надо ли при расчете исключать движения.
//
Процедура ВписатьВРезультатЗачтенныеАвансы(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, СтавкаНалога, ИмяКолонкиНалогаИсчисленного, ИмяКолонкиАвансаЗачтенного, ИсключатьДвиженияРегистратора = Истина, МенеджерВременныхТаблиц = Неопределено) Экспорт 

	Если МесяцРасчета < ДатаИзмененияНалогообложенияДивидендов() Тогда
		Возврат
	КонецЕсли;
	
	ВсегоИсчислено = РезультатыРасчетов.Скопировать(, "ФизическоеЛицо, МесяцНалоговогоПериода, " + ИмяКолонкиНалогаИсчисленного);
	Если ВсегоИсчислено.Колонки.Найти("НалоговыйПериод") <> Неопределено Тогда
		ВсегоИсчислено.Колонки.Удалить("НалоговыйПериод");
	КонецЕсли;
	ВсегоИсчислено.Колонки.Добавить("НалоговыйПериод");
	
	Для Каждого СтрокаРезульта Из ВсегоИсчислено Цикл
		СтрокаРезульта.НалоговыйПериод = Год(СтрокаРезульта.МесяцНалоговогоПериода);
	КонецЦикла;
	
	ВсегоИсчислено.Свернуть("ФизическоеЛицо, НалоговыйПериод", ИмяКолонкиНалогаИсчисленного);
	ВсегоИсчислено.Колонки[ИмяКолонкиНалогаИсчисленного].Имя = "Исчислено";
	
	КоличествоСтрок = ВсегоИсчислено.Количество();
	МинимальныйГод = 3999;
	МаксимальныйГод = 0;
	Для ИндексСтроки = 1 По КоличествоСтрок Цикл
		СтрокаРезульта = ВсегоИсчислено[КоличествоСтрок - ИндексСтроки];
		Если СтрокаРезульта.Исчислено <= 0 Тогда
			ВсегоИсчислено.Удалить(СтрокаРезульта);
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРезульта.НалоговыйПериод > МаксимальныйГод Тогда
			МаксимальныйГод = СтрокаРезульта.НалоговыйПериод;
		КонецЕсли;
		
		Если СтрокаРезульта.НалоговыйПериод < МинимальныйГод Тогда
			МинимальныйГод = СтрокаРезульта.НалоговыйПериод;
		КонецЕсли;
		
	КонецЦикла;
	
	СписокФизическихЛиц = ВсегоИсчислено.ВыгрузитьКолонку("ФизическоеЛицо");
	
	Запрос = Новый Запрос;
	Если МенеджерВременныхТаблиц <> Неопределено Тогда
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Иначе
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;	
	
	ЗарплатаКадры.СоздатьПустуюВТ(Запрос.МенеджерВременныхТаблиц, "РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ");
	
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДвиженияРегистратора, Регистратор, Неопределено));
	Запрос.УстановитьПараметр("СписокФизическихЛиц", СписокФизическихЛиц);
	Запрос.УстановитьПараметр("МинимальныйГод", МинимальныйГод);
	Запрос.УстановитьПараметр("МаксимальныйГод",МаксимальныйГод);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета",КонецМесяца(МесяцРасчета) + 1);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Авансы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Авансы.НалоговыйПериод КАК НалоговыйПериод,
	|	СУММА(Авансы.Остаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.Год КАК НалоговыйПериод,
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.СуммаОстаток КАК Остаток
	|	ИЗ
	|		РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ.Остатки(
	|				&КонецМесяцаРасчета,
	|				ФизическоеЛицо В (&СписокФизическихЛиц)
	|					И (Год МЕЖДУ &МинимальныйГод И &МаксимальныйГод)
	|					И ГоловнаяОрганизация = &ГоловнаяОрганизация) КАК АвансовыеПлатежиИностранцевПоНДФЛОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРегистратора.ФизическоеЛицо,
	|		ДвиженияРегистратора.Год,
	|		ВЫБОР
	|			КОГДА ДвиженияРегистратора.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДвиженияРегистратора.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ КАК ДвиженияРегистратора
	|	ГДЕ
	|		ДвиженияРегистратора.Регистратор = &ИсключаемыйРегистратор
	|		И ДвиженияРегистратора.Год МЕЖДУ &МинимальныйГод И &МаксимальныйГод
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРегистратора.ФизическоеЛицо,
	|		ДвиженияРегистратора.Год,
	|		ВЫБОР
	|			КОГДА ДвиженияРегистратора.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДвиженияРегистратора.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТРегистрНакопления_АвансовыеПлатежиИностранцевПоНДФЛ КАК ДвиженияРегистратора
	|	ГДЕ
	|		ДвиженияРегистратора.Год МЕЖДУ &МинимальныйГод И &МаксимальныйГод
	|		И ДвиженияРегистратора.ФизическоеЛицо В(&СписокФизическихЛиц)) КАК Авансы
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.ФизическоеЛицо,
	|	Авансы.НалоговыйПериод
	|
	|ИМЕЮЩИЕ
	|	СУММА(Авансы.Остаток) > 0";
		
	Авансы = Запрос.Выполнить().Выгрузить();
	
	Если Авансы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Авансы.Индексы.Добавить("ФизическоеЛицо, НалоговыйПериод");
	ВсегоИсчислено.Индексы.Добавить("ФизическоеЛицо, НалоговыйПериод");
	
	РезультатыРасчетов.Сортировать("ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение");
	
	СуммаКЗачету = 0;
	НалоговыйПериод = 0; ФизическоеЛицо = Неопределено;
	ПараметрыОтбора = Новый Структура("ФизическоеЛицо, НалоговыйПериод");
	Для Каждого СтрокаТЗ Из РезультатыРасчетов Цикл
		
		Если ФизическоеЛицо <> СтрокаТЗ.ФизическоеЛицо Или НалоговыйПериод <> Год(СтрокаТЗ.МесяцНалоговогоПериода) Тогда
			ФизическоеЛицо = СтрокаТЗ.ФизическоеЛицо;
			НалоговыйПериод = Год(СтрокаТЗ.МесяцНалоговогоПериода);
			
			ПараметрыОтбора.ФизическоеЛицо = ФизическоеЛицо;
			ПараметрыОтбора.НалоговыйПериод = НалоговыйПериод;
			
			СтрокиАвансов = Авансы.НайтиСтроки(ПараметрыОтбора);
			СтрокиИсчислено = ВсегоИсчислено.НайтиСтроки(ПараметрыОтбора);
			
			СуммаАвансов = ?(СтрокиАвансов.Количество() > 0, СтрокиАвансов[0].Остаток, 0);
			СуммаИсчислено = ?(СтрокиИсчислено.Количество() > 0, СтрокиИсчислено[0].Исчислено, 0);
			
			Если СуммаИсчислено > СуммаАвансов Тогда
				СуммаКЗачету = СуммаАвансов;
			Иначе
				СуммаКЗачету = СуммаИсчислено;
			КонецЕсли;
		КонецЕсли;
		
		Если СуммаКЗачету = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТЗ[ИмяКолонкиНалогаИсчисленного] * СуммаКЗачету > 0 Тогда
			Если СуммаКЗачету > 0 Тогда
				СтрокаТЗ[ИмяКолонкиАвансаЗачтенного] = Мин(СтрокаТЗ[ИмяКолонкиНалогаИсчисленного],СуммаКЗачету);
			Иначе
				СтрокаТЗ[ИмяКолонкиАвансаЗачтенного] = Макс(СтрокаТЗ[ИмяКолонкиНалогаИсчисленного],СуммаКЗачету);
			КонецЕсли;
			СуммаКЗачету = СуммаКЗачету - СтрокаТЗ[ИмяКолонкиАвансаЗачтенного];
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Устарела, ничего не делает, описание оставлено для совместимости.
// Предназначена для дополнения рассчитанных сумм НДФЛ информацией о суммах, подлежащих зачету в счет будущих платежей.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор, для которого выполняется обработка исчисленного НДФЛ.
//		Организация - СправочникСсылка.Организации -
//		МесяцРасчета
//		РезультатыРасчетов - ТаблицаЗначений - с колонками
//				ФизическоеЛицо: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации
//              колонки сумм исчисленного налога и сумм налога к зачету/возврату, их имена передаются дополнительно
//				может содержать другие колонки
//		СтавкаНалога - ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента
//		ИмяКолонкиНалогаИсчисленного - строка -
//		ИмяКолонкиАвансаЗачтенного - строка -
//		ИмяКолонкиНалогаКЗачетуВозврату - строка -
//		ИсключатьДвиженияРегистратора - булево - признак того, надо ли при расчете исключать движения.
//		ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//		                               (соответствует значению Истина).
//		ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по
//		                                         Регистратору.
//
Процедура ВписатьВРезультатНалогиКЗачетуВозврату(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, СтавкаНалога, ИмяКолонкиНалогаИсчисленного, ИмяКолонкиАвансаЗачтенного, ИмяКолонкиНалогаКЗачетуВозврату, ИсключатьДвиженияРегистратора = Истина, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт 
	
	Возврат	
	
КонецПроцедуры

// Предназначена для выделения сумм НДФЛ, которые следует учесть в расчетах с сотрудниками
// Параметры:
//		РезультатыРасчетов - ТаблицаЗначений - с колонками
//				ФизическоеЛицо: должно быть непустым
//              колонки сумм исчисленного налога и сумм зачтенных авансовых платежей (для работающих по патенту), их имена передаются дополнительно
//				может содержать другие колонки
//		ИмяКолонкиНалогаИсчисленного - строка -
//		ИмяКолонкиАвансаЗачтенного - строка -
//
//  Возвращаемое значение - таблица значений с колонками
//			ФизическоеЛицо
//			Налог - общая сумма налога по физ.лицу 
//
Функция ИсчисленныйНалогФизическихЛицПоРезультатамРасчета(РезультатыРасчетов, ИмяКолонкиНалогаИсчисленного = "НалогПоСтавке13", ИмяКолонкиАвансаЗачтенного = "ЗачтеноАвансовыхПлатежейПоСтавке13") Экспорт

	Налоги = РезультатыРасчетов.Скопировать(, "ФизическоеЛицо," + ИмяКолонкиНалогаИсчисленного + "," + ИмяКолонкиАвансаЗачтенного);
	Налоги.Свернуть("ФизическоеЛицо", ИмяКолонкиНалогаИсчисленного + "," + ИмяКолонкиАвансаЗачтенного);
	Налоги.Колонки.Добавить("Налог", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Для каждого СтрокаТЗ Из Налоги Цикл
		СтрокаТЗ.Налог = СтрокаТЗ[ИмяКолонкиНалогаИсчисленного] - СтрокаТЗ[ИмяКолонкиАвансаЗачтенного]
	КонецЦикла;
	
	Налоги.Колонки.Удалить(ИмяКолонкиНалогаИсчисленного);
	Налоги.Колонки.Удалить(ИмяКолонкиАвансаЗачтенного);
	
	Возврат Налоги

КонецФункции

// Определяем, каким алгоритмом регистрирует доходы документ-регистратор, и вписываем в движения.
//      	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Регистратор - ДокументСсылка - 
//
Процедура ПроставитьПорядокУчетаДоходовВ6НДФЛ(Движения, Регистратор) Экспорт 

	Если Не ЗначениеЗаполнено(Регистратор) Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ КАК УчитыватьВыплаченныйДоходВ6НДФЛ
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = &ДокументОснование
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)";
	Запрос.УстановитьПараметр("ДокументОснование", Регистратор);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		УчитыватьВыплаченныйДоходИзНалогов = Истина;
	Иначе
		Выборка = Результат.Выбрать(); 
		Выборка.Следующий();
		УчитыватьВыплаченныйДоходИзНалогов = Выборка.УчитыватьВыплаченныйДоходВ6НДФЛ;
	КонецЕсли;
	
	Для каждого Движение Из Движения.СведенияОДоходахНДФЛ Цикл
		Движение.НеУчитыватьДоходВ6НДФЛ = УчитыватьВыплаченныйДоходИзНалогов
	КонецЦикла;
	
КонецПроцедуры

// Вписывает в переданную временную таблицу ВТНалогУдержанный колонки СуммаВыплаченногоДохода и СуммаОтпускныхБольничных 
// (из общей суммы выплат), содержащую сумму дохода из учета по НДФЛ, соответствующего тому, что реально выплатили.
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - должен содержать временные таблицы 
//      	ВТСписокСотрудников, с данными о выплатах вида:
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты.
//          	ДокументОснование, необязательная
//          	СуммаНачисленная, необязательная
//          	СуммаВыплаченная, необязательная, 
//			Если колонки СуммаНачисленная, СуммаВыплаченная отсутствуют, возможная частичная выплата не будет учтена.
//			ВТНалогУдержанный с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации.
//				КодДохода
//				КатегорияДохода
//				Сумма
//				РегистрацияВНалоговомОргане, тип СправочникСсылка.РегистрацииВНалоговомОргане 
//				ДокументОснование
//				ВключатьВДекларациюПоНалогуНаПрибыль
//		Регистратор - ДокументСсылка - документ выплаты
//
Процедура ВписатьСуммыВыплаченногоДоходаВУдержанныеНалоги(МенеджерВременныхТаблиц, Регистратор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	ТекстЗапроса =  
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо,
	|	СписокСотрудников.ДокументОснование КАК ДокументОснование,
	|	СписокСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СписокСотрудников.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(СписокСотрудников.СуммаНачисленная) КАК СуммаНачисленная,
	|	СУММА(СписокСотрудников.СуммаВыплаченная) КАК СуммаВыплаченная,
	|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТВыплаченоПоИФ
	|ИЗ
	|	ВТСписокСотрудников КАК СписокСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.СтатьяФинансирования,
	|	СписокСотрудников.СтатьяРасходов,
	|	СписокСотрудников.ДокументОснование,
	|	СписокСотрудников.ФизическоеЛицо";
	КолонкиРезультата = МенеджерВременныхТаблиц.Таблицы["ВТСписокСотрудников"].Колонки;
	Если КолонкиРезультата.Найти("ДокументОснование") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокСотрудников.ДокументОснование","НЕОПРЕДЕЛЕНО") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СуммаНачисленная") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокСотрудников.СуммаНачисленная","0") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СуммаВыплаченная") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокСотрудников.СуммаВыплаченная","0") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СтатьяФинансирования") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокСотрудников.СтатьяФинансирования","НЕОПРЕДЕЛЕНО") 
	КонецЕсли;
	Если КолонкиРезультата.Найти("СтатьяРасходов") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокСотрудников.СтатьяРасходов","НЕОПРЕДЕЛЕНО") 
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокСотрудников.ДокументОснование КАК ДокументОснование,
	|	СУММА(СписокСотрудников.СуммаНачисленная) КАК СуммаНачисленная,
	|	СУММА(СписокСотрудников.СуммаВыплаченная) КАК СуммаВыплаченная,
	|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТВыплаченоПоВедомости
	|ИЗ
	|	ВТВыплаченоПоИФ КАК СписокСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ДокументОснование,
	|	СписокСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Налоги.КодДохода КАК КодДохода,
	|	Налоги.КатегорияДохода КАК КатегорияДохода,
	|	Налоги.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Налоги.Подразделение КАК Подразделение,
	|	Налоги.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	Налоги.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Налоги.ДокументОснование КАК ДокументОснование,
	|	СУММА(Налоги.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТДанныеОНалогах
	|ИЗ
	|	ВТНалогУдержанный КАК Налоги
	|
	|СГРУППИРОВАТЬ ПО
	|	Налоги.ФизическоеЛицо,
	|	Налоги.СтавкаНалогообложенияРезидента,
	|	Налоги.МесяцНалоговогоПериода,
	|	Налоги.Подразделение,
	|	Налоги.КодДохода,
	|	Налоги.КатегорияДохода,
	|	Налоги.РегистрацияВНалоговомОргане,
	|	Налоги.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Налоги.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНалогУдержанный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(СписокСотрудников.СуммаНачисленная) КАК СуммаНачисленная,
	|	СУММА(СписокСотрудников.СуммаВыплаченная) КАК СуммаВыплаченная,
	|	МАКСИМУМ(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСуммыВыплатыБезОснований
	|ИЗ
	|	ВТВыплаченоПоВедомости КАК СписокСотрудников
	|ГДЕ
	|	СписокСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТВыплаченоПоВедомости КАК СписокСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.ДокументОснование = НЕОПРЕДЕЛЕНО
	|			ТОГДА СведенияОДоходахНДФЛ.Регистратор
	|		ИНАЧЕ СведенияОДоходахНДФЛ.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|			ТОГДА СведенияОДоходахНДФЛ.СуммаВычета
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года = ""2012""
	|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
	|		КОГДА СведенияОДоходахНДФЛ.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года = ""2300""
	|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОтпускныхБольничных,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
	|				ТОГДА 0
	|			КОГДА СведенияОДоходахНДФЛ.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ТОГДА ВЫБОР
	|						КОГДА ВыплаченоПоИФ.СуммаНачисленная = 0
	|							ТОГДА 1
	|						КОГДА ВыплаченоПоИФ.СуммаНачисленная < 0
	|								И ВыплаченоПоИФ.СуммаВыплаты = ВыплаченоПоИФ.СуммаНачисленная
	|							ТОГДА 1
	|						КОГДА ВыплаченоПоИФ.СуммаВыплаченная + ВыплаченоПоИФ.СуммаВыплаты > ВыплаченоПоИФ.СуммаНачисленная * 0.9
	|							ТОГДА 1
	|						КОГДА ВыплаченоПоИФ.СуммаВыплаченная + ВыплаченоПоИФ.СуммаВыплаты <= ВыплаченоПоИФ.СуммаНачисленная * 0.1
	|							ТОГДА 0
	|						КОГДА ВыплаченоПоИФ.СуммаВыплаченная ЕСТЬ НЕ NULL 
	|							ТОГДА (ВыплаченоПоИФ.СуммаВыплаченная + ВыплаченоПоИФ.СуммаВыплаты) / ВыплаченоПоИФ.СуммаНачисленная
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОГДА ВыплаченоПоВедомости.СуммаНачисленная = 0
	|				ТОГДА 1
	|			КОГДА ВыплаченоПоВедомости.СуммаНачисленная < 0
	|					И ВыплаченоПоВедомости.СуммаВыплаты = ВыплаченоПоВедомости.СуммаНачисленная
	|				ТОГДА 1
	|			КОГДА ВыплаченоПоВедомости.СуммаВыплаченная + ВыплаченоПоВедомости.СуммаВыплаты > ВыплаченоПоВедомости.СуммаНачисленная * 0.9
	|				ТОГДА 1
	|			КОГДА ВыплаченоПоВедомости.СуммаВыплаченная + ВыплаченоПоВедомости.СуммаВыплаты <= ВыплаченоПоВедомости.СуммаНачисленная * 0.1
	|				ТОГДА 0
	|			КОГДА ВыплаченоПоВедомости.СуммаВыплаченная ЕСТЬ НЕ NULL 
	|				ТОГДА (ВыплаченоПоВедомости.СуммаВыплаченная + ВыплаченоПоВедомости.СуммаВыплаты) / ВыплаченоПоВедомости.СуммаНачисленная
	|			КОГДА СуммыВыплатыБезОснований.СуммаНачисленная = 0
	|				ТОГДА 1
	|			КОГДА СуммыВыплатыБезОснований.СуммаВыплаченная + СуммыВыплатыБезОснований.СуммаВыплаты > СуммыВыплатыБезОснований.СуммаНачисленная * 0.9
	|				ТОГДА 1
	|			КОГДА СуммыВыплатыБезОснований.СуммаВыплаченная + СуммыВыплатыБезОснований.СуммаВыплаты <= СуммыВыплатыБезОснований.СуммаНачисленная * 0.1
	|				ТОГДА 0
	|			ИНАЧЕ (СуммыВыплатыБезОснований.СуммаВыплаченная + СуммыВыплатыБезОснований.СуммаВыплаты) / СуммыВыплатыБезОснований.СуммаНачисленная
	|		КОНЕЦ, 1) КАК ДоляВыплаты,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА СведенияОДоходахНДФЛ.КодДохода
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|	КОНЕЦ КАК КодДохода,
	|	СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ КАК НеУчитыватьДоходВ6НДФЛ,
	|	СведенияОДоходахНДФЛ.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК УчитыватьСтатьиФинансирования
	|ПОМЕСТИТЬ ВТСтрокиДоходов
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыплаченоПоВедомости КАК ВыплаченоПоВедомости
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ВыплаченоПоВедомости.ФизическоеЛицо
	|			И СведенияОДоходахНДФЛ.Регистратор = ВыплаченоПоВедомости.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыплаченоПоИФ КАК ВыплаченоПоИФ
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ВыплаченоПоИФ.ФизическоеЛицо
	|			И СведенияОДоходахНДФЛ.Регистратор = ВыплаченоПоИФ.ДокументОснование
	|			И СведенияОДоходахНДФЛ.СтатьяФинансирования = ВыплаченоПоИФ.СтатьяФинансирования
	|			И СведенияОДоходахНДФЛ.СтатьяРасходов = ВыплаченоПоИФ.СтатьяРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛица КАК ФизическиеЛица
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ФизическиеЛица.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыВыплатыБезОснований КАК СуммыВыплатыБезОснований
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СуммыВыплатыБезОснований.ФизическоеЛицо
	|			И (СуммыВыплатыБезОснований.СуммаВыплаты > 0)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СведенияОДоходахНДФЛ.ДокументОснование = НЕОПРЕДЕЛЕНО
	|				ТОГДА СведенияОДоходахНДФЛ.Регистратор
	|			ИНАЧЕ СведенияОДоходахНДФЛ.ДокументОснование
	|		КОНЕЦ В
	|			(ВЫБРАТЬ
	|				ИсходныеДанные.ДокументОснование
	|			ИЗ
	|				ВТДанныеОНалогах КАК ИсходныеДанные
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ИсходныеДанные.ДокументОснование
	|			ИЗ
	|				ВТВыплаченоПоВедомости КАК ИсходныеДанные)
	|	И СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета <> 0
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|	И ФизическиеЛица.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.ДокументОснование КАК ДокументОснование,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
	|	СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	СУММА(СведенияОДоходахНДФЛ.СуммаОтпускныхБольничных) КАК ВаловаяСуммаОтпускныхБольничных,
	|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК ВаловаяСуммаДохода,
	|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета) КАК ВаловаяСуммаОблагаемогоДохода,
	|	СведенияОДоходахНДФЛ.ДоляВыплаты * СУММА(СведенияОДоходахНДФЛ.СуммаОтпускныхБольничных) КАК СуммаОтпускныхБольничных,
	|	СведенияОДоходахНДФЛ.ДоляВыплаты * СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
	|	СведенияОДоходахНДФЛ.ДоляВыплаты * СУММА(СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета) КАК СуммаОблагаемогоДохода,
	|	СведенияОДоходахНДФЛ.ДоляВыплаты КАК ДоляВыплаты,
	|	СведенияОДоходахНДФЛ.УчитыватьСтатьиФинансирования КАК УчитыватьСтатьиФинансирования
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	ВТСтрокиДоходов КАК СведенияОДоходахНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.ДокументОснование,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.ДоляВыплаты,
	|	СведенияОДоходахНДФЛ.УчитыватьСтатьиФинансирования,
	|	СведенияОДоходахНДФЛ.КатегорияДохода
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СведенияОДоходахНДФЛ.СуммаОтпускныхБольничных) <> 0
	|		ИЛИ СУММА(СведенияОДоходахНДФЛ.СуммаДохода) <> 0
	|		ИЛИ СУММА(СведенияОДоходахНДФЛ.СуммаВычета) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиДоходов.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(СтрокиДоходов.НеУчитыватьДоходВ6НДФЛ) КАК НеУчитыватьДоходВ6НДФЛ
	|ПОМЕСТИТЬ ВТДокументыОснования
	|ИЗ
	|	ВТСтрокиДоходов КАК СтрокиДоходов
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиДоходов.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления КАК СрокПеречисления,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода
	|ПОМЕСТИТЬ ВТРасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ИЗ
	|	ВТДокументыОснования КАК ВТДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО ВТДокументыОснования.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Доходы.ДокументОснование КАК ДокументОснование,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Доходы.КодДохода КАК КодДохода,
	|	Доходы.КатегорияДохода КАК КатегорияДохода,
	|	Доходы.Подразделение КАК Подразделение,
	|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода) КАК СуммаВыплаченногоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.СуммаДохода = 0
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода
	|			ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода / Доходы.СуммаДохода * Доходы.СуммаОблагаемогоДохода
	|		КОНЕЦ) КАК СуммаОблагаемогоДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления КАК СрокПеречисления,
	|	Доходы.УчитыватьСтатьиФинансирования КАК УчитыватьСтатьиФинансирования
	|ПОМЕСТИТЬ ВТЗарегистрированоРанее
	|ИЗ
	|	(ВЫБРАТЬ
	|		Доходы.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		Доходы.ДокументОснование КАК ДокументОснование,
	|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Доходы.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|		Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|		Доходы.КодДохода КАК КодДохода,
	|		Доходы.Подразделение КАК Подразделение,
	|		СУММА(Доходы.СуммаОблагаемогоДохода) КАК СуммаОблагаемогоДохода,
	|		СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
	|		Доходы.УчитыватьСтатьиФинансирования КАК УчитыватьСтатьиФинансирования,
	|		Доходы.КатегорияДохода КАК КатегорияДохода
	|	ИЗ
	|		ВТДоходы КАК Доходы
	|	ГДЕ
	|		Доходы.ДоляВыплаты > 0
	|		И Доходы.УчитыватьСтатьиФинансирования
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Доходы.ГоловнаяОрганизация,
	|		Доходы.ДокументОснование,
	|		Доходы.ФизическоеЛицо,
	|		Доходы.СтавкаНалогообложения,
	|		Доходы.РегистрацияВНалоговомОргане,
	|		Доходы.ДатаПолученияДохода,
	|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|		Доходы.КодДохода,
	|		Доходы.Подразделение,
	|		Доходы.УчитыватьСтатьиФинансирования,
	|		Доходы.КатегорияДохода) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО Доходы.ГоловнаяОрганизация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация
	|			И Доходы.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И Доходы.СтавкаНалогообложения = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента
	|			И Доходы.ДатаПолученияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|			И Доходы.КодДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода
	|			И Доходы.РегистрацияВНалоговомОргане = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане
	|			И Доходы.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|			И Доходы.ВключатьВДекларациюПоНалогуНаПрибыль = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И Доходы.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|			И Доходы.КатегорияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ГоловнаяОрганизация,
	|	Доходы.ДокументОснование,
	|	Доходы.ФизическоеЛицо,
	|	Доходы.СтавкаНалогообложения,
	|	Доходы.РегистрацияВНалоговомОргане,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Доходы.КодДохода,
	|	Доходы.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления,
	|	Доходы.УчитыватьСтатьиФинансирования,
	|	Доходы.КатегорияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументамОснованиям.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДокументамОснованиям.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	ДокументамОснованиям.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	ДокументамОснованиям.Подразделение КАК Подразделение,
	|	ДокументамОснованиям.КатегорияДохода КАК КатегорияДохода,
	|	ДокументамОснованиям.КодДохода КАК КодДохода,
	|	ДокументамОснованиям.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДокументамОснованиям.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ДокументамОснованиям.ДокументОснование КАК ДокументОснование,
	|	СУММА(ДокументамОснованиям.СуммаДохода) КАК СуммаДохода,
	|	СУММА(ДокументамОснованиям.СуммаОблагаемогоДохода) КАК СуммаОблагаемогоДохода,
	|	СУММА(ДокументамОснованиям.СуммаОтпускныхБольничных) КАК СуммаОтпускныхБольничных,
	|	МИНИМУМ(ДокументамОснованиям.УчитыватьСтатьиФинансирования) КАК УчитыватьСтатьиФинансирования
	|ПОМЕСТИТЬ ВТОстаткиВыплаченныхСумм
	|ИЗ
	|	(ВЫБРАТЬ
	|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Доходы.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|		Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|		Доходы.Подразделение КАК Подразделение,
	|		Доходы.КатегорияДохода КАК КатегорияДохода,
	|		Доходы.КодДохода КАК КодДохода,
	|		Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|		Доходы.ДокументОснование КАК ДокументОснование,
	|		Доходы.ВаловаяСуммаДохода КАК СуммаДохода,
	|		Доходы.ВаловаяСуммаОблагаемогоДохода КАК СуммаОблагаемогоДохода,
	|		Доходы.ВаловаяСуммаОтпускныхБольничных КАК СуммаОтпускныхБольничных,
	|		Доходы.УчитыватьСтатьиФинансирования КАК УчитыватьСтатьиФинансирования
	|	ИЗ
	|		ВТДоходы КАК Доходы
	|	ГДЕ
	|		Доходы.УчитыватьСтатьиФинансирования
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗарегистрированоРанее.ФизическоеЛицо,
	|		ЗарегистрированоРанее.СтавкаНалогообложения,
	|		ЗарегистрированоРанее.ДатаПолученияДохода,
	|		ЗарегистрированоРанее.Подразделение,
	|		ЗарегистрированоРанее.КатегорияДохода,
	|		ЗарегистрированоРанее.КодДохода,
	|		ЗарегистрированоРанее.РегистрацияВНалоговомОргане,
	|		ЗарегистрированоРанее.ВключатьВДекларациюПоНалогуНаПрибыль,
	|		ЗарегистрированоРанее.ДокументОснование,
	|		-ЗарегистрированоРанее.СуммаВыплаченногоДохода,
	|		-ЗарегистрированоРанее.СуммаОблагаемогоДохода,
	|		ВЫБОР
	|			КОГДА ЗарегистрированоРанее.СрокПеречисления = ЗНАЧЕНИЕ(Перечисление.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные)
	|				ТОГДА -ЗарегистрированоРанее.СуммаВыплаченногоДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ЗарегистрированоРанее.УчитыватьСтатьиФинансирования
	|	ИЗ
	|		ВТЗарегистрированоРанее КАК ЗарегистрированоРанее) КАК ДокументамОснованиям
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументамОснованиям.ФизическоеЛицо,
	|	ДокументамОснованиям.СтавкаНалогообложения,
	|	ДокументамОснованиям.ДатаПолученияДохода,
	|	ДокументамОснованиям.Подразделение,
	|	ДокументамОснованиям.КодДохода,
	|	ДокументамОснованиям.РегистрацияВНалоговомОргане,
	|	ДокументамОснованиям.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ДокументамОснованиям.ДокументОснование,
	|	ДокументамОснованиям.КатегорияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Доходы.ДокументОснование КАК ДокументОснование,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Доходы.КатегорияДохода КАК КатегорияДохода,
	|	Доходы.КодДохода КАК КодДохода,
	|	Доходы.Подразделение КАК Подразделение,
	|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода) КАК СуммаВыплаченногоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.СуммаДохода = 0
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода
	|			ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода / Доходы.СуммаДохода * Доходы.СуммаОблагаемогоДохода
	|		КОНЕЦ) КАК СуммаОблагаемогоДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления КАК СрокПеречисления
	|ПОМЕСТИТЬ ВТРанееЗарегистрированоВЦелом
	|ИЗ
	|	ВТДоходы КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО Доходы.ГоловнаяОрганизация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация
	|			И Доходы.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И Доходы.СтавкаНалогообложения = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента
	|			И Доходы.ДатаПолученияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|			И Доходы.КодДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода
	|			И Доходы.РегистрацияВНалоговомОргане = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане
	|			И Доходы.Подразделение = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|			И Доходы.ВключатьВДекларациюПоНалогуНаПрибыль = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И Доходы.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|			И Доходы.КатегорияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|ГДЕ
	|	Доходы.ДоляВыплаты > 0
	|	И НЕ Доходы.УчитыватьСтатьиФинансирования
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ГоловнаяОрганизация,
	|	Доходы.ДокументОснование,
	|	Доходы.ФизическоеЛицо,
	|	Доходы.СтавкаНалогообложения,
	|	Доходы.РегистрацияВНалоговомОргане,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Доходы.КодДохода,
	|	Доходы.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления,
	|	Доходы.КатегорияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалогиИДоходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НалогиИДоходы.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НалогиИДоходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НалогиИДоходы.Подразделение КАК Подразделение,
	|	НалогиИДоходы.КатегорияДохода КАК КатегорияДохода,
	|	НалогиИДоходы.КодДохода КАК КодДохода,
	|	НалогиИДоходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НалогиИДоходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НалогиИДоходы.ДокументОснование КАК ДокументОснование,
	|	НалогиИДоходы.Сумма КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиВыплаченныхСумм.ФизическоеЛицо ЕСТЬ NULL
	|				ТОГДА НалогиИДоходы.СуммаВыплаченногоДохода
	|			КОГДА ОстаткиВыплаченныхСумм.СуммаДохода * ОстаткиВыплаченныхСумм.СуммаДохода > НалогиИДоходы.СуммаВыплаченногоДохода * НалогиИДоходы.СуммаВыплаченногоДохода
	|				ТОГДА НалогиИДоходы.СуммаВыплаченногоДохода
	|			ИНАЧЕ ОстаткиВыплаченныхСумм.СуммаДохода
	|		КОНЕЦ) КАК СуммаВыплаченногоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиВыплаченныхСумм.ФизическоеЛицо ЕСТЬ NULL
	|				ТОГДА НалогиИДоходы.СуммаОблагаемогоДохода
	|			КОГДА ОстаткиВыплаченныхСумм.СуммаОблагаемогоДохода * ОстаткиВыплаченныхСумм.СуммаОблагаемогоДохода > НалогиИДоходы.СуммаОблагаемогоДохода * НалогиИДоходы.СуммаОблагаемогоДохода
	|				ТОГДА НалогиИДоходы.СуммаОблагаемогоДохода
	|			ИНАЧЕ ОстаткиВыплаченныхСумм.СуммаОблагаемогоДохода
	|		КОНЕЦ) КАК СуммаОблагаемогоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиВыплаченныхСумм.ФизическоеЛицо ЕСТЬ NULL
	|				ТОГДА НалогиИДоходы.СуммаОтпускныхБольничных
	|			КОГДА ОстаткиВыплаченныхСумм.СуммаОтпускныхБольничных * ОстаткиВыплаченныхСумм.СуммаОтпускныхБольничных > НалогиИДоходы.СуммаОтпускныхБольничных * НалогиИДоходы.СуммаОтпускныхБольничных
	|				ТОГДА НалогиИДоходы.СуммаОтпускныхБольничных
	|			ИНАЧЕ ОстаткиВыплаченныхСумм.СуммаОтпускныхБольничных
	|		КОНЕЦ) КАК СуммаОтпускныхБольничных,
	|	ЕСТЬNULL(ДокументыОснования.НеУчитыватьДоходВ6НДФЛ, ИСТИНА) КАК УчитыватьВыплаченныйДоходВ6НДФЛ
	|ПОМЕСТИТЬ ВТНалогУдержанный
	|ИЗ
	|	(ВЫБРАТЬ
	|		Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Налоги.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|		Налоги.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		Налоги.Подразделение КАК Подразделение,
	|		Налоги.КатегорияДохода КАК КатегорияДохода,
	|		Налоги.КодДохода КАК КодДохода,
	|		Налоги.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		Налоги.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|		Налоги.ДокументОснование КАК ДокументОснование,
	|		Налоги.Сумма КАК Сумма,
	|		0 КАК СуммаВыплаченногоДохода,
	|		0 КАК СуммаОблагаемогоДохода,
	|		0 КАК СуммаОтпускныхБольничных
	|	ИЗ
	|		ВТДанныеОНалогах КАК Налоги
	|	ГДЕ
	|		Налоги.Сумма <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Доходы.ФизическоеЛицо,
	|		Доходы.СтавкаНалогообложения,
	|		Доходы.ДатаПолученияДохода,
	|		Доходы.Подразделение,
	|		Доходы.КатегорияДохода,
	|		Доходы.КодДохода,
	|		Доходы.РегистрацияВНалоговомОргане,
	|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|		Доходы.ДокументОснование,
	|		0,
	|		Доходы.СуммаДохода,
	|		Доходы.СуммаОблагаемогоДохода,
	|		Доходы.СуммаОтпускныхБольничных
	|	ИЗ
	|		ВТДоходы КАК Доходы
	|	ГДЕ
	|		Доходы.СуммаДохода <> 0
	|		И Доходы.ДоляВыплаты > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗарегистрированоРанее.ФизическоеЛицо,
	|		ЗарегистрированоРанее.СтавкаНалогообложения,
	|		ЗарегистрированоРанее.ДатаПолученияДохода,
	|		ЗарегистрированоРанее.Подразделение,
	|		ЗарегистрированоРанее.КатегорияДохода,
	|		ЗарегистрированоРанее.КодДохода,
	|		ЗарегистрированоРанее.РегистрацияВНалоговомОргане,
	|		ЗарегистрированоРанее.ВключатьВДекларациюПоНалогуНаПрибыль,
	|		ЗарегистрированоРанее.ДокументОснование,
	|		0,
	|		-ЗарегистрированоРанее.СуммаВыплаченногоДохода,
	|		-ЗарегистрированоРанее.СуммаОблагаемогоДохода,
	|		ВЫБОР
	|			КОГДА ЗарегистрированоРанее.СрокПеречисления = ЗНАЧЕНИЕ(Перечисление.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные)
	|				ТОГДА -ЗарегистрированоРанее.СуммаВыплаченногоДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТРанееЗарегистрированоВЦелом КАК ЗарегистрированоРанее) КАК НалогиИДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыОснования КАК ДокументыОснования
	|		ПО НалогиИДоходы.ДокументОснование = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиВыплаченныхСумм КАК ОстаткиВыплаченныхСумм
	|		ПО НалогиИДоходы.ДокументОснование = ОстаткиВыплаченныхСумм.ДокументОснование
	|			И НалогиИДоходы.ФизическоеЛицо = ОстаткиВыплаченныхСумм.ФизическоеЛицо
	|			И НалогиИДоходы.СтавкаНалогообложенияРезидента = ОстаткиВыплаченныхСумм.СтавкаНалогообложения
	|			И НалогиИДоходы.МесяцНалоговогоПериода = ОстаткиВыплаченныхСумм.ДатаПолученияДохода
	|			И НалогиИДоходы.Подразделение = ОстаткиВыплаченныхСумм.Подразделение
	|			И НалогиИДоходы.КодДохода = ОстаткиВыплаченныхСумм.КодДохода
	|			И НалогиИДоходы.РегистрацияВНалоговомОргане = ОстаткиВыплаченныхСумм.РегистрацияВНалоговомОргане
	|			И НалогиИДоходы.ВключатьВДекларациюПоНалогуНаПрибыль = ОстаткиВыплаченныхСумм.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И (ОстаткиВыплаченныхСумм.УчитыватьСтатьиФинансирования)
	|			И НалогиИДоходы.КатегорияДохода = ОстаткиВыплаченныхСумм.КатегорияДохода
	|
	|СГРУППИРОВАТЬ ПО
	|	НалогиИДоходы.ФизическоеЛицо,
	|	НалогиИДоходы.СтавкаНалогообложенияРезидента,
	|	НалогиИДоходы.МесяцНалоговогоПериода,
	|	НалогиИДоходы.Подразделение,
	|	НалогиИДоходы.КодДохода,
	|	НалогиИДоходы.РегистрацияВНалоговомОргане,
	|	НалогиИДоходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НалогиИДоходы.ДокументОснование,
	|	НалогиИДоходы.Сумма,
	|	ДокументыОснования.НеУчитыватьДоходВ6НДФЛ,
	|	НалогиИДоходы.КатегорияДохода";
	Запрос.Выполнить();

	УдалитьВТ = Новый Массив;
	УдалитьВТ.Добавить("ВТДоходы");
	УдалитьВТ.Добавить("ВТЗарегистрированоРанее");
	УдалитьВТ.Добавить("ВТРанееЗарегистрированоВЦелом");
	УдалитьВТ.Добавить("ВТРасчетыНалогоплательщиковСБюджетомПоНДФЛ");
	УдалитьВТ.Добавить("ВТСтрокиДоходов");
	УдалитьВТ.Добавить("ВТСуммыВыплатыБезОснований");
	УдалитьВТ.Добавить("ВТФизическиеЛица");
	УдалитьВТ.Добавить("ВТДанныеОНалогах");
	УдалитьВТ.Добавить("ВТВыплаченоПоВедомости");
	УдалитьВТ.Добавить("ВТВыплаченоПоИФ");
	УдалитьВТ.Добавить("ВТДокументыОснования");

	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

// Предназначена для расчета НДФЛ удержанного по записанным в учете данным и 
// по переданным данным о выплатах. Если в данных о выплатах присутствует информация о 
// выплатах по документам-основаниям, тогда в случае частичной оплаты дока-основания 
// сумма налога к удержанию будет уменьшена.
//
// Параметры:
//      Ссылка - ДокументСсылка - ссылка на документ-регистратор.
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		Организация
//      МенеджерТаблиц - МенеджерВременныхТаблиц, содержит вр. таблицу 
//      	ВТСписокСотрудников с полями 
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты
//          	ДокументОснование, необязательная
//          	СуммаНачисленная, необязательная
//          	СуммаВыплаченная, необязательная
//		ПериодРегистрации - дата - 
//		ОкончательныйРасчет - булево - признак того, является ли выплата, для которой рассчитывается удержанный налог, выплатой "под расчет".
//
//  Возвращает таблицу значений удержанных сумм налогов в разрезе месяцев налогового периода, ставок и документов-оснований.
//
Функция РассчитатьУдержанныеНалоги(Ссылка, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации = Неопределено, ОкончательныйРасчет = Истина) Экспорт
	
	РезультатыРасчетов = Новый ТаблицаЗначений;
	РезультатыРасчетов.Колонки.Добавить("ФизическоеЛицо",Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	РезультатыРасчетов.Колонки.Добавить("СтавкаНалогообложенияРезидента",Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
	РезультатыРасчетов.Колонки.Добавить("КодДохода",Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));               
	РезультатыРасчетов.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
	РезультатыРасчетов.Колонки.Добавить("МесяцНалоговогоПериода",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("РегистрацияВНалоговомОргане",Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	РезультатыРасчетов.Колонки.Добавить("Подразделение", Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип);
	РезультатыРасчетов.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0)));
	РезультатыРасчетов.Колонки.Добавить("НачисленоНалога",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0)));
	РезультатыРасчетов.Колонки.Добавить("ВключатьВДекларациюПоНалогуНаПрибыль",Новый ОписаниеТипов("Булево"));
	РезультатыРасчетов.Колонки.Добавить("ДокументОснование", Метаданные.ОпределяемыеТипы.ДокументыОснованияНДФЛ.Тип);
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТСписокСотрудников КАК СписокСотрудников";
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат РезультатыРасчетов
	КонецЕсли;
	
	УточненнаяДатаОперации = ?(ОкончательныйРасчет И ЗначениеЗаполнено(ПериодРегистрации), Макс(КонецМесяца(ПериодРегистрации), КонецДня(ДатаОперации)), КонецДня(ДатаОперации));
	НеОграничиватьСуммойКВыплате = УточненнаяДатаОперации >= ДатаИзмененияСроковУплатыНалога(); 
	ОтбиратьПоОснованиям = УточненнаяДатаОперации >= ДатаИзмененияСроковУплатыНалога();
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", КонецДня(УточненнаяДатаОперации));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(УточненнаяДатаОперации));
	Запрос.УстановитьПараметр("ОкончательныйРасчет", ОкончательныйРасчет);
	
	ТекстЗапроса =  
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	0 КАК СуммаНачисленная,
	|	0 КАК СуммаВыплаченная,
	|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСуммыНДФЛПоСотрудникамИДокументам
	|ИЗ
	|	ВТСписокСотрудников КАК СписокСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо";
	Если НеОграничиватьСуммойКВыплате Тогда // Сумма уд.налога пропорциональна общей выплаченной сумме.
		ТекстЗапроса =  
		"ВЫБРАТЬ
		|	СписокСотрудников.ФизическоеЛицо,
		|	СписокСотрудников.ДокументОснование КАК ДокументОснование,
		|	СУММА(СписокСотрудников.СуммаНачисленная) КАК СуммаНачисленная,
		|	СУММА(СписокСотрудников.СуммаВыплаченная) КАК СуммаВыплаченная,
		|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
		|ПОМЕСТИТЬ ВТСуммыНДФЛПоСотрудникамИДокументам
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокСотрудников.ДокументОснование,
		|	СписокСотрудников.ФизическоеЛицо";
		КолонкиРезультата = МенеджерТаблиц.Таблицы["ВТСписокСотрудников"].Колонки;
		Если КолонкиРезультата.Найти("ДокументОснование") = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокСотрудников.ДокументОснование","НЕОПРЕДЕЛЕНО") 
		КонецЕсли;
		Если КолонкиРезультата.Найти("СуммаНачисленная") = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокСотрудников.СуммаНачисленная","0") 
		КонецЕсли;
		Если КолонкиРезультата.Найти("СуммаВыплаченная") = Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокСотрудников.СуммаВыплаченная","0") 
		КонецЕсли;
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса; 
	Запрос.Выполнить();
	
	ТаблицыКУдалению = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ВТСуммыНДФЛПоСотрудникамИДокументам");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(СписокСотрудников.СуммаНачисленная) КАК СуммаНачисленная,
	|	СУММА(СписокСотрудников.СуммаВыплаченная) КАК СуммаВыплаченная,
	|	МАКСИМУМ(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСуммыВыплатыБезОснований
	|ИЗ
	|	ВТСуммыНДФЛПоСотрудникамИДокументам КАК СписокСотрудников
	|ГДЕ
	|	СписокСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСуммыНДФЛПоСотрудникам
	|ИЗ
	|	ВТСуммыНДФЛПоСотрудникамИДокументам КАК СписокСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, ДЕНЬ)) КАК ДатаНачисления,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
	|				ТОГДА -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоНалога,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА 0
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
	|				ТОГДА 0
	|			ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|		КОНЕЦ) КАК УдержаноНалога,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|		КОНЕЦ) КАК СуммаОстаток,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|				КОГДА СуммыНДФЛПоСотрудникамИДокументам.СуммаНачисленная = 0
	|					ТОГДА 1
	|				КОГДА СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаченная + СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаты > СуммыНДФЛПоСотрудникамИДокументам.СуммаНачисленная * 0.9
	|					ТОГДА 1
	|				КОГДА СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаченная ЕСТЬ НЕ NULL 
	|					ТОГДА (СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаченная + СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаты) / СуммыНДФЛПоСотрудникамИДокументам.СуммаНачисленная
	|				КОГДА СуммыВыплатыБезОснований.СуммаНачисленная = 0
	|					ТОГДА 1
	|				КОГДА СуммыВыплатыБезОснований.СуммаВыплаченная + СуммыВыплатыБезОснований.СуммаВыплаты > СуммыВыплатыБезОснований.СуммаНачисленная * 0.9
	|					ТОГДА 1
	|				ИНАЧЕ (СуммыВыплатыБезОснований.СуммаВыплаченная + СуммыВыплатыБезОснований.СуммаВыплаты) / СуммыВыплатыБезОснований.СуммаНачисленная
	|			КОНЕЦ), 1) КАК Доля,
	|	МАКСИМУМ(СуммыНДФЛПоСотрудникам.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТДанныеУчета
	|ИЗ
	|	ВТСуммыНДФЛПоСотрудникам КАК СуммыНДФЛПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыНДФЛПоСотрудникамИДокументам КАК СуммыНДФЛПоСотрудникамИДокументам
	|			ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СуммыНДФЛПоСотрудникамИДокументам.ФизическоеЛицо
	|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = СуммыНДФЛПоСотрудникамИДокументам.ДокументОснование
	|				И (СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаты > 0)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыВыплатыБезОснований КАК СуммыВыплатыБезОснований
	|			ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СуммыВыплатыБезОснований.ФизическоеЛицо
	|				И (СуммыВыплатыБезОснований.СуммаВыплаты > 0)
	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период <= &ДатаОперации)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|		КОНЕЦ) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУчета.ДатаНачисления КАК ДатаНачисления,
	|	ДанныеУчета.Период КАК Период,
	|	ДанныеУчета.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ДанныеУчета.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеУчета.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ДанныеУчета.КатегорияДохода КАК КатегорияДохода,
	|	ДанныеУчета.КодДохода КАК КодДохода,
	|	ДанныеУчета.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДанныеУчета.Организация КАК Организация,
	|	ДанныеУчета.Подразделение КАК Подразделение,
	|	ДанныеУчета.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ДанныеУчета.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ДанныеУчета.СуммаОстаток < 0
	|			ТОГДА ДанныеУчета.СуммаОстаток
	|		КОГДА ДанныеУчета.Доля = 1
	|			ТОГДА ДанныеУчета.СуммаОстаток
	|		КОГДА ДанныеУчета.СуммаОстаток <= ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога > 0
	|					ТОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА ДанныеУчета.СуммаОстаток
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога > 0
	|					ТОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаОстаток,
	|	ДанныеУчета.СуммаВыплаты КАК СуммаВыплаты,
	|	ДанныеУчета.НачисленоНалога КАК НачисленоНалога
	|ПОМЕСТИТЬ ВТПодробно
	|ИЗ
	|	ВТДанныеУчета КАК ДанныеУчета
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДанныеУчета.СуммаОстаток < 0
	|				ТОГДА ДанныеУчета.СуммаОстаток
	|			КОГДА ДанныеУчета.Доля = 1
	|				ТОГДА ДанныеУчета.СуммаОстаток
	|			КОГДА ДанныеУчета.СуммаОстаток <= ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога > 0
	|						ТОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|				ТОГДА ДанныеУчета.СуммаОстаток
	|			ИНАЧЕ ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога > 0
	|						ТОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, ДЕНЬ) КАК ДатаПолученияДохода,
	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ВТПоФизическомуЛицуНаДатуПолученияДохода
	|ИЗ
	|	ВТПодробно КАК ПодробныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодробныеДанные.ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ВТПоФизическомуЛицуЗаМесяц
	|ИЗ
	|	ВТПодробно КАК ПодробныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодробныеДанные.ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, МЕСЯЦ)";
	Запрос.Выполнить();
	
	ТаблицыКУдалению.Добавить("ВТСуммыВыплатыБезОснований");
	ТаблицыКУдалению.Добавить("ВТСуммыНДФЛПоСотрудникам");
	ТаблицыКУдалению.Добавить("ВТДанныеУчета");
	ТаблицыКУдалению.Добавить("ВТПодробно");
	ТаблицыКУдалению.Добавить("ВТПоФизическомуЛицуНаДатуПолученияДохода");
	ТаблицыКУдалению.Добавить("ВТПоФизическомуЛицуЗаМесяц");
	
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		
		Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПериодРегистрации));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода) КАК НалоговыйПериод
		|ПОМЕСТИТЬ ВТПерерасчетыПрошлыхПериодов
		|ИЗ
		|	ВТСуммыНДФЛПоСотрудникам КАК СписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода < &НачалоГода
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
		|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода)
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода) КАК НалоговыйПериод,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	МАКСИМУМ(ПодробныеДанные.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериода
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод
		|ИЗ
		|	ВТПоФизическомуЛицуЗаМесяц КАК ПодробныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|					И ПодробныеДанные.СуммаОстаток < 0
		|				ТОГДА ПодробныеДанные.СуммаОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвратПрошлыхПериодов
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицу
		|ИЗ
		|	ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод КАК ПодробныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетыПрошлыхПериодов КАК ПерерасчетыПрошлыхПериодов
		|		ПО ПодробныеДанные.ФизическоеЛицо = ПерерасчетыПрошлыхПериодов.ФизическоеЛицо
		|			И ПодробныеДанные.СтавкаНалогообложенияРезидента = ПерерасчетыПрошлыхПериодов.СтавкаНалогообложенияРезидента
		|			И ПодробныеДанные.НалоговыйПериод = ПерерасчетыПрошлыхПериодов.НалоговыйПериод
		|ГДЕ
		|	(ПодробныеДанные.СуммаОстаток > 0
		|			ИЛИ ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод КАК НалоговыйПериод,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СуммаОстаток КАК ОстатокЗаНалоговыйПериод,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.МесяцНалоговогоПериода КАК ПоследнийМесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) КАК НачалоМесяцаНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	СуммыНДФЛПоСотрудникам.КатегорияДохода КАК КатегорияДохода,
		|	СуммыНДФЛПоСотрудникам.КодДохода КАК КодДохода,
		|	СуммыНДФЛПоСотрудникам.ДокументОснование КАК ДокументОснование,
		|	СуммыНДФЛПоСотрудникам.СуммаОстаток КАК СуммаОстаток,
		|	СуммыНДФЛПоСотрудникам.НачисленоНалога КАК НачисленоНалога,
		|	СуммыНДФЛПоСотрудникам.Организация КАК Организация,
		|	СуммыНДФЛПоСотрудникам.Подразделение КАК Подразделение,
		|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СуммыНДФЛПоСотрудникам.СуммаВыплаты - ВсегоПоФизическомуЛицу.ВозвратПрошлыхПериодов КАК СуммаВыплаты,
		|	ПоФизическомуЛицуЗаМесяц.СуммаОстаток КАК СуммаЗаМесяц
		|ИЗ
		|	ВТПодробно КАК СуммыНДФЛПоСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод КАК ВсегоПоФизическомуЛицуЗаНалоговыйПериод
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетыПрошлыхПериодов КАК ПерерасчетыПрошлыхПериодов
		|			ПО ВсегоПоФизическомуЛицуЗаНалоговыйПериод.ФизическоеЛицо = ПерерасчетыПрошлыхПериодов.ФизическоеЛицо
		|				И ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СтавкаНалогообложенияРезидента = ПерерасчетыПрошлыхПериодов.СтавкаНалогообложенияРезидента
		|				И ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод = ПерерасчетыПрошлыхПериодов.НалоговыйПериод
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СтавкаНалогообложенияРезидента
		|			И (ГОД(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода) = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицу КАК ВсегоПоФизическомуЛицу
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицу.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицу.СтавкаНалогообложенияРезидента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуЗаМесяц КАК ПоФизическомуЛицуЗаМесяц
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуЗаМесяц.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуЗаМесяц.СтавкаНалогообложенияРезидента
		|			И (НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) = ПоФизическомуЛицуЗаМесяц.МесяцНалоговогоПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуНаДатуПолученияДохода КАК ПоФизическомуЛицуНаДатуПолученияДохода
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуНаДатуПолученияДохода.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуНаДатуПолученияДохода.СтавкаНалогообложенияРезидента
		|			И СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода = ПоФизическомуЛицуНаДатуПолученияДохода.ДатаПолученияДохода
		|ГДЕ
		|	ВсегоПоФизическомуЛицу.СуммаОстаток > 0
		|	И ПоФизическомуЛицуНаДатуПолученияДохода.СуммаОстаток <> 0
		|	И (ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СуммаОстаток > 0
		|			ИЛИ ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	НалоговыйПериод,
		|	НачалоМесяцаНалоговогоПериода,
		|	МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.ДатаНачисления,
		|	ДокументОснование,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	СуммыНДФЛПоСотрудникам.КатегорияДохода,
		|	ВключатьВДекларациюПоНалогуНаПрибыль";
		
		Выборка = Запрос.ВыполнитьПакет()[3].Выбрать();
		
		ТаблицыКУдалению.Добавить("ВТПерерасчетыПрошлыхПериодов");
		ТаблицыКУдалению.Добавить("ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод");
		
	Иначе
		
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода) КАК НалоговыйПериод
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицу
		|ИЗ
		|	ВТПодробно КАК ПодробныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ВсегоПоФизическомуЛицу.НалоговыйПериод КАК НалоговыйПериод,
		|	ВсегоПоФизическомуЛицу.СуммаОстаток КАК ОстатокЗаНалоговыйПериод,
		|	НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) КАК НачалоМесяцаНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	СуммыНДФЛПоСотрудникам.КодДохода КАК КодДохода,
		|	СуммыНДФЛПоСотрудникам.КатегорияДохода КАК КатегорияДохода,
		|	СуммыНДФЛПоСотрудникам.ДокументОснование КАК ДокументОснование,
		|	СуммыНДФЛПоСотрудникам.СуммаОстаток КАК СуммаОстаток,
		|	СуммыНДФЛПоСотрудникам.НачисленоНалога КАК НачисленоНалога,
		|	СуммыНДФЛПоСотрудникам.Организация КАК Организация,
		|	СуммыНДФЛПоСотрудникам.Подразделение КАК Подразделение,
		|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СуммыНДФЛПоСотрудникам.СуммаВыплаты КАК СуммаВыплаты,
		|	ПоФизическомуЛицуЗаМесяц.СуммаОстаток КАК СуммаЗаМесяц
		|ИЗ
		|	ВТПодробно КАК СуммыНДФЛПоСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицу КАК ВсегоПоФизическомуЛицу
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицу.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицу.СтавкаНалогообложенияРезидента
		|			И (ГОД(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода) = ВсегоПоФизическомуЛицу.НалоговыйПериод)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуЗаМесяц КАК ПоФизическомуЛицуЗаМесяц
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуЗаМесяц.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуЗаМесяц.СтавкаНалогообложенияРезидента
		|			И (НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) = ПоФизическомуЛицуЗаМесяц.МесяцНалоговогоПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуНаДатуПолученияДохода КАК ПоФизическомуЛицуНаДатуПолученияДохода
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуНаДатуПолученияДохода.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуНаДатуПолученияДохода.СтавкаНалогообложенияРезидента
		|			И СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода = ПоФизическомуЛицуНаДатуПолученияДохода.ДатаПолученияДохода
		|ГДЕ
		|	ВсегоПоФизическомуЛицу.СуммаОстаток > 0
		|	И ПоФизическомуЛицуНаДатуПолученияДохода.СуммаОстаток <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	НалоговыйПериод,
		|	НачалоМесяцаНалоговогоПериода,
		|	МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.ДатаНачисления,
		|	ДокументОснование,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	КатегорияДохода,
		|	ВключатьВДекларациюПоНалогуНаПрибыль";
		
		Выборка = Запрос.ВыполнитьПакет()[1].Выбрать();
		
	КонецЕсли;
	
	ТаблицыКУдалению.Добавить("ВТВсегоПоФизическомуЛицу");
	
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл 
		
		СуммаКРаспределению = Выборка.СуммаВыплаты;
		Пока Выборка.СледующийПоЗначениюПоля("СтавкаНалогообложенияРезидента") И (НеОграничиватьСуммойКВыплате Или СуммаКРаспределению >= 0) Цикл 
			Пока Выборка.СледующийПоЗначениюПоля("НалоговыйПериод") И (НеОграничиватьСуммойКВыплате Или СуммаКРаспределению >= 0) Цикл 
				Если Выборка.ОстатокЗаНалоговыйПериод >= 0 Тогда
					ОстатокКУдержанию = 0;
					Пока Выборка.СледующийПоЗначениюПоля("НачалоМесяцаНалоговогоПериода") И (НеОграничиватьСуммойКВыплате Или СуммаКРаспределению > 0) Цикл 
						ОстатокКУдержанию = ОстатокКУдержанию + Выборка.СуммаЗаМесяц;
						Если ОстатокКУдержанию > 0 И Выборка.СуммаЗаМесяц > 0 Тогда
							Пока Выборка.Следующий() И (НеОграничиватьСуммойКВыплате Или СуммаКРаспределению > 0) И ОстатокКУдержанию > 0 Цикл
								Если Выборка.СуммаОстаток > 0 Тогда
									
									СписываемаяСумма = ?(НеОграничиватьСуммойКВыплате, Мин(Выборка.СуммаОстаток, ОстатокКУдержанию), Мин(Выборка.СуммаОстаток, СуммаКРаспределению, ОстатокКУдержанию));;
									СуммаКРаспределению = СуммаКРаспределению - СписываемаяСумма;
									ОстатокКУдержанию = ОстатокКУдержанию - СписываемаяСумма;
									
									СтрокаТаблицыРезультатов = РезультатыРасчетов.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатов, Выборка);
									СтрокаТаблицыРезультатов.Сумма = СписываемаяСумма;			
									
								КонецЕсли;
							КонецЦикла;			
						КонецЕсли;
					КонецЦикла;			
				Иначе
					СуммаКРаспределению = СуммаКРаспределению - Выборка.ОстатокЗаНалоговыйПериод;
					СтрокаТаблицыРезультатов = РезультатыРасчетов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатов, Выборка);
					СтрокаТаблицыРезультатов.Сумма = Выборка.ОстатокЗаНалоговыйПериод;			
					СтрокаТаблицыРезультатов.МесяцНалоговогоПериода = Выборка.ПоследнийМесяцНалоговогоПериода;			
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
		
	КонецЦикла;	
	
	Если ОтбиратьПоОснованиям Тогда
		
		Запрос.Текст =  
		"ВЫБРАТЬ
		|	Подробно.ДокументОснование КАК ДокументОснование,
		|	МАКСИМУМ(Подробно.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы))) КАК ЭтоНатуральныйДоход,
		|	МАКСИМУМ(СписокСотрудников.ДокументОснование ЕСТЬ NULL) КАК ОснованиеДругойВедомости
		|ПОМЕСТИТЬ ВТДокументыОснования
		|ИЗ
		|	ВТПодробно КАК Подробно
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыНДФЛПоСотрудникамИДокументам КАК СписокСотрудников
		|		ПО (ВЫБОР
		|				КОГДА ТИПЗНАЧЕНИЯ(Подробно.ДокументОснование) В (&ОсобыеРегистраторы)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ Подробно.ДокументОснование
		|			КОНЕЦ = СписокСотрудников.ДокументОснование)
		|
		|СГРУППИРОВАТЬ ПО
		|	Подробно.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыОснования.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	ВТДокументыОснования КАК ДокументыОснования
		|ГДЕ
		|	(НЕ ДокументыОснования.ОснованиеДругойВедомости
		|			ИЛИ &ОкончательныйРасчет
		|				И ДокументыОснования.ЭтоНатуральныйДоход)";
		Запрос.УстановитьПараметр("ОсобыеРегистраторы", ЗарплатаКадры.РегистраторыПереносаДанных());
		Результат = Запрос.Выполнить();
		ТаблицыКУдалению.Добавить("ВТДокументыОснования");
		
		ОставлятьСуммыБезОснований = Ложь;
		ПодходящиеОснования = Новый Соответствие;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ДокументОснование = Неопределено Тогда
				ОставлятьСуммыБезОснований = Истина;
			Иначе
				ПодходящиеОснования.Вставить(Выборка.ДокументОснование, Истина)
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСтрок = РезультатыРасчетов.Количество();
		Для Сч = 1 По ВсегоСтрок Цикл
			Индекс = ВсегоСтрок - Сч;
			Если РезультатыРасчетов[Индекс].ДокументОснование = Неопределено Тогда
				Если Не ОставлятьСуммыБезОснований Тогда
					РезультатыРасчетов.Удалить(Индекс)
				КонецЕсли;
			ИначеЕсли ПодходящиеОснования[РезультатыРасчетов[Индекс].ДокументОснование] = Неопределено Тогда
				РезультатыРасчетов.Удалить(Индекс)
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерТаблиц, ТаблицыКУдалению);
	
	Возврат РезультатыРасчетов;
	
КонецФункции

// Процедура регистрирует факт неудачи при попытке выплаты зарплаты документом.
// При этом ранее удержанные при выплате налоги "сторнируются".
//
// Параметры:
//		Движения 		- КоллекцияДвижений, коллекция наборов записей движений ведомости.
//		Отказ			- признак отказа выполнения операции.
//		Документ		- ссылка на документ, которым ранее была зарегистрирована выплата зарплаты.
//		ФизическиеЛица	- массив ссылок на физические лица.
//
// Обработка ошибочных ситуаций
//	выдается сообщение, признак «Отказ» выставляется в Истина.
//
Процедура ЗарегистрироватьНевыплатуДокументом(Движения, Отказ, Документ, ФизическиеЛица) Экспорт
	
	// Расчеты налогоплательщиков с бюджетом.
	РасчетыНалогоплательщиков = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	РасчетыНалогоплательщиков.Отбор.Регистратор.Установить(Документ);
	РасчетыНалогоплательщиков.Прочитать();
	
	РасчетыНалогоплательщиковСторно	= РасчетыНалогоплательщиков.ВыгрузитьКолонки();
	Для Каждого ЗаписьВедомости Из РасчетыНалогоплательщиков Цикл
		Если ФизическиеЛица.Найти(ЗаписьВедомости.ФизическоеЛицо) <> Неопределено Тогда
			СтрокаСторно = РасчетыНалогоплательщиковСторно.Добавить() ;
			ЗаполнитьЗначенияСвойств(СтрокаСторно, ЗаписьВедомости);
			СтрокаСторно.Сумма = - ЗаписьВедомости.Сумма;
			СтрокаСторно.СуммаВыплаченногоДохода = - ЗаписьВедомости.СуммаВыплаченногоДохода;
		КонецЕсли	
	КонецЦикла;
	
	Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Загрузить(РасчетыНалогоплательщиковСторно);
	Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать= Истина;
	
	// Расчеты налогового агента с бюджетом.
	РасчетыНалоговыхАгентов		= РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	РасчетыНалоговыхАгентов.Отбор.Регистратор.Установить(Документ);
	РасчетыНалоговыхАгентов.Прочитать();

	РасчетыНалоговыхАгентовСторно = РасчетыНалоговыхАгентов.ВыгрузитьКолонки();
	Для Каждого ЗаписьВедомости Из РасчетыНалоговыхАгентов Цикл
		Если ФизическиеЛица.Найти(ЗаписьВедомости.ФизическоеЛицо) <> Неопределено Тогда
			СтрокаСторно = РасчетыНалоговыхАгентовСторно.Добавить() ;
			ЗаполнитьЗначенияСвойств(СтрокаСторно, ЗаписьВедомости);
			СтрокаСторно.Сумма = - ЗаписьВедомости.Сумма;
		КонецЕсли	
	КонецЦикла;
	
	РасчетыНалоговыхАгентовСторно.ЗаполнитьЗначения("",	"РеквизитыПлатежногоПоручения");

	Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Загрузить(РасчетыНалоговыхАгентовСторно);
	Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать	= Истина;
	
КонецПроцедуры

// Предназначена для расчета и регистрации перечисленного НДФЛ по налогоплательщикам
// по записанным в учете данным об остатках перечисленных сумм НДФЛ в целом.
// Важно! Перед вызовом метода необходимо из движений регистратора по рег-рам 
// - УплатаНДФЛНалоговымиАгентамиКРаспределению
// - РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
// удалить "лишние" записи, т.к. при чтении данных учета движения регистратора не отбрасываются.
//
// Параметры:
//      Ссылка - ссылка на документ-регистратор.
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//      ФизическиеЛица - массив физических лиц (необязательно), если не задан,  
//						перечисленные суммы будут распределены по всем физлицам организации.
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет использоваться регистрация для организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьПеречисленныйНалогПоФизическимЛицам(Ссылка, Движения, Отказ, Организация, ДатаОперации, ФизическиеЛица = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
		МассивРегистраций = Новый Массив;
		МассивРегистраций.Добавить(РегистрацияВНалоговомОргане);
		МассивРегистраций.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", МассивРегистраций);
	КонецЕсли;	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УплатаКРаспределению.СуммаОстаток КАК Сумма,
	|	УплатаКРаспределению.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	УплатаКРаспределению.РегистрацияВНалоговомОргане,
	|	УплатаКРаспределению.РеквизитыПлатежногоПоручения,
	|	УплатаКРаспределению.ДатаПлатежа КАК ДатаПлатежа
	|ИЗ
	|	РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению.Остатки(
	|			&ДатаОстатков,
	|			Организация = &Организация
	|				И РегистрацияВНалоговомОргане В (&РегистрацияВНалоговомОргане)) КАК УплатаКРаспределению
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа,
	|	МесяцНалоговогоПериода";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ПеречисленныйНалог = Результат.Выгрузить();
	
	ЕстьНовыеСтроки = Ложь;
	ПерваяСтрока = Истина;
	Для Каждого СтрокаДанных Из ПеречисленныйНалог Цикл
		
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПерваяСтрока И Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать Тогда
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
		КонецЕсли;
		
		СтрокиРаспределения = РаспределитьПеречисленныйНалогПоФизическимЛицам(Ссылка, Организация, ДатаОперации, СтрокаДанных.Сумма, СтрокаДанных.МесяцНалоговогоПериода, РегистрацияВНалоговомОргане, ФизическиеЛица);
		Если СтрокиРаспределения.Количество() = 0 И ПерваяСтрока Тогда
			Продолжить;
		КонецЕсли;
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = СтрокиРаспределения.Количество() > 0;
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
		КонецЕсли;
		
		Для каждого СтрокаТЗ Из СтрокиРаспределения Цикл
			ЕстьНовыеСтроки = Истина;
			НоваяСтрока = СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, СтрокаТЗ);
			НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
			НоваяСтрока = СтрокаУплатыНалоговогоАгента(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных);
			НоваяСтрока.Сумма = СтрокаТЗ.Сумма;
			НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
		КонецЦикла;
		
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Если Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать Тогда
				Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
				Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Ложь;
			КонецЕсли;
		Иначе
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		Если Записывать Тогда
			Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записать();
			Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записывать = Ложь;
		Иначе
			Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает таблицу значений с документами-начислятелями, дополненную булевой колонкой, 
//	показывающей, начислял ли документ НДФЛ по указанному физ.лицу.
//
// Параметры:
//		Регистраторы - ТаблицаЗначений - таблица значений с колонками:
//			* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - должно быть непустым.
//			* ДокументОснование - ДокументСсылка - 
//
// Возвращаемое значение:
//		Таблица значений с колонками:
//			* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - 
//			* ДокументОснование - ДокументСсылка - 
//			* ЕстьДанные - булево - 
//
Функция НалогДокументомИсчислен(Регистраторы) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистраторы", Регистраторы);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Регистраторы.ДокументОснование КАК Регистратор,
	|	Регистраторы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	&Регистраторы КАК Регистраторы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регистраторы.Регистратор КАК Регистратор,
	|	Регистраторы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма), 0) <> 0 КАК ЕстьДанные
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ПО Регистраторы.Регистратор = РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|			И Регистраторы.ФизическоеЛицо = РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И (РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|
	|СГРУППИРОВАТЬ ПО
	|	Регистраторы.Регистратор,
	|	Регистраторы.ФизическоеЛицо";

	Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

// Возвращает таблицу значений с документами-начислятелями, дополненную булевой колонкой, 
//	показывающей, регистрировал ли документ дохолы в учете по указанному физ.лицу.
//
// Параметры:
//		Регистраторы - ТаблицаЗначений - таблица значений с колонками:
//			* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - должно быть непустым.
//			* ДокументОснование - ДокументСсылка - 
//			* СтатьяФинансирования, необязательная, 
//			* СтатьяРасходов, необязательная
//
// Возвращаемое значение:
//		Таблица значений с колонками:
//			* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - 
//			* ДокументОснование - ДокументСсылка - 
//			* СтатьяФинансирования 
//			* СтатьяРасходов
//			* ЕстьДанные - булево - 
//
Функция ДоходДокументомЗарегистрирован(Регистраторы) Экспорт

	КолонкиТаблицы = Регистраторы.Колонки;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистраторы", Регистраторы);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Регистраторы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	Регистраторы.СтатьяРасходов КАК СтатьяРасходов,
	|	Регистраторы.ДокументОснование КАК Регистратор,
	|	Регистраторы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	&Регистраторы КАК Регистраторы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Регистратор КАК Регистратор,
	|	Документы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Документы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	Документы.СтатьяРасходов КАК СтатьяРасходов,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо ЕСТЬ НЕ NULL  КАК ЕстьДанные
	|ИЗ
	|	ВТРегистраторы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ПО Документы.Регистратор = СведенияОДоходахНДФЛ.Регистратор
	|			И Документы.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И Документы.СтатьяФинансирования = СведенияОДоходахНДФЛ.СтатьяФинансирования
	|			И Документы.СтатьяРасходов = СведенияОДоходахНДФЛ.СтатьяРасходов";
	Если КолонкиТаблицы.Найти("СтатьяФинансирования") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Регистраторы.СтатьяФинансирования","ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)") 
	КонецЕсли;
	Если КолонкиТаблицы.Найти("СтатьяРасходов") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Регистраторы.СтатьяРасходов","ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)") 
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;

	Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

Функция ВычетВПределахНормативовПоАвторскимВознаграждениям() Экспорт

	Возврат УчетНДФЛКлиентСервер.ВычетВПределахНормативовПоАвторскимВознаграждениям();

КонецФункции

// Уточняет значение поля РегистрацияВНалоговомОргане в строке регистра.
// Параметры:
//		СтрокаДанных - срока набора записей учетного регистра, содержит поле РегистрацияВНалоговомОргане.
//      РегистрацияПодразделенияВНалоговомОргане - регистрация в НО, указанная в подразделении (возможно пустая).
//      РегистрацияОрганизацииВНалоговомОргане - регистрация в НО, указанная в организации.
//
Процедура ПроставитьРегистрациюВНалоговомОрганеВСтроке(СтрокаДанных, РегистрацияПодразделенияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане) Экспорт
	СтрокаДанных.РегистрацияВНалоговомОргане = ?(ЗначениеЗаполнено(РегистрацияПодразделенияВНалоговомОргане), РегистрацияПодразделенияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане);
КонецПроцедуры	

// Возвращает массив регистраций в НО для конкретной организации за указанный отчетный период.
//
// Параметры:
//		Организация - СправочникСсылка.Организации -
//		НачалоПериода - дата - 
//		ОкончаниеПериода - дата - 
//      ТолькоАктуальные - булево - позволяет дополнить перечень действовавших в отчетном периоде регистраций остальными регистрациями организации.
//
// Возвращаемое значение:
//	Массив значений типа СправочникСсылка.РегистрацияВНалоговомОргане
//
Функция РегистрацииОрганизацииОтчетногоПериода(Организация, НачалоПериода, ОкончаниеПериода, ТолькоАктуальные = Ложь) Экспорт 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(ОкончаниеПериода));
	Запрос.УстановитьПараметр("ВсеРегистрации", Не ТолькоАктуальные);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СведенияОДоходах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТДействующиеРегистрации
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И СведенияОДоходах.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И (СведенияОДоходах.СуммаДохода <> 0
	|			ИЛИ СведенияОДоходах.СуммаВычета <> 0)
	|	И СведенияОДоходах.РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДействующиеРегистрации.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	0 КАК Приоритет
	|ИЗ
	|	ВТДействующиеРегистрации КАК ДействующиеРегистрации
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Ссылка,
	|	1
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДействующиеРегистрации КАК ДействующиеРегистрации
	|		ПО РегистрацииВНалоговомОргане.Ссылка = ДействующиеРегистрации.РегистрацияВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &ГоловнаяОрганизация
	|	И ДействующиеРегистрации.РегистрацияВНалоговомОргане ЕСТЬ NULL 
	|	И &ВсеРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
			
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РегистрацияВНалоговомОргане");

КонецФункции

// Формирует строку движения по регистру СведенияОДоходахНДФЛ.
//
// Параметры:
//		СведенияОДоходахНДФЛ - набор записей регистра накопления СведенияОДоходахНДФЛ.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ДанныеДокумента - некоторая структура (строка таблицы значений, выборки из результата запроса и т.п.) 
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля):
//					ФизическоеЛицо, с непустым значением
//					ДатаПолученияДохода, с непустым значением
//					МесяцНалоговогоПериода, с непустым значением
//					КодДохода, с непустым значением
//					КодВычета
//					СтавкаНалогообложения
//					ИсточникДоходаЗаПределамиРФ
//					РегистрацияВНалоговомОргане
//					СуммаДохода
//					СуммаВычета.
//					Начисление
//					Подразделение
//					Сотрудник
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Функция СтрокаСведенийОДоходах(СведенияОДоходахНДФЛ, Организация, ДатаОперации, ДанныеДокумента, ОкончательныйРасчет = Истина, Ссылка = Неопределено, КатегорияДохода = Неопределено) Экспорт
	
	НоваяСтрока = СведенияОДоходахНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	НоваяСтрока.ДоходМежрасчетногоПериода = Не ОкончательныйРасчет;
	Если УчетНДФЛПовтИсп.КодыДоходовПоЦеннымБумагам(Год(НоваяСтрока.МесяцНалоговогоПериода)).Найти(НоваяСтрока.КодДохода) <> Неопределено Тогда
		Если НоваяСтрока.КодДохода <> Справочники.ВидыДоходовНДФЛ.Код1010 Тогда
			НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Истина
		КонецЕсли;
	Иначе 
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	Если НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль И НоваяСтрока.МесяцНалоговогоПериода < ДатаПереводаДоходовПоЦеннымБумагамВДекларациюПоПрибыли() Тогда
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НоваяСтрока.КатегорияДохода) Тогда
		Если ЗначениеЗаполнено(КатегорияДохода) Тогда
			НоваяСтрока.КатегорияДохода = КатегорияДохода
		Иначе
			НоваяСтрока.КатегорияДохода = УчетНДФЛПовтИсп.КатегорияДоходаПоЕгоКоду(НоваяСтрока.КодДохода)
		КонецЕсли;  
	КонецЕсли;
	Если Не НоваяСтрока.ДатаПолученияДоходаФиксирована Тогда
		НоваяСтрока.ДатаПолученияДоходаФиксирована = Перечисления.КатегорииДоходовНДФЛ.СФиксированнойДатойПолученияДохода().Найти(НоваяСтрока.КатегорияДохода) <> Неопределено
	КонецЕсли;
	Если ЗначениеЗаполнено(Ссылка) Тогда
		НоваяСтрока.ДокументОснование = Ссылка;
	КонецЕсли;
	
	Возврат НоваяСтрока
	
КонецФункции

// Формирует строку движения по регистру РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.
//      	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево
//		Организация
//		ДатаОперации - дата
//		ДанныеДокумента - некоторая структура (строка таблицы значений, выборки из результата запроса и т.п.) 
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля):
//					ФизическоеЛицо, с непустым значением.
//					Ставка, с непустым значением
//					МесяцНалоговогоПериода, с непустым значением
//					РегистрацияВНалоговомОргане, с непустым значением.
//					Сумма, с непустым значением
//					РеквизитыПлатежногоПоручения.
Функция СтрокаПеречисленияНДФЛПоНалогоплательщику(Движения, Организация, ДатаОперации, ДанныеДокумента) Экспорт
	
	НоваяСтрока = СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, ДанныеДокумента);
	
    Возврат НоваяСтрока
	
КонецФункции

// Процедура обеспечивает сбор сведений о хранении данных, 
// относящихся к персональным
//
// Параметры:
//		ТаблицаСведений - таблица значений с полями:
//			Объект 			- строка, содержащая полное имя объекта метаданных,
//			ПоляРегистрации - строка, в которой перечислены имена полей регистрации, 
//								отдельные поля регистрации отделяются запятой,
//								альтернативные - символом "|",
//			ПоляДоступа		- строка, в которой перечислены через запятую имена полей доступа.
//			ОбластьДанных	- строка с идентификатором области данных, необязательно для заполнения.
//
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ВозвратНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "СуммыВозврата.ПоСтавке13,СуммыВозврата.ПоСтавке09,СуммыВозврата.ПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "КодВычетаЛичный,ВычетыНаДетей.КодВычета";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ОперацияНалоговогоУчетаПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "СведенияОДоходах.СуммаДохода,СведенияОДоходах.СуммаВычета,СведенияОДоходах.СуммаНалогаИсчисленная,НДФЛИсчисленныйПоСтавке13.Сумма,ПредоставленныеВычеты.Сумма,НДФЛУдержанный.Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.АвансовыйПлатежИностранцаПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ПерерасчетНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сотрудники.НалогПоСтавке09,Сотрудники.НалогПоСтавке13,Сотрудники.НалогПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ПерерасчетНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке09,Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке13,Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ПерерасчетНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПримененныйВычетЛичный,Сотрудники.ПримененныйВычетЛичныйКЗачетуВозврату,ПримененныеВычетыНаДетейИИмущественные.РазмерВычета";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ИНН,Адрес,ВидДокумента,СерияДокумента,НомерДокумента,Гражданство,ДатаРождения,СтатусНалогоплательщика,АдресЗаРубежом";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке13,ОблагаемаяСуммаДоходаПоСтавке13,ИсчисленоПоСтавке13,УдержаноПоСтавке13,ЗадолженностьПоСтавке13,ИзлишнеУдержаноПоСтавке13,ПеречисленоПоСтавке13";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке30,ОблагаемаяСуммаДоходаПоСтавке30,ИсчисленоПоСтавке30,УдержаноПоСтавке30,ЗадолженностьПоСтавке30,ИзлишнеУдержаноПоСтавке30,ПеречисленоПоСтавке30";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке9,ОблагаемаяСуммаДоходаПоСтавке9,ИсчисленоПоСтавке9,УдержаноПоСтавке9,ЗадолженностьПоСтавке9,ИзлишнеУдержаноПоСтавке9,ПеречисленоПоСтавке9";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке15,ОблагаемаяСуммаДоходаПоСтавке15,ИсчисленоПоСтавке15,УдержаноПоСтавке15,ЗадолженностьПоСтавке15,ИзлишнеУдержаноПоСтавке15,ПеречисленоПоСтавке15";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке35,ОблагаемаяСуммаДоходаПоСтавке35,ИсчисленоПоСтавке35,УдержаноПоСтавке35,ЗадолженностьПоСтавке35,ИзлишнеУдержаноПоСтавке35,ПеречисленоПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке5,ОблагаемаяСуммаДоходаПоСтавке5,ИсчисленоПоСтавке5,УдержаноПоСтавке5,ЗадолженностьПоСтавке5,ИзлишнеУдержаноПоСтавке5,ПеречисленоПоСтавке5";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке10,ОблагаемаяСуммаДоходаПоСтавке10,ИсчисленоПоСтавке10,УдержаноПоСтавке10,ЗадолженностьПоСтавке10,ИзлишнеУдержаноПоСтавке10,ПеречисленоПоСтавке10";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке3,ОблагаемаяСуммаДоходаПоСтавке3,ИсчисленоПоСтавке3,УдержаноПоСтавке3,ЗадолженностьПоСтавке3,ИзлишнеУдержаноПоСтавке3,ПеречисленоПоСтавке3";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке6,ОблагаемаяСуммаДоходаПоСтавке6,ИсчисленоПоСтавке6,УдержаноПоСтавке6,ЗадолженностьПоСтавке6,ИзлишнеУдержаноПоСтавке6,ПеречисленоПоСтавке6";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке7,ОблагаемаяСуммаДоходаПоСтавке7,ИсчисленоПоСтавке7,УдержаноПоСтавке7,ЗадолженностьПоСтавке7,ИзлишнеУдержаноПоСтавке7,ПеречисленоПоСтавке7";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке12,ОблагаемаяСуммаДоходаПоСтавке12,ИсчисленоПоСтавке12,УдержаноПоСтавке12,ЗадолженностьПоСтавке12,ИзлишнеУдержаноПоСтавке12,ПеречисленоПоСтавке12";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "СведенияОДоходах.СуммаДохода,СведенияОДоходах.СуммаВычета,СведенияОВычетах.СуммаВычета";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ИНН,Сотрудники.Адрес,Сотрудники.ВидДокумента,Сотрудники.СерияДокумента,Сотрудники.НомерДокумента";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.Гражданство,Сотрудники.ДатаРождения,Сотрудники.СтатусНалогоплательщика,Сотрудники.АдресЗарубежом,СведенияОВычетах.КодВычета";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОбщаяСуммаДоходаПоСтавке13,Сотрудники.ОблагаемаяСуммаДоходаПоСтавке13,Сотрудники.ИсчисленоПоСтавке13,Сотрудники.УдержаноПоСтавке13,Сотрудники.ЗадолженностьПоСтавке13";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ИзлишнеУдержаноПоСтавке13,Сотрудники.ПеречисленоПоСтавке13,Сотрудники.ОбщаяСуммаДоходаПоСтавке30,Сотрудники.ОблагаемаяСуммаДоходаПоСтавке30";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ИсчисленоПоСтавке30,Сотрудники.УдержаноПоСтавке30,Сотрудники.ЗадолженностьПоСтавке30,Сотрудники.ИзлишнеУдержаноПоСтавке30,Сотрудники.ПеречисленоПоСтавке30";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОбщаяСуммаДоходаПоСтавке9,Сотрудники.ОблагаемаяСуммаДоходаПоСтавке9,Сотрудники.ИсчисленоПоСтавке9,Сотрудники.УдержаноПоСтавке9,Сотрудники.ЗадолженностьПоСтавке9";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ИзлишнеУдержаноПоСтавке9,Сотрудники.ПеречисленоПоСтавке9,Сотрудники.ОбщаяСуммаДоходаПоСтавке15,Сотрудники.ОблагаемаяСуммаДоходаПоСтавке15,Сотрудники.ИсчисленоПоСтавке15";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.УдержаноПоСтавке15,Сотрудники.ЗадолженностьПоСтавке15,Сотрудники.ИзлишнеУдержаноПоСтавке15,Сотрудники.ПеречисленоПоСтавке15,Сотрудники.ОбщаяСуммаДоходаПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОблагаемаяСуммаДоходаПоСтавке35,Сотрудники.ИсчисленоПоСтавке35,Сотрудники.УдержаноПоСтавке35,Сотрудники.ЗадолженностьПоСтавке35,Сотрудники.ИзлишнеУдержаноПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПеречисленоПоСтавке35,СведенияОДоходах.СуммаДохода,СведенияОДоходах.СуммаВычета,СведенияОВычетах.СуммаВычета";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОблагаемаяСуммаДоходаПоСтавке5,Сотрудники.ИсчисленоПоСтавке5,Сотрудники.УдержаноПоСтавке5,Сотрудники.ЗадолженностьПоСтавке5,Сотрудники.ИзлишнеУдержаноПоСтавке5";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПеречисленоПоСтавке5,Сотрудники.ОбщаяСуммаДоходаПоСтавке5";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОблагаемаяСуммаДоходаПоСтавке10,Сотрудники.ИсчисленоПоСтавке10,Сотрудники.УдержаноПоСтавке10,Сотрудники.ЗадолженностьПоСтавке10,Сотрудники.ИзлишнеУдержаноПоСтавке10";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПеречисленоПоСтавке10,Сотрудники.ОбщаяСуммаДоходаПоСтавке10";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОблагаемаяСуммаДоходаПоСтавке3,Сотрудники.ИсчисленоПоСтавке3,Сотрудники.УдержаноПоСтавке3,Сотрудники.ЗадолженностьПоСтавке3,Сотрудники.ИзлишнеУдержаноПоСтавке3";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПеречисленоПоСтавке3,Сотрудники.ОбщаяСуммаДоходаПоСтавке3";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОблагаемаяСуммаДоходаПоСтавке6,Сотрудники.ИсчисленоПоСтавке6,Сотрудники.УдержаноПоСтавке6,Сотрудники.ЗадолженностьПоСтавке6,Сотрудники.ИзлишнеУдержаноПоСтавке6";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПеречисленоПоСтавке6,Сотрудники.ОбщаяСуммаДоходаПоСтавке6";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОблагаемаяСуммаДоходаПоСтавке7,Сотрудники.ИсчисленоПоСтавке7,Сотрудники.УдержаноПоСтавке7,Сотрудники.ЗадолженностьПоСтавке7,Сотрудники.ИзлишнеУдержаноПоСтавке7";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПеречисленоПоСтавке7,Сотрудники.ОбщаяСуммаДоходаПоСтавке7";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОблагаемаяСуммаДоходаПоСтавке12,Сотрудники.ИсчисленоПоСтавке12,Сотрудники.УдержаноПоСтавке12,Сотрудники.ЗадолженностьПоСтавке12,Сотрудники.ИзлишнеУдержаноПоСтавке12";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПеречисленоПоСтавке12,Сотрудники.ОбщаяСуммаДоходаПоСтавке12";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "РасходыНаСтроительствоПриобретение,ПроцентыПоКредитам,ПроцентыПриПерекредитовании";
	НовыеСведения.ОбластьДанных		= "Имущество";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.ИмущественныеВычетыНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Имущество";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.СведенияОДоходахНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо,Сотрудник";
	НовыеСведения.ПоляДоступа		= "СуммаДохода,СуммаВычета";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.ДоходыПредыдущегоМестаРаботыНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Размер";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.СтандартныеВычетыНаДетейНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "КодВычета,КоличествоДетей,КоличествоДетейПоОкончании";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.СтандартныеВычетыФизическихЛицНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "КодВычетаЛичный";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Статус";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество,Сотрудники.ИНН,Сотрудники.ВидДокумента,Сотрудники.СерияДокумента,Сотрудники.НомерДокумента,Сотрудники.КемВыданДокумент,Сотрудники.ДатаВыдачиДокумента,Сотрудники.ДатаРождения";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";	
КонецПроцедуры

// Добавляет в МенеджерВременныхТаблиц временную таблицу с данными НДФЛ по документу.
//
Процедура СоздатьВТДанныеНДФЛПоДокументу(МенеджерВременныхТаблиц, ДокументСсылка, ОписаниеТаблицДокумента = Неопределено, ФизическиеЛица = Неопределено) Экспорт
	
	Если ФизическиеЛица = Неопределено Тогда
		ОтборПоФизическимЛицам = Ложь;
	Иначе
		ОтборПоФизическимЛицам = Истина;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Ссылка,
	|	ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ КАК ИдентификаторСтроки,
	|	ТаблицаНДФЛ.НомерСтроки,
	|	ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ТаблицаНДФЛ.Подразделение КАК Подразделение,
	|	ТаблицаНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	ТаблицаНДФЛ.Налог КАК НалогПоСтавке13,
	|	ТаблицаНДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежейПоСтавке13,
	|	0 КАК НалогПоСтавке13КЗачетуВозврату,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКодВычета,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичный,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКЗачетуВозврату,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетИмущественныйРасходы,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320о)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетРасходыНаСвоеОбучение,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код321)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетРасходыНаОбучениеДетей,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код324)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетРасходыНаЛечение,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код325)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетСтраховыеВзносыНаМедУслуги,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код326)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетРасходыНаДорогостоящееЛечение,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код329)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетей,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейДвойной,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейДвойнойВторой,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаВторогоРебенка,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаВторогоРебенкаДвойной,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаТретьегоРебенка,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаТретьегоРебенкаДвойной,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейИнвалидов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейИнвалидовДвойной,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код130)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код135)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейДвойнойОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код143)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейДвойнойВторойОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код131)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаВторогоРебенкаОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код137)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код145)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код132)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаТретьегоРебенкаОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код139)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код147)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код117о)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейИнвалидовОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код121о)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ПримененныйВычет.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код125о)
	|					ТОГДА ПримененныйВычет.РазмерВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
	|ПОМЕСТИТЬ ВТДанныеНДФЛ
	|ИЗ
	|	#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычет
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычет.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычет.ИдентификаторСтрокиНДФЛ
	|ГДЕ
	|	ТаблицаНДФЛ.Ссылка = &Ссылка
	|	И ТаблицаНДФЛ.ФизическоеЛицо В(&ФизическиеЛица)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДФЛ.Ссылка,
	|	ТаблицаНДФЛ.НомерСтроки,
	|	ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.МесяцНалоговогоПериода,
	|	ТаблицаНДФЛ.Подразделение,
	|	ТаблицаНДФЛ.КатегорияДохода,
	|	ТаблицаНДФЛ.Налог,
	|	ТаблицаНДФЛ.ЗачтеноАвансовыхПлатежей,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКодВычета,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичный,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКЗачетуВозврату";
	
	Если ОписаниеТаблицДокумента = Неопределено Тогда
		ПолноеИмяДокумента = ДокументСсылка.Метаданные().ПолноеИмя();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ПолноеИмяДокумента + ".НДФЛ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаПримененныеВычеты", ПолноеИмяДокумента + ".ПримененныеВычетыНаДетейИИмущественные");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ОписаниеТаблицДокумента.ИмяТаблицыСНалогами);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаПримененныеВычеты", ОписаниеТаблицДокумента.ИмяТаблицыСВычетами);
	КонецЕсли;
	
	// Создаем временную таблицу ВТДанныеНДФЛ.
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Если ОтборПоФизическимЛицам Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ТаблицаНДФЛ.ФизическоеЛицо В(&ФизическиеЛица)", "");
	КонецЕсли; 
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает таблицу значений с данными по НДФЛ, прочитанную из данных документа.
//      	 
// Параметры:
//      ДокументСсылка - ДокументСсылка - документ, содержащий сведения о суммах налогов и вычетов.
//      ОписаниеТаблицДокумента - структура - (необязательный), с полями
//      			ИмяТаблицыСНалогами
//      			ИмяТаблицыСВычетами
//      	если не указан, в качестве источника данных используются табличные
//      		части документа: НДФЛ и ПримененныеВычетыНаДетейИИмущественные
//      	если указан, тогда упомянутые таблицы (реальные или временные) должны  
//				иметь тот же состав полей, что имеют табличные части документа 
//				НачислениеЗарплаты НДФЛ и ПримененныеВычетыНаДетейИИмущественные.
//		МенеджерВременныхТаблиц - (необязательный), должен содержать перечисленные 
//      	в ОписаниеТаблицДокумента временные таблицы.
//      	 
// Возвращаемое значение:
//	таблица значений с колонками:
//		Ссылка,
//		НомерСтроки,
//		ФизическоеЛицо,
//		МесяцНалоговогоПериода,
//		Подразделение,
//		КатегорияДохода,
//		НалогПоСтавке13,
//		ЗачтеноАвансовыхПлатежейПоСтавке13,
//		НалогПоСтавке13КЗачетуВозврату,
//		ПримененныйВычетЛичныйКодВычета,
//		ПримененныйВычетЛичный,
//		ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета,
//		ПримененныйВычетЛичныйКЗачетуВозврату,
//		ПримененныйВычетИмущественныйРасходы,
//		ПримененныйВычетИмущественныйПроцентыПоКредитам,
//		ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
//		ПримененныйВычетНаДетей,
//		ПримененныйВычетНаДетейДвойной,
//		ПримененныйВычетНаДетейДвойнойВторой,
//		ПримененныйВычетНаВторогоРебенка,
//		ПримененныйВычетНаВторогоРебенкаДвойной,
//		ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
//		ПримененныйВычетНаТретьегоРебенка,
//		ПримененныйВычетНаТретьегоРебенкаДвойной,
//		ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
//		ПримененныйВычетНаДетейИнвалидов,
//		ПримененныйВычетНаДетейИнвалидовДвойной,
//		ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//		ПримененныйВычетНаДетейОпекунов,
//		ПримененныйВычетНаДетейДвойнойОпекунов,
//		ПримененныйВычетНаДетейДвойнойВторойОпекунов,
//		ПримененныйВычетНаВторогоРебенкаОпекунов,
//		ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов,
//		ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов,
//		ПримененныйВычетНаТретьегоРебенкаОпекунов,
//		ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов,
//		ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов,
//		ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
//		ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение,ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни
//      	 
Функция ДанныеДокументаОНалогеПоОсновнойСтавкеИВычетах(ДокументСсылка, ОписаниеТаблицДокумента = Неопределено, МенеджерВременныхТаблиц = Неопределено, ФизическиеЛица = Неопределено) Экспорт

	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	СоздатьВТДанныеНДФЛПоДокументу(МенеджерВременныхТаблиц, ДокументСсылка, ОписаниеТаблицДокумента, ФизическиеЛица);
	
	// Получаем данные НДФЛ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТДанныеНДФЛ КАК НДФЛ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
    Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

Функция ДатаОперацииПоДокументу(ДатаДокумента, ПериодРегистрации) Экспорт

	Возврат Мин(Макс(ДатаДокумента, НачалоМесяца(ПериодРегистрации)),КонецМесяца(ПериодРегистрации))

КонецФункции

// Функция возвращает код вычета для дохода НДФЛ.
// Если код вычета не определен, то возвращается пустая ссылка.
Функция КодВычетаПоКодуДоходаНДФЛ(КодДоходаНДФЛ) Экспорт
	КодВычета = Справочники.ВидыВычетовНДФЛ.ПустаяСсылка();	
	Если ЗначениеЗаполнено(КодДоходаНДФЛ) Тогда
		РеквизитыКодаДохода = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КодДоходаНДФЛ, "ИмеетЕдинственныйВычет,ВычетПоУмолчанию");
		Если РеквизитыКодаДохода.ИмеетЕдинственныйВычет Тогда
			КодВычета  = РеквизитыКодаДохода.ВычетПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	Возврат КодВычета	
КонецФункции 

// Возвращает соответствие кодов доходов и допустимых для них вычетов.
// Соответствие поддерживается с 2010 года.
//
// Параметры:
//	НалоговыйПериод - число - налоговый период (год).
//
// Возвращаемое значение:
//	Соответствие:
//		ключом является Код дохода - СправочникСсылка.ВидыДоходовНДФЛ
//		значением является массив Кодов вычета - СправочникСсылка.ВидыВычетовНДФЛ
//
Функция ВычетыКДоходам(НалоговыйПериод) Экспорт
	
	СоответствиеДоступныхВычетовДоходам = Новый Соответствие;
	
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1010, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код601));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1211, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код607));
	
	// Описание кодов 1530 и 1531 по годам.
	Если НалоговыйПериод > 2016 Тогда // с 2017 года
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код222);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код618);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код219);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код223);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	ИначеЕсли НалоговыйПериод = 2016 Тогда // 2016 год
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код222);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код219);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код223);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	ИначеЕсли НалоговыйПериод = 2015 Тогда // 2015 год
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код222);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код618);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код219);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код223);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	ИначеЕсли НалоговыйПериод = 2014 Тогда // 2014 год
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код222);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код219);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код223);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	ИначеЕсли НалоговыйПериод > 2011 Тогда // 2012-2013 годы
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	ИначеЕсли НалоговыйПериод = 2011 Тогда // 2011 год
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код211);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код215);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	Иначе // по 2010 год
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	КонецЕсли;
	
	// Описание кода 1532 по годам.
	МассивДоступныхВычетов = Новый Массив;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);	
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код206);
	Если НалоговыйПериод = 2010 Или НалоговыйПериод = 2011 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код207);
	КонецЕсли;
	Если НалоговыйПериод > 2015 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
	КонецЕсли;
	Если НалоговыйПериод < 2017 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
	КонецЕсли;
	Если НалоговыйПериод = 2011 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код210);
	КонецЕсли;
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1532, МассивДоступныхВычетов);
	
	// Описание кода 1533 по годам.
	МассивДоступныхВычетов = Новый Массив;
	Если НалоговыйПериод = 2010 Или НалоговыйПериод = 2011 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);	
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);	
	КонецЕсли;
	Если НалоговыйПериод >= 2014 Тогда // с 2014 года
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код220);
	КонецЕсли;
	Если НалоговыйПериод >= 2011 И НалоговыйПериод <= 2014 Тогда // с 2011 по 2014 годы
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	КонецЕсли;
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1533, МассивДоступныхВычетов);
	
	// Описание кода 1535 по годам.
	МассивДоступныхВычетов = Новый Массив;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код207);
	Если НалоговыйПериод >= 2014 Тогда // с 2014 года
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
	КонецЕсли;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код210);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1535, МассивДоступныхВычетов);
		
	// Описание кода 1536 по годам.
	МассивДоступныхВычетов = Новый Массив;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);	
	Если НалоговыйПериод >= 2014 Тогда // с 2014 года
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код224);
	КонецЕсли;
	Если НалоговыйПериод > 2011 И НалоговыйПериод <= 2014 Тогда // с 2012 по 2014 годы
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	КонецЕсли;
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1536, МассивДоступныхВычетов);
		
	// Описание кода 1537 по годам.
	Если НалоговыйПериод >= 2011 Тогда // с 2011 года
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код211);	
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1537, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1538 по годам.
	Если НалоговыйПериод >= 2011 Тогда // с 2011 года
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код215);
		Если НалоговыйПериод = 2011 Тогда // 2011 год
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код214);
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		КонецЕсли;
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1538, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1539 по годам.
	Если НалоговыйПериод >= 2011 Тогда // с 2011 года
		МассивДоступныхВычетов = Новый Массив;
		Если НалоговыйПериод = 2011 Тогда // 2011 год
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
		КонецЕсли;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код213);
		Если НалоговыйПериод <= 2014 Тогда
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код214);
		КонецЕсли;
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1539, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1541 по годам.
	Если НалоговыйПериод >= 2011 Тогда // с 2011 года
		МассивДоступныхВычетов = Новый Массив;
		Если НалоговыйПериод <= 2014 Тогда // по 2014 год
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код213);
		КонецЕсли;
		Если НалоговыйПериод >= 2014 Тогда // с 2014 года
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
		КонецЕсли;
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1541, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1543 по годам.
	Если НалоговыйПериод > 2016 Тогда 
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1543, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код617));
	ИначеЕсли НалоговыйПериод >= 2014 Тогда 	
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1543, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код221));
	КонецЕсли;
	
	// Описание кода 1544 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код221);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код233);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код237);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код239);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код251);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1544, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1545 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код226);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код234);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код238);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код240);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1545, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1546 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код228);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код250);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код251);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1546, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1547 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код235);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1547, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1548 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код229);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код241);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код252);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1548, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1549 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код227);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код236);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1549, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1551 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код230);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1551, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1552 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код232);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1552, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1553 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код231);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1553, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1554 по годам.
	Если НалоговыйПериод >= 2016 Тогда
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1554, МассивДоступныхВычетов);
	КонецЕсли;
	
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2010, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код403));

	МассивДоступныхВычетов = Новый Массив;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код404);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код405);	
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2201, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2202, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2203, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2204, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2205, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2206, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2207, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2208, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2209, МассивДоступныхВычетов);
	
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2720, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код501));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2730, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код502));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2740, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код505));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2760, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код503));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2761, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код506));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2762, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код508));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2770, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код504));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2790, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код507));
	
	// описание кода 2791
	Если НалоговыйПериод < 2016 Тогда // по 2015 год
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2791, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код509));
	КонецЕсли;

	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код4800, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код620));
		
	Возврат СоответствиеДоступныхВычетовДоходам;
	
КонецФункции

// Возвращает массив кодов вычетов соответствующего года с учетом ограничения переданной группой вычетов.
// Поддерживается с 2010 года.
//
// Параметры:
//	НалоговыйПериод - число - налоговый период (год).
//	ГруппаВычета - ПеречислениеСсылка.ГруппыВычетовПоНДФЛ, массив - 
//
// Возвращаемое значение:
//	Массив значений типа СправочникСсылка.ВидыВычетовНДФЛ
//
Функция ВычетыНалогоплательщика(НалоговыйПериод, Знач ГруппаВычета = Неопределено) Экспорт

	МассивДоступныхВычетов = Новый Массив;
	
	// Личные вычеты
	Если НалоговыйПериод > 2011 Тогда // с 2012 отменен 103 вычет
	Иначе // по 2011
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код103);
	КонецЕсли;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код104);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код105);
	
	// Вычеты на детей
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код108);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код109);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код110);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код111);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код112);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код113);
	Если НалоговыйПериод > 2011 Тогда
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код115);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код116);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код119);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код120);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код123);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код124);
	КонецЕсли;
	Если НалоговыйПериод > 2014 Тогда
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код130);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код131);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код132);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код117о);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код135);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код137);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код139);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код121о);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код143);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код145);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код147);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код125о);
	КонецЕсли;
	
	// Имущественные вычеты
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код311);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код312);
	Если НалоговыйПериод < 2016 Тогда
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код318);
	КонецЕсли;
	
	// Социальные вычеты
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код319);
	Если НалоговыйПериод > 2012 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код320);
	КонецЕсли;
	Если НалоговыйПериод > 2015 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код320о);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код321);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код324);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код325);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код326);
	КонецЕсли;
	Если НалоговыйПериод > 2016 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код329);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ГруппаВычета) Тогда
		ГруппаВычета = Новый Массив;
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Имущественные);
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Социальные);
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО);
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Стандартные);
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГруппыВычетов", ГруппаВычета);
	Запрос.УстановитьПараметр("Ссылки", МассивДоступныхВычетов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыВычетовНДФЛ.Ссылка
	|ИЗ
	|	Справочник.ВидыВычетовНДФЛ КАК ВидыВычетовНДФЛ
	|ГДЕ
	|	ВидыВычетовНДФЛ.ГруппаВычета В(&ГруппыВычетов)
	|	И ВидыВычетовНДФЛ.Ссылка В(&Ссылки)";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция РассчитываемыеРесурсыПоОсновнойСтавке() Экспорт

	Возврат "НалогПоСтавке13,ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей() + "," + РассчитываемыеРесурсыИмущественныхВычетов();

КонецФункции 

Функция РассчитываемыеРесурсыВычетовНаДетей() 

	Возврат "ПримененныйВычетНаДетей,ПримененныйВычетНаДетейДвойной,ПримененныйВычетНаДетейДвойнойВторой,ПримененныйВычетНаВторогоРебенка,ПримененныйВычетНаВторогоРебенкаДвойной,ПримененныйВычетНаВторогоРебенкаДвойнойВторой,ПримененныйВычетНаТретьегоРебенка,ПримененныйВычетНаТретьегоРебенкаДвойной,ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,ПримененныйВычетНаДетейИнвалидов,ПримененныйВычетНаДетейИнвалидовДвойной,ПримененныйВычетНаДетейИнвалидовДвойнойВторой" +
			",ПримененныйВычетНаДетейОпекунов,ПримененныйВычетНаДетейДвойнойОпекунов,ПримененныйВычетНаДетейДвойнойВторойОпекунов,ПримененныйВычетНаВторогоРебенкаОпекунов,ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов,ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов,ПримененныйВычетНаТретьегоРебенкаОпекунов,ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов,ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов,ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов";

КонецФункции 

Функция РассчитываемыеРесурсыИмущественныхВычетов() 

	Возврат "ПримененныйВычетИмущественныйРасходы,ПримененныйВычетИмущественныйПроцентыПоКредитам,ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение,ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни";

КонецФункции 

Функция ВидыВычетовПоПолямТаблицы() Экспорт

	// Определяем соответствие видов вычетов полям таблицы.
	ВидыВычетов = Новый Соответствие;
	ВидыВычетов.Вставить("ПримененныйВычетИмущественныйПроцентыПоКредитам", Справочники.ВидыВычетовНДФЛ.Код312);
	ВидыВычетов.Вставить("ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", Справочники.ВидыВычетовНДФЛ.Код318);
	ВидыВычетов.Вставить("ПримененныйВычетИмущественныйРасходы", Справочники.ВидыВычетовНДФЛ.Код311);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаДетей", Справочники.ВидыВычетовНДФЛ.Код108);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейДвойной", Справочники.ВидыВычетовНДФЛ.Код110);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейДвойнойВторой", Справочники.ВидыВычетовНДФЛ.Код111);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенка", Справочники.ВидыВычетовНДФЛ.Код115);
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенкаДвойной", Справочники.ВидыВычетовНДФЛ.Код119);
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенкаДвойнойВторой", Справочники.ВидыВычетовНДФЛ.Код123);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенка", Справочники.ВидыВычетовНДФЛ.Код116);
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойной", Справочники.ВидыВычетовНДФЛ.Код120);
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", Справочники.ВидыВычетовНДФЛ.Код124);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидов", Справочники.ВидыВычетовНДФЛ.Код109);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидовДвойной", Справочники.ВидыВычетовНДФЛ.Код112);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидовДвойнойВторой", Справочники.ВидыВычетовНДФЛ.Код113);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейОпекунов", Справочники.ВидыВычетовНДФЛ.Код130);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейДвойнойОпекунов", Справочники.ВидыВычетовНДФЛ.Код135);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейДвойнойВторойОпекунов", Справочники.ВидыВычетовНДФЛ.Код143);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенкаОпекунов", Справочники.ВидыВычетовНДФЛ.Код131);
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов", Справочники.ВидыВычетовНДФЛ.Код137);
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов", Справочники.ВидыВычетовНДФЛ.Код145);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенкаОпекунов", Справочники.ВидыВычетовНДФЛ.Код132);
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов", Справочники.ВидыВычетовНДФЛ.Код139);
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов", Справочники.ВидыВычетовНДФЛ.Код147);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидовОпекунов", Справочники.ВидыВычетовНДФЛ.Код117о);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов", Справочники.ВидыВычетовНДФЛ.Код121о);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов", Справочники.ВидыВычетовНДФЛ.Код125о);
	
	ВидыВычетов.Вставить("ПримененныйВычетРасходыНаСвоеОбучение", Справочники.ВидыВычетовНДФЛ.Код320о);
	ВидыВычетов.Вставить("ПримененныйВычетРасходыНаОбучениеДетей", Справочники.ВидыВычетовНДФЛ.Код321);
	ВидыВычетов.Вставить("ПримененныйВычетРасходыНаЛечение", Справочники.ВидыВычетовНДФЛ.Код324);
	ВидыВычетов.Вставить("ПримененныйВычетСтраховыеВзносыНаМедУслуги", Справочники.ВидыВычетовНДФЛ.Код325);
	ВидыВычетов.Вставить("ПримененныйВычетРасходыНаДорогостоящееЛечение", Справочники.ВидыВычетовНДФЛ.Код326);
	ВидыВычетов.Вставить("ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни", Справочники.ВидыВычетовНДФЛ.Код329);
	
	Возврат ВидыВычетов	

КонецФункции

Функция НазванияВычетовПредоставляемыхПоУведомлениюНО() Экспорт

	Возврат СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(СтрЗаменить(СтрЗаменить(РассчитываемыеРесурсыИмущественныхВычетов(),"ПримененныйВычетИмущественный",""),"ПримененныйВычет",""), "Расходы,","РасходыНаСтроительствоПриобретение,"))
	
КонецФункции

// Даты изменений законодательства

// Возвращает дату вступления в силу Федерального Закона от 27.07.2010 № 229-ФЗ.
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//   дата
//
Функция ДатаЗакона229ФЗ() Экспорт 

	Возврат '20110101'

КонецФункции

// Возвращает дату начала действия положений о беженцах Федерального закона от 04.10.2014 № 285-ФЗ
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   дата
//
Функция ДатаЗакона285ФЗ() Экспорт 

	Возврат '20140101'

КонецФункции 

Функция ДатаИзмененияНалогообложенияДивидендов() Экспорт 

	Возврат '20150101'

КонецФункции

Функция ДатаПереходаНаКодыОКТМО() Экспорт

	Возврат '20140101'

КонецФункции

Функция ДатаПереводаДоходовПоЦеннымБумагамВДекларациюПоПрибыли() Экспорт

	Возврат '20140101'

КонецФункции

Функция ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев() Экспорт 

	Возврат '20150101'

КонецФункции

// Возвращает дату вступления в силу Федерального Закона от 02.05.2015 № 113-ФЗ.
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//   дата
//
Функция ДатаИзмененияСроковУплатыНалога() Экспорт 

	Возврат '20160101'

КонецФункции

#КонецОбласти

#Область ЗаполнениеРеглотчетности

Процедура ОписаниеПоказателей_6НДФЛ_2016Кв1(ПоказателиОтчета) Экспорт
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010001001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010002001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010002501", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010003001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010004001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010004501", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010005001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010006001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010007001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010008001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010009001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020010001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020011001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020012001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020013001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020014001", Истина, Истина);
	
КонецПроцедуры

Процедура ЗначенияПоказателей_6НДФЛ_2016Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	Организация = ПараметрыОтчета.Организация;
	НачалоПериода = НачалоГода(ДатаКонцаПериодаОтчета);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаПериодаОтчета);
	РегистрацияВНалоговомОргане = ПараметрыОтчета.РегистрацииВНО;
	
	// очищаем разделы
	ПоказателиОтчета = Новый Структура;
	ОписаниеПоказателей_6НДФЛ_2016Кв1(ПоказателиОтчета);
	
	ДанныеРаздела1 = Контейнер.Раздел1;
	Значение = Неопределено;
	Для каждого КлючИЗначение Из ДанныеРаздела1 Цикл
		Если ПоказателиОтчета.Свойство(КлючИЗначение.Ключ, Значение) Тогда
			ДанныеРаздела1[КлючИЗначение.Ключ] = 0
		КонецЕсли;
	КонецЦикла;
	Контейнер.Раздел1_ДанныеДопСтрок.Очистить();
	Контейнер.Раздел2_ДанныеДопСтрок.Очистить();
	 
	ОписаниеТаблиц = Новый Структура("КоличествоПолучателейДохода, Раздел1Доходы, Раздел1Вычеты, Раздел1Налоги, Раздел2");
	Если ОкончаниеПериода < '20170101' Тогда
		РасчетПоказателей_6НДФЛ_2016Кв1(НачалоПериода, ОкончаниеПериода, ?(ПараметрыОтчета.ДатаПодписи > ОкончаниеПериода,ПараметрыОтчета.ДатаПодписи, ОкончаниеПериода), Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц);	
	Иначе
		РасчетПоказателей_6НДФЛ_2017Кв1(НачалоПериода, ОкончаниеПериода, ?(ПараметрыОтчета.ДатаПодписи > ОкончаниеПериода,ПараметрыОтчета.ДатаПодписи, ОкончаниеПериода), Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц);	
	КонецЕсли;
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	// Раздел 1
	
	Результат = ОписаниеТаблиц.КоличествоПолучателейДохода;
	Если Результат.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ДанныеРаздела1,Результат[0]);
	КонецЕсли;
	РезультатРаздел1Налоги = ОписаниеТаблиц.Раздел1Налоги;
	
	ВременнаяТаблица = Контейнер.Раздел1_ДанныеДопСтрок.СкопироватьКолонки();
	Для каждого СтрокаДанных Из ОписаниеТаблиц.Раздел1Доходы Цикл
		ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), СтрокаДанных);
	КонецЦикла;
	Для каждого СтрокаДанных Из ОписаниеТаблиц.Раздел1Вычеты Цикл
		ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), СтрокаДанных);
	КонецЦикла;
	Для каждого СтрокаДанных Из РезультатРаздел1Налоги Цикл
		ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), СтрокаДанных);
	КонецЦикла;
	
	РезультатРаздел1Налоги.Свернуть(,"П000010007001,П000010008001,П000010009001");
	Если РезультатРаздел1Налоги.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ДанныеРаздела1, РезультатРаздел1Налоги[0]);
	КонецЕсли;
	
	ВременнаяТаблица.Свернуть("П000010001001","П000010002001,П000010002501,П000010003001,П000010004001,П000010004501,П000010005001");
	ВременнаяТаблица.Сортировать("П000010001001");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, Контейнер.Раздел1_ДанныеДопСтрок);
	
	// Раздел 2
	
	Для каждого СтрокаДанных Из ОписаниеТаблиц.Раздел2 Цикл
		ЗаполнитьЗначенияСвойств(Контейнер.Раздел2_ДанныеДопСтрок.Добавить(), СтрокаДанных);
	КонецЦикла;
	
КонецПроцедуры

Процедура РасчетПоказателей6НДФЛ(ИмяРасчета, НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные = Ложь) Экспорт

	Если ИмяРасчета = "РасчетПоказателей_6НДФЛ_2016Кв1" Тогда
		РасчетПоказателей_6НДФЛ_2016Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_6НДФЛ_2017Кв1" Тогда
		РасчетПоказателей_6НДФЛ_2017Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные);
	Иначе
		
	КонецЕсли;

КонецПроцедуры

Процедура РасчетПоказателей_6НДФЛ_2017Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные = Ложь)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("НачалоПредыдущегоГода", ДобавитьМесяц(НачалоПериода, -12));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ДатаПодписи", ДатаПодписи);
	Запрос.УстановитьПараметр("ОкончаниеПериодаОсмотраДоходовВычетов", ?(КонецГода(ОкончаниеПериода) = ОкончаниеПериода, Макс(ДатаПодписи, ОкончаниеПериода), ОкончаниеПериода));
	
	Если ОписаниеТаблиц.Свойство("Раздел1Доходы") Или ОписаниеТаблиц.Свойство("Раздел1Вычеты") Или ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
		|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
		|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
		|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
		|	СведенияОДоходахНДФЛ.Начисление КАК Начисление,
		|	СведенияОДоходахНДФЛ.КодВычета КАК КодВычета,
		|	СведенияОДоходахНДФЛ.СуммаВычета КАК СуммаВычета,
		|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ
		|ПОМЕСТИТЬ ВТДоходы
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
		|ГДЕ
		|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
		|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И СведенияОДоходахНДФЛ.Организация = &Организация
		|	И (СведенияОДоходахНДФЛ.СуммаДохода <> 0
		|			ИЛИ СведенияОДоходахНДФЛ.СуммаВычета <> 0)";
		Запрос.Выполнить();
		
		СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "УчитыватьИзмененияСтатусаДляОтчетности", ОкончаниеПериода);
		
		Если ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ФизическоеЛицо), 0) КАК П000010006001
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))";
			
			ОписаниеТаблиц.КоличествоПолучателейДохода = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
	
		Если ОписаниеТаблиц.Свойство("Раздел1Доходы") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодДохода,
			|	СведенияОДоходахНДФЛ.Начисление,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.СуммаДохода,
			|	ВЫБОР
			|		КОГДА СведенияОДоходахНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДивидендов
			|ПОМЕСТИТЬ ВТДоходыПоСтавкам
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК П000010001001,
			|	СведенияОДоходах.СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаДохода) КАК П000010002001,
			|	СУММА(СведенияОДоходах.СуммаДивидендов) КАК П000010002501
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодДохода");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел1Доходы = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел1Вычеты") Тогда
			
			Запрос.УстановитьПараметр("ГодПериода", Год(ОкончаниеПериода));
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодВычета,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.СуммаВычета
			|ПОМЕСТИТЬ ВТВычетыПоСтавкам
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаВычета <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
			|ГДЕ
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИмущественныеВычетыНДФЛ.Регистратор,
			|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
			|	ИмущественныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ИмущественныеВычетыНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
			|ГДЕ
			|	ИмущественныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
			|	И ИмущественныеВычетыНДФЛ.МесяцРегистрации <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|	И ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И ИмущественныеВычетыНДФЛ.Организация = &Организация
			|	И ИмущественныеВычетыНДФЛ.Сумма <> 0
			|	И ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|	И ИмущественныеВычетыНДФЛ.Год = &ГодПериода";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК П000010001001,
			|	СведенияОДоходах.СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаВычета) КАК П000010003001
			|ИЗ
			|	ВТВычетыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодВычета");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел1Вычеты = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Или ОписаниеТаблиц.Свойство("Раздел2") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК Период,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания КАК ВариантУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения КАК ВидДвижения,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления КАК СрокПеречисления,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма КАК Сумма,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК ДатаУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты КАК КрайнийСрокУплаты,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ КАК УчитыватьВыплаченныйДоходВ6НДФЛ
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ДатаПодписи
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация
		|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма <> 0
		|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ
		|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода <> 0)";
		Запрос.Выполнить();
		
		Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Тогда
			
			СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТНалоги", "УчитыватьИзмененияСтатусаДляОтчетности", ОкончаниеПериода);
			
			Запрос.УстановитьПараметр("ДатаПервогоОтчетногоПериода", '20160101');
			Запрос.Текст =
			"ВЫБРАТЬ
			|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Начислено,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И (НДФЛ.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12))
			|					ИЛИ НДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
			|						И НДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09))
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК НачисленоПоДивидендам,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ЗачтеноАвансов,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаПолученияДохода >= &ДатаПервогоОтчетногоПериода
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Удержано,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|			ТОГДА -НДФЛ.Сумма
			|		КОГДА (НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
			|				ИЛИ НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей))
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА -НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Сальдо,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
			|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|			ТОГДА -НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Возвращено
			|ПОМЕСТИТЬ ВТНалогиПоСтавкам
			|ИЗ
			|	ВТНалоги КАК НДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО НДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И НДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И НДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И НДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК СтавкаНалога,
			|	СУММА(Налоги.Сальдо) КАК НеУдержано
			|ПОМЕСТИТЬ ВТНеУдержано
			|ИЗ
			|	ВТНалогиПоСтавкам КАК Налоги
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога
			|
			|ИМЕЮЩИЕ
			|	СУММА(Налоги.Сальдо) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК СтавкаНалога,
			|	СУММА(Налоги.Начислено) КАК Начислено,
			|	СУММА(Налоги.НачисленоПоДивидендам) КАК НачисленоПоДивидендам,
			|	СУММА(Налоги.ЗачтеноАвансов) КАК ЗачтеноАвансов,
			|	СУММА(Налоги.Удержано) КАК Удержано,
			|	ЕСТЬNULL(МАКСИМУМ(ПоФизлицам.НеУдержано), 0) КАК НеУдержано,
			|	СУММА(Налоги.Возвращено) КАК Возвращено
			|ПОМЕСТИТЬ ВТДанныеПоФизилицам
			|ИЗ
			|	ВТНалогиПоСтавкам КАК Налоги
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеУдержано КАК ПоФизлицам
			|		ПО Налоги.ФизическоеЛицо = ПоФизлицам.ФизическоеЛицо
			|			И Налоги.СтавкаНалога = ПоФизлицам.СтавкаНалога
			|ГДЕ
			|	(Налоги.Начислено <> 0
			|			ИЛИ Налоги.ЗачтеноАвансов <> 0
			|			ИЛИ Налоги.Удержано <> 0
			|			ИЛИ Налоги.Возвращено <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК П000010001001,
			|	Налоги.СтавкаНалога,
			|	СУММА(Налоги.Начислено) КАК П000010004001,
			|	СУММА(Налоги.НачисленоПоДивидендам) КАК П000010004501,
			|	СУММА(Налоги.ЗачтеноАвансов) КАК П000010005001,
			|	СУММА(Налоги.Удержано) КАК П000010007001,
			|	СУММА(Налоги.НеУдержано) КАК П000010008001,
			|	СУММА(Налоги.Возвращено) КАК П000010009001
			|ИЗ
			|	ВТДанныеПоФизилицам КАК Налоги
			|ГДЕ
			|	(Налоги.Начислено <> 0
			|			ИЛИ Налоги.ЗачтеноАвансов <> 0
			|			ИЛИ Налоги.Удержано <> 0
			|			ИЛИ Налоги.Возвращено <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога";
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "Налоги");
			ОписаниеТаблиц.Раздел1Налоги = Запрос.Выполнить().Выгрузить();
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел2") Тогда
			
			Запрос.УстановитьПараметр("НачалоОтчетногоКвартала", НачалоКвартала(ОкончаниеПериода));
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	МАКСИМУМ(ДатыУчета.ДатаПолученияДохода) КАК ПоздняяДатаПолученияДохода,
			|	МИНИМУМ(ДатыУчета.ДатаПолученияДохода) КАК РанняяДатаПолученияДохода
			|ИЗ
			|	ВТНалоги КАК ДатыУчета
			|ГДЕ
			|	ДатыУчета.ДатаУдержания <= &ОкончаниеПериода";
			Выборка = Запрос.Выполнить().Выбрать();
			РанняяДатаПолученияДохода = НачалоПериода;
			ПоздняяДатаПолученияДохода = ДобавитьМесяц(ОкончаниеПериода, 1);
			Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.РанняяДатаПолученияДохода) Тогда
				РанняяДатаПолученияДохода = Мин(РанняяДатаПолученияДохода, Выборка.РанняяДатаПолученияДохода);
				ПоздняяДатаПолученияДохода = Макс(ПоздняяДатаПолученияДохода, Выборка.ПоздняяДатаПолученияДохода);
			КонецЕсли;
			Запрос.УстановитьПараметр("РанняяДатаПолученияДохода", РанняяДатаПолученияДохода);
			Запрос.УстановитьПараметр("ПоздняяДатаПолученияДохода", ПоздняяДатаПолученияДохода);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
			|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
			|	СведенияОДоходахНДФЛ.Период КАК ПериодРегистрации,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
			|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ КАК НеУчитыватьДоходВ6НДФЛ,
			|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
			|	СведенияОДоходахНДФЛ.ДокументОснование КАК ДокументОснование
			|ПОМЕСТИТЬ ВТСтрокиДоходов
			|ИЗ
			|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|ГДЕ
			|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &РанняяДатаПолученияДохода И &ПоздняяДатаПолученияДохода
			|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И СведенияОДоходахНДФЛ.Организация = &Организация
			|	И СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета <> 0";
			Запрос.Выполнить();

			СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиДоходов", "УчитыватьИзмененияСтатусаДляОтчетности", ОкончаниеПериода);
		
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.ПериодРегистрации КАК Период,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
			|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ,
			|	СведенияОДоходахНДФЛ.ДокументОснование
			|ПОМЕСТИТЬ ВТСведенияОДоходахНДФЛ
			|ИЗ
			|	ВТСтрокиДоходов КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|ГДЕ
			|	(НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТРегистраторыНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВзаиморасчетыССотрудниками.Регистратор,
			|	СУММА(ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
			|ПОМЕСТИТЬ ВТНачисленоПоРегистраторам
			|ИЗ
			|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
			|ГДЕ
			|	ВзаиморасчетыССотрудниками.Регистратор В
			|			(ВЫБРАТЬ
			|				РегистраторыНачислений.Регистратор
			|			ИЗ
			|				ВТРегистраторыНачислений КАК РегистраторыНачислений)
			|	И ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВзаиморасчетыССотрудниками.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВзаиморасчетыССотрудниками.Регистратор,
			|	-СУММА(ВзаиморасчетыССотрудниками.Сумма) КАК Сумма
			|ПОМЕСТИТЬ ВТНДФЛПоРегистраторам
			|ИЗ
			|	ВТНалоги КАК ВзаиморасчетыССотрудниками
			|ГДЕ
			|	ВзаиморасчетыССотрудниками.Регистратор В
			|			(ВЫБРАТЬ
			|				РегистраторыНачислений.Регистратор
			|			ИЗ
			|				ВТРегистраторыНачислений КАК РегистраторыНачислений)
			|	И ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВзаиморасчетыССотрудниками.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ) КАК ДатаУдержания,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисления,
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.Сумма КАК Сумма,
			|	НалогиПоДатам.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода
			|ПОМЕСТИТЬ ВТИсходныеДанныеПоДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И &УсловиеОтбораПоДатам
			|	И НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода) КАК ЭтоМежрасчетныйДокумент,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТОснованияНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанныеПоДокументамОснованиям КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И (СведенияОДоходахНДФЛ.ДокументОснование = ОснованияСУдержаннымНалогом.ДокументОснование
			|				ИЛИ СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленоПоРегистраторам КАК НачисленоПоРегистраторам
			|		ПО СведенияОДоходахНДФЛ.Регистратор = НачисленоПоРегистраторам.Регистратор
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДФЛПоРегистраторам КАК НДФЛПоРегистраторам
			|		ПО СведенияОДоходахНДФЛ.Регистратор = НДФЛПоРегистраторам.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.СуммаДохода > 0
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ЕСТЬNULL(НачисленоПоРегистраторам.СуммаВзаиморасчетов, 0) <= ЕСТЬNULL(НДФЛПоРегистраторам.Сумма, 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиям
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Основания.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТОснованияНачислений КАК Основания) КАК Основания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО Основания.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И Основания.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|
			|СГРУППИРОВАТЬ ПО
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|		ПО ОснованияНачислений.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И (ОснованияНачислений.Регистратор = НалогиПоДатам.ДокументОснование
			|				ИЛИ ОснованияНачислений.Регистратор = НалогиПоДатам.Регистратор)
			|			И ОснованияНачислений.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|ГДЕ
			|	ОснованияНачислений.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ОснованияСНеудержаннымНалогом.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|			И (СведенияОДоходахНДФЛ.СуммаДохода > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор,
			|	МИНИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.ДатаПолученияДохода) КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода) КАК СуммаДохода,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор) КАК МаксимальныеСуммы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|		ПО МаксимальныеСуммы.СуммаДохода = ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода
			|			И МаксимальныеСуммы.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|			И МаксимальныеСуммы.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТНатуральныеДоходы
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанныеПоДокументамОснованиям КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.ДокументОснование = ОснованияСУдержаннымНалогом.ДокументОснование
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|			ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|				И ОснованияСНеудержаннымНалогом.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыОснованийСНеудержаннымНалогом КАК ДатыОснованийСНеудержаннымНалогом
			|			ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДатыОснованийСНеудержаннымНалогом.ФизическоеЛицо
			|				И ОснованияСНеудержаннымНалогом.Регистратор = ДатыОснованийСНеудержаннымНалогом.Регистратор
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода > 0
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОснованияСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоОснованиям
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТРегистраторыНачислений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленоПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНДФЛПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОснованияНачислений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НалогиПоДатам.ДокументОснование
			|ПОМЕСТИТЬ ВТМежрасчетныеДокументыОснования
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|	И НалогиПоДатам.РасчетМежрасчетногоПериода
			|	И НалогиПоДатам.ДокументОснование <> НЕОПРЕДЕЛЕНО
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ) КАК ДатаУдержания,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисления,
			|	СУММА(НалогиПоДатам.Сумма) КАК Сумма,
			|	МежрасчетныеДокументыОснования.ДокументОснование ЕСТЬ НЕ NULL  КАК ЭтоМежрасчетныйДокумент
			|ПОМЕСТИТЬ ВТИсходныеДанныеПоСтарымДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМежрасчетныеДокументыОснования КАК МежрасчетныеДокументыОснования
			|		ПО НалогиПоДатам.ДокументОснование = МежрасчетныеДокументыОснования.ДокументОснование
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И &УсловиеОтбораПоДатам
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ),
			|	НалогиПоДатам.КрайнийСрокУплаты,
			|	МежрасчетныеДокументыОснования.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	ВЫБОР
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 0
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 1
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ)
			|	КОНЕЦ КАК Доля
			|ПОМЕСТИТЬ ВТДолиПолученногоДоходаПоДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ДатаУдержания <= &ОкончаниеПериода
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДанныеУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ДанныеУчета.ДокументОснование КАК Регистратор,
			|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) * ВЫБОР
			|				КОГДА ДанныеУчета.Доля > 1
			|					ТОГДА 1
			|				ИНАЧЕ ДанныеУчета.Доля
			|			КОНЕЦ КАК ЧИСЛО(15, 2)), 0) КАК СуммаДохода
			|ИЗ
			|	ВТДолиПолученногоДоходаПоДокументамОснованиям КАК ДанныеУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДанныеУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДанныеУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И ДанныеУчета.ДокументОснование = СведенияОДоходахНДФЛ.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеУчета.ФизическоеЛицо,
			|	ДанныеУчета.ДатаПолученияДохода,
			|	ДанныеУчета.Доля,
			|	ДанныеУчета.ДокументОснование
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода,
			|	Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ДокументОснование КАК Регистратор,
			|	ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления,
			|	ИсходныеДанные.Сумма,
			|	0 КАК СуммаФактическиПолученногоДохода
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода,
			|	Регистратор";
			Если ОкончаниеПериода < '20160701' Тогда
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода");
			Иначе
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.КрайнийСрокУплаты МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода И НалогиПоДатам.ДатаУдержания >= ДАТАВРЕМЯ(2016, 7, 1, 0, 0, 0)");
			КонецЕсли;
			Результаты = Запрос.ВыполнитьПакет();
			ВсегоРезультатов = Результаты.Количество();
			НеОбработанныеДанные = Результаты[ВсегоРезультатов - 1].Выгрузить();
			ОбработанныеДанные = НеОбработанныеДанные.СкопироватьКолонки();
			СуммыДоходов = Результаты[ВсегоРезультатов - 2].Выгрузить();
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода,Регистратор");
			Для каждого СтрокаДохода Из СуммыДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДохода);
				ВременнаяТаблица = НеОбработанныеДанные.Скопировать(НеОбработанныеДанные.НайтиСтроки(СтруктураПоиска));
				Если ВременнаяТаблица.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДохода.СуммаДохода) Тогда
					Если ВременнаяТаблица.Количество() = 1 Тогда
						ВременнаяТаблица[0].СуммаФактическиПолученногоДохода = СтрокаДохода.СуммаДохода
					Иначе
						КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
						РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДохода.СуммаДохода, КоэффициентыРаспределения);
						Если РаспределениеРесурса <> Неопределено Тогда
							ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаФактическиПолученногоДохода");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, ОбработанныеДанные)
			КонецЦикла;
			Запрос.УстановитьПараметр("ОбработанныеДанные", ОбработанныеДанные); НеОбработанныеДанные = Неопределено; СуммыДоходов = Неопределено; ОбработанныеДанные = Неопределено; ВременнаяТаблица = Неопределено;
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Данные.Регистратор,
			|	Данные.ФизическоеЛицо,
			|	Данные.ДатаПолученияДохода,
			|	Данные.ДатаУдержания,
			|	Данные.СрокПеречисления,
			|	Данные.СуммаФактическиПолученногоДохода,
			|	Данные.Сумма
			|ПОМЕСТИТЬ ВТОбработанныеДанныеПоДокументамОснованиям
			|ИЗ
			|	&ОбработанныеДанные КАК Данные
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	ВЫБОР
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 0
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 1
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ)
			|	КОНЕЦ КАК Доля
			|ПОМЕСТИТЬ ВТДолиПолученногоДохода
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМежрасчетныеДокументыОснования КАК МежрасчетныеДокументыОснования
			|		ПО НалогиПоДатам.ДокументОснование = МежрасчетныеДокументыОснования.ДокументОснование
			|ГДЕ
			|	НалогиПоДатам.ДатаУдержания <= &ОкончаниеПериода
			|	И МежрасчетныеДокументыОснования.ДокументОснование ЕСТЬ NULL 
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода,
			|	МАКСИМУМ(ИсходныеДанные.ДатаУдержания) КАК ДатаУдержания
			|ПОМЕСТИТЬ ВТДатыУчета
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|ГДЕ
			|	НЕ ИсходныеДанные.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСУдержаннымНалогом
			|ИЗ
			|	ВТДатыУчета КАК ДатыУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДатыУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДатыУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И (ВЫБОР
			|				КОГДА ДатыУчета.ДатаУдержания > ДатыУчета.ДатаПолученияДохода
			|					ТОГДА ДатыУчета.ДатаУдержания
			|				ИНАЧЕ ДатыУчета.ДатаПолученияДохода
			|			КОНЕЦ >= НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, ДЕНЬ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДолиПолученногоДохода КАК ДолиПолученногоДохода
			|		ПО ДатыУчета.ДатаПолученияДохода = ДолиПолученногоДохода.ДатаПолученияДохода
			|			И ДатыУчета.ФизическоеЛицо = ДолиПолученногоДохода.ФизическоеЛицо
			|ГДЕ
			|	НЕ СведенияОДоходахНДФЛ.Регистратор В
			|				(ВЫБРАТЬ
			|					ДанныеПоДокументамОснованиям.Регистратор
			|				ИЗ
			|					ВТОбработанныеДанныеПоДокументамОснованиям КАК ДанныеПоДокументамОснованиям
			|				ГДЕ
			|					ДанныеПоДокументамОснованиям.СуммаФактическиПолученногоДохода <> 0)
			|	И ЕСТЬNULL(ДолиПолученногоДохода.Доля, 0) <> 0
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОбработанныеДанныеПоДокументамОснованиям.ФизическоеЛицо,
			|	ОбработанныеДанныеПоДокументамОснованиям.Регистратор
			|ИЗ
			|	ВТОбработанныеДанныеПоДокументамОснованиям КАК ОбработанныеДанныеПоДокументамОснованиям
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода) КАК ЭтоМежрасчетныйДокумент
			|ПОМЕСТИТЬ ВТОснованияНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ВзаиморасчетыССотрудниками.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ВзаиморасчетыССотрудниками.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.СуммаДохода > 0
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|	И ВзаиморасчетыССотрудниками.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиям
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Основания.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТОснованияНачислений КАК Основания) КАК Основания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО Основания.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И Основания.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|
			|СГРУППИРОВАТЬ ПО
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|		ПО ОснованияНачислений.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И ОснованияНачислений.Регистратор = НалогиПоДатам.ДокументОснование
			|			И ОснованияНачислений.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|ГДЕ
			|	ОснованияНачислений.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ОснованияСНеудержаннымНалогом.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|			И (СведенияОДоходахНДФЛ.СуммаДохода > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор,
			|	МИНИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.ДатаПолученияДохода) КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода) КАК СуммаДохода,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор) КАК МаксимальныеСуммы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|		ПО МаксимальныеСуммы.СуммаДохода = ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода
			|			И МаксимальныеСуммы.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|			И МаксимальныеСуммы.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОснованияНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОснованияНачислений.ДатаПолученияДохода КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТОставшиесяДатыПолученияДохода
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ПО ОснованияНачислений.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|			И ОснованияНачислений.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|ГДЕ
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыПолученияДохода.ФизическоеЛицо,
			|	ДатыПолученияДохода.ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыПолученияДоходаБезНалогов
			|ИЗ
			|	ВТОставшиесяДатыПолученияДохода КАК ДатыПолученияДохода
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО НалогиПоДатам.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И НалогиПоДатам.ДокументОснование = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ПО НалогиПоДатам.ДокументОснование = ОснованияСНеудержаннымНалогом.Регистратор
			|				И НалогиПоДатам.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|		ПО ДатыПолученияДохода.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И ДатыПолученияДохода.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|ГДЕ
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатыПолученияДохода.ФизическоеЛицо,
			|	ДатыПолученияДохода.ДатаПолученияДохода
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0 И
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА НалогиПоДатам.Сумма
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|				ТОГДА -НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
			|	Доходы.ФизическоеЛицо,
			|	Доходы.ДатаПолученияДохода,
			|	Доходы.Регистратор
			|ПОМЕСТИТЬ ВТДоходыБезНалогов
			|ИЗ
			|	(ВЫБРАТЬ
			|		СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|		СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|		СведенияОДоходахНДФЛ.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиям
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДоходыПоОснованиям.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ДоходыПоОснованиям.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПолученияДоходаБезНалогов КАК ДатыПолученияДоходаБезНалогов
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДатыПолученияДоходаБезНалогов.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.ДатаПолученияДохода = ДатыПолученияДоходаБезНалогов.ДатаПолученияДохода
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|	ГДЕ
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|		И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|		И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|		И ДатыПолученияДоходаБезНалогов.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|		И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ДоходыПоОснованиям.СуммаДохода > 0
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		СведенияОДоходахНДФЛ.СуммаДохода,
			|		СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|		ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|		СведенияОДоходахНДФЛ.Регистратор
			|	ИЗ
			|		ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|				ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|					И ОснованияСНеудержаннымНалогом.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыОснованийСНеудержаннымНалогом КАК ДатыОснованийСНеудержаннымНалогом
			|				ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДатыОснованийСНеудержаннымНалогом.ФизическоеЛицо
			|					И ОснованияСНеудержаннымНалогом.Регистратор = ДатыОснованийСНеудержаннымНалогом.Регистратор
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|	ГДЕ
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода
			|		И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|		И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|		И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|		И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода > 0) КАК Доходы
			|
			|СГРУППИРОВАТЬ ПО
			|	Доходы.ФизическоеЛицо,
			|	Доходы.ДатаПолученияДохода,
			|	Доходы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДатыУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) * ВЫБОР
			|				КОГДА ДолиПолученногоДохода.Доля > 1
			|					ТОГДА 1
			|				ИНАЧЕ ДолиПолученногоДохода.Доля
			|			КОНЕЦ КАК ЧИСЛО(15, 2)), 0) КАК СуммаДохода
			|ИЗ
			|	ВТДатыУчета КАК ДатыУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДатыУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДатыУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И (ВЫБОР
			|				КОГДА ДатыУчета.ДатаУдержания > ДатыУчета.ДатаПолученияДохода
			|					ТОГДА ДатыУчета.ДатаУдержания
			|				ИНАЧЕ ДатыУчета.ДатаПолученияДохода
			|			КОНЕЦ >= НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, ДЕНЬ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДолиПолученногоДохода КАК ДолиПолученногоДохода
			|		ПО ДатыУчета.ДатаПолученияДохода = ДолиПолученногоДохода.ДатаПолученияДохода
			|			И ДатыУчета.ФизическоеЛицо = ДолиПолученногоДохода.ФизическоеЛицо
			|ГДЕ
			|	НЕ СведенияОДоходахНДФЛ.Регистратор В
			|				(ВЫБРАТЬ
			|					ДанныеПоДокументамОснованиям.Регистратор
			|				ИЗ
			|					ВТОбработанныеДанныеПоДокументамОснованиям КАК ДанныеПоДокументамОснованиям
			|				ГДЕ
			|					ДанныеПоДокументамОснованиям.СуммаФактическиПолученногоДохода <> 0)
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатыУчета.ФизическоеЛицо,
			|	ДатыУчета.ДатаПолученияДохода,
			|	ДолиПолученногоДохода.Доля
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления,
			|	СУММА(ИсходныеДанные.Сумма) КАК Сумма,
			|	0 КАК СуммаФактическиПолученногоДохода
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|ГДЕ
			|	НЕ ИсходныеДанные.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода";
			Если ОкончаниеПериода < '20160701' Тогда
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода");
			Иначе
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.КрайнийСрокУплаты МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода И НалогиПоДатам.ДатаУдержания >= ДАТАВРЕМЯ(2016, 7, 1, 0, 0, 0)");
			КонецЕсли;
			
			Результаты = Запрос.ВыполнитьПакет();
			ВсегоРезультатов = Результаты.Количество();
			НеОбработанныеДанные = Результаты[ВсегоРезультатов - 1].Выгрузить();
			СуммыДоходов = Результаты[ВсегоРезультатов - 2].Выгрузить();
			ОбработанныеДанные = НеОбработанныеДанные.СкопироватьКолонки();
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода");
			Для каждого СтрокаДохода Из СуммыДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДохода);
				ВременнаяТаблица = НеОбработанныеДанные.Скопировать(НеОбработанныеДанные.НайтиСтроки(СтруктураПоиска));
				Если ВременнаяТаблица.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДохода.СуммаДохода) Тогда
					Если ВременнаяТаблица.Количество() = 1 Тогда
						ВременнаяТаблица[0].СуммаФактическиПолученногоДохода = СтрокаДохода.СуммаДохода
					Иначе
						КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
						РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДохода.СуммаДохода, КоэффициентыРаспределения);
						Если РаспределениеРесурса <> Неопределено Тогда
							ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаФактическиПолученногоДохода");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, ОбработанныеДанные)
			КонецЦикла;
			
			Запрос.УстановитьПараметр("ОбработанныеДанные", ОбработанныеДанные); 
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Данные.ФизическоеЛицо,
			|	Данные.ДатаПолученияДохода,
			|	Данные.ДатаУдержания,
			|	Данные.СрокПеречисления,
			|	Данные.СуммаФактическиПолученногоДохода
			|ПОМЕСТИТЬ ВТОбработанныеДанные
			|ИЗ
			|	&ОбработанныеДанные КАК Данные";
			Запрос.Выполнить();
			
			НеОбработанныеДанные = Неопределено; СуммыДоходов = Неопределено; ОбработанныеДанные = Неопределено; ВременнаяТаблица = Неопределено;

			ТекстЗапроса =
			"ВЫБРАТЬ
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода КАК ДатаФактическогоПолученияДохода,
			|	НалогиПоДатам.ДатаПолученияДохода КАК П000020010001,
			|	НалогиПоДатам.ДатаУдержания КАК ДатаУдержанияНалога,
			|	НалогиПоДатам.ДатаУдержания КАК П000020011001,
			|	НалогиПоДатам.СрокПеречисления КАК СрокПеречисленияНалога,
			|	НалогиПоДатам.СрокПеречисления КАК П000020012001,
			|	СУММА(НалогиПоДатам.СуммаФактическиПолученногоДохода) < 0 КАК ОтрицательныйДоход,
			|	СУММА(НалогиПоДатам.СуммаФактическиПолученногоДохода) КАК П000020013001,
			|	СУММА(НалогиПоДатам.Сумма) КАК П000020014001
			|ИЗ
			|	(ВЫБРАТЬ
			|		Данные.ДокументОснование КАК Регистратор,
			|		Данные.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|		Данные.ДатаУдержания КАК ДатаУдержания,
			|		Данные.СрокПеречисления КАК СрокПеречисления,
			|		Данные.СуммаВыплаченногоДохода КАК СуммаФактическиПолученногоДохода,
			|		Данные.Сумма КАК Сумма
			|	ИЗ
			|		ВТИсходныеДанныеПоДокументамОснованиям КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		Данные.СуммаДохода,
			|		0
			|	ИЗ
			|		ВТНатуральныеДоходы КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		НЕОПРЕДЕЛЕНО,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		Данные.ДатаУдержания,
			|		Данные.СрокПеречисления,
			|		Данные.СуммаФактическиПолученногоДохода,
			|		0
			|	ИЗ
			|		ВТОбработанныеДанные КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		Данные.СуммаДохода,
			|		0
			|	ИЗ
			|		ВТДоходыБезНалогов КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		Данные.ДатаУдержания,
			|		Данные.СрокПеречисления,
			|		Данные.СуммаФактическиПолученногоДохода,
			|		Данные.Сумма
			|	ИЗ
			|		ВТОбработанныеДанныеПоДокументамОснованиям КАК Данные) КАК НалогиПоДатам
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДатаУдержания,
			|	НалогиПоДатам.СрокПеречисления,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДатаУдержания,
			|	НалогиПоДатам.СрокПеречисления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаУдержанияНалога,
			|	СрокПеречисленияНалога,
			|	ДатаФактическогоПолученияДохода";
			
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Регистратор");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "НалогиПоДатам");
			СводныйРезультат = Запрос.Выполнить().Выгрузить();
			
			Если СводныйРезультат.Найти(Истина,"ОтрицательныйДоход") <> Неопределено Тогда
				
				Запрос.Текст = ТекстЗапроса;
				ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
				
				ОстатокПересчета = 0;
				ОстаткиПересчетаПоФизлицам = Новый Соответствие;
				ОстатокНалогов = 0;
				ОстаткиНалоговПоФизлицам = Новый Соответствие;
				Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
					Если СтрокаТЗ.П000020013001 = 0 Тогда
					ИначеЕсли СтрокаТЗ.П000020013001 > 0 Тогда
						Если ОстатокПересчета > 0 Тогда
							ОстатокФизлица = ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо];
							Если ЗначениеЗаполнено(ОстатокФизлица) Тогда
								КЗачету = Мин(СтрокаТЗ.П000020013001, ОстатокФизлица);
								СтрокаТЗ.П000020013001 = СтрокаТЗ.П000020013001 - КЗачету;
								ОстатокПересчета = ОстатокПересчета - КЗачету;
								ОстаткиПересчетаПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ОстатокФизлица - КЗачету);
							КонецЕсли;
						КонецЕсли;
						Если ОстатокНалогов > 0 Тогда
							ОстатокФизлица = ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо];
							Если ЗначениеЗаполнено(ОстатокФизлица) Тогда
								КЗачету = Мин(СтрокаТЗ.П000020014001, ОстатокФизлица);
								СтрокаТЗ.П000020014001 = СтрокаТЗ.П000020014001 - КЗачету;
								ОстатокНалогов = ОстатокНалогов - КЗачету;
								ОстаткиНалоговПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ОстатокФизлица - КЗачету);
							КонецЕсли;
						КонецЕсли;
					Иначе
						ОстатокПересчета = ОстатокПересчета - СтрокаТЗ.П000020013001;
						ОстаткиПересчетаПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ?(ЗначениеЗаполнено(ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо]),ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо],0) - СтрокаТЗ.П000020013001);
						Если СтрокаТЗ.П000020014001 < 0 Тогда
							ОстатокНалогов = ОстатокНалогов - СтрокаТЗ.П000020014001;
							ОстаткиНалоговПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ?(ЗначениеЗаполнено(ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо]),ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо],0) - СтрокаТЗ.П000020014001);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				Если ОстатокПересчета > 0 Тогда
					ВсегоСтрок = ВременнаяТаблица.Количество();
					Для Счетчик = 1 По ВсегоСтрок Цикл
						СтрокаТЗ = ВременнаяТаблица[ВсегоСтрок - Счетчик];
						Если СтрокаТЗ.П000020013001 < 0 Тогда
							Если ОстатокПересчета = 0 Тогда
							ИначеЕсли СтрокаТЗ.П000020013001 < -ОстатокПересчета Тогда
								ОстатокПересчета = 0;
							Иначе
								ОстатокПересчета = ОстатокПересчета + СтрокаТЗ.П000020013001;
							КонецЕсли;
							СтрокаТЗ.П000020013001 = 0;
						КонецЕсли;
						Если ОстатокНалогов > 0 Тогда
							Если СтрокаТЗ.П000020014001 < 0 Тогда
								Если ОстатокНалогов = 0 Тогда
								ИначеЕсли СтрокаТЗ.П000020014001 < -ОстатокНалогов Тогда
									ОстатокНалогов = 0;
								Иначе
									ОстатокНалогов = ОстатокНалогов + СтрокаТЗ.П000020014001;
								КонецЕсли;
								СтрокаТЗ.П000020014001 = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
						Если СтрокаТЗ.П000020013001 < 0 Тогда
							СтрокаТЗ.П000020013001 = 0;
							Если ОстатокНалогов = 0 И СтрокаТЗ.П000020014001 < 0 Тогда
								СтрокаТЗ.П000020014001 = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ОписаниеТаблиц.Раздел2 = ВременнаяТаблица.СкопироватьКолонки();
				ВременнаяТаблица.Свернуть("ДатаФактическогоПолученияДохода,П000020010001,ДатаУдержанияНалога,П000020011001,СрокПеречисленияНалога,П000020012001" + ?(ПодробныеДанные, ",ФизическоеЛицо", ""),"П000020014001,П000020013001");
				Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
					Если СтрокаТЗ.П000020013001 <> 0 Или СтрокаТЗ.П000020014001 <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ОписаниеТаблиц.Раздел2.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли ПодробныеДанные Тогда
				Запрос.Текст = ТекстЗапроса;
				ОписаниеТаблиц.Раздел2 = Запрос.Выполнить().Выгрузить();
			Иначе
				ОписаниеТаблиц.Раздел2 = СводныйРезультат.СкопироватьКолонки();
				Для каждого СтрокаТЗ Из СводныйРезультат Цикл
					Если СтрокаТЗ.П000020013001 <> 0 Или СтрокаТЗ.П000020014001 <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ОписаниеТаблиц.Раздел2.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетПоказателей_6НДФЛ_2016Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные = Ложь)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("НачалоПредыдущегоГода", ДобавитьМесяц(НачалоПериода, -12));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ДатаПодписи", ДатаПодписи);
	Запрос.УстановитьПараметр("ОкончаниеПериодаОсмотраДоходовВычетов", ?(КонецГода(ОкончаниеПериода) = ОкончаниеПериода, Макс(ДатаПодписи, ОкончаниеПериода), ОкончаниеПериода));
	
	Если ОписаниеТаблиц.Свойство("Раздел1Доходы") Или ОписаниеТаблиц.Свойство("Раздел1Вычеты") Или ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
		|	СведенияОДоходахНДФЛ.КодДохода,
		|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СведенияОДоходахНДФЛ.Регистратор,
		|	СведенияОДоходахНДФЛ.Начисление,
		|	СведенияОДоходахНДФЛ.КодВычета,
		|	СведенияОДоходахНДФЛ.СуммаВычета,
		|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
		|ПОМЕСТИТЬ ВТДоходы
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
		|ГДЕ
		|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
		|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И СведенияОДоходахНДФЛ.Организация = &Организация
		|	И (СведенияОДоходахНДФЛ.СуммаДохода <> 0
		|			ИЛИ СведенияОДоходахНДФЛ.СуммаВычета <> 0)";
		Запрос.Выполнить();
		
		СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "УчитыватьИзмененияСтатусаДляОтчетности", Месяц(ОкончаниеПериода));
		
		Если ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ФизическоеЛицо), 0) КАК П000010006001
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))";
			
			ОписаниеТаблиц.КоличествоПолучателейДохода = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
	
		Если ОписаниеТаблиц.Свойство("Раздел1Доходы") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодДохода,
			|	СведенияОДоходахНДФЛ.Начисление,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.СуммаДохода,
			|	ВЫБОР
			|		КОГДА СведенияОДоходахНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДивидендов
			|ПОМЕСТИТЬ ВТДоходыПоСтавкам
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК П000010001001,
			|	СведенияОДоходах.СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаДохода) КАК П000010002001,
			|	СУММА(СведенияОДоходах.СуммаДивидендов) КАК П000010002501
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодДохода");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел1Доходы = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел1Вычеты") Тогда
			
			Запрос.УстановитьПараметр("ГодПериода", Год(ОкончаниеПериода));
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодВычета,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.СуммаВычета
			|ПОМЕСТИТЬ ВТВычетыПоСтавкам
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаВычета <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
			|ГДЕ
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИмущественныеВычетыНДФЛ.Регистратор,
			|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
			|	ИмущественныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ИмущественныеВычетыНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
			|ГДЕ
			|	ИмущественныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
			|	И ИмущественныеВычетыНДФЛ.МесяцРегистрации <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|	И ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И ИмущественныеВычетыНДФЛ.Организация = &Организация
			|	И ИмущественныеВычетыНДФЛ.Сумма <> 0
			|	И ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|	И ИмущественныеВычетыНДФЛ.Год = &ГодПериода";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК П000010001001,
			|	СведенияОДоходах.СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаВычета) КАК П000010003001
			|ИЗ
			|	ВТВычетыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодВычета");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел1Вычеты = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Или ОписаниеТаблиц.Свойство("Раздел2") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК Период,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК ДатаУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ДатаПодписи
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация
		|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма <> 0
		|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ
		|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода <> 0)";
		Запрос.Выполнить();
		
		Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Тогда
			
			СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТНалоги", "УчитыватьИзмененияСтатусаДляОтчетности", Месяц(ОкончаниеПериода));
			
			Запрос.УстановитьПараметр("ДатаПервогоОтчетногоПериода", '20160101');
			Запрос.Текст =
			"ВЫБРАТЬ
			|	НДФЛ.ФизическоеЛицо,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Начислено,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК НачисленоПоДивидендам,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ЗачтеноАвансов,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаПолученияДохода >= &ДатаПервогоОтчетногоПериода
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Удержано,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|			ТОГДА -НДФЛ.Сумма
			|		КОГДА (НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
			|				ИЛИ НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей))
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА -НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Сальдо,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
			|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|			ТОГДА -НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Возвращено
			|ПОМЕСТИТЬ ВТНалогиПоСтавкам
			|ИЗ
			|	ВТНалоги КАК НДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО НДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И НДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И НДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И НДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК СтавкаНалога,
			|	СУММА(Налоги.Сальдо) КАК НеУдержано
			|ПОМЕСТИТЬ ВТНеУдержано
			|ИЗ
			|	ВТНалогиПоСтавкам КАК Налоги
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога
			|
			|ИМЕЮЩИЕ
			|	СУММА(Налоги.Сальдо) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога,
			|	СУММА(Налоги.Начислено) КАК Начислено,
			|	СУММА(Налоги.НачисленоПоДивидендам) КАК НачисленоПоДивидендам,
			|	СУММА(Налоги.ЗачтеноАвансов) КАК ЗачтеноАвансов,
			|	СУММА(Налоги.Удержано) КАК Удержано,
			|	ЕСТЬNULL(МАКСИМУМ(ПоФизлицам.НеУдержано), 0) КАК НеУдержано,
			|	СУММА(Налоги.Возвращено) КАК Возвращено
			|ПОМЕСТИТЬ ВТДанныеПоФизилицам
			|ИЗ
			|	ВТНалогиПоСтавкам КАК Налоги
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеУдержано КАК ПоФизлицам
			|		ПО Налоги.ФизическоеЛицо = ПоФизлицам.ФизическоеЛицо
			|			И Налоги.СтавкаНалога = ПоФизлицам.СтавкаНалога
			|ГДЕ
			|	(Налоги.Начислено <> 0
			|			ИЛИ Налоги.ЗачтеноАвансов <> 0
			|			ИЛИ Налоги.Удержано <> 0
			|			ИЛИ Налоги.Возвращено <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК П000010001001,
			|	Налоги.СтавкаНалога,
			|	СУММА(Налоги.Начислено) КАК П000010004001,
			|	СУММА(Налоги.НачисленоПоДивидендам) КАК П000010004501,
			|	СУММА(Налоги.ЗачтеноАвансов) КАК П000010005001,
			|	СУММА(Налоги.Удержано) КАК П000010007001,
			|	СУММА(Налоги.НеУдержано) КАК П000010008001,
			|	СУММА(Налоги.Возвращено) КАК П000010009001
			|ИЗ
			|	ВТДанныеПоФизилицам КАК Налоги
			|ГДЕ
			|	(Налоги.Начислено <> 0
			|			ИЛИ Налоги.ЗачтеноАвансов <> 0
			|			ИЛИ Налоги.Удержано <> 0
			|			ИЛИ Налоги.Возвращено <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога";
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "Налоги");
			ОписаниеТаблиц.Раздел1Налоги = Запрос.Выполнить().Выгрузить();
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел2") Тогда
			
			Запрос.УстановитьПараметр("НачалоОтчетногоКвартала", НачалоКвартала(ОкончаниеПериода));
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	МАКСИМУМ(ДатыУчета.ДатаПолученияДохода) КАК ПоздняяДатаПолученияДохода,
			|	МИНИМУМ(ДатыУчета.ДатаПолученияДохода) КАК РанняяДатаПолученияДохода
			|ИЗ
			|	ВТНалоги КАК ДатыУчета
			|ГДЕ
			|	ДатыУчета.ДатаУдержания <= &ОкончаниеПериода";
			Выборка = Запрос.Выполнить().Выбрать();
			РанняяДатаПолученияДохода = НачалоПериода;
			ПоздняяДатаПолученияДохода = ДобавитьМесяц(ОкончаниеПериода, 1);
			Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.РанняяДатаПолученияДохода) Тогда
				РанняяДатаПолученияДохода = Мин(РанняяДатаПолученияДохода, Выборка.РанняяДатаПолученияДохода);
				ПоздняяДатаПолученияДохода = Макс(ПоздняяДатаПолученияДохода, Выборка.ПоздняяДатаПолученияДохода);
			КонецЕсли;
			Запрос.УстановитьПараметр("РанняяДатаПолученияДохода", РанняяДатаПолученияДохода);
			Запрос.УстановитьПараметр("ПоздняяДатаПолученияДохода", ПоздняяДатаПолученияДохода);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодДохода,
			|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
			|	СведенияОДоходахНДФЛ.Период КАК ПериодРегистрации,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
			|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ,
			|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|ПОМЕСТИТЬ ВТСтрокиДоходов
			|ИЗ
			|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|ГДЕ
			|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &РанняяДатаПолученияДохода И &ПоздняяДатаПолученияДохода
			|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И СведенияОДоходахНДФЛ.Организация = &Организация
			|	И СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета <> 0";
			Запрос.Выполнить();

			СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиДоходов", "УчитыватьИзмененияСтатусаДляОтчетности", Месяц(ОкончаниеПериода));
		
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.ПериодРегистрации КАК Период,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
			|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|ПОМЕСТИТЬ ВТСведенияОДоходахНДФЛ
			|ИЗ
			|	ВТСтрокиДоходов КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|ГДЕ
			|	(НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТРегистраторыНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВзаиморасчетыССотрудниками.Регистратор,
			|	СУММА(ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
			|ПОМЕСТИТЬ ВТНачисленоПоРегистраторам
			|ИЗ
			|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
			|ГДЕ
			|	ВзаиморасчетыССотрудниками.Регистратор В
			|			(ВЫБРАТЬ
			|				РегистраторыНачислений.Регистратор
			|			ИЗ
			|				ВТРегистраторыНачислений КАК РегистраторыНачислений)
			|	И ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВзаиморасчетыССотрудниками.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВзаиморасчетыССотрудниками.Регистратор,
			|	-СУММА(ВзаиморасчетыССотрудниками.Сумма) КАК Сумма
			|ПОМЕСТИТЬ ВТНДФЛПоРегистраторам
			|ИЗ
			|	ВТНалоги КАК ВзаиморасчетыССотрудниками
			|ГДЕ
			|	ВзаиморасчетыССотрудниками.Регистратор В
			|			(ВЫБРАТЬ
			|				РегистраторыНачислений.Регистратор
			|			ИЗ
			|				ВТРегистраторыНачислений КАК РегистраторыНачислений)
			|	И ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВзаиморасчетыССотрудниками.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ) КАК ДатаУдержания,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисления,
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.Сумма КАК Сумма,
			|	НалогиПоДатам.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода
			|ПОМЕСТИТЬ ВТИсходныеДанныеПоДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И &УсловиеОтбораПоДатам
			|	И НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода) КАК ЭтоМежрасчетныйДокумент,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТОснованияНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанныеПоДокументамОснованиям КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И (СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.ДокументОснование
			|				ИЛИ СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленоПоРегистраторам КАК НачисленоПоРегистраторам
			|		ПО СведенияОДоходахНДФЛ.Регистратор = НачисленоПоРегистраторам.Регистратор
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДФЛПоРегистраторам КАК НДФЛПоРегистраторам
			|		ПО СведенияОДоходахНДФЛ.Регистратор = НДФЛПоРегистраторам.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.СуммаДохода > 0
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ЕСТЬNULL(НачисленоПоРегистраторам.СуммаВзаиморасчетов, 0) <= ЕСТЬNULL(НДФЛПоРегистраторам.Сумма, 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиям
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Основания.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТОснованияНачислений КАК Основания) КАК Основания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО Основания.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И Основания.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|
			|СГРУППИРОВАТЬ ПО
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|		ПО ОснованияНачислений.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И (ОснованияНачислений.Регистратор = НалогиПоДатам.ДокументОснование
			|				ИЛИ ОснованияНачислений.Регистратор = НалогиПоДатам.Регистратор)
			|			И ОснованияНачислений.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|ГДЕ
			|	ОснованияНачислений.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ОснованияСНеудержаннымНалогом.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|			И (СведенияОДоходахНДФЛ.СуммаДохода > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор,
			|	МИНИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.ДатаПолученияДохода) КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода) КАК СуммаДохода,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор) КАК МаксимальныеСуммы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|		ПО МаксимальныеСуммы.СуммаДохода = ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода
			|			И МаксимальныеСуммы.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|			И МаксимальныеСуммы.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТНатуральныеДоходы
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанныеПоДокументамОснованиям КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.ДокументОснование
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|			ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|				И ОснованияСНеудержаннымНалогом.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыОснованийСНеудержаннымНалогом КАК ДатыОснованийСНеудержаннымНалогом
			|			ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДатыОснованийСНеудержаннымНалогом.ФизическоеЛицо
			|				И ОснованияСНеудержаннымНалогом.Регистратор = ДатыОснованийСНеудержаннымНалогом.Регистратор
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода > 0
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОснованияСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоОснованиям
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТРегистраторыНачислений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленоПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНДФЛПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОснованияНачислений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НалогиПоДатам.ДокументОснование
			|ПОМЕСТИТЬ ВТМежрасчетныеДокументыОснования
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|	И НалогиПоДатам.РасчетМежрасчетногоПериода
			|	И НалогиПоДатам.ДокументОснование <> НЕОПРЕДЕЛЕНО
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ) КАК ДатаУдержания,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисления,
			|	СУММА(НалогиПоДатам.Сумма) КАК Сумма,
			|	МежрасчетныеДокументыОснования.ДокументОснование ЕСТЬ НЕ NULL  КАК ЭтоМежрасчетныйДокумент
			|ПОМЕСТИТЬ ВТИсходныеДанныеПоСтарымДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМежрасчетныеДокументыОснования КАК МежрасчетныеДокументыОснования
			|		ПО НалогиПоДатам.ДокументОснование = МежрасчетныеДокументыОснования.ДокументОснование
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И &УсловиеОтбораПоДатам
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ),
			|	НалогиПоДатам.КрайнийСрокУплаты,
			|	МежрасчетныеДокументыОснования.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	ВЫБОР
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 0
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 1
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ)
			|	КОНЕЦ КАК Доля
			|ПОМЕСТИТЬ ВТДолиПолученногоДоходаПоДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ДатаУдержания <= &ОкончаниеПериода
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДанныеУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ДанныеУчета.ДокументОснование КАК Регистратор,
			|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) * ВЫБОР
			|				КОГДА ДанныеУчета.Доля > 1
			|					ТОГДА 1
			|				ИНАЧЕ ДанныеУчета.Доля
			|			КОНЕЦ КАК ЧИСЛО(15, 2)), 0) КАК СуммаДохода
			|ИЗ
			|	ВТДолиПолученногоДоходаПоДокументамОснованиям КАК ДанныеУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДанныеУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДанныеУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И ДанныеУчета.ДокументОснование = СведенияОДоходахНДФЛ.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеУчета.ФизическоеЛицо,
			|	ДанныеУчета.ДатаПолученияДохода,
			|	ДанныеУчета.Доля,
			|	ДанныеУчета.ДокументОснование
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода,
			|	Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ДокументОснование КАК Регистратор,
			|	ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления,
			|	ИсходныеДанные.Сумма,
			|	0 КАК СуммаФактическиПолученногоДохода
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода,
			|	Регистратор";
			Если ОкончаниеПериода < '20160701' Тогда
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода");
			Иначе
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.КрайнийСрокУплаты МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода И НалогиПоДатам.ДатаУдержания >= ДАТАВРЕМЯ(2016, 7, 1, 0, 0, 0)");
			КонецЕсли;
			Результаты = Запрос.ВыполнитьПакет();
			ВсегоРезультатов = Результаты.Количество();
			НеОбработанныеДанные = Результаты[ВсегоРезультатов - 1].Выгрузить();
			ОбработанныеДанные = НеОбработанныеДанные.СкопироватьКолонки();
			СуммыДоходов = Результаты[ВсегоРезультатов - 2].Выгрузить();
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода,Регистратор");
			Для каждого СтрокаДохода Из СуммыДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДохода);
				ВременнаяТаблица = НеОбработанныеДанные.Скопировать(НеОбработанныеДанные.НайтиСтроки(СтруктураПоиска));
				Если ВременнаяТаблица.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДохода.СуммаДохода) Тогда
					Если ВременнаяТаблица.Количество() = 1 Тогда
						ВременнаяТаблица[0].СуммаФактическиПолученногоДохода = СтрокаДохода.СуммаДохода
					Иначе
						КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
						РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДохода.СуммаДохода, КоэффициентыРаспределения);
						Если РаспределениеРесурса <> Неопределено Тогда
							ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаФактическиПолученногоДохода");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, ОбработанныеДанные)
			КонецЦикла;
			Запрос.УстановитьПараметр("ОбработанныеДанные", ОбработанныеДанные); НеОбработанныеДанные = Неопределено; СуммыДоходов = Неопределено; ОбработанныеДанные = Неопределено; ВременнаяТаблица = Неопределено;
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Данные.Регистратор,
			|	Данные.ФизическоеЛицо,
			|	Данные.ДатаПолученияДохода,
			|	Данные.ДатаУдержания,
			|	Данные.СрокПеречисления,
			|	Данные.СуммаФактическиПолученногоДохода,
			|	Данные.Сумма
			|ПОМЕСТИТЬ ВТОбработанныеДанныеПоДокументамОснованиям
			|ИЗ
			|	&ОбработанныеДанные КАК Данные
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	ВЫБОР
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 0
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 1
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ)
			|	КОНЕЦ КАК Доля
			|ПОМЕСТИТЬ ВТДолиПолученногоДохода
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМежрасчетныеДокументыОснования КАК МежрасчетныеДокументыОснования
			|		ПО НалогиПоДатам.ДокументОснование = МежрасчетныеДокументыОснования.ДокументОснование
			|ГДЕ
			|	НалогиПоДатам.ДатаУдержания <= &ОкончаниеПериода
			|	И МежрасчетныеДокументыОснования.ДокументОснование ЕСТЬ NULL 
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода,
			|	МАКСИМУМ(ИсходныеДанные.ДатаУдержания) КАК ДатаУдержания
			|ПОМЕСТИТЬ ВТДатыУчета
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|ГДЕ
			|	НЕ ИсходныеДанные.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСУдержаннымНалогом
			|ИЗ
			|	ВТДатыУчета КАК ДатыУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДатыУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДатыУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И (ВЫБОР
			|				КОГДА ДатыУчета.ДатаУдержания > ДатыУчета.ДатаПолученияДохода
			|					ТОГДА ДатыУчета.ДатаУдержания
			|				ИНАЧЕ ДатыУчета.ДатаПолученияДохода
			|			КОНЕЦ >= НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, ДЕНЬ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДолиПолученногоДохода КАК ДолиПолученногоДохода
			|		ПО ДатыУчета.ДатаПолученияДохода = ДолиПолученногоДохода.ДатаПолученияДохода
			|			И ДатыУчета.ФизическоеЛицо = ДолиПолученногоДохода.ФизическоеЛицо
			|ГДЕ
			|	НЕ СведенияОДоходахНДФЛ.Регистратор В
			|				(ВЫБРАТЬ
			|					ДанныеПоДокументамОснованиям.Регистратор
			|				ИЗ
			|					ВТОбработанныеДанныеПоДокументамОснованиям КАК ДанныеПоДокументамОснованиям
			|				ГДЕ
			|					ДанныеПоДокументамОснованиям.СуммаФактическиПолученногоДохода <> 0)
			|	И ЕСТЬNULL(ДолиПолученногоДохода.Доля, 0) <> 0
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОбработанныеДанныеПоДокументамОснованиям.ФизическоеЛицо,
			|	ОбработанныеДанныеПоДокументамОснованиям.Регистратор
			|ИЗ
			|	ВТОбработанныеДанныеПоДокументамОснованиям КАК ОбработанныеДанныеПоДокументамОснованиям
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода) КАК ЭтоМежрасчетныйДокумент
			|ПОМЕСТИТЬ ВТОснованияНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ВзаиморасчетыССотрудниками.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ВзаиморасчетыССотрудниками.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.СуммаДохода > 0
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|	И ВзаиморасчетыССотрудниками.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиям
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Основания.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТОснованияНачислений КАК Основания) КАК Основания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО Основания.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И Основания.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|
			|СГРУППИРОВАТЬ ПО
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|		ПО ОснованияНачислений.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И ОснованияНачислений.Регистратор = НалогиПоДатам.ДокументОснование
			|			И ОснованияНачислений.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|ГДЕ
			|	ОснованияНачислений.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ОснованияСНеудержаннымНалогом.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|			И (СведенияОДоходахНДФЛ.СуммаДохода > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор,
			|	МИНИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.ДатаПолученияДохода) КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода) КАК СуммаДохода,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор) КАК МаксимальныеСуммы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|		ПО МаксимальныеСуммы.СуммаДохода = ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода
			|			И МаксимальныеСуммы.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|			И МаксимальныеСуммы.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОснованияНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОснованияНачислений.ДатаПолученияДохода КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТОставшиесяДатыПолученияДохода
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ПО ОснованияНачислений.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|			И ОснованияНачислений.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|ГДЕ
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыПолученияДохода.ФизическоеЛицо,
			|	ДатыПолученияДохода.ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыПолученияДоходаБезНалогов
			|ИЗ
			|	ВТОставшиесяДатыПолученияДохода КАК ДатыПолученияДохода
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО НалогиПоДатам.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И НалогиПоДатам.ДокументОснование = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ПО НалогиПоДатам.ДокументОснование = ОснованияСНеудержаннымНалогом.Регистратор
			|				И НалогиПоДатам.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|		ПО ДатыПолученияДохода.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И ДатыПолученияДохода.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|ГДЕ
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатыПолученияДохода.ФизическоеЛицо,
			|	ДатыПолученияДохода.ДатаПолученияДохода
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0 И
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА НалогиПоДатам.Сумма
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|				ТОГДА -НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
			|	Доходы.ФизическоеЛицо,
			|	Доходы.ДатаПолученияДохода,
			|	Доходы.Регистратор
			|ПОМЕСТИТЬ ВТДоходыБезНалогов
			|ИЗ
			|	(ВЫБРАТЬ
			|		СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|		СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|		СведенияОДоходахНДФЛ.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиям
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДоходыПоОснованиям.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ДоходыПоОснованиям.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПолученияДоходаБезНалогов КАК ДатыПолученияДоходаБезНалогов
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДатыПолученияДоходаБезНалогов.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.ДатаПолученияДохода = ДатыПолученияДоходаБезНалогов.ДатаПолученияДохода
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|	ГДЕ
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|		И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|		И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|		И ДатыПолученияДоходаБезНалогов.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|		И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ДоходыПоОснованиям.СуммаДохода > 0
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		СведенияОДоходахНДФЛ.СуммаДохода,
			|		СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|		ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|		СведенияОДоходахНДФЛ.Регистратор
			|	ИЗ
			|		ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|				ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|					И ОснованияСНеудержаннымНалогом.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыОснованийСНеудержаннымНалогом КАК ДатыОснованийСНеудержаннымНалогом
			|				ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДатыОснованийСНеудержаннымНалогом.ФизическоеЛицо
			|					И ОснованияСНеудержаннымНалогом.Регистратор = ДатыОснованийСНеудержаннымНалогом.Регистратор
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|	ГДЕ
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода
			|		И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|		И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|		И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|		И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода > 0) КАК Доходы
			|
			|СГРУППИРОВАТЬ ПО
			|	Доходы.ФизическоеЛицо,
			|	Доходы.ДатаПолученияДохода,
			|	Доходы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДатыУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) * ВЫБОР
			|				КОГДА ДолиПолученногоДохода.Доля > 1
			|					ТОГДА 1
			|				ИНАЧЕ ДолиПолученногоДохода.Доля
			|			КОНЕЦ КАК ЧИСЛО(15, 2)), 0) КАК СуммаДохода
			|ИЗ
			|	ВТДатыУчета КАК ДатыУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДатыУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДатыУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И (ВЫБОР
			|				КОГДА ДатыУчета.ДатаУдержания > ДатыУчета.ДатаПолученияДохода
			|					ТОГДА ДатыУчета.ДатаУдержания
			|				ИНАЧЕ ДатыУчета.ДатаПолученияДохода
			|			КОНЕЦ >= НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, ДЕНЬ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДолиПолученногоДохода КАК ДолиПолученногоДохода
			|		ПО ДатыУчета.ДатаПолученияДохода = ДолиПолученногоДохода.ДатаПолученияДохода
			|			И ДатыУчета.ФизическоеЛицо = ДолиПолученногоДохода.ФизическоеЛицо
			|ГДЕ
			|	НЕ СведенияОДоходахНДФЛ.Регистратор В
			|				(ВЫБРАТЬ
			|					ДанныеПоДокументамОснованиям.Регистратор
			|				ИЗ
			|					ВТОбработанныеДанныеПоДокументамОснованиям КАК ДанныеПоДокументамОснованиям
			|				ГДЕ
			|					ДанныеПоДокументамОснованиям.СуммаФактическиПолученногоДохода <> 0)
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатыУчета.ФизическоеЛицо,
			|	ДатыУчета.ДатаПолученияДохода,
			|	ДолиПолученногоДохода.Доля
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления,
			|	СУММА(ИсходныеДанные.Сумма) КАК Сумма,
			|	0 КАК СуммаФактическиПолученногоДохода
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|ГДЕ
			|	НЕ ИсходныеДанные.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода";
			Если ОкончаниеПериода < '20160701' Тогда
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода");
			Иначе
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.КрайнийСрокУплаты МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода И НалогиПоДатам.ДатаУдержания >= ДАТАВРЕМЯ(2016, 7, 1, 0, 0, 0)");
			КонецЕсли;
			
			Результаты = Запрос.ВыполнитьПакет();
			ВсегоРезультатов = Результаты.Количество();
			НеОбработанныеДанные = Результаты[ВсегоРезультатов - 1].Выгрузить();
			СуммыДоходов = Результаты[ВсегоРезультатов - 2].Выгрузить();
			ОбработанныеДанные = НеОбработанныеДанные.СкопироватьКолонки();
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода");
			Для каждого СтрокаДохода Из СуммыДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДохода);
				ВременнаяТаблица = НеОбработанныеДанные.Скопировать(НеОбработанныеДанные.НайтиСтроки(СтруктураПоиска));
				Если ВременнаяТаблица.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДохода.СуммаДохода) Тогда
					Если ВременнаяТаблица.Количество() = 1 Тогда
						ВременнаяТаблица[0].СуммаФактическиПолученногоДохода = СтрокаДохода.СуммаДохода
					Иначе
						КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
						РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДохода.СуммаДохода, КоэффициентыРаспределения);
						Если РаспределениеРесурса <> Неопределено Тогда
							ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаФактическиПолученногоДохода");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, ОбработанныеДанные)
			КонецЦикла;
			
			Запрос.УстановитьПараметр("ОбработанныеДанные", ОбработанныеДанные); 
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Данные.ФизическоеЛицо,
			|	Данные.ДатаПолученияДохода,
			|	Данные.ДатаУдержания,
			|	Данные.СрокПеречисления,
			|	Данные.СуммаФактическиПолученногоДохода
			|ПОМЕСТИТЬ ВТОбработанныеДанные
			|ИЗ
			|	&ОбработанныеДанные КАК Данные";
			Запрос.Выполнить();
			
			НеОбработанныеДанные = Неопределено; СуммыДоходов = Неопределено; ОбработанныеДанные = Неопределено; ВременнаяТаблица = Неопределено;

			ТекстЗапроса =
			"ВЫБРАТЬ
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода КАК ДатаФактическогоПолученияДохода,
			|	НалогиПоДатам.ДатаПолученияДохода КАК П000020010001,
			|	НалогиПоДатам.ДатаУдержания КАК ДатаУдержанияНалога,
			|	НалогиПоДатам.ДатаУдержания КАК П000020011001,
			|	НалогиПоДатам.СрокПеречисления КАК СрокПеречисленияНалога,
			|	НалогиПоДатам.СрокПеречисления КАК П000020012001,
			|	СУММА(НалогиПоДатам.СуммаФактическиПолученногоДохода) < 0 КАК ОтрицательныйДоход,
			|	СУММА(НалогиПоДатам.СуммаФактическиПолученногоДохода) КАК П000020013001,
			|	СУММА(НалогиПоДатам.Сумма) КАК П000020014001
			|ИЗ
			|	(ВЫБРАТЬ
			|		Данные.ДокументОснование КАК Регистратор,
			|		Данные.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|		Данные.ДатаУдержания КАК ДатаУдержания,
			|		Данные.СрокПеречисления КАК СрокПеречисления,
			|		Данные.СуммаВыплаченногоДохода КАК СуммаФактическиПолученногоДохода,
			|		Данные.Сумма КАК Сумма
			|	ИЗ
			|		ВТИсходныеДанныеПоДокументамОснованиям КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		Данные.СуммаДохода,
			|		0
			|	ИЗ
			|		ВТНатуральныеДоходы КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		НЕОПРЕДЕЛЕНО,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		Данные.ДатаУдержания,
			|		Данные.СрокПеречисления,
			|		Данные.СуммаФактическиПолученногоДохода,
			|		0
			|	ИЗ
			|		ВТОбработанныеДанные КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		Данные.СуммаДохода,
			|		0
			|	ИЗ
			|		ВТДоходыБезНалогов КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		Данные.ДатаУдержания,
			|		Данные.СрокПеречисления,
			|		Данные.СуммаФактическиПолученногоДохода,
			|		Данные.Сумма
			|	ИЗ
			|		ВТОбработанныеДанныеПоДокументамОснованиям КАК Данные) КАК НалогиПоДатам
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДатаУдержания,
			|	НалогиПоДатам.СрокПеречисления,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДатаУдержания,
			|	НалогиПоДатам.СрокПеречисления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаУдержанияНалога,
			|	СрокПеречисленияНалога,
			|	ДатаФактическогоПолученияДохода";
			
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Регистратор");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "НалогиПоДатам");
			СводныйРезультат = Запрос.Выполнить().Выгрузить();
			
			Если СводныйРезультат.Найти(Истина,"ОтрицательныйДоход") <> Неопределено Тогда
				
				Запрос.Текст = ТекстЗапроса;
				ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
				
				ОстатокПересчета = 0;
				ОстаткиПересчетаПоФизлицам = Новый Соответствие;
				ОстатокНалогов = 0;
				ОстаткиНалоговПоФизлицам = Новый Соответствие;
				Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
					Если СтрокаТЗ.П000020013001 = 0 Тогда
					ИначеЕсли СтрокаТЗ.П000020013001 > 0 Тогда
						Если ОстатокПересчета > 0 Тогда
							ОстатокФизлица = ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо];
							Если ЗначениеЗаполнено(ОстатокФизлица) Тогда
								КЗачету = Мин(СтрокаТЗ.П000020013001, ОстатокФизлица);
								СтрокаТЗ.П000020013001 = СтрокаТЗ.П000020013001 - КЗачету;
								ОстатокПересчета = ОстатокПересчета - КЗачету;
								ОстаткиПересчетаПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ОстатокФизлица - КЗачету);
							КонецЕсли;
						КонецЕсли;
						Если ОстатокНалогов > 0 Тогда
							ОстатокФизлица = ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо];
							Если ЗначениеЗаполнено(ОстатокФизлица) Тогда
								КЗачету = Мин(СтрокаТЗ.П000020014001, ОстатокФизлица);
								СтрокаТЗ.П000020014001 = СтрокаТЗ.П000020014001 - КЗачету;
								ОстатокНалогов = ОстатокНалогов - КЗачету;
								ОстаткиНалоговПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ОстатокФизлица - КЗачету);
							КонецЕсли;
						КонецЕсли;
					Иначе
						ОстатокПересчета = ОстатокПересчета - СтрокаТЗ.П000020013001;
						ОстаткиПересчетаПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ?(ЗначениеЗаполнено(ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо]),ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо],0) - СтрокаТЗ.П000020013001);
						Если СтрокаТЗ.П000020014001 < 0 Тогда
							ОстатокНалогов = ОстатокНалогов - СтрокаТЗ.П000020014001;
							ОстаткиНалоговПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ?(ЗначениеЗаполнено(ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо]),ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо],0) - СтрокаТЗ.П000020014001);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				Если ОстатокПересчета > 0 Тогда
					ВсегоСтрок = ВременнаяТаблица.Количество();
					Для Счетчик = 1 По ВсегоСтрок Цикл
						СтрокаТЗ = ВременнаяТаблица[ВсегоСтрок - Счетчик];
						Если СтрокаТЗ.П000020013001 < 0 Тогда
							Если ОстатокПересчета = 0 Тогда
							ИначеЕсли СтрокаТЗ.П000020013001 < -ОстатокПересчета Тогда
								ОстатокПересчета = 0;
							Иначе
								ОстатокПересчета = ОстатокПересчета + СтрокаТЗ.П000020013001;
							КонецЕсли;
							СтрокаТЗ.П000020013001 = 0;
						КонецЕсли;
						Если ОстатокНалогов > 0 Тогда
							Если СтрокаТЗ.П000020014001 < 0 Тогда
								Если ОстатокНалогов = 0 Тогда
								ИначеЕсли СтрокаТЗ.П000020014001 < -ОстатокНалогов Тогда
									ОстатокНалогов = 0;
								Иначе
									ОстатокНалогов = ОстатокНалогов + СтрокаТЗ.П000020014001;
								КонецЕсли;
								СтрокаТЗ.П000020014001 = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
						Если СтрокаТЗ.П000020013001 < 0 Тогда
							СтрокаТЗ.П000020013001 = 0;
							Если ОстатокНалогов = 0 И СтрокаТЗ.П000020014001 < 0 Тогда
								СтрокаТЗ.П000020014001 = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ОписаниеТаблиц.Раздел2 = ВременнаяТаблица.СкопироватьКолонки();
				ВременнаяТаблица.Свернуть("ДатаФактическогоПолученияДохода,П000020010001,ДатаУдержанияНалога,П000020011001,СрокПеречисленияНалога,П000020012001" + ?(ПодробныеДанные, ",ФизическоеЛицо", ""),"П000020014001,П000020013001");
				Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
					Если СтрокаТЗ.П000020013001 <> 0 Или СтрокаТЗ.П000020014001 <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ОписаниеТаблиц.Раздел2.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли ПодробныеДанные Тогда
				Запрос.Текст = ТекстЗапроса;
				ОписаниеТаблиц.Раздел2 = Запрос.Выполнить().Выгрузить();
			Иначе
				ОписаниеТаблиц.Раздел2 = СводныйРезультат.СкопироватьКолонки();
				Для каждого СтрокаТЗ Из СводныйРезультат Цикл
					Если СтрокаТЗ.П000020013001 <> 0 Или СтрокаТЗ.П000020014001 <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ОписаниеТаблиц.Раздел2.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция УдалитьПоляРасшифровкиИзЗапроса(Знач ТекстЗапроса, МассивПолей, ИмяТаблицы = "СведенияОДоходах")
	
	Для каждого ПолеРасшифровки Из МассивПолей Цикл
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,ИмяТаблицы + "." + ПолеРасшифровки,"Неопределено");
	КонецЦикла;
	
	Возврат ТекстЗапроса
	
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаНДФЛ() Экспорт
	
	НДФЛ = Новый ТаблицаЗначений;
	
	ТипЗначенияВычет = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2));
	
	НДФЛ.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	НДФЛ.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов("Дата"));
	НДФЛ.Колонки.Добавить("Подразделение", Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип);
	НДФЛ.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
	НДФЛ.Колонки.Добавить("КодВычетаЛичный", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	НДФЛ.Колонки.Добавить("ПримененныйВычетЛичный", ТипЗначенияВычет);
	
	НазванияВычетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыВычетовНаДетей());
	Для Каждого НазваниеВычета Из НазванияВычетов Цикл
		НДФЛ.Колонки.Добавить(НазваниеВычета, ТипЗначенияВычет);
	КонецЦикла;
		
	НазванияВычетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыИмущественныхВычетов());
	Для Каждого НазваниеВычета Из НазванияВычетов Цикл
		НДФЛ.Колонки.Добавить(НазваниеВычета, ТипЗначенияВычет);
	КонецЦикла;
	
	ТипЗначенияНалог = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(13,0));
	НДФЛ.Колонки.Добавить("НомерСтроки", ТипЗначенияНалог);
	НДФЛ.Колонки.Добавить("НалогПоСтавке13", ТипЗначенияНалог);
	НДФЛ.Колонки.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке13", ТипЗначенияНалог);
	НДФЛ.Колонки.Добавить("НалогПоСтавке13КЗачетуВозврату", ТипЗначенияНалог);
	
	НДФЛ.Колонки.Добавить("ИдентификаторСтрокиНДФЛ", Новый ОписаниеТипов("Число"));
	НДФЛ.Колонки.Добавить("Налог", ТипЗначенияНалог);
	НДФЛ.Колонки.Добавить("ЗачтеноАвансовыхПлатежей", ТипЗначенияНалог);
	НДФЛ.Колонки.Добавить("ПримененныйВычетЛичныйКодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	НДФЛ.Колонки.Добавить("Сумма", ТипЗначенияНалог);
	
	НДФЛ.Колонки.Добавить("РаспределениеПоСтатьям", Новый ОписаниеТипов("ТаблицаЗначений"));
	
	НДФЛ.Колонки.Добавить("ФиксСтрока", Новый ОписаниеТипов("Булево"));
	НДФЛ.Колонки.Добавить("ФиксРасчет", Новый ОписаниеТипов("Булево"));
	
	Возврат НДФЛ;
	
КонецФункции

// Составляет структуру для заполнения таблиц НДФЛ, ПримененныеВычетыНаДетейИИмущественные в форме документов.
// 
// Параметры:
//	МенеджерВременныхТаблиц - в котором определена таблица ВТФизическиеЛица
//		(подробнее см. комментарий к методу РассчитатьНалогПоОсновнойСтавке)
//  ДокументСсылка.
//	Организация
//	МесяцРасчета
//	ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//	                               (соответствует значению Истина).
//	ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по Регистратору.
//
// Возвращаемое значение - структура для заполнения таблиц НДФЛ и ПримененныеВычетыНаДетейИИмущественные.
//
Функция РезультатРасчетаНДФЛ(МенеджерВременныхТаблиц, ДокументСсылка, Организация, МесяцНачисления, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт
	
	НДФЛ = РассчитатьНалогПоОсновнойСтавке(ДокументСсылка, Организация, МесяцНачисления, МенеджерВременныхТаблиц,,,,ОкончательныйРасчет, ДатаУдержанияИсчисленногоНалога);
	
	Возврат ДанныеОРезультатахРасчетаНДФЛДляДокумента(НДФЛ)
	
КонецФункции

Функция ДанныеОРезультатахРасчетаНДФЛДляДокумента(НДФЛ) Экспорт

	ДанныеОРезультатахРасчета = Новый Структура(
		"НДФЛ, 
		|ПримененныеВычетыНаДетейИИмущественные");
		
	Для Каждого СтрокаНДФЛ Из НДФЛ Цикл
		СтрокаНДФЛ.Налог = СтрокаНДФЛ.НалогПоСтавке13;
		СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей = СтрокаНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13;
		СтрокаНДФЛ.ПримененныйВычетЛичныйКодВычета = СтрокаНДФЛ.КодВычетаЛичный;
		СтрокаНДФЛ.Сумма = СтрокаНДФЛ.НалогПоСтавке13 - СтрокаНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13;
	КонецЦикла;
	ДанныеОРезультатахРасчета.НДФЛ = НДФЛ;
	
	// Определяем соответствие видов вычетов полям таблицы.
	ВидыВычетов = ВидыВычетовПоПолямТаблицы();
	
	ПримененныеВычетыНаДетейИИмущественные = ТаблицаПримененныеВычетыНДФЛ();
	// Заполняем таблицу ПримененныеВычетыНаДетейИИмущественные: 
	// для каждой строки НДФЛ добавляем столько отдельных строк, сколько вычетов было применено.
	Для Каждого СтрокаНДФЛ Из НДФЛ Цикл
		СтрокаНДФЛ.ИдентификаторСтрокиНДФЛ = НДФЛ.Индекс(СтрокаНДФЛ);
		Для Каждого КлючИЗначение Из ВидыВычетов Цикл
			ИмяПоля = КлючИЗначение.Ключ;
			КодВычета = КлючИЗначение.Значение;
			Если ЗначениеЗаполнено(СтрокаНДФЛ[ИмяПоля]) Тогда
				СтрокаВычетов = ПримененныеВычетыНаДетейИИмущественные.Добавить();
				СтрокаВычетов.ИдентификаторСтрокиНДФЛ = СтрокаНДФЛ.ИдентификаторСтрокиНДФЛ;
				СтрокаВычетов.КодВычета = КодВычета;
				СтрокаВычетов.РазмерВычета = СтрокаНДФЛ[ИмяПоля];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ДанныеОРезультатахРасчета.ПримененныеВычетыНаДетейИИмущественные = ПримененныеВычетыНаДетейИИмущественные;
	
	Возврат ДанныеОРезультатахРасчета;

КонецФункции

// Специфические алгоритмы чтения данных

Процедура СоздатьВТСтавкиНалогаЧислом(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13) КАК СтавкаНалогообложения,
	|	0.13 КАК Размер
	|ПОМЕСТИТЬ ВТСтавкиНалогаЧислом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09),
	|	0.09
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35),
	|	0.35
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30),
	|	0.3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15),
	|	0.15
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05),
	|	0.05
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10),
	|	0.1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка03),
	|	0.03
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка06),
	|	0.06
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка07),
	|	0.07
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка12),
	|	0.12";
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура ВписатьТекстПолученияЗначенияСтавкиНДФЛЧислом(ТекстЗапроса, Знач ПодстрокаПоиска, Знач СинонимТаблицы, Знач ИмяПоляСтавки) Экспорт
	
	ПодстрокаЗамены = 
	"ВЫБОР
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка03)
	| ТОГДА 0.03
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	| ТОГДА 0.05
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка06)
	| ТОГДА 0.06
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка07)
	| ТОГДА 0.07
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	| ТОГДА 0.09
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	| ТОГДА 0.1
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка12)
	| ТОГДА 0.12
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	| ТОГДА 0.13
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	| ТОГДА 0.15
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	| ТОГДА 0.3
	|КОГДА ТаблицаНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	| ТОГДА 0.35
	|КОНЕЦ";
	ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "ТаблицаНДФЛ.СтавкаНДФЛ", СокрЛП(СинонимТаблицы) + "." + СокрЛП(ИмяПоляСтавки));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПодстрокаПоиска, ПодстрокаЗамены);
	
КонецПроцедуры

Процедура СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КодПоОКАТО КАК КодПоОКАТО,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КодПоОКТМО КАК КодПоОКТМО,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КПП КАК КПП,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.Код КАК КодНалоговогоОргана
	|ПОМЕСТИТЬ ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
	|ГДЕ
	|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница.Владелец = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КодПоОКАТО,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КодПоОКТМО,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КПП,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.Код
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
	|ГДЕ
	|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница = &Организация";
	
	Запрос.Выполнить();

КонецПроцедуры 

// Помещает данные о вычетах сотрудника во временную таблицу.
//
// Параметры:
//	МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицу с полями:
//		ФизическоеЛицо
//		Период - дата, на которую получаем действующие по физ. лицу вычеты.
//	ИмяВременнойТаблицыОтбора - имя временной таблицы с параметрами "среза".
//
// В результате в менеджер временных таблиц помещается таблица
//	ВТСтандартныеВычетыПоНДФЛЗаПериод с полями
//		ФизическоеЛицо
//		КодВычета.
//		Месяц - месяц на который получены действующие вычеты.
//		Основание
//		ЛичныйВычет - булево, данный признак отличает вычеты на детей от личных вычетов.
Процедура СоздатьВТСтандартныеВычетыПоНДФЛЗаПериод(МенеджерВременныхТаблиц, ТолькоРазрешенные, ДатаАктуальности, ИмяВременнойТаблицыОтбора = "ВТПериодыФизическихЛиц") Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПериодыФизическихЛиц.Период КАК Месяц,
	|	СтандартныеВычетыПоНДФЛВторичный.КодВычета КАК КодВычета,
	|	СтандартныеВычетыПоНДФЛВторичный.Количество КАК Количество,
	|	СтандартныеВычетыПоНДФЛВторичный.Основание КАК Основание,
	|	СтандартныеВычетыПоНДФЛВторичный.ЛичныйВычет КАК ЛичныйВычет
	|ПОМЕСТИТЬ ВТСтандартныеВычетыПоНДФЛЗаПериод
	|ИЗ
	|	ВТПериодыФизическихЛиц КАК ПериодыФизическихЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтандартныеВычетыПоНДФЛВторичный КАК СтандартныеВычетыПоНДФЛВторичный
	|		ПО ПериодыФизическихЛиц.ФизическоеЛицо = СтандартныеВычетыПоНДФЛВторичный.ФизическоеЛицо
	|			И (ПериодыФизическихЛиц.Период МЕЖДУ СтандартныеВычетыПоНДФЛВторичный.ДатаНачала И СтандартныеВычетыПоНДФЛВторичный.ДатаОкончания)
	|			И (ВЫБОР
	|				КОГДА СтандартныеВычетыПоНДФЛВторичный.ЛичныйВычет
	|					ТОГДА &ДатаАктуальности
	|				КОГДА ПериодыФизическихЛиц.Период > &ДатаАктуальности
	|					ТОГДА &ДатаАктуальности
	|				ИНАЧЕ ПериодыФизическихЛиц.Период
	|			КОНЕЦ МЕЖДУ СтандартныеВычетыПоНДФЛВторичный.ПериодРегистрацииНачало И СтандартныеВычетыПоНДФЛВторичный.ПериодРегистрацииОкончание)
	|			И (СтандартныеВычетыПоНДФЛВторичный.Количество > 0)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПериодыФизическихЛиц", ИмяВременнойТаблицыОтбора);
	
	Если НЕ ТолькоРазрешенные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Дополняет данные о ставке налогообложения, используемой для резидентов РФ, 
// сведениями о реальной ставке обложения с учетом налогового статуса физического лица.
// В менеджер временных таблиц помещается таблица ВТСтавкаНДФЛПоСтавкеРезидента 
// (или с иным именем - см. ИмяТаблицыРезультата) с уникальными записями с полями:
//		ФизическоеЛицо.
//		Период, переданная на вход дата
//    	КатегорияДохода, тип ПеречислениеСсылка.КатегорииДоходовНДФЛ
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента
//		Статус, тип СправочникСсылка.СтатусыНалогоплательщиковПоНДФЛ
//		СтавкаНДФЛ, тип ПеречислениеСсылка.НДФЛСтавки
//		СтавкаЧислом, тип Число, например, 0.13.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицу с полями:
//		ФизическоеЛицо
//		Период, дата на которую будет определен статус налогоплательщика
//    	КатегорияДохода, тип ПеречислениеСсылка.КатегорииДоходовНДФЛ: должно быть непустым
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента.
//	ИмяТаблицы - строка - имя обрабатываемой временной таблицы.
//	УчитыватьСтатусНаКонецГода - строка - необязательный, описание того, как следует учитывать изменение 
//		статуса на конец налогового периода, возможные значения:
//			"НеУчитыватьИзмененияСтатуса" (значение по умолчанию)
//			"УчитыватьИзмененияСтатусаДляРасчета"
//			"УчитыватьИзмененияСтатусаДляОтчетности"
//	ОкончаниеОтчетногоПериода - Дата - необязательный, значение будет учитываться в определение периода на которую будет определен статус налогоплательщика если необходимо учитывать изменение статуса
//	ИмяТаблицыРезультата - строка - имя создаваемой временной таблицы.
//
Процедура СоздатьВТСтавкаНДФЛПоСтавкеРезидента(МенеджерВременныхТаблиц, ИмяТаблицы, УчитыватьСтатусНаКонецГода = "НеУчитыватьИзмененияСтатуса", ОкончаниеОтчетногоПериода = '00010101', ИмяТаблицыРезультата = "ВТСтавкаНДФЛПоСтавкеРезидента") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", ДатаИзмененияНалогообложенияДивидендов());
	Запрос.УстановитьПараметр("ДатаИзмененияПорядкаИсчисленияДляИностранцев", ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев());
	Запрос.УстановитьПараметр("УчитыватьИзмененияСтатусаДляРасчета", УчитыватьСтатусНаКонецГода = "УчитыватьИзмененияСтатусаДляРасчета");
	Запрос.УстановитьПараметр("НеУчитыватьИзмененияСтатуса", УчитыватьСтатусНаКонецГода <> "УчитыватьИзмененияСтатусаДляРасчета" И УчитыватьСтатусНаКонецГода <> "УчитыватьИзмененияСтатусаДляОтчетности");
	Запрос.УстановитьПараметр("ГодОтчетногоПериода", НачалоГода(ОкончаниеОтчетногоПериода));
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСоСтавками.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаСоСтавками.Статус КАК Статус,
	|	ТаблицаСоСтавками.Период КАК Период,
	|	ТаблицаСоСтавками.КатегорияДохода КАК КатегорияДохода,
	|	ТаблицаСоСтавками.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ТаблицаСоСтавками.СтавкаНДФЛ КАК СтавкаНДФЛ,
	|	ТаблицаСоСтавками.СтавкаЧислом КАК СтавкаЧислом
	|ПОМЕСТИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСоСтатусами.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ТаблицаСоСтатусами.Статус КАК Статус,
	|		ТаблицаСоСтатусами.Период КАК Период,
	|		ТаблицаСоСтатусами.КатегорияДохода КАК КатегорияДохода,
	|		ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|		ВЫБОР
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка12)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка03)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка06)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка07)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			КОГДА ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|						КОГДА ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|						КОГДА ТаблицаСоСтатусами.Период >= ДАТАВРЕМЯ(2018, 1, 1)
	|							ТОГДА ВЫБОР
	|									КОГДА ТаблицаСоСтатусами.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда))
	|										ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|									ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|								КОНЕЦ
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|					КОНЕЦ
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12))
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаСоСтатусами.Период >= &ДатаИзмененияНалогообложенияДивидендов
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОНЕЦ
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
	|					И ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|						КОГДА ТаблицаСоСтатусами.Период >= &ДатаИзмененияНалогообложенияДивидендов
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОНЕЦ
	|			КОГДА ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|						КОГДА ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|						ИНАЧЕ """"
	|					КОНЕЦ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|		КОНЕЦ КАК СтавкаНДФЛ,
	|		0 КАК СтавкаЧислом
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|			ТаблицаНДФЛ.Период КАК Период,
	|			ТаблицаНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|			ТаблицаНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|			ЕСТЬNULL(ВЫБОР
	|					КОГДА &НеУчитыватьИзмененияСтатуса
	|						ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|					КОГДА ФизическиеЛицаСтатусыНДФЛ.Год < &ГодОтчетногоПериода
	|						ТОГДА ВЫБОР
	|								КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода
	|									ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|								КОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|									ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|								КОГДА &УчитыватьИзмененияСтатусаДляРасчета
	|									ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|								КОГДА ТаблицаНДФЛ.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|									ТОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода
	|								КОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|									ТОГДА ВЫБОР
	|											КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|												ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|											ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|										КОНЕЦ
	|								КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|									ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|								ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала1
	|								ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|							КОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала1 = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							КОГДА &УчитыватьИзмененияСтатусаДляРасчета
	|								ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|							КОГДА ТаблицаНДФЛ.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|								ТОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала1
	|							КОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|								ТОГДА ВЫБОР
	|										КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|											ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|										ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|									КОНЕЦ
	|							КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|							ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|						КОНЕЦ
	|				КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус
	|		ИЗ
	|			#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный КАК ФизическиеЛицаСтатусыНДФЛ
	|				ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|					И (ВЫБОР
	|						КОГДА ТаблицаНДФЛ.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|							ТОГДА КОНЕЦПЕРИОДА(ТаблицаНДФЛ.Период, МЕСЯЦ)
	|						ИНАЧЕ ТаблицаНДФЛ.Период
	|					КОНЕЦ МЕЖДУ ФизическиеЛицаСтатусыНДФЛ.ДатаНачала И ФизическиеЛицаСтатусыНДФЛ.ДатаОкончания)) КАК ТаблицаСоСтатусами) КАК ТаблицаСоСтавками";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Если МенеджерВременныхТаблиц.Таблицы[ИмяТаблицы].Колонки.Найти("КатегорияДохода") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаНДФЛ.КатегорияДохода", "ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)");
	КонецЕсли;
	ВписатьТекстПолученияЗначенияСтавкиНДФЛЧислом(ТекстЗапроса, "ТаблицаСоСтавками.СтавкаЧислом", "ТаблицаСоСтавками", "СтавкаНДФЛ");
	
	НомерКвартала = ?(ОкончаниеОтчетногоПериода = '00010101', 4, Цел((Месяц(ОкончаниеОтчетногоПериода) + 2)/3));
	ТекстЗамены = "";
	Если НомерКвартала = 4 Тогда
		ТекстЗамены = "ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода";
	Иначе
		ТекстЗамены = "ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала" + НомерКвартала;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала1", ТекстЗамены);
	
	Если ИмяТаблицыРезультата <> "ВТСтавкаНДФЛПоСтавкеРезидента" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТСтавкаНДФЛПоСтавкеРезидента", ИмяТаблицыРезультата);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

// Менеджер временных таблиц содержит 
// - таблицу ВТНачисления с полями.
//	Регистратор,
//	НомерСтроки,
//	ФизическоеЛицо
//	КодДохода
//	Сумма
//	КодВычета
//	КоличествоДетей
//	ВычетПредоставленныйДругомуРодителю (необязательно)
// - таблицу ВТПредоставленныеВычеты (необязательно)
//	ФизическоеЛицо
//	КодДохода
//	СуммаВычета
//	
// Формирует таблицу ВТВычетыКДоходамФизическихЛиц с полями.
//	Регистратор,
//	НомерСтроки,
//	ФизическоеЛицо
//	КодДохода
//	КодВычета
//	СуммаВычета
//
Процедура СоздатьВТВычетыКДоходамФизическихЛиц(Ссылка, Организация, ДатаПолученияДохода, МенеджерВременныхТаблиц, ИмяВТНачисления = "ВТНачисления", ИмяВТПредоставленныеВычеты = "ВТПредоставленныеВычеты") Экспорт

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВычетВПределахНормативовПоАвторскимВознаграждениям", ВычетВПределахНормативовПоАвторскимВознаграждениям());
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ДатаПолученияДохода));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаПолученияДохода));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&КонецПериода КАК Период,
		|	Начисления.КодДохода
		|ПОМЕСТИТЬ ВТКодыДохода
		|ИЗ
		|	#ВТНачисления КАК Начисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&КонецПериода КАК Период,
		|	СписокСотрудников.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТПоСотрудникам
		|ИЗ
		|	#ВТНачисления КАК СписокСотрудников
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокСотрудников.ФизическоеЛицо";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТНачисления", ИмяВТНачисления);
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТКодыДохода");
	УдалитьВТ.Добавить("ВТПоСотрудникам");
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ВсеЗаписи = Истина;
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТПоСотрудникам", "ФизическоеЛицо");
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения);
	УдалитьВТ.Добавить("ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛСрезПоследних");
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТКодыДохода", "КодДохода");
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ВычетыПоДоходамНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения);
	УдалитьВТ.Добавить("ВТВычетыПоДоходамНДФЛСрезПоследних");
		
	Если Не ЗарплатаКадры.ВТСуществует(МенеджерВременныхТаблиц, ИмяВТПредоставленныеВычеты) Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
			|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка) КАК КодДохода,
			|	0 КАК СуммаВычета
			|ПОМЕСТИТЬ #ИмяВТПредоставленныеВычеты";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ИмяВТПредоставленныеВычеты", ИмяВТПредоставленныеВычеты);	
		Запрос.Выполнить();
	КонецЕсли;
		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.ФизическоеЛицо,
		|	Начисления.КодДохода,
		|	Начисления.Сумма,
		|	ВЫБОР
		|		КОГДА ВидыДоходовНДФЛ.ИмеетЕдинственныйВычет
		|			ТОГДА ВидыДоходовНДФЛ.ВычетПоУмолчанию
		|		ИНАЧЕ Начисления.КодВычета
		|	КОНЕЦ КАК КодВычета,
		|	Начисления.КоличествоДетей,
		|	Начисления.ВычетПредоставленныйДругомуРодителю КАК ВычетДругомуРодителю,
		|	Начисления.Регистратор,
		|	Начисления.НомерСтроки,
		|	ВычетыПоДоходам.ГодовойВычет,
		|	ВычетыПоДоходам.НормативЗатрат
		|ПОМЕСТИТЬ ВТВычетыПоДоходам
		|ИЗ
		|	#ВТНачисления КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
		|		ПО Начисления.КодДохода = ВидыДоходовНДФЛ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВычетыПоДоходамНДФЛСрезПоследних КАК ВычетыПоДоходам
		|		ПО Начисления.КодДохода = ВычетыПоДоходам.КодДохода
		|ГДЕ
		|	(ВычетыПоДоходам.ГодовойВычет <> 0
		|			ИЛИ ВычетыПоДоходам.НормативЗатрат <> 0)
		|	И ВЫБОР
		|			КОГДА ВидыДоходовНДФЛ.ИмеетЕдинственныйВычет
		|				ТОГДА ВидыДоходовНДФЛ.ВычетПоУмолчанию
		|			ИНАЧЕ Начисления.КодВычета
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код404)";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТНачисления", ИмяВТНачисления);
	Если МенеджерВременныхТаблиц.Таблицы[ИмяВТНачисления].Колонки.Найти("ВычетПредоставленныйДругомуРодителю") = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Начисления.ВычетПредоставленныйДругомуРодителю КАК ВычетДругомуРодителю", "0 КАК ВычетДругомуРодителю");
	КонецЕсли;
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТВычетыПоДоходам");

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВычетыПредоставленные.ФизическоеЛицо,
		|	ВычетыПредоставленные.КодДохода,
		|	СУММА(ВычетыПредоставленные.СуммаВычета) КАК СуммаВычета
		|ПОМЕСТИТЬ ВТВычетыПредоставленные
		|ИЗ
		|	(ВЫБРАТЬ
		|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СведенияОДоходах.КодДохода КАК КодДохода,
		|		СведенияОДоходах.СуммаВычета КАК СуммаВычета
		|	ИЗ
		|		РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
		|	ГДЕ
		|		СведенияОДоходах.Регистратор <> &Ссылка
		|		И СведенияОДоходах.Период <= &КонецПериода
		|		И СведенияОДоходах.МесяцНалоговогоПериода МЕЖДУ &НачалоГода И &КонецПериода
		|		И СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И (СведенияОДоходах.ФизическоеЛицо, СведенияОДоходах.КодДохода) В
		|				(ВЫБРАТЬ
		|					ГодовойВычетПоДоходам.ФизическоеЛицо,
		|					ГодовойВычетПоДоходам.КодДохода
		|				ИЗ
		|					ВТВычетыПоДоходам КАК ГодовойВычетПоДоходам
		|				ГДЕ
		|					ГодовойВычетПоДоходам.ГодовойВычет <> 0)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПредоставленныеВычеты.ФизическоеЛицо,
		|		ПредоставленныеВычеты.КодДохода,
		|		ПредоставленныеВычеты.СуммаВычета
		|	ИЗ
		|		#ИмяВТПредоставленныеВычеты КАК ПредоставленныеВычеты) КАК ВычетыПредоставленные
		|
		|СГРУППИРОВАТЬ ПО
		|	ВычетыПредоставленные.ФизическоеЛицо,
		|	ВычетыПредоставленные.КодДохода";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ИмяВТПредоставленныеВычеты", ИмяВТПредоставленныеВычеты);	
    Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТВычетыПредоставленные");
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВычетыПоДоходам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВычетыПоДоходам.КодДохода КАК КодДохода,
		|	ВЫБОР
		|		КОГДА ВычетыПредоставленные.СуммаВычета ЕСТЬ NULL 
		|			ТОГДА ВычетыПоДоходам.ГодовойВычет - ВычетыПоДоходам.ВычетДругомуРодителю
		|		КОГДА ВычетыПоДоходам.ГодовойВычет - ВычетыПоДоходам.ВычетДругомуРодителю > ВычетыПредоставленные.СуммаВычета
		|			ТОГДА ВычетыПоДоходам.ГодовойВычет - ВычетыПоДоходам.ВычетДругомуРодителю - ВычетыПредоставленные.СуммаВычета
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПравоНаВычет
		|ИЗ
		|	ВТВычетыПоДоходам КАК ВычетыПоДоходам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВычетыПредоставленные КАК ВычетыПредоставленные
		|		ПО ВычетыПоДоходам.ФизическоеЛицо = ВычетыПредоставленные.ФизическоеЛицо
		|			И ВычетыПоДоходам.КодДохода = ВычетыПредоставленные.КодДохода
		|ГДЕ
		|	ВычетыПоДоходам.ГодовойВычет <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	КодДохода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВычетыПоДоходам.Регистратор КАК Регистратор,
		|	ВычетыПоДоходам.НомерСтроки КАК НомерСтроки,
		|	ВычетыПоДоходам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВычетыПоДоходам.КодДохода,
		|	ВычетыПоДоходам.Сумма,
		|	ВычетыПоДоходам.КодВычета,
		|	0 КАК СуммаВычета
		|ИЗ
		|	ВТВычетыПоДоходам КАК ВычетыПоДоходам
		|ГДЕ
		|	ВычетыПоДоходам.ГодовойВычет <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
	Результаты = Запрос.ВыполнитьПакет();
	
	ТаблицаВычетов = Результаты[0].Выгрузить();
	ТаблицаВычетов.Индексы.Добавить("ФизическоеЛицо,КодДохода");
    ТаблицаНачислений = Результаты[1].Выгрузить();
	СтруктураПоиска = Новый Структура("ФизическоеЛицо,КодДохода");
	Для каждого СтрокаТЗ Из ТаблицаНачислений Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЗ);
		СтрокаВычета = ТаблицаВычетов.НайтиСтроки(СтруктураПоиска)[0];
		Если СтрокаВычета.ПравоНаВычет = 0 Тогда
			СтрокаТЗ.СуммаВычета = 0
		ИначеЕсли СтрокаТЗ.Сумма > 0 Тогда
			СтрокаТЗ.СуммаВычета = Мин(СтрокаТЗ.Сумма, СтрокаВычета.ПравоНаВычет);
			СтрокаВычета.ПравоНаВычет = Макс(0, СтрокаВычета.ПравоНаВычет - СтрокаТЗ.СуммаВычета);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ГодовойВычетПоДоходам", ТаблицаНачислений);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГодовойВычетПоДоходам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ГодовойВычетПоДоходам.КодДохода КАК КодДохода,
		|	ГодовойВычетПоДоходам.КодВычета КАК КодВычета,
		|	ГодовойВычетПоДоходам.СуммаВычета,
		|	ГодовойВычетПоДоходам.Регистратор,
		|	ГодовойВычетПоДоходам.НомерСтроки
		|ПОМЕСТИТЬ ВТГодовойВычетПоДоходам
		|ИЗ
		|	&ГодовойВычетПоДоходам КАК ГодовойВычетПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГодовойВычетПоДоходам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ГодовойВычетПоДоходам.КодДохода КАК КодДохода,
		|	ГодовойВычетПоДоходам.КодВычета КАК КодВычета,
		|	ГодовойВычетПоДоходам.СуммаВычета,
		|	ГодовойВычетПоДоходам.Регистратор,
		|	ГодовойВычетПоДоходам.НомерСтроки
		|ПОМЕСТИТЬ ВТВычетыКДоходамФизическихЛиц
		|ИЗ
		|	ВТГодовойВычетПоДоходам КАК ГодовойВычетПоДоходам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВычетыПоДоходам.ФизическоеЛицо,
		|	ВычетыПоДоходам.КодДохода,
		|	ВычетыПоДоходам.КодВычета,
		|	ВЫБОР
		|		КОГДА ВычетыПоДоходам.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код508)
		|			ТОГДА ВЫБОР
		|					КОГДА ВычетыПоДоходам.НормативЗатрат * ВычетыПоДоходам.КоличествоДетей - ВычетыПоДоходам.ВычетДругомуРодителю < 0
		|						ТОГДА 0
		|					КОГДА ВычетыПоДоходам.НормативЗатрат * ВычетыПоДоходам.КоличествоДетей - ВычетыПоДоходам.ВычетДругомуРодителю < ВычетыПоДоходам.Сумма
		|						ТОГДА ВычетыПоДоходам.НормативЗатрат * ВычетыПоДоходам.КоличествоДетей - ВычетыПоДоходам.ВычетДругомуРодителю
		|					ИНАЧЕ ВычетыПоДоходам.Сумма
		|				КОНЕЦ
		|		КОГДА ВычетыПоДоходам.КодВычета = &ВычетВПределахНормативовПоАвторскимВознаграждениям
		|				И ЕСТЬNULL(Статусы.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
		|			ТОГДА ВЫРАЗИТЬ(ВычетыПоДоходам.Сумма * ВычетыПоДоходам.НормативЗатрат / 100 КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВычетыПоДоходам.Регистратор,
		|	ВычетыПоДоходам.НомерСтроки
		|ИЗ
		|	ВТВычетыПоДоходам КАК ВычетыПоДоходам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛСрезПоследних КАК Статусы
		|		ПО ВычетыПоДоходам.ФизическоеЛицо = Статусы.ФизическоеЛицо
		|ГДЕ
		|	ВычетыПоДоходам.КодДохода В
		|			(ВЫБРАТЬ
		|				ВычетыПоДоходам.КодДохода
		|			ИЗ
		|				ВТВычетыПоДоходамНДФЛСрезПоследних КАК ВычетыПоДоходам
		|			ГДЕ
		|				ВычетыПоДоходам.НормативЗатрат <> 0)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо,
		|	КодДохода,
		|	КодВычета";
 
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТГодовойВычетПоДоходам");

	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
// 	ВТДополнительныеСвойстваКодаДохода с полями
//		КодДохода - СправочникСсылка.ВидыДоходовНДФЛ,
//		СоответствуетОплатеТруда - Булево.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
//
Процедура СоздатьВТДополнительныеСвойстваКодаДохода(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыДоходовНДФЛ.Ссылка КАК КодДохода,
	|	ЕСТЬNULL(РедактируемыеРеквизитыКодаДоходаНДФЛ.СоответствуетОплатеТруда, ВидыДоходовНДФЛ.СоответствуетОплатеТруда) КАК СоответствуетОплатеТруда
	|ПОМЕСТИТЬ ВТДополнительныеСвойстваКодаДохода
	|ИЗ
	|	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РедактируемыеРеквизитыКодаДоходаНДФЛ КАК РедактируемыеРеквизитыКодаДоходаНДФЛ
	|		ПО ВидыДоходовНДФЛ.Ссылка = РедактируемыеРеквизитыКодаДоходаНДФЛ.КодДохода";
	Запрос.Выполнить();
	
КонецПроцедуры

// Функция рассчитывает размер вычета, который можно применить к доходу.
// 
Функция ВычетКДоходуСотрудника(Ссылка, Организация, ДатаПолученияДохода, Сотрудник, КодДохода, КодВычетаНДФЛ, СуммаДохода, КоличествоДетей = 0) Экспорт 
	
	СуммаВычета = 0;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	&КодДохода КАК КодДохода,
	|	&Сумма КАК Сумма,
	|	&КодВычета КАК КодВычета,
	|	&КоличествоДетей КАК КоличествоДетей,
	|	&Ссылка КАК Регистратор,
	|	0 КАК НомерСтроки
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка = &Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник",			Сотрудник);
	Запрос.УстановитьПараметр("Ссылка",				Ссылка);
	Запрос.УстановитьПараметр("КодДохода",			КодДохода);
	Запрос.УстановитьПараметр("Сумма",				СуммаДохода);
	Запрос.УстановитьПараметр("КодВычета",			КодВычетаНДФЛ);
	Запрос.УстановитьПараметр("КоличествоДетей",	КоличествоДетей);
	Запрос.Выполнить();
	
	СоздатьВТВычетыКДоходамФизическихЛиц(Ссылка, Организация, ДатаПолученияДохода, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВычетыКДоходамФизическихЛиц.СуммаВычета
	|ИЗ
	|	ВТВычетыКДоходамФизическихЛиц КАК ВычетыКДоходамФизическихЛиц";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		СуммаВычета = Выборка.СуммаВычета;
	КонецЕсли;
	
	Возврат СуммаВычета
	
КонецФункции

// Возвращает таблицу значений с данными об излишне удержанном НДФЛ (возможно, пустую).
//
// Параметры:
//	Организация - СправочникСсылка.Организации - организация, по которой получаем данные
//	ДатаАктуальности - Дата -
//	ФизическиеЛица - СправочникСсылка.ФизическиеЛица, Массив - необязательный, 
// 					если не задан - возвращаются все физлица, по которым есть переплата.
//  ДокументСсылка - ДокументСсылка - регистратор, движения которого исключаются из рассмотрения.
//
// Возвращаемое значение:
//	таблица значений с колонками:
//			Сотрудник: тип СправочникСсылка.ФизическиеЛица
//			НалоговыйПериод: тип Число 4 (год)
//			МесяцНалоговогоПериода: тип Дата
//  	    КатегорияДохода: тип ПеречислениеСсылка.КатегорииДоходовНДФЛ
//			РегистрацияВНалоговомОргане: тип СправочникСсылка.РегистрацииВНалоговомОргане
//			ПоСтавке13: тип Число
//			ПоСтавке09: тип Число
//			ПоСтавке35: тип Число
//  если данных о переплате в учете нет - возвращается пустая таблица значений.
Функция ДанныеОПереплатеПоНДФЛ(Организация, ДатаАктуальности, ФизическиеЛица = Неопределено, ДокументСсылка = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.УстановитьПараметр("РегистрацияОрганизации", ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаАктуальности));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, Запрос.МенеджерВременныхТаблиц);	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток КАК СуммаОстаток,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.КатегорияДохода КАК КатегорияДохода
	|ПОМЕСТИТЬ ВТРасчетыПоВсемСтавкам
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Остатки(
	|			&ДатаАктуальности,
	|			ГоловнаяОрганизация = &ГоловнаяОрганизация
	|				И &УсловиеДляФизлиц
	|				И РегистрацияВНалоговомОргане В
	|					(ВЫБРАТЬ
	|						РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|					ИЗ
	|						ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)) КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.КатегорияДохода
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И &УсловиеДляФизлиц
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.Регистратор = &Регистратор
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.Период <= &ДатаАктуальности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	-СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода) КАК НалоговыйПериод
	|ПОМЕСТИТЬ ВТПереплатаЗаНалоговыйПериод
	|ИЗ
	|	ВТРасчетыПоВсемСтавкам КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане,
	|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода)
	|
	|ИМЕЮЩИЕ
	|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане = &РегистрацияОрганизации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане
	|	КОНЕЦ КАК РегистрацияВНалоговомОргане,
	|	-СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода, ГОД) КАК НачалоНалоговогоПериода,
	|	КОНЕЦПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода, ГОД) КАК ОкончаниеНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.КатегорияДохода КАК КатегорияДохода,
	|	ПереплатаЗаНалоговыйПериод.СуммаОстаток КАК СуммаЗаНалоговыйПериод
	|ПОМЕСТИТЬ ВТПереплатаПоВсемСтавкам
	|ИЗ
	|	ВТРасчетыПоВсемСтавкам КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереплатаЗаНалоговыйПериод КАК ПереплатаЗаНалоговыйПериод
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо = ПереплатаЗаНалоговыйПериод.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане = ПереплатаЗаНалоговыйПериод.РегистрацияВНалоговомОргане
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента = ПереплатаЗаНалоговыйПериод.СтавкаНалогообложенияРезидента
	|			И (ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода) = ПереплатаЗаНалоговыйПериод.НалоговыйПериод)
	|ГДЕ
	|	ПереплатаЗаНалоговыйПериод.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане = &РегистрацияОрганизации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане
	|	КОНЕЦ,
	|	ПереплатаЗаНалоговыйПериод.СуммаОстаток,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.КатегорияДохода
	|
	|ИМЕЮЩИЕ
	|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток) < 0";
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ",""), "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина");
	КонецЕсли;  
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат[0].Количество = 0 Тогда // Возвращаем пустую таблицу.
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ПереплатаПоВсемСтавкам.ФизическоеЛицо КАК Сотрудник,
		|	ПереплатаПоВсемСтавкам.НалоговыйПериод,
		|	ПереплатаПоВсемСтавкам.МесяцНалоговогоПериода,
		|	ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане,
		|	0 КАК ПоСтавке13,
		|	0 КАК ПоСтавке09,
		|	0 КАК ПоСтавке35
		|ИЗ
		|	ВТПереплатаПоВсемСтавкам КАК ПереплатаПоВсемСтавкам";
		Возврат Запрос.Выполнить().Выгрузить()
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПереплатаПоВсемСтавкам.ФизическоеЛицо КАК Сотрудник,
	|	ПереплатаПоВсемСтавкам.НалоговыйПериод,
	|	ПереплатаПоВсемСтавкам.МесяцНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.КатегорияДохода,
	|	ПереплатаПоВсемСтавкам.НачалоНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(ЕСТЬNULL(ПереплатаПоСтавке13.СуммаЗаНалоговыйПериод, 0)) КАК ЗаНалоговыйПериодПоСтавке13,
	|	МАКСИМУМ(ЕСТЬNULL(ПереплатаПоСтавке09.СуммаЗаНалоговыйПериод, 0)) КАК ЗаНалоговыйПериодПоСтавке09,
	|	МАКСИМУМ(ЕСТЬNULL(ПереплатаПоСтавке35.СуммаЗаНалоговыйПериод, 0)) КАК ЗаНалоговыйПериодПоСтавке35,
	|	СУММА(ЕСТЬNULL(ПереплатаПоСтавке13.СуммаОстаток, 0)) КАК ПоСтавке13,
	|	СУММА(ЕСТЬNULL(ПереплатаПоСтавке09.СуммаОстаток, 0)) КАК ПоСтавке09,
	|	СУММА(ЕСТЬNULL(ПереплатаПоСтавке35.СуммаОстаток, 0)) КАК ПоСтавке35
	|ПОМЕСТИТЬ ВТПереплатаПоСотруднику
	|ИЗ
	|	ВТПереплатаПоВсемСтавкам КАК ПереплатаПоВсемСтавкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереплатаПоВсемСтавкам КАК ПереплатаПоСтавке13
	|		ПО ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане = ПереплатаПоСтавке13.РегистрацияВНалоговомОргане
	|			И ПереплатаПоВсемСтавкам.ФизическоеЛицо = ПереплатаПоСтавке13.ФизическоеЛицо
	|			И ПереплатаПоВсемСтавкам.КатегорияДохода = ПереплатаПоСтавке13.КатегорияДохода
	|			И (ПереплатаПоСтавке13.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|			И ПереплатаПоВсемСтавкам.НалоговыйПериод = ПереплатаПоСтавке13.НалоговыйПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереплатаПоВсемСтавкам КАК ПереплатаПоСтавке09
	|		ПО ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане = ПереплатаПоСтавке09.РегистрацияВНалоговомОргане
	|			И ПереплатаПоВсемСтавкам.ФизическоеЛицо = ПереплатаПоСтавке09.ФизическоеЛицо
	|			И ПереплатаПоВсемСтавкам.КатегорияДохода = ПереплатаПоСтавке09.КатегорияДохода
	|			И (ПереплатаПоСтавке09.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09))
	|			И ПереплатаПоВсемСтавкам.НалоговыйПериод = ПереплатаПоСтавке09.НалоговыйПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереплатаПоВсемСтавкам КАК ПереплатаПоСтавке35
	|		ПО ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане = ПереплатаПоСтавке35.РегистрацияВНалоговомОргане
	|			И ПереплатаПоВсемСтавкам.ФизическоеЛицо = ПереплатаПоСтавке35.ФизическоеЛицо
	|			И ПереплатаПоВсемСтавкам.КатегорияДохода = ПереплатаПоСтавке35.КатегорияДохода
	|			И (ПереплатаПоСтавке35.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35))
	|			И ПереплатаПоВсемСтавкам.НалоговыйПериод = ПереплатаПоСтавке35.НалоговыйПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереплатаПоВсемСтавкам.НачалоНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.МесяцНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.КатегорияДохода,
	|	ПереплатаПоВсемСтавкам.ФизическоеЛицо,
	|	ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане,
	|	ПереплатаПоВсемСтавкам.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПереплатаПоВсемСтавкам.Сотрудник КАК ФизическоеЛицо,
	|	ПереплатаПоВсемСтавкам.НачалоНалоговогоПериода КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТПереплатаПоСотруднику КАК ПереплатаПоВсемСтавкам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереплатаПоВсемСтавкам.Сотрудник КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода < &ДатаАктуальности
	|			ТОГДА ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода
	|		ИНАЧЕ &ДатаАктуальности
	|	КОНЕЦ КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаОкончание
	|ИЗ
	|	ВТПереплатаПоСотруднику КАК ПереплатаПоВсемСтавкам";
	Запрос.Выполнить();
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ВсеЗаписи = Истина;
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		"ВТФизическиеЛица", "ФизическоеЛицо");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения,
		"ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛНаНачалоГода");
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		"ВТФизическиеЛицаОкончание", "ФизическоеЛицо");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения,
		"ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛНаКонецПериода");
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПереплатаПоВсемСтавкам.Сотрудник КАК Сотрудник,
	|	ПереплатаПоВсемСтавкам.НалоговыйПериод КАК НалоговыйПериод,
	|	ПереплатаПоВсемСтавкам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане,
	|	ПереплатаПоВсемСтавкам.КатегорияДохода,
	|	ПереплатаПоВсемСтавкам.ЗаНалоговыйПериодПоСтавке13,
	|	ПереплатаПоВсемСтавкам.ЗаНалоговыйПериодПоСтавке09,
	|	ПереплатаПоВсемСтавкам.ЗаНалоговыйПериодПоСтавке35,
	|	ПереплатаПоВсемСтавкам.ПоСтавке13,
	|	ПереплатаПоВсемСтавкам.ПоСтавке09,
	|	ПереплатаПоВсемСтавкам.ПоСтавке35
	|ИЗ
	|	ВТПереплатаПоСотруднику КАК ПереплатаПоВсемСтавкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛНаКонецПериода КАК СтатусНаКонецПериода
	|		ПО ПереплатаПоВсемСтавкам.Сотрудник = СтатусНаКонецПериода.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛНаНачалоГода КАК СтатусНаНачалоГода
	|		ПО ПереплатаПоВсемСтавкам.Сотрудник = СтатусНаНачалоГода.ФизическоеЛицо
	|ГДЕ
	|	(ЕСТЬNULL(СтатусНаНачалоГода.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|			ИЛИ ЕСТЬNULL(СтатусНаКонецПериода.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НалоговыйПериод,
	|	МесяцНалоговогоПериода УБЫВ";
	
	ТаблицаПереплат = Новый ТаблицаЗначений;
	ТаблицаПереплат.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаПереплат.Колонки.Добавить("НалоговыйПериод", Новый ОписаниеТипов("Дата"));
	ТаблицаПереплат.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов("Дата"));
	ТаблицаПереплат.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаПереплат.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
	ТаблицаПереплат.Колонки.Добавить("ПоСтавке13", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	ТаблицаПереплат.Колонки.Добавить("ПоСтавке09", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	ТаблицаПереплат.Колонки.Добавить("ПоСтавке35", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
			
			ВсегоВозвратаПоСтавке13 = Выборка.ЗаНалоговыйПериодПоСтавке13;
			ВсегоВозвратаПоСтавке09 = Выборка.ЗаНалоговыйПериодПоСтавке09;
			ВсегоВозвратаПоСтавке35 = Выборка.ЗаНалоговыйПериодПоСтавке35;
			
			Пока Выборка.Следующий() Цикл	
				Если ВсегоВозвратаПоСтавке13 = 0 И ВсегоВозвратаПоСтавке09 = 0 И ВсегоВозвратаПоСтавке35 = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ВсегоВозвратаПоСтавке13 > 0 И Выборка.ПоСтавке13 > 0 Тогда
					СтрокаТЗ = ТаблицаПереплат.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТЗ, Выборка, , "ПоСтавке09,ПоСтавке35");
					СтрокаТЗ.ПоСтавке13 = Мин(СтрокаТЗ.ПоСтавке13,ВсегоВозвратаПоСтавке13);
					ВсегоВозвратаПоСтавке13 = ВсегоВозвратаПоСтавке13 - СтрокаТЗ.ПоСтавке13;
				КонецЕсли;
				Если ВсегоВозвратаПоСтавке09 > 0 И Выборка.ПоСтавке09 > 0 Тогда
					СтрокаТЗ = ТаблицаПереплат.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТЗ, Выборка, , "ПоСтавке13,ПоСтавке35");
					СтрокаТЗ.ПоСтавке09 = Мин(СтрокаТЗ.ПоСтавке09,ВсегоВозвратаПоСтавке09);
					ВсегоВозвратаПоСтавке09 = ВсегоВозвратаПоСтавке09 - СтрокаТЗ.ПоСтавке09;
				КонецЕсли;
				Если ВсегоВозвратаПоСтавке35 > 0 И Выборка.ПоСтавке35 > 0 Тогда
					СтрокаТЗ = ТаблицаПереплат.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТЗ, Выборка, , "ПоСтавке09,ПоСтавке13");
					СтрокаТЗ.ПоСтавке35 = Мин(СтрокаТЗ.ПоСтавке35,ВсегоВозвратаПоСтавке35);
					ВсегоВозвратаПоСтавке35 = ВсегоВозвратаПоСтавке35 - СтрокаТЗ.ПоСтавке35;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаПереплат.Сортировать("Сотрудник, НалоговыйПериод, МесяцНалоговогоПериода, КатегорияДохода, РегистрацияВНалоговомОргане");
	ТаблицаПереплат.Свернуть("Сотрудник, НалоговыйПериод, МесяцНалоговогоПериода, КатегорияДохода, РегистрацияВНалоговомОргане", "ПоСтавке13,ПоСтавке09,ПоСтавке35");
	
	Возврат ТаблицаПереплат
	
КонецФункции

// Возвращает таблицу значений с данными о физических лицах, по которым требуется пересмотреть данные по НДФЛ
// (возможно, пустую).
//
// Параметры:
//	Организация - организация, по которой получаем данные.
//	МесяцПерерасчета - дата - месяц, в котором производится перерасчет.
//	НачалоПериода - дата - описывает пересчитываемый налоговый период.
//	ОкончаниеПериода - дата - описывает пересчитываемый налоговый период 
//	ФизическиеЛица: тип СправочникСсылка.ФизическиеЛица или массив значений типа СправочникСсылка.ФизическиеЛица 
//    необязательный, если не задан - возвращаются все физлица, по которым есть переплата.
//  ДокументСсылка - регистратор, движения которого исключаются из рассмотрения.
//
// Возвращаемое значение:
//	таблица значений с колонками:
//			ФизическоеЛицо: тип СправочникСсылка.ФизическиеЛица
//			МесяцНалоговогоПериода: тип дата.
//			Подразделение
//			КодВычетаЛичный
//			колонки рассчитанных ресурсов: 
//				ПримененныйВычетЛичный, 
//				ПримененныйВычетНаДетей, ПримененныйВычетНаДетейДвойной,
//				ПримененныйВычетНаДетейДвойнойВторой,  ПримененныйВычетНаТретьегоРебенка,
//				ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
//				ПримененныйВычетНаВторогоРебенка, ПримененныйВычетНаВторогоРебенкаДвойной,
//				ПримененныйВычетНаВторогоРебенкаДвойнойВторой, 
//				ПримененныйВычетНаДетейИнвалидов, ПримененныйВычетНаДетейИнвалидовДвойной, ПримененныйВычетНаДетейИнвалидовДвойнойВторой, 
//				ПримененныйВычетНаДетейОпекунов, ПримененныйВычетНаДетейДвойнойОпекунов,
//				ПримененныйВычетНаДетейДвойнойВторойОпекунов,  ПримененныйВычетНаТретьегоРебенкаОпекунов,
//				ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов, ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов,
//				ПримененныйВычетНаВторогоРебенкаОпекунов, ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов,
//				ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов, 
//				ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
//				ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение,ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни
//				ПримененныйВычетИмущественныйРасходы, ПримененныйВычетИмущественныйПроцентыПоКредитам, ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
//				НалогПоСтавке13, НалогПоСтавке09, НалогПоСтавке35, НалогПоСтавке13КЗачетуВозврату, НалогПоСтавке35КЗачетуВозврату,
//  	    	КатегорияДохода - ПеречислениеСсылка.КатегорииДоходовНДФЛ
//	если данных для перерасчета нет - возвращается пустая таблица значений.
//			
Функция ДанныеОПерерасчетеНДФЛ(Организация, МесяцПерерасчета, НачалоПериода, ОкончаниеПериода, ФизическиеЛица = Неопределено, ДокументСсылка = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаАктуальности", КонецМесяца(МесяцПерерасчета));
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета", КонецМесяца(ОкончаниеПериода));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, Запрос.МенеджерВременныхТаблиц);	
	
    ТекстЗапроса =
	"ВЫБРАТЬ
	|	Обороты.СуммаДохода КАК СуммаДохода,
	|	Обороты.СуммаВычета КАК СуммаВычета,
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Обороты.ДатаПолученияДохода КАК Период,
	|	Обороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Обороты.КатегорияДохода КАК КатегорияДохода,
	|	Обороты.КодДохода КАК КодДохода,
	|	Обороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Обороты.Подразделение КАК Подразделение,
	|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период <= &ДатаАктуальности
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И НЕ Обороты.КодДохода.НеОблагаетсяУНалоговогоАгента
	|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И &УсловиеДляФизлиц
	|	И Обороты.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТДоходы КАК Обороты
	|ГДЕ
	|	Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)";
	
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина");
	КонецЕсли;
	Запрос.Выполнить();
	
	РезультатРасчетаНДФЛ = РассчитатьНалогПоОсновнойСтавке(ДокументСсылка, Организация, МесяцПерерасчета, Запрос.МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода);
	
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке09", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке35", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке35", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке35КЗачетуВозврату", Новый ОписаниеТипов("Число"));
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "УчитыватьИзмененияСтатусаДляРасчета");
	
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев", ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев());
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|ИЗ
	|	ВТДоходы КАК Доходы
	|ГДЕ
	|	Доходы.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА РасчетыСБюджетом.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке09,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА РасчетыСБюджетом.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке35,
	|	РасчетыСБюджетом.Подразделение КАК Подразделение,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыСБюджетом.КатегорияДохода КАК КатегорияДохода
	|ПОМЕСТИТЬ ВТРанееНачисленныеНалоги
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыСБюджетом
	|ГДЕ
	|	РасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыСБюджетом.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизическоеЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|	И РасчетыСБюджетом.Период <= &ДатаАктуальности
	|	И РасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И РасчетыСБюджетом.Регистратор <> &Регистратор
	|	И РасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыСБюджетом.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И РасчетыСБюджетом.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСБюджетом.ФизическоеЛицо,
	|	РасчетыСБюджетом.Подразделение,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода,
	|	РасчетыСБюджетом.КатегорияДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Подразделение КАК Подразделение,
	|	Доходы.КатегорияДохода КАК КатегорияДохода,
	|	ВЫБОР
	|		КОГДА Доходы.ДатаПолученияДохода < &ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев
	|			ТОГДА Доходы.МесяцНалоговогоПериода
	|		ИНАЧЕ Доходы.ДатаПолученияДохода
	|	КОНЕЦ КАК МесяцНалоговогоПериода,
	|	ВЫРАЗИТЬ((Доходы.СуммаДохода - Доходы.СуммаВычета) * ВЫБОР
	|			КОГДА Доходы.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НалогПоСтавке09,
	|	ВЫРАЗИТЬ((Доходы.СуммаДохода - Доходы.СуммаВычета) * ВЫБОР
	|			КОГДА Доходы.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НалогПоСтавке35
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	ВТДоходы КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И Доходы.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И Доходы.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И Доходы.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
	|ГДЕ
	|	Доходы.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РанееНачисленныеНалоги.ФизическоеЛицо,
	|	РанееНачисленныеНалоги.Подразделение,
	|	РанееНачисленныеНалоги.КатегорияДохода,
	|	РанееНачисленныеНалоги.МесяцНалоговогоПериода,
	|	-РанееНачисленныеНалоги.НалогПоСтавке09,
	|	-РанееНачисленныеНалоги.НалогПоСтавке35
	|ИЗ
	|	ВТРанееНачисленныеНалоги КАК РанееНачисленныеНалоги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.Подразделение КАК Подразделение,
	|	Налоги.КатегорияДохода КАК КатегорияДохода,
	|	Налоги.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СУММА(Налоги.НалогПоСтавке09) КАК НалогПоСтавке09,
	|	СУММА(Налоги.НалогПоСтавке35) КАК НалогПоСтавке35,
	|	0 КАК НалогПоСтавке35КЗачетуВозврату,
	|	0 КАК ЗачтеноАвансовыхПлатежейПоСтавке35
	|ИЗ
	|	ВТНалоги КАК Налоги
	|
	|СГРУППИРОВАТЬ ПО
	|	Налоги.ФизическоеЛицо,
	|	Налоги.Подразделение,
	|	Налоги.МесяцНалоговогоПериода,
	|	Налоги.КатегорияДохода
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Налоги.НалогПоСтавке09) <> 0
	|		ИЛИ СУММА(Налоги.НалогПоСтавке35) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Подразделение";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат РезультатРасчетаНДФЛ
	КонецЕсли;
	
	НалогПоСтавкам09и35 = Результат.Выгрузить();
	
	ВписатьВРезультатЗачтенныеАвансы(ДокументСсылка, Организация, МесяцПерерасчета, НалогПоСтавкам09и35, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35, "НалогПоСтавке35", "ЗачтеноАвансовыхПлатежейПоСтавке35");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НалогПоСтавкам09и35, РезультатРасчетаНДФЛ);
	
	Возврат РезультатРасчетаНДФЛ
	
КонецФункции 

Функция ДанныеУведомленийНаЗачетАвансовыхПлатежей(Сотрудники, НалоговыйПериод, Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГодНП", НалоговыйПериод);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей.ДатаУведомления КАК ДатаУведомления,
	|	РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей.КодНалоговогоОргана КАК КодНалоговогоОрганаУведомления,
	|	РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей.НомерУведомления КАК НомерУведомления,
	|	РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей.ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей КАК РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей
	|ГДЕ
	|	РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей.ФизическоеЛицо В(&Сотрудники)
	|	И РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РеквизитыУведомленияИФНСНаЗачетАвансовыхПлатежей.Год = &ГодНП";
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции	

Функция ДанныеУведомленийНаВычеты(Сотрудники, НалоговыйПериод, Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГодНП", НалоговыйПериод);
	Запрос.УстановитьПараметр("КонецНП", КонецГода(Дата(НалоговыйПериод, 1, 1))); 
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо КАК Сотрудник,
	|	УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.ДатаУведомления КАК ДатаУведомления,
	|	УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.КодНалоговогоОргана КАК КодНалоговогоОрганаУведомления,
	|	УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.НомерУведомления КАК НомерУведомления,
	|	ВЫБОР
	|		КОГДА УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.ПроцентыПриПерекредитовании + УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.ПроцентыПоКредитам + УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.РасходыНаСтроительствоПриобретение <> 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Имущественные)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|	КОНЕЦ КАК ГруппаВычета
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ КАК УведомлениеОПравеНаИмущественныйВычетДляНДФЛ
	|		ПО ИмущественныеВычетыНДФЛ.Регистратор = УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.Ссылка
	|			И ИмущественныеВычетыНДФЛ.ФизическоеЛицо = УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.Сотрудник
	|ГДЕ
	|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо В(&Сотрудники)
	|	И ИмущественныеВычетыНДФЛ.Период < &КонецНП
	|	И ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ИмущественныеВычетыНДФЛ.Год = &ГодНП
	|	И ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ИмущественныеВычетыНДФЛ.Организация = &Организация
	|	И УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.Ссылка ЕСТЬ НЕ NULL ";
	
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции	

// Вспомогательные функции и процедуры

Процедура ВписатьВРезультатЗарегистрированныеВУчетеДанные(РезультатыРасчетов, ЗарегистрированныеВУчетеДанные, ИменаКолонок)
	
	Для каждого СтрокаТЗ Из ЗарегистрированныеВУчетеДанные Цикл
		ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаТЗ, "ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение," + ИменаКолонок);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВписатьРесурсВРезультатыРасчетов(РезультатыРасчетов, МесяцНалоговогоПериода, Сумма, ИмяРесурса, СтруктураКлючей, СтрокиРаспределения, КоэффициентыРаспределения, ТочностьВеличины = 2, ПоляЗаполнения = "Подразделение")
	
	Если Сумма <> 0 Тогда
		РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(Сумма, КоэффициентыРаспределения, ТочностьВеличины);
		Если РаспределениеРесурса = Неопределено Тогда
			НоваяСтрока = РезультатыРасчетов.Добавить();
			НоваяСтрока[ИмяРесурса] = Сумма; 
			НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураКлючей, "ФизическоеЛицо");
		Иначе
			Индекс = 0;
			Для каждого СтрокаТЗ Из СтрокиРаспределения Цикл
				НоваяСтрока = РезультатыРасчетов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, "ФизическоеЛицо, " + ПоляЗаполнения);
				НоваяСтрока[ИмяРесурса] = РаспределениеРесурса[Индекс];
				НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
				Индекс = Индекс + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьРегистрациюВНалоговомОрганеВТаблице(Организация, ТаблицаДанных, ДатаАктуальности) Экспорт

	Если ТаблицаДанных.Колонки.Найти("Подразделение") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаДанных.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		ТаблицаДанных.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	КонецЕсли;
	
	СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(ТаблицаДанных.ВыгрузитьКолонку("Подразделение"), ДатаАктуальности);
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаАктуальности);
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(СтрокаДанных, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияВНалоговомОргане);
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьРегистрацииПодразделенийВНалоговомОргане(Подразделения, ДатаАктуальности = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаАктуальности) Тогда
		ДатаАктуальности = '00010101'
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("МассивСсылок", Подразделения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница КАК Ссылка,
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаАктуальности, СтруктурнаяЕдиница В (&МассивСсылок)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних";
	
	СоответствиеРегистраций = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеРегистраций.Вставить(Выборка.Ссылка, Выборка.РегистрацияВНалоговомОргане);		
	КонецЦикла;	
	Возврат СоответствиеРегистраций;
КонецФункции	

// Дописывает к строкам таблицы движений рассчитанную по данным каждой строки регистрацию в НО
//
// Параметры:
//		ТаблицаДвижений - ТаблицаЗначений - таблица значений с колонками:
//			* Подразделение - ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации -
//          * колонкой типа Дата, по состоянию на которую будет вычисляться регистрация в НО, имя колонки передается отдельно 
//          иными колонками
//		ИмяПоляДаты - строка - имя колонки с датами актуальности регистраций
//
//  Возвращаемое значение:
//  	новая таблица значений, представляющая собой переданную таблицу ТаблицаДвижений, дополненную колонкой РегистрацияВНалоговомОргане
//
Функция ТаблицаДвиженийСРегистрациейВНалоговомОргане(ТаблицаДвижений, ИмяПоляДаты) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(Запрос.МенеджерВременныхТаблиц, ТаблицаДвижений, "ВТТаблицаДвижений");
	
	ИменаКолонок = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаДвижений.Колонки, "Имя");
	ТекстПолей = "";
	Для каждого Имя Из ИменаКолонок Цикл
		ТекстПолей = ТекстПолей + "," + Символы.ПС + Символы.Таб + "ТаблицаДвижений." + Имя
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ТаблицаДвижений.ТекстПолей
	|ИЗ
	|	ВТТаблицаДвижений КАК ТаблицаДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО ТаблицаДвижений.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И (ТаблицаДвижений.ИмяПоляДаты МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПоляДаты", ИмяПоляДаты);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ТаблицаДвижений.ТекстПолей", Сред(ТекстПолей, 4));
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Дописывает к строкам таблицы движений признак Источник дохода за пределами РФ
//
// Параметры:
//		ТаблицаДвижений - ТаблицаЗначений - таблица значений с колонками:
//			* ПодразделениеСотрудника - Справочник.ПодразделенияОрганизаций -
//          * колонкой типа Дата, по состоянию на которую будет вычисляться регистрация в НО, имя колонки передается отдельно 
//          иными колонками
//		ИмяПоляДаты - строка - имя колонки с датами актуальности регистраций
//		ДоходПолученНаТерриторииРФ - булево - признак того, надо ли регистрировать доход как полученный за пределами РФ: 
//		                               если ДоходПолученНаТерриторииРФ = Истина, весь доход регистрируется как полученный из источников на территории РФ.
//
//  Возвращаемое значение:
//  	новая таблица значений, представляющая собой переданную таблицу ТаблицаДвижений, дополненную колонкой ИсточникДоходаЗаПределамиРФ
//
Функция ТаблицаДвиженийСИсточникомДоходаЗаПределамиРФ(ТаблицаДвижений, ИмяПоляДаты)

	Если ТаблицаДвижений.Колонки.Найти("ПодразделениеСотрудника") = Неопределено И ТаблицаДвижений.Колонки.Найти("Подразделение") = Неопределено Тогда
		Возврат ТаблицаДвижений	
	КонецЕсли;
	
	ИмяПоляПодразделенияОрганизации = "ПодразделениеСотрудника";
	Если ТаблицаДвижений.Колонки.Найти("ПодразделениеСотрудника") = Неопределено Тогда
		ИмяПоляПодразделенияОрганизации = "Подразделение";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(Запрос.МенеджерВременныхТаблиц, ТаблицаДвижений, "ВТТаблицаДвижений");
	
	ИменаКолонок = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаДвижений.Колонки, "Имя");
	ТекстПолей = "";
	Для Каждого Имя Из ИменаКолонок Цикл
		ТекстПолей = ТекстПолей + "," + Символы.ПС + Символы.Таб + "ТаблицаДвижений." + Имя
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтруктурныеЕдиницыЗаПределамиРФ.Подразделение ЕСТЬ НЕ NULL  КАК ИсточникДоходаЗаПределамиРФ,
	|	ТаблицаДвижений.ТекстПолей КАК ТекстПолей
	|ИЗ
	|	ВТТаблицаДвижений КАК ТаблицаДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодразделенияЗаПределамиРФ КАК СтруктурныеЕдиницыЗаПределамиРФ
	|		ПО ТаблицаДвижений.ИмяПоляПодразделенияОрганизации = СтруктурныеЕдиницыЗаПределамиРФ.Подразделение
	|			И (ТаблицаДвижений.ИмяПоляДаты МЕЖДУ СтруктурныеЕдиницыЗаПределамиРФ.ДатаНачала И СтруктурныеЕдиницыЗаПределамиРФ.ДатаОкончания)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПоляДаты", ИмяПоляДаты);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПоляПодразделенияОрганизации", ИмяПоляПодразделенияОрганизации);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ТаблицаДвижений.ТекстПолей КАК ТекстПолей", Сред(ТекстПолей, 4));
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ИмущественныйВычетИзДанныхДокумента(ДанныеДокумента, ИмяКолонки, КодВычета)

	ИмущественныеВычеты = ДанныеДокумента.Скопировать(,"ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, РегистрацияВНалоговомОргане, " + ИмяКолонки);
	ИмущественныеВычеты.Колонки[ИмяКолонки].Имя = "Сумма";
	ИмущественныеВычеты.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	ИмущественныеВычеты.ЗаполнитьЗначения(КодВычета, "КодВычета");
	ИмущественныеВычеты.Колонки.Добавить("Год", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4, 0)));
	
	Для каждого СтрокаТЗ Из ИмущественныеВычеты Цикл
		СтрокаТЗ.Год = Год(СтрокаТЗ.МесяцНалоговогоПериода)
	КонецЦикла;
		
	Возврат ИмущественныеВычеты	

КонецФункции

Функция НалогиИзДанныхДокумента(ДанныеДокумента, ИмяКолонки, Ставка)

	ИсчисленныйНалог = ДанныеДокумента.Скопировать(,"ФизическоеЛицо, МесяцНалоговогоПериода, КатегорияДохода, Подразделение, РегистрацияВНалоговомОргане, " + ИмяКолонки);
	ИсчисленныйНалог.Колонки[ИмяКолонки].Имя = "Сумма";
	ИсчисленныйНалог.Колонки.Добавить("СтавкаНалогообложенияРезидента", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
	ИсчисленныйНалог.ЗаполнитьЗначения(Ставка, "СтавкаНалогообложенияРезидента");
	
	Возврат ИсчисленныйНалог	

КонецФункции

Функция СтандартныйВычетИзДанныхДокумента(ДанныеДокумента, ИмяКолонки, КодВычета)

	СтандартныеВычеты = ДанныеДокумента.Скопировать(,"ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, РегистрацияВНалоговомОргане, " + ИмяКолонки);
	СтандартныеВычеты.Колонки[ИмяКолонки].Имя = "Сумма";
	СтандартныеВычеты.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	СтандартныеВычеты.ЗаполнитьЗначения(КодВычета, "КодВычета");
	
	Возврат СтандартныеВычеты	

КонецФункции

Функция ЛичныйВычетИзДанныхДокумента(ДанныеДокумента, ИмяКолонкиСуммы, ИмяКолонкиКода)

	СтандартныеВычеты = ДанныеДокумента.Скопировать(,"ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, РегистрацияВНалоговомОргане, " + ИмяКолонкиСуммы + "," + ИмяКолонкиКода);
	СтандартныеВычеты.Колонки[ИмяКолонкиСуммы].Имя = "Сумма";
	СтандартныеВычеты.Колонки[ИмяКолонкиКода].Имя = "КодВычета";
	
	Возврат СтандартныеВычеты	

КонецФункции

Функция РеквизитыПлатежногоПорученияПоДатеНомеру(ДатаПП, НомерПП)

	Возврат "№ " + НомерПП + " от " + Формат(ДатаПП, "ДФ=дд.ММ.гггг")

КонецФункции

Функция РаспределитьПеречисленныйНалогПоФизическимЛицам(Ссылка, Организация, ДатаОперации, Сумма, МесяцНалоговогоПериода, РегистрацияВНалоговомОргане, ФизическиеЛица)

	ПеречисленныеСуммы = Новый ТаблицаЗначений();
	ПеречисленныеСуммы.Колонки.Добавить("Сумма",								Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	ПеречисленныеСуммы.Колонки.Добавить("МесяцНалоговогоПериода",				Новый ОписаниеТипов("Дата"));
	ПеречисленныеСуммы.Колонки.Добавить("ФизическоеЛицо",						Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ПеречисленныеСуммы.Колонки.Добавить("Ставка",								Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	ПеречисленныеСуммы.Колонки.Добавить("ИсчисленоПоДивидендам",				Новый ОписаниеТипов("Булево"));
	ПеречисленныеСуммы.Колонки.Добавить("ВключатьВДекларациюПоНалогуНаПрибыль",	Новый ОписаниеТипов("Булево"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.СуммаОстаток КАК Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.ИсчисленоПоДивидендам,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТДанныеУчета
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Остатки(
	|			&ДатаОперации,
	|			Организация = &Организация
	|				И &УсловиеДляФизлиц
	|				И &УсловиеДляМесяцНалоговогоПериода
	|				И РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ФизическоеЛицо,
	|	Остатки.Ставка,
	|	СУММА(Остатки.Сумма) КАК Сумма,
	|	Остатки.ИсчисленоПоДивидендам,
	|	Остатки.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Остатки.МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	ВТДанныеУчета КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.ФизическоеЛицо,
	|	Остатки.Ставка,
	|	Остатки.ИсчисленоПоДивидендам,
	|	Остатки.МесяцНалоговогоПериода,
	|	Остатки.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ФизическоеЛицо,
	|	Остатки.Ставка,
	|	Остатки.Сумма,
	|	Остатки.ИсчисленоПоДивидендам,
	|	Остатки.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Остатки.МесяцНалоговогоПериода
	|ИЗ
	|	ВТОстатки КАК Остатки
	|ГДЕ
	|	Остатки.Сумма > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Остатки.Ставка КАК Ставка,
	|	-Остатки.Сумма КАК Сумма,
	|	Остатки.ИсчисленоПоДивидендам,
	|	Остатки.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Остатки.МесяцНалоговогоПериода
	|ИЗ
	|	ВТОстатки КАК Остатки
	|ГДЕ
	|	Остатки.Сумма < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сумма,
	|	ФизическоеЛицо,
	|	Ставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СУММА(Остатки.Сумма) КАК Сумма
	|ИЗ
	|	ВТОстатки КАК Остатки
	|ГДЕ
	|	Остатки.Сумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.МесяцНалоговогоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	МесяцНалоговогоПериода";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", МесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина");
	КонецЕсли;
	Если ЗначениеЗаполнено(МесяцНалоговогоПериода) Тогда
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляМесяцНалоговогоПериода", "МесяцНалоговогоПериода = &МесяцНалоговогоПериода");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляМесяцНалоговогоПериода", "МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)");
	КонецЕсли;

	Результаты = Запрос.ВыполнитьПакет();
	ТаблицаПереплат = Результаты[3].Выгрузить();
	Результат = Результаты[2].Выгрузить();
	
	ВсегоПереплаты = ТаблицаПереплат.Итог("Сумма");
	КУплате = Результат.Итог("Сумма");
	
	ПеречисленоСУчетомПереплаты = Мин(КУплате, Сумма + ВсегоПереплаты);
	Если ПеречисленоСУчетомПереплаты = 0 Тогда
		Возврат ПеречисленныеСуммы
	КонецЕсли;
	
	ЗачтеноПереплаты = ПеречисленоСУчетомПереплаты - Сумма;
	Для каждого СтрокаТЗ Из ТаблицаПереплат Цикл
		НоваяСтрока = ПеречисленныеСуммы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, ,"Сумма"); 
		КЗачету = Мин(ЗачтеноПереплаты, СтрокаТЗ.Сумма);
		ЗачтеноПереплаты = ЗачтеноПереплаты - КЗачету;
		НоваяСтрока.Сумма = -КЗачету;
		Если ЗачтеноПереплаты = 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МесяцНалоговогоПериода) Тогда
		РезультатРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ПеречисленоСУчетомПереплаты, ОбщегоНазначения.ВыгрузитьКолонку(Результат,"Сумма"),0);
		Если РезультатРаспределения = Неопределено Тогда
			Возврат ПеречисленныеСуммы
		Иначе
			Индекс = 0;
			Для каждого СтрокаТЗ Из Результат Цикл
				НоваяСтрока = ПеречисленныеСуммы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, ,"Сумма"); 
				НоваяСтрока.Сумма = РезультатРаспределения[Индекс];
				Индекс = Индекс + 1;
			КонецЦикла;
		КонецЕсли;
	Иначе
		ПараметрыОтбора = Новый Структура("МесяцНалоговогоПериода");
		МесяцыЗадолженности = Результаты[4].Выбрать();
		Пока МесяцыЗадолженности.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора, МесяцыЗадолженности);
			РезультатМесяцаЗадолженности = Результат.Скопировать(Результат.НайтиСтроки(ПараметрыОтбора));
			Если МесяцыЗадолженности.Сумма <= ПеречисленоСУчетомПереплаты Тогда
				Для каждого СтрокаТЗ Из РезультатМесяцаЗадолженности Цикл
					ЗаполнитьЗначенияСвойств(ПеречисленныеСуммы.Добавить(), СтрокаТЗ); 
				КонецЦикла;
				ПеречисленоСУчетомПереплаты = ПеречисленоСУчетомПереплаты - МесяцыЗадолженности.Сумма;
				Если ПеречисленоСУчетомПереплаты = 0 Тогда
					Прервать
				КонецЕсли;
			Иначе
				РезультатРаспределения = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ПеречисленоСУчетомПереплаты, ОбщегоНазначения.ВыгрузитьКолонку(РезультатМесяцаЗадолженности,"Сумма"),0);
				Если РезультатРаспределения = Неопределено Тогда
					Возврат ПеречисленныеСуммы
				Иначе
					Индекс = 0;
					Для каждого СтрокаТЗ Из РезультатМесяцаЗадолженности Цикл
						НоваяСтрока = ПеречисленныеСуммы.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, ,"Сумма"); 
						НоваяСтрока.Сумма = РезультатРаспределения[Индекс];
						Индекс = Индекс + 1;
					КонецЦикла;
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПеречисленныеСуммы
	
КонецФункции

Функция СтрокаИмущественныхВычетов(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ОкончательныйРасчет = Истина)
	
	НоваяСтрока = Движения.ИмущественныеВычетыНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	Если ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		НоваяСтрока.Период = ДатаОперации;
	Иначе
		НоваяСтрока.Период = КонецМесяца(ДанныеДокумента.МесяцНалоговогоПериода);
		НоваяСтрока.ВычетМежрасчетногоПериода = Не ОкончательныйРасчет;
		НоваяСтрока.МесяцРегистрации = НачалоМесяца(ДатаОперации);
	КонецЕсли;
	// Код 318 отменен с 2015 года - Приказ ФНС от 10.09.2015 № ММВ-7-11/387@
	Если НоваяСтрока.Год > 2014 И НоваяСтрока.КодВычета = Справочники.ВидыВычетовНДФЛ.Код318 Тогда 
		НоваяСтрока.КодВычета = Справочники.ВидыВычетовНДФЛ.Код312
	КонецЕсли;
	
    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ВидСтроки = Неопределено, ОкончательныйРасчет = Истина, ДатаВыплаты = '00010101')
	
	НоваяСтрока = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	НоваяСтрока.ВариантУдержания = ВидСтроки;
	НоваяСтрока.РасчетМежрасчетногоПериода = Не ОкончательныйРасчет;
	Если НоваяСтрока.МесяцНалоговогоПериода < ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев() Тогда
		НоваяСтрока.МесяцНалоговогоПериода = НачалоМесяца(НоваяСтрока.МесяцНалоговогоПериода)
	КонецЕсли;
	Если НоваяСтрока.КатегорияДохода <> Перечисления.КатегорииДоходовНДФЛ.Дивиденды Тогда
		Если УчетНДФЛПовтИсп.КодыДоходовПоЦеннымБумагам(Год(НоваяСтрока.МесяцНалоговогоПериода)).Найти(НоваяСтрока.КодДохода) = Неопределено Тогда
			НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
		КонецЕсли;
		НоваяСтрока.КодДохода = Справочники.ВидыДоходовНДФЛ.ПустаяСсылка()
	КонецЕсли;
	Если Не НоваяСтрока.ДатаПолученияДоходаФиксирована Тогда
		НоваяСтрока.ДатаПолученияДоходаФиксирована = Перечисления.КатегорииДоходовНДФЛ.СФиксированнойДатойПолученияДохода().Найти(НоваяСтрока.КатегорияДохода) <> Неопределено;
		Если Не НоваяСтрока.ДатаПолученияДоходаФиксирована И ЗначениеЗаполнено(ДатаВыплаты) Тогда
			НоваяСтрока.ДатаПолученияДоходаФиксирована = НоваяСтрока.МесяцНалоговогоПериода < ДатаВыплаты
		КонецЕсли;	
	КонецЕсли;
	Если НоваяСтрока.МесяцНалоговогоПериода < ДатаПереводаДоходовПоЦеннымБумагамВДекларациюПоПрибыли() Тогда
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	
	Возврат НоваяСтрока
	
КонецФункции

// Формирует строку движения по регистру РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.
//
// Параметры:
//		Движения - коллекция движений регистратора.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		ВидДвижения.
//		ДанныеДокумента - некоторая структура (строка таблицы значений, выборки из результата запроса и т.п.) 
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля)
//		ДанныеРаспределения - некоторая дополнительная структура (строка таблицы значений, выборки из результата запроса и т.п.)
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля)
Функция СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ДанныеРаспределения = Неопределено, КодДохода = Неопределено, КатегорияДохода = Неопределено) 
	
	НоваяСтрока = Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	Если ДанныеРаспределения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеРаспределения);
	КонецЕсли;
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	Если КатегорияДохода <> Неопределено Тогда
		НоваяСтрока.ИсчисленоПоДивидендам = КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.Дивиденды
										Или КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05
										Или КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10
										Или КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12;
	ИначеЕсли КодДохода <> Неопределено Тогда	
		НоваяСтрока.ИсчисленоПоДивидендам = КодДохода = Справочники.ВидыДоходовНДФЛ.Код1010;
	КонецЕсли;
	НоваяСтрока.МесяцНалоговогоПериода = НачалоМесяца(НоваяСтрока.МесяцНалоговогоПериода);
	Если НоваяСтрока.МесяцНалоговогоПериода < ДатаПереводаДоходовПоЦеннымБумагамВДекларациюПоПрибыли() Или НоваяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка35 Тогда
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	ИначеЕсли НоваяСтрока.МесяцНалоговогоПериода < ДатаИзмененияНалогообложенияДивидендов() И НоваяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка13 Тогда	
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	ИначеЕсли НоваяСтрока.МесяцНалоговогоПериода >= ДатаИзмененияНалогообложенияДивидендов() И НоваяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка09 Тогда	
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	
	Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаУплатыНалоговогоАгента(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента) Экспорт
	
	НоваяСтрока = Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	Если НоваяСтрока.МесяцНалоговогоПериода >= '20150101' Тогда
		НоваяСтрока.МесяцНалоговогоПериода = '00010101'
	КонецЕсли;
	
    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаСтандартныхВычетов(Движения, Организация, ДатаОперации, ДанныеДокумента, ОкончательныйРасчет)
	
	НоваяСтрока = Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	НоваяСтрока.ВычетМежрасчетногоПериода = Не ОкончательныйРасчет;
	
    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаАвансовыхПлатежейИностранцев(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ОкончательныйРасчет = Истина)
	
	НоваяСтрока = Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	Если Не ЗначениеЗаполнено(НоваяСтрока.Год) И ЗначениеЗаполнено(НоваяСтрока.МесяцНалоговогоПериода) Тогда
		НоваяСтрока.Год = Год(НоваяСтрока.МесяцНалоговогоПериода)
	КонецЕсли;
	Если ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		НоваяСтрока.Период = ДатаОперации;
	Иначе
		НоваяСтрока.Период = КонецМесяца(Мин(ДатаОперации, ДанныеДокумента.МесяцНалоговогоПериода));
	КонецЕсли;
	
    Возврат НоваяСтрока
	
КонецФункции

// Устарела. Следует использовать БазаРасчетаНДФЛ 
Функция ПолучитьБазуРасчетаНДФЛ(Организация, МесяцРасчета, ФизическиеЛицаМассив, РегистраторОграниченияБазы = Неопределено) Экспорт 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Возврат БазаРасчетаНДФЛ(МенеджерВременныхТаблиц, Организация, МесяцРасчета, ФизическиеЛицаМассив, РегистраторОграниченияБазы);
	
КонецФункции

#Область ФункцииПервоначальногоЗаполненияИОбновленияИБ

// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
//
// Параметры: 
//  ИмяРегистра - строка - 
//  ТекстЗапроса - строка - текст исполняемого запроса, в котором обязательно присутствует 
//			поле Регистратор, остальные поля должны соответствовать 
//          полям записи заполняемого регистра, в результате должны 
//          присутствовать все заполняемые поля;
//			кроме того, результат запроса должен быть упорядочен, 
//			первое поле упорядочивания - Регистратор
//  ПараметрыЗапроса - Структура - необязательный, содержит имена и значения параметров,
//          которые требуются запросу
//
// Возвращаемое значение:
//  Нет
//
Процедура ОбработатьНаборыЗаписейРегистраНакопления(ИмяРегистра, ТекстЗапроса, ПараметрыЗапроса = Неопределено, МенеджерВременныхТаблиц = Неопределено, ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Если МенеджерВременныхТаблиц <> Неопределено Тогда
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Если ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		Для каждого КлючИЗначение Из ПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение)
		КонецЦикла;
	КонецЕсли;
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрНакопления." + ИмяРегистра + ".НаборЗаписей", "Регистратор", Выборка.Регистратор) Тогда
				Продолжить;
			КонецЕсли;
			НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		КонецЦикла;
	Иначе
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	КонецЕсли;

КонецПроцедуры


// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные = Истина;
		Обработчик.НачальноеЗаполнение = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.2.26";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.СоздатьКодыДоходовНДФЛДекабрь2011";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.2.30";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ОбновлениеДоходовВычетовНДФЛНеПредопределенныхЯнварь2012";
		Обработчик.ОбщиеДанные = Истина;
		Обработчик.НачальноеЗаполнение = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.8.13";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ПроставитьКодамДоходаОтношениеКОплатеТруда";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.11.10";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ПроставитьКодамНатуральныхДоходовПризнакПредопределенного";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.16.7";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.УстановитьСтавкуДоходу3022";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.21.12";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ЗаполнитьКодыДоходов2014";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.25.48";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ЗаполнитьКодыДоходов2015";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.2.74";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ЗаполнитьКодыДоходов2016";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.160";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ЗаполнитьКодыДоходов2017";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.164";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ЗаполнитьКодыДоходов2018";
		Обработчик.ОбщиеДанные = Истина;
		
	КонецЕсли;

	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыВычетовНДФЛ) Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.3.3";
		Обработчик.Процедура = "Справочники.ВидыВычетовНДФЛ.ЗаполнитьКодыВычетовНДФЛ";
		Обработчик.ОбщиеДанные = Истина;
		Обработчик.НачальноеЗаполнение = Истина;

	КонецЕсли;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.СтатусыНалогоплательщиковПоНДФЛ) Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.2.24";
		Обработчик.Процедура = "Справочники.СтатусыНалогоплательщиковПоНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные = Истина;
		Обработчик.НачальноеЗаполнение = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.5.16";
		Обработчик.Процедура = "Справочники.СтатусыНалогоплательщиковПоНДФЛ.УточнитьНаименованияСтатусовНДФЛ";
		Обработчик.ОбщиеДанные = Истина;
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.19.28";
		Обработчик.Процедура = "Справочники.СтатусыНалогоплательщиковПоНДФЛ.ОписатьСтатусБеженца";
		Обработчик.ОбщиеДанные = Истина;

		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.25.28";
		Обработчик.Процедура = "Справочники.СтатусыНалогоплательщиковПоНДФЛ.ОписатьСтатусыНерезидентов2015";
		Обработчик.ОбщиеДанные = Истина;

		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.25.28";
		Обработчик.Процедура = "Справочники.СтатусыНалогоплательщиковПоНДФЛ.ПроставитьКоды_2015";
		Обработчик.ОбщиеДанные = Истина;

	КонецЕсли;
		
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.РегистрыСведений.ВычетыПоДоходамНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Процедура = "РегистрыСведений.ВычетыПоДоходамНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные =  Истина;
		Обработчик.НачальноеЗаполнение = Истина;
	КонецЕсли;
		
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.РегистрыСведений.РазмерВычетовНДФЛ) Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.2.74";
		Обработчик.Процедура = "РегистрыСведений.РазмерВычетовНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные = Истина;
		Обработчик.НачальноеЗаполнение = Истина;
		
	КонецЕсли;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.РегистрыСведений.РазмерВычетовНДФЛВторичный) Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.18";
		Обработчик.Процедура = "Регистрысведений.РазмерВычетовНДФЛВторичный.ЗаполнитьВторичныеДанныеРазмерВычетовНДФЛВторичный";
		Обработчик.РежимВыполнения = "Монопольно";
		Обработчик.Идентификатор = Новый УникальныйИдентификатор("07c02f11-2d14-41ea-8e45-9e80a991d9a4");
		Обработчик.Комментарий = НСтр("ru = 'Заполнение вторичных данных о размерах страндартных вычетов по НДФЛ.'");
		Обработчик.ОбщиеДанные = Истина;
		Обработчик.НачальноеЗаполнение = Истина;
		
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.2.28";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьФлажкиИзмененияВычетовВЗаявлении";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.6.24";
	Обработчик.Процедура = "Документы.ПерерасчетНДФЛ.ЗаполнитьПримененныеВычетыНаДетейИИмущественные";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.7.5";
	Обработчик.Процедура = "УчетНДФЛ.ОбработкаУчетаПоНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.12.6";
	Обработчик.Процедура = "УчетНДФЛ.СправкиНДФЛУстановитьПризнакСпециальныйДокумент2013года";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.18.16";
	Обработчик.Процедура = "УчетНДФЛ.ИсправитьКодДоходаВРасчетахСБюджетом";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.21.12";
	Обработчик.Процедура = "УчетНДФЛ.ПроставитьФлажокВключатьВДекларациюПоНалогуНаПрибыль";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.22.144";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьПодразделениеСотрудникаВСведенияхОДоходах";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.22.144";
	Обработчик.Процедура = "УчетНДФЛ.ОтменитьУчетМесяцевНалоговогоПериодаПриРегистрацииУплаты";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.24.12";
	Обработчик.Процедура = "УчетНДФЛ.ПроставитьПорядокОтраженияВОтчетностиРасчетовНАсБюджетомПоНДФЛ";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.24.15";
	Обработчик.Процедура = "УчетНДФЛ.ПроставитьРегистрациюВДокументахВозвратаНДФЛ";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.1";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьМесяцНалоговогоПериодаВозвратаПерерасчетаНДФЛ";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.36";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьСтавкуДоходаВ2НДФЛ";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.11";
	Обработчик.Процедура = "УчетНДФЛ.ЗаменитьВычет318";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.17";
	Обработчик.Процедура = "УчетНДФЛ.ПроставитьВариантУдержанияПоВозвратамНДФЛ";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.46";
	Обработчик.Процедура = "УчетНДФЛ.ПеренестиУведомленияВТаблицу";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.47";
	Обработчик.Процедура = "УчетНДФЛ.ВзвестиФлажокНеВключатьДоходыПоЦеннымБумагамВ2015году";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.56";
	Обработчик.Процедура = "УчетНДФЛ.ИсправитьДатыПолученияДоходаПоОперациям";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.90";
	Обработчик.Процедура = "УчетНДФЛ.ПроставитьОснованияПоОперациям";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.25.92";
	Обработчик.Процедура = "УчетНДФЛ.ПроставитьДатыКрайнегоСрокаУплаты";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.1.86";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьДатыРегистрацииИмущВычета";

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.92";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьКППОтправкиВ2НДФЛ";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("33b3de33-fd2b-40a8-9cee-907274489986");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение КПП отправки в документе 2-НДФЛ для передачи в ИФНС.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.129";
	Обработчик.Процедура = "РегистрыСведений.РедактируемыеРеквизитыКодаДоходаНДФЛ.НачальноеЗаполнение";
	Обработчик.НачальноеЗаполнение = Истина;
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("b92912a6-3a5f-409b-b733-b1e58beb47b1");
	Обработчик.Комментарий = НСтр("ru = 'Обработка кодов дохода по НДФЛ. До завершения обработки рекомендуется воздержаться от начисления зарплаты, отпускных, б/л и пр.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.3.94";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьДатыДляПроверкиЗапретаРедактированияИмущВычета";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("0292ebcd-7fb1-440e-9995-1076c088665c");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение дат для проверки запрета редактирования данных об имущественных вычетов.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.3.120";
	Обработчик.Процедура = "УчетНДФЛ.УточнитьДатуСписанияАвансовогоПлатежа";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("07c02f11-2d14-41ea-8e45-9e80a991d9ad");
	Обработчик.Комментарий = НСтр("ru = 'Исправление дат списания авансового платежа иностранца.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.18";
	Обработчик.Процедура = "Регистрысведений.СтандартныеВычетыПоНДФЛВторичный.ЗаполнитьВторичныеДанныеСтандартныеВычетыПоНДФЛ";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("07c02f11-2d14-41ea-8e45-9e80a991d9a1");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение вторичных данных о стандарных вычетах по НДФЛ.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.18";
	Обработчик.Процедура = "Регистрысведений.ИсторияРегистрацийВНалоговомОрганеВторичный.ЗаполнитьВторичныеДанныеИсторияРегистрацийВНалоговомОргане";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("07c02f11-2d14-41ea-8e45-9e80a991d9a2");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение вторичных данных о истории регистрации в налоговом органе.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.18";
	Обработчик.Процедура = "Регистрысведений.ПрименениеСтандартныхВычетовПоНДФЛВторичный.ЗаполнитьВторичныеДанныеПрименениеСтандартныхВычетовПоНДФЛ";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("07c02f11-2d14-41ea-8e45-9e80a991d9a3");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение вторичных данных о применении страндартных вычетов по НДФЛ.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.18";
	Обработчик.Процедура = "Регистрысведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ЗаполнитьВторичныеДанныеСтатусыФизическихЛиц";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("07c02f11-2d14-41ea-8e45-9e80a991d9a5");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение вторичных данных о статусах физических лиц по НДФЛ.'");
	
КонецПроцедуры


Процедура ЗаполнитьФлажкиИзмененияВычетовВЗаявлении() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заявления.Заявление,
	|	МАКСИМУМ(Заявления.ИзменитьЛичныйВычет) КАК ИзменитьЛичныйВычет,
	|	МАКСИМУМ(Заявления.ИзменитьВычетыНаДетей) КАК ИзменитьВычетыНаДетей
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтандартныеВычетыФизическихЛицНДФЛ.Регистратор КАК Заявление,
	|		ИСТИНА КАК ИзменитьЛичныйВычет,
	|		ЛОЖЬ КАК ИзменитьВычетыНаДетей
	|	ИЗ
	|		РегистрСведений.СтандартныеВычетыФизическихЛицНДФЛ КАК СтандартныеВычетыФизическихЛицНДФЛ
	|	ГДЕ
	|		СтандартныеВычетыФизическихЛицНДФЛ.Регистратор ССЫЛКА Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ
	|		И НЕ СтандартныеВычетыФизическихЛицНДФЛ.Регистратор.ИзменитьЛичныйВычет
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтандартныеВычетыНаДетейНДФЛ.Регистратор,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		РегистрСведений.СтандартныеВычетыНаДетейНДФЛ КАК СтандартныеВычетыНаДетейНДФЛ
	|	ГДЕ
	|		СтандартныеВычетыНаДетейНДФЛ.Регистратор ССЫЛКА Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ
	|		И НЕ СтандартныеВычетыНаДетейНДФЛ.Регистратор.ИзменитьВычетыНаДетей) КАК Заявления
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявления.Заявление";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Заявление.ПолучитьОбъект();
		Док.ОбменДанными.Загрузка = Истина;
		
		Если Выборка.ИзменитьВычетыНаДетей Тогда
			Док.ИзменитьВычетыНаДетей = Истина;
		КонецЕсли;
		Если Выборка.ИзменитьЛичныйВычет Тогда
			Док.ИзменитьЛичныйВычет = Истина;
		КонецЕсли;
		
		Док.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУчетаПоНДФЛ() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения = """"
	|	И (РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.УдалитьПлатежноеПоручениеНомер <> """"
	|			ИЛИ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.УдалитьПлатежноеПоручениеДата <> ДАТАВРЕМЯ(1, 1, 1))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.УдалитьПлатежноеПоручениеНомер КАК НомерПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.УдалитьПлатежноеПоручениеДата КАК ДатаПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей = РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.РеквизитыПлатежногоПоручения = ?(ЗначениеЗаполнено(Выборка.РеквизитыПлатежногоПоручения), Выборка.РеквизитыПлатежногоПоручения, РеквизитыПлатежногоПорученияПоДатеНомеру(Выборка.ДатаПП, Выборка.НомерПП));
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИмущественныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|ГДЕ
	|	ИмущественныеВычетыНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ИмущественныеВычетыНДФЛ.УдалитьОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.Период,
	|	ИмущественныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ИмущественныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ИмущественныеВычетыНДФЛ.Активность,
	|	ИмущественныеВычетыНДФЛ.ВидДвижения,
	|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
	|	ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ИмущественныеВычетыНДФЛ.КодВычета,
	|	ИмущественныеВычетыНДФЛ.Год,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычетыНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ИмущественныеВычетыНДФЛ.УдалитьОрганизация
	|		ИНАЧЕ ИмущественныеВычетыНДФЛ.Организация
	|	КОНЕЦ КАК Организация,
	|	ИмущественныеВычетыНДФЛ.Подразделение,
	|	ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ИмущественныеВычетыНДФЛ.ВычетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|ГДЕ
	|	ИмущественныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления.ИмущественныеВычетыНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
		РегистрыНакопления.ИмущественныеВычетыНДФЛ.ПересчитатьИтоги();
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.УдалитьОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Активность,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.УдалитьОрганизация
	|		ИНАЧЕ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация
	|	КОНЕЦ КАК Организация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВычетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
		РегистрыНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПересчитатьИтоги();
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьОрганизация
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
	|	КОНЕЦ КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
		РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПересчитатьИтоги();
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И СведенияОДоходахНДФЛ.УдалитьОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СведенияОДоходахНДФЛ.Активность,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СведенияОДоходахНДФЛ.УдалитьОрганизация
	|		ИНАЧЕ СведенияОДоходахНДФЛ.Организация
	|	КОНЕЦ КАК Организация,
	|	СведенияОДоходахНДФЛ.СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.Начисление,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления.СведенияОДоходахНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
		РегистрыНакопления.СведенияОДоходахНДФЛ.ПересчитатьИтоги();
	КонецЕсли;

КонецПроцедуры

Процедура СправкиНДФЛУстановитьПризнакСпециальныйДокумент2013года() Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкаНДФЛ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|ГДЕ
	|	СправкаНДФЛ.СпециальныйДокумент2013года
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.СпециальныйДокумент2013года
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.НалоговыйПериод >= 2013
	|	И НЕ СправкиНДФЛДляПередачиВНалоговыйОрган.СпециальныйДокумент2013года
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкаНДФЛ.Ссылка
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|ГДЕ
	|	СправкаНДФЛ.НалоговыйПериод >= 2013
	|	И НЕ СправкаНДФЛ.СпециальныйДокумент2013года";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Если Не Результаты[0].Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	Выборка = Результаты[1].Выбрать();
	
	НачатьТранзакцию();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.СпециальныйДокумент2013года = Истина;
		ДокументОбъект.Записать();
	КонецЦикла;	
	ЗафиксироватьТранзакцию();
КонецПроцедуры	

Процедура ИсправитьКодДоходаВРасчетахСБюджетом() Экспорт
	
	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода
	|	КОНЕЦ КАК КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст)
	
КонецПроцедуры

Процедура ПроставитьФлажокВключатьВДекларациюПоНалогуНаПрибыль() Экспорт

	// Обработка данных о доходах физлиц.
	
	КодыДоходовПоЦеннымБумагам = КодыДоходовПоЦеннымБумагам(2014);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КодыДоходовПоЦеннымБумагам",КодыДоходовПоЦеннымБумагам);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияОДоходахНДФЛ.Регистратор
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)";
	Если Запрос.Выполнить().Пустой() Тогда // Дальнейшая обработка не нужна - доходов по ценным бумагам нет.
		Возврат
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияОДоходахНДФЛ.Регистратор
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И НЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль";
	Если Запрос.Выполнить().Пустой() Тогда // Повторная обработка не нужна - необработанных доходов по ценным бумагам нет.
		Возврат
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И НЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль";
	Запрос.Выполнить();
	
	Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СведенияОДоходахНДФЛ.Активность,
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.Организация,
	|	СведенияОДоходахНДФЛ.СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.Начисление,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодДохода В (&КодыДоходовПоЦеннымБумагам)
	|				И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("СведенияОДоходахНДФЛ", Текст, Новый Структура("КодыДоходовПоЦеннымБумагам", КодыДоходовПоЦеннымБумагам), Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперацияНалоговогоУчетаПоНДФЛ.Ссылка
	|ИЗ
	|	Документ.ОперацияНалоговогоУчетаПоНДФЛ КАК ОперацияНалоговогоУчетаПоНДФЛ
	|ГДЕ
	|	ОперацияНалоговогоУчетаПоНДФЛ.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)";	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ОбменДанными.Загрузка = Истина;
			Для каждого СтрокаТЧ Из Документ.СведенияОДоходах Цикл
				Если Не СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль И СтрокаТЧ.ДатаПолученияДохода >= '20140101' И СтрокаТЧ.КодДохода <> Справочники.ВидыДоходовНДФЛ.Код1010 И КодыДоходовПоЦеннымБумагам.Найти(СтрокаТЧ.КодДохода) <> Неопределено Тогда
					СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль = Истина
				КонецЕсли;
			КонецЦикла;
			Если Документ.Модифицированность() Тогда
				Документ.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Обработка данных физлиц, не имевших других доходов, кроме ценных бумаг.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТФизлицаСОднотипнымиДоходами
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.Организация,
	|	ФизлицаСОднотипнымиДоходами.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	ВТФизлицаСОднотипнымиДоходами КАК ФизлицаСОднотипнымиДоходами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ПО ФизлицаСОднотипнымиДоходами.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И (ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|			И ФизлицаСОднотипнымиДоходами.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизлицаСОднотипнымиДоходами";
	Запрос.Выполнить();

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыВычетов
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = Физлица.ГоловнаяОрганизация
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = Физлица.Организация
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	НЕ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Активность,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВычетМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА Физлица.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = Физлица.ГоловнаяОрганизация
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = Физлица.Организация
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыВычетов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);
	
	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалогоплательщиков
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = Физлица.ГоловнаяОрганизация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = Физлица.Организация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА Физлица.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = Физлица.ГоловнаяОрганизация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = Физлица.Организация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалогоплательщиков КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);
	
	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалоговыхАгентов
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = Физлица.Организация
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА Физлица.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = Физлица.Организация
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалоговыхАгентов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);
	
	// Обработка данных регистраторов, в которых нет других доходов, кроме ценных бумаг.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыДоходовПоЦеннымБумагам
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТФизлицаСОднотипнымиДоходами
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыДоходовПоЦеннымБумагам КАК Регистраторы)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизлицаСОднотипнымиДоходами.Регистратор,
	|	ФизлицаСОднотипнымиДоходами.ФизическоеЛицо,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	ВТФизлицаСОднотипнымиДоходами КАК ФизлицаСОднотипнымиДоходами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ПО ФизлицаСОднотипнымиДоходами.Регистратор = СведенияОДоходахНДФЛ.Регистратор
	|			И ФизлицаСОднотипнымиДоходами.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И (ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|			И ФизлицаСОднотипнымиДоходами.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРегистраторыДоходовПоЦеннымБумагам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизлицаСОднотипнымиДоходами";
	Запрос.Выполнить();

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыВычетов
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Регистраторы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Активность,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВычетМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА Регистраторы.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыВычетов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);
	
	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалогоплательщиков
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Регистраторы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА Регистраторы.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалогоплательщиков КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалоговыхАгентов
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Регистраторы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	ВЫБОР
	|		КОГДА Регистраторы.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалоговыхАгентов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);

КонецПроцедуры

Процедура ЗаполнитьПодразделениеСотрудникаВСведенияхОДоходах() Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И СведенияОДоходахНДФЛ.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И СведенияОДоходахНДФЛ.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций";
	Запрос.Выполнить();
	
	Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СведенияОДоходахНДФЛ.Активность,
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.Организация,
	|	СведенияОДоходахНДФЛ.СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.Начисление,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.ПодразделениеСотрудника = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				И СведенияОДоходахНДФЛ.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				И СведенияОДоходахНДФЛ.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций
	|			ТОГДА СведенияОДоходахНДФЛ.Подразделение
	|		ИНАЧЕ СведенияОДоходахНДФЛ.ПодразделениеСотрудника
	|	КОНЕЦ КАК ПодразделениеСотрудника,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("СведенияОДоходахНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);

КонецПроцедуры

Процедура ПроставитьПорядокОтраженияВОтчетностиРасчетовНАсБюджетомПоНДФЛ() Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОперацияНалоговогоУчетаПоНДФЛНДФЛУдержанный.Ссылка
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	Документ.ОперацияНалоговогоУчетаПоНДФЛ.НДФЛУдержанный КАК ОперацияНалоговогоУчетаПоНДФЛНДФЛУдержанный
	|ГДЕ
	|	ОперацияНалоговогоУчетаПоНДФЛНДФЛУдержанный.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|	И НЕ ОперацияНалоговогоУчетаПоНДФЛНДФЛУдержанный.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И ГОД(ОперацияНалоговогоУчетаПоНДФЛНДФЛУдержанный.МесяцНалоговогоПериода) = 2015";
	Если Запрос.Выполнить().Выгрузить()[0].Количество > 0 Тогда 
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Регистраторы.Ссылка
		|ИЗ
		|	ВТРегистраторы КАК Регистраторы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.Период,
		|	НДФЛРасчетыСБюджетом.Регистратор КАК Регистратор,
		|	НДФЛРасчетыСБюджетом.НомерСтроки,
		|	НДФЛРасчетыСБюджетом.Активность,
		|	НДФЛРасчетыСБюджетом.ВидДвижения,
		|	НДФЛРасчетыСБюджетом.ГоловнаяОрганизация,
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.Организация,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.Сумма,
		|	НДФЛРасчетыСБюджетом.ДокументОснование,
		|	НДФЛРасчетыСБюджетом.ВариантУдержания,
		|	НДФЛРасчетыСБюджетом.РасчетМежрасчетногоПериода,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
		|	НДФЛРасчетыСБюджетом.Подразделение,
		|	НДФЛРасчетыСБюджетом.КодДохода,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НДФЛРасчетыСБюджетом
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.Регистратор В
		|			(ВЫБРАТЬ
		|				Регистраторы.Ссылка
		|			ИЗ
		|				ВТРегистраторы КАК Регистраторы)
		|	И НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ИсчисленоПоДивидендам,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма
		|ИЗ
		|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
		|ГДЕ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
		|			(ВЫБРАТЬ
		|				Регистраторы.Ссылка
		|			ИЗ
		|				ВТРегистраторы КАК Регистраторы)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор";
		Результаты = Запрос.ВыполнитьПакет();
		ТаблицаНДФЛРасчетыСБюджетом = Результаты[1].Выгрузить();
		ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ = Результаты[2].Выгрузить();
		
		СтруктураПоиска = Новый Структура("Регистратор");
		СтруктураПоискаДвижения = Новый Структура("Период,ФизическоеЛицо,Ставка,МесяцНалоговогоПериода,РегистрацияВНалоговомОргане,РеквизитыПлатежногоПоручения,Сумма");
		Выборка = Результаты[0].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтруктураПоиска.Регистратор = Выборка.Ссылка;
			
			НаборЗаписей = РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			
			Удержано = ТаблицаНДФЛРасчетыСБюджетом.Скопировать(ТаблицаНДФЛРасчетыСБюджетом.НайтиСтроки(СтруктураПоиска));
			Движения = Новый Структура("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ", НаборЗаписей.ВыгрузитьКолонки());
			Для каждого СтрокаТЗ Из Удержано Цикл
				СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, СтрокаТЗ.Организация, СтрокаТЗ.Период, ВидДвиженияНакопления.Приход, СтрокаТЗ, , СтрокаТЗ.КодДохода);
			КонецЦикла;
			СтарыеДанные = ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Скопировать(ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НайтиСтроки(СтруктураПоиска));
			НовыеДанные = Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ;
			ЗаписыватьДанные = Ложь;
			Для каждого СтрокаТЗ Из СтарыеДанные Цикл
				Если СтрокаТЗ.Ставка = Перечисления.НДФЛСтавки.Ставка13 Тогда
					ЗаписыватьДанные = Истина;
					ЗаполнитьЗначенияСвойств(СтруктураПоискаДвижения,СтрокаТЗ);
					СтрокиНовогоДвижения = НовыеДанные.НайтиСтроки(СтруктураПоискаДвижения);
					Если СтрокиНовогоДвижения.Количество() > 0 Тогда
						СтрокаТЗ.ИсчисленоПоДивидендам = СтрокиНовогоДвижения[0].ИсчисленоПоДивидендам
					КонецЕсли;
				ИначеЕсли СтрокаТЗ.Ставка = Перечисления.НДФЛСтавки.Ставка15 Тогда
					СтрокаТЗ.ИсчисленоПоДивидендам = Истина
				КонецЕсли;
			    ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), СтрокаТЗ);
			КонецЦикла;
			Если ЗаписыватьДанные Тогда
				НаборЗаписей.Записать();
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтменитьУчетМесяцевНалоговогоПериодаПриРегистрацииУплаты() Экспорт

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению КАК УплатаНДФЛНалоговымиАгентамиКРаспределению
	|ГДЕ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.Период,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.Регистратор КАК Регистратор,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.НомерСтроки КАК НомерСтроки,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.Активность,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.ВидДвижения,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.Организация,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.РегистрацияВНалоговомОргане,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.РеквизитыПлатежногоПоручения,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА УплатаНДФЛНалоговымиАгентамиКРаспределению.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА УплатаНДФЛНалоговымиАгентамиКРаспределению.МесяцНалоговогоПериода
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК МесяцНалоговогоПериода,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.Сумма
	|ИЗ
	|	РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению КАК УплатаНДФЛНалоговымиАгентамиКРаспределению
	|ГДЕ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределению.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("УплатаНДФЛНалоговымиАгентамиКРаспределению", Текст);
	
КонецПроцедуры

Процедура ПроставитьРегистрациюВДокументахВозвратаНДФЛ() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РегистрацииВНалоговомОргане.Ссылка) КАК Ссылка,
	|	РегистрацииВНалоговомОргане.Владелец
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацииВНалоговомОргане.Владелец
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РегистрацииВНалоговомОргане.Ссылка) > 1";
	РезультатСНесколькимиРегистрациями = Запрос.Выполнить();
	Если РезультатСНесколькимиРегистрациями.Пустой() Тогда
		Возврат	
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОрганизацииСНесколькимиРегистрациями", РезультатСНесколькимиРегистрациями.Выгрузить().ВыгрузитьКолонку("Владелец"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(ВозвратНДФЛСуммыВозврата.Ссылка.Месяц, МЕСЯЦ) КАК Период,
	|	ВозвратНДФЛСуммыВозврата.УдалитьОбособленноеПодразделение КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВТПодразделения
	|ИЗ
	|	Документ.ВозвратНДФЛ.СуммыВозврата КАК ВозвратНДФЛСуммыВозврата
	|ГДЕ
	|	ВозвратНДФЛСуммыВозврата.Ссылка.Организация В(&ОрганизацииСНесколькимиРегистрациями)";
	Запрос.Выполнить();
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ВсеЗаписи = Истина;
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		"ВТПодразделения", "СтруктурнаяЕдиница");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ИсторияРегистрацийВНалоговомОргане",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения);
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратНДФЛ.Организация,
	|	КОНЕЦПЕРИОДА(ВозвратНДФЛ.Месяц, МЕСЯЦ) КАК ДатаАктуальности
	|ИЗ
	|	Документ.ВозвратНДФЛ КАК ВозвратНДФЛ
	|ГДЕ
	|	ВозвратНДФЛ.Организация В(&ОрганизацииСНесколькимиРегистрациями)";
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	Для каждого СтрокаТЗ Из Результат Цикл
		СтрокаТЗ.РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(СтрокаТЗ.Организация,СтрокаТЗ. ДатаАктуальности)
	КонецЦикла;
	Запрос.УстановитьПараметр("ОрганизацииСРегистрациями", Результат);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОрганизацииСРегистрациями.Организация,
	|	ОрганизацииСРегистрациями.РегистрацияВНалоговомОргане,
	|	ОрганизацииСРегистрациями.ДатаАктуальности
	|ПОМЕСТИТЬ ВТОрганизацииСРегистрациями
	|ИЗ
	|	&ОрганизацииСРегистрациями КАК ОрганизацииСРегистрациями
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратНДФЛ.Ссылка КАК Ссылка,
	|	ВозвратНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	Документ.ВозвратНДФЛ.СуммыВозврата КАК ВозвратНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсторияРегистрацийВНалоговомОрганеСрезПоследних КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
	|		ПО ВозвратНДФЛ.УдалитьОбособленноеПодразделение = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
	|			И (КОНЕЦПЕРИОДА(ВозвратНДФЛ.Ссылка.Месяц, МЕСЯЦ) = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОрганизацииСРегистрациями КАК ОрганизацииСРегистрациями
	|		ПО ВозвратНДФЛ.Ссылка.Организация = ОрганизацииСРегистрациями.Организация
	|			И (КОНЕЦПЕРИОДА(ВозвратНДФЛ.Ссылка.Месяц, МЕСЯЦ) = ОрганизацииСРегистрациями.ДатаАктуальности)
	|ГДЕ
	|	ВозвратНДФЛ.Ссылка.Организация В(&ОрганизацииСНесколькимиРегистрациями)
	|	И ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане <> ОрганизацииСРегистрациями.РегистрацияВНалоговомОргане
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ВыборкаОбъектов = Результат.Выбрать();
		СтруктураПоиска = Новый Структура("НомерСтроки");
		
		Пока ВыборкаОбъектов.СледующийПоЗначениюПоля("Ссылка") Цикл
			
			Если Не ЗначениеЗаполнено(ВыборкаОбъектов.Ссылка) Тогда
				Продолжить;
			КонецЕсли;
			
			Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
			Объект.ОбменДанными.Загрузка = Истина;
			
			Пока ВыборкаОбъектов.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаОбъектов);
				СтрокиТЧ = Объект.СуммыВозврата.НайтиСтроки(СтруктураПоиска);
				СтрокаТЧ = Объект.СуммыВозврата.Найти(ВыборкаОбъектов.НомерСтроки,"НомерСтроки");
				Если СтрокаТЧ <> Неопределено Или СтрокиТЧ.Количество() > 0 Тогда
					Если СтрокаТЧ = Неопределено Тогда
						СтрокаТЧ = СтрокиТЧ[0]
					КонецЕсли;
					СтрокаТЧ.РегистрацияВНалоговомОргане = ВыборкаОбъектов.РегистрацияВНалоговомОргане;
				КонецЕсли;
			КонецЦикла;
			
			Если Объект.Модифицированность() Тогда
				Объект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаменитьВычет318() Экспорт

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИмущественныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|ГДЕ
	|	ИмущественныеВычетыНДФЛ.Год > 2014
	|	И ИмущественныеВычетыНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.Период,
	|	ИмущественныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ИмущественныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ИмущественныеВычетыНДФЛ.Активность,
	|	ИмущественныеВычетыНДФЛ.ВидДвижения,
	|	ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычетыНДФЛ.Год > 2014
	|				И ИмущественныеВычетыНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	|		ИНАЧЕ ИмущественныеВычетыНДФЛ.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	ИмущественныеВычетыНДФЛ.Год,
	|	ИмущественныеВычетыНДФЛ.Организация,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	ИмущественныеВычетыНДФЛ.УдалитьОрганизация,
	|	ИмущественныеВычетыНДФЛ.Подразделение,
	|	ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ИмущественныеВычетыНДФЛ.ВычетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|ГДЕ
	|	ИмущественныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";

	ОбработатьНаборыЗаписейРегистраНакопления("ИмущественныеВычетыНДФЛ", Текст);
	
КонецПроцедуры

Процедура ЗаполнитьМесяцНалоговогоПериодаВозвратаПерерасчетаНДФЛ() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратНДФЛСуммыВозврата.Ссылка,
	|	ВозвратНДФЛСуммыВозврата.Ссылка.Месяц
	|ИЗ
	|	Документ.ВозвратНДФЛ.СуммыВозврата КАК ВозвратНДФЛСуммыВозврата
	|ГДЕ
	|	ВозвратНДФЛСуммыВозврата.МесяцНалоговогоПериода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ВозвратНДФЛСуммыВозврата.НалоговыйПериод <> 0";
	
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	Пока ВыборкаОбъектов.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаОбъектов.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		
		Для каждого СтрокаТЧ Из Объект.СуммыВозврата Цикл
			Если Не ЗначениеЗаполнено(СтрокаТЧ.МесяцНалоговогоПериода) И ЗначениеЗаполнено(СтрокаТЧ.НалоговыйПериод) Тогда
				СтрокаТЧ.МесяцНалоговогоПериода = ?(СтрокаТЧ.НалоговыйПериод < Год(ВыборкаОбъектов.Месяц), ДобавитьМесяц(НачалоГода(ВыборкаОбъектов.Месяц), (СтрокаТЧ.НалоговыйПериод - Год(ВыборкаОбъектов.Месяц)) * 12 + 11), ВыборкаОбъектов.Месяц);
			КонецЕсли;
		КонецЦикла;
		
		Если Объект.Модифицированность() Тогда
			Объект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПерерасчетНДФЛСотрудники.Ссылка,
	|	ПерерасчетНДФЛСотрудники.Ссылка.МесяцПерерасчета,
	|	ПерерасчетНДФЛСотрудники.Ссылка.НалоговыйПериод
	|ИЗ
	|	Документ.ПерерасчетНДФЛ.Сотрудники КАК ПерерасчетНДФЛСотрудники
	|ГДЕ
	|	ПерерасчетНДФЛСотрудники.МесяцНалоговогоПериода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ПерерасчетНДФЛСотрудники.Ссылка.НалоговыйПериод <> 0";
	
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	Пока ВыборкаОбъектов.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаОбъектов.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		
		МесяцНалоговогоПериода = Мин(Дата(ВыборкаОбъектов.НалоговыйПериод, 12, 1), НачалоМесяца(ВыборкаОбъектов.МесяцПерерасчета));
		Для каждого СтрокаТЧ Из Объект.Сотрудники Цикл
			Если Не ЗначениеЗаполнено(СтрокаТЧ.МесяцНалоговогоПериода) Тогда
				СтрокаТЧ.МесяцНалоговогоПериода = МесяцНалоговогоПериода
			КонецЕсли;
		КонецЦикла;
		
		Если Объект.Модифицированность() Тогда
			Объект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтавкуДоходаВ2НДФЛ() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправкаНДФЛСведенияОДоходах.Ссылка
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.СправкаНДФЛ.СведенияОДоходах КАК СправкаНДФЛСведенияОДоходах
	|ГДЕ
	|	СправкаНДФЛСведенияОДоходах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ссылка
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СведенияОДоходах КАК СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкаНДФЛСведенияОДоходах.Ссылка,
	|	СправкаНДФЛСведенияОДоходах.НомерСтроки,
	|	СправкаНДФЛСведенияОДоходах.КодДохода,
	|	СправкаНДФЛСведенияОДоходах.Ссылка.НалоговыйПериод,
	|	СправкаНДФЛСведенияОДоходах.Ссылка.СтатусНалогоплательщика,
	|	СправкаНДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента
	|ИЗ
	|	Документ.СправкаНДФЛ.СведенияОДоходах КАК СправкаНДФЛСведенияОДоходах
	|ГДЕ
	|	СправкаНДФЛСведенияОДоходах.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыКОбработке.Ссылка
	|			ИЗ
	|				ВТДокументыКОбработке КАК ДокументыКОбработке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.НомерСтроки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.КодДохода,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ссылка.НалоговыйПериод,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СтатусНалогоплательщика,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СведенияОДоходах КАК СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
	|		ПО СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ссылка = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка
	|			И СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Сотрудник = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник
	|			И СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.НомерСправки = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыКОбработке.Ссылка
	|			ИЗ
	|				ВТДокументыКОбработке КАК ДокументыКОбработке)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОбработке.Ссылка
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке";
	
	Результаты = Запрос.ВыполнитьПакет();
	СведенияДляОпределенияСтавки = Результаты[1].Выгрузить();
	СведенияДляОпределенияСтавки.Индексы.Добавить("Ссылка,НомерСтроки");
	СтруктураПоиска = Новый Структура("Ссылка,НомерСтроки");
	Выборка = Результаты[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		
		Для каждого СтрокаТЧ Из Объект.СведенияОДоходах Цикл
			Если Не ЗначениеЗаполнено(СтрокаТЧ.Ставка) Тогда
				СтруктураПоиска.Ссылка = Выборка.Ссылка;
				СтруктураПоиска.НомерСтроки = СтрокаТЧ.НомерСтроки;
				СтрокиСведенийДляОпределенияСтавки = СведенияДляОпределенияСтавки.НайтиСтроки(СтруктураПоиска);
				Если СтрокиСведенийДляОпределенияСтавки.Количество() > 0 Тогда
					СтрокаСведений = СтрокиСведенийДляОпределенияСтавки[0];
					СтрокаТЧ.Ставка = СтавкаНДФЛ(СтрокаСведений.СтавкаНалогообложенияРезидента, СтрокаСведений.КодДохода, СтрокаСведений.СтатусНалогоплательщика, СтрокаСведений.НалоговыйПериод);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Объект.Модифицированность() Тогда
			Объект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ПроставитьВариантУдержанияПоВозвратамНДФЛ() Экспорт

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратНДФЛ.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратНДФЛ КАК ВозвратНДФЛ
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = ВозвратНДФЛ.Ссылка
	|ГДЕ
	|	ВозвратНДФЛ.Ссылка ЕСТЬ НЕ NULL 
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания <> ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьКодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом) ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст)
	
КонецПроцедуры

Процедура ПеренестиУведомленияВТаблицу() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкаНДФЛ.Ссылка,
	|	СправкаНДФЛ.УдалитьДатаУведомления КАК ДатаУведомления,
	|	СправкаНДФЛ.УдалитьНомерУведомления КАК НомерУведомления,
	|	СправкаНДФЛ.УдалитьКодНалоговогоОрганаУведомления КАК КодНалоговогоОрганаУведомления,
	|	ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Имущественные) КАК ГруппаВычета
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаНДФЛ.УведомленияНОоПравеНаВычеты КАК СправкаНДФЛУведомленияНОоПравеНаВычеты
	|		ПО СправкаНДФЛ.Ссылка = СправкаНДФЛУведомленияНОоПравеНаВычеты.Ссылка
	|ГДЕ
	|	(СправкаНДФЛ.УдалитьДатаУведомления <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ СправкаНДФЛ.УдалитьНомерУведомления <> """"
	|			ИЛИ СправкаНДФЛ.УдалитьКодНалоговогоОрганаУведомления <> """")
	|	И СправкаНДФЛУведомленияНОоПравеНаВычеты.НомерСтроки ЕСТЬ NULL ";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		ЗаполнитьЗначенияСвойств(Объект.УведомленияНОоПравеНаВычеты.Добавить(), Выборка);
		Объект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка КАК Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник КАК Сотрудник,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдалитьДатаУведомления КАК ДатаУведомления,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдалитьНомерУведомления КАК НомерУведомления,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдалитьКодНалоговогоОрганаУведомления КАК КодНалоговогоОрганаУведомления,
	|	ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Имущественные) КАК ГруппаВычета
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.УведомленияНОоПравеНаВычеты КАК СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты
	|		ПО СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка = СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.Ссылка
	|			И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник = СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.Сотрудник
	|ГДЕ
	|	(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдалитьДатаУведомления <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдалитьНомерУведомления <> """"
	|			ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдалитьКодНалоговогоОрганаУведомления <> """")
	|	И СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.НомерСтроки ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Сотрудник";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Объект.УведомленияНОоПравеНаВычеты.Добавить(), Выборка);
		КонецЦикла;
		Если Объект.НалоговыйПериод = 2015 И Не Объект.НеВключатьДоходыПоЦеннымБумагам Тогда
			Объект.НеВключатьДоходыПоЦеннымБумагам = Истина
		КонецЕсли;
		
		Объект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;

КонецПроцедуры

Процедура ВзвестиФлажокНеВключатьДоходыПоЦеннымБумагамВ2015году() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.НалоговыйПериод = 2015
	|	И НЕ СправкиНДФЛДляПередачиВНалоговыйОрган.НеВключатьДоходыПоЦеннымБумагам";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.НеВключатьДоходыПоЦеннымБумагам = Истина;
		Объект.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИсправитьДатыПолученияДоходаПоОперациям() Экспорт

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	МАКСИМУМ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период) КАК Период,
	|	МАКСИМУМ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация) КАК ГоловнаяОрганизация,
	|	МАКСИМУМ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация) КАК Организация
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОперацияНалоговогоУчетаПоНДФЛ.СведенияОДоходах КАК ОперацияНалоговогоУчетаПоНДФЛСведенияОДоходах
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = ОперацияНалоговогоУчетаПоНДФЛСведенияОДоходах.Ссылка
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ОперацияНалоговогоУчетаПоНДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОперацияНалоговогоУчетаПоНДФЛСведенияОДоходах.СуммаНалогаИсчисленная <> 0
	|	И ОперацияНалоговогоУчетаПоНДФЛСведенияОДоходах.ДатаПолученияДохода >= ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	МАКСИМУМ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТПодразделенияИРегистрации
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьКодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Ссылка,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки,
	|	Регистраторы.Период,
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Регистраторы.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Ссылка.Сотрудник,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода.СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДатаПолученияДохода < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДатаПолученияДохода, МЕСЯЦ)
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДатаПолученияДохода
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПодразделенияИРегистрации.РегистрацияВНалоговомОргане,
	|	Регистраторы.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаНалогаИсчисленная,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		КОГДА ВидыДоходовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2010Года В (""1110"", ""1120"", ""1530"", ""1531"", ""1532"", ""1533"", ""1535"", ""1536"", ""1537"", ""1538"", ""1539"", ""1541"", ""1540"", ""1543"", ""2640"", ""2641"", ""2800"")
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ОперацияНалоговогоУчетаПоНДФЛ.СведенияОДоходах КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Ссылка = Регистраторы.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПодразделенияИРегистрации КАК ПодразделенияИРегистрации
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Ссылка = ПодразделенияИРегистрации.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение = ПодразделенияИРегистрации.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода = ВидыДоходовНДФЛ.Ссылка
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаНалогаИсчисленная <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";

	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст)
	
КонецПроцедуры

Процедура ПроставитьДатыКрайнегоСрокаУплаты() Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы2016Года
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0) И ДАТАВРЕМЯ(2017, 1, 1, 0, 0, 0)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДанныеОНалогах.Период < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		КОГДА ДанныеОНалогах.ВариантУдержания <> ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		КОГДА ДанныеОНалогах.СрокПеречисления = ЗНАЧЕНИЕ(Перечисление.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные)
	|			ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДанныеОНалогах.Период, МЕСЯЦ), ДЕНЬ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ДанныеОНалогах.Период, ДЕНЬ, 1), ДЕНЬ)
	|	КОНЕЦ КАК СрокУплаты,
	|	ДанныеОНалогах.Регистратор
	|ПОМЕСТИТЬ ВТДанныеКОбработке
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК ДанныеОНалогах
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДанныеОНалогах.Период < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			КОГДА ДанныеОНалогах.ВариантУдержания <> ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			КОГДА ДанныеОНалогах.СрокПеречисления = ЗНАЧЕНИЕ(Перечисление.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные)
	|				ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДанныеОНалогах.Период, МЕСЯЦ), ДЕНЬ)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ДанныеОНалогах.Период, ДЕНЬ, 1), ДЕНЬ)
	|		КОНЕЦ <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ДанныеОНалогах.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы2016Года.Регистратор
	|			ИЗ
	|				ВТРегистраторы2016Года КАК Регистраторы2016Года)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКОбработке.СрокУплаты
	|ИЗ
	|	ВТДанныеКОбработке КАК ДанныеКОбработке";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	КалендарьРФ = КалендарныеГрафики.ПроизводственныйКалендарьРоссийскойФедерации();
	Если ЗначениеЗаполнено(КалендарьРФ) Тогда
		ДатыУдержанияНалога = Результат.Выгрузить().ВыгрузитьКолонку("СрокУплаты");
		ВсегоДат = ДатыУдержанияНалога.Количество();
		Если ВсегоДат > 250 Тогда
			РабочиеДни = Новый Соответствие;
			ВсегоПорций = Цел(ВсегоДат / 250);
			Для СчетчикПорций = 1 По ВсегоПорций Цикл
				Даты = Новый Массив;
				Для СчетчикДат = 0 По 249 Цикл
					Даты.Добавить(ДатыУдержанияНалога[(СчетчикПорций - 1) * 250 + СчетчикДат])
				КонецЦикла;
				ФрагментРабочихДней = КалендарныеГрафики.ДатыБлижайшихРабочихДней(КалендарьРФ, Даты, Ложь, Ложь, Истина);
				ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(РабочиеДни, ФрагментРабочихДней, Истина) 
			КонецЦикла;
			ОсталосьДат = ВсегоДат % 250 - 1;
			Даты = Новый Массив;
			Для СчетчикДат = 0 По ОсталосьДат Цикл
				Даты.Добавить(ДатыУдержанияНалога[СчетчикПорций * 250 + СчетчикДат])
			КонецЦикла;
			ФрагментРабочихДней = КалендарныеГрафики.ДатыБлижайшихРабочихДней(КалендарьРФ, Даты, Ложь, Ложь, Истина);
			ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(РабочиеДни, ФрагментРабочихДней, Истина) 
		Иначе
			РабочиеДни = КалендарныеГрафики.ДатыБлижайшихРабочихДней(КалендарьРФ, ДатыУдержанияНалога, Ложь, Ложь, Истина);
		КонецЕсли;
	Иначе
		РабочиеДни = Новый Соответствие;
	КонецЕсли;
	
	ТаблицаРабочиеДни = Новый ТаблицаЗначений;
	ТаблицаРабочиеДни.Колонки.Добавить("СрокУплаты", Новый ОписаниеТипов("Дата"));
	ТаблицаРабочиеДни.Колонки.Добавить("КрайнийСрокУплаты", Новый ОписаниеТипов("Дата"));
	Для каждого Элемент Из РабочиеДни Цикл
		НоваяСтрока = ТаблицаРабочиеДни.Добавить();
		НоваяСтрока.СрокУплаты = Элемент.Ключ;
		НоваяСтрока.КрайнийСрокУплаты = Элемент.Значение;
	КонецЦикла;
	Запрос.УстановитьПараметр("РабочиеДни", ТаблицаРабочиеДни);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РабочиеДни.СрокУплаты,
	|	РабочиеДни.КрайнийСрокУплаты
	|ПОМЕСТИТЬ ВТРабочиеДни
	|ИЗ
	|	&РабочиеДни КАК РабочиеДни";
	Запрос.Выполнить();
	
	Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочиеДни КАК РабочиеДни
	|		ПО (ВЫБОР
	|				КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|					ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания <> ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|					ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления = ЗНАЧЕНИЕ(Перечисление.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные)
	|					ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, МЕСЯЦ), ДЕНЬ)
	|				ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, ДЕНЬ, 1), ДЕНЬ)
	|			КОНЕЦ = РабочиеДни.СрокУплаты)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы2016Года.Регистратор
	|			ИЗ
	|				ВТДанныеКОбработке КАК Регистраторы2016Года)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты <> ЕСТЬNULL(РабочиеДни.КрайнийСрокУплаты, ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания <> ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты
	|		ИНАЧЕ ЕСТЬNULL(РабочиеДни.КрайнийСрокУплаты, ВЫБОР
	|					КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты
	|					КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления = ЗНАЧЕНИЕ(Перечисление.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные)
	|						ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, МЕСЯЦ), ДЕНЬ)
	|					ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, ДЕНЬ, 1), ДЕНЬ)
	|				КОНЕЦ)
	|	КОНЕЦ КАК КрайнийСрокУплаты
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочиеДни КАК РабочиеДни
	|		ПО (ВЫБОР
	|				КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|					ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания <> ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|					ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления = ЗНАЧЕНИЕ(Перечисление.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные)
	|					ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, МЕСЯЦ), ДЕНЬ)
	|				ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, ДЕНЬ, 1), ДЕНЬ)
	|			КОНЕЦ = РабочиеДни.СрокУплаты)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц)
	
КонецПроцедуры

Процедура ПроставитьОснованияПоОперациям() Экспорт

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияНалоговогоУчетаПоНДФЛ КАК ОперацияНалоговогоУчетаПоНДФЛ
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = ОперацияНалоговогоУчетаПоНДФЛ.Ссылка
	|ГДЕ
	|	ОперацияНалоговогоУчетаПоНДФЛ.Ссылка ЕСТЬ НЕ NULL 
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьКодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = НЕОПРЕДЕЛЕНО
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст)

КонецПроцедуры

Процедура ЗаполнитьДатыРегистрацииИмущВычета() Экспорт

	Текст = 
	"ВЫБРАТЬ
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК НДФЛИмущественныеВычетыФизлиц
	|ГДЕ
	|	НДФЛИмущественныеВычетыФизлиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НДФЛИмущественныеВычетыФизлиц.Год >= 2016
	|	И ВЫБОР
	|			КОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор ССЫЛКА Документ.ОперацияНалоговогоУчетаПоНДФЛ
	|				ТОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор.ДатаОперации
	|			КОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор.МесяцНачисления ЕСТЬ НЕ NULL 
	|				ТОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор.МесяцНачисления
	|			ИНАЧЕ НДФЛИмущественныеВычетыФизлиц.Регистратор.ПериодРегистрации
	|		КОНЕЦ ЕСТЬ НЕ NULL 
	|	И НДФЛИмущественныеВычетыФизлиц.МесяцРегистрации = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛИмущественныеВычетыФизлиц.Период,
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор КАК Регистратор,
	|	НДФЛИмущественныеВычетыФизлиц.НомерСтроки КАК НомерСтроки,
	|	НДФЛИмущественныеВычетыФизлиц.Активность,
	|	НДФЛИмущественныеВычетыФизлиц.ВидДвижения,
	|	НДФЛИмущественныеВычетыФизлиц.ФизическоеЛицо,
	|	НДФЛИмущественныеВычетыФизлиц.Организация,
	|	НДФЛИмущественныеВычетыФизлиц.КодВычета,
	|	НДФЛИмущественныеВычетыФизлиц.Год,
	|	НДФЛИмущественныеВычетыФизлиц.Сумма,
	|	НДФЛИмущественныеВычетыФизлиц.ГоловнаяОрганизация,
	|	НДФЛИмущественныеВычетыФизлиц.ВычетМежрасчетногоПериода,
	|	НДФЛИмущественныеВычетыФизлиц.РегистрацияВНалоговомОргане,
	|	НДФЛИмущественныеВычетыФизлиц.Подразделение,
	|	ВЫБОР
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.МесяцРегистрации
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.МесяцРегистрации <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.МесяцРегистрации
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор ССЫЛКА Документ.ОперацияНалоговогоУчетаПоНДФЛ
	|			ТОГДА НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Регистратор.ДатаОперации, МЕСЯЦ)
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор.МесяцНачисления ЕСТЬ НЕ NULL 
	|			ТОГДА НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Регистратор.МесяцНачисления, МЕСЯЦ)
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор.ПериодРегистрации ЕСТЬ НЕ NULL 
	|			ТОГДА НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Регистратор.ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК МесяцРегистрации
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК НДФЛИмущественныеВычетыФизлиц
	|ГДЕ
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("ИмущественныеВычетыНДФЛ", Текст)

КонецПроцедуры

Процедура ЗаполнитьКППОтправкиВ2НДФЛ(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка КАК Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.РегистрацияВНалоговомОргане.КПП КАК КПП
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.КППОтправки = """"
	|	И ЕСТЬNULL(СправкиНДФЛДляПередачиВНалоговыйОрган.РегистрацияВНалоговомОргане.КПП, """") <> """"
	|	И НЕ СправкиНДФЛДляПередачиВНалоговыйОрган.ПометкаУдаления";
				   
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	Иначе
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган", "Ссылка", Выборка.Ссылка) Тогда 
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.КППОтправки = Выборка.КПП;
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать();
			
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДатыДляПроверкиЗапретаРедактированияИмущВычета(ПараметрыОбновления = Неопределено) Экспорт

	Текст = 
	"ВЫБРАТЬ
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК НДФЛИмущественныеВычетыФизлиц
	|ГДЕ
	|	НДФЛИмущественныеВычетыФизлиц.Год >= 2015
	|	И НДФЛИмущественныеВычетыФизлиц.МесяцРегистрации = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛИмущественныеВычетыФизлиц.Период КАК Период,
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор КАК Регистратор,
	|	НДФЛИмущественныеВычетыФизлиц.НомерСтроки КАК НомерСтроки,
	|	НДФЛИмущественныеВычетыФизлиц.Активность КАК Активность,
	|	НДФЛИмущественныеВычетыФизлиц.ВидДвижения КАК ВидДвижения,
	|	НДФЛИмущественныеВычетыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛИмущественныеВычетыФизлиц.Организация КАК Организация,
	|	НДФЛИмущественныеВычетыФизлиц.КодВычета КАК КодВычета,
	|	НДФЛИмущественныеВычетыФизлиц.Год КАК Год,
	|	НДФЛИмущественныеВычетыФизлиц.Сумма КАК Сумма,
	|	НДФЛИмущественныеВычетыФизлиц.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НДФЛИмущественныеВычетыФизлиц.ВычетМежрасчетногоПериода КАК ВычетМежрасчетногоПериода,
	|	НДФЛИмущественныеВычетыФизлиц.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НДФЛИмущественныеВычетыФизлиц.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.МесяцРегистрации <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.МесяцРегистрации
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Регистратор.Дата, МЕСЯЦ)
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор ССЫЛКА Документ.ОперацияНалоговогоУчетаПоНДФЛ
	|			ТОГДА НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Регистратор.ДатаОперации, МЕСЯЦ)
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор.МесяцНачисления ЕСТЬ НЕ NULL 
	|			ТОГДА НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Регистратор.МесяцНачисления, МЕСЯЦ)
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Регистратор.ПериодРегистрации ЕСТЬ НЕ NULL 
	|			ТОГДА НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Регистратор.ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Регистратор.Дата, МЕСЯЦ)
	|	КОНЕЦ КАК МесяцРегистрации
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК НДФЛИмущественныеВычетыФизлиц
	|ГДЕ
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("ИмущественныеВычетыНДФЛ", Текст, , , ПараметрыОбновления)

КонецПроцедуры

Процедура УточнитьДатуСписанияАвансовогоПлатежа(ПараметрыОбновления = Неопределено) Экспорт

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АвансовыеПлатежи.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА АвансовыеПлатежи.Регистратор.МесяцНачисления ЕСТЬ НЕ NULL 
	|			ТОГДА АвансовыеПлатежи.Регистратор.МесяцНачисления
	|		КОГДА АвансовыеПлатежи.Регистратор.ПериодРегистрации ЕСТЬ НЕ NULL 
	|			ТОГДА АвансовыеПлатежи.Регистратор.ПериодРегистрации
	|		ИНАЧЕ ДАТАВРЕМЯ(3000, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ПериодРегистрации
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ КАК АвансовыеПлатежи
	|ГДЕ
	|	АвансовыеПлатежи.Год >= 2015
	|	И АвансовыеПлатежи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НАЧАЛОПЕРИОДА(АвансовыеПлатежи.Период, МЕСЯЦ) > ВЫБОР
	|			КОГДА АвансовыеПлатежи.Регистратор.МесяцНачисления ЕСТЬ НЕ NULL 
	|				ТОГДА АвансовыеПлатежи.Регистратор.МесяцНачисления
	|			КОГДА АвансовыеПлатежи.Регистратор.ПериодРегистрации ЕСТЬ НЕ NULL 
	|				ТОГДА АвансовыеПлатежи.Регистратор.ПериодРегистрации
	|			ИНАЧЕ ДАТАВРЕМЯ(3000, 1, 1, 0, 0, 0)
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА АвансовыеПлатежиИностранцевПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА АвансовыеПлатежиИностранцевПоНДФЛ.Период
	|		КОГДА НАЧАЛОПЕРИОДА(АвансовыеПлатежиИностранцевПоНДФЛ.Период, МЕСЯЦ) > Регистраторы.ПериодРегистрации
	|			ТОГДА КОНЕЦПЕРИОДА(Регистраторы.ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ АвансовыеПлатежиИностранцевПоНДФЛ.Период
	|	КОНЕЦ КАК Период,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Регистратор КАК Регистратор,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Активность КАК Активность,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ВидДвижения КАК ВидДвижения,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Организация КАК Организация,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Год КАК Год,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Сумма КАК Сумма,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Подразделение КАК Подразделение
	|ИЗ
	|	РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ КАК АвансовыеПлатежиИностранцевПоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО АвансовыеПлатежиИностранцевПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("АвансовыеПлатежиИностранцевПоНДФЛ", Текст, , , ПараметрыОбновления)

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииДляФормированияСправок2НДФЛ

Функция ВыводитьФорму2НДФЛ2018Года(НалоговыйПериод, ДатаДокумента) Экспорт 

	Возврат НалоговыйПериод >= 2017 И ДатаДокумента >= '20180212'

КонецФункции 

Функция ОКАТО_ОКТМО_КППИзРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане)
	
	ДанныеРегистрации = Новый Структура("ОКАТО, КПП, ОКТМО", "", "", "");
	
	Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВНалоговомОргане, "КодПоОКАТО, КодПоОКТМО, КПП");
		ДанныеРегистрации.ОКАТО	= Реквизиты.КодПоОКАТО;
		ДанныеРегистрации.КПП	= Реквизиты.КПП;
		ДанныеРегистрации.ОКТМО	= Реквизиты.КодПоОКТМО;
	КонецЕсли;
	
	Возврат ДанныеРегистрации;
	
КонецФункции	

Процедура СправкиНДФЛПроверитьДанныеНалоговогоАгента(Объект, ДанныеНалоговогоАгента, СпособФормирования, Отказ) Экспорт
	Если ДанныеНалоговогоАгента.ЭтоЮрЛицо Тогда
		ТекстСообщения = "";
		// Сведения об отправителе		
		Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ДанныеНалоговогоАгента.ИННорг, Истина, ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДанныеНалоговогоАгента.Организация, "ИНН", "Объект", Отказ);
		КонецЕсли; 
		
		Если СокрЛП(ДанныеНалоговогоАгента.НазваниеОрганизации) = "" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Для организации должно быть указано сокращенное наименование организации.'"), 
				Объект.Ссылка, 
				"Организация", "Объект", Отказ);
		КонецЕсли;	
	Иначе		
		// Проверим данные отправителя.
		// Для предпринимателя 12 символов ИНН.
		ТекстСообщения = "";
		
		Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ДанныеНалоговогоАгента.ИННорг, Ложь, ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДанныеНалоговогоАгента.Организация, "ИНН", "Объект", Отказ);
		КонецЕсли;
		
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(
					ДанныеНалоговогоАгента.Фамилия + ДанныеНалоговогоАгента.Имя + ДанныеНалоговогоАгента.Отчество, 
					Ложь, 
					"-. 0123456789") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для физического лица-работодателя Фамилия, Имя, Отчество должно быть введены русскими буквами.'"), 
				ДанныеНалоговогоАгента.Организация, 
				"ИндивидуальныйПредприниматель",
				"Объект", 
				Отказ);
		КонецЕсли;
		Если ПустаяСтрока(ДанныеНалоговогоАгента.Фамилия) Или ПустаяСтрока(ДанныеНалоговогоАгента.Имя) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Для физического лица-работодателя должны быть указаны, как минимум, фамилия и имя.'"), 
				Объект.Ссылка, 
				"Организация",
				"Объект", 
				Отказ);
		КонецЕсли;		
	КонецЕсли;
	
	Если СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.ВРазрезеКодовОКАТО Тогда
		Если ЗначениеЗаполнено(ДанныеНалоговогоАгента.КодНалоговогоОргана) 
			И СтрДлина(СокрЛП(ДанныеНалоговогоАгента.КодНалоговогоОргана)) <> 4 Тогда	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неверно указан код налогового органа.'"), Объект.Ссылка, "КодИФНС",, Отказ);
		КонецЕсли;
		
		КлючДанных = Объект.Ссылка;
		Поле = "РегистрацияВНалоговомОргане";
		
		Если УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(Объект) Тогда
			Если НЕ ЗначениеЗаполнено(ДанныеНалоговогоАгента.ОКТМО) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Не указан код по ОКТМО, по которому формируются сведения.'"), 
					КлючДанных, 
					"РегистрацияВНалоговомОргане",
					"Объект", 
					Отказ);		
			ИначеЕсли СтрДлина(СокрЛП(ДанныеНалоговогоАгента.ОКТМО)) <> 11 
				И СтрДлина(СокрЛП(ДанныеНалоговогоАгента.ОКТМО)) <> 8 Тогда	
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Неверно указан код по ОКТМО, по которому формируются сведения.'"),
					КлючДанных, 
					"РегистрацияВНалоговомОргане",
					"Объект", 
					Отказ);		
			КонецЕсли;
		Иначе	
			Если НЕ ЗначениеЗаполнено(ДанныеНалоговогоАгента.ОКАТО) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Не указан код по ОКАТО, по которому формируются сведения.'"), 
					КлючДанных, 
					"РегистрацияВНалоговомОргане",
					"Объект", 
					Отказ);		
			ИначеЕсли СтрДлина(СокрЛП(ДанныеНалоговогоАгента.ОКАТО)) <> 11 Тогда	
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Неверно указан код по ОКАТО, по которому формируются сведения.'"),
					КлючДанных, 
					"РегистрацияВНалоговомОргане",
					"Объект", 
					Отказ);		
			КонецЕсли;
		КонецЕсли;		
		
		Если ДанныеНалоговогоАгента.ЭтоЮрЛицо И Не ЗначениеЗаполнено(ДанныеНалоговогоАгента.КПП) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не указан КПП, по которому формируются сведения.'"), 
				КлючДанных, 
				"РегистрацияВНалоговомОргане",
				"Объект", 
				Отказ);		
		КонецЕсли;
	КонецЕсли;		

КонецПроцедуры	

Функция ПоляИтоговСправки2НДФЛ(ДляНалогаНаПрибыль = Ложь) Экспорт

	ПоляИтогов = Новый Массив;
	ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке13");
	ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке13");
	ПоляИтогов.Добавить("ИсчисленоПоСтавке13");
	ПоляИтогов.Добавить("УдержаноПоСтавке13");
	ПоляИтогов.Добавить("ЗадолженностьПоСтавке13");
	ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке13");
	ПоляИтогов.Добавить("ПеречисленоПоСтавке13");
	ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке30");
	ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке30");
	ПоляИтогов.Добавить("ИсчисленоПоСтавке30");
	ПоляИтогов.Добавить("УдержаноПоСтавке30");
	ПоляИтогов.Добавить("ЗадолженностьПоСтавке30");
	ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке30");
	ПоляИтогов.Добавить("ПеречисленоПоСтавке30");
	ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке9");
	ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке9");
	ПоляИтогов.Добавить("ИсчисленоПоСтавке9");
	ПоляИтогов.Добавить("УдержаноПоСтавке9");
	ПоляИтогов.Добавить("ЗадолженностьПоСтавке9");
	ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке9");
	ПоляИтогов.Добавить("ПеречисленоПоСтавке9");
	ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке15");
	ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке15");
	ПоляИтогов.Добавить("ИсчисленоПоСтавке15");
	ПоляИтогов.Добавить("УдержаноПоСтавке15");
	ПоляИтогов.Добавить("ЗадолженностьПоСтавке15");
	ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке15");
	ПоляИтогов.Добавить("ПеречисленоПоСтавке15");
	ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке35");
	ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке35");
	ПоляИтогов.Добавить("ИсчисленоПоСтавке35");
	ПоляИтогов.Добавить("УдержаноПоСтавке35");
	ПоляИтогов.Добавить("ЗадолженностьПоСтавке35");
	ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке35");
	ПоляИтогов.Добавить("ПеречисленоПоСтавке35");
	Если ПолучитьФункциональнуюОпцию("ИспользуютсяСтавкиНДФЛМеждународныхДоговоров") Тогда
		ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке3");
		ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке3");
		ПоляИтогов.Добавить("ИсчисленоПоСтавке3");
		ПоляИтогов.Добавить("УдержаноПоСтавке3");
		ПоляИтогов.Добавить("ЗадолженностьПоСтавке3");
		ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке3");
		ПоляИтогов.Добавить("ПеречисленоПоСтавке3");
		ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке6");
		ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке6");
		ПоляИтогов.Добавить("ИсчисленоПоСтавке6");
		ПоляИтогов.Добавить("УдержаноПоСтавке6");
		ПоляИтогов.Добавить("ЗадолженностьПоСтавке6");
		ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке6");
		ПоляИтогов.Добавить("ПеречисленоПоСтавке6");
		ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке7");
		ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке7");
		ПоляИтогов.Добавить("ИсчисленоПоСтавке7");
		ПоляИтогов.Добавить("УдержаноПоСтавке7");
		ПоляИтогов.Добавить("ЗадолженностьПоСтавке7");
		ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке7");
		ПоляИтогов.Добавить("ПеречисленоПоСтавке7");
		ПоляИтогов.Добавить("ОбщаяСуммаДоходаПоСтавке12");
		ПоляИтогов.Добавить("ОблагаемаяСуммаДоходаПоСтавке12");
		ПоляИтогов.Добавить("ИсчисленоПоСтавке12");
		ПоляИтогов.Добавить("УдержаноПоСтавке12");
		ПоляИтогов.Добавить("ЗадолженностьПоСтавке12");
		ПоляИтогов.Добавить("ИзлишнеУдержаноПоСтавке12");
		ПоляИтогов.Добавить("ПеречисленоПоСтавке12");
	КонецЕсли;
	
	Если Не ДляНалогаНаПрибыль Тогда
		Для каждого ИмяПоля Из ПоляЗачтеноАвансовыхПлатежей() Цикл
			ПоляИтогов.Добавить(ИмяПоля)
		КонецЦикла;
	КонецЕсли;
		
	Возврат ПоляИтогов

КонецФункции 

Функция ПоляЗачтеноАвансовыхПлатежей() Экспорт

	ПоляИтогов = Новый Массив;
	
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке13");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке30");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке9");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке15");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке35");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке5");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке10");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке3");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке6");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке7");
	ПоляИтогов.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке12");
	
	Возврат ПоляИтогов
	
КонецФункции 

Процедура СправкиНДФЛПроверитьДанныеОДоходахНалогахВычетах(Ссылка, Дата, ДанныеСправки, ПутьКДаннымСотрудника, Доходы, Вычеты, СоответствиеСтавокДоходов, НачалоСообщения, Отказ, СводнаяСправка = Ложь, ПроверятьСоответствиеДоходовСтавке = Ложь, ДляНалогаНаПрибыль = Ложь, УведомленияНОоПравеНаВычеты = Неопределено, НомерКорректировки = 0) Экспорт
	
	ПутьКДаннымСотрудникаДляОшибок = ?(ПустаяСтрока(ПутьКДаннымСотрудника), "", ПутьКДаннымСотрудника + ".");
	
	Если НомерКорректировки = 99 Тогда
		
		// в аннулирующей справке разделы 3, 4 и 5 пусты
		
		Если Доходы.Количество() > 0 Тогда
			Для Каждого СтрокаДоходы Из Доходы Цикл
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 обнаружены сведения о доходах в аннулирующей справке'"), НачалоСообщения);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + "СведенияОДоходах[" + Формат(СтрокаДоходы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].КодДохода",,Отказ);	
				Прервать;
			КонецЦикла;
		КонецЕсли;
		
		Если Вычеты.Количество() > 0 Тогда
			Для Каждого СтрокаВычеты Из Вычеты Цикл
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 обнаружены сведения о вычетах в аннулирующей справке'"), НачалоСообщения);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + "СведенияОВычетах[" + Формат(СтрокаВычеты.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].КодВычета",,Отказ);	
				Прервать;
			КонецЦикла;
		КонецЕсли;
		
		ЕстьИтоговыеДанные = Ложь;
		ПоляИтоговСправки = ПоляИтоговСправки2НДФЛ(ДляНалогаНаПрибыль);
		Для каждого ИмяПоля Из ПоляИтоговСправки Цикл
			ЕстьИтоговыеДанные = ДанныеСправки[ИмяПоля] <> 0;
			Если ЕстьИтоговыеДанные Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьИтоговыеДанные Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 обнаружены сведения о налогах в аннулирующей справке'"), НачалоСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + ИмяПоля,,Отказ);	
		КонецЕсли;
		
	Иначе
	
		НомерСтроки = 1;
		Для Каждого СтрокаДоходы Из Доходы Цикл
			
			ПутьКДанным = "СведенияОДоходах[" + Формат(СтрокаДоходы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
					
			Если ЗначениеЗаполнено(СтрокаДоходы.СуммаВычета) И Не ЗначениеЗаполнено(СтрокаДоходы.КодВычета) Тогда 
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 в строке %2 списка ""Сведения о доходах"" не заполнен код вычета.'"), НачалоСообщения, НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодВычета", ,Отказ);
			КонецЕсли;

			Если ПроверятьСоответствиеДоходовСтавке Тогда
				
				// Эта проверка отменена
				
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		Если ДляНалогаНаПрибыль Тогда // среди вычетов могут быть только стандартные
			
			ГруппыВычетов = Новый Массив;
			ГруппыВычетов.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Стандартные);
			ГруппыВычетов.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей);
			ДопустимыеВычеты = ВычетыНалогоплательщика(ДанныеСправки.НалоговыйПериод, ГруппыВычетов);
			
			НомерСтроки = 1;
			Для Каждого СтрокаВычеты Из Вычеты Цикл
				
				ПутьКДанным = "СведенияОВычетах[" + Формат(СтрокаВычеты.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
						
				Если ДопустимыеВычеты.Найти(СтрокаВычеты.КодВычета) = Неопределено Тогда 
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 в строке %2 списка ""Сведения о вычетах"" указан недопустимый код вычета.'"), НачалоСообщения, НомерСтроки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодВычета", ,Отказ);
				КонецЕсли;

				НомерСтроки = НомерСтроки + 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Не СводнаяСправка И Не ДляНалогаНаПрибыль Тогда // проверяем уведомления
			
			ИмущественныеВычеты = ВычетыНалогоплательщика(ДанныеСправки.НалоговыйПериод, Перечисления.ГруппыВычетовПоНДФЛ.Имущественные);
			СоциальныеВычеты = ВычетыНалогоплательщика(ДанныеСправки.НалоговыйПериод, Перечисления.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО);
			ЕстьИмущественныеВычеты = Ложь;
			ЕстьСоциальныеВычеты = Ложь;
			Для каждого Вычет Из ИмущественныеВычеты Цикл
				СтрокаВычеты = Вычеты.Найти(Вычет, "КодВычета");
				ЕстьИмущественныеВычеты = ЕстьИмущественныеВычеты Или СтрокаВычеты <> Неопределено;
				Если ЕстьИмущественныеВычеты Тогда
					ПутьКДаннымИмущественногоВычета = "СведенияОВычетах[" + Формат(СтрокаВычеты.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].КодВычета";
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			Для каждого Вычет Из СоциальныеВычеты Цикл
				СтрокаВычеты = Вычеты.Найти(Вычет, "КодВычета");
				ЕстьСоциальныеВычеты = ЕстьСоциальныеВычеты Или СтрокаВычеты <> Неопределено;
				Если ЕстьСоциальныеВычеты Тогда
					ПутьКДаннымСоциальногоВычета = "СведенияОВычетах[" + Формат(СтрокаВычеты.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].КодВычета";
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			
			Если ЕстьИмущественныеВычеты Или ЕстьСоциальныеВычеты Тогда
				
				Если УведомленияНОоПравеНаВычеты = Неопределено Тогда
					СтрокиУведомленийНаИмущественныйВычет = Новый Массив;
					СтрокиУведомленийНаСоциальныйВычет = Новый Массив;
				Иначе
					СтрокиУведомленийНаИмущественныйВычет = УведомленияНОоПравеНаВычеты.НайтиСтроки(Новый Структура("ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Имущественные));
					СтрокиУведомленийНаСоциальныйВычет = УведомленияНОоПравеНаВычеты.НайтиСтроки(Новый Структура("ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Социальные));
				КонецЕсли;
				
				Если ЕстьИмущественныеВычеты Тогда
					Если СтрокиУведомленийНаИмущественныйВычет.Количество() = 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 не указаны данные уведомления о праве на имущественный вычет'"), НачалоСообщения);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымИмущественногоВычета,,Отказ);	
					Иначе
						Для каждого СтрокаУведомлений Из СтрокиУведомленийНаИмущественныйВычет Цикл
							
							ПутьКДанным = "УведомленияНОоПравеНаВычеты[" + Формат(СтрокаУведомлений.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 в данных уведомления о праве на имущественный вычет указаны не все реквизиты'"), НачалоСообщения);
							
							Если Не ЗначениеЗаполнено(СтрокаУведомлений.НомерУведомления)  Тогда
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "НомерУведомления",,Отказ);	
							КонецЕсли;	
							
							Если Не ЗначениеЗаполнено(СтрокаУведомлений.ДатаУведомления)  Тогда
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "ДатаУведомления",,Отказ);	
							КонецЕсли;	
							
							Если Не ЗначениеЗаполнено(СтрокаУведомлений.КодНалоговогоОрганаУведомления) Тогда
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодНалоговогоОрганаУведомления",,Отказ);
							ИначеЕсли Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаУведомлений.КодНалоговогоОрганаУведомления) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 неверно указан код налогового органа, выдавшего уведомление о праве на имущественный вычет'"), НачалоСообщения);
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодНалоговогоОрганаУведомления",,Отказ);	
							КонецЕсли;
							
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				Если ЕстьСоциальныеВычеты Тогда
					Если СтрокиУведомленийНаСоциальныйВычет.Количество() = 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 не указаны данные уведомления о праве на социальный вычет'"), НачалоСообщения);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСоциальногоВычета,,Отказ);	
					Иначе
						Для каждого СтрокаУведомлений Из СтрокиУведомленийНаСоциальныйВычет Цикл
							
							ПутьКДанным = "УведомленияНОоПравеНаВычеты[" + Формат(СтрокаУведомлений.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 в данных уведомления о праве на социальный вычет указаны не все реквизиты'"), НачалоСообщения);
							
							Если Не ЗначениеЗаполнено(СтрокаУведомлений.НомерУведомления)  Тогда
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "НомерУведомления",,Отказ);	
							КонецЕсли;	
							
							Если Не ЗначениеЗаполнено(СтрокаУведомлений.ДатаУведомления)  Тогда
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "ДатаУведомления",,Отказ);	
							КонецЕсли;	
							
							Если Не ЗначениеЗаполнено(СтрокаУведомлений.КодНалоговогоОрганаУведомления) Тогда
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодНалоговогоОрганаУведомления",,Отказ);
							ИначеЕсли Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаУведомлений.КодНалоговогоОрганаУведомления) Тогда
								ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 неверно указан код налогового органа, выдавшего уведомление о праве на социальный вычет'"), НачалоСообщения);
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодНалоговогоОрганаУведомления",,Отказ);	
							КонецЕсли;
							
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Для каждого ЗначениеПеречисления Из Перечисления.НДФЛСтавки Цикл
			
			Если ПроверятьСоответствиеДоходовСтавке Тогда // проверяем только переданную ставку
				Если ЗначениеПеречисления <> ДанныеСправки.Ставка Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			ДоходыПоСтавке = СправкиНДФЛИзвлечьДоходыПоСтавке(ЗначениеПеречисления, ДанныеСправки.НалоговыйПериод, ДанныеСправки.СтатусНалогоплательщика, Доходы, СоответствиеСтавокДоходов);
			
			ОбщаяСуммаДохода = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСправки, "ОбщаяСуммаДохода", ЗначениеПеречисления);
			ОблагаемаяСуммаДохода = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСправки, "ОблагаемаяСуммаДохода", ЗначениеПеречисления);
			
			Если ДоходыПоСтавке.Количество() > 0 
				Или ОбщаяСуммаДохода <> 0 
				Или ОблагаемаяСуммаДохода <> 0 Тогда
				
				Если ОбщаяСуммаДохода <> ДоходыПоСтавке.Итог("СуммаДохода") Тогда
					ИмяПоляИтогов = УчетНДФЛКлиентСервер.СправкиНДФЛИмяПоляИтоговПоСтавке("ОбщаяСуммаДохода", ЗначениеПеречисления);
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 общая сумма дохода по ставке %2 не совпадает с итогом таблицы доходов'"), НачалоСообщения, ЗначениеПеречисления);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + ИмяПоляИтогов,,Отказ);
				КонецЕсли;
				
				Если ОблагаемаяСуммаДохода <> ДоходыПоСтавке.Итог("СуммаДохода") - ДоходыПоСтавке.Итог("СуммаВычета") - ?(ЗначениеПеречисления = Перечисления.НДФЛСтавки.Ставка13, Вычеты.Итог("СуммаВычета"),0) Тогда
					ИмяПоляИтогов = УчетНДФЛКлиентСервер.СправкиНДФЛИмяПоляИтоговПоСтавке("ОблагаемаяСуммаДохода", ЗначениеПеречисления);
					
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 сумма налоговой базы по ставке %2 не совпадает с итогами таблиц доходов и вычетов'"), НачалоСообщения, ЗначениеПеречисления);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + ИмяПоляИтогов,,Отказ);	
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры	

// Предназначена для получения сведений об уполномоченном представителе организации в налоговом органе.
// Параметры:
//		РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане - должно быть непустым значением.
//		ДатаПодписи - дата - дата, по состоянию на которую будут читаться данные представителя-физлица.
//
//  Возвращаемое значение: 
//  	Структура с полями: 
//			ТипПодписанта - строка со значениями "1", "2", 
//			ПредставительЮрЛицо - булево, 
//			а также строковые НаименованиеОрганизацииПредставителя, ДокументПредставителя, Фамилия, Имя, Отчество, ФИОПредставителя
//
Функция СведенияОПредставителеПоРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане, ДатаПодписи)
	
	ДанныеПредставителя = Новый Структура("ТипПодписанта, ПредставительЮрЛицо, НаименованиеОрганизацииПредставителя, ДокументПредставителя, Фамилия, Имя, Отчество, ФИОПредставителя", "1", Истина, "", "", "", "", "", "");
	Сведения = ИнтерфейсыВзаимодействияБРОВызовСервера.СведенияОПредставителеПоРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане, ДатаПодписи);
	ЗаполнитьЗначенияСвойств(ДанныеПредставителя, Сведения);
	
	Возврат	ДанныеПредставителя
	
КонецФункции

Функция СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал) Экспорт

	ДанныеНалоговогоАгента = Новый Структура;
	ДанныеНалоговогоАгента.Вставить("Организация", Организация);
	ДанныеНалоговогоАгента.Вставить("НалоговыйПериод", НалоговыйПериод);
	ДанныеНалоговогоАгента.Вставить("НалоговыйПериодСтрокой", Формат(НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
	ДанныеНалоговогоАгента.Вставить("Дата", Дата);
	ДанныеНалоговогоАгента.Вставить("Телефон", Телефон);
	ДанныеНалоговогоАгента.Вставить("Признак");
	ДанныеНалоговогоАгента.Вставить("ЭтоЮрЛицо", "");
	ДанныеНалоговогоАгента.Вставить("НазваниеОрганизации", "");
	ДанныеНалоговогоАгента.Вставить("Фамилия", "");
	ДанныеНалоговогоАгента.Вставить("Имя", "");
	ДанныеНалоговогоАгента.Вставить("Отчество", "");
	ДанныеНалоговогоАгента.Вставить("КодНалоговогоОргана", "");
	ДанныеНалоговогоАгента.Вставить("КодНалоговогоОрганаПолучателя", "");
	ДанныеНалоговогоАгента.Вставить("ИННорг", "");
	ДанныеНалоговогоАгента.Вставить("КПП", "");
	ДанныеНалоговогоАгента.Вставить("ОКАТО", "");
	ДанныеНалоговогоАгента.Вставить("ОКТМО", "");
	ДанныеНалоговогоАгента.Вставить("ДолжностьПодписавшегоЛица", "");
	ДанныеНалоговогоАгента.Вставить("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	ДанныеНалоговогоАгента.Вставить("ТипПодписанта", "1");
	ДанныеНалоговогоАгента.Вставить("ФамилияПредставителя", "");
	ДанныеНалоговогоАгента.Вставить("ИмяПредставителя", "");
	ДанныеНалоговогоАгента.Вставить("ОтчествоПредставителя", "");
	ДанныеНалоговогоАгента.Вставить("ПредставительЮрЛицо", Истина);
	ДанныеНалоговогоАгента.Вставить("НаименованиеОрганизацииПредставителя", "");
	ДанныеНалоговогоАгента.Вставить("ДокументПредставителя", "");
	
	ЭтоЮрЛицо = ЗарплатаКадры.ЭтоЮридическоеЛицо(Организация);
	ДанныеНалоговогоАгента.ЭтоЮрЛицо = ЭтоЮрЛицо;
	ДанныеОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "ИНН, НаименованиеПолное, НаименованиеСокращенное, ИндивидуальныйПредприниматель, КодНалоговогоОрганаПолучателя");
	ДанныеОрганизации.Вставить("КодНалоговогоОргана", РегистрацияВНалоговомОргане.Код);
	ДанныеНалоговогоАгента.КодНалоговогоОрганаПолучателя = СокрЛП(ДанныеОрганизации.КодНалоговогоОрганаПолучателя);
	ДанныеНалоговогоАгента.ИННорг = СокрЛП(ДанныеОрганизации.ИНН);
	
	ЗаполнитьЗначенияСвойств(ДанныеНалоговогоАгента, ОКАТО_ОКТМО_КППИзРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане),"ОКАТО, ОКТМО, КПП");
	
	ДанныеНалоговогоАгента.ОКТМО = СокрЛП(ДанныеНалоговогоАгента.ОКТМО);
	
	Если ЭтоЮрЛицо Тогда
		ДанныеНалоговогоАгента.НазваниеОрганизации = ?(ЗначениеЗаполнено(ДанныеОрганизации.НаименованиеСокращенное), ДанныеОрганизации.НаименованиеСокращенное, ДанныеОрганизации.НаименованиеПолное);
		МассивФизЛицДокумента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СправкуПодписал);
		КадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(Ложь, МассивФизЛицДокумента, "Фамилия,Имя,Отчество", Дата);
		Для Каждого СтрокаКадровыеДанныеФизическихЛиц Из КадровыеДанныеФизическихЛиц Цикл
			Если СтрокаКадровыеДанныеФизическихЛиц.ФизическоеЛицо = СправкуПодписал Тогда
				ЗаполнитьЗначенияСвойств(ДанныеНалоговогоАгента, СтрокаКадровыеДанныеФизическихЛиц,"Фамилия, Имя, Отчество");
				Прервать;
			КонецЕсли;
		КонецЦикла;	
	Иначе // для ИП
		Если ЗначениеЗаполнено(ДанныеОрганизации.ИндивидуальныйПредприниматель) Тогда
			МассивФизЛицДокумента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеОрганизации.ИндивидуальныйПредприниматель);
			КадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(Ложь, МассивФизЛицДокумента, "Фамилия,Имя,Отчество", Дата);
			Для Каждого СтрокаКадровыеДанныеФизическихЛиц Из КадровыеДанныеФизическихЛиц Цикл
				Если СтрокаКадровыеДанныеФизическихЛиц.ФизическоеЛицо = ДанныеОрганизации.ИндивидуальныйПредприниматель Тогда
					ЗаполнитьЗначенияСвойств(ДанныеНалоговогоАгента, СтрокаКадровыеДанныеФизическихЛиц,"Фамилия, Имя, Отчество");
					ДанныеНалоговогоАгента.НазваниеОрганизации = ДанныеНалоговогоАгента.Фамилия + " " + ДанныеНалоговогоАгента.Имя + " " + ДанныеНалоговогоАгента.Отчество;
					Прервать;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;
	
	ДанныеНалоговогоАгента.ДолжностьПодписавшегоЛица = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДолжностьПодписавшегоЛица, "Наименование");
	
	Если НалоговыйПериод >= 2015  Тогда
		ДанныеПредставителя = СведенияОПредставителеПоРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане, Дата); // ТипПодписанта, ПредставительЮрЛицо, НаименованиеОрганизацииПредставителя, ДокументПредставителя, Фамилия, Имя, Отчество, ФИОПредставителя
		ДанныеНалоговогоАгента.ТипПодписанта = ДанныеПредставителя.ТипПодписанта;
		Если ДанныеНалоговогоАгента.ТипПодписанта = "2" Тогда
			ЗаполнитьЗначенияСвойств(ДанныеНалоговогоАгента, ДанныеПредставителя, "ПредставительЮрЛицо,НаименованиеОрганизацииПредставителя,ДокументПредставителя");
			ДанныеНалоговогоАгента.ФамилияПредставителя = ДанныеПредставителя.Фамилия;
			ДанныеНалоговогоАгента.ИмяПредставителя= ДанныеПредставителя.Имя;
			ДанныеНалоговогоАгента.ОтчествоПредставителя = ДанныеПредставителя.Отчество;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДанныеНалоговогоАгента
	
КонецФункции

// Метод возвращает ставку, вписанную в НК РФ, без учета международных договоров и прочих особенностей
Функция СтавкаНДФЛ(СтавкаНалогообложенияРезидента, КодДохода, СтатусНалогоплательщика, НалоговыйПериод) Экспорт	
	Если СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13 Тогда
		Если СтатусНалогоплательщика = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент Тогда
			Возврат Перечисления.НДФЛСтавки.Ставка30;
		Иначе
			Возврат Перечисления.НДФЛСтавки.Ставка13;
		КонецЕсли;
	ИначеЕсли СтатусНалогоплательщика = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Резидент Тогда
		Если СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09 Тогда
			Если КодДохода = Справочники.ВидыДоходовНДФЛ.Код1010 И НалоговыйПериод >= Год(ДатаИзмененияНалогообложенияДивидендов()) Тогда
				Возврат Перечисления.НДФЛСтавки.Ставка13;
			Иначе
				Возврат Перечисления.НДФЛСтавки.Ставка09;
			КонецЕсли;
		ИначеЕсли СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35 Тогда
			Возврат Перечисления.НДФЛСтавки.Ставка35;
		Иначе
			Возврат Перечисления.НДФЛСтавки.ПустаяСсылка();
		КонецЕсли;
	ИначеЕсли КодДохода = Справочники.ВидыДоходовНДФЛ.Код1010 Тогда
		Возврат Перечисления.НДФЛСтавки.Ставка15;
	Иначе
		Возврат Перечисления.НДФЛСтавки.Ставка30;	
	КонецЕсли; 	
КонецФункции	

Процедура ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, СоответствиеИменСтран, СоответствиеДокументовУдостоверяющихЛичность, СоответствиеКодовДоходов, СоответствиеСтатусовНалогоплательщика) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторСтранМира.Ссылка,
	|	КлассификаторСтранМира.Код,
	|	КлассификаторСтранМира.Наименование
	|ИЗ
	|	Справочник.СтраныМира КАК КлассификаторСтранМира";
	Выборка = Запрос.Выполнить().Выбрать();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеКодовСтран.Вставить(Выборка.Ссылка,Выборка.Код);
		СоответствиеИменСтран.Вставить(Выборка.Наименование,Выборка.Код)
	КонецЦикла;
	СоответствиеКодовСтран.Вставить(Справочники.СтраныМира.ПустаяСсылка(),"999");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыДокументовФизическихЛиц.Ссылка,
	|	ВидыДокументовФизическихЛиц.КодМВД,
	|	ВЫБОР
	|		КОГДА ВидыДокументовФизическихЛиц.КодМВД = ""18""
	|			ТОГДА ""19""
	|		ИНАЧЕ ВидыДокументовФизическихЛиц.КодМВД
	|	КОНЕЦ КАК КодМВД_2015
	|ИЗ
	|	Справочник.ВидыДокументовФизическихЛиц КАК ВидыДокументовФизическихЛиц";
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие; 
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеДокументовУдостоверяющихЛичность.Вставить(Выборка.Ссылка, Новый Структура("КодМВД, КодМВД_2015", Выборка.КодМВД, Выборка.КодМВД_2015));		
	КонецЦикла;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоходыНДФЛ.Ссылка,
	|	ДоходыНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДляОтчетности
	|ИЗ
	|	Справочник.ВидыДоходовНДФЛ КАК ДоходыНДФЛ";
	Выборка = Запрос.Выполнить().Выбрать();
	СоответствиеКодовДоходов = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеКодовДоходов.Вставить(Выборка.Ссылка, Выборка.КодДляОтчетности)
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыНалогоплательщиковПоНДФЛ.Ссылка,
	|	СтатусыНалогоплательщиковПоНДФЛ.КодФНС,
	|	СтатусыНалогоплательщиковПоНДФЛ.КодФНС_2015
	|ИЗ
	|	Справочник.СтатусыНалогоплательщиковПоНДФЛ КАК СтатусыНалогоплательщиковПоНДФЛ";
	СоответствиеСтатусовНалогоплательщика = Новый Соответствие; 
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеСтатусовНалогоплательщика.Вставить(Выборка.Ссылка, Новый Структура("КодФНС, КодФНС_2015", Выборка.КодФНС, Выборка.КодФНС_2015));		
	КонецЦикла;	
	
КонецПроцедуры

Функция СоответствиеДоходовСтавкам(Доходы = Неопределено) Экспорт
	СоответствиеДоходовСтавкам = Новый Соответствие;
	Запрос = Новый Запрос;
	Если Доходы = Неопределено Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыДоходовНДФЛ.Ссылка,
		|	ВидыДоходовНДФЛ.СтавкаНалогообложенияРезидента
		|ИЗ
		|	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ";
	Иначе 
		Запрос.УстановитьПараметр("Доходы", Доходы);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыДоходовНДФЛ.Ссылка,
		|	ВидыДоходовНДФЛ.СтавкаНалогообложенияРезидента
		|ИЗ
		|	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
		|ГДЕ
		|	ВидыДоходовНДФЛ.Ссылка В(&Доходы)";
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоответствиеДоходовСтавкам.Вставить(Выборка.Ссылка, Выборка.СтавкаНалогообложенияРезидента);		
	КонецЦикла;	
	
	Возврат СоответствиеДоходовСтавкам;
КонецФункции	

Функция Справки2НДФЛОНевозможностиУдержания(Сотрудники, ДатаАктуальности, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане, НомерКорректировки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НалоговыйПериод", НалоговыйПериод);
	Запрос.УстановитьПараметр("ДатаПодачиСведений", КонецДня(ДатаАктуальности));
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("НачалоПредшествующегоГода", ДобавитьМесяц(Дата(НалоговыйПериод,1,1), -12));
	
	Если НомерКорректировки = 99 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НомерКорректировки) КАК НомерКорректировки
		|ПОМЕСТИТЬ ВТСтаршиеКорректировки
		|ИЗ
		|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|ГДЕ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата < &ДатаПодачиСведений
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата >= &НачалоПредшествующегоГода
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Организация = &Организация
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НалоговыйПериод = &НалоговыйПериод
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ДокументПринятВНалоговыйОрган
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник В(&Сотрудники)
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ОснованиеДляПредставленияСправок В (ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ))
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НомерКорректировки < 99
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник КАК Сотрудник,
		|	Сотрудники.НомерКорректировки КАК НомерКорректировки,
		|	МАКСИМУМ(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата) КАК ДатаДокумента
		|ПОМЕСТИТЬ ВТДатыПоследнихСправок
		|ИЗ
		|	ВТСтаршиеКорректировки КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|		ПО Сотрудники.Сотрудник = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник
		|			И Сотрудники.НомерКорректировки = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НомерКорректировки
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата < &ДатаПодачиСведений)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата >= &НачалоПредшествующегоГода)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Организация = &Организация)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НалоговыйПериод = &НалоговыйПериод)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ДокументПринятВНалоговыйОрган)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ОснованиеДляПредставленияСправок В (ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ)))
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник,
		|	Сотрудники.НомерКорректировки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка) КАК Ссылка
		|ПОМЕСТИТЬ ВТСправки
		|ИЗ
		|	ВТДатыПоследнихСправок КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|		ПО Сотрудники.Сотрудник = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник
		|			И Сотрудники.ДатаДокумента = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата
		|			И Сотрудники.НомерКорректировки = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НомерКорректировки
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Организация = &Организация)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НалоговыйПериод = &НалоговыйПериод)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ДокументПринятВНалоговыйОрган)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ОснованиеДляПредставленияСправок В (ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ)))
		|
		|СГРУППИРОВАТЬ ПО
		|	Сотрудники.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Справки.Сотрудник КАК Сотрудник,
		|	Справки.Ссылка КАК ИсправляемаяСправка,
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки КАК НомерСправки
		|ИЗ
		|	ВТСправки КАК Справки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|		ПО Справки.Сотрудник = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник
		|			И Справки.Ссылка = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка
		|ГДЕ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки ЕСТЬ НЕ NULL ";
		
	Иначе
		
		Запрос.УстановитьПараметр("НомерПредыдущейКорректировки", НомерКорректировки - 1);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата) КАК ДатаДокумента
		|ПОМЕСТИТЬ ВТДатыПоследнихСправок
		|ИЗ
		|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|ГДЕ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата < &ДатаПодачиСведений
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата >= &НачалоПредшествующегоГода
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Организация = &Организация
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НалоговыйПериод = &НалоговыйПериод
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ДокументПринятВНалоговыйОрган
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НомерКорректировки = &НомерПредыдущейКорректировки
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник В(&Сотрудники)
		|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ОснованиеДляПредставленияСправок В (ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ))
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка) КАК Ссылка
		|ПОМЕСТИТЬ ВТСправки
		|ИЗ
		|	ВТДатыПоследнихСправок КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|		ПО Сотрудники.Сотрудник = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник
		|			И Сотрудники.ДатаДокумента = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Организация = &Организация)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НалоговыйПериод = &НалоговыйПериод)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ДокументПринятВНалоговыйОрган)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НомерКорректировки = &НомерПредыдущейКорректировки)
		|			И (СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.ОснованиеДляПредставленияСправок В (ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ)))
		|
		|СГРУППИРОВАТЬ ПО
		|	Сотрудники.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Справки.Сотрудник КАК Сотрудник,
		|	Справки.Ссылка КАК ИсправляемаяСправка,
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки КАК НомерСправки
		|ИЗ
		|	ВТСправки КАК Справки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|		ПО Справки.Сотрудник = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник
		|			И Справки.Ссылка = СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка
		|ГДЕ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки ЕСТЬ НЕ NULL ";
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Помещает во временную таблицу перечень физических лиц, получивших доходы в подразделениях, 
// 	изменивших в налоговом периоде регистрацию на соответствующую переданному КПП отправки в .
//
// Параметры:
//	КППОтправки - Строка - КПП "новой" регистрации в НО.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицу с полями:
//		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//		Подразделение - ОпределяемыйТип.ТерриторияВыполненияРабот
//		РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане - регистрация,
//									с которой были зарегистрированы данные при получении дохода.
//		поле типа дата, на которую получаем действующие регистрации.
//	ИмяТаблицыПодразделений - Строка - имя временной таблицы с параметрами "среза".
//	ПолеДаты - Строка - имя поля вр.таблицы, содержащего дату.
//
// В результате в менеджер временных таблиц помещается таблица ВТФизическиеЛицаСУчетомПереездаВИнойНО с полем
//		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//
Процедура СформироватьВТФизическиеЛицаСУчетомПереездаВИнойНО(КППОтправки, МенеджерВременныхТаблиц, ИмяТаблицыПодразделений, ПолеДаты) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КППОтправки", КППОтправки);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане КАК НоваяРегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТНовыеРегистрации
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Доходы.КонецГода КАК КонецГода,
	|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Доходы.Подразделение КАК Подразделение,
	|		Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|	ИЗ
	|		ВТДоходы КАК Доходы) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОрганеВторичный КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО Доходы.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И (Доходы.КонецГода МЕЖДУ ИсторияРегистрацийВНалоговомОргане.ДатаНачала И ИсторияРегистрацийВНалоговомОргане.ДатаОкончания)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НовыеРегистрацииФизическогоЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НовыеРегистрацииФизическогоЛица.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТСовпавшиеРегистрации
	|ИЗ
	|	ВТНовыеРегистрации КАК НовыеРегистрацииФизическогоЛица
	|ГДЕ
	|	НовыеРегистрацииФизическогоЛица.РегистрацияВНалоговомОргане = НовыеРегистрацииФизическогоЛица.НоваяРегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеРегистрацииФизическогоЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	МАКСИМУМ(НовыеРегистрацииФизическогоЛица.НоваяРегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТРегистрацииФизическогоЛица
	|ИЗ
	|	ВТНовыеРегистрации КАК НовыеРегистрацииФизическогоЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСовпавшиеРегистрации КАК СовпавшиеРегистрации
	|		ПО НовыеРегистрацииФизическогоЛица.ФизическоеЛицо = СовпавшиеРегистрации.ФизическоеЛицо
	|			И НовыеРегистрацииФизическогоЛица.РегистрацияВНалоговомОргане = СовпавшиеРегистрации.РегистрацияВНалоговомОргане
	|ГДЕ
	|	СовпавшиеРегистрации.ФизическоеЛицо ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	НовыеРегистрацииФизическогоЛица.ФизическоеЛицо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СовпавшиеРегистрации.ФизическоеЛицо,
	|	СовпавшиеРегистрации.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТСовпавшиеРегистрации КАК СовпавшиеРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацииФизическогоЛица.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛицаСУчетомПереездаВИнойНО
	|ИЗ
	|	ВТРегистрацииФизическогоЛица КАК РегистрацииФизическогоЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО РегистрацииФизическогоЛица.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|ГДЕ
	|	РегистрацииВНалоговомОргане.КПП = &КППОтправки";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДоходы", ИмяТаблицыПодразделений);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "КонецГода", ПолеДаты);
	Запрос.Выполнить();
	
	ТаблицыКУдалению = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ВТНовыеРегистрации");
	ТаблицыКУдалению.Добавить("ВТРегистрацииФизическогоЛица");
	ТаблицыКУдалению.Добавить("ВТСовпавшиеРегистрации");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, ТаблицыКУдалению);
	
КонецПроцедуры

// Возвращает структуру, содержащую таблицы значений с
// данными о доходах, налогах, вычетах.
//
// Параметры:
// 	Сотрудники - Массив - содержит физических лиц, по которым необходимо получить данные.
//	НалоговыйПериод - Число - номер года налогового периода.
//	Организация - организация, по которой получать доходы.
//	РегистрацияВНалоговомОргане - (необязательный), ссылка на регистрацию в налоговом органе, 
//									по которой отбирать данные.
//	ДатаАктуальности - Дата - (необязательный), дата ограничивающая период получаемых данных о доходах налогах и вычетах
//			если не задана, ограничением будет выступать текущая дата сеанса.
//	ПодробныеДанные - Булево - определяет подробность возвращаемых данных.
//
// Возвращаемое значение:
//	В варианте ПодробныеДанные = Ложь. Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			МесяцНалоговогоПериода,
//			КодДохода,
//			КодДоходаКодДляОтчетности,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Вычеты - таблица значений с колонками:
//			Сотрудник
//			КодВычета,
//			КодВычетаКод,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Налоги - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			ОбщаяСуммаДохода,
//			ОблагаемаяСуммаДохода,
//			Исчислено,
//			Удержано,
//			Задолженность,
//			ИзлишнеУдержано,
//			Перечислено,
//			ВключатьВДекларациюПоНалогуНаПрибыль
//
//	В варианте ПодробныеДанные = Истина. Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			ФизическоеЛицо,
//			Сотрудник,
//			Ставка,
//			КодДохода,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ПериодРегистрации,
//			СтавкаНалогообложенияРезидента,
//			Регистратор,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода,
//		Вычеты - таблица значений с колонками:
//			ФизическоеЛицо
//			КодВычета,
//			СуммаВычета,
//			ПериодРегистрации,
//			Регистратор,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода,
//		Налоги - таблица значений с колонками:
//			ФизическоеЛицо,
//			Ставка,
//			СтавкаНалогообложенияРезидента,
//			Начислено,
//			Зачтено,
//			Регистратор,
//			ПериодРегистрации,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода
//
Функция ДанныеОДоходахНалогахВычетах(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане = Неопределено, ДатаАктуальности = '00010101', КППОтправки = Неопределено, ПодробныеДанные = Ложь) Экспорт
	
	Если НалоговыйПериод < 2017 Тогда
		Возврат ДанныеОДоходахНалогахВычетах2016(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане, ДатаАктуальности, КППОтправки, ПодробныеДанные)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	НачалоНалоговогоПериода = Дата(НалоговыйПериод, 1, 1);
	КонецНалоговогоПериода = КонецГода(НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецНП",КонецНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоНП", НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоСледующегоНП", КонецНалоговогоПериода + 1); // Начало следующего налогового периода.
	Запрос.УстановитьПараметр("ДатаПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности));
	Запрос.УстановитьПараметр("ДатаДоПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности) - 1);
	Запрос.УстановитьПараметр("ЧитатьСводныеДанные", РегистрацияВНалоговомОргане = Неопределено Или ПодробныеДанные);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	УчитыватьПереездВДругуюИФНС = ЗначениеЗаполнено(РегистрацияВНалоговомОргане) И ЗначениеЗаполнено(КППОтправки) И Не ПодробныеДанные И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КПП") <> КППОтправки;
	Запрос.УстановитьПараметр("УчитыватьПереездВДругуюИФНС", УчитыватьПереездВДругуюИФНС);
	Запрос.УстановитьПараметр("КППОтправки", КППОтправки);
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.Ссылка КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	Справочник.ФизическиеЛица КАК СписокСотрудников
	|ГДЕ
	|	СписокСотрудников.Ссылка В(&Сотрудники)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК Месяц,
	|	КОНЕЦПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, ГОД) КАК КонецГода,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДоходаКодДляОтчетности,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|	КОНЕЦ КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.СуммаВычета = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.Сотрудник КАК Сотрудник,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизлица КАК Сотрудники
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|			И (СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (&ЧитатьСводныеДанные
	|					И СведенияОДоходахНДФЛ.Организация = &Организация
	|				ИЛИ СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|			И (СведенияОДоходахНДФЛ.Период <= &ДатаПодачиСведений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета КАК КодВычета,
	|	СУММА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма) КАК СуммаОборот,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение КАК Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|ИЗ
	|	ВТФизлица КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ПО Сотрудники.ФизическоеЛицо = ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период <= &ДатаПодачиСведений
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
	|	И (&ЧитатьСводныеДанные
	|				И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
	|			ИЛИ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета КАК КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.СуммаОборот КАК СуммаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета.ГруппаВычета КАК КодВычетаГруппаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ПериодРегистрации КАК ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Подразделение КАК Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТВычеты
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.КодВычета,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	СотрудникиОрганизаций.ФизическоеЛицо,
	|	ИмущественныеВычетыНДФЛ.КодВычета.ГруппаВычета,
	|	ЛОЖЬ,
	|	ИмущественныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.МесяцРегистрации, МЕСЯЦ),
	|	ИмущественныеВычетыНДФЛ.Подразделение,
	|	ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТФизлица КАК СотрудникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИмущественныеВычетыНДФЛ.ФизическоеЛицо
	|			И (ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И (ИмущественныеВычетыНДФЛ.МесяцРегистрации <= &ДатаПодачиСведений)
	|			И (ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (ИмущественныеВычетыНДФЛ.Год = &ГодНП)
	|			И (&ЧитатьСводныеДанные
	|					И ИмущественныеВычетыНДФЛ.Организация = &Организация
	|				ИЛИ ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НДФЛРасчетыСБюджетом.ВариантУдержания КАК ВариантУдержания,
	|	НДФЛРасчетыСБюджетом.ВидДвижения КАК ВидДвижения,
	|	НДФЛРасчетыСБюджетом.Сумма КАК Сумма,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.КатегорияДохода КАК КатегорияДохода,
	|	НДФЛРасчетыСБюджетом.КодДохода КАК КодДохода,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НДФЛРасчетыСБюджетом.Регистратор КАК Регистратор,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	НДФЛРасчетыСБюджетом.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТСтрокиНалогов
	|ИЗ
	|	ВТФизлица КАК СправкиОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НДФЛРасчетыСБюджетом
	|		ПО СправкиОДоходах.ФизическоеЛицо = НДФЛРасчетыСБюджетом.ФизическоеЛицо
	|			И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (НДФЛРасчетыСБюджетом.Период < &ДатаПодачиСведений)
	|			И (НДФЛРасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (&ЧитатьСводныеДанные
	|					И НДФЛРасчетыСБюджетом.Организация = &Организация
	|				ИЛИ НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Перечислено.Ставка КАК Ставка,
	|	Перечислено.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(Перечислено.СуммаРасход) КАК СуммаРасход,
	|	Перечислено.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВЫБОР
	|		КОГДА Перечислено.ИсчисленоПоДивидендам
	|			ТОГДА ВЫБОР
	|					КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05)
	|					КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10)
	|					КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка12)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|				КОНЕЦ
	|		КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка03)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03)
	|		КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05)
	|		КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка06)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06)
	|		КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка07)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07)
	|		КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10)
	|		КОГДА Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|	КОНЕЦ КАК КатегорияДохода,
	|	Перечислено.ИсчисленоПоДивидендам КАК ИсчисленоПоДивидендам
	|ПОМЕСТИТЬ ВТПеречисленоНДФЛПоМесяцам
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК СуммаРасход,
	|		КОНЕЦПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам КАК ИсчисленоПоДивидендам
	|	ИЗ
	|		РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Обороты(
	|				&НачалоНП,
	|				&ДатаДоПодачиСведений,
	|				,
	|				ФизическоеЛицо В
	|						(ВЫБРАТЬ
	|							ФизическиеЛица.ФизическоеЛицо
	|						ИЗ
	|							ВТФизлица КАК ФизическиеЛица)
	|					И (МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|					И (&ЧитатьСводныеДанные
	|							И Организация = &Организация
	|						ИЛИ РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты) КАК Перечислено
	|
	|СГРУППИРОВАТЬ ПО
	|	Перечислено.Ставка,
	|	Перечислено.ФизическоеЛицо,
	|	Перечислено.МесяцНалоговогоПериода,
	|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Перечислено.ИсчисленоПоДивидендам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ДатаПолученияДохода КАК Период,
	|	Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.КатегорияДохода КАК КатегорияДохода
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТДоходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Вычеты.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	Вычеты.ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|ИЗ
	|	ВТВычеты КАК Вычеты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНалогов.МесяцНалоговогоПериода,
	|	СтрокиНалогов.СтавкаНалогообложенияРезидента,
	|	СтрокиНалогов.ФизическоеЛицо,
	|	СтрокиНалогов.КатегорияДохода
	|ИЗ
	|	ВТСтрокиНалогов КАК СтрокиНалогов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеречисленоНДФЛПоМесяцам.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	ПеречисленоНДФЛПоМесяцам.ФизическоеЛицо,
	|	ПеречисленоНДФЛПоМесяцам.КатегорияДохода
	|ИЗ
	|	ВТПеречисленоНДФЛПоМесяцам КАК ПеречисленоНДФЛПоМесяцам
	|ГДЕ
	|	НЕ ПеречисленоНДФЛПоМесяцам.ИсчисленоПоДивидендам
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеречисленоНДФЛПоМесяцам.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09),
	|	ПеречисленоНДФЛПоМесяцам.ФизическоеЛицо,
	|	ПеречисленоНДФЛПоМесяцам.КатегорияДохода
	|ИЗ
	|	ВТПеречисленоНДФЛПоМесяцам КАК ПеречисленоНДФЛПоМесяцам
	|ГДЕ
	|	ПеречисленоНДФЛПоМесяцам.ИсчисленоПоДивидендам";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "НеУчитыватьИзмененияСтатуса");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КатегорияДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ТаблицаНДФЛ.СтавкаНДФЛ,
	|	ТаблицаНДФЛ.СтавкаЧислом
	|ПОМЕСТИТЬ ВТСтавкаНДФЛБезУчетаИзмененияСтатуса
	|ИЗ
	|	ВТСтавкаНДФЛПоСтавкеРезидента КАК ТаблицаНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "УчитыватьИзмененияСтатусаДляОтчетности");
	
	Если ПодробныеДанные Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
		|	Доходы.Сотрудник КАК Сотрудник,
		|	Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение КАК Подразделение,
		|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	Доходы.Регистратор КАК Регистратор,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.КодВычета,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета
		|ИЗ
		|	ВТДоходы КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|ГДЕ
		|	(НЕ Доходы.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ПериодРегистрации,
		|	Доходы.Сотрудник,
		|	Доходы.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение,
		|	Доходы.КодВычета,
		|	Доходы.Регистратор,
		|	Доходы.ДатаПолученияДохода
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Доходы.СуммаДохода) <> 0
		|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	Ставка,
		|	ПериодРегистрации,
		|	Сотрудник,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	ДатаПолученияДохода,
		|	КодДохода,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Вычеты.ПериодРегистрации КАК ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ДатаПолученияДохода,
		|	Вычеты.Подразделение,
		|	Вычеты.Регистратор КАК Регистратор,
		|	Вычеты.КодВычета КАК КодВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|ГДЕ
		|	Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	Вычеты.ПериодРегистрации,
		|	Вычеты.Регистратор,
		|	Вычеты.ФизическоеЛицо,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ)
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	ДатаПолученияДохода,
		|	КодВычета,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации КАК ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	НДФЛРасчетыСБюджетом.Регистратор КАК Регистратор,
		|	НДФЛРасчетыСБюджетом.Подразделение КАК Подразделение,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Начислено,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Зачтено,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.Регистратор,
		|	НДФЛРасчетыСБюджетом.Подразделение,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	Ставка,
		|	ПериодРегистрации,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	ДатаПолученияДохода,
		|	Регистратор";
		
	Иначе
		
		Если УчитыватьПереездВДругуюИФНС Тогда
			
			СформироватьВТФизическиеЛицаСУчетомПереездаВИнойНО(КППОтправки, Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "КонецГода");
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Доходы.ФизическоеЛицо
			|ПОМЕСТИТЬ ВТЛишниеФизическиеЛица
			|ИЗ
			|	ВТФизлица КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСУчетомПереездаВИнойНО КАК ФизическиеЛицаСУчетомПереездаВИнойНО
			|		ПО Доходы.ФизическоеЛицо = ФизическиеЛицаСУчетомПереездаВИнойНО.ФизическоеЛицо
			|ГДЕ
			|	ФизическиеЛицаСУчетомПереездаВИнойНО.ФизическоеЛицо ЕСТЬ NULL ";
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТЛишниеФизическиеЛица";
			
		КонецЕсли;
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.Месяц КАК Месяц,
		|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.КатегорияДохода КАК КатегорияДохода,
		|	Доходы.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.СуммаДохода КАК СуммаДохода,
		|	Доходы.СуммаВычета КАК СуммаВычета,
		|	Доходы.КодВычета КАК КодВычета,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Доходы.Регистратор КАК Регистратор,
		|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода
		|ПОМЕСТИТЬ ВТДоходыОбъектаОбложения
		|ИЗ
		|	ВТДоходы КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|ГДЕ
		|	(НЕ Доходы.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоходыИВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СУММА(ДоходыИВычеты.ОбщаяСуммаДохода) КАК ОбщаяСуммаДохода,
		|	СУММА(ДоходыИВычеты.ОблагаемаяСуммаДохода) КАК ОблагаемаяСуммаДохода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТИтогиДоходов
		|ИЗ
		|	(ВЫБРАТЬ
		|		Доходы.ДатаПолученияДохода КАК Период,
		|		Доходы.СуммаДохода КАК ОбщаяСуммаДохода,
		|		Доходы.СуммаДохода - Доходы.СуммаВычета КАК ОблагаемаяСуммаДохода,
		|		Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|		Доходы.КатегорияДохода КАК КатегорияДохода,
		|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТДоходыОбъектаОбложения КАК Доходы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Вычеты.МесяцНалоговогоПериода,
		|		0,
		|		-Вычеты.СуммаВычета,
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
		|		ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда),
		|		Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Вычеты.ФизическоеЛицо
		|	ИЗ
		|		ВТВычеты КАК Вычеты) КАК ДоходыИВычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО ДоходыИВычеты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И ДоходыИВычеты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И ДоходыИВычеты.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И ДоходыИВычеты.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК НачисленоЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ЗачтеноАвансовыхПлатежейЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА (НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|						ИЛИ НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом))
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК УдержаноЗаТекущийГод,
		|	0 КАК ВозвращеноЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ПереданоНаВзысканиеЗаТекущийГод,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СУММА(НДФЛРасчетыСБюджетом.Сумма) КАК Налог,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТУдержаноНДФЛПо13или30ПоМесяцам
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛБезУчетаИзмененияСтатуса КАК СтавкаНДФЛБезУчетаИзмененияСтатуса
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛБезУчетаИзмененияСтатуса.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛБезУчетаИзмененияСтатуса.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛБезУчетаИзмененияСтатуса.Период
		|			И НДФЛРасчетыСБюджетом.КатегорияДохода = СтавкаНДФЛБезУчетаИзмененияСтатуса.КатегорияДохода
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|	И НДФЛРасчетыСБюджетом.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|	И НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|	И СтавкаНДФЛБезУчетаИзмененияСтатуса.СтавкаНДФЛ В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
		|
		|СГРУППИРОВАТЬ ПО
		|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК СтавкаПоСтатусу,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) КАК УдержаноНДФЛПоСтавке30,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0) КАК УдержаноНДФЛПоСтавке13,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК СуммаРасход,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоПоСтавке13_30
		|ИЗ
		|	ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке13
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке13.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке13.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке13.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке13.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке30
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке30.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке30.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке30.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке30.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|			И (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13) = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента)
		|ГДЕ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|	И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Перечислено.Ставка КАК Ставка,
		|	СУММА(Перечислено.Сумма) КАК Сумма,
		|	Перечислено.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоНДФЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК Сумма,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|	ГДЕ
		|		НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|		И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
		|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
		|			ИНАЧЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка
		|		КОНЕЦ,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|			ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|				И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|				И (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09) = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента)
		|				И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|	ГДЕ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ПеречисленоПоСтавке13_30.СуммаРасход - (ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0)))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПеречисленоПоСтавке13_30.СтавкаПоСтатусу,
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30) КАК Перечислено
		|
		|СГРУППИРОВАТЬ ПО
		|	Перечислено.Ставка,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|
		|ИМЕЮЩИЕ
		|	СУММА(Перечислено.Сумма) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК Месяц,
		|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.КодВычета КАК КодВычета,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТДоходыПоМесяцам
		|ИЗ
		|	ВТДоходыОбъектаОбложения КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|ГДЕ
		|	Доходы.Месяц ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодВычета
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Доходы.СуммаДохода) <> 0
		|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.Месяц КАК Месяц,
		|	Доходы.Ставка КАК Ставка
		|ПОМЕСТИТЬ ВТОсобыеМесяцы
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц,
		|	Доходы.Ставка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) = 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода КАК КодДохода,
		|	МесяцыОсобыхВычетов.Месяц КАК Месяц,
		|	МАКСИМУМ(Доходы.КодВычета) КАК КодВычета,
		|	МесяцыОсобыхВычетов.Ставка КАК Ставка
		|ПОМЕСТИТЬ ВТСтрокиСУказаннымВычетом
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|			И МесяцыОсобыхВычетов.Ставка = Доходы.Ставка
		|ГДЕ
		|	Доходы.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	МесяцыОсобыхВычетов.Ставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода КАК КодДохода,
		|	МесяцыОсобыхВычетов.Месяц КАК Месяц,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	МесяцыОсобыхВычетов.Ставка КАК Ставка
		|ПОМЕСТИТЬ ВТДоходыИзСтрокБезВычетов
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|			И МесяцыОсобыхВычетов.Ставка = Доходы.Ставка
		|ГДЕ
		|	Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	МесяцыОсобыхВычетов.Ставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК МесяцНалоговогоПериода,
		|	Доходы.Ставка КАК Ставка,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
		|	Доходы.КодВычета КАК КодВычета,
		|	Доходы.СуммаДохода + ВЫБОР
		|		КОГДА СтрокиСУказаннымВычетом.ФизическоеЛицо ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДоходыИзСтрокБезВычетов.СуммаДохода, 0)
		|	КОНЕЦ КАК СуммаДохода,
		|	Доходы.СуммаВычета КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо КАК Сотрудник,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО Доходы.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсобыеМесяцы КАК СтрокиБезКодаВычета
		|		ПО Доходы.ФизическоеЛицо = СтрокиБезКодаВычета.ФизическоеЛицо
		|			И Доходы.КодДохода = СтрокиБезКодаВычета.КодДохода
		|			И Доходы.Месяц = СтрокиБезКодаВычета.Месяц
		|			И (Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
		|			И Доходы.Ставка = СтрокиБезКодаВычета.Ставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыИзСтрокБезВычетов КАК ДоходыИзСтрокБезВычетов
		|		ПО Доходы.ФизическоеЛицо = ДоходыИзСтрокБезВычетов.ФизическоеЛицо
		|			И Доходы.Месяц = ДоходыИзСтрокБезВычетов.Месяц
		|			И Доходы.КодДохода = ДоходыИзСтрокБезВычетов.КодДохода
		|			И Доходы.ВключатьВДекларациюПоНалогуНаПрибыль = ДоходыИзСтрокБезВычетов.ВключатьВДекларациюПоНалогуНаПрибыль
		|			И Доходы.Ставка = ДоходыИзСтрокБезВычетов.Ставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиСУказаннымВычетом КАК СтрокиСУказаннымВычетом
		|		ПО Доходы.ФизическоеЛицо = СтрокиСУказаннымВычетом.ФизическоеЛицо
		|			И Доходы.Месяц = СтрокиСУказаннымВычетом.Месяц
		|			И Доходы.КодДохода = СтрокиСУказаннымВычетом.КодДохода
		|			И Доходы.КодВычета = СтрокиСУказаннымВычетом.КодВычета
		|			И Доходы.Ставка = СтрокиСУказаннымВычетом.Ставка
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL
		|	И СтрокиБезКодаВычета.ФизическоеЛицо ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ставка,
		|	МесяцНалоговогоПериода,
		|	Доходы.КодДоходаКодДляОтчетности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.КодВычета КАК КодВычета,
		|	Вычеты.КодВычетаГруппаВычета КАК ГруппаВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодВычетаКод,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.ФизическоеЛицо КАК Сотрудник
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО Вычеты.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL
		|	И Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета,
		|	Вычеты.ФизическоеЛицо,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодВычетаКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиОрганизаций.ФизическоеЛицо КАК Сотрудник,
		|	ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) КАК Ставка,
		|	ИтогиДоходов.ОбщаяСуммаДохода КАК ОбщаяСуммаДохода,
		|	ИтогиДоходов.ОблагаемаяСуммаДохода КАК ОблагаемаяСуммаДохода,
		|	Налоги.НачисленоЗаТекущийГод КАК Исчислено,
		|	Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод КАК ЗачтеноАвансовыхПлатежей,
		|	Налоги.УдержаноЗаТекущийГод - Налоги.ВозвращеноЗаТекущийГод КАК Удержано,
		|	ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) КАК Перечислено,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод > 0
		|			ТОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Задолженность,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод < 0
		|			ТОГДА -(Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИзлишнеУдержано,
		|	НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТФизлица КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.НДФЛСтавки КАК Ставки
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИСТИНА КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ЛОЖЬ) КАК НалогНаПрибыль
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиДоходов КАК ИтогиДоходов
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИтогиДоходов.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ИтогиДоходов.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ИтогиДоходов.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК Налоги
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = Налоги.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = Налоги.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = Налоги.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПеречисленоНДФЛ КАК ПеречисленоНДФЛ
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ПеречисленоНДФЛ.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ПеречисленоНДФЛ.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ПеречисленоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль)
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL
		|	И (ИтогиДоходов.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (ИтогиДоходов.ОбщаяСуммаДохода <> 0
		|					ИЛИ ИтогиДоходов.ОблагаемаяСуммаДохода <> 0)
		|			ИЛИ Налоги.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (Налоги.НачисленоЗаТекущийГод <> 0
		|					ИЛИ Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод <> 0)
		|			ИЛИ ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) <> 0)";		
		
	КонецЕсли;
	
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоЗапросов = Результаты.Количество();
	
	Возврат Новый Структура("Доходы, Вычеты, Налоги", 
						Результаты[ВсегоЗапросов - 3].Выгрузить(), 
						Результаты[ВсегоЗапросов - 2].Выгрузить(), 
						Результаты[ВсегоЗапросов - 1].Выгрузить());
КонецФункции

Функция СправкиНДФЛДанныеДляПечати(МассивОбъектов, ПолучатьИтоговыеСуммы = Ложь) Экспорт
	
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		ИсточникДанных = МассивОбъектов[0].Метаданные().ПолноеИмя();
	    ЭтоСправкаДляНалоговогоОргана = (ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган"));
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Если ПолучатьИтоговыеСуммы Тогда  // Требуется только для печати Реестра справок.
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки) КАК НомерСправки,
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКоличествоСправок
		|ИЗ
		|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|ГДЕ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке13) КАК ОбщаяСуммаДоходаПоСтавке13,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке13) КАК ИсчисленоПоСтавке13,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке13) КАК УдержаноПоСтавке13,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке13) КАК ПеречисленоПоСтавке13,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке30) КАК ОбщаяСуммаДоходаПоСтавке30,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке30) КАК ИсчисленоПоСтавке30,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке30) КАК УдержаноПоСтавке30,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке30) КАК ПеречисленоПоСтавке30,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке9) КАК ОбщаяСуммаДоходаПоСтавке9,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке9) КАК ИсчисленоПоСтавке9,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке9) КАК УдержаноПоСтавке9,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке9) КАК ПеречисленоПоСтавке9,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке15) КАК ОбщаяСуммаДоходаПоСтавке15,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке15) КАК ИсчисленоПоСтавке15,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке15) КАК УдержаноПоСтавке15,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке15) КАК ПеречисленоПоСтавке15,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке35) КАК ОбщаяСуммаДоходаПоСтавке35,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке35) КАК ИсчисленоПоСтавке35,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке35) КАК УдержаноПоСтавке35,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке35) КАК ПеречисленоПоСтавке35,
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка КАК Ссылка,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке5) КАК ОбщаяСуммаДоходаПоСтавке5,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке5) КАК ИсчисленоПоСтавке5,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке5) КАК УдержаноПоСтавке5,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке5) КАК ПеречисленоПоСтавке5,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке10) КАК ОбщаяСуммаДоходаПоСтавке10,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке10) КАК ИсчисленоПоСтавке10,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке10) КАК УдержаноПоСтавке10,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке10) КАК ПеречисленоПоСтавке10,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке3) КАК ОбщаяСуммаДоходаПоСтавке3,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке3) КАК ИсчисленоПоСтавке3,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке3) КАК УдержаноПоСтавке3,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке3) КАК ПеречисленоПоСтавке3,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке6) КАК ОбщаяСуммаДоходаПоСтавке6,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке6) КАК ИсчисленоПоСтавке6,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке6) КАК УдержаноПоСтавке6,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке6) КАК ПеречисленоПоСтавке6,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке7) КАК ОбщаяСуммаДоходаПоСтавке7,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке7) КАК ИсчисленоПоСтавке7,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке7) КАК УдержаноПоСтавке7,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке7) КАК ПеречисленоПоСтавке7,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке12) КАК ОбщаяСуммаДоходаПоСтавке12,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке12) КАК ИсчисленоПоСтавке12,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке12) КАК УдержаноПоСтавке12,
		|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке12) КАК ПеречисленоПоСтавке12
		|ПОМЕСТИТЬ ВТСуммыНалогов
		|ИЗ
		|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
		|ГДЕ
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.НалоговыйПериод КАК НалоговыйПериод,
		|	ДанныеДокумента.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	ДанныеДокумента.РегистрацияВНалоговомОргане.КодПоОКАТО КАК ОКАТО,
		|	ДанныеДокумента.РегистрацияВНалоговомОргане.КПП КАК КПП,
		|	ДанныеДокумента.КодИФНС КАК КодНалоговогоОргана,
		|	ДанныеДокумента.Дата КАК Дата,
		|	ДанныеДокумента.Телефон КАК Телефон,
		|	ДанныеДокумента.ДолжностьПодписавшегоЛица КАК ДолжностьПодписавшегоЛица,
		|	ДанныеДокумента.СправкуПодписал КАК СправкуПодписал,
		|	ДанныеДокумента.ОснованиеДляПредставленияСправок КАК ОснованиеДляПредставленияСправок,
		|	ДанныеДокумента.Номер КАК Номер,
		|	&ИдентификаторФайла КАК ИдентификаторФайла,
		|	&НомерКорректировки КАК НомерКорректировки,
		|	Организации.ИНН КАК ИНН,
		|	Организации.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
		|	Организации.НаименованиеПолное КАК НаименованиеПолное,
		|	Организации.НаименованиеСокращенное КАК НаименованиеСокращенное,
		|	Организации.ИндивидуальныйПредприниматель КАК ИндивидуальныйПредприниматель,
		|	Организации.КодНалоговогоОрганаПолучателя КАК КодНалоговогоОрганаПолучателя,
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ДанныеДокумента.МоментВремени КАК МоментВремени,
		|	ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке13, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке30, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке9, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке15, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке35, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке3, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке5, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке6, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке7, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке10, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке12, 0) КАК ОбщаяСуммаДохода,
		|	ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке13, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке30, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке9, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке15, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке35, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке3, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке5, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке6, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке7, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке10, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке12, 0) КАК Исчислено,
		|	ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке13, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке30, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке9, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке15, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке35, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке3, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке5, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке6, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке7, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке10, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке12, 0) КАК Удержано,
		|	ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке13, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке30, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке9, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке15, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке35, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке3, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке5, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке6, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке7, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке10, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке12, 0) КАК Перечислено,
		|	КоличествоСправок.НомерСправки КАК КоличествоСправок,
		|	ДанныеДокумента.ФормаРеорганизации КАК ФормаРеорганизации,
		|	ДанныеДокумента.ИННРеорганизованнойОрганизации КАК ИННРеорганизованнойОрганизации,
		|	ДанныеДокумента.КППРеорганизованнойОрганизации КАК КППРеорганизованнойОрганизации,
		|	ДанныеДокумента.НаименованиеРеорганизованнойОрганизации КАК НаименованиеРеорганизованнойОрганизации,
		|	ДанныеДокумента.РегистрацияВНалоговомОргане.КодПоОКТМО КАК ОКТМО,
		|	ДанныеДокумента.СпециальныйДокумент2013года КАК СпециальныйДокумент2013года
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	#ИсточникДанных КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО ДанныеДокумента.Организация = Организации.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоСправок КАК КоличествоСправок
		|		ПО ДанныеДокумента.Ссылка = КоличествоСправок.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыНалогов КАК ДанныеОНалогах
		|		ПО ДанныеДокумента.Ссылка = ДанныеОНалогах.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Ссылка В(&МассивОбъектов)";
	Иначе
	   Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	ДанныеДокумента.Организация,
	   |	ДанныеДокумента.НалоговыйПериод,
	   |	&РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	   |	ДанныеДокумента.РегистрацияВНалоговомОргане.КодПоОКАТО КАК ОКАТО,
	   |	ДанныеДокумента.РегистрацияВНалоговомОргане.КПП КАК КПП,
	   |	ДанныеДокумента.КодИФНС КАК КодНалоговогоОргана,
	   |	ДанныеДокумента.Дата,
	   |	ДанныеДокумента.Телефон,
	   |	ДанныеДокумента.ДолжностьПодписавшегоЛица,
	   |	ДанныеДокумента.СправкуПодписал,
	   |	&ОснованиеДляПредставленияСправок,
	   |	Организации.ИНН,
	   |	Организации.ЮридическоеФизическоеЛицо,
	   |	Организации.НаименованиеПолное,
	   |	Организации.НаименованиеСокращенное,
	   |	Организации.ИндивидуальныйПредприниматель,
	   |	Организации.КодНалоговогоОрганаПолучателя,
	   |	ДанныеДокумента.Ссылка,
	   |	ДанныеДокумента.МоментВремени,
	   |	ДанныеДокумента.Номер,
	   |	&ИдентификаторФайла КАК ИдентификаторФайла,
	   |	&НомерКорректировки КАК НомерКорректировки,
	   |	&ФормаРеорганизации КАК ФормаРеорганизации,
	   |	&ИННРеорганизованнойОрганизации КАК ИННРеорганизованнойОрганизации,
	   |	&КППРеорганизованнойОрганизации КАК КППРеорганизованнойОрганизации,
	   |	&НаименованиеРеорганизованнойОрганизации КАК НаименованиеРеорганизованнойОрганизации,
	   |	0 КАК ОбщаяСуммаДохода,
	   |	0 КАК Исчислено,
	   |	0 КАК Удержано,
	   |	0 КАК Перечислено,
	   |	0 КАК КоличествоСправок,
	   |	ДанныеДокумента.РегистрацияВНалоговомОргане.КодПоОКТМО КАК ОКТМО,
	   |	ДанныеДокумента.СпециальныйДокумент2013года
	   |ПОМЕСТИТЬ ВТДанныеДокументов
	   |ИЗ
	   |	#ИсточникДанных КАК ДанныеДокумента
	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	   |		ПО ДанныеДокумента.Организация = Организации.Ссылка
	   |ГДЕ
	   |	ДанныеДокумента.Ссылка В(&МассивОбъектов)";
	КонецЕсли;   
	        				   	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ИсточникДанных", ИсточникДанных);
	Если ЭтоСправкаДляНалоговогоОргана Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИдентификаторФайла", "ДанныеДокумента.ИдентификаторФайла"); 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НомерКорректировки", "ДанныеДокумента.НомерКорректировки"); 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФормаРеорганизации", "ДанныеДокумента.ФормаРеорганизации"); 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КППРеорганизованнойОрганизации", "ДанныеДокумента.КППРеорганизованнойОрганизации"); 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИННРеорганизованнойОрганизации", "ДанныеДокумента.ИННРеорганизованнойОрганизации"); 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НаименованиеРеорганизованнойОрганизации", "ДанныеДокумента.НаименованиеРеорганизованнойОрганизации"); 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РегистрацияВНалоговомОргане", "ДанныеДокумента.РегистрацияВНалоговомОргане"); 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОснованиеДляПредставленияСправок", "ДанныеДокумента.ОснованиеДляПредставленияСправок");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДанныеДокумента.РегистрацияВНалоговомОргане.КПП", "ДанныеДокумента.КППОтправки");
	Иначе	
		Запрос.УстановитьПараметр("ИдентификаторФайла", Строка(Новый УникальныйИдентификатор));
		Запрос.УстановитьПараметр("НомерКорректировки",0);
		Запрос.УстановитьПараметр("ФормаРеорганизации","");
		Запрос.УстановитьПараметр("ИННРеорганизованнойОрганизации","");
		Запрос.УстановитьПараметр("КППРеорганизованнойОрганизации","");
		Запрос.УстановитьПараметр("НаименованиеРеорганизованнойОрганизации","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РегистрацияВНалоговомОргане", "ВЫБОР
	   |		КОГДА ДанныеДокумента.СпособФормирования = ЗНАЧЕНИЕ(Перечисление.ПорядокФормированияСправкиОДоходахФизическогоЛица.ВРазрезеКодовОКАТО)
	   |			ТОГДА ДанныеДокумента.РегистрацияВНалоговомОргане
	   |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	   |	КОНЕЦ"); 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОснованиеДляПредставленияСправок", "ДанныеДокумента.СпособФормирования");
	КонецЕсли;			   
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("СправкуПодписал");
	ИменаПолейОтветственныхЛиц.Добавить("ИндивидуальныйПредприниматель");

	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов"); 	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.НалоговыйПериод КАК НалоговыйПериод,
	|	ДанныеДокументов.Дата КАК Дата,
	|	ДанныеДокументов.Телефон КАК Телефон,
	|	ДанныеДокументов.ДолжностьПодписавшегоЛица КАК ДолжностьПодписавшегоЛица,
	|	ДанныеДокументов.СправкуПодписал КАК СправкуПодписал,
	|	ДанныеДокументов.НомерКорректировки КАК НомерКорректировки,
	|	ДанныеДокументов.ОснованиеДляПредставленияСправок КАК ОснованиеДляПредставленияСправок,
	|	ДанныеДокументов.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДанныеДокументов.ИНН КАК ИНН,
	|	ДанныеДокументов.КПП КАК КПП,
	|	ДанныеДокументов.КодНалоговогоОргана КАК КодНалоговогоОргана,
	|	ДанныеДокументов.КодНалоговогоОрганаПолучателя КАК КодНалоговогоОрганаПолучателя,
	|	ДанныеДокументов.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	ДанныеДокументов.НаименованиеПолное КАК НаименованиеПолное,
	|	ДанныеДокументов.НаименованиеСокращенное КАК НаименованиеСокращенное,
	|	ДанныеДокументов.ИндивидуальныйПредприниматель КАК ИндивидуальныйПредприниматель,
	|	ДанныеДокументов.ФормаРеорганизации КАК ФормаРеорганизации,
	|	ДанныеДокументов.ИННРеорганизованнойОрганизации КАК ИННРеорганизованнойОрганизации,
	|	ДанныеДокументов.КППРеорганизованнойОрганизации КАК КППРеорганизованнойОрганизации,
	|	ДанныеДокументов.НаименованиеРеорганизованнойОрганизации КАК НаименованиеРеорганизованнойОрганизации,
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Номер КАК Номер,
	|	ЕСТЬNULL(ФИОИндивидуальныхПредпринимателей.Фамилия, """") КАК ФамилияИП,
	|	ЕСТЬNULL(ФИОИндивидуальныхПредпринимателей.Имя, """") КАК ИмяИП,
	|	ЕСТЬNULL(ФИОИндивидуальныхПредпринимателей.Отчество, """") КАК ОтчествоИП,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.НалоговыйПериод < 2015
	|			ТОГДА ЕСТЬNULL(ФИООтветственныхЛиц.РасшифровкаПодписи, """")
	|		ИНАЧЕ ЕСТЬNULL(ФИООтветственныхЛиц.ФИОПолные, """")
	|	КОНЕЦ КАК ФИОПодписавшего,
	|	ЕСТЬNULL(Должности.Наименование, """") КАК Должность,
	|	ДанныеДокументов.ОКАТО КАК ОКАТО,
	|	ДанныеДокументов.ОКТМО КАК ОКТМО,
	|	ДанныеДокументов.ОбщаяСуммаДохода КАК ОбщаяСуммаДохода,
	|	ДанныеДокументов.Исчислено КАК Исчислено,
	|	ДанныеДокументов.Удержано КАК Удержано,
	|	ДанныеДокументов.Перечислено КАК Перечислено,
	|	ДанныеДокументов.КоличествоСправок КАК КоличествоСправок,
	|	ДанныеДокументов.СпециальныйДокумент2013года КАК СпециальныйДокумент2013года,
	|	ДанныеДокументов.ИдентификаторФайла КАК ИдентификаторФайла
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОИндивидуальныхПредпринимателей
	|		ПО ДанныеДокументов.ИндивидуальныйПредприниматель = ФИОИндивидуальныхПредпринимателей.ФизическоеЛицо
	|			И ДанныеДокументов.Ссылка = ФИОИндивидуальныхПредпринимателей.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
	|		ПО ДанныеДокументов.Ссылка = ФИООтветственныхЛиц.Ссылка
	|			И ДанныеДокументов.СправкуПодписал = ФИООтветственныхЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	|		ПО ДанныеДокументов.ДолжностьПодписавшегоЛица = Должности.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.МоментВремени";

	Если Не ЭтоСправкаДляНалоговогоОргана Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОснованиеДляПредставленияСправок", "СпособФормирования");
	КонецЕсли;	
	
	ДанныеОрганизации = Запрос.Выполнить().Выбрать();
	
	ДанныеНалоговыхАгентов = Новый Соответствие;
	
	Пока ДанныеОрганизации.Следующий() Цикл 
		
		ОКТМО = ДанныеОрганизации.ОКТМО;
		Если ДанныеОрганизации.НалоговыйПериод < 2015 Тогда
			ОКТМО = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ОКТМО, 11, "-", "Справа");
		КонецЕсли;
		
		ДанныеНалоговогоАгента = Новый Структура;
		ДанныеНалоговогоАгента.Вставить("Организация", ДанныеОрганизации.Организация);
		ДанныеНалоговогоАгента.Вставить("НалоговыйПериод", ДанныеОрганизации.НалоговыйПериод);
		ДанныеНалоговогоАгента.Вставить("СпециальныйДокумент2013года", ДанныеОрганизации.СпециальныйДокумент2013года);
		ДанныеНалоговогоАгента.Вставить("НалоговыйПериодСтрокой", Формат(ДанныеОрганизации.НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
		ДанныеНалоговогоАгента.Вставить("Дата", ДанныеОрганизации.Дата);
		ДанныеНалоговогоАгента.Вставить("Телефон", ДанныеОрганизации.Телефон);
		ДанныеНалоговогоАгента.Вставить("ЭтоЮрЛицо",ЗарплатаКадры.ЭтоЮридическоеЛицо(ДанныеОрганизации.Организация)); 
		ДанныеНалоговогоАгента.Вставить("КодНалоговогоОргана", ДанныеОрганизации.КодНалоговогоОргана); 
		ДанныеНалоговогоАгента.Вставить("КодНалоговогоОрганаПолучателя", ДанныеОрганизации.КодНалоговогоОрганаПолучателя); 
		ДанныеНалоговогоАгента.Вставить("ИННорг", СокрЛП(ДанныеОрганизации.ИНН)); 
		ДанныеНалоговогоАгента.Вставить("ОКАТО", ДанныеОрганизации.ОКАТО);
		ДанныеНалоговогоАгента.Вставить("ОКТМО", ОКТМО);
		ДанныеНалоговогоАгента.Вставить("КПП", ДанныеОрганизации.КПП);
		ДанныеНалоговогоАгента.Вставить("НаименованиеПолное", ДанныеОрганизации.НаименованиеПолное);
		ДанныеНалоговогоАгента.Вставить("ФИОПодписавшего", ДанныеОрганизации.ФИОПодписавшего);
		ДанныеНалоговогоАгента.Вставить("ДолжностьПодписавшегоЛица", ДанныеОрганизации.Должность);
		ДанныеНалоговогоАгента.Вставить("Номер", ДанныеОрганизации.Номер);
		ДанныеНалоговогоАгента.Вставить("Признак");
		ДанныеНалоговогоАгента.Вставить("Фамилия");
		ДанныеНалоговогоАгента.Вставить("Имя");
		ДанныеНалоговогоАгента.Вставить("Отчество");
		ДанныеНалоговогоАгента.Вставить("ИдентификаторФайла", ДанныеОрганизации.ИдентификаторФайла);
		ДанныеНалоговогоАгента.Вставить("НомерКорректировки", ДанныеОрганизации.НомерКорректировки);
		ДанныеНалоговогоАгента.Вставить("ФормаРеорганизации", ДанныеОрганизации.ФормаРеорганизации);
		ДанныеНалоговогоАгента.Вставить("ИННРеорганизованнойОрганизации", ДанныеОрганизации.ИННРеорганизованнойОрганизации);
		ДанныеНалоговогоАгента.Вставить("КППРеорганизованнойОрганизации", ДанныеОрганизации.КППРеорганизованнойОрганизации);
		ДанныеНалоговогоАгента.Вставить("НаименованиеРеорганизованнойОрганизации", ДанныеОрганизации.НаименованиеРеорганизованнойОрганизации);
		ДанныеНалоговогоАгента.Вставить("Телефон", ДанныеОрганизации.Телефон);
			
		ДанныеПредставителя = Новый Структура("ТипПодписанта, ПредставительЮрЛицо, НаименованиеОрганизацииПредставителя, ДокументПредставителя, Фамилия, Имя, Отчество, ФИОПредставителя", "1", Истина, "", "", "", "", "", "");
		Для каждого ПолеСтруктуры Из ДанныеПредставителя Цикл
			ДанныеНалоговогоАгента.Вставить(ПолеСтруктуры.Ключ, ПолеСтруктуры.Значение);
		КонецЦикла;
		
		Если ДанныеНалоговогоАгента.ЭтоЮрЛицо Тогда
			ДанныеНалоговогоАгента.Вставить("НазваниеОрганизации", ?(ЗначениеЗаполнено(ДанныеОрганизации.НаименованиеСокращенное), ДанныеОрганизации.НаименованиеСокращенное, ДанныеОрганизации.НаименованиеПолное));
		Иначе
			ДанныеНалоговогоАгента.Вставить("НазваниеОрганизации", ДанныеОрганизации.ФамилияИП + " " + ДанныеОрганизации.ИмяИП + " " + ДанныеОрганизации.ОтчествоИП);
			ДанныеНалоговогоАгента.Фамилия = ДанныеОрганизации.ФамилияИП;
			ДанныеНалоговогоАгента.Имя = ДанныеОрганизации.ИмяИП;
			ДанныеНалоговогоАгента.Отчество = ДанныеОрганизации.ОтчествоИП;
		КонецЕсли;
		
		Если ЭтоСправкаДляНалоговогоОргана Тогда
			Если ДанныеОрганизации.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
				ДанныеНалоговогоАгента.Признак = "2"
			ИначеЕсли ДанныеОрганизации.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность Тогда
				ДанныеНалоговогоАгента.Признак = "1"
			ИначеЕсли ДанныеОрганизации.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию Тогда
				ДанныеНалоговогоАгента.Признак = "3"
			Иначе 	
				ДанныеНалоговогоАгента.Признак = "4"
			КонецЕсли;
		Иначе
			ДанныеНалоговогоАгента.Признак = ?(ДанныеОрганизации.СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно,"СводнаяСправка", "1");
		КонецЕсли;	
		
		Если ПолучатьИтоговыеСуммы Тогда
			ДанныеНалоговогоАгента.Вставить("ОбщаяСуммаДохода", ДанныеОрганизации.ОбщаяСуммаДохода);
			ДанныеНалоговогоАгента.Вставить("Исчислено", ДанныеОрганизации.Исчислено);
			ДанныеНалоговогоАгента.Вставить("Удержано", ДанныеОрганизации.Удержано);
			ДанныеНалоговогоАгента.Вставить("Перечислено", ДанныеОрганизации.Перечислено);
			ДанныеНалоговогоАгента.Вставить("КоличествоСправок", ДанныеОрганизации.КоличествоСправок);
		КонецЕсли;	
		
		Если ДанныеНалоговогоАгента.НалоговыйПериод >= 2015  Тогда
			ДанныеПредставителя = СведенияОПредставителеПоРегистрацииВНалоговомОргане(ДанныеОрганизации.РегистрацияВНалоговомОргане, ДанныеОрганизации.Дата);
			ДанныеНалоговогоАгента.ТипПодписанта = ДанныеПредставителя.ТипПодписанта;
		КонецЕсли;
		
		Если ДанныеНалоговогоАгента.ТипПодписанта = "2" И (ЭтоСправкаДляНалоговогоОргана Или Не ЗначениеЗаполнено(ДанныеНалоговогоАгента.ФИОПодписавшего)) Тогда
			ЗаполнитьЗначенияСвойств(ДанныеНалоговогоАгента, ДанныеПредставителя, "Фамилия,Имя,Отчество,ПредставительЮрЛицо,НаименованиеОрганизацииПредставителя,ДокументПредставителя");
			ДанныеНалоговогоАгента.ФИОПодписавшего = ДанныеПредставителя.ФИОПредставителя;
		КонецЕсли;
		
		ДанныеНалоговыхАгентов.Вставить(ДанныеОрганизации.Ссылка, ДанныеНалоговогоАгента);
		
	КонецЦикла;	
	
	Возврат ДанныеНалоговыхАгентов;
	
КонецФункции

Функция СформироватьПечатнуюФорму2НДФЛ(ОбъектыПечати, МассивОбъектов, ДанныеДокументов, ДанныеСотрудниковДокументов, ДанныеОДоходахДокументов, ДанныеОВычетахДокументов, ДанныеОбУведомленияхДокументов) Экспорт
	
	ПустаяСтруктураАдреса = Новый Структура("Индекс,КодРегиона,Район,Город,НаселенныйПункт,Улица,Дом,Корпус,Квартира");
		
	ТекущаяДата = ТекущаяДатаСеанса();
	
	СоответствиеСтавокДоходов = СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
	ПрочитатьКлассификаторыВСоответствия(
		СоответствиеКодовСтран, 
		СоответствиеИменСтран, 
		СоответствиеДокументовУдостоверяющихЛичность,
		СоответствиеКодовДоходов,
		СоответствиеКодовФНССтатусамНДФЛ);
		
	ТекущаяДата = ТекущаяДатаСеанса();
	ВременныйТабДокумент = Новый ТабличныйДокумент;
	ТабДокументТекущейСправки = Новый ТабличныйДокумент;
	ТабДокументТекущейСправки.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
	Справка2011 = ПолучитьОбщийМакет("Форма2НДФЛс2011");
	Справка2014 = ПолучитьОбщийМакет("Форма2НДФЛс2014");
	Справка2015 = ПолучитьОбщийМакет("Форма2НДФЛс2015");
	Справка2018 = ПолучитьОбщийМакет("Форма2НДФЛс2018");
	
	ОбластьМакетаШапкаПервойСтраницы_2011 = Справка2011.ПолучитьОбласть("ШапкаПервойСтраницы"); 
	ОбластьМакетаШапкаВторойСтраницы_2011 = Справка2011.ПолучитьОбласть("ШапкаВторойСтраницы");
	ОбластьМакетаЗаголовокРаздела3_2011 = Справка2011.ПолучитьОбласть("ЗаголовокРаздела3"); 
	ОбластьМакетаЗаголовокРаздела4_2011 = Справка2011.ПолучитьОбласть("ЗаголовокРаздела4");
	ОбластьМакетаПодвалРаздела4_2011	= Справка2011.ПолучитьОбласть("ПодвалРаздела4");
	ОбластьМакетаРаздел5_2011 = Справка2011.ПолучитьОбласть("Раздел5");
	ОбластьМакетаНалоговыйАгент_2011 = Справка2011.ПолучитьОбласть("НалоговыйАгент");
	ОбластьМакетаПримечание_2011 = Справка2011.ПолучитьОбласть("Примечание");
	
	ОбластьМакетаСтрокаВычетов_2011 = Справка2011.ПолучитьОбласть("СтрокаВычетов"); 
	ОбластьМакетаСтрокаДоходов_2011 = Справка2011.ПолучитьОбласть("СтрокаДоходов"); 
	ОбластиМакетаДляДоходов_2011 = Новый Массив;
	ОбластиМакетаДляДоходов_2011.Добавить(Справка2011.ПолучитьОбласть("СтрокаДоходов|ЛеваяЧасть"));
	ОбластиМакетаДляДоходов_2011.Добавить(Справка2011.ПолучитьОбласть("СтрокаДоходов|ПраваяЧасть"));
	ОбластиМакетаДляВычетов_2011 = Новый Массив;
	Для Сч = 1 По 4 Цикл
		ОбластиМакетаДляВычетов_2011.Добавить(Справка2011.ПолучитьОбласть("СтрокаВычетов|Вычеты"+Сч));
	КонецЦикла;		
	
	ОбластьМакетаШапкаПервойСтраницы_2014 = Справка2014.ПолучитьОбласть("ШапкаПервойСтраницы"); 
	ОбластьМакетаШапкаВторойСтраницы_2014 = Справка2014.ПолучитьОбласть("ШапкаВторойСтраницы");
	ОбластьМакетаЗаголовокРаздела3_2014 = Справка2014.ПолучитьОбласть("ЗаголовокРаздела3"); 
	ОбластьМакетаЗаголовокРаздела4_2014 = Справка2014.ПолучитьОбласть("ЗаголовокРаздела4");
	ОбластьМакетаПодвалРаздела4_2014	= Справка2014.ПолучитьОбласть("ПодвалРаздела4");
	ОбластьМакетаРаздел5_2014 = Справка2014.ПолучитьОбласть("Раздел5");
	ОбластьМакетаНалоговыйАгент_2014 = Справка2014.ПолучитьОбласть("НалоговыйАгент");
	ОбластьМакетаПримечание_2014 = Справка2014.ПолучитьОбласть("Примечание");
	
	ОбластьМакетаСтрокаВычетов_2014 = Справка2014.ПолучитьОбласть("СтрокаВычетов"); 
	ОбластьМакетаСтрокаДоходов_2014 = Справка2014.ПолучитьОбласть("СтрокаДоходов"); 
	ОбластиМакетаДляДоходов_2014 = Новый Массив;
	ОбластиМакетаДляДоходов_2014.Добавить(Справка2014.ПолучитьОбласть("СтрокаДоходов|ЛеваяЧасть"));
	ОбластиМакетаДляДоходов_2014.Добавить(Справка2014.ПолучитьОбласть("СтрокаДоходов|ПраваяЧасть"));
	ОбластиМакетаДляВычетов_2014 = Новый Массив;
	Для Сч = 1 По 4 Цикл
		ОбластиМакетаДляВычетов_2014.Добавить(Справка2014.ПолучитьОбласть("СтрокаВычетов|Вычеты"+Сч));
	КонецЦикла;		
	
	ОбластьМакетаШапкаПервойСтраницы_2015 = Справка2015.ПолучитьОбласть("ШапкаПервойСтраницы"); 
	ОбластьМакетаШапкаВторойСтраницы_2015 = Справка2015.ПолучитьОбласть("ШапкаВторойСтраницы");
	ОбластьМакетаЗаголовокРаздела3_2015 = Справка2015.ПолучитьОбласть("ЗаголовокРаздела3"); 
	ОбластьМакетаЗаголовокРаздела4_2015 = Справка2015.ПолучитьОбласть("ЗаголовокРаздела4");
	ОбластьМакетаУведомлениеНаСоцВычет_2015	= Справка2015.ПолучитьОбласть("УведомлениеНаСоцВычет");
	ОбластьМакетаУведомлениеНаИмущВычет_2015	= Справка2015.ПолучитьОбласть("УведомлениеНаИмущВычет");
	ОбластьМакетаРаздел5_2015 = Справка2015.ПолучитьОбласть("Раздел5");
	ОбластьМакетаНалоговыйАгент_2015 = Справка2015.ПолучитьОбласть("НалоговыйАгент");
	ОбластьМакетаПримечание_2015 = Справка2015.ПолучитьОбласть("Примечание");
	
	ОбластьМакетаСтрокаВычетов_2015 = Справка2015.ПолучитьОбласть("СтрокаВычетов"); 
	ОбластьМакетаСтрокаДоходов_2015 = Справка2015.ПолучитьОбласть("СтрокаДоходов"); 
	ОбластиМакетаДляДоходов_2015 = Новый Массив;
	ОбластиМакетаДляДоходов_2015.Добавить(Справка2015.ПолучитьОбласть("СтрокаДоходов|ЛеваяЧасть"));
	ОбластиМакетаДляДоходов_2015.Добавить(Справка2015.ПолучитьОбласть("СтрокаДоходов|ПраваяЧасть"));
	ОбластиМакетаДляВычетов_2015 = Новый Массив;
	Для Сч = 1 По 4 Цикл
		ОбластиМакетаДляВычетов_2015.Добавить(Справка2015.ПолучитьОбласть("СтрокаВычетов|Вычеты"+Сч));
	КонецЦикла;		
	
	ОбластьМакетаШапкаПервойСтраницы_2018 = Справка2018.ПолучитьОбласть("ШапкаПервойСтраницы"); 
	ОбластьМакетаШапкаВторойСтраницы_2018 = Справка2018.ПолучитьОбласть("ШапкаВторойСтраницы");
	ОбластьМакетаЗаголовокРаздела3_2018 = Справка2018.ПолучитьОбласть("ЗаголовокРаздела3"); 
	ОбластьМакетаЗаголовокРаздела4_2018 = Справка2018.ПолучитьОбласть("ЗаголовокРаздела4");
	ОбластьМакетаУведомлениеНаСоцВычет_2018	= Справка2018.ПолучитьОбласть("УведомлениеНаСоцВычет");
	ОбластьМакетаУведомлениеНаИмущВычет_2018	= Справка2018.ПолучитьОбласть("УведомлениеНаИмущВычет");
	ОбластьМакетаРаздел5_2018 = Справка2018.ПолучитьОбласть("Раздел5");
	ОбластьМакетаНалоговыйАгент_2018 = Справка2018.ПолучитьОбласть("НалоговыйАгент");
	ОбластьМакетаПримечание_2018 = Справка2018.ПолучитьОбласть("Примечание");
	
	ОбластьМакетаСтрокаВычетов_2018 = Справка2018.ПолучитьОбласть("СтрокаВычетов"); 
	ОбластьМакетаСтрокаДоходов_2018 = Справка2018.ПолучитьОбласть("СтрокаДоходов"); 
	ОбластиМакетаДляДоходов_2018 = Новый Массив;
	ОбластиМакетаДляДоходов_2018.Добавить(Справка2018.ПолучитьОбласть("СтрокаДоходов|ЛеваяЧасть"));
	ОбластиМакетаДляДоходов_2018.Добавить(Справка2018.ПолучитьОбласть("СтрокаДоходов|ПраваяЧасть"));
	ОбластиМакетаДляВычетов_2018 = Новый Массив;
	Для Сч = 1 По 4 Цикл
		ОбластиМакетаДляВычетов_2018.Добавить(Справка2018.ПолучитьОбласть("СтрокаВычетов|Вычеты"+Сч));
	КонецЦикла;		
	
	Для Каждого Ссылка Из МассивОбъектов  Цикл
		
		ДанныеТекущегоДокумента = ДанныеДокументов.Получить(Ссылка);
		
		Если ВыводитьФорму2НДФЛ2018Года(ДанныеТекущегоДокумента.НалоговыйПериод, ДанныеТекущегоДокумента.Дата) Тогда
			ОбластьМакетаШапкаПервойСтраницы = ОбластьМакетаШапкаПервойСтраницы_2018; 
			ОбластьМакетаШапкаВторойСтраницы = ОбластьМакетаШапкаВторойСтраницы_2018;
			ОбластьМакетаЗаголовокРаздела3 = ОбластьМакетаЗаголовокРаздела3_2018; 
			ОбластьМакетаЗаголовокРаздела4 = ОбластьМакетаЗаголовокРаздела4_2018;
			ОбластьМакетаУведомлениеНаСоцВычет = ОбластьМакетаУведомлениеНаСоцВычет_2018;
			ОбластьМакетаУведомлениеНаИмущВычет = ОбластьМакетаУведомлениеНаИмущВычет_2018;
			ОбластьМакетаРаздел5 = ОбластьМакетаРаздел5_2018;
			ОбластьМакетаНалоговыйАгент = ОбластьМакетаНалоговыйАгент_2018;
			ОбластьМакетаПримечание = ОбластьМакетаПримечание_2018;
			
			ОбластьМакетаСтрокаВычетов = ОбластьМакетаСтрокаВычетов_2018; 
			ОбластьМакетаСтрокаДоходов = ОбластьМакетаСтрокаДоходов_2018; 
			ОбластиМакетаДляДоходов = ОбластиМакетаДляДоходов_2018;
			ОбластиМакетаДляВычетов = ОбластиМакетаДляВычетов_2018;			
		ИначеЕсли ДанныеТекущегоДокумента.НалоговыйПериод >= 2015 Тогда			
			ОбластьМакетаШапкаПервойСтраницы = ОбластьМакетаШапкаПервойСтраницы_2015; 
			ОбластьМакетаШапкаВторойСтраницы = ОбластьМакетаШапкаВторойСтраницы_2015;
			ОбластьМакетаЗаголовокРаздела3 = ОбластьМакетаЗаголовокРаздела3_2015; 
			ОбластьМакетаЗаголовокРаздела4 = ОбластьМакетаЗаголовокРаздела4_2015;
			ОбластьМакетаУведомлениеНаСоцВычет = ОбластьМакетаУведомлениеНаСоцВычет_2015;
			ОбластьМакетаУведомлениеНаИмущВычет = ОбластьМакетаУведомлениеНаИмущВычет_2015;
			ОбластьМакетаРаздел5 = ОбластьМакетаРаздел5_2015;
			ОбластьМакетаНалоговыйАгент = ОбластьМакетаНалоговыйАгент_2015;
			ОбластьМакетаПримечание = ОбластьМакетаПримечание_2015;
			
			ОбластьМакетаСтрокаВычетов = ОбластьМакетаСтрокаВычетов_2015; 
			ОбластьМакетаСтрокаДоходов = ОбластьМакетаСтрокаДоходов_2015; 
			ОбластиМакетаДляДоходов = ОбластиМакетаДляДоходов_2015;
			ОбластиМакетаДляВычетов = ОбластиМакетаДляВычетов_2015;			
		ИначеЕсли УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(ДанныеТекущегоДокумента) Тогда			
			ОбластьМакетаШапкаПервойСтраницы = ОбластьМакетаШапкаПервойСтраницы_2014; 
			ОбластьМакетаШапкаВторойСтраницы = ОбластьМакетаШапкаВторойСтраницы_2014;
			ОбластьМакетаЗаголовокРаздела3 = ОбластьМакетаЗаголовокРаздела3_2014; 
			ОбластьМакетаЗаголовокРаздела4 = ОбластьМакетаЗаголовокРаздела4_2014;
			ОбластьМакетаУведомлениеНаСоцВычет = ОбластьМакетаПодвалРаздела4_2014;
			ОбластьМакетаУведомлениеНаИмущВычет = ОбластьМакетаПодвалРаздела4_2014;
			ОбластьМакетаРаздел5 = ОбластьМакетаРаздел5_2014;
			ОбластьМакетаНалоговыйАгент = ОбластьМакетаНалоговыйАгент_2014;
			ОбластьМакетаПримечание = ОбластьМакетаПримечание_2014;
			
			ОбластьМакетаСтрокаВычетов = ОбластьМакетаСтрокаВычетов_2014; 
			ОбластьМакетаСтрокаДоходов = ОбластьМакетаСтрокаДоходов_2014; 
			ОбластиМакетаДляДоходов = ОбластиМакетаДляДоходов_2014;
			ОбластиМакетаДляВычетов = ОбластиМакетаДляВычетов_2014;			
		Иначе
			ОбластьМакетаШапкаПервойСтраницы = ОбластьМакетаШапкаПервойСтраницы_2011; 
			ОбластьМакетаШапкаВторойСтраницы = ОбластьМакетаШапкаВторойСтраницы_2011;
			ОбластьМакетаЗаголовокРаздела3 = ОбластьМакетаЗаголовокРаздела3_2011; 
			ОбластьМакетаЗаголовокРаздела4 = ОбластьМакетаЗаголовокРаздела4_2011;
			ОбластьМакетаУведомлениеНаСоцВычет = ОбластьМакетаПодвалРаздела4_2011;
			ОбластьМакетаУведомлениеНаИмущВычет = ОбластьМакетаПодвалРаздела4_2011;
			ОбластьМакетаРаздел5 = ОбластьМакетаРаздел5_2011;
			ОбластьМакетаНалоговыйАгент = ОбластьМакетаНалоговыйАгент_2011;
			ОбластьМакетаПримечание = ОбластьМакетаПримечание_2011;
			
			ОбластьМакетаСтрокаВычетов = ОбластьМакетаСтрокаВычетов_2011; 
			ОбластьМакетаСтрокаДоходов = ОбластьМакетаСтрокаДоходов_2011; 
			ОбластиМакетаДляДоходов = ОбластиМакетаДляДоходов_2011;
			ОбластиМакетаДляВычетов = ОбластиМакетаДляВычетов_2011;
		КонецЕсли;	

		ОбластьМакетаШапкаПервойСтраницы.Параметры.Заполнить(ДанныеТекущегоДокумента);  // Раздел 1
		Если ВыводитьФорму2НДФЛ2018Года(ДанныеТекущегоДокумента.НалоговыйПериод, ДанныеТекущегоДокумента.Дата) И ЗначениеЗаполнено(ДанныеТекущегоДокумента.ФормаРеорганизации) Тогда
			ОбластьМакетаШапкаПервойСтраницы.Параметры.НазваниеОрганизации = ДанныеТекущегоДокумента.НаименованиеРеорганизованнойОрганизации
		КонецЕсли;
		Если ДанныеТекущегоДокумента.Признак = "СводнаяСправка" Тогда
			ОбластьМакетаШапкаПервойСтраницы.Область("ОбластьСправкаВИФНС").Видимость = Ложь;
			ОбластьМакетаШапкаПервойСтраницы.Область("ОбластьСводнойСправки").Видимость = Истина;
		Иначе
			ОбластьМакетаШапкаПервойСтраницы.Область("ОбластьСправкаВИФНС").Видимость = Истина;
			ОбластьМакетаШапкаПервойСтраницы.Область("ОбластьСводнойСправки").Видимость = Ложь;
		КонецЕсли;
		
		// последующие страницы
		ОбластьМакетаШапкаВторойСтраницы.Параметры.Заполнить(ОбластьМакетаШапкаПервойСтраницы.Параметры);
		ОбластьМакетаНалоговыйАгент.Параметры.Заполнить(ДанныеТекущегоДокумента); // подписи
				
		СтрокиДанныхПоСотрудникам = ДанныеСотрудниковДокументов.Скопировать(Новый Структура("Ссылка", Ссылка));
		СтрокиДанныхПоСотрудникам.Сортировать("НомерСправки");
				
		Для каждого СтрокаДанных Из СтрокиДанныхПоСотрудникам Цикл 
			
			ВсегоИтогов = 0;
			Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
				Если УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
					ВсегоИтогов = ВсегоИтогов + 1;
				КонецЕсли;
				
			КонецЦикла;	

			СтруктураОтбора = Новый Структура("Ссылка, Сотрудник", Ссылка, СтрокаДанных.НомерСправки); 
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
			ДоходыПоВидам = ДанныеОДоходахДокументов.Скопировать(СтруктураОтбора);
			ВычетыПоВидам = ДанныеОВычетахДокументов.Скопировать(СтруктураОтбора);
			Уведомления = ДанныеОбУведомленияхДокументов.Скопировать(СтруктураОтбора);
					
			ДоходыПоВидам.Колонки.Добавить("КодДоходаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(4)));
			ДоходыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
			ДоходыПоВидам.Сортировать("Ставка, МесяцНалоговогоПериода, КодДохода, СуммаДохода Убыв, КодВычета");
			ПредыдущийМесяц = -1;
			ПредыдущийКодДохода = "";
			ПредыдущаяСтавкаДохода = "";
			Для каждого СтрокаТЗ Из ДоходыПоВидам Цикл
				Если ПредыдущийМесяц <> СтрокаТЗ.МесяцНалоговогоПериода 
					Или ПредыдущийКодДохода <> СтрокаТЗ.КодДохода 
					Или ПредыдущаяСтавкаДохода <> СтрокаТЗ.Ставка Тогда
					СтрокаТЗ.КодДоходаСтрокой = СоответствиеКодовДоходов[СтрокаТЗ.КодДохода];
					ПредыдущийМесяц = СтрокаТЗ.МесяцНалоговогоПериода;
					ПредыдущийКодДохода = СтрокаТЗ.КодДохода;
					ПредыдущаяСтавкаДохода = СтрокаТЗ.Ставка;
				Иначе
					СтрокаТЗ.МесяцНалоговогоПериода = 0;
				КонецЕсли;
				СтрокаТЗ.КодВычетаСтрокой = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(ДанныеТекущегоДокумента.НалоговыйПериод, СтрокаТЗ.КодВычета);
			КонецЦикла;
			ВычетыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
			ВычетыПоВидам.Колонки.Добавить("ГруппаВычета", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыВычетовПоНДФЛ"));
			Для каждого СтрокаТЗ Из ВычетыПоВидам Цикл
				СтрокаТЗ.КодВычетаСтрокой = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(ДанныеТекущегоДокумента.НалоговыйПериод, СтрокаТЗ.КодВычета);
				СтрокаТЗ.ГруппаВычета = УчетНДФЛПовтИсп.ГруппаВычета(СтрокаТЗ.КодВычета);
			КонецЦикла;
			
			ТабДокументТекущейСправки.Очистить();
			Если ТабДокумент.ВысотаТаблицы > 0 Тогда  // Если справок несколько - разобьем на отдельные страницы.
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьМакетаУведомлениеНаСоцВычет);
				ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьМакетаУведомлениеНаИмущВычет);
			КонецЕсли;
			
			// Заполнение данных в параметрах макета.
			
			ОбластьМакетаШапкаПервойСтраницы.Параметры.Заполнить(СтрокаДанных);  // Раздел 2
			Описание = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
			Если Описание <> Неопределено Тогда
				ОбластьМакетаШапкаПервойСтраницы.Параметры.Статус = ?(ДанныеТекущегоДокумента.НалоговыйПериод < 2015, Описание.КодФНС, Описание.КодФНС_2015);
			КонецЕсли;
			ОбластьМакетаШапкаПервойСтраницы.Параметры.Гражданство = СоответствиеКодовСтран[СтрокаДанных.Гражданство];
			Описание = СоответствиеДокументовУдостоверяющихЛичность.Получить(СтрокаДанных.ВидДокумента);
			Если Описание <> Неопределено Тогда
				ОбластьМакетаШапкаПервойСтраницы.Параметры.КодУдЛичн = ?(ДанныеТекущегоДокумента.НалоговыйПериод < 2015, Описание.КодМВД, Описание.КодМВД_2015);
			КонецЕсли;
			
			Если ВыводитьФорму2НДФЛ2018Года(ДанныеТекущегоДокумента.НалоговыйПериод, ДанныеТекущегоДокумента.Дата) Тогда			
				
			Иначе
				Если ЗначениеЗаполнено(СтрокаДанных.Адрес) Тогда
					СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
					СтрокаДанных.Адрес, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
					ОбластьМакетаШапкаПервойСтраницы.Параметры.Заполнить(СтруктураАдреса);  
					Если СтруктураАдреса.Свойство("Регион") Тогда
						КодРегиона = АдресныйКлассификатор.КодРегионаПоНаименованию(СтруктураАдреса.Регион);
						Если КодРегиона <> Неопределено Тогда
							КодРегионаСтрокой = "";
							Если ТипЗнч(КодРегиона) = Тип("Число") Тогда
								КодРегионаСтрокой = Формат(КодРегиона, "ЧЦ=2; ЧВН=; ЧГ=");		
							ИначеЕсли ТипЗнч(КодРегиона) = Тип("Строка") Тогда 	
								КодРегионаСтрокой = КодРегиона;	
							КонецЕсли;	
						КонецЕсли;	
						
						ОбластьМакетаШапкаПервойСтраницы.Параметры.КодРегиона = КодРегионаСтрокой;
					КонецЕсли;	
				Иначе // очищаем адресные данные
					ОбластьМакетаШапкаПервойСтраницы.Параметры.Заполнить(ПустаяСтруктураАдреса);  
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДанных.АдресЗарубежом) Тогда
					СтруктураАдреса = РаботаСАдресами.ПредыдущаяСтруктураКонтактнойИнформацииXML(
					СтрокаДанных.АдресЗаРубежом, Справочники.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица);
					ОбластьМакетаШапкаПервойСтраницы.Параметры.КодСтр = СоответствиеИменСтран[СтруктураАдреса.Страна];
					ОбластьМакетаШапкаПервойСтраницы.Параметры.АдрТекст = СтруктураАдреса.Представление;
				Иначе // очищаем адресные данные
					ОбластьМакетаШапкаПервойСтраницы.Параметры.КодСтр = "";
					ОбластьМакетаШапкаПервойСтраницы.Параметры.АдрТекст = "";
				КонецЕсли;
			КонецЕсли;
			
			ОбластьМакетаРаздел5.Параметры.Заполнить(СтрокаДанных); // Реквизиты Уведомления о зачете ав.платежей Раздела 5.
			
			// Вывод подготовленной справки в табличный документ.
			
			ТабДокументТекущейСправки.Вывести(ОбластьМакетаШапкаПервойСтраницы);
			
			ПерваяСтавка = Истина;
			ОбластьМакетаШапкаВторойСтраницы.Параметры.НомерСтраницы = 1;
			ВыведеноИтогов = 0;
			
			Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
				Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
					Продолжить;
				КонецЕсли;	
				
				ВыведеноИтогов = ВыведеноИтогов + 1;
				
				ВременныйТабДокумент.Очистить();
				
				// Раздел 3
				
				ОбластьМакетаЗаголовокРаздела3.Параметры.Ставка = СтавкаНДФЛ;
		
				ВременныйТабДокумент.Вывести(ОбластьМакетаЗаголовокРаздела3);
				
				ДоходыПоСтавке = СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, ДанныеТекущегоДокумента.НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				Если ДоходыПоСтавке.Количество() = 0 Тогда
					ВременныйТабДокумент.Вывести(ОбластьМакетаСтрокаДоходов);
				Иначе
					ВывестиТабличныеДанные(ДоходыПоСтавке, ВременныйТабДокумент, ОбластиМакетаДляДоходов, 1, 2, "КодДоходаСтрокой");
				КонецЕсли;
				ВывестиРазделВСправку(ТабДокументТекущейСправки, ВременныйТабДокумент, Ложь, ОбластьМакетаНалоговыйАгент, ОбластьМакетаПримечание, ОбластьМакетаШапкаВторойСтраницы);
				
				// Раздел 4
				Если ПерваяСтавка Тогда
				
					ВременныйТабДокумент.Очистить();
					
					ВременныйТабДокумент.Вывести(ОбластьМакетаЗаголовокРаздела4);
					Если ВычетыПоВидам.Количество() = 0 Или СтавкаНДФЛ <> Перечисления.НДФЛСтавки.Ставка13 Тогда
						ВременныйТабДокумент.Вывести(ОбластьМакетаСтрокаВычетов);
						Если ДанныеТекущегоДокумента.НалоговыйПериод >= 2015 Тогда
							ВременныйТабДокумент.Вывести(ОбластьМакетаУведомлениеНаСоцВычет);
						КонецЕсли;
						ВременныйТабДокумент.Вывести(ОбластьМакетаУведомлениеНаИмущВычет);
					Иначе
						ВычетыПоВидам.Сортировать("КодВычета");
						ВывестиТабличныеДанные(ВычетыПоВидам, ВременныйТабДокумент, ОбластиМакетаДляВычетов, 1, 4);
						Если ВычетыПоВидам.Найти(Перечисления.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО, "ГруппаВычета") <> Неопределено Тогда
							ВывестиУведомления(ВременныйТабДокумент, ОбластьМакетаУведомлениеНаСоцВычет, Уведомления, Перечисления.ГруппыВычетовПоНДФЛ.Социальные)
						ИначеЕсли ДанныеТекущегоДокумента.НалоговыйПериод >= 2015 Тогда	
							ВременныйТабДокумент.Вывести(ОбластьМакетаУведомлениеНаСоцВычет);
						КонецЕсли;
						Если ВычетыПоВидам.Найти(Перечисления.ГруппыВычетовПоНДФЛ.Имущественные, "ГруппаВычета") <> Неопределено Тогда
							ВывестиУведомления(ВременныйТабДокумент, ОбластьМакетаУведомлениеНаИмущВычет, Уведомления, Перечисления.ГруппыВычетовПоНДФЛ.Имущественные)
						Иначе	
							ВременныйТабДокумент.Вывести(ОбластьМакетаУведомлениеНаИмущВычет);
						КонецЕсли;
					КонецЕсли;
					
					ВывестиРазделВСправку(ТабДокументТекущейСправки, ВременныйТабДокумент, Ложь, ОбластьМакетаНалоговыйАгент, ОбластьМакетаПримечание, ОбластьМакетаШапкаВторойСтраницы);
					
					ПерваяСтавка = Ложь;
					
				КонецЕсли;
				
				// Раздел 5
				ВременныйТабДокумент.Очистить();
				
				Если ДанныеТекущегоДокумента.НалоговыйПериод < 2015 Тогда
					ОбластьМакетаРаздел5.Параметры.Ставка = СтавкаНДФЛ;
				КонецЕсли;
				
				ОбластьМакетаРаздел5.Параметры.ОбщаяСуммаДохода = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ); 
				ОбластьМакетаРаздел5.Параметры.ОблагаемаяСуммаДохода = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
				ОбластьМакетаРаздел5.Параметры.Исчислено = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
				Если ДанныеТекущегоДокумента.НалоговыйПериод >= 2015 Тогда
					ОбластьМакетаРаздел5.Параметры.ЗачтеноАвансовыхПлатежей = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ЗачтеноАвансовыхПлатежей", СтавкаНДФЛ);
				КонецЕсли;
				ОбластьМакетаРаздел5.Параметры.Удержано = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
		  		ОбластьМакетаРаздел5.Параметры.Перечислено = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				ОбластьМакетаРаздел5.Параметры.Задолженность = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
				ОбластьМакетаРаздел5.Параметры.ИзлишнеУдержано = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);

				ВременныйТабДокумент.Вывести(ОбластьМакетаРаздел5);
				ВывестиРазделВСправку(ТабДокументТекущейСправки, ВременныйТабДокумент, ВыведеноИтогов = ВсегоИтогов, ОбластьМакетаНалоговыйАгент, ОбластьМакетаПримечание, ОбластьМакетаШапкаВторойСтраницы);
				
			КонецЦикла;
			
			ТабДокументТекущейСправки.Вывести(ОбластьМакетаНалоговыйАгент);
			ТабДокументТекущейСправки.Вывести(ОбластьМакетаПримечание);
			ТабДокумент.Вывести(ТабДокументТекущейСправки);
			
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТабДокумент;

КонецФункции

Процедура ВывестиУведомления(ТабДокумент, ОбластьМакета, Уведомления, ГруппаВычета)

	СтрокиУведомлений = Уведомления.НайтиСтроки(Новый Структура("ГруппаВычета", ГруппаВычета));
	Для каждого СтрокаУведомления Из СтрокиУведомлений Цикл
		ОбластьМакета.Параметры.Заполнить(СтрокаУведомления);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиРазделВСправку(ТабДокумент, Раздел, ЭтоПоследнийРаздел, ОбластьНалоговыйАгент, ОбластьПримечание, ШапкаВторойСтраницы)
	
	ВыводимыеОбласти = Новый Массив;
	ВыводимыеОбласти.Добавить(Раздел);
	ВыводимыеОбласти.Добавить(ОбластьНалоговыйАгент);
	
	ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
	Если Не ВывестиПодвалЛиста И ЭтоПоследнийРаздел Тогда
		ВыводимыеОбласти.Добавить(ОбластьПримечание);
		ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
	КонецЕсли;
	Если ВывестиПодвалЛиста Тогда
		ТабДокумент.Вывести(ОбластьНалоговыйАгент);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ШапкаВторойСтраницы.Параметры.НомерСтраницы = ШапкаВторойСтраницы.Параметры.НомерСтраницы + 1;
		ТабДокумент.Вывести(ШапкаВторойСтраницы);
	КонецЕсли;
	
	ТабДокумент.Вывести(Раздел);
	
КонецПроцедуры

Процедура ВывестиТабличныеДанные(МассивСтрок, ДокументРезультат, ОбластиМакета, Знач МинимумСтрок, КоличествоКолонок = 2, ПроверяемоеПоле = "")

	ВсегоСтрок = МассивСтрок.Количество();
	
	Для каждого Область Из ОбластиМакета Цикл
		ОчиститьПараметрыОбластиТабличногоДокумента(Область);
	КонецЦикла;
	
	ЛеваяЧастьМакета = ОбластиМакета[0];
	
	// Вычислим высоту таблицы
	ВысотаТаблицы = ?(ВсегоСтрок < МинимумСтрок, ВсегоСтрок, ?(ВсегоСтрок > МинимумСтрок * КоличествоКолонок, ?(Цел(ВсегоСтрок / КоличествоКолонок) - ВсегоСтрок / КоличествоКолонок = 0, ВсегоСтрок / КоличествоКолонок, Цел(ВсегоСтрок / КоличествоКолонок) + 1), МинимумСтрок));
	
	// Иногда строки доходов не надо переносить в правый столбец печ.формы.
	Если КоличествоКолонок = 2 И ЗначениеЗаполнено(ПроверяемоеПоле) И ВсегоСтрок > ВысотаТаблицы Тогда
		ПерваяСтрокаВторойКолонки = ВысотаТаблицы + 1;
		Для Сч = ПерваяСтрокаВторойКолонки По ВсегоСтрок Цикл
			Если ЗначениеЗаполнено(МассивСтрок[Сч - 1][ПроверяемоеПоле]) Тогда
				Прервать;
			Иначе
				ВысотаТаблицы = ВысотаТаблицы + 1
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Сч = 1 По ВысотаТаблицы Цикл
		
		// перенесем данные
		ЛеваяЧастьМакета.Параметры.Заполнить(МассивСтрок[Сч - 1]);
		Если ВсегоСтрок > МинимумСтрок Тогда  // правая часть
			Для СчКолонок = 2 По КоличествоКолонок Цикл
				Если ВысотаТаблицы * (СчКолонок - 1) + Сч <= ВсегоСтрок Тогда
					ОбластиМакета[СчКолонок - 1].Параметры.Заполнить(МассивСтрок[ВысотаТаблицы * (СчКолонок - 1) + Сч - 1]);
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		// выведем области макета
		ДокументРезультат.Вывести(ЛеваяЧастьМакета);	
		Для СчКолонок = 2 По КоличествоКолонок Цикл
			ДокументРезультат.Присоединить(ОбластиМакета.Получить(СчКолонок - 1));	
		КонецЦикла;
		
		Для каждого Область Из ОбластиМакета Цикл
			ОчиститьПараметрыОбластиТабличногоДокумента(Область);
		КонецЦикла;
		
	КонецЦикла;
	
	// Довыведем пустые строки раздела.
	Если ВысотаТаблицы < МинимумСтрок Тогда
		Для Сч = ВысотаТаблицы + 1 По МинимумСтрок Цикл
			ДокументРезультат.Вывести(ЛеваяЧастьМакета);	
			Для СчКолонок = 2 По КоличествоКолонок Цикл
				ДокументРезультат.Присоединить(ОбластиМакета[СчКолонок - 1]);	
			КонецЦикла; 
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьПараметрыОбластиТабличногоДокумента(Область) Экспорт
	
	Для Параметр = 0 По Область.Параметры.Количество() -1 Цикл
		Область.Параметры[Параметр] = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

Функция СправкиНДФЛИзвлечьДоходыПоСтавке(Ставка, НалоговыйПериод, СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов) Экспорт
	
	Если ДоходыПоВидам.Колонки.Найти("Ставка") <> Неопределено Тогда
		
		ТаблицаПодходящихДоходов = ДоходыПоВидам.Скопировать(Новый Структура("Ставка",Ставка))
		
	Иначе
		
		ТаблицаПодходящихДоходов = ДоходыПоВидам.СкопироватьКолонки();
		
		Для каждого СтрокаТЗ Из ДоходыПоВидам Цикл
			
			СтавкаНалогообложенияРезидента = СоответствиеСтавокДоходов[СтрокаТЗ.КодДохода];
			
			СтавкаДохода = СтавкаНДФЛ(СтавкаНалогообложенияРезидента, СтрокаТЗ.КодДохода, СтатусНалогоплательщика, НалоговыйПериод);
			
			Если СтавкаДохода = Ставка Тогда
				ЗаполнитьЗначенияСвойств(ТаблицаПодходящихДоходов.Добавить(), СтрокаТЗ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат	ТаблицаПодходящихДоходов
	
КонецФункции

Функция РегистрацииВНалоговомОрганеПоОрганизации(Организация, НалоговыйПериод) Экспорт 

	Возврат РегистрацииОрганизацииОтчетногоПериода(Организация, Дата(НалоговыйПериод, 1, 1), Дата(НалоговыйПериод, 12, 31));
	
КонецФункции

Функция СуммаОКАТОиКПП(КодПоОКАТО, КПП) Экспорт 

	Возврат СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КодПоОКАТО, 11, " ", "Справа") + "/" + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КПП, 9, " ", "Справа")

КонецФункции

Функция СуммаОКТМОиКПП(КодПоОКТМО, КПП) Экспорт 

	Возврат СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КодПоОКТМО, 11, " ", "Справа") + "/" + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КПП, 9, " ", "Справа")

КонецФункции

Функция ОписаниеДоходовОрганизации(Организация, НалоговыйПериод, ДатаПодачиСведений, ФизическоеЛицо = Неопределено, ДляНалогаНаПрибыль = Ложь, НеВключатьДоходыПоЦеннымБумагам = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
		
	Если ФизическоеЛицо = Неопределено Тогда
		УсловиеФизическоеЛицо = "ИСТИНА";
	Иначе
		УсловиеФизическоеЛицо = "НДФЛСведенияОДоходах.ФизическоеЛицо = &ФизическоеЛицо";
	КонецЕсли;	
	Если ДляНалогаНаПрибыль = Истина Тогда
		УсловиеКодДохода = "НДФЛСведенияОДоходах.ВключатьВДекларациюПоНалогуНаПрибыль";
	ИначеЕсли НеВключатьДоходыПоЦеннымБумагам = Истина Тогда
		УсловиеКодДохода = "НЕ НДФЛСведенияОДоходах.ВключатьВДекларациюПоНалогуНаПрибыль";
	Иначе
		УсловиеКодДохода = "ИСТИНА";
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация" ,Организация);
	Запрос.УстановитьПараметр("ГодНП", НалоговыйПериод);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("ДатаПодачиСведений",?(ДатаПодачиСведений = '00010101', ТекущаяДатаСеанса(), ДатаПодачиСведений));
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДФЛСведенияОДоходах.РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК НДФЛСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО (Организации.Ссылка = &Организация)
	|			И (ВЫБОР
	|				КОГДА Организации.Ссылка = Организации.ГоловнаяОрганизация
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ НДФЛСведенияОДоходах.Организация = Организации.Ссылка
	|			КОНЕЦ)
	|			И НДФЛСведенияОДоходах.ГоловнаяОрганизация = Организации.ГоловнаяОрганизация
	|ГДЕ
	|	ГОД(НДФЛСведенияОДоходах.МесяцНалоговогоПериода) = &ГодНП
	|	И НДФЛСведенияОДоходах.Период < &ДатаПодачиСведений
	|	И НДФЛСведенияОДоходах.СуммаДохода <> 0
	|	И &УсловиеКодДохода
	|	И &УсловиеФизическоеЛицо";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", УсловиеФизическоеЛицо);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеКодДохода", УсловиеКодДохода);
	
	Выборка = Запрос.Выполнить().Выбрать();

	ОписаниеДоходов = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.РегистрацияВНалоговомОргане) Тогда
			ОписаниеДоходов.Вставить(Выборка.РегистрацияВНалоговомОргане, Истина);	
		Иначе
			ОписаниеДоходов.Вставить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат ОписаниеДоходов;
	
КонецФункции 

Функция ПолучитьСтруктуруПроверяемыхДанныхФизическихЛиц() Экспорт
	Возврат Новый Структура("ИНН, Адрес, Фамилия, Имя, ДатаРождения, АдресЗарубежом, СтатусНалогоплательщика, Гражданство");	
КонецФункции	

Функция ПолучитьПредставлениеПроверяемыхРеквизитовФизическихЛиц() Экспорт 
	ПредставленияПроверяемыхРеквизитов = Новый Структура;
	
	ПредставленияПроверяемыхРеквизитов.Вставить("ИНН", НСтр("ru = 'не заполнен ИНН'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("Адрес", НСтр("ru = 'не заполнен адрес'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("Фамилия", НСтр("ru = 'не указана фамилия'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("Имя", НСтр("ru = 'не указано имя'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("ДатаРождения",   НСтр("ru = 'не заполнена дата рождения'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("ВидДокумента", НСтр("ru = 'не указан вид документа'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("СерияДокумента", НСтр("ru = 'не заполнена серия документа'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("НомерДокумента", НСтр("ru = 'не заполнен номер документа'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("ДатаВыдачи", НСтр("ru = 'не заполнена дата выдачи документа'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("КемВыдан", НСтр("ru = 'не указано кем выдан документ'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("СтатусНалогоплательщика",  НСтр("ru = 'не указан статус налогоплательщика'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("Гражданство",  НСтр("ru = 'не указано гражданство'"));
	
	Возврат ПредставленияПроверяемыхРеквизитов;
	
КонецФункции	

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта() Экспорт 
	СоответствиеРеквизитовФормеОбъекта = Новый Структура;
	СоответствиеРеквизитовФормеОбъекта.Вставить("Фамилия", "Наименование");
	СоответствиеРеквизитовФормеОбъекта.Вставить("Имя", "Наименование");
	СоответствиеРеквизитовФормеОбъекта.Вставить("ДатаРождения", "ДатаРождения");
	СоответствиеРеквизитовФормеОбъекта.Вставить("Адрес",  "");
	СоответствиеРеквизитовФормеОбъекта.Вставить("ВидДокумента", "ВидДокумента");
	СоответствиеРеквизитовФормеОбъекта.Вставить("СерияДокумента", "Серия");
	СоответствиеРеквизитовФормеОбъекта.Вставить("НомерДокумента", "Номер");
	СоответствиеРеквизитовФормеОбъекта.Вставить("ИНН", "ИНН");
	СоответствиеРеквизитовФормеОбъекта.Вставить("Гражданство", "ГражданствоФизическихЛицСтрана");
	СоответствиеРеквизитовФормеОбъекта.Вставить("СтатусНалогоплательщика",  ""); 
		
	Возврат СоответствиеРеквизитовФормеОбъекта;
КонецФункции	

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	СоответствиеРеквизитовПутиВФормеОбъекта = Новый Структура;
	
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Фамилия", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Имя", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Пол",   "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ДатаРождения",   "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ВидДокумента", "ДокументыФизическихЛиц");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("СерияДокумента", "ДокументыФизическихЛиц");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("НомерДокумента", "ДокументыФизическихЛиц");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ИНН", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Гражданство", "ГражданствоФизическихЛиц");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Адрес",  "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("АдресЗаРубежом",  "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("СтатусНалогоплательщика",  ""); 
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
КонецФункции	

Функция КодыДоходовПоЦеннымБумагам(НалоговыйПериод) Экспорт
	
	Возврат УчетНДФЛПовтИсп.КодыДоходовПоЦеннымБумагам(НалоговыйПериод)
	
КонецФункции

Функция ПоляТаблицыПоВидамВычетов() Экспорт

	// Определяем соответствие видов вычетов полям таблицы.
	ВидыВычетов = ВидыВычетовПоПолямТаблицы();
	ПоляТаблицы = Новый Соответствие;
	Для каждого КлючИЗначение Из ВидыВычетов Цикл
		ПоляТаблицы.Вставить(КлючИЗначение.Значение, КлючИЗначение.Ключ);
	КонецЦикла; 
	
	Возврат ПоляТаблицы	

КонецФункции

Функция ТаблицаПримененныеВычетыНДФЛ() Экспорт
	
	ПримененныеВычеты = Новый ТаблицаЗначений;
	ПримененныеВычеты.Колонки.Добавить("ИдентификаторСтрокиНДФЛ", Новый ОписаниеТипов("Число"));
	ПримененныеВычеты.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	ПримененныеВычеты.Колонки.Добавить("РазмерВычета", Новый ОписаниеТипов("Число"));
	
	Возврат ПримененныеВычеты;
	
КонецФункции

#КонецОбласти

#Область АлгоритмыПрошлыхЛет

// Дополняет данные о ставке налогообложения, используемой для резидентов РФ, 
// сведениями о реальной ставке обложения с учетом налогового статуса физического лица.
// В менеджер временных таблиц помещается таблица ВТСтавкаНДФЛПоСтавкеРезидента с уникальными записями с полями:
//		ФизическоеЛицо.
//		Статус
//		Период, переданная на вход дата
//		КодДохода, тип СправочникСсылка.ВидыДоходовНДФЛ
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента
//		СтавкаНДФЛ, тип ПеречислениеСсылка.НДФЛСтавки
//		СтавкаЧислом, тип Число, например, 0.13.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицу с полями:
//		ФизическоеЛицо
//		Период, дата на которую будет определен статус налогоплательщика
//		КодДохода, тип СправочникСсылка.ВидыДоходовНДФЛ
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента.
//	ИмяТаблицы - строка - имя обрабатываемой временной таблицы.
//	УчитыватьСтатусНаКонецГода - строка - необязательный, описание того, как следует учитывать изменение 
//		статуса на конец налогового периода, возможные значения:
//			"НеУчитыватьИзмененияСтатуса" (значение по умолчанию)
//			"УчитыватьИзмененияСтатусаДляРасчета"
//			"УчитыватьИзмененияСтатусаДляОтчетности"
//	МесяцКонцаГода - число - необязательный, описывает продолжительность отчетного (расчетного) периода в месяцах, налоговому периоду (год) соответствует значение 12
//
Процедура СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(МенеджерВременныхТаблиц, ИмяТаблицы, УчитыватьСтатусНаКонецГода = "НеУчитыватьИзмененияСтатуса", МесяцКонцаГода = 12) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", ДатаИзмененияНалогообложенияДивидендов());
	Запрос.УстановитьПараметр("ДатаЗакона285ФЗ", ДатаЗакона285ФЗ());
	Запрос.УстановитьПараметр("ДатаИзмененияПорядкаИсчисленияДляИностранцев", ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев());
	Запрос.УстановитьПараметр("УчитыватьИзмененияСтатусаДляРасчета", УчитыватьСтатусНаКонецГода = "УчитыватьИзмененияСтатусаДляРасчета");
	Запрос.УстановитьПараметр("НеУчитыватьИзмененияСтатуса", УчитыватьСтатусНаКонецГода <> "УчитыватьИзмененияСтатусаДляРасчета" И УчитыватьСтатусНаКонецГода <> "УчитыватьИзмененияСтатусаДляОтчетности");
	
	СоздатьВТСтавкиНалогаЧислом(Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ФизическиеЛицаПериоды.ФизическоеЛицо,
	|	ФизическиеЛицаПериоды.Период,
	|	ВЫБОР
	|		КОГДА ФизическиеЛицаПериоды.Период < &ДатаЗакона285ФЗ
	|				И СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|		ИНАЧЕ ЕСТЬNULL(СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ ВТФизическиеЛицаСтатусыНДФЛ
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СписокФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		МАКСИМУМ(СтатусФизическихЛиц.Период) КАК ПериодСтатуса,
	|		СписокФизическихЛиц.Период КАК Период
	|	ИЗ
	|		#ТаблицаНДФЛ КАК СписокФизическихЛиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛиц
	|			ПО СписокФизическихЛиц.ФизическоеЛицо = СтатусФизическихЛиц.ФизическоеЛицо
	|				И (ВЫБОР
	|					КОГДА СписокФизическихЛиц.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|						ТОГДА КОНЕЦПЕРИОДА(СписокФизическихЛиц.Период, МЕСЯЦ)
	|					ИНАЧЕ СписокФизическихЛиц.Период
	|				КОНЕЦ >= СтатусФизическихЛиц.Период)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокФизическихЛиц.ФизическоеЛицо,
	|		СписокФизическихЛиц.Период) КАК ФизическиеЛицаПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛицКакНалогоплательщиковНДФЛ
	|		ПО ФизическиеЛицаПериоды.ФизическоеЛицо = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо
	|			И ФизическиеЛицаПериоды.ПериодСтатуса = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Период";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Запрос.Выполнить();
	
	Если УчитыватьСтатусНаКонецГода = "УчитыватьИзмененияСтатусаДляРасчета" Или УчитыватьСтатусНаКонецГода = "УчитыватьИзмененияСтатусаДляОтчетности" Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ФизическиеЛицаПериоды.ФизическоеЛицо,
		|	ФизическиеЛицаПериоды.Период,
		|	ВЫБОР
		|		КОГДА ФизическиеЛицаПериоды.Период < &ДатаЗакона285ФЗ
		|				И СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
		|		ИНАЧЕ ЕСТЬNULL(СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|	КОНЕЦ КАК Статус
		|ПОМЕСТИТЬ ВТСтатусыНаКонецГода
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		СписокФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|		МАКСИМУМ(СтатусФизическихЛиц.Период) КАК ПериодСтатуса,
		|		СписокФизическихЛиц.Период КАК Период
		|	ИЗ
		|		#ТаблицаНДФЛ КАК СписокФизическихЛиц
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛиц
		|			ПО СписокФизическихЛиц.ФизическоеЛицо = СтатусФизическихЛиц.ФизическоеЛицо
		|				И (КОНЕЦПЕРИОДА(СписокФизическихЛиц.Период, ГОД) >= СтатусФизическихЛиц.Период)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СписокФизическихЛиц.ФизическоеЛицо,
		|		СписокФизическихЛиц.Период) КАК ФизическиеЛицаПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛицКакНалогоплательщиковНДФЛ
		|		ПО ФизическиеЛицаПериоды.ФизическоеЛицо = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо
		|			И ФизическиеЛицаПериоды.ПериодСтатуса = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Период";
		Если МесяцКонцаГода <> 12 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КОНЕЦПЕРИОДА(СписокФизическихЛиц.Период, ГОД)","ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СписокФизическихЛиц.Период, ГОД), МЕСЯЦ, " + МесяцКонцаГода + "), СЕКУНДА, -1)")
		КонецЕсли;
	Иначе 	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ФизическиеЛицаПериоды.ФизическоеЛицо,
		|	ФизическиеЛицаПериоды.Период,
		|	ФизическиеЛицаПериоды.Статус
		|ПОМЕСТИТЬ ВТСтатусыНаКонецГода
		|ИЗ
		|	ВТФизическиеЛицаСтатусыНДФЛ КАК ФизическиеЛицаПериоды";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Период,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА &НеУчитыватьИзмененияСтатуса
	|				ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|			КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = СтатусыНаКонецГода.Статус
	|				ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|			КОГДА СтатусыНаКонецГода.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			КОГДА &УчитыватьИзмененияСтатусаДляРасчета
	|				ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|			КОГДА ТаблицаНДФЛ.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|				ТОГДА СтатусыНаКонецГода.Статус
	|			КОГДА СтатусыНаКонецГода.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|				ТОГДА ВЫБОР
	|						КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|						ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|					КОНЕЦ
	|			КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|			ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|		КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус
	|ПОМЕСТИТЬ ВТСтатусыСУчетомИзменений
	|ИЗ
	|	#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСтатусыНДФЛ КАК ФизическиеЛицаСтатусыНДФЛ
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|			И ТаблицаНДФЛ.Период = ФизическиеЛицаСтатусыНДФЛ.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыНаКонецГода КАК СтатусыНаКонецГода
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = СтатусыНаКонецГода.ФизическоеЛицо
	|			И ТаблицаНДФЛ.Период = СтатусыНаКонецГода.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ФизическиеЛицаСтатусыНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|				КОНЕЦ
	|		КОГДА ТаблицаНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|					КОГДА ТаблицаНДФЛ.Период >= &ДатаИзмененияНалогообложенияДивидендов
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ КАК СтавкаНДФЛ
	|ПОМЕСТИТЬ ВТБезСтавкиНалогаЧислом
	|ИЗ
	|	#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыСУчетомИзменений КАК ФизическиеЛицаСтатусыНДФЛ
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|			И ТаблицаНДФЛ.Период = ФизическиеЛицаСтатусыНДФЛ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ТаблицаНДФЛ.СтавкаНДФЛ,
	|	СтавкиНалогаЧислом.Размер КАК СтавкаЧислом
	|ПОМЕСТИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
	|ИЗ
	|	ВТБезСтавкиНалогаЧислом КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНалогаЧислом КАК СтавкиНалогаЧислом
	|		ПО ТаблицаНДФЛ.СтавкаНДФЛ = СтавкиНалогаЧислом.СтавкаНалогообложения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтатусыНаКонецГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизическиеЛицаСтатусыНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтавкиНалогаЧислом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтатусыСУчетомИзменений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБезСтавкиНалогаЧислом";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Запрос.Выполнить();

КонецПроцедуры

// Возвращает структуру, содержащую таблицы значений с
// данными о доходах, налогах, вычетах.
//
// Параметры:
// 	Сотрудники - Массив - содержит физических лиц, по которым необходимо получить данные.
//	НалоговыйПериод - Число - номер года налогового периода.
//	Организация - организация, по которой получать доходы.
//	РегистрацияВНалоговомОргане - (необязательный), ссылка на регистрацию в налоговом органе, 
//									по которой отбирать данные.
//	Дата - Дата - (необязательный), дата ограничивающая период получаемых данных о доходах налогах и вычетах
//			если не задана, ограничением будет выступать текущая дата сеанса.
//
// Возвращаемое значение:
//	Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			Сотрудник,
//			МесяцНалоговогоПериода,
//			КодДохода,
//			КодДоходаКодДляОтчетности,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Вычеты - таблица значений с колонками:
//			Сотрудник
//			КодВычета,
//			КодВычетаКод,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Налоги - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			ОбщаяСуммаДохода,
//			ОблагаемаяСуммаДохода,
//			Исчислено,
//			Удержано,
//			Задолженность,
//			ИзлишнеУдержано,
//			Перечислено,
//			ВключатьВДекларациюПоНалогуНаПрибыль
Функция ДанныеОДоходахНалогахВычетахСПомесячнойСтавкой(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане, ДатаАктуальности, ПодробныеДанные)
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаЗакона229ФЗ", ДатаЗакона229ФЗ());
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	НачалоНалоговогоПериода = Дата(НалоговыйПериод, 1, 1);
	КонецНалоговогоПериода = КонецГода(НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецНП",КонецНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоНП", НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоСледующегоНП", КонецНалоговогоПериода + 1); // Начало следующего налогового периода.
	Запрос.УстановитьПараметр("ДатаПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности));
	Запрос.УстановитьПараметр("ДатаДоПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности) - 1);
	Запрос.УстановитьПараметр("ЧитатьСводныеДанные", РегистрацияВНалоговомОргане = Неопределено);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", ДатаИзмененияНалогообложенияДивидендов());
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(Дата(НалоговыйПериод,1,1)), НачалоМесяца(КонецГода(Дата(НалоговыйПериод,1,1))),,, "ВТПериодыНалогаНаДоходы");
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, Сотрудники, "СтатусНалогоплательщика", КонецНалоговогоПериода);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК СписокСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.ФизическоеЛицо,
	|	Статусы.СтатусНалогоплательщика
	|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецГода
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК Статусы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТПериодыСрезаСтатусов
	|ИЗ
	|	ВТФизлица КАК Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыНалогаНаДоходы КАК Периоды
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТПериодыСрезаСтатусов");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, "СтатусНалогоплательщика");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РезидентствоФизлицНаКонецМесяца.ФизическоеЛицо,
	|	РезидентствоФизлицНаКонецМесяца.Период КАК МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА РезидентствоФизлицНаКонецМесяца.Период < &ДатаЗакона229ФЗ
	|			ТОГДА ЕСТЬNULL(РезидентствоФизлицНаКонецГода.СтатусНалогоплательщика, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|		ИНАЧЕ РезидентствоФизлицНаКонецМесяца.СтатусНалогоплательщика
	|	КОНЕЦ КАК ТекущийСтатус,
	|	ЕСТЬNULL(РезидентствоФизлицНаКонецГода.СтатусНалогоплательщика, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус
	|ПОМЕСТИТЬ ВТСтатусы
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК РезидентствоФизлицНаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецГода КАК РезидентствоФизлицНаКонецГода
	|		ПО РезидентствоФизлицНаКонецМесяца.ФизическоеЛицо = РезидентствоФизлицНаКонецГода.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК Месяц,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДоходаКодДляОтчетности,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|	КОНЕЦ КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.СуммаВычета = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.Сотрудник
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизлица КАК Сотрудники
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|			И (СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (&ЧитатьСводныеДанные
	|					И СведенияОДоходахНДФЛ.Организация = &Организация
	|				ИЛИ СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|			И (СведенияОДоходахНДФЛ.Период <= &ДатаПодачиСведений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета КАК КодВычета,
	|	СУММА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма) КАК СуммаОборот,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|ИЗ
	|	ВТФизлица КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ПО Сотрудники.ФизическоеЛицо = ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период <= &ДатаПодачиСведений
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
	|	И (&ЧитатьСводныеДанные
	|				И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
	|			ИЛИ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета КАК КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.СуммаОборот КАК СуммаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета.ГруппаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТВычеты
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.КодВычета,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	СотрудникиОрганизаций.ФизическоеЛицо,
	|	ИмущественныеВычетыНДФЛ.КодВычета.ГруппаВычета,
	|	ЛОЖЬ,
	|	ИмущественныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.МесяцРегистрации, МЕСЯЦ),
	|	ИмущественныеВычетыНДФЛ.Подразделение,
	|	ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТФизлица КАК СотрудникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИмущественныеВычетыНДФЛ.ФизическоеЛицо
	|			И (ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И (ИмущественныеВычетыНДФЛ.Период <= &ДатаПодачиСведений)
	|			И (ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (ИмущественныеВычетыНДФЛ.Год = &ГодНП)
	|			И (&ЧитатьСводныеДанные
	|					И ИмущественныеВычетыНДФЛ.Организация = &Организация
	|				ИЛИ ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
	|	НДФЛРасчетыСБюджетом.ВариантУдержания,
	|	НДФЛРасчетыСБюджетом.ВидДвижения,
	|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД) КАК Период,
	|	НДФЛРасчетыСБюджетом.Сумма,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НДФЛРасчетыСБюджетом.Регистратор,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	НДФЛРасчетыСБюджетом.Подразделение
	|ПОМЕСТИТЬ ВТСтрокиНалогов
	|ИЗ
	|	ВТФизлица КАК СправкиОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НДФЛРасчетыСБюджетом
	|		ПО СправкиОДоходах.ФизическоеЛицо = НДФЛРасчетыСБюджетом.ФизическоеЛицо
	|			И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (НДФЛРасчетыСБюджетом.Период < &ДатаПодачиСведений)
	|			И (НДФЛРасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (&ЧитатьСводныеДанные
	|					И НДФЛРасчетыСБюджетом.Организация = &Организация
	|				ИЛИ НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) КАК Период,
	|	Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Доходы.КодДохода КАК КодДохода,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТДоходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, ГОД),
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
	|	Вычеты.ФизическоеЛицо
	|ИЗ
	|	ВТВычеты КАК Вычеты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНалогов.Период,
	|	СтрокиНалогов.СтавкаНалогообложенияРезидента,
	|	СтрокиНалогов.КодДохода,
	|	СтрокиНалогов.ФизическоеЛицо
	|ИЗ
	|	ВТСтрокиНалогов КАК СтрокиНалогов";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета");
	
	Если ПодробныеДанные Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.КодВычета,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
		|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
		|	Доходы.Регистратор КАК Регистратор,
		|	Доходы.РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение,
		|	Доходы.Сотрудник КАК Сотрудник,
		|	Доходы.МесяцНалоговогоПериода КАК ДатаПолученияДохода
		|ИЗ
		|	ВТДоходы КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И (КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) = СтавкаНДФЛПоСтавкеРезидента.Период)
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	(НЕ Доходы.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ПериодРегистрации,
		|	Доходы.Сотрудник,
		|	Доходы.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение,
		|	Доходы.КодВычета,
		|	Доходы.Регистратор,
		|	Доходы.МесяцНалоговогоПериода
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Доходы.СуммаДохода) <> 0
		|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	Ставка,
		|	ПериодРегистрации,
		|	Регистратор,
		|	Сотрудник,
		|	ДатаПолученияДохода,
		|	КодДохода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Вычеты.ПериодРегистрации КАК ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ДатаПолученияДохода,
		|	Вычеты.Подразделение,
		|	Вычеты.Регистратор КАК Регистратор,
		|	Вычеты.КодВычета КАК КодВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|ГДЕ
		|	Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	Вычеты.ПериодРегистрации,
		|	Вычеты.Регистратор,
		|	Вычеты.ФизическоеЛицо,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ)
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	ДатаПолученияДохода,
		|	КодВычета,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.Регистратор,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
		|	НДФЛРасчетыСБюджетом.Подразделение,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Начислено,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Зачтено,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.Подразделение,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.Регистратор,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СУММА(ДоходыИВычеты.ОбщаяСуммаДохода) КАК ОбщаяСуммаДохода,
		|	СУММА(ДоходыИВычеты.ОблагаемаяСуммаДохода) КАК ОблагаемаяСуммаДохода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТИтогиДоходов
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) КАК Период,
		|		Доходы.СуммаДохода КАК ОбщаяСуммаДохода,
		|		Доходы.СуммаДохода - Доходы.СуммаВычета КАК ОблагаемаяСуммаДохода,
		|		Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|		Доходы.КодДохода КАК КодДохода,
		|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТДоходы КАК Доходы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, ГОД),
		|		0,
		|		-Вычеты.СуммаВычета,
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
		|		ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
		|		Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Вычеты.ФизическоеЛицо
		|	ИЗ
		|		ВТВычеты КАК Вычеты) КАК ДоходыИВычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО ДоходыИВычеты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И ДоходыИВычеты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И ДоходыИВычеты.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И ДоходыИВычеты.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК НачисленоЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА (НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|						ИЛИ НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом))
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК УдержаноЗаТекущийГод,
		|	0 КАК ВозвращеноЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ПереданоНаВзысканиеЗаТекущийГод,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СУММА(НДФЛРасчетыСБюджетом.Сумма) КАК Налог,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТУдержаноНДФЛПо13или30ПоМесяцам
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = Статусы.ФизическоеЛицо
		|			И (НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) = Статусы.МесяцНалоговогоПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|	И НДФЛРасчетыСБюджетом.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|	И НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|	И ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|				ТОГДА ИСТИНА
		|			КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|				ТОГДА ВЫБОР
		|						КОГДА Статусы.ТекущийСтатус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
		|								И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= &ДатаИзмененияНалогообложенияДивидендов
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОГДА Статусы.ТекущийСтатус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоНДФЛПоМесяцам
		|ИЗ
		|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Обороты(
		|			&НачалоНП,
		|			&ДатаДоПодачиСведений,
		|			,
		|			ФизическоеЛицо В
		|					(ВЫБРАТЬ
		|						ФизическиеЛица.ФизическоеЛицо
		|					ИЗ
		|						ВТФизлица КАК ФизическиеЛица)
		|				И (МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				И (&ЧитатьСводныеДанные
		|						И Организация = &Организация
		|					ИЛИ РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|	КОНЕЦ КАК СтавкаПоСтатусу,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) КАК УдержаноНДФЛПоСтавке30,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0) КАК УдержаноНДФЛПоСтавке13,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоПоСтавке13_30
		|ИЗ
		|	ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке13
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке13.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке13.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке13.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке13.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке30
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке30.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке30.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке30.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке30.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = Статусы.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = Статусы.МесяцНалоговогоПериода
		|ГДЕ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Перечислено.Ставка,
		|	СУММА(Перечислено.Сумма) КАК Сумма,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоНДФЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК Сумма,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|	ГДЕ
		|		НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ПеречисленоПоСтавке13_30.СуммаРасход - (ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0)))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПеречисленоПоСтавке13_30.СтавкаПоСтатусу,
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30) КАК Перечислено
		|
		|СГРУППИРОВАТЬ ПО
		|	Перечислено.Ставка,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|
		|ИМЕЮЩИЕ
		|	СУММА(Перечислено.Сумма) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.КодВычета,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТДоходыПоМесяцам
		|ИЗ
		|	ВТДоходы КАК Доходы
		|ГДЕ
		|	Доходы.Месяц ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодВычета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц
		|ПОМЕСТИТЬ ВТОсобыеМесяцы
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) = 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	МАКСИМУМ(Доходы.КодВычета) КАК КодВычета
		|ПОМЕСТИТЬ ВТСтрокиСУказаннымВычетом
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|ГДЕ
		|	Доходы.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТДоходыИзСтрокБезВычетов
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|ГДЕ
		|	Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК МесяцНалоговогоПериода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодВычета КАК КодВычета,
		|	Доходы.СуммаДохода + ВЫБОР
		|		КОГДА СтрокиСУказаннымВычетом.ФизическоеЛицо ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДоходыИзСтрокБезВычетов.СуммаДохода, 0)
		|	КОНЕЦ КАК СуммаДохода,
		|	Доходы.СуммаВычета КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо КАК Сотрудник,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсобыеМесяцы КАК СтрокиБезКодаВычета
		|		ПО Доходы.ФизическоеЛицо = СтрокиБезКодаВычета.ФизическоеЛицо
		|			И Доходы.КодДохода = СтрокиБезКодаВычета.КодДохода
		|			И Доходы.Месяц = СтрокиБезКодаВычета.Месяц
		|			И (Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыИзСтрокБезВычетов КАК ДоходыИзСтрокБезВычетов
		|		ПО Доходы.ФизическоеЛицо = ДоходыИзСтрокБезВычетов.ФизическоеЛицо
		|			И Доходы.Месяц = ДоходыИзСтрокБезВычетов.Месяц
		|			И Доходы.КодДохода = ДоходыИзСтрокБезВычетов.КодДохода
		|			И Доходы.ВключатьВДекларациюПоНалогуНаПрибыль = ДоходыИзСтрокБезВычетов.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиСУказаннымВычетом КАК СтрокиСУказаннымВычетом
		|		ПО Доходы.ФизическоеЛицо = СтрокиСУказаннымВычетом.ФизическоеЛицо
		|			И Доходы.Месяц = СтрокиСУказаннымВычетом.Месяц
		|			И Доходы.КодДохода = СтрокиСУказаннымВычетом.КодДохода
		|			И Доходы.КодВычета = СтрокиСУказаннымВычетом.КодВычета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И (КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) = СтавкаНДФЛПоСтавкеРезидента.Период)
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	СтрокиБезКодаВычета.ФизическоеЛицо ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Доходы.КодДоходаКодДляОтчетности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета КАК ГруппаВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодВычетаКод,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.ФизическоеЛицо КАК Сотрудник
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|ГДЕ
		|	Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета,
		|	Вычеты.ФизическоеЛицо,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодВычетаКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиОрганизаций.ФизическоеЛицо КАК Сотрудник,
		|	ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) КАК Ставка,
		|	ИтогиДоходов.ОбщаяСуммаДохода,
		|	ИтогиДоходов.ОблагаемаяСуммаДохода,
		|	Налоги.НачисленоЗаТекущийГод КАК Исчислено,
		|	Налоги.УдержаноЗаТекущийГод - Налоги.ВозвращеноЗаТекущийГод КАК Удержано,
		|	ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) КАК Перечислено,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод > 0
		|			ТОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Задолженность,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод < 0
		|			ТОГДА -(Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИзлишнеУдержано,
		|	НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТФизлица КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.НДФЛСтавки КАК Ставки
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИСТИНА КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ЛОЖЬ) КАК НалогНаПрибыль
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиДоходов КАК ИтогиДоходов
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИтогиДоходов.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ИтогиДоходов.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ИтогиДоходов.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК Налоги
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = Налоги.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = Налоги.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = Налоги.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПеречисленоНДФЛ КАК ПеречисленоНДФЛ
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ПеречисленоНДФЛ.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ПеречисленоНДФЛ.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ПеречисленоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль)
		|ГДЕ
		|	(ИтогиДоходов.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (ИтогиДоходов.ОбщаяСуммаДохода <> 0
		|					ИЛИ ИтогиДоходов.ОблагаемаяСуммаДохода <> 0)
		|			ИЛИ Налоги.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (Налоги.НачисленоЗаТекущийГод <> 0
		|					ИЛИ Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод <> 0)
		|			ИЛИ ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) <> 0)";		
	КонецЕсли;
	
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоЗапросов = Результаты.Количество();
	
	Возврат Новый Структура("Доходы, Вычеты, Налоги", 
						Результаты[ВсегоЗапросов - 3].Выгрузить(), 
						Результаты[ВсегоЗапросов - 2].Выгрузить(), 
						Результаты[ВсегоЗапросов - 1].Выгрузить());
	
КонецФункции

// Возвращает структуру, содержащую таблицы значений с
// данными о доходах, налогах, вычетах.
//
// Параметры:
// 	Сотрудники - Массив - содержит физических лиц, по которым необходимо получить данные.
//	НалоговыйПериод - Число - номер года налогового периода.
//	Организация - организация, по которой получать доходы.
//	РегистрацияВНалоговомОргане - (необязательный), ссылка на регистрацию в налоговом органе, 
//									по которой отбирать данные.
//	ДатаАктуальности - Дата - (необязательный), дата ограничивающая период получаемых данных о доходах налогах и вычетах
//			если не задана, ограничением будет выступать текущая дата сеанса.
//	ПодробныеДанные - Булево - определяет подробность возвращаемых данных.
//
// Возвращаемое значение:
//	В варианте ПодробныеДанные = Ложь. Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			МесяцНалоговогоПериода,
//			КодДохода,
//			КодДоходаКодДляОтчетности,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Вычеты - таблица значений с колонками:
//			Сотрудник
//			КодВычета,
//			КодВычетаКод,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Налоги - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			ОбщаяСуммаДохода,
//			ОблагаемаяСуммаДохода,
//			Исчислено,
//			Удержано,
//			Задолженность,
//			ИзлишнеУдержано,
//			Перечислено,
//			ВключатьВДекларациюПоНалогуНаПрибыль
//
//	В варианте ПодробныеДанные = Истина. Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			ФизическоеЛицо,
//			Сотрудник,
//			Ставка,
//			КодДохода,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ПериодРегистрации,
//			СтавкаНалогообложенияРезидента,
//			Регистратор,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода,
//		Вычеты - таблица значений с колонками:
//			ФизическоеЛицо
//			КодВычета,
//			СуммаВычета,
//			ПериодРегистрации,
//			Регистратор,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода,
//		Налоги - таблица значений с колонками:
//			ФизическоеЛицо,
//			Ставка,
//			СтавкаНалогообложенияРезидента,
//			Начислено,
//			Зачтено,
//			Регистратор,
//			ПериодРегистрации,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода
//
Функция ДанныеОДоходахНалогахВычетах2016(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане = Неопределено, ДатаАктуальности = '00010101', КППОтправки = Неопределено, ПодробныеДанные = Ложь) Экспорт
	
	Если НалоговыйПериод < Год(ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев()) Тогда
		Возврат ДанныеОДоходахНалогахВычетахСПомесячнойСтавкой(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане, ДатаАктуальности, ПодробныеДанные)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	НачалоНалоговогоПериода = Дата(НалоговыйПериод, 1, 1);
	КонецНалоговогоПериода = КонецГода(НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецНП",КонецНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоНП", НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоСледующегоНП", КонецНалоговогоПериода + 1); // Начало следующего налогового периода.
	Запрос.УстановитьПараметр("ДатаПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности));
	Запрос.УстановитьПараметр("ДатаДоПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности) - 1);
	Запрос.УстановитьПараметр("ЧитатьСводныеДанные", РегистрацияВНалоговомОргане = Неопределено Или ПодробныеДанные);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	УчитыватьПереездВДругуюИФНС = ЗначениеЗаполнено(РегистрацияВНалоговомОргане) И ЗначениеЗаполнено(КППОтправки) И Не ПодробныеДанные И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КПП") <> КППОтправки;
	Запрос.УстановитьПараметр("УчитыватьПереездВДругуюИФНС", УчитыватьПереездВДругуюИФНС);
	Запрос.УстановитьПараметр("КППОтправки", КППОтправки);
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.Ссылка КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	Справочник.ФизическиеЛица КАК СписокСотрудников
	|ГДЕ
	|	СписокСотрудников.Ссылка В(&Сотрудники)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК Месяц,
	|	КОНЕЦПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, ГОД) КАК КонецГода,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДоходаКодДляОтчетности,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|	КОНЕЦ КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.СуммаВычета = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизлица КАК Сотрудники
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|			И (СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (&ЧитатьСводныеДанные
	|					И СведенияОДоходахНДФЛ.Организация = &Организация
	|				ИЛИ СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|			И (СведенияОДоходахНДФЛ.Период <= &ДатаПодачиСведений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета КАК КодВычета,
	|	СУММА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма) КАК СуммаОборот,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|ИЗ
	|	ВТФизлица КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ПО Сотрудники.ФизическоеЛицо = ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период <= &ДатаПодачиСведений
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
	|	И (&ЧитатьСводныеДанные
	|				И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
	|			ИЛИ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета КАК КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.СуммаОборот КАК СуммаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета.ГруппаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТВычеты
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.КодВычета,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	СотрудникиОрганизаций.ФизическоеЛицо,
	|	ИмущественныеВычетыНДФЛ.КодВычета.ГруппаВычета,
	|	ЛОЖЬ,
	|	ИмущественныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.МесяцРегистрации, МЕСЯЦ),
	|	ИмущественныеВычетыНДФЛ.Подразделение,
	|	ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТФизлица КАК СотрудникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИмущественныеВычетыНДФЛ.ФизическоеЛицо
	|			И (ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И (ИмущественныеВычетыНДФЛ.МесяцРегистрации <= &ДатаПодачиСведений)
	|			И (ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (ИмущественныеВычетыНДФЛ.Год = &ГодНП)
	|			И (&ЧитатьСводныеДанные
	|					И ИмущественныеВычетыНДФЛ.Организация = &Организация
	|				ИЛИ ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
	|	НДФЛРасчетыСБюджетом.ВариантУдержания,
	|	НДФЛРасчетыСБюджетом.ВидДвижения,
	|	НДФЛРасчетыСБюджетом.Сумма,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НДФЛРасчетыСБюджетом.Регистратор,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	НДФЛРасчетыСБюджетом.Подразделение
	|ПОМЕСТИТЬ ВТСтрокиНалогов
	|ИЗ
	|	ВТФизлица КАК СправкиОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НДФЛРасчетыСБюджетом
	|		ПО СправкиОДоходах.ФизическоеЛицо = НДФЛРасчетыСБюджетом.ФизическоеЛицо
	|			И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (НДФЛРасчетыСБюджетом.Период < &ДатаПодачиСведений)
	|			И (НДФЛРасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (&ЧитатьСводныеДанные
	|					И НДФЛРасчетыСБюджетом.Организация = &Организация
	|				ИЛИ НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Перечислено.Ставка,
	|	Перечислено.ФизическоеЛицо,
	|	СУММА(Перечислено.СуммаРасход) КАК СуммаРасход,
	|	Перечислено.МесяцНалоговогоПериода,
	|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Перечислено.ИсчисленоПоДивидендам
	|ПОМЕСТИТЬ ВТПеречисленоНДФЛПоМесяцам
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК СуммаРасход,
	|		КОНЕЦПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам КАК ИсчисленоПоДивидендам
	|	ИЗ
	|		РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Обороты(
	|				&НачалоНП,
	|				&ДатаДоПодачиСведений,
	|				,
	|				ФизическоеЛицо В
	|						(ВЫБРАТЬ
	|							ФизическиеЛица.ФизическоеЛицо
	|						ИЗ
	|							ВТФизлица КАК ФизическиеЛица)
	|					И (МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|					И (&ЧитатьСводныеДанные
	|							И Организация = &Организация
	|						ИЛИ РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты) КАК Перечислено
	|
	|СГРУППИРОВАТЬ ПО
	|	Перечислено.Ставка,
	|	Перечислено.ФизическоеЛицо,
	|	Перечислено.МесяцНалоговогоПериода,
	|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Перечислено.ИсчисленоПоДивидендам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ДатаПолученияДохода КАК Период,
	|	Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Доходы.КодДохода КАК КодДохода,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТДоходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Вычеты.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
	|	Вычеты.ФизическоеЛицо
	|ИЗ
	|	ВТВычеты КАК Вычеты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНалогов.МесяцНалоговогоПериода,
	|	СтрокиНалогов.СтавкаНалогообложенияРезидента,
	|	СтрокиНалогов.КодДохода,
	|	СтрокиНалогов.ФизическоеЛицо
	|ИЗ
	|	ВТСтрокиНалогов КАК СтрокиНалогов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеречисленоНДФЛПоМесяцам.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
	|	ПеречисленоНДФЛПоМесяцам.ФизическоеЛицо
	|ИЗ
	|	ВТПеречисленоНДФЛПоМесяцам КАК ПеречисленоНДФЛПоМесяцам
	|ГДЕ
	|	НЕ ПеречисленоНДФЛПоМесяцам.ИсчисленоПоДивидендам
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеречисленоНДФЛПоМесяцам.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010),
	|	ПеречисленоНДФЛПоМесяцам.ФизическоеЛицо
	|ИЗ
	|	ВТПеречисленоНДФЛПоМесяцам КАК ПеречисленоНДФЛПоМесяцам
	|ГДЕ
	|	ПеречисленоНДФЛПоМесяцам.ИсчисленоПоДивидендам";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "НеУчитыватьИзмененияСтатуса");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ТаблицаНДФЛ.СтавкаНДФЛ,
	|	ТаблицаНДФЛ.СтавкаЧислом
	|ПОМЕСТИТЬ ВТСтавкаНДФЛБезУчетаИзмененияСтатуса
	|ИЗ
	|	ВТСтавкаНДФЛПоСтавкеРезидента КАК ТаблицаНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "УчитыватьИзмененияСтатусаДляОтчетности");
	
	Если ПодробныеДанные Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
		|	Доходы.Сотрудник КАК Сотрудник,
		|	Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение КАК Подразделение,
		|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	Доходы.Регистратор КАК Регистратор,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.КодВычета,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета
		|ИЗ
		|	ВТДоходы КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	(НЕ Доходы.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ПериодРегистрации,
		|	Доходы.Сотрудник,
		|	Доходы.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение,
		|	Доходы.КодВычета,
		|	Доходы.Регистратор,
		|	Доходы.ДатаПолученияДохода
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Доходы.СуммаДохода) <> 0
		|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	Ставка,
		|	ПериодРегистрации,
		|	Сотрудник,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	ДатаПолученияДохода,
		|	КодДохода,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Вычеты.ПериодРегистрации КАК ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ДатаПолученияДохода,
		|	Вычеты.Подразделение,
		|	Вычеты.Регистратор КАК Регистратор,
		|	Вычеты.КодВычета КАК КодВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|ГДЕ
		|	Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	Вычеты.ПериодРегистрации,
		|	Вычеты.Регистратор,
		|	Вычеты.ФизическоеЛицо,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ)
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	ДатаПолученияДохода,
		|	КодВычета,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации КАК ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	НДФЛРасчетыСБюджетом.Регистратор КАК Регистратор,
		|	НДФЛРасчетыСБюджетом.Подразделение КАК Подразделение,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Начислено,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Зачтено,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.Регистратор,
		|	НДФЛРасчетыСБюджетом.Подразделение,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	Ставка,
		|	ПериодРегистрации,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	ДатаПолученияДохода,
		|	Регистратор";
		
	Иначе
		
		Если УчитыватьПереездВДругуюИФНС Тогда
			
			СформироватьВТФизическиеЛицаСУчетомПереездаВИнойНО(КППОтправки, Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "КонецГода");
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Доходы.ФизическоеЛицо
			|ПОМЕСТИТЬ ВТЛишниеФизическиеЛица
			|ИЗ
			|	ВТФизлица КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСУчетомПереездаВИнойНО КАК ФизическиеЛицаСУчетомПереездаВИнойНО
			|		ПО Доходы.ФизическоеЛицо = ФизическиеЛицаСУчетомПереездаВИнойНО.ФизическоеЛицо
			|ГДЕ
			|	ФизическиеЛицаСУчетомПереездаВИнойНО.ФизическоеЛицо ЕСТЬ NULL ";
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТЛишниеФизическиеЛица";
			
		КонецЕсли;
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.СуммаДохода,
		|	Доходы.СуммаВычета,
		|	Доходы.КодВычета,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Доходы.Регистратор,
		|	Доходы.ДатаПолученияДохода
		|ПОМЕСТИТЬ ВТДоходыОбъектаОбложения
		|ИЗ
		|	ВТДоходы КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	(НЕ Доходы.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СУММА(ДоходыИВычеты.ОбщаяСуммаДохода) КАК ОбщаяСуммаДохода,
		|	СУММА(ДоходыИВычеты.ОблагаемаяСуммаДохода) КАК ОблагаемаяСуммаДохода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТИтогиДоходов
		|ИЗ
		|	(ВЫБРАТЬ
		|		Доходы.ДатаПолученияДохода КАК Период,
		|		Доходы.СуммаДохода КАК ОбщаяСуммаДохода,
		|		Доходы.СуммаДохода - Доходы.СуммаВычета КАК ОблагаемаяСуммаДохода,
		|		Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|		Доходы.КодДохода КАК КодДохода,
		|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТДоходыОбъектаОбложения КАК Доходы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Вычеты.МесяцНалоговогоПериода,
		|		0,
		|		-Вычеты.СуммаВычета,
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
		|		ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
		|		Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Вычеты.ФизическоеЛицо
		|	ИЗ
		|		ВТВычеты КАК Вычеты) КАК ДоходыИВычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО ДоходыИВычеты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И ДоходыИВычеты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И ДоходыИВычеты.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И ДоходыИВычеты.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК НачисленоЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ЗачтеноАвансовыхПлатежейЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА (НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|						ИЛИ НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом))
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК УдержаноЗаТекущийГод,
		|	0 КАК ВозвращеноЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ПереданоНаВзысканиеЗаТекущийГод,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СУММА(НДФЛРасчетыСБюджетом.Сумма) КАК Налог,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТУдержаноНДФЛПо13или30ПоМесяцам
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛБезУчетаИзмененияСтатуса КАК СтавкаНДФЛБезУчетаИзмененияСтатуса
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛБезУчетаИзмененияСтатуса.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛБезУчетаИзмененияСтатуса.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛБезУчетаИзмененияСтатуса.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛБезУчетаИзмененияСтатуса.КодДохода
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|	И НДФЛРасчетыСБюджетом.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|	И НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|	И СтавкаНДФЛБезУчетаИзмененияСтатуса.СтавкаНДФЛ В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
		|
		|СГРУППИРОВАТЬ ПО
		|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК СтавкаПоСтатусу,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) КАК УдержаноНДФЛПоСтавке30,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0) КАК УдержаноНДФЛПоСтавке13,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоПоСтавке13_30
		|ИЗ
		|	ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке13
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке13.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке13.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке13.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке13.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке30
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке30.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке30.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке30.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке30.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13) = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента)
		|			И (ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию) = СтавкаНДФЛПоСтавкеРезидента.КодДохода)
		|ГДЕ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|	И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Перечислено.Ставка,
		|	СУММА(Перечислено.Сумма) КАК Сумма,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоНДФЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК Сумма,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|	ГДЕ
		|		НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|		И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|			ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|				И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|				И (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09) = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента)
		|				И (ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010) = СтавкаНДФЛПоСтавкеРезидента.КодДохода)
		|	ГДЕ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ПеречисленоПоСтавке13_30.СуммаРасход - (ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0)))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПеречисленоПоСтавке13_30.СтавкаПоСтатусу,
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30) КАК Перечислено
		|
		|СГРУППИРОВАТЬ ПО
		|	Перечислено.Ставка,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|
		|ИМЕЮЩИЕ
		|	СУММА(Перечислено.Сумма) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.КодВычета,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТДоходыПоМесяцам
		|ИЗ
		|	ВТДоходыОбъектаОбложения КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	Доходы.Месяц ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодВычета
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Доходы.СуммаДохода) <> 0
		|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц,
		|	Доходы.Ставка
		|ПОМЕСТИТЬ ВТОсобыеМесяцы
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц,
		|	Доходы.Ставка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) = 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	МАКСИМУМ(Доходы.КодВычета) КАК КодВычета,
		|	МесяцыОсобыхВычетов.Ставка
		|ПОМЕСТИТЬ ВТСтрокиСУказаннымВычетом
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|			И МесяцыОсобыхВычетов.Ставка = Доходы.Ставка
		|ГДЕ
		|	Доходы.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	МесяцыОсобыхВычетов.Ставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	МесяцыОсобыхВычетов.Ставка
		|ПОМЕСТИТЬ ВТДоходыИзСтрокБезВычетов
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|			И МесяцыОсобыхВычетов.Ставка = Доходы.Ставка
		|ГДЕ
		|	Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	МесяцыОсобыхВычетов.Ставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК МесяцНалоговогоПериода,
		|	Доходы.Ставка КАК Ставка,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодВычета КАК КодВычета,
		|	Доходы.СуммаДохода + ВЫБОР
		|		КОГДА СтрокиСУказаннымВычетом.ФизическоеЛицо ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДоходыИзСтрокБезВычетов.СуммаДохода, 0)
		|	КОНЕЦ КАК СуммаДохода,
		|	Доходы.СуммаВычета КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо КАК Сотрудник,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО Доходы.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсобыеМесяцы КАК СтрокиБезКодаВычета
		|		ПО Доходы.ФизическоеЛицо = СтрокиБезКодаВычета.ФизическоеЛицо
		|			И Доходы.КодДохода = СтрокиБезКодаВычета.КодДохода
		|			И Доходы.Месяц = СтрокиБезКодаВычета.Месяц
		|			И (Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
		|			И Доходы.Ставка = СтрокиБезКодаВычета.Ставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыИзСтрокБезВычетов КАК ДоходыИзСтрокБезВычетов
		|		ПО Доходы.ФизическоеЛицо = ДоходыИзСтрокБезВычетов.ФизическоеЛицо
		|			И Доходы.Месяц = ДоходыИзСтрокБезВычетов.Месяц
		|			И Доходы.КодДохода = ДоходыИзСтрокБезВычетов.КодДохода
		|			И Доходы.ВключатьВДекларациюПоНалогуНаПрибыль = ДоходыИзСтрокБезВычетов.ВключатьВДекларациюПоНалогуНаПрибыль
		|			И Доходы.Ставка = ДоходыИзСтрокБезВычетов.Ставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиСУказаннымВычетом КАК СтрокиСУказаннымВычетом
		|		ПО Доходы.ФизическоеЛицо = СтрокиСУказаннымВычетом.ФизическоеЛицо
		|			И Доходы.Месяц = СтрокиСУказаннымВычетом.Месяц
		|			И Доходы.КодДохода = СтрокиСУказаннымВычетом.КодДохода
		|			И Доходы.КодВычета = СтрокиСУказаннымВычетом.КодВычета
		|			И Доходы.Ставка = СтрокиСУказаннымВычетом.Ставка
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL 
		|	И СтрокиБезКодаВычета.ФизическоеЛицо ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ставка,
		|	МесяцНалоговогоПериода,
		|	Доходы.КодДоходаКодДляОтчетности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета КАК ГруппаВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодВычетаКод,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.ФизическоеЛицо КАК Сотрудник
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО Вычеты.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL 
		|	И Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета,
		|	Вычеты.ФизическоеЛицо,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодВычетаКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиОрганизаций.ФизическоеЛицо КАК Сотрудник,
		|	ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) КАК Ставка,
		|	ИтогиДоходов.ОбщаяСуммаДохода,
		|	ИтогиДоходов.ОблагаемаяСуммаДохода,
		|	Налоги.НачисленоЗаТекущийГод КАК Исчислено,
		|	Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод КАК ЗачтеноАвансовыхПлатежей,
		|	Налоги.УдержаноЗаТекущийГод - Налоги.ВозвращеноЗаТекущийГод КАК Удержано,
		|	ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) КАК Перечислено,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод > 0
		|			ТОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Задолженность,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод < 0
		|			ТОГДА -(Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИзлишнеУдержано,
		|	НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТФизлица КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.НДФЛСтавки КАК Ставки
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИСТИНА КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ЛОЖЬ) КАК НалогНаПрибыль
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиДоходов КАК ИтогиДоходов
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИтогиДоходов.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ИтогиДоходов.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ИтогиДоходов.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК Налоги
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = Налоги.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = Налоги.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = Налоги.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПеречисленоНДФЛ КАК ПеречисленоНДФЛ
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ПеречисленоНДФЛ.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ПеречисленоНДФЛ.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ПеречисленоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль)
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL 
		|	И (ИтогиДоходов.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (ИтогиДоходов.ОбщаяСуммаДохода <> 0
		|					ИЛИ ИтогиДоходов.ОблагаемаяСуммаДохода <> 0)
		|			ИЛИ Налоги.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (Налоги.НачисленоЗаТекущийГод <> 0
		|					ИЛИ Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод <> 0)
		|			ИЛИ ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) <> 0)";		
		
	КонецЕсли;
	
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоЗапросов = Результаты.Количество();
	
	Возврат Новый Структура("Доходы, Вычеты, Налоги", 
						Результаты[ВсегоЗапросов - 3].Выгрузить(), 
						Результаты[ВсегоЗапросов - 2].Выгрузить(), 
						Результаты[ВсегоЗапросов - 1].Выгрузить());
КонецФункции

#КонецОбласти

#КонецОбласти
