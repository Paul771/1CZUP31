////////////////////////////////////////////////////////////////////////////////
// ПОДСИСТЕМА ОСТАТКИ ОТПУСКОВ
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьКомментарииДействийСЕжегоднымОтпуском(СтрокаЕжегодногоОтпуска) Экспорт
	
	Если СтрокаЕжегодногоОтпуска.Действие = ПредопределенноеЗначение("Перечисление.ДействияСЕжегоднымиОтпусками.Отменить") Тогда
		СтрокаЕжегодногоОтпуска.Комментарий = НСтр("ru = 'Ежегодный отпуск не предоставляется'");
	ИначеЕсли СтрокаЕжегодногоОтпуска.Действие = ПредопределенноеЗначение("Перечисление.ДействияСЕжегоднымиОтпусками.Утвердить") Тогда
		СтрокаЕжегодногоОтпуска.Комментарий = НСтр("ru = 'Новый ежегодный отпуск'");
	Иначе
		СтрокаЕжегодногоОтпуска.Комментарий = "";
		ЕстьИнформацияОПредыдущихОтпусках = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаЕжегодногоОтпуска, "ТекущееКоличествоДнейВГод");
		Если ЕстьИнформацияОПредыдущихОтпусках Тогда
			Если СтрокаЕжегодногоОтпуска.КоличествоДнейВГод > СтрокаЕжегодногоОтпуска.ТекущееКоличествоДнейВГод Тогда
				СтрокаЕжегодногоОтпуска.Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Увеличен на +%1'"), 
				СтрокаЕжегодногоОтпуска.КоличествоДнейВГод - СтрокаЕжегодногоОтпуска.ТекущееКоличествоДнейВГод);
			ИначеЕсли СтрокаЕжегодногоОтпуска.КоличествоДнейВГод < СтрокаЕжегодногоОтпуска.ТекущееКоличествоДнейВГод Тогда
				СтрокаЕжегодногоОтпуска.Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Уменьшен на %1'"), 
				СтрокаЕжегодногоОтпуска.КоличествоДнейВГод - СтрокаЕжегодногоОтпуска.ТекущееКоличествоДнейВГод);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ДатаОкончанияОтпуска(Знач Сотрудник, Знач ДатаНачала, Знач КоличествоДней, Знач ОписаниеОтпуска = Неопределено) Экспорт
	
	Если ОписаниеОтпуска = Неопределено Тогда
		ЕжегодныйОтпуск = Истина;
		ПоКалендарнымДням = Истина;
	Иначе
		ЕжегодныйОтпуск = ОписаниеОтпуска.ЕжегодныйОтпуск;
		ПоКалендарнымДням = ОписаниеОтпуска.СпособРасчетаПоКалендарнымДням;
	КонецЕсли;
	
	Если ЕжегодныйОтпуск Тогда
		ДатаОкончания = ОстаткиОтпусковВызовСервера.ДатаОкончанияЕжегодногоОтпуска(Сотрудник, ДатаНачала, КоличествоДней, ПоКалендарнымДням);
	Иначе
		ДатаОкончания = НачалоДня(ДатаНачала) + (КоличествоДней - 1) * 86400;
	КонецЕсли; 
	
	Возврат ДатаОкончания;
	
КонецФункции

Процедура ВнестиСводныйОстатокВТаблицуПрав(Форма, ИмяРеквизитаОстатков = "КоличествоДней", ИмяРеквизитаНаличияОстатков = "") Экспорт
	
	УстанавливатьНаличиеОстатков = ЗначениеЗаполнено(ИмяРеквизитаНаличияОстатков);
	
	УдалитьПустыеСтрокиИзТаблицы(Форма.ОстаткиОтпусковПоРабочимГодам);
	СводныеОстаткиОтпусков = СводныеОстаткиВидовОтпусков(Форма.ОстаткиОтпусковПоРабочимГодам);
	
	// Обнуляем вторичные данные остатков
	Для каждого СтрокаОтпуска Из Форма.ЕжегодныеОтпуска Цикл
		СтрокаОтпуска[ИмяРеквизитаОстатков] = 0;
		Если УстанавливатьНаличиеОстатков Тогда
			СтрокаОтпуска[ИмяРеквизитаНаличияОстатков] = Ложь;
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого ОстатокОтпуска Из СводныеОстаткиОтпусков Цикл
		НайденныеСтроки = Форма.ЕжегодныеОтпуска.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска", ОстатокОтпуска.Ключ));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденнаяСтрока = НайденныеСтроки[0];
		Иначе	
			НайденнаяСтрока = Форма.ЕжегодныеОтпуска.Добавить();
			НайденнаяСтрока.ВидЕжегодногоОтпуска = ОстатокОтпуска.Ключ;
			НайденнаяСтрока.Действие = ПредопределенноеЗначение("Перечисление.ДействияСЕжегоднымиОтпусками.Отменить");
		КонецЕсли;
		
		НайденнаяСтрока[ИмяРеквизитаОстатков] = ОстатокОтпуска.Значение;
		Если УстанавливатьНаличиеОстатков Тогда
			НайденнаяСтрока[ИмяРеквизитаНаличияОстатков] = Истина;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

Процедура УдалитьПустыеСтрокиИзТаблицы(ТабличнаяЧасть)

	МассивУдаляемыхСтрок = Новый Массив;
	
	Для каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ВидЕжегодногоОтпуска) Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
		ТабличнаяЧасть.Удалить(УдаляемаяСтрока);
	КонецЦикла;

КонецПроцедуры

Функция СводныеОстаткиВидовОтпусков(ТабличнаяЧасть)

	СводныеОстаткиОтпусков = Новый Соответствие;
	
	Для каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		КоличествоОстаткаОтпуска = СводныеОстаткиОтпусков.Получить(СтрокаТаблицы.ВидЕжегодногоОтпуска);
		Если КоличествоОстаткаОтпуска = Неопределено Тогда
			СводныеОстаткиОтпусков.Вставить(СтрокаТаблицы.ВидЕжегодногоОтпуска, СтрокаТаблицы.Остаток);
		Иначе
			СводныеОстаткиОтпусков[СтрокаТаблицы.ВидЕжегодногоОтпуска] = КоличествоОстаткаОтпуска + СтрокаТаблицы.Остаток;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат СводныеОстаткиОтпусков;

КонецФункции

#КонецОбласти
