
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает коллекцию загружаемых объектов (формируется по составу плана обмена).
//
// Возвращаемое значение:
//   Соответствие - коллекция объекто метаданных.
//
Функция ЗагружаемыеОбъекты() Экспорт
	
	ЗагружаемыеОбъекты = Новый Соответствие;
	
	Для Каждого ЭлементСостава Из Метаданные.ПланыОбмена[МиграцияПриложений.ИмяПланаОбмена()].Состав Цикл
		ЗагружаемыеОбъекты.Вставить(ЭлементСостава.Метаданные, Истина);
	КонецЦикла;
	
	Возврат ЗагружаемыеОбъекты;
	
КонецФункции

// Возвращает типы ссылок общих данных, сопоставляемых по полям поиска.
//
// Возвращаемое значение:
//   Соответствие - коллекция типов ссылок.
//
Функция ТипыСопоставляемыхОбщихДанныхПоПолямПоиска() Экспорт
	
	Типы = Новый Соответствие;
	Для Каждого ОбъектМетаданных Из ВыгрузкаЗагрузкаДанныхСлужебныйСобытия.ПолучитьТипыОбщихДанныхПоддерживающиеСопоставлениеСсылокПриЗагрузке() Цикл
		Типы.Вставить(ОбъектМетаданных.СтандартныеРеквизиты.Ссылка.Тип.Типы()[0], Истина);
	КонецЦикла;
	
	Возврат Типы;
	
КонецФункции

// Возвращает типы ссылок общих данных, сопоставляемых по предопределенному имени.
//
// Возвращаемое значение:
//   Соответствие - коллекция типов ссылок.
//
Функция ТипыСопоставляемыхОбщихДанныхПоПредопределенномуИмени() Экспорт
	
	Типы = Новый Соответствие;
	
	РазделенныеОбъектыМетаданных = МиграцияПриложенийПовтИсп.МодельДанныхОбласти();
	РазрешенныеОбщиеДанные = ВыгрузкаЗагрузкаДанныхСлужебныйСобытия.ПолучитьТипыОбщихДанныхПоддерживающиеСопоставлениеСсылокПриЗагрузке();
	
	Для Каждого ВидМетаданных Из ВидыМетаданныхСПредопределенными() Цикл
		Для Каждого ОбъектМетаданных Из ВидМетаданных Цикл
			Если РазделенныеОбъектыМетаданных[ОбъектМетаданных] <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если РазрешенныеОбщиеДанные.Найти(ОбъектМетаданных) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если ОбъектМетаданных.ПолучитьИменаПредопределенных().Количество() <> 0 Тогда
				Типы.Вставить(ОбъектМетаданных.СтандартныеРеквизиты.Ссылка.Тип.Типы()[0], Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Типы;
	
КонецФункции

// Возвращает коллекцию разделенных метаданных, являющихся данными.
//
// Возвращаемое значение:
//   Соответствие - коллекция объектов типа ОбъектМетаданных.
//
Функция МодельДанныхОбласти() Экспорт
	
	ОбъектыМетаданных = Новый Соответствие;
	
	МодельДанных = РаботаВМоделиСервиса.ПолучитьМодельДанныхОбласти();
	
	Для Каждого ЭлементМоделиДанных Из МодельДанных Цикл
		
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ЭлементМоделиДанных.Ключ);
		
		Если Не ОбщегоНазначенияБТС.ЭтоРегламентноеЗадание(ОбъектМетаданных)
				И Не ОбщегоНазначенияБТС.ЭтоЖурналДокументов(ОбъектМетаданных)
				И Не ОбщегоНазначенияБТС.ЭтоВнешнийИсточникДанных(ОбъектМетаданных)
				И Не ОбщегоНазначенияБТС.ЭтоПланОбмена(ОбъектМетаданных) Тогда
			
			ОбъектыМетаданных.Вставить(ОбъектМетаданных, Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОбъектыМетаданных;
	
КонецФункции

// Возвращает коллекцию запрещенных типов ссылок.
//
// Возвращаемое значение:
//   Соответствие - коллекция типов ссылок.
//
Функция ЗапрещенныеТипыОбщихДанных() Экспорт
	
	Типы = Новый Соответствие;
	
	РазделенныеОбъектыМетаданных = МиграцияПриложенийПовтИсп.МодельДанныхОбласти();
	РазрешенныеОбщиеДанные = ВыгрузкаЗагрузкаДанныхСлужебныйСобытия.ПолучитьТипыОбщихДанныхПоддерживающиеСопоставлениеСсылокПриЗагрузке();
	ВидыМетаданныхСПредопределенными = ВидыМетаданныхСПредопределенными();
	
	ВидыМетаданных = Новый Массив;
	ВидыМетаданных.Добавить(Метаданные.Справочники);
	ВидыМетаданных.Добавить(Метаданные.ПланыВидовХарактеристик);
	ВидыМетаданных.Добавить(Метаданные.ПланыСчетов);
	ВидыМетаданных.Добавить(Метаданные.ПланыВидовРасчета);
	ВидыМетаданных.Добавить(Метаданные.Документы);
	ВидыМетаданных.Добавить(Метаданные.БизнесПроцессы);
	ВидыМетаданных.Добавить(Метаданные.Задачи);
	
	Для Каждого ВидМетаданных Из ВидыМетаданных Цикл
		ИмеютПредопределенные = ВидыМетаданныхСПредопределенными.Найти(ВидМетаданных) <> Неопределено;
		Для Каждого ОбъектМетаданных Из ВидМетаданных Цикл
			Если РазделенныеОбъектыМетаданных[ОбъектМетаданных] <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если РазрешенныеОбщиеДанные.Найти(ОбъектМетаданных) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если Не ИмеютПредопределенные Или ОбъектМетаданных.ПолучитьИменаПредопределенных().Количество() = 0 Тогда
				Типы.Вставить(ОбъектМетаданных.СтандартныеРеквизиты.Ссылка.Тип.Типы()[0], Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Типы;
	
КонецФункции

// Возвращает коллекцию типов ссылок объектов, которые разделены независимо и совместно.
//
// Возвращаемое значение:
//   Соответствие - коллекция типов ссылок.
//
Функция ТипыПересоздаваемыхСсылок() Экспорт
	
	Типы = Новый Соответствие;
	
	Для Каждого ЭлементСостава Из Метаданные.ОбщиеРеквизиты.ОбластьДанныхВспомогательныеДанные.Состав Цикл
		Если ЭлементСостава.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать Тогда
			
			Если Метаданные.Справочники.Содержит(ЭлементСостава.Метаданные)
				Или Метаданные.ПланыВидовХарактеристик.Содержит(ЭлементСостава.Метаданные)
				Или Метаданные.ПланыОбмена.Содержит(ЭлементСостава.Метаданные)
				Или Метаданные.Документы.Содержит(ЭлементСостава.Метаданные)
				Или Метаданные.ПланыСчетов.Содержит(ЭлементСостава.Метаданные)
				Или Метаданные.ПланыВидовРасчета.Содержит(ЭлементСостава.Метаданные)
				Или Метаданные.БизнесПроцессы.Содержит(ЭлементСостава.Метаданные)
				Или Метаданные.Задачи.Содержит(ЭлементСостава.Метаданные) Тогда
				
				Типы.Вставить(ЭлементСостава.Метаданные.СтандартныеРеквизиты.Ссылка.Тип.Типы()[0], Истина);
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Типы;
	
КонецФункции

// Возвращает коллекцию совместно разделенных объектов метаданных.
//
// Возвращаемое значение:
//   Соответствие - коллекция объекто метаданных.
//
Функция СовместноИспользуемыеОбъектыМетаданных() Экспорт
	
	Объекты = Новый Соответствие;
	
	Для Каждого ЭлементСостава Из Метаданные.ОбщиеРеквизиты.ОбластьДанныхВспомогательныеДанные.Состав Цикл
		Если ЭлементСостава.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать Тогда
			Объекты.Вставить(ЭлементСостава.Метаданные, Истина);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Объекты;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает виды метаданных, которые могут иметь предопределенные элементы.
//
// Возвращаемое значение:
//   Массив - массив видов объектов.
//
Функция ВидыМетаданныхСПредопределенными()
	
	ВидыМетаданных = Новый Массив;
	ВидыМетаданных.Добавить(Метаданные.Справочники);
	ВидыМетаданных.Добавить(Метаданные.ПланыВидовХарактеристик);
	ВидыМетаданных.Добавить(Метаданные.ПланыСчетов);
	ВидыМетаданных.Добавить(Метаданные.ПланыВидовРасчета);
	
	Возврат ВидыМетаданных;
	
КонецФункции

#КонецОбласти
