#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьПризнакВыплачиваетсяФСССуществующихДокументов(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Ссылка
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПередачиВыплатыПособий КАК ВТДатыПередачиВыплатыПособий
	|		ПО ОтпускПоУходуЗаРебенком.Организация = ВТДатыПередачиВыплатыПособий.Организация
	|			И (ВТДатыПередачиВыплатыПособий.Дата МЕЖДУ ОтпускПоУходуЗаРебенком.ДатаНачала И ОтпускПоУходуЗаРебенком.ДатаОкончания)
	|			И (ОтпускПоУходуЗаРебенком.ПособиеВыплачиваетсяФСС = ЛОЖЬ)";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ОбменДанными.Загрузка = Истина;
			
			Документ.ПособиеВыплачиваетсяФСС = Истина;
			
			Документ.Записать(РежимЗаписиДокумента.Запись);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Функция - Категории начислений пособий по прямым выплатам ФСС
//
// Возвращаемое значение:
//  МассивКатегорий - Массив, категории пособий, которые оплачиваются напрямую ФСС.
//
Функция КатегорииНачисленийПособийПоПрямымВыплатамФСС() Экспорт
	
	МассивКатегорий = Новый Массив;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоПолутораЛет);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускНаСанаторноКурортноеЛечение);
	
	Возврат МассивКатегорий;
	
КонецФункции

#Область РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий

Процедура ПриОпределенииЗапросаРеестраПрямыхВыплатПоПервичнымДокументам(Запрос, Объект, Заявление) Экспорт
	
	Если Объект.ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности Тогда
		ПриОпределенииЗапросаРеестраПрямыхВыплатПоБольничнымЛистам(Запрос, Заявление);
		
	ИначеЕсли Объект.ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком Тогда
		ПриОпределенииЗапросаРеестраПрямыхВыплатПоОтпускамПоУходу(Запрос, Заявление);
		
	Иначе
		ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ПриОпределенииЗапросаРеестраПрямыхВыплатПоПервичнымДокументам(Запрос, Объект, Заявление);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОпределенииФиксируемыхРеквизитовРеестраПрямыхВыплат(ФиксируемыеРеквизиты) Экспорт
	Шаблон = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	Шаблон.Путь               = "СведенияНеобходимыеДляНазначенияПособий";
	Шаблон.РеквизитСтроки      = Истина;
	Шаблон.ОснованиеЗаполнения = "ПервичныйДокумент";
	Шаблон.ИмяГруппы           = "ПособияПоНетрудоспособности_Стаж";
	Шаблон.ФиксацияГруппы      = Истина;
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СтажЛет");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СтажМесяцев");
	
	Шаблон.ИмяГруппы           = "ПособияПоНетрудоспособности_СтажРасширенный";
	Шаблон.ФиксацияГруппы      = Истина;
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СтажРасширенныйЛет");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СтажРасширенныйМесяцев");
	
	Шаблон = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	Шаблон.Путь                = "СведенияНеобходимыеДляНазначенияПособий";
	Шаблон.РеквизитСтроки      = Истина;
	Шаблон.ОснованиеЗаполнения = "ПервичныйДокумент";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "НаРебенкаВыплачиваетсяПособие");
	
	Шаблон = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	Шаблон.Путь                = "СведенияНеобходимыеДляНазначенияПособий";
	Шаблон.РеквизитСтроки      = Истина;
	Шаблон.ИмяГруппы           = "ЕжемесячныеПособияПоУходуЗаРебенком";
	Шаблон.ОснованиеЗаполнения = "ПервичныйДокумент";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ОчередностьРожденияРебенка");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "НаименованиеПодтверждающегоДокумента");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "НаличиеРешенияСудаОЛишенииПрав");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ФинансированиеФедеральнымБюджетом");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ОдновременныйУходЗаНесколькимиДетьми");
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов

Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(Документ, ОплатаДнейУходаЗаДетьмиИнвалидами) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЗначениеЗаполнено(ОплатаДнейУходаЗаДетьмиИнвалидами) Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка,
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Сотрудник,
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.ФизическоеЛицо,
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.ПериодРегистрации
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ОплатаДнейУходаЗаДетьмиИнвалидами КАК ОплатаДнейУходаЗаДетьмиИнвалидами
		|ГДЕ
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка = &ДокументОснование";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИспользованныеОплаты.ДокументОснование КАК Ссылка
		|ПОМЕСТИТЬ ВТИспользованныеОплаты
		|ИЗ
		|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Оплаты КАК ИспользованныеОплаты
		|ГДЕ
		|	ИспользованныеОплаты.Ссылка.Организация = &Организация
		|	И ИспользованныеОплаты.Ссылка <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка,
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Сотрудник,
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.ФизическоеЛицо,
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.ПериодРегистрации
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ОплатаДнейУходаЗаДетьмиИнвалидами КАК ОплатаДнейУходаЗаДетьмиИнвалидами
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованныеОплаты КАК ВТИспользованныеОплаты
		|		ПО ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка = ВТИспользованныеОплаты.Ссылка
		|ГДЕ
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Организация = &Организация
		|	И ВТИспользованныеОплаты.Ссылка ЕСТЬ NULL
		|	И ОплатаДнейУходаЗаДетьмиИнвалидами.ПометкаУдаления = ЛОЖЬ
		|	И ОплатаДнейУходаЗаДетьмиИнвалидами.Проведен = ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|;
	|";
	
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|	ВТДокументы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДокументы.Сотрудник КАК Сотрудник,
	|	СУММА(ЕСТЬNULL(ПособияПоСоциальномуСтрахованиюОбороты.СуммаВсегоОборот, 0)) КАК СуммаВзносовДоступная
	|ПОМЕСТИТЬ втСуммыВзносовДоступные
	|ИЗ
	|	ВТДокументы КАК ВТДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПособияПоСоциальномуСтрахованию.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Период,
	|				Организация = &Организация
	|					И ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.СтраховыеВзносыПоДопВыходнымПоУходуЗаДетьмиИнвалидами)) КАК ПособияПоСоциальномуСтрахованиюОбороты
	|		ПО ВТДокументы.ФизическоеЛицо = ПособияПоСоциальномуСтрахованиюОбороты.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументы.ФизическоеЛицо,
	|	ВТДокументы.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДокументы.Сотрудник КАК Сотрудник,
	|	СУММА(ЕСТЬNULL(ОплатыДругихЗаявлений.СуммаВзносов, 0)) КАК СуммаВзносовУчтенная
	|ПОМЕСТИТЬ втСуммыВзносовУчтенные
	|ИЗ
	|	ВТДокументы КАК ВТДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Оплаты КАК ОплатыДругихЗаявлений
	|		ПО (ОплатыДругихЗаявлений.Ссылка.Дата >= &НачалоПериода)
	|			И (ОплатыДругихЗаявлений.Ссылка.Дата <= &КонецПериода)
	|			И ВТДокументы.Сотрудник = ОплатыДругихЗаявлений.Сотрудник
	|			И (ОплатыДругихЗаявлений.Ссылка.Проведен)
	|			И (ОплатыДругихЗаявлений.Ссылка <> &Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументы.ФизическоеЛицо,
	|	ВТДокументы.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплатаДнейУходаЗаДетьмиИнвалидами.Сотрудник КАК Сотрудник,
	|	ОплатаДнейУходаЗаДетьмиИнвалидами.СреднийЗаработок КАК СреднедневнойЗаработок,
	|	ОплатаДнейУходаЗаДетьмиИнвалидами.Начислено КАК СуммаПособия,
	|	ВЫБОР
	|		КОГДА СуммыВзносовДоступные.СуммаВзносовДоступная >= СуммыВзносовУчтенные.СуммаВзносовУчтенная
	|			ТОГДА СуммыВзносовДоступные.СуммаВзносовДоступная - СуммыВзносовУчтенные.СуммаВзносовУчтенная
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВзносов,
	|	ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка КАК ДокументОснование,
	|	1 КАК КоличествоСтраниц
	|ИЗ
	|	Документ.ОплатаДнейУходаЗаДетьмиИнвалидами КАК ОплатаДнейУходаЗаДетьмиИнвалидами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСуммыВзносовДоступные КАК СуммыВзносовДоступные
	|			ПО ВТДокументы.ФизическоеЛицо = СуммыВзносовДоступные.ФизическоеЛицо
	|				И ВТДокументы.Сотрудник = СуммыВзносовДоступные.Сотрудник
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСуммыВзносовУчтенные КАК СуммыВзносовУчтенные
	|			ПО ВТДокументы.ФизическоеЛицо = СуммыВзносовУчтенные.ФизическоеЛицо
	|				И ВТДокументы.Сотрудник = СуммыВзносовУчтенные.Сотрудник
	|		ПО ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка = ВТДокументы.Ссылка";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Документ.Дата));
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(Документ.Дата));
	Запрос.УстановитьПараметр("Организация",   Документ.Организация);
	Запрос.УстановитьПараметр("Ссылка",        Документ.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ОплатаДнейУходаЗаДетьмиИнвалидами);
	
	Возврат Запрос.Выполнить();
КонецФункции

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт
	ФиксируемыеРеквизиты = Новый Соответствие;
	
	// Реквизиты организации.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	Шаблон.ИмяГруппы           = "Организация";
	Шаблон.ОснованиеЗаполнения = "Организация";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "НаименованиеТерриториальногоОрганаФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РегистрационныйНомерФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ДополнительныйКодФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КодПодчиненностиФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ИНН");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КПП");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "Руководитель");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ДолжностьРуководителя");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "АдресОрганизации");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "АдресЭлектроннойПочтыОрганизации");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ТелефонСоставителя");
	
	// Реквизиты документа-основания.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	Шаблон.ИмяГруппы           = "Оплаты";
	Шаблон.ОснованиеЗаполнения = "ДокументОснование";
	Шаблон.РеквизитСтроки      = Истина;
	Шаблон.Путь                = "Оплаты";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "Сотрудник");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СреднедневнойЗаработок");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КоличествоСтраниц");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СуммаПособия");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "СуммаВзносов");
	
	Возврат Новый ФиксированноеСоответствие(ФиксируемыеРеквизиты);
КонецФункции

Функция ИспользуетсяЗаполнениеДокументаЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт

	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ЗаявлениеВФССОВозмещенииРасходовНаПогребение

Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииРасходовНаПогребение(Организация, Ссылка, ЕдиновременноеПособие) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЗначениеЗаполнено(ЕдиновременноеПособие) Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
		|ГДЕ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка = &ДокументОснование";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИспользованныеОплаты.ДокументОснование КАК Ссылка
		|ПОМЕСТИТЬ ВТИспользованныеОплаты
		|ИЗ
		|	Документ.ЗаявлениеВФССОВозмещенииРасходовНаПогребение.Оплаты КАК ИспользованныеОплаты
		|ГДЕ
		|	ИспользованныеОплаты.Ссылка.Организация = &Организация
		|	И ИспользованныеОплаты.Ссылка <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованныеОплаты КАК ВТИспользованныеОплаты
		|		ПО ЕдиновременноеПособиеЗаСчетФСС.Ссылка = ВТИспользованныеОплаты.Ссылка
		|ГДЕ
		|	ЕдиновременноеПособиеЗаСчетФСС.Организация = &Организация
		|	И ВТИспользованныеОплаты.Ссылка ЕСТЬ NULL
		|	И ЕдиновременноеПособиеЗаСчетФСС.ПометкаУдаления = ЛОЖЬ
		|	И ЕдиновременноеПособиеЗаСчетФСС.Проведен = ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|;
	|";
	
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|	ЕдиновременноеПособиеЗаСчетФСС.ФизическоеЛицо,
	|	ЕдиновременноеПособиеЗаСчетФСС.Начислено КАК РазмерПособия,
	|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка КАК ДокументОснование,
	|	1 КАК КоличествоСтраниц
	|ИЗ
	|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
	|		ПО ЕдиновременноеПособиеЗаСчетФСС.Ссылка = ВТДокументы.Ссылка";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ЕдиновременноеПособие);
	
	Возврат Запрос.Выполнить();
КонецФункции

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииРасходовНаПогребение() Экспорт
	ФиксируемыеРеквизиты = Новый Соответствие;
	
	// Реквизиты организации.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	Шаблон.ИмяГруппы           = "Организация";
	Шаблон.ОснованиеЗаполнения = "Организация";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "НаименованиеТерриториальногоОрганаФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РегистрационныйНомерФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ДополнительныйКодФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КодПодчиненностиФСС");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ИНН");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КПП");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "Руководитель");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ДолжностьРуководителя");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "АдресОрганизации");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "АдресЭлектроннойПочтыОрганизации");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ТелефонСоставителя");
	
	// Реквизиты документа-основания.
	Шаблон = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	Шаблон.ИмяГруппы           = "Оплаты";
	Шаблон.ОснованиеЗаполнения = "ДокументОснование";
	Шаблон.РеквизитСтроки      = Истина;
	Шаблон.Путь                = "Оплаты";
	
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "ФизическоеЛицо");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "РазмерПособия");
	ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, "КоличествоСтраниц");
	
	Возврат Новый ФиксированноеСоответствие(ФиксируемыеРеквизиты);
КонецФункции

Функция ИспользуетсяЗаполнениеЗаявленияВФССОВозмещенииРасходовНаПогребение() Экспорт
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область ЗаявлениеСотрудникаНаВыплатуПособия

Функция БанковскиеРеквизитыСотрудникаДляВыплатыЗарплаты(Дата, Организация, Сотрудник, ФизическоеЛицо) Экспорт
	Результат = Новый Структура("Банк, НомерСчета");
	
	СведенияОМестеВыплаты = ВзаиморасчетыССотрудникамиРасширенный.МестоВыплатыЗарплатыСотрудника(Сотрудник, ФизическоеЛицо);
	Если Не СведенияОМестеВыплаты.Выбран() Тогда
		СведенияОМестеВыплаты = ВзаиморасчетыССотрудникамиРасширенный.МестоВыплатыЗарплатыОрганизации(Организация);
	КонецЕсли;
	
	// Вид - ПеречислениеСсылка.ВидыМестВыплатыЗарплаты.
	// МестоВыплаты - СправочникСсылка.ФизическиеЛица, СправочникСсылка.Кассы, СправочникСсылка.БанковскиеСчетаКонтрагентов, СправочникСсылка.ЗарплатныеПроекты.
	
	Если СведенияОМестеВыплаты.Вид = Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект Тогда
		
		ТаблицаЛицевыхСчетов = ОбменСБанкамиПоЗарплатнымПроектам.ЛицевыеСчетаСотрудников(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник),
			Истина,
			Организация,
			Дата,
			СведенияОМестеВыплаты.МестоВыплаты);
		
		Если ТаблицаЛицевыхСчетов.Количество() > 0 Тогда
			ТаблицаЛицевыхСчетов.Сортировать("МесяцОткрытия Убыв");
			Результат.Банк       = ТаблицаЛицевыхСчетов[0].Банк;
			Результат.НомерСчета = ТаблицаЛицевыхСчетов[0].НомерЛицевогоСчета;
		КонецЕсли;
		
	ИначеЕсли СведенияОМестеВыплаты.Вид = Перечисления.ВидыМестВыплатыЗарплаты.БанковскийСчет
		И ТипЗнч(СведенияОМестеВыплаты.МестоВыплаты) = Тип("СправочникСсылка.БанковскиеСчетаКонтрагентов")
		И ЗначениеЗаполнено(СведенияОМестеВыплаты.МестоВыплаты) Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СведенияОМестеВыплаты.МестоВыплаты, "Банк, НомерСчета", Истина);
		ЗаполнитьЗначенияСвойств(Результат, ЗначенияРеквизитов);
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОснованию(Объект, ПараметрыФиксации) Экспорт
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура;
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.БольничныйЛист") Тогда
		ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоБольничномуЛисту(Объект, РеквизитыДокумента);
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком") Тогда
		ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпускуПоУходуЗаРебенком(Объект, РеквизитыДокумента);
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.Отпуск") Тогда
		ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпуску(Объект, РеквизитыДокумента);
	КонецЕсли;
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, Объект, ПараметрыФиксации);
КонецФункции

Процедура ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоБольничномуЛисту(Объект, РеквизитыДокумента)
	
	НеобходимыеРеквизиты = Новый Массив;
	НеобходимыеРеквизиты.Добавить("Организация");
	НеобходимыеРеквизиты.Добавить("Сотрудник");
	НеобходимыеРеквизиты.Добавить("ПричинаНетрудоспособности");
	НеобходимыеРеквизиты.Добавить("НомерЛисткаНетрудоспособности");
	НеобходимыеРеквизиты.Добавить("ДатаВыдачиЛисткаНетрудоспособности");
	НеобходимыеРеквизиты.Добавить("СреднийДневнойЗаработок");
	НеобходимыеРеквизиты.Добавить("МинимальныйСреднедневнойЗаработок");
	НеобходимыеРеквизиты.Добавить("ИсправленныйДокумент");
	НеобходимыеРеквизиты.Добавить("ПоставленаНаУчетВРанниеСрокиБеременности");
	НеобходимыеРеквизиты.Добавить("Дата");
	
	РеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, НеобходимыеРеквизиты);
	ПричинаНетрудоспособности = Неопределено;
	ПоставленаНаУчетВРанниеСрокиБеременности = Ложь;
	Если РеквизитыДокументаОснования.Свойство("ПричинаНетрудоспособности", ПричинаНетрудоспособности) Тогда
		Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
			Если РеквизитыДокументаОснования.Свойство("ПоставленаНаУчетВРанниеСрокиБеременности", ПоставленаНаУчетВРанниеСрокиБеременности)
				И ПоставленаНаУчетВРанниеСрокиБеременности Тогда
				РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки);
			Иначе
				РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам);
			КонецЕсли;
		ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве
			Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.Профзаболевание Тогда
			РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве);
		Иначе
			РеквизитыДокумента.Вставить("ВидПособия", Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности);
		КонецЕсли;
	КонецЕсли;
	
	ОрганизацияОснования = Неопределено;
	СотрудникОснования = Неопределено;
	НомерЛисткаНетрудоспособностиОснования = Неопределено;
	ДатаЛисткаНетрудоспособностиОснования = Неопределено;
	СреднийЗаработокЗаРасчетныйПериодОснования = Неопределено;
	МинимальныйСреднедневнойЗаработокОснования = Неопределено;
	ИсправленныйДокумент = Неопределено;
	ДатаПредставленияПакетаДокументов = Неопределено;
	
	РеквизитыДокументаОснования.Свойство("Организация", ОрганизацияОснования);
	РеквизитыДокументаОснования.Свойство("Сотрудник", СотрудникОснования);
	РеквизитыДокументаОснования.Свойство("НомерЛисткаНетрудоспособности", НомерЛисткаНетрудоспособностиОснования);
	РеквизитыДокументаОснования.Свойство("ДатаВыдачиЛисткаНетрудоспособности", ДатаЛисткаНетрудоспособностиОснования);
	РеквизитыДокументаОснования.Свойство("СреднийДневнойЗаработок", СреднийЗаработокЗаРасчетныйПериодОснования);
	РеквизитыДокументаОснования.Свойство("МинимальныйСреднедневнойЗаработок", МинимальныйСреднедневнойЗаработокОснования);
	РеквизитыДокументаОснования.Свойство("ИсправленныйДокумент", ИсправленныйДокумент);
	РеквизитыДокументаОснования.Свойство("Дата", ДатаПредставленияПакетаДокументов);
	
	РеквизитыДокумента.Вставить("Организация", ОрганизацияОснования);
	РеквизитыДокумента.Вставить("Сотрудник", СотрудникОснования);
	РеквизитыДокумента.Вставить("НомерЛисткаНетрудоспособности", НомерЛисткаНетрудоспособностиОснования);
	РеквизитыДокумента.Вставить("ДатаЛисткаНетрудоспособности", ДатаЛисткаНетрудоспособностиОснования);
	РеквизитыДокумента.Вставить("СреднийЗаработокЗаРасчетныйПериод", Макс(СреднийЗаработокЗаРасчетныйПериодОснования, МинимальныйСреднедневнойЗаработокОснования));
	РеквизитыДокумента.Вставить("Перерасчет", ?(ЗначениеЗаполнено(ИсправленныйДокумент), Истина, Ложь));
	РеквизитыДокумента.Вставить("КодПричиныПерерасчета", ?(ЗначениеЗаполнено(ИсправленныйДокумент), "01", "00"));
	РеквизитыДокумента.Вставить("ДатаПредставленияПакетаДокументов", ДатаПредставленияПакетаДокументов);
		
	ДанныеДокументовДляРасчетаСреднегоЗаработка = Документы.БольничныйЛист.ДанныеДокументовДляРасчетаСреднегоЗаработкаФСС(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.ДокументОснование));
	
	ЗаполнитьРеквизитыРасчетаСреднегоЗаработкаВЗаявленииСотрудникаНаВыплатуПособия(РеквизитыДокумента, ДанныеДокументовДляРасчетаСреднегоЗаработка.Получить(Объект.ДокументОснование));
	
КонецПроцедуры

Процедура ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпускуПоУходуЗаРебенком(Объект, РеквизитыДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Очередность,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаРожденияРебенка,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ВидПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаименованиеПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.СерияДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаличиеРешенияСудаОЛишенииПрав,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Фамилия,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Отчество,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка
	|ПОМЕСТИТЬ РебенокЗаКоторымОсуществляетсяУход
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка = &Ссылка
	|	И ОтпускПоУходуЗаРебенкомДанныеОДетях.ИдентификаторСтроки = &ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Номер КАК НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком,
	|	ОтпускПоУходуЗаРебенком.Дата КАК ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ДатаНачалаОтпускаПоУходуЗаРебенком,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончанияПособияДоПолутораЛет КАК ДатаОкончанияОтпускаПоУходуЗаРебенком,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.СреднийДневнойЗаработок > ОтпускПоУходуЗаРебенком.МинимальныйСреднедневнойЗаработок
	|			ТОГДА ОтпускПоУходуЗаРебенком.СреднийДневнойЗаработок
	|		ИНАЧЕ ОтпускПоУходуЗаРебенком.МинимальныйСреднедневнойЗаработок
	|	КОНЕЦ КАК СреднийЗаработокЗаРасчетныйПериод,
	|	РебенокЗаКоторымОсуществляетсяУход.ВидПодтверждающегоДокумента,
	|	РебенокЗаКоторымОсуществляетсяУход.ДатаДокумента,
	|	РебенокЗаКоторымОсуществляетсяУход.СерияДокумента,
	|	РебенокЗаКоторымОсуществляетсяУход.НомерДокумента,
	|	ЛОЖЬ КАК НаличиеОдногоИзДокументовНаПредыдущихДетей,
	|	ЛОЖЬ КАК НаличиеСвидетельстваОСмертиПредыдущихДетей,
	|	ОтпускПоУходуЗаРебенком.Организация,
	|	ОтпускПоУходуЗаРебенком.Сотрудник,
	|	РебенокЗаКоторымОсуществляетсяУход.ДатаРожденияРебенка,
	|	РебенокЗаКоторымОсуществляетсяУход.Фамилия,
	|	РебенокЗаКоторымОсуществляетсяУход.Имя,
	|	РебенокЗаКоторымОсуществляетсяУход.Отчество,
	|	ОтпускПоУходуЗаРебенком.ФинансированиеФедеральнымБюджетом
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ЛЕВОЕ СОЕДИНЕНИЕ РебенокЗаКоторымОсуществляетсяУход КАК РебенокЗаКоторымОсуществляетсяУход
	|		ПО ОтпускПоУходуЗаРебенком.Ссылка = РебенокЗаКоторымОсуществляетсяУход.Ссылка
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.ДокументОснование);
	Запрос.УстановитьПараметр("ИдентификаторСтроки", Объект.ИдентификаторСтрокиОснования);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	РеквизитыДокумента.Вставить("Организация", Выборка.Организация);
	РеквизитыДокумента.Вставить("ДатаПредставленияПакетаДокументов", Выборка.ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком", Прав(Выборка.НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком,10));
	РеквизитыДокумента.Вставить("ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком", Выборка.ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("ДатаНачалаОтпускаПоУходуЗаРебенком", Выборка.ДатаНачалаОтпускаПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("ДатаОкончанияОтпускаПоУходуЗаРебенком", Выборка.ДатаОкончанияОтпускаПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("СреднийЗаработокЗаРасчетныйПериод", Выборка.СреднийЗаработокЗаРасчетныйПериод);
	РеквизитыДокумента.Вставить("НаличиеОдногоИзДокументовНаПредыдущихДетей", Выборка.НаличиеОдногоИзДокументовНаПредыдущихДетей);
	РеквизитыДокумента.Вставить("НаличиеСвидетельстваОСмертиПредыдущихДетей", Выборка.НаличиеСвидетельстваОСмертиПредыдущихДетей);
	РеквизитыДокумента.Вставить("Сотрудник", СотрудникОтпускаПоУходуЗаРебенком(Выборка.Сотрудник, Выборка.Организация, Выборка.ДатаНачалаОтпускаПоУходуЗаРебенком));
	РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("ДатаРожденияРебенка", 	Выборка.ДатаРожденияРебенка);
	РеквизитыДокумента.Вставить("ФамилияРебенка", 		Выборка.Фамилия);
	РеквизитыДокумента.Вставить("ИмяРебенка", 			Выборка.Имя);
	РеквизитыДокумента.Вставить("ОтчествоРебенка", 		Выборка.Отчество);
	РеквизитыДокумента.Вставить("ФинансированиеФедеральнымБюджетом", Выборка.ФинансированиеФедеральнымБюджетом);
	
	Если Выборка.ВидПодтверждающегоДокумента  = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении Тогда
		
		РеквизитыДокумента.Вставить("ДатаСвидетельстваОРождении", Выборка.ДатаДокумента);
		РеквизитыДокумента.Вставить("НомерСвидетельстваОРождении", Выборка.НомерДокумента);
		РеквизитыДокумента.Вставить("СерияСвидетельстваОРождении", Выборка.СерияДокумента);
		
		РеквизитыДокумента.Вставить("ДатаРешенияОбОпеке", Неопределено);
		РеквизитыДокумента.Вставить("НомерРешенияОбОпеке", Неопределено);
		
		РеквизитыДокумента.Вставить("ДатаИногоДокументаПодтверждающегоРождение", Неопределено);
		РеквизитыДокумента.Вставить("НомерИногоДокументаПодтверждающегоРождение", Неопределено);
		
	ИначеЕсли Выборка.ВидПодтверждающегоДокумента  = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки Тогда
		
		РеквизитыДокумента.Вставить("ДатаРешенияОбОпеке", Выборка.ДатаДокумента);
		РеквизитыДокумента.Вставить("НомерРешенияОбОпеке", Выборка.НомерДокумента);
		
		РеквизитыДокумента.Вставить("ДатаСвидетельстваОРождении", Неопределено);
		РеквизитыДокумента.Вставить("НомерСвидетельстваОРождении", Неопределено);
		РеквизитыДокумента.Вставить("СерияСвидетельстваОРождении", Неопределено);
		
		РеквизитыДокумента.Вставить("ДатаИногоДокументаПодтверждающегоРождение", Неопределено);
		РеквизитыДокумента.Вставить("НомерИногоДокументаПодтверждающегоРождение", Неопределено);
		
	ИначеЕсли Выборка.ВидПодтверждающегоДокумента  = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.ИнойДокументПодтверждающийРождениеРебенка Тогда
		
		РеквизитыДокумента.Вставить("ДатаИногоДокументаПодтверждающегоРождение", Выборка.ДатаДокумента);
		РеквизитыДокумента.Вставить("НомерИногоДокументаПодтверждающегоРождение", Выборка.НомерДокумента);
		
		РеквизитыДокумента.Вставить("ДатаСвидетельстваОРождении", Неопределено);
		РеквизитыДокумента.Вставить("НомерСвидетельстваОРождении", Неопределено);
		РеквизитыДокумента.Вставить("СерияСвидетельстваОРождении", Неопределено);
		
		РеквизитыДокумента.Вставить("ДатаРешенияОбОпеке", Неопределено);
		РеквизитыДокумента.Вставить("НомерРешенияОбОпеке", Неопределено);
		
	КонецЕсли;
	
	ДанныеДокументовДляРасчетаСреднегоЗаработка = Документы.ОтпускПоУходуЗаРебенком.ДанныеДокументовДляРасчетаСреднегоЗаработкаФСС(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.ДокументОснование));
	
	ЗаполнитьРеквизитыРасчетаСреднегоЗаработкаВЗаявленииСотрудникаНаВыплатуПособия(РеквизитыДокумента, ДанныеДокументовДляРасчетаСреднегоЗаработка.Получить(Объект.ДокументОснование));
	
КонецПроцедуры

Функция СотрудникОтпускаПоУходуЗаРебенком(ФизическоеЛицо, Организация, Дата) Экспорт
	
	ОсновныеСотрудники = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо), Истина, Организация, Дата);
	
	Если ОсновныеСотрудники.Количество() > 0 Тогда
		Сотрудник = ОсновныеСотрудники[0].Сотрудник;
	КонецЕсли;
	
	Возврат Сотрудник;
	
КонецФункции

Процедура ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпуску(Объект, РеквизитыДокумента)
	
	НеобходимыеРеквизиты = Новый Массив;
	НеобходимыеРеквизиты.Добавить("Организация");
	НеобходимыеРеквизиты.Добавить("Сотрудник");
	НеобходимыеРеквизиты.Добавить("ИсправленныйДокумент");
	НеобходимыеРеквизиты.Добавить("Дата");
	
	РеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, НеобходимыеРеквизиты);
	
	ОрганизацияОснования = Неопределено;
	СотрудникОснования = Неопределено;
	ИсправленныйДокумент = Неопределено;
	ДатаПредставленияПакетаДокументов = Неопределено;
	
	РеквизитыДокументаОснования.Свойство("Организация", ОрганизацияОснования);
	РеквизитыДокументаОснования.Свойство("Сотрудник", СотрудникОснования);
	РеквизитыДокументаОснования.Свойство("ИсправленныйДокумент", ИсправленныйДокумент);
	РеквизитыДокументаОснования.Свойство("Дата", ДатаПредставленияПакетаДокументов);
	
	РеквизитыДокумента.Вставить("Организация", ОрганизацияОснования);
	РеквизитыДокумента.Вставить("Сотрудник", СотрудникОснования);
	РеквизитыДокумента.Вставить("Перерасчет", ?(ЗначениеЗаполнено(ИсправленныйДокумент), Истина, Ложь));
	РеквизитыДокумента.Вставить("КодПричиныПерерасчета", ?(ЗначениеЗаполнено(ИсправленныйДокумент), "01", "00"));
	РеквизитыДокумента.Вставить("ДатаПредставленияПакетаДокументов", ДатаПредставленияПакетаДокументов);
		
КонецПроцедуры

Процедура ЗаполнитьРеквизитыРасчетаСреднегоЗаработкаВЗаявленииСотрудникаНаВыплатуПособия(РеквизитыДокумента, ДанныеДокументовДляРасчетаСреднегоЗаработка)
	
	ПараметрыРасчета = ДанныеДокументовДляРасчетаСреднегоЗаработка.ПараметрыРасчета;
	ДанныеРасчетаСреднего = ДанныеДокументовДляРасчетаСреднегоЗаработка.ДанныеРасчетаСреднего;
	
	РеквизитыДокумента.Вставить("ДатаНачалаРасчетногоПериода", 		ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаНачало);
	РеквизитыДокумента.Вставить("ДатаОкончанияРасчетногоПериода", 	ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаОкончание);
	РеквизитыДокумента.Вставить("ПервыйРасчетныйГод", 				ПараметрыРасчета.РасчетныеГоды[0]);
	РеквизитыДокумента.Вставить("ВторойРасчетныйГод", 				ПараметрыРасчета.РасчетныеГоды[1]);
	РеквизитыДокумента.Вставить("РайонныйКоэффициент", 				ПараметрыРасчета.РайонныйКоэффициентРФ);
	РеквизитыДокумента.Вставить("РазмерСтавки", 					УчетПособийСоциальногоСтрахованияКлиентСервер.ДоляНеполногоВремени(ПараметрыРасчета));
	РеквизитыДокумента.Вставить("НеполноеРабочееВремя", 			РеквизитыДокумента.РазмерСтавки < 1);

	Если ЗначениеЗаполнено(ПараметрыРасчета.ДатаНачалаСобытия)
		И ЗначениеЗаполнено(ПараметрыРасчета.ПорядокРасчета) Тогда
		
		ПериодРасчетаСреднего = УчетПособийСоциальногоСтрахованияКлиентСервер.ПериодРасчетаСреднегоЗаработкаФСС(ПараметрыРасчета.ДатаНачалаСобытия, ПараметрыРасчета.ПорядокРасчета);
		
		ПервыйГодПоДатеСобытия = Год(ПериодРасчетаСреднего.ДатаНачала);
		ВторойГодПоДатеСобытия = Год(ПериодРасчетаСреднего.ДатаОкончания);
		
		// Поменять периоды местами, если в действительности заменялся только один из периодов.
		ПоменятьМестами = (ПервыйГодПоДатеСобытия = РеквизитыДокумента.ВторойРасчетныйГод
			Или ВторойГодПоДатеСобытия = РеквизитыДокумента.ПервыйРасчетныйГод);
		
		РеквизитыДокумента.Вставить("ПервыйЗамененныйГод", ?(ПоменятьМестами, ВторойГодПоДатеСобытия, ПервыйГодПоДатеСобытия));
		РеквизитыДокумента.Вставить("ВторойЗамененныйГод", ?(ПоменятьМестами, ПервыйГодПоДатеСобытия, ВторойГодПоДатеСобытия));
		
		Если РеквизитыДокумента.ПервыйЗамененныйГод <> РеквизитыДокумента.ПервыйРасчетныйГод
			Или РеквизитыДокумента.ВторойЗамененныйГод <> РеквизитыДокумента.ВторойРасчетныйГод Тогда
			РеквизитыДокумента.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", Истина);
		Иначе
			РеквизитыДокумента.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	УчитываемыхДнейВКалендарныхГодах = УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыхДнейВКалендарныхГодахФСС(ПараметрыРасчета, ДанныеРасчетаСреднего);
	РеквизитыДокумента.Вставить("ЧислоКалендарныхДнейРасчетногоПериода", УчитываемыхДнейВКалендарныхГодах);
	
	СтрокаПоГоду = УчетСреднегоЗаработкаКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РеквизитыДокумента.ПервыйРасчетныйГод));
	Если НЕ СтрокаПоГоду = Неопределено Тогда
		РеквизитыДокумента.Вставить("ЗаработокПервыйГодРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФССПоГоду(ПараметрыРасчета, СтрокаПоГоду));
	Иначе
		РеквизитыДокумента.Вставить("ЗаработокПервыйГодРасчета", 0);
	КонецЕсли;
	
	СтрокаПоГоду = УчетСреднегоЗаработкаКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РеквизитыДокумента.ВторойРасчетныйГод));
	Если НЕ СтрокаПоГоду = Неопределено Тогда
		РеквизитыДокумента.Вставить("ЗаработокВторойГодРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФССПоГоду(ПараметрыРасчета, СтрокаПоГоду));
	Иначе
		РеквизитыДокумента.Вставить("ЗаработокВторойГодРасчета", 0);
	КонецЕсли;
	
КонецПроцедуры

Функция РайонныйКоэффициентРФПодразделенияОрганизацииДляЗаявленияСотрудникаНаВыплатуПособия(Организация, Подразделение = Неопределено) Экспорт
	
	Если Подразделение = Неопределено Тогда
		Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка()
	КонецЕсли;
	
	// Размер районного коэффициента, установленного для организации
	РайонныйКоэффициентРФПодразделенияОрганизации = 1;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Подразделение",Подразделение);
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Подразделение.РайонныйКоэффициентРФ > 1
	|			ТОГДА Подразделение.РайонныйКоэффициентРФ
	|		КОГДА Организации.РайонныйКоэффициентРФ > 1
	|			ТОГДА Организации.РайонныйКоэффициентРФ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК РайонныйКоэффициентРФОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК Подразделение
	|		ПО Организации.Ссылка = Подразделение.Владелец
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|	И (&Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ИЛИ Подразделение.Ссылка = &Подразделение)";
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		РайонныйКоэффициентРФПодразделенияОрганизации = Выборка.РайонныйКоэффициентРФОрганизации;
	КонецЕсли;
	
	Возврат РайонныйКоэффициентРФПодразделенияОрганизации
	
КонецФункции

Функция ТипДокументаОснованияЗаявленияСотрудникаНаВыплатуПособия(ВидПособия) Экспорт
	
	ПустоеЗначение = Документы.БольничныйЛист.ПустаяСсылка();
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		ПустоеЗначение = Документы.ОтпускПоУходуЗаРебенком.ПустаяСсылка();
	ИначеЕсли ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		ПустоеЗначение = Документы.Отпуск.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ПустоеЗначение;
	
КонецФункции

Функция СписокДетейПоУходуЗаКоторымиПредоставленОтпуск(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ИдентификаторСтроки,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаРожденияРебенка
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",ДокументОснование);
	Результат = Запрос.Выполнить();
	
	ДанныеОДетях = Новый СписокЗначений;
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеОДетях.Добавить(Выборка.ИдентификаторСтроки, Выборка.Имя + " ("+ Формат(Выборка.ДатаРожденияРебенка, "ДЛФ=D") +")");
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеОДетях;
	
КонецФункции

Функция ВидПособияИмеетДокументОснование(ВидПособия) Экспорт
	
	ВидПособияИмеетДокументОснование = Ложь;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки Тогда
		ВидПособияИмеетДокументОснование = Истина;
	КонецЕсли;
	
	Возврат ВидПособияИмеетДокументОснование;
	
КонецФункции

Функция ДоляРабочегоВремениСотрудника(Сотрудник, Дата) Экспорт
	
	ДоляРабочегоВремениСотрудника = ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ДоляРабочегоВремениСотрудника(Сотрудник, Дата);
	
	КадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), "ДоляНеполногоРабочегоВремени", Дата);
	Если КадровыеДанныеСотрудника.Количество() > 0 Тогда
		
		ДоляРабочегоВремениСотрудника = КадровыеДанныеСотрудника[0].ДоляНеполногоРабочегоВремени;
		
	КонецЕсли;
	
	Возврат ДоляРабочегоВремениСотрудника;
	
КонецФункции

Процедура ПометитьЗаявлениеНаУдаление(Заявление) Экспорт
	ЗаявлениеОбъект = Заявление.ПолучитьОбъект();
	ЗаявлениеОбъект.УстановитьПометкуУдаления(Истина);
КонецПроцедуры

Процедура ДобавитьКомандыПечатиЗаявленияСотрудникаНаВыплатуПособия(КомандыПечати) Экспорт
	
	// Печать заявления о выплате пособия.
	Если ПравоДоступа("Использование", Метаданные.Обработки.ПечатьПрямыеВыплатыПособийСоциальногоСтрахованияФСС) Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик     = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьПрямыеВыплатыПособийСоциальногоСтрахованияФСС";
		КомандаПечати.Идентификатор  = "СправкаПоРасчетуСуммыДоплатыПособия";
		КомандаПечати.Представление  = НСтр("ru = 'Справка по расчету суммы доплаты пособия'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий

Процедура ПриОпределенииЗапросаРеестраПрямыхВыплатПоБольничнымЛистам(Запрос, Заявление)
	Запрос.УстановитьПараметр("МассивКатегорий", ПрямыеВыплатыПособийСоциальногоСтрахования.КатегорииНачисленийПособийПоПрямымВыплатамФСС());
	
	Запрос.Текст = ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ТекстЗапросаСписокЗаявлений(Заявление);
	Запрос.Текст = Запрос.Текст + ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов() +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заявления.Ссылка КАК Заявление,
	|	МИНИМУМ(БольничныйЛистНачисления.ДатаНачала) КАК ДатаНачала,
	|	МАКСИМУМ(БольничныйЛистНачисления.ДатаОкончания) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТПериодыОплатыЗаСчетФСС
	|ИЗ
	|	Заявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.Начисления КАК БольничныйЛистНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|			ПО БольничныйЛистНачисления.Начисление = Начисления.Ссылка
	|		ПО Заявления.ДокументОснование = БольничныйЛистНачисления.Ссылка
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&МассивКатегорий)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявления.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заявления.Ссылка КАК Заявление,
	|	БольничныйЛист.Ссылка КАК ПервичныйДокумент,
	|	БольничныйЛист.ПредоставленДубликатЛисткаНетрудоспособности КАК ПредоставленДубликатЛисткаНетрудоспособности,
	|	НЕ БольничныйЛист.ЯвляетсяПродолжениемБолезни КАК ЯвляетсяПервичнымЛисткомНетрудоспособности,
	|	БольничныйЛист.НомерПервичногоЛисткаНетрудоспособности КАК НомерПервичногоЛисткаНетрудоспособности,
	|	БольничныйЛист.МедицинскаяОрганизация КАК МедицинскаяОрганизация,
	|	БольничныйЛист.НаименованиеМедицинскойОрганизации КАК НаименованиеМедицинскойОрганизации,
	|	БольничныйЛист.АдресМедицинскойОрганизации КАК АдресМедицинскойОрганизации,
	|	БольничныйЛист.ОГРНМедицинскойОрганизации КАК ОГРНМедицинскойОрганизации,
	|	БольничныйЛист.НомерЛисткаНетрудоспособности КАК НомерЛисткаНетрудоспособности,
	|	БольничныйЛист.ДатаВыдачиЛисткаНетрудоспособности КАК ДатаВыдачиЛисткаНетрудоспособности,
	|	БольничныйЛист.КодПричиныНетрудоспособности КАК КодПричиныНетрудоспособности,
	|	БольничныйЛист.ДополнительныйКодПричиныНетрудоспособности КАК ДополнительныйКодПричиныНетрудоспособности,
	|	БольничныйЛист.ВторойКодПричиныНетрудоспособности КАК ВторойКодПричиныНетрудоспособности,
	|	БольничныйЛист.НаименованиеОрганизацииВЛисткеНетрудоспособности КАК НаименованиеОрганизацииВЛисткеНетрудоспособности,
	|	БольничныйЛист.ОсновноеМестоРаботы КАК ОсновноеМестоРаботы,
	|	БольничныйЛист.НомерЛисткаПоОсновномуМестуРаботы КАК НомерЛисткаПоОсновномуМестуРаботы,
	|	БольничныйЛист.ДатаИзмененияКодаПричиныНетрудоспособности КАК ДатаИзмененияКодаПричиныНетрудоспособности,
	|	БольничныйЛист.ДатаОкончанияПутевки КАК ДатаОкончанияПутевки,
	|	БольничныйЛист.НомерПутевки КАК НомерПутевки,
	|	БольничныйЛист.ОГРН_Санатория КАК ОГРН_Санатория,
	|	БольничныйЛист.ПоУходуВозрастЛет1 КАК ПоУходуВозрастЛет1,
	|	БольничныйЛист.ПоУходуВозрастМесяцев1 КАК ПоУходуВозрастМесяцев1,
	|	БольничныйЛист.ПоУходуРодственнаяСвязь1 КАК ПоУходуРодственнаяСвязь1,
	|	БольничныйЛист.ПоУходуФИО1 КАК ПоУходуФИО1,
	|	БольничныйЛист.ПоУходуИспользованоДней1 КАК ПоУходуИспользованоДней1,
	|	БольничныйЛист.ПоУходуВозрастЛет2 КАК ПоУходуВозрастЛет2,
	|	БольничныйЛист.ПоУходуВозрастМесяцев2 КАК ПоУходуВозрастМесяцев2,
	|	БольничныйЛист.ПоУходуРодственнаяСвязь2 КАК ПоУходуРодственнаяСвязь2,
	|	БольничныйЛист.ПоУходуФИО2 КАК ПоУходуФИО2,
	|	БольничныйЛист.ПоУходуИспользованоДней2 КАК ПоУходуИспользованоДней2,
	|	БольничныйЛист.ПоставленаНаУчетВРанниеСрокиБеременности КАК ПоставленаНаУчетВРанниеСрокиБеременности,
	|	БольничныйЛист.КодНарушенияРежима КАК КодНарушенияРежима,
	|	БольничныйЛист.ДатаНарушенияРежима КАК ДатаНарушенияРежима,
	|	БольничныйЛист.ПериодНахожденияВСтационареСРебенкомС КАК ПериодНахожденияВСтационареСРебенкомС,
	|	БольничныйЛист.ПериодНахожденияВСтационареСРебенкомПо КАК ПериодНахожденияВСтационареСРебенкомПо,
	|	БольничныйЛист.ДатаНаправленияВБюроМСЭ КАК ДатаНаправленияВБюроМСЭ,
	|	БольничныйЛист.ДатаРегистрацииДокументовМСЭ КАК ДатаРегистрацииДокументовМСЭ,
	|	БольничныйЛист.ДатаОсвидетельствованияМСЭ КАК ДатаОсвидетельствованияМСЭ,
	|	БольничныйЛист.ГруппаИнвалидности КАК ГруппаИнвалидности,
	|	БольничныйЛист.ОсвобождениеДатаНачала1 КАК ОсвобождениеДатаНачала1,
	|	БольничныйЛист.ОсвобождениеДатаОкончания1 КАК ОсвобождениеДатаОкончания1,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача1 КАК ОсвобождениеДолжностьВрача1,
	|	БольничныйЛист.ОсвобождениеФИОВрача1 КАК ОсвобождениеФИОВрача1,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача1 КАК ОсвобождениеИдентификационныйНомерВрача1,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК1 КАК ОсвобождениеФИОВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК1 КАК ОсвобождениеДолжностьВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК1 КАК ОсвобождениеИдентификационныйНомерВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеДатаНачала2 КАК ОсвобождениеДатаНачала2,
	|	БольничныйЛист.ОсвобождениеДатаОкончания2 КАК ОсвобождениеДатаОкончания2,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача2 КАК ОсвобождениеДолжностьВрача2,
	|	БольничныйЛист.ОсвобождениеФИОВрача2 КАК ОсвобождениеФИОВрача2,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача2 КАК ОсвобождениеИдентификационныйНомерВрача2,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК2 КАК ОсвобождениеФИОВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК2 КАК ОсвобождениеДолжностьВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК2 КАК ОсвобождениеИдентификационныйНомерВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеДатаНачала3 КАК ОсвобождениеДатаНачала3,
	|	БольничныйЛист.ОсвобождениеДатаОкончания3 КАК ОсвобождениеДатаОкончания3,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача3 КАК ОсвобождениеДолжностьВрача3,
	|	БольничныйЛист.ОсвобождениеФИОВрача3 КАК ОсвобождениеФИОВрача3,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача3 КАК ОсвобождениеИдентификационныйНомерВрача3,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК3 КАК ОсвобождениеФИОВрачаПредседателяВК3,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК3 КАК ОсвобождениеДолжностьВрачаПредседателяВК3,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК3 КАК ОсвобождениеИдентификационныйНомерВрачаПредседателяВК3,
	|	БольничныйЛист.ПриступитьКРаботеС КАК ПриступитьКРаботеС,
	|	БольничныйЛист.ДатаНовыйСтатусНетрудоспособного КАК ДатаНовыйСтатусНетрудоспособного,
	|	БольничныйЛист.НовыйСтатусНетрудоспособного КАК НовыйСтатусНетрудоспособного,
	|	БольничныйЛист.НомерЛисткаПродолжения КАК НомерЛисткаПродолжения,
	|	БольничныйЛист.УсловияИсчисленияКод1 КАК УсловияИсчисленияКод1,
	|	БольничныйЛист.УсловияИсчисленияКод2 КАК УсловияИсчисленияКод2,
	|	БольничныйЛист.УсловияИсчисленияКод3 КАК УсловияИсчисленияКод3,
	|	БольничныйЛист.ДатаАктаН1 КАК ДатаАктаН1,
	|	БольничныйЛист.ДатаНачалаРаботы КАК ДатаНачалаРаботы,
	|	БольничныйЛист.СтажЛет КАК СтажЛет,
	|	БольничныйЛист.СтажМесяцев КАК СтажМесяцев,
	|	БольничныйЛист.СтажРасширенныйЛет КАК СтажРасширенныйЛет,
	|	БольничныйЛист.СтажРасширенныйМесяцев КАК СтажРасширенныйМесяцев,
	|	БольничныйЛист.ФинансированиеФедеральнымБюджетом КАК ФинансированиеФедеральнымБюджетом,
	|	ВТПериодыОплатыЗаСчетФСС.ДатаНачала КАК ДатаНачалаОплаты,
	|	ВТПериодыОплатыЗаСчетФСС.ДатаОкончания КАК ДатаОкончанияОплаты
	|ИЗ
	|	Заявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
	|		ПО Заявления.ДокументОснование = БольничныйЛист.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыОплатыЗаСчетФСС КАК ВТПериодыОплатыЗаСчетФСС
	|		ПО Заявления.Ссылка = ВТПериодыОплатыЗаСчетФСС.Заявление";
	
КонецПроцедуры

Процедура ПриОпределенииЗапросаРеестраПрямыхВыплатПоОтпускамПоУходу(Запрос, Заявление)
	
	Запрос.Текст = ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ТекстЗапросаСписокЗаявлений(Заявление);
	Запрос.Текст = Запрос.Текст + ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов() +
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя) > 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОдновременныйУходЗаНесколькимиДетьми
	|ПОМЕСТИТЬ МногодетныеДокументы
	|ИЗ
	|	Заявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|		ПО Заявления.ДокументОснование = ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявления.Ссылка КАК Заявление,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРожденияРебенка КАК ДатаРожденияРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФамилияРебенка КАК ФамилияРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ИмяРебенка КАК ИмяРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ОтчествоРебенка КАК ОтчествоРебенка,
	|	ОтпускПоУходуЗаРебенком.Ссылка КАК ПервичныйДокумент,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Очередность КАК ОчередностьРожденияРебенка,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Ссылка ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении)
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.ИнойДокументПодтверждающийРождениеРебенка)
	|				КОНЕЦ
	|		ИНАЧЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.ВидПодтверждающегоДокумента
	|	КОНЕЦ КАК ВидПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаименованиеПодтверждающегоДокумента КАК НаименованиеПодтверждающегоДокумента,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Ссылка ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение
	|				КОНЕЦ
	|		ИНАЧЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаДокумента
	|	КОНЕЦ КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Ссылка ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.СерияСвидетельстваОРождении
	|				КОНЕЦ
	|		ИНАЧЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.СерияДокумента
	|	КОНЕЦ КАК СерияДокумента,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Ссылка ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерСвидетельстваОРождении
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерРешенияОбОпеке
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерИногоДокументаПодтверждающегоРождение
	|				КОНЕЦ
	|		ИНАЧЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерДокумента
	|	КОНЕЦ КАК НомерДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаличиеРешенияСудаОЛишенииПрав КАК НаличиеРешенияСудаОЛишенииПрав,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФинансированиеФедеральнымБюджетом КАК ФинансированиеФедеральнымБюджетом,
	|	МногодетныеДокументы.ОдновременныйУходЗаНесколькимиДетьми КАК ОдновременныйУходЗаНесколькимиДетьми
	|ИЗ
	|	Заявления КАК Заявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|		ПО Заявления.Ссылка = ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|			ПО ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка = ОтпускПоУходуЗаРебенком.Ссылка
	|		ПО Заявления.ДокументОснование = ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка
	|			И Заявления.ИдентификаторСтрокиОснования = ОтпускПоУходуЗаРебенкомДанныеОДетях.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ МногодетныеДокументы КАК МногодетныеДокументы
	|		ПО Заявления.ДокументОснование = МногодетныеДокументы.Ссылка";
	
КонецПроцедуры

#КонецОбласти

#Область ФиксацияРеквизитов

Процедура ДобавитьФиксируемыйРеквизит(ФиксируемыеРеквизиты, Шаблон, ИмяРеквизита)
	Шаблон.ИмяРеквизита = ИмяРеквизита;
	Ключ = ?(Шаблон.Путь = Неопределено, ИмяРеквизита, Шаблон.Путь + ИмяРеквизита);
	ФиксируемыеРеквизиты.Вставить(Ключ, Новый ФиксированнаяСтруктура(Шаблон));
КонецПроцедуры

#КонецОбласти

#КонецОбласти
