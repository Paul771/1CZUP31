////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в бухгалтерском учете.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает структуру с настройкой бухучета сотрудника на указанную дату.
//
// Параметры:
//  Сотрудник - Тип СправочникСсылка.Сотрудник
//  ДатаАктуальности - Тип Дата, дата на которую получаем способ отражения.
//
// Возвращаемое значение: Структура, ключи СпособОтраженияЗарплатыВБухучете, ОтношениеКЕНВД, Период
//		СпособОтраженияЗарплатыВБухучете, тип Справочник.СпособыОтраженияЗарплатыВБухУчете
//		ОтношениеКЕНВД, тип Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.
//		Период, дата на которую установлено значение.
//
Функция НастройкаБухучетаЗарплатыСотрудника(Сотрудник, ДатаАктуальности) Экспорт
	
	БухучетСотрудника = Новый Структура("СтатьяФинансирования, СтатьяРасходов, СпособОтраженияЗарплатыВБухучете, ОтношениеКЕНВД, Период");
	БухучетСотрудника.СтатьяФинансирования = Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка();
	БухучетСотрудника.СтатьяРасходов = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	БухучетСотрудника.СпособОтраженияЗарплатыВБухучете = Справочники.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка();
	БухучетСотрудника.ОтношениеКЕНВД = Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка();
	БухучетСотрудника.Период = Дата(1,1,1);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза", ДатаАктуальности);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетЗарплатыСотрудников.Период,
	|	ВЫБОР
	|		КОГДА БухучетЗарплатыСотрудников.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетЗарплатыСотрудников.ДействуетДо <= &ДатаСреза
	|			ТОГДА БухучетЗарплатыСотрудников.СтатьяФинансированияПоОкончании
	|		ИНАЧЕ БухучетЗарплатыСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА БухучетЗарплатыСотрудников.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетЗарплатыСотрудников.ДействуетДо <= &ДатаСреза
	|			ТОГДА БухучетЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучетеПоОкончании
	|		ИНАЧЕ БухучетЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетЗарплатыСотрудников.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетЗарплатыСотрудников.ДействуетДо <= &ДатаСреза
	|			ТОГДА БухучетЗарплатыСотрудников.ОтношениеКЕНВДПоОкончании
	|		ИНАЧЕ БухучетЗарплатыСотрудников.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД
	|ИЗ
	|	РегистрСведений.БухучетЗарплатыСотрудников.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК БухучетЗарплатыСотрудников";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(БухучетСотрудника, Выборка);
	КонецЕсли;
	
	Возврат БухучетСотрудника;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область СведенияОБухучетеЗарплаты

// Формирует временную таблицу ВТСведенияОБухучетеЗарплатыСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в параметре ИменаПолейВременнойТаблицы.
//
//	Структура таблицы ВТСведенияОБухучетеЗарплатыСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Сотрудник, Период.
//			Поля Организация и Подразделение могут отсутствовать, если заполнены параметр Организация, Подразделение.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы = "Сотрудник,Период", Организация = Неопределено, Подразделение = Неопределено, ТерриторияВыполненияРаботВОрганизации = Неопределено ) Экспорт
	
	МассивИменПолейОтбора = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолейВременнойТаблицы, ",");
	ИмяПоляСотрудник     = "Таблица." + МассивИменПолейОтбора[0];
	ИмяПоляПериод        = "Таблица." + МассивИменПолейОтбора[1];
	
	ИспользоватьСтатьиФинансирования = ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата();
	
	Статья211 = СтатьяРасходов211();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ИспользоватьСтатьиФинансирования);
	Запрос.УстановитьПараметр("Статья211", Статья211);
	
	ОрганизацияВТаблице   = Организация = Неопределено;
	ПодразделениеВТаблице = Подразделение = Неопределено;
	ТерриторияВТаблице    = ТерриторияВыполненияРаботВОрганизации = Неопределено;
	
	УдалитьВТ = Новый Массив;
	
	Если ОрганизацияВТаблице Тогда
		
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Организация
		|ПОМЕСТИТЬ ВТОрганизацииИзТаблицы
		|ИЗ
		|	ИмяВременнойТаблицы КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиЗарплатаКадрыРасширенная.Организация,
		|	НастройкиЗарплатаКадрыРасширенная.ИспользоватьОбособленныеТерритории КАК Использование
		|ПОМЕСТИТЬ ВТИспользованиеОбособленныхТерриторийВОрганизации
		|ИЗ
		|	РегистрСведений.НастройкиЗарплатаКадрыРасширенная КАК НастройкиЗарплатаКадрыРасширенная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОрганизацииИзТаблицы КАК Организации
		|		ПО НастройкиЗарплатаКадрыРасширенная.Организация = Организации.Организация";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
		Запрос.Выполнить();
		
		УдалитьВТ.Добавить("ВТОрганизацииИзТаблицы");
		
	Иначе
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиЗарплатаКадрыРасширенная.Организация,
		|	НастройкиЗарплатаКадрыРасширенная.ИспользоватьОбособленныеТерритории КАК Использование
		|ПОМЕСТИТЬ ВТИспользованиеОбособленныхТерриторийВОрганизации
		|ИЗ
		|	РегистрСведений.НастройкиЗарплатаКадрыРасширенная КАК НастройкиЗарплатаКадрыРасширенная
		|ГДЕ
		|	НастройкиЗарплатаКадрыРасширенная.Организация = &Организация";
		Запрос.Выполнить();
		
	КонецЕсли; 
	УдалитьВТ.Добавить("ВТИспользованиеОбособленныхТерриторийВОрганизации");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляОрганизация КАК Организация,
	|	&ИмяПоляПериод КАК Период
	|ПОМЕСТИТЬ ВТОтборОрганизаций
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.Организация КАК Организация,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплаты.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				И БухучетЗарплаты.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБухучетОрганизации
	|ПОМЕСТИТЬ ВТБухучетОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.Организация КАК Организация,
	|		Организации.Период КАК Период,
	|		МАКСИМУМ(БухучетЗарплатыОрганизаций.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТОтборОрганизаций КАК Организации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыОрганизаций КАК БухучетЗарплатыОрганизаций
	|			ПО Организации.Организация = БухучетЗарплатыОрганизаций.Организация
	|				И Организации.Период >= БухучетЗарплатыОрганизаций.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Организации.Организация,
	|		Организации.Период) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыОрганизаций КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.Организация = БухучетЗарплаты.Организация
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Период";
	
	УдалитьВТ.Добавить("ВТОтборОрганизаций");
	УдалитьВТ.Добавить("ВТБухучетОрганизаций");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	Если ОрганизацияВТаблице Тогда
		ИмяПоляОрганизация = "Таблица.Организация";
	Иначе
		ИмяПоляОрганизация = "&Организация";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляОрганизация", ИмяПоляОрганизация);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляПодразделение КАК Подразделение,
	|	&ИмяПоляПериод КАК Период
	|ПОМЕСТИТЬ ВТОтборПодразделений
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.Подразделение КАК Подразделение,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплаты.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				И БухучетЗарплаты.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБухучетПодразделения
	|ПОМЕСТИТЬ ВТБухучетПодразделений
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныеПериоды.Подразделение КАК Подразделение,
	|		МаксимальныеПериоды.Период КАК Период,
	|		МаксимальныеПериоды.ПериодРегистра КАК ПериодРегистра
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Подразделения.Подразделение КАК Подразделение,
	|			Подразделения.Период КАК Период,
	|			МАКСИМУМ(БухучетЗарплатыПодразделений.Период) КАК ПериодРегистра
	|		ИЗ
	|			ВТОтборПодразделений КАК Подразделения
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|				ПО Подразделения.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|					И Подразделения.Период >= БухучетЗарплатыПодразделений.Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Подразделения.Подразделение,
	|			Подразделения.Период) КАК МаксимальныеПериоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|			ПО МаксимальныеПериоды.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|				И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплатыПодразделений.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МаксимальныеПериоды.Подразделение,
	|		МаксимальныеПериоды.ПериодРегистра,
	|		МаксимальныеПериоды.Период
	|	
	|	ИМЕЮЩИЕ
	|		КОЛИЧЕСТВО(БухучетЗарплатыПодразделений.ИдентификаторСтроки) = 1) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.Подразделение = БухучетЗарплаты.Подразделение
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение,
	|	Период";
	
	УдалитьВТ.Добавить("ВТОтборПодразделений");
	УдалитьВТ.Добавить("ВТБухучетПодразделений");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	Если ПодразделениеВТаблице Тогда
		ИмяПоляПодразделение = "Таблица.Подразделение";
	Иначе
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		ИмяПоляПодразделение = "&Подразделение";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПодразделение", ИмяПоляПодразделение);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляТерритория КАК ТерриторияВыполненияРаботВОрганизации,
	|	&ИмяПоляПериод КАК Период
	|ПОМЕСТИТЬ ВТОтборТерриторий
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплаты.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				И БухучетЗарплаты.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБухучетТерритории
	|ПОМЕСТИТЬ ВТБухучетТерриторий
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|		МаксимальныеПериоды.Период КАК Период,
	|		МаксимальныеПериоды.ПериодРегистра КАК ПериодРегистра
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Территории.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|			Территории.Период КАК Период,
	|			МАКСИМУМ(БухучетЗарплатыТерриторий.Период) КАК ПериодРегистра
	|		ИЗ
	|			ВТОтборТерриторий КАК Территории
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыТерриторийВыполненияРабот КАК БухучетЗарплатыТерриторий
	|				ПО Территории.ТерриторияВыполненияРаботВОрганизации = БухучетЗарплатыТерриторий.ТерриторияВыполненияРабот
	|					И Территории.Период >= БухучетЗарплатыТерриторий.Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Территории.ТерриторияВыполненияРаботВОрганизации,
	|			Территории.Период) КАК МаксимальныеПериоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыТерриторийВыполненияРабот КАК БухучетЗарплатыТерриторий
	|			ПО МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации = БухучетЗарплатыТерриторий.ТерриторияВыполненияРабот
	|				И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплатыТерриторий.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации,
	|		МаксимальныеПериоды.ПериодРегистра,
	|		МаксимальныеПериоды.Период
	|	
	|	ИМЕЮЩИЕ
	|		КОЛИЧЕСТВО(БухучетЗарплатыТерриторий.ИдентификаторСтроки) = 1) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыТерриторийВыполненияРабот КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации = БухучетЗарплаты.ТерриторияВыполненияРабот
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТерриторияВыполненияРаботВОрганизации,
	|	Период";
	
	УдалитьВТ.Добавить("ВТОтборТерриторий");
	УдалитьВТ.Добавить("ВТБухучетТерриторий");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	Если ТерриторияВТаблице Тогда
		ИмяПоляТерритория = "Таблица.ТерриторияВыполненияРаботВОрганизации";
	Иначе
		Запрос.УстановитьПараметр("Территория", ТерриторияВыполненияРаботВОрганизации);
		ИмяПоляТерритория = "&Территория";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляТерритория", ИмяПоляТерритория);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляСотрудник КАК Сотрудник,
	|	&ИмяПоляПериод КАК Период
	|ПОМЕСТИТЬ ВТОтборСотрудников
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.Сотрудник КАК Сотрудник,
	|	МаксимальныеПериоды.Период КАК Период,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетЗарплаты.ДействуетДо <= МаксимальныеПериоды.Период
	|			ТОГДА БухучетЗарплаты.СтатьяФинансированияПоОкончании
	|		ИНАЧЕ БухучетЗарплаты.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетЗарплаты.ДействуетДо <= МаксимальныеПериоды.Период
	|			ТОГДА БухучетЗарплаты.СпособОтраженияЗарплатыВБухучетеПоОкончании
	|		ИНАЧЕ БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетЗарплаты.ДействуетДо <= МаксимальныеПериоды.Период
	|			ТОГДА БухучетЗарплаты.ОтношениеКЕНВДПоОкончании
	|		ИНАЧЕ БухучетЗарплаты.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетЗарплаты.ДействуетДо <= МаксимальныеПериоды.Период
	|			ТОГДА ВЫБОР
	|					КОГДА БухучетЗарплаты.СтатьяФинансированияПоОкончании = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|							И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучетеПоОкончании = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|							И БухучетЗарплаты.ОтношениеКЕНВДПоОкончании = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА БухучетЗарплаты.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|						И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|						И БухучетЗарплаты.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕстьБухучетСотрудника
	|ПОМЕСТИТЬ ВТБухучетСотрудников
	|ИЗ
	|	(ВЫБРАТЬ
	|		Сотрудники.Сотрудник КАК Сотрудник,
	|		Сотрудники.Период КАК Период,
	|		МАКСИМУМ(БухучетЗарплатыСотрудников.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТОтборСотрудников КАК Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплатыСотрудников
	|			ПО Сотрудники.Сотрудник = БухучетЗарплатыСотрудников.Сотрудник
	|				И Сотрудники.Период >= БухучетЗарплатыСотрудников.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Сотрудники.Сотрудник,
	|		Сотрудники.Период) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.Сотрудник = БухучетЗарплаты.Сотрудник
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период";
	
	УдалитьВТ.Добавить("ВТОтборСотрудников");
	УдалитьВТ.Добавить("ВТБухучетСотрудников");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляСотрудник", ИмяПоляСотрудник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляОрганизация КАК Организация,
	|	&ИмяПоляПодразделение КАК Подразделение,
	|	&ИмяПоляТерритория КАК ТерриторияВыполненияРаботВОрганизации,
	|	&ИмяПоляСотрудник КАК Сотрудник,
	|	&ИмяПоляПериод КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(БухучетСотрудников.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетСотрудников.СтатьяФинансирования
	|		КОГДА ИспользованиеТерриторий.Использование
	|				И ЕСТЬNULL(БухучетТерриторий.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетТерриторий.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(БухучетПодразделений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетПодразделений.СтатьяФинансирования
	|		ИНАЧЕ ЕСТЬNULL(БухучетОрганизаций.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка))
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	&Статья211 КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БухучетСотрудников.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА БухучетСотрудников.СпособОтраженияЗарплатыВБухучете
	|		КОГДА ИспользованиеТерриторий.Использование
	|				И ЕСТЬNULL(БухучетТерриторий.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА БухучетТерриторий.СпособОтраженияЗарплатыВБухучете
	|		КОГДА ЕСТЬNULL(БухучетПодразделений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА БухучетПодразделений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ ЕСТЬNULL(БухучетОрганизаций.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка))
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БухучетСотрудников.ОтношениеКЕНВД, ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА БухучетСотрудников.ОтношениеКЕНВД
	|		КОГДА ИспользованиеТерриторий.Использование
	|				И ЕСТЬNULL(БухучетТерриторий.ОтношениеКЕНВД, ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА БухучетТерриторий.ОтношениеКЕНВД
	|		КОГДА ЕСТЬNULL(БухучетПодразделений.ОтношениеКЕНВД, ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА БухучетПодразделений.ОтношениеКЕНВД
	|		ИНАЧЕ ЕСТЬNULL(БухучетОрганизаций.ОтношениеКЕНВД, ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка))
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	ЕСТЬNULL(БухучетОрганизаций.ЕстьБухучетОрганизации, ЛОЖЬ) КАК ЕстьБухучетОрганизации,
	|	ЕСТЬNULL(БухучетПодразделений.ЕстьБухучетПодразделения, ЛОЖЬ) КАК ЕстьБухучетПодразделения,
	|	ИспользованиеТерриторий.Использование
	|		И ЕСТЬNULL(БухучетТерриторий.ЕстьБухучетТерритории, ЛОЖЬ) КАК ЕстьБухучетТерритории,
	|	ЕСТЬNULL(БухучетСотрудников.ЕстьБухучетСотрудника, ЛОЖЬ) КАК ЕстьБухучетСотрудника
	|ПОМЕСТИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетСотрудников КАК БухучетСотрудников
	|		ПО (&ИмяПоляСотрудник = БухучетСотрудников.Сотрудник)
	|			И (&ИмяПоляПериод = БухучетСотрудников.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетПодразделений КАК БухучетПодразделений
	|		ПО (&ИмяПоляПериод = БухучетПодразделений.Период)
	|			И Таблица.Подразделение = БухучетПодразделений.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетТерриторий КАК БухучетТерриторий
	|		ПО (&ИмяПоляПериод = БухучетТерриторий.Период)
	|			И Таблица.ТерриторияВыполненияРаботВОрганизации = БухучетТерриторий.ТерриторияВыполненияРаботВОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетОрганизаций КАК БухучетОрганизаций
	|		ПО (&ИмяПоляПериод = БухучетОрганизаций.Период)
	|			И Таблица.Организация = БухучетОрганизаций.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованиеОбособленныхТерриторийВОрганизации КАК ИспользованиеТерриторий
	|		ПО Таблица.Организация = ИспользованиеТерриторий.Организация";
	
	Если Не ОрганизацияВТаблице Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Таблица.Организация = БухучетОрганизаций.Организация", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПО Таблица.Организация = ИспользованиеТерриторий.Организация", "ПО (ИСТИНА)");
	КонецЕсли; 
	
	Если Не ПодразделениеВТаблице Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Таблица.Подразделение = БухучетПодразделений.Подразделение", "");	
	КонецЕсли;
	
	Если Не ТерриторияВТаблице Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Таблица.ТерриторияВыполненияРаботВОрганизации = БухучетТерриторий.ТерриторияВыполненияРаботВОрганизации", "");	
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляОрганизация", ИмяПоляОрганизация);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПодразделение", ИмяПоляПодразделение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляТерритория", ИмяПоляТерритория);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляСотрудник", ИмяПоляСотрудник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

// Формирует временную таблицу ВТСведенияОБухучетеНачислений
// получает настройки бухучета из ПВР Начисления, у которых задана стратегия отражения в учете КакЗаданоВидуРасчета.
// 
// Параметры:
//		МенеджерВременныхТаблиц - в менеджер помещается таблица ВТСведенияОБухучетеНачислений.
//
Процедура СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц, ИспользоватьСтатьиФинансирования = Неопределено, РаботаВБюджетномУчреждении = Неопределено) Экспорт

	Если ИспользоватьСтатьиФинансирования = Неопределено Тогда
		ИспользоватьСтатьиФинансирования = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	КонецЕсли;
	Если РаботаВБюджетномУчреждении = Неопределено Тогда
		РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ИспользоватьСтатьиФинансирования);
	Запрос.УстановитьПараметр("РаботаВБюджетномУчреждении", РаботаВБюджетномУчреждении);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ Начисления.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ Начисления.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	Начисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	Начисления.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТСведенияОБухучетеНачислений
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)";
	
	Запрос.Выполнить();

КонецПроцедуры

// Формирует таблицу отражения в бухучете начислений - ВТБухучетНачислений.
//
//	МенеджерВременныхТаблиц должен содержать таблицу с именем ВТНачисленияДляРаспределения
//	Описание таблицы ВТНачисленияДляРаспределения
// 		ПериодРегистрации
// 		Организация
// 		Сотрудник
// 		ФизическоеЛицо
// 		Подразделение
//		ТерриторияВыполненияРаботВОрганизации
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		ДатаОкончания
// 		Сумма
//		ДокументОснование
// 		ИдентификаторСтроки 
//
//	МенеджерВременныхТаблиц может содержать таблицу с именем ВТБухучетНачисленийИзФормы
//	Описание таблицы ВТБухучетНачисленийИзФормы
//		Организация
//		Сотрудник
//		ФизическоеЛицо
//		Подразделение
//		Территория
//		Начисление
//		ВидОперации
//		ДатаНачала
//		ДатаОкончания
//		ДокументОснование
//		СпособОтраженияЗарплатыВБухучете
//		СтатьяФинансирования
//		СтатьяРасходов
//		Сумма
//		ОблагаетсяЕНВД
//
// Поля таблицы ВТБухучетНачислений
// 		ПериодРегистрации
// 		ИдентификаторСтроки
//		ПериодПринятияРасходов
//		Организация
// 		ФизическоеЛицо
// 		Сотрудник
// 		Подразделение
// 		ПодразделениеУчетаЗатрат
//		ТерриторияВыполненияРаботВОрганизации
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
//		ДатаОкончания
//		ДокументОснование
// 		Сумма
// 		СпособОтраженияЗарплатыВБухучете
//		СтатьяФинансирования
//		СтатьяРасходов
// 		ОблагаетсяЕНВД
// 		ВидНачисленияОплатыТрудаДляНУ
//
// Параметры:
//		ДополнительныеПараметры - Структура
//			* ДокументСсылка  - ссылка на документ, начисления которого сейчас отражаем в бухучете.
//			* БухучетПервичногоДокумента - таблица значений содержит сведения о настройках бухучета, заданных в документе
//			                               ДокументСсылка.
//			* КоэффициентыРаспределенияСреднегоЗаработка - таблица значений, содержит сведения о распределении среднего
//			                                               заработка по статьям финансирования.
//
Процедура СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц) Экспорт
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачисленияДляРаспределения.ПериодРегистрации,
	|	НачисленияДляРаспределения.Организация,
	|	НачисленияДляРаспределения.Сотрудник,
	|	НачисленияДляРаспределения.ФизическоеЛицо,  
	|	НачисленияДляРаспределения.Подразделение,
	|	НачисленияДляРаспределения.Начисление,
	|	НачисленияДляРаспределения.ВидОперации,
	|	НачисленияДляРаспределения.ДатаНачала,
	|	НачисленияДляРаспределения.ДатаОкончания,
	|	НачисленияДляРаспределения.Сумма,
	|	НачисленияДляРаспределения.ДокументОснование,
	|	НачисленияДляРаспределения.ИдентификаторСтроки,
	|	НачисленияДляРаспределения.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТНачисленияПоДоговорамГПХ
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК НачисленияДляРаспределения
	|ГДЕ
	|	НачисленияДляРаспределения.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоговорАвторскогоЗаказа), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоговорРаботыУслуги))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияДляРаспределения.ПериодРегистрации,
	|	НачисленияДляРаспределения.Организация,
	|	НачисленияДляРаспределения.Сотрудник,
	|	НачисленияДляРаспределения.ФизическоеЛицо,
	|	НачисленияДляРаспределения.Подразделение,
	|	НачисленияДляРаспределения.ВидОперации,
	|	НачисленияДляРаспределения.Начисление,
	|	НачисленияДляРаспределения.ДатаНачала,
	|	НачисленияДляРаспределения.ДатаОкончания,
	|	НачисленияДляРаспределения.Сумма,
	|	НачисленияДляРаспределения.ДокументОснование,
	|	НачисленияДляРаспределения.ИдентификаторСтроки,
	|	НачисленияДляРаспределения.ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТНачисленияБезДоговоровГПХ
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК НачисленияДляРаспределения
	|ГДЕ
	|	НЕ НачисленияДляРаспределения.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоговорАвторскогоЗаказа), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоговорРаботыУслуги))";
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТНачисленияБезДоговоровГПХ");
	УдалитьВТ.Добавить("ВТНачисленияПоДоговорамГПХ");
	
	ОтражениеЗарплатыВБухучете.СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц);
	УдалитьВТ.Добавить("ВТНачислениеВидНачисленияОплатыТрудаДляНУ");
	
	ИсходныеДанные = ОписаниеИсходныхДанныхДляОтраженияНачисленийВБухучете();
	ИсходныеДанные.Организация    			  = Организация;
	ИсходныеДанные.МесяцНачисления 			  = ПериодРегистрации;
	ИсходныеДанные.МенеджерВременныхТаблиц    = МенеджерВременныхТаблиц;
	ИсходныеДанные.ПлательщикЕНВД             = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Организация, ПериодРегистрации);
	ИсходныеДанные.ПроцентЕНВД    			  = ПроцентЕНВД;
	
	ИсходныеДанные.ИмяВТНачисления = "ВТНачисленияБезДоговоровГПХ";
	СоздатьВТБухучетНачисленийБезДоговоровГПХ(ИсходныеДанные, "ВТБухучетНачисленийБезДоговоровГПХ");
	УдалитьВТ.Добавить("ВТБухучетНачисленийБезДоговоровГПХ");
	
	ИсходныеДанные.ИмяВТНачисления = "ВТНачисленияПоДоговорамГПХ";
	СоздатьВТБухучетНачисленийПоДоговорам(ИсходныеДанные, "ВТБухучетНачисленийПоДоговорам");
	УдалитьВТ.Добавить("ВТБухучетНачисленийПоДоговорам");
		
	// ВТБухучетНачислений - объединение сведений о бухучете начислений.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|	БухучетНачислений.Организация КАК Организация,
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ВидОперации КАК ВидОперации,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма,
	|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачислений
	|ИЗ
	|	(ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		БухучетНачисления.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|		БухучетНачисления.Организация КАК Организация,
	|		БухучетНачисления.Сотрудник КАК Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|		БухучетНачисления.Подразделение КАК Подразделение,
	|		БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление КАК Начисление,
	|		БухучетНачисления.ВидОперации КАК ВидОперации,
	|		БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|		БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|		БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|		БухучетНачисления.Сумма КАК Сумма,
	|		БухучетНачисления.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|		БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|	ИЗ
	|		ВТБухучетНачисленийБезДоговоровГПХ КАК БухучетНачисления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки,
	|		БухучетНачисления.ПериодПринятияРасходов,
	|		БухучетНачисления.Организация,
	|		БухучетНачисления.Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо,
	|		БухучетНачисления.Подразделение,
	|		БухучетНачисления.Подразделение,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление,
	|		БухучетНачисления.ВидОперации,
	|		БухучетНачисления.ДатаНачала,
	|		БухучетНачисления.ДатаОкончания,
	|		БухучетНачисления.ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов,
	|		БухучетНачисления.Сумма,
	|		БухучетНачисления.ВидНачисленияОплатыТрудаДляНУ,
	|		БухучетНачисления.ОблагаетсяЕНВД
	|	ИЗ
	|		ВТБухучетНачисленийПоДоговорам КАК БухучетНачисления) КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачислений.ОблагаетсяЕНВД,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ПериодПринятияРасходов,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ПодразделениеУчетаЗатрат";
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

// Распределяет страховые взносы по статьям финансирования для формирования движений регистра
// СтраховыеВзносыПоФизическимЛицам.
// Параметры:
//	Движения - тип Структура или КоллекцияДвижений документа.
//	Организация - тип СправочникСсылка.Организации.
//	ПериодРегистрации - тип Дата.
//	Ссылка - ссылка на документ, движения которого переданы в параметре «Движения».
//	МенеджерВременныхТаблиц - менеджер временных таблиц, содержит временную таблицу ВТФизическиеЛица и ВТРасширенныеСведенияОВзносах.
//
Процедура СоздатьВТСтраховыеВзносыПоИсточникамФинансирования(Движения, Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Прочитаем уже зарегистрированные данные о бухучете начислений.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.ФизическоеЛицо
	|ИЗ
	|	ВТФизическиеЛица КАК ФизическиеЛица";
	МассивФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	// Получаем уже зарегистрированные сведения о бухучете начислений всех сотрудников по физическим лицам из массива МассивФизическихЛиц,
	// без учета регистратора, указанного в параметре Ссылка.
	СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, МассивФизическихЛиц, Ссылка);
	
	Запрос.УстановитьПараметр("Регистратор" , Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	БухучетНачисленияУдержанияПоСотрудникам = Неопределено;
	БухучетНачисленияУдержанияПоКонтрагентамАкционерам = Неопределено;  
	
	Если ТипЗнч(Движения) = Тип("Структура") Тогда
		Движения.Свойство("БухучетНачисленияУдержанияПоСотрудникам", БухучетНачисленияУдержанияПоСотрудникам);
		Движения.Свойство("БухучетНачисленияУдержанияПоКонтрагентамАкционерам", БухучетНачисленияУдержанияПоКонтрагентамАкционерам);
	Иначе
		БухучетНачисленияУдержанияПоСотрудникам = Движения.Найти("БухучетНачисленияУдержанияПоСотрудникам");
		БухучетНачисленияУдержанияПоКонтрагентамАкционерам = Движения.Найти("БухучетНачисленияУдержанияПоКонтрагентамАкционерам");
	КонецЕсли;
	
	Если БухучетНачисленияУдержанияПоСотрудникам = Неопределено Тогда
		БухучетНачисления = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	Иначе
		БухучетНачисления = БухучетНачисленияУдержанияПоСотрудникам.Выгрузить();
		БухучетНачисления.Колонки.НачислениеУдержание.Имя = "Начисление";
	КонецЕсли;
	
	Если БухучетНачисленияУдержанияПоКонтрагентамАкционерам = Неопределено Тогда
		БухучетНачисленияКА = НоваяТаблицаБухучетНачисленияУдержанияПоКонтрагентамАкционерам();
	Иначе
		БухучетНачисленияКА = БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Выгрузить();
		БухучетНачисленияКА.Колонки.НачислениеУдержание.Имя = "Начисление";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("БухучетНачисления", БухучетНачисления);
	Запрос.УстановитьПараметр("БухучетНачисленияКА", БухучетНачисленияКА);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачисления.Организация КАК Организация,
	|	БухучетНачисления.Сотрудник КАК Сотрудник,
	|	БухучетНачисления.Подразделение КАК Подразделение,
	|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачисления.Начисление КАК Начисление,
	|	БухучетНачисления.ВидОперации КАК ВидОперации,
	|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачисления.Сумма КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка) КАК ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БухучетНачисления.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты
	|ПОМЕСТИТЬ ВТБухучетНачисленияУдержанияПоСотрудникам
	|ИЗ
	|	&БухучетНачисления КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация КАК Организация,
	|	БухучетНачисления.Сотрудник КАК Сотрудник,
	|	БухучетНачисления.Подразделение КАК Подразделение,
	|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачисления.Начисление КАК Начисление,
	|	БухучетНачисления.ВидОперации КАК ВидОперации,
	|	БухучетНачисления.Период КАК ДатаНачала,
	|	БухучетНачисления.Период КАК ДатаОкончания,
	|	БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|	БухучетНачисления.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачисления.Сумма КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка) КАК ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БухучетНачисления.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты
	|ПОМЕСТИТЬ ВТБухучетНачисленияУдержанияПоКонтрагентамАкционерам
	|ИЗ
	|	&БухучетНачисленияКА КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация КАК Организация,
	|	БухучетНачисления.Сотрудник КАК Сотрудник,
	|	БухучетНачисления.Подразделение КАК Подразделение,
	|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачисления.НачислениеУдержание КАК Начисление,
	|	БухучетНачисления.ВидОперации КАК ВидОперации,
	|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачисления.Сумма КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка) КАК ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
	|ИЗ
	|	ВТБухучетНачисленийПоСтатьямФинансирования КАК БухучетНачисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация <> НЕОПРЕДЕЛЕНО
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация <> НЕОПРЕДЕЛЕНО
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И БухучетНачисления.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация <> НЕОПРЕДЕЛЕНО
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И БухучетНачисления.Начисление = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация <> НЕОПРЕДЕЛЕНО
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленияУдержанияПоСотрудникам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленияУдержанияПоКонтрагентамАкционерам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	БухучетНачислений.Организация КАК Организация
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК БухучетНачислений";
	
	Если Запрос.Выполнить().Пустой() Тогда
		
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТБухучетНачисленийВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка) КАК Начисление,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка) КАК ВидОперации,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ПериодПринятияРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеУчетаЗатрат,
		|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
		|	0 КАК Сумма,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка) КАК ВидНачисленияОплатыТрудаДляНУ,
		|	ЛОЖЬ КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТБухучетНачислений";
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачислений.Организация КАК Организация,
		|	БухучетНачислений.Сотрудник КАК Сотрудник,
		|	БухучетНачислений.Подразделение КАК Подразделение,
		|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачислений.Начисление КАК Начисление,
		|	БухучетНачислений.ВидОперации КАК ВидОперации,
		|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
		|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
		|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетНачислений.Сумма КАК Сумма,
		|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
		|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ВЫБОР
		|		КОГДА БухучетНачислений.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ БухучетНачислений.ДатаНачала < &ПериодРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачислений.ДатаНачала, МЕСЯЦ)
		|	КОНЕЦ КАК ПериодПринятияРасходов
		|ПОМЕСТИТЬ ВТБухучетНачислений
		|ИЗ
		|	ВТБухучетНачисленийВременная КАК БухучетНачислений
		|ГДЕ
		|	БухучетНачислений.Сумма <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийВременная";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация, 
	|	*
	|ИЗ
	|	ВТРасширенныеСведенияОВзносах КАК СведенияОВзносах"
	 + Символы.ПС + "ГДЕ" + Символы.ПС + СтрЗаменить(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина, "СведенияОВзносах"), ",", " <> 0 ИЛИ ") + " <> 0";
	
	ТаблицаВзносов = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносовПоТаблице(Запрос.Выполнить().Выгрузить());
	
	ОтражениеЗарплатыВБухучете.СоздатьВТБухучетСтраховыхВзносов(Организация, ПериодРегистрации, ТаблицаВзносов, МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСтраховыеВзносыПоИсточникамФинансирования
	|ИЗ
	|	ВТБухучетСтраховыхВзносов КАК БухучетСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетСтраховыхВзносов";
	Запрос.Выполнить();
		
КонецПроцедуры

Процедура ДополнитьСведенияОВзносахДаннымиБухучета(Движения, Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц, ИмяВременнойТаблицы) Экспорт

	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		СоздатьВТСтраховыеВзносыПоИсточникамФинансирования(Движения, Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц);
		ИмяВременнойТаблицы = "ВТСтраховыеВзносыПоИсточникамФинансирования";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаНачисленийУдержанийПриЗаписи

// Заполняет реквизит ОчередностьОтраженияВУчете для начислений и удержаний.
//
Процедура УстановитьОчередностьОтраженияВУчете(ВидРасчетаОбъект) Экспорт 

	Если ВидРасчетаОбъект.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам Тогда 
		ВидРасчетаОбъект.ОчередностьОтраженияВУчете = ВидРасчетаОбъект.ОчередностьРасчета;
	Иначе 
		ВидРасчетаОбъект.ОчередностьОтраженияВУчете = 1;
	КонецЕсли;
	
КонецПроцедуры

Процедура УточнитьСтратегиюОтраженияВУчетеНачисления(ВидРасчетаОбъект) Экспорт

	ИспользоватьСтатьиФинансирования = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	ИспользуетсяЕНВД = ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД");
	
	Если РаботаВБюджетномУчреждении И ВидРасчетаОбъект.ОтношениеКЕНВД = Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом Тогда
		ВидРасчетаОбъект.ОтношениеКЕНВД = Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка();
	КонецЕсли;
	
	СтратегияОтраженияВУчете = ВидРасчетаОбъект.СтратегияОтраженияВУчете;
	СтатьяФинансирования = ВидРасчетаОбъект.СтатьяФинансирования;
	СтатьяРасходов = ВидРасчетаОбъект.СтатьяРасходов;
	СпособОтраженияЗарплатыВБухучете = ВидРасчетаОбъект.СпособОтраженияЗарплатыВБухучете;
	ОтношениеКЕНВД = ВидРасчетаОбъект.ОтношениеКЕНВД;
	
	СтатьяФинансированияЗаполнена = ИспользоватьСтатьиФинансирования И Не СтатьяФинансирования.Пустая();
	СтатьяРасходовЗаполнена = РаботаВБюджетномУчреждении И Не СтатьяРасходов.Пустая();
	СпособОтраженияЗаполнен = Не СпособОтраженияЗарплатыВБухучете.Пустая();
	ОтношениеКЕНВДЗаполнено = ИспользуетсяЕНВД И Не ОтношениеКЕНВД.Пустая();
	НастройкаЗаполнена = СпособОтраженияЗаполнен Или ОтношениеКЕНВДЗаполнено Или СтатьяФинансированияЗаполнена Или СтатьяРасходовЗаполнена;
	
	ЭтоПособиеЗаСчетФСС = УчетПособийСоциальногоСтрахованияРасширенный.НачислениеЯвляетсяПособиемЗаСчетФСС(ВидРасчетаОбъект);
	НачислениеБезОплаты = ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.КатегорияНачисленийБезОплаты(ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени);
	ОплатаПоСреднему    = ВидРасчетаОбъект.Рассчитывается И ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.КатегорияНачисленийОплатаПоСреднемуОбщий(ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени);
	
	Если СтратегияОтраженияВУчете.Пустая() Тогда
		// Начальное заполнение стратегии.
		Если ЭтоПособиеЗаСчетФСС Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
		ИначеЕсли НачислениеБезОплаты Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
		ИначеЕсли НастройкаЗаполнена Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета;
		Иначе
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
		КонецЕсли;
	ИначеЕсли Не НастройкаЗаполнена И СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета Тогда
		СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
	ИначеЕсли НастройкаЗаполнена Тогда
		СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета;
	ИначеЕсли СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазеСреднегоЗаработка Тогда
		
		Если НЕ ЭтоПособиеЗаСчетФСС И Не ОплатаПоСреднему
				И НЕ ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
		КонецЕсли;	
		
	ИначеЕсли СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам Тогда	
		
		Если ЭтоПособиеЗаСчетФСС Или ОплатаПоСреднему
				Или ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
		Иначе
			
			БазаДоступна = ВидРасчетаОбъект.ТребуетсяРасчетБазы
			И ВидРасчетаОбъект.СпособРасчета <> Перечисления.СпособыРасчетаНачислений.ДоплатаДоСреднегоЗаработка
			И ВидРасчетаОбъект.СпособРасчета <> Перечисления.СпособыРасчетаНачислений.ДоплатаДоСреднегоЗаработкаФСС
			И ВидРасчетаОбъект.СпособРасчета <> Перечисления.СпособыРасчетаНачислений.ДоплатаДоСохраняемогоДенежногоСодержанияЗаДниБолезни
			И ВидРасчетаОбъект.ПериодРасчетаБазовыхНачислений = Перечисления.ПериодыРасчетаБазовыхНачислений.ТекущийМесяц;
			
			Если Не БазаДоступна Тогда
				СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НастройкаЗаполнена И СтратегияОтраженияВУчете <> Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета Тогда
		ВидРасчетаОбъект.СтатьяФинансирования 				= Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка();
		ВидРасчетаОбъект.СтатьяРасходов 					= Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
		ВидРасчетаОбъект.СпособОтраженияЗарплатыВБухучете 	= Справочники.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка();
		ВидРасчетаОбъект.ОтношениеКЕНВД 					= Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка();
	КонецЕсли;
	
	ВидРасчетаОбъект.СтратегияОтраженияВУчете = СтратегияОтраженияВУчете;
	
КонецПроцедуры

Процедура УточнитьСтратегиюОтраженияВУчетеУдержания(ВидРасчетаОбъект) Экспорт

	СтратегияОтраженияВУчетеПоБазе = ВидРасчетаОбъект.КатегорияУдержания = Перечисления.КатегорииУдержаний.ИсполнительныйЛист
		Или ВидРасчетаОбъект.КатегорияУдержания = Перечисления.КатегорииУдержаний.ВознаграждениеПлатежногоАгента
		Или РасчетЗарплатыРасширенный.ЕстьПоказательВКоллекции(ВидРасчетаОбъект.Показатели, "РасчетнаяБаза");
		
	Если СтратегияОтраженияВУчетеПоБазе И ВидРасчетаОбъект.СтратегияОтраженияВУчете <> Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам Тогда
		ВидРасчетаОбъект.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам;
	ИначеЕсли Не СтратегияОтраженияВУчетеПоБазе И ВидРасчетаОбъект.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам Тогда
		ВидРасчетаОбъект.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоФактическимНачислениям;
	КонецЕсли;
	
	ВидРасчетаОбъект.ДоступнаСтратегияОтраженияКакЗаданоВидуРасчета = Не СтратегияОтраженияВУчетеПоБазе;
			
КонецПроцедуры

Процедура УточнитьВидОперацииПоЗарплатеНачисления(ВидРасчетаОбъект) Экспорт
	
	Если ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска
		Или ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеНаПериодОтпуска Тогда
		
		ОтпускЯвляетсяЕжегодным = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасчетаОбъект.ВидОтпуска,"ОтпускЯвляетсяЕжегодным");
		Если ОтпускЯвляетсяЕжегодным <> Неопределено И ОтпускЯвляетсяЕжегодным И ВидРасчетаОбъект.ВидОперацииПоЗарплате <> Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск Тогда
			ВидРасчетаОбъект.ВидОперацииПоЗарплате = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск;
		КонецЕсли;
	ИначеЕсли ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска
		Или ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеКомпенсацияОтпуска Тогда
		
		ОтпускЯвляетсяЕжегодным = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасчетаОбъект.ВидОтпуска,"ОтпускЯвляетсяЕжегодным");
		Если ОтпускЯвляетсяЕжегодным <> Неопределено И ОтпускЯвляетсяЕжегодным И ВидРасчетаОбъект.ВидОперацииПоЗарплате <> Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска Тогда
			ВидРасчетаОбъект.ВидОперацииПоЗарплате = Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ФормированиеДвижений

// Формирует движения по регистрам подсистемы.
//
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация - 
//		ПериодРегистрации
//		Начисления - регистрируемые начисления.
//		Если передано Неопределено, то начисления не регистрируются.
//		Таблица значений с колонками:
//			ФизическоеЛицо
//			Сотрудник
//			Подразделение
//			ТерриторияВыполненияРаботВОрганизации
//			Начисление - ПеречислениеСсылка.ВидыВзаиморасчетовССотрудниками, ПланВидовРасчетаСсылка.Начисления
//			Сумма
//			ДокументОснование - не обязательно
//			ДатаНачала
//			ДатаОкончания
//			СтатьяФинансирования
//			СтатьяРасходов
//			СпособОтраженияЗарплатыВБухучете
//			ОблагаетсяЕНВД
//
//		Удержания  - регистрируемые удержания.
//		Если передано НеОпределено, то удержания не регистрируются.
//		Таблица значений с колонками:
//			ФизическоеЛицо
//			Сотрудник
//			Подразделение
//			Удержание - ПеречислениеСсылка.ВидыВзаиморасчетовССотрудниками, ПланВидовРасчетаСсылка.Удержания
//			Сумма
//			ДокументОснование - не обязательно
//			ДатаНачала
//			ДатаОкончания
//			Контрагент
//			СтатьяФинансирования
//			СтатьяРасходов
//			ОблагаетсяЕНВД
//
//		РезультатыРасчетаНДФЛ - таблица значений с колонками
//			ФизическоеЛицо
//			Сотрудник
//			Подразделение
//			ПодразделениеСотрудника
//			МесяцНалоговогоПериода
//			РегистрацияВНалоговомОргане
//			КатегорияДохода
//			Сумма
//			СтатьяФинансирования
//			СтатьяРасходов
//			ОблагаетсяЕНВД
//			
//		НеУчитыватьВРаспределенииПриОкончательномРасчете - тип Булево, признак того, что регистрируются
//																данные межрасчетного документа
//		ЗаписыватьДвижения - тип Булево, признак того, что движения необходимо записать
//
//		Допустимо присутствие других колонок в передаваемых таблицах значений.
//
Процедура СформироватьДвиженияБухучетНачисленияУдержанияПоСотрудникам(Движения, Отказ, Организация, ПериодРегистрации, Начисления, Удержания, РезультатыРасчетаНДФЛ, НеУчитыватьВРаспределенииПриОкончательномРасчете = Ложь, ЗаписыватьДвижения = Ложь) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Возврат;
	КонецЕсли;
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	Если Начисления <> НеОпределено Тогда
		
		Для Каждого Строка Из Начисления Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание	= Строка.Начисление;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодДействия		= НачалоМесяца(НоваяСтрока.ДатаНачала);
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = НеУчитыватьВРаспределенииПриОкончательномРасчете;
			
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено;
			Если Не ЗначениеЗаполнено(НоваяСтрока.ПодразделениеУчетаЗатрат) Тогда
				НоваяСтрока.ПодразделениеУчетаЗатрат = НоваяСтрока.Подразделение;
			КонецЕсли;
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
		
	КонецЕсли;
	
	Если Удержания <> НеОпределено Тогда
		
		Для Каждого Строка Из Удержания Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание = Строка.Удержание;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодДействия		= ПериодРегистрации;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = НеУчитыватьВРаспределенииПриОкончательномРасчете;
			
			Если Строка.Удержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.МатериальнаяВыгодаПоЗаймам
					Или Строка.Удержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму Тогда
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Справочно;
			Иначе
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			КонецЕсли
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
		
	КонецЕсли;

	Если РезультатыРасчетаНДФЛ <> НеОпределено Тогда
		
		Для Каждого Строка Из РезультатыРасчетаНДФЛ Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Подразделение							= Строка.ПодразделениеСотрудника;
			НоваяСтрока.ТерриторияВыполненияРаботВОрганизации 	= Строка.Подразделение;
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.ПериодДействия		= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = НеУчитыватьВРаспределенииПриОкончательномРасчете;
			НоваяСтрока.ДатаПолученияДохода = Строка.МесяцНалоговогоПериода;
			
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
		
	КонецЕсли;
	
	Если ЗаписыватьДвижения Тогда
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записать();
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияБухучетНачисленияУдержанияПоКонтрагентамАкционерам(Движения, Отказ, Организация, ПериодРегистрации, Начисления, Удержания, РезультатыРасчетаНДФЛ, ЗаписыватьДвижения = Ложь) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Возврат;
	КонецЕсли;
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	Если Начисления <> НеОпределено Тогда
		
		Для Каждого Строка Из Начисления Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание	= Строка.Начисление;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено;
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записывать = Истина;
		
	КонецЕсли;
	
	Если Удержания <> НеОпределено Тогда
		
		Для Каждого Строка Из Удержания Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			ВидОперации = НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			Если ВидОперации = Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛисты Тогда
				ВидОперации = Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛистыКонтрагенты;
			ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ВознаграждениеПлатежногоАгента Тогда
				ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ВознаграждениеПлатежногоАгентаКонтрагенты;
			КонецЕсли;
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ВидОперации			= ВидОперации;
			
			Если Строка.НачислениеУдержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.МатериальнаяВыгодаПоЗаймам
					Или Строка.НачислениеУдержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму Тогда
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Справочно;
			Иначе
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			КонецЕсли
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записывать = Истина;
		
	КонецЕсли;

	Если РезультатыРасчетаНДФЛ <> НеОпределено Тогда
		
		Для Каждого Строка Из РезультатыРасчетаНДФЛ Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.ТерриторияВыполненияРаботВОрганизации = Строка.Подразделение;
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты      = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записывать = Истина;
		
	КонецЕсли;
	
	Если ЗаписыватьДвижения Тогда
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записать();
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Добавляет в коллекцию движений запись о бухучете планового начисления.
// 
// Параметры:
//			Движения,
//			БухучетПлановыхНачислений - Коллекция записей c полями,
//				Обязательные:
//				- Период
//				- Сотрудник
//				- Организация
//				- Начисление
//				- Используется - булево
//				Необязательные:
//				- СпособОтраженияЗарплатыВБухучете - если не заполнено, то подбирается автоматически.
//				- СтатьяФинансирования - если не заполнено, то подбирается автоматически.
//				- СтатьяЗатрат - если не заполнено, то подбирается автоматически.
//				- ОтношениеКЕНВД - если не заполнено, то подбирается автоматически
//				- ДействуетДо.
//
Процедура СформироватьДвиженияБухучетПлановыхНачислений(Движения, БухучетПлановыхНачислений) Экспорт
		
	Для каждого ОтражениеНачисления Из БухучетПлановыхНачислений Цикл
		НоваяЗапись = Движения.БухучетПлановыхНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ОтражениеНачисления);
		Движения.БухучетПлановыхНачислений.Записывать = Истина;
	КонецЦикла;
	
	Если Движения.БухучетПлановыхНачислений.Записывать Тогда
		Движения.БухучетПлановыхНачислений.Записать();
		Движения.БухучетПлановыхНачислений.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Добавляет запись о бухучете зарплаты по документу основанию.
//
Процедура ЗарегистрироватьБухучетЗарплатыПервичныхДокументов(БухучетЗарплаты) Экспорт
	
	НаборЗаписей = РегистрыСведений.БухучетЗарплатыПервичныхДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(БухучетЗарплаты.ДокументОснование);
	
	Для каждого СтрокаТаблицы Из БухучетЗарплаты.ТаблицаБухучетЗарплаты Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Добавляет в коллекцию движений запись о бухучете планового удержания.
// 
// Параметры:
//			Движения,
//			БухучетПлановыхУдержаний - Коллекция записей c полями.
//
Процедура СформироватьДвиженияБухучетПлановыхУдержаний(Движения, БухучетПлановыхУдержаний) Экспорт
		
	Для каждого Строка Из БухучетПлановыхУдержаний Цикл
		НоваяЗапись = Движения.БухучетПлановыхУдержаний.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
		Движения.БухучетПлановыхУдержаний.Записывать = Истина;
	КонецЦикла;
	
	Если Движения.БухучетПлановыхУдержаний.Записывать Тогда
		Движения.БухучетПлановыхУдержаний.Записать();
		Движения.БухучетПлановыхУдержаний.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет данные для проведения плановых удержаний для многосотрудникового документа.
//
// Параметры:
//		ДанныеДляПроведения - Структура, описанная в СоздатьДанныеДляРегистрацииПлановыхУдержаний.
//		Документ - Ссылка на документ.
//
Функция ДанныеДляРегистрацииБухучетаПлановыхУдержаний(ДокументСсылка) Экспорт
	
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ", ДокументСсылка);
	Запрос.УстановитьПараметр("ПустойДокументОснование", Документы[МетаданныеДокумента.Имя].ПустаяСсылка());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументУдержания.Ссылка.Организация КАК Организация,
	|	ДокументУдержания.ФизическоеЛицо,
	|	ДокументУдержания.Ссылка.ДатаНачала КАК Период,
	|	ВЫБОР
	|		КОГДА ДокументУдержания.Ссылка.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ДокументУдержания.Ссылка.ДатаОкончания, ДЕНЬ, 1)
	|		ИНАЧЕ ДокументУдержания.Ссылка.ДатаОкончания
	|	КОНЕЦ КАК ДействуетДо,
	|	ДокументУдержания.Ссылка.Удержание,
	|	ВЫБОР
	|		КОГДА ДокументУдержания.Ссылка.ДокументОснование = &ПустойДокументОснование
	|			ТОГДА ДокументУдержания.Ссылка
	|		ИНАЧЕ ДокументУдержания.Ссылка.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	ДокументУдержания.Ссылка.СтатьяФинансирования,
	|	ДокументУдержания.Ссылка.СтатьяРасходов
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	#ТаблицаУдержанийДокумента КАК ДокументУдержания
	|ГДЕ
	|	ДокументУдержания.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.ФизическоеЛицо,
	|	ДанныеДокумента.ДокументОснование,
	|	ДанныеДокумента.Период,
	|	МАКСИМУМ(БухучетПлановыхУдержаний.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТМаксимальныеПериоды
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхУдержаний КАК БухучетПлановыхУдержаний
	|		ПО ДанныеДокумента.ДокументОснование = БухучетПлановыхУдержаний.ДокументОснование
	|			И ДанныеДокумента.ФизическоеЛицо = БухучетПлановыхУдержаний.ФизическоеЛицо
	|			И ДанныеДокумента.Период > БухучетПлановыхУдержаний.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ФизическоеЛицо,
	|	ДанныеДокумента.ДокументОснование,
	|	ДанныеДокумента.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.ФизическоеЛицо,
	|	МаксимальныеПериоды.Период,
	|	ВЫБОР
	|		КОГДА БухучетПлановыхУдержаний.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетПлановыхУдержаний.ДействуетДо < МаксимальныеПериоды.Период
	|			ТОГДА БухучетПлановыхУдержаний.СтатьяФинансированияПоОкончании
	|		ИНАЧЕ БухучетПлановыхУдержаний.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА БухучетПлановыхУдержаний.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетПлановыхУдержаний.ДействуетДо < МаксимальныеПериоды.Период
	|			ТОГДА БухучетПлановыхУдержаний.СтатьяРасходовПоОкончании
	|		ИНАЧЕ БухучетПлановыхУдержаний.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов
	|ПОМЕСТИТЬ ВТЗначенияПоОкончании
	|ИЗ
	|	ВТМаксимальныеПериоды КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхУдержаний КАК БухучетПлановыхУдержаний
	|		ПО МаксимальныеПериоды.ФизическоеЛицо = БухучетПлановыхУдержаний.ФизическоеЛицо
	|			И МаксимальныеПериоды.ДокументОснование = БухучетПлановыхУдержаний.ДокументОснование
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетПлановыхУдержаний.Период
	|ГДЕ
	|	ВЫБОР
	|			КОГДА БухучетПлановыхУдержаний.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|					И БухучетПлановыхУдержаний.ДействуетДо < МаксимальныеПериоды.Период
	|				ТОГДА БухучетПлановыхУдержаний.ИспользуетсяПоОкончании
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ФизическоеЛицо,
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ДействуетДо,
	|	ДанныеДокумента.Удержание,
	|	ДанныеДокумента.ДокументОснование,
	|	ДанныеДокумента.СтатьяФинансирования,
	|	ДанныеДокумента.СтатьяРасходов,
	|	ЗначенияПоОкончании.СтатьяФинансирования КАК СтатьяФинансированияПоОкончании,
	|	ЗначенияПоОкончании.СтатьяРасходов КАК СтатьяРасходовПоОкончании,
	|	ВЫБОР
	|		КОГДА ЗначенияПоОкончании.СтатьяФинансирования ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ИспользуетсяПоОкончании
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоОкончании КАК ЗначенияПоОкончании
	|		ПО ДанныеДокумента.ФизическоеЛицо = ЗначенияПоОкончании.ФизическоеЛицо
	|			И ДанныеДокумента.Период = ЗначенияПоОкончании.Период";
	
	ИмяДокумента = МетаданныеДокумента.ПолноеИмя();
	Если МетаданныеДокумента.ТабличныеЧасти.Найти("Удержания") = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДокументУдержания.Ссылка.", "ДокументУдержания.");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаУдержанийДокумента", ИмяДокумента);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаУдержанийДокумента", ИмяДокумента + ".Удержания");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Для плановых начислений, которые прекращаются навсегда в регистре БухучетПлановыхНачислений регистрируется прекращение
// действия настроек бухучета для этого начисления.
//
Процедура ПлановыеНачисленияПриЗаписи(НаборЗаписей) Экспорт
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПлановыеНачисления = НаборЗаписей.Выгрузить();
	ПлановыеНачисления = ПлановыеНачисления.Скопировать(Новый Структура("Используется,ДействуетДо",Ложь,Дата(1,1,1)));
	Если ПлановыеНачисления.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПлановыеНачисления", ПлановыеНачисления);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПлановыеНачисления.Период КАК Период,
	|	ПлановыеНачисления.Регистратор КАК Регистратор,
	|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	ПлановыеНачисления.Начисление КАК Начисление,
	|	ПлановыеНачисления.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТПлановыеНачисления
	|ИЗ
	|	&ПлановыеНачисления КАК ПлановыеНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Регистратор КАК Регистратор,
	|	НАЧАЛОПЕРИОДА(ПлановыеНачисления.Период, ДЕНЬ) КАК Период,
	|	БухучетПлановыхНачислений.Сотрудник КАК Сотрудник,
	|	БухучетПлановыхНачислений.Организация КАК Организация,
	|	БухучетПлановыхНачислений.Начисление КАК Начисление,
	|	БухучетПлановыхНачислений.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(БухучетПлановыхНачислений.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТДатыПоследнихДвижений
	|ИЗ
	|	ВТПлановыеНачисления КАК ПлановыеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхНачислений КАК БухучетПлановыхНачислений
	|		ПО ПлановыеНачисления.Сотрудник = БухучетПлановыхНачислений.Сотрудник
	|			И ПлановыеНачисления.Начисление = БухучетПлановыхНачислений.Начисление
	|			И ПлановыеНачисления.ДокументОснование = БухучетПлановыхНачислений.ДокументОснование
	|			И (НАЧАЛОПЕРИОДА(ПлановыеНачисления.Период, ДЕНЬ) >= БухучетПлановыхНачислений.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеНачисления.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПлановыеНачисления.Период, ДЕНЬ),
	|	БухучетПлановыхНачислений.Сотрудник,
	|	БухучетПлановыхНачислений.Организация,
	|	БухучетПлановыхНачислений.Начисление,
	|	БухучетПлановыхНачислений.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыПоследнихДвижений.Регистратор КАК Регистратор,
	|	ДатыПоследнихДвижений.Период КАК Период,
	|	БухучетПлановыхНачислений.Сотрудник КАК Сотрудник,
	|	БухучетПлановыхНачислений.Организация КАК Организация,
	|	БухучетПлановыхНачислений.Начисление КАК Начисление,
	|	БухучетПлановыхНачислений.ДокументОснование КАК ДокументОснование,
	|	ЛОЖЬ КАК Используется
	|ИЗ
	|	ВТДатыПоследнихДвижений КАК ДатыПоследнихДвижений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхНачислений КАК БухучетПлановыхНачислений
	|		ПО ДатыПоследнихДвижений.ПериодРегистра = БухучетПлановыхНачислений.Период
	|			И ДатыПоследнихДвижений.Период <> БухучетПлановыхНачислений.Период
	|			И ДатыПоследнихДвижений.Сотрудник = БухучетПлановыхНачислений.Сотрудник
	|			И ДатыПоследнихДвижений.Организация = БухучетПлановыхНачислений.Организация
	|			И ДатыПоследнихДвижений.Начисление = БухучетПлановыхНачислений.Начисление
	|			И ДатыПоследнихДвижений.ДокументОснование = БухучетПлановыхНачислений.ДокументОснование
	|			И (БухучетПлановыхНачислений.Используется)
	|			И (БухучетПлановыхНачислений.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1))";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	
	БухучетПлановыхНачислений = РегистрыСведений.БухучетПлановыхНачислений.СоздатьНаборЗаписей();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(БухучетПлановыхНачислений.Добавить(), Выборка);
		Регистратор = Выборка.Регистратор;
	КонецЦикла;
	БухучетПлановыхНачислений.Отбор.Регистратор.Установить(Регистратор);
	БухучетПлановыхНачислений.Записать();

КонецПроцедуры

Процедура СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(СтрокаСписокТаблиц, "НачисленныйНДФЛ") > 0 Тогда
		
		Если ДанныеДляПроведения.НачисленияУдержания = Неопределено Или ДанныеДляПроведения.НачисленияУдержания.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ВидыОсобыхНачисленийИУдержанийНДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ();
		НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
		
		Для каждого СтрокаТЗ Из ДанныеДляПроведения.НачисленияУдержания Цикл
		
			Если ВидыОсобыхНачисленийИУдержанийНДФЛ.Найти(СтрокаТЗ.НачислениеУдержание) <> Неопределено Тогда
				 
				Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
				
				НоваяСтрока = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
				НоваяСтрока.ВидОперации = НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
				НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = Истина;
				
			КонецЕсли;
		
		КонецЦикла;
	
	КонецЕсли; 

КонецПроцедуры

Процедура ДанныеДляПроведенияСоздатьВТНачисленияСтраховыеВзносы(МенеджерВременныхТаблиц, РеквизитыДляПроведения, ИмяВТНачисленияСтраховыеВзносы) Экспорт

	Организация = РеквизитыДляПроведения.Организация;
	ПериодРегистрации = РеквизитыДляПроведения.МесяцНачисления;
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МесяцНачисления", ПериодРегистрации);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачисленийПоДоговорам.Договор,
	|	ЕСТЬNULL(ПлановыеНачисленияПоДоговорам.КодДоходаСтраховыеВзносы, УсловияДоговораГПХ.КодДоходаСтраховыеВзносы) КАК КодДоходаСтраховыеВзносы,
	|	ЕСТЬNULL(ПлановыеНачисленияПоДоговорам.ЗаключенСоСтудентомРаботающимВСтудотряде, УсловияДоговораГПХ.ЗаключенСоСтудентомРаботающимВСтудотряде) КАК ЗаключенСоСтудентомРаботающимВСтудотряде
	|ПОМЕСТИТЬ ВТДанныеДоговоров
	|ИЗ
	|	ВТЗаписиНачисленийПоДоговорам КАК НачисленийПоДоговорам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияПоДоговорам КАК ПлановыеНачисленияПоДоговорам
	|		ПО НачисленийПоДоговорам.Договор = ПлановыеНачисленияПоДоговорам.ДоговорАкт
	|			И (ПлановыеНачисленияПоДоговорам.МесяцНачисления = &МесяцНачисления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УсловияДоговораГПХ КАК УсловияДоговораГПХ
	|		ПО НачисленийПоДоговорам.Договор = УсловияДоговораГПХ.Договор";
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТДанныеДоговоров");
	
	ПрименяетсяЕНВД = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Организация, ПериодРегистрации);
	Если Не ПрименяетсяЕНВД Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаписиНачисленийПоДоговорам.Сотрудник,
		|	ЗаписиНачисленийПоДоговорам.Подразделение,
		|	ЗаписиНачисленийПоДоговорам.Начисление,
		|	ЗаписиНачисленийПоДоговорам.Сумма КАК СуммаДохода,
		|	ЗаписиНачисленийПоДоговорам.СуммаВычета КАК СуммаВычетаВзносы,
		|	ЗаписиНачисленийПоДоговорам.ДатаНачала,
		|	ЛОЖЬ КАК ОблагаетсяЕНВД,
		|	ЕСТЬNULL(ДанныеДоговоров.КодДоходаСтраховыеВзносы, ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ДоговорыГПХ)) КАК КодДоходаСтраховыеВзносы,
		|	ЕСТЬNULL(ДанныеДоговоров.ЗаключенСоСтудентомРаботающимВСтудотряде, ЛОЖЬ) КАК ЗаключенСоСтудентомРаботающимВСтудотряде
		|ПОМЕСТИТЬ ВТНачисленияСтраховыеВзносы
		|ИЗ
		|	ВТЗаписиНачисленийПоДоговорам КАК ЗаписиНачисленийПоДоговорам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДоговоров КАК ДанныеДоговоров
		|		ПО ЗаписиНачисленийПоДоговорам.Договор = ДанныеДоговоров.Договор";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияСтраховыеВзносы", ИмяВТНачисленияСтраховыеВзносы);
		Запрос.Выполнить();
		
	Иначе
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
			
			// Сведения о бухучете договоров есть во временной таблице ВТНачисленияПоДоговорамСРаспределением.
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НачисленияПоДоговорамСРаспределением.Договор,
			|	НачисленияПоДоговорамСРаспределением.ОблагаетсяЕНВД,
			|	СУММА(НачисленияПоДоговорамСРаспределением.Сумма) КАК Сумма
			|ПОМЕСТИТЬ ВТНачисленияСЕНВД
			|ИЗ
			|	ВТНачисленияПоДоговорамСРаспределением КАК НачисленияПоДоговорамСРаспределением
			|
			|СГРУППИРОВАТЬ ПО
			|	НачисленияПоДоговорамСРаспределением.Договор,
			|	НачисленияПоДоговорамСРаспределением.ОблагаетсяЕНВД";
			Запрос.Выполнить();
			УдалитьВТ.Добавить("ВТНачисленияСЕНВД");
			
		Иначе
			
			ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
			// Поле ТерриторияВыполненияРаботВОрганизации имеет пустое значение, для вычисления доли ЕНВД это допустимо.
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаписиНачисленийПоДоговорам.Организация,
			|	ЗаписиНачисленийПоДоговорам.ПериодРегистрации,
			|	ЗаписиНачисленийПоДоговорам.ДокументСсылка,
			|	ЗаписиНачисленийПоДоговорам.ИдентификаторСтроки,
			|	ЗаписиНачисленийПоДоговорам.ФизическоеЛицо,
			|	ЗаписиНачисленийПоДоговорам.Сотрудник,
			|	ЗаписиНачисленийПоДоговорам.Подразделение,
			|	ЗаписиНачисленийПоДоговорам.Начисление,
			|	ЗаписиНачисленийПоДоговорам.Сумма,
			|	ЗаписиНачисленийПоДоговорам.СуммаВычета,
			|	ЗаписиНачисленийПоДоговорам.КодДохода,
			|	ЗаписиНачисленийПоДоговорам.КодВычета,
			|	ЗаписиНачисленийПоДоговорам.Договор,
			|	ЗаписиНачисленийПоДоговорам.ДокументОснование,
			|	ЗаписиНачисленийПоДоговорам.ДатаНачала,
			|	ЗаписиНачисленийПоДоговорам.ДатаОкончания,
			|	ЗаписиНачисленийПоДоговорам.ПланируемаяДатаВыплаты,
			|	ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) КАК ТерриторияВыполненияРаботВОрганизации,
			|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации
			|ПОМЕСТИТЬ ВТНачисленияПоДоговорамГПХ
			|ИЗ
			|	ВТЗаписиНачисленийПоДоговорам КАК ЗаписиНачисленийПоДоговорам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
			|		ПО ЗаписиНачисленийПоДоговорам.Начисление = НачисленияВидОперации.НачислениеУдержание";
			Запрос.Выполнить();
			УдалитьВТ.Добавить("ВТНачисленияПоДоговорамГПХ");
			
			ИсходныеДанные = ОписаниеИсходныхДанныхДляОтраженияНачисленийВБухучете();
			ИсходныеДанные.МенеджерВременныхТаблиц 		      = МенеджерВременныхТаблиц;
			ИсходныеДанные.ИмяВТНачисления		 		      = "ВТНачисленияПоДоговорамГПХ";
			ИсходныеДанные.ПлательщикЕНВД                     = ПрименяетсяЕНВД;
			СоздатьВТБухучетНачисленийПоДоговорам(ИсходныеДанные, "ВТБухучетНачисленийПоДоговорам");
			УдалитьВТ.Добавить("ВТБухучетНачисленийПоДоговорам");
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НачисленияПоДоговорамСРаспределением.ДокументОснование КАК Договор,
			|	НачисленияПоДоговорамСРаспределением.ОблагаетсяЕНВД,
			|	СУММА(НачисленияПоДоговорамСРаспределением.Сумма) КАК Сумма
			|ПОМЕСТИТЬ ВТНачисленияСЕНВД
			|ИЗ
			|	ВТБухучетНачисленийПоДоговорам КАК НачисленияПоДоговорамСРаспределением
			|
			|СГРУППИРОВАТЬ ПО
			|	НачисленияПоДоговорамСРаспределением.ДокументОснование,
			|	НачисленияПоДоговорамСРаспределением.ОблагаетсяЕНВД";
			Запрос.Выполнить();
			УдалитьВТ.Добавить("ВТНачисленияСЕНВД");
			
		КонецЕсли;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаписиНачислений.Сотрудник,
		|	ЗаписиНачислений.Подразделение,
		|	ЗаписиНачислений.Начисление,
		|	ЗаписиНачислений.ДатаНачала,
		|	ЕСТЬNULL(НачисленияСЕНВД.ОблагаетсяЕНВД, ЛОЖЬ) КАК ОблагаетсяЕНВД,
		|	ЕСТЬNULL(НачисленияСЕНВД.Сумма, 0) КАК СуммаДохода,
		|	ВЫБОР
		|		КОГДА НачисленияСЕНВД.ОблагаетсяЕНВД ЕСТЬ NULL 
		|			ТОГДА 0
		|		КОГДА ЗаписиНачислений.Сумма = 0
		|			ТОГДА 0
		|		КОГДА ЗаписиНачислений.Сумма = НачисленияСЕНВД.Сумма
		|			ТОГДА ЗаписиНачислений.СуммаВычета
		|		КОГДА НачисленияСЕНВД.ОблагаетсяЕНВД
		|			ТОГДА ВЫРАЗИТЬ(ЗаписиНачислений.СуммаВычета * (ВЫРАЗИТЬ(НачисленияСЕНВД.Сумма / ЗаписиНачислений.Сумма КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ЗаписиНачислений.СуммаВычета - (ВЫРАЗИТЬ(ЗаписиНачислений.СуммаВычета * (ВЫРАЗИТЬ((ЗаписиНачислений.Сумма - НачисленияСЕНВД.Сумма) / ЗаписиНачислений.Сумма КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2)))
		|	КОНЕЦ КАК СуммаВычетаВзносы,
		|	ЕСТЬNULL(ДанныеДоговоров.КодДоходаСтраховыеВзносы, ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ДоговорыГПХ)) КАК КодДоходаСтраховыеВзносы,
		|	ЕСТЬNULL(ДанныеДоговоров.ЗаключенСоСтудентомРаботающимВСтудотряде, ЛОЖЬ) КАК ЗаключенСоСтудентомРаботающимВСтудотряде
		|ПОМЕСТИТЬ ВТНачисленияСтраховыеВзносы
		|ИЗ
		|	ВТЗаписиНачисленийПоДоговорам КАК ЗаписиНачислений
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияСЕНВД КАК НачисленияСЕНВД
		|		ПО ЗаписиНачислений.Договор = НачисленияСЕНВД.Договор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДоговоров КАК ДанныеДоговоров
		|		ПО ЗаписиНачислений.Договор = ДанныеДоговоров.Договор";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияСтраховыеВзносы", ИмяВТНачисленияСтраховыеВзносы);
		Запрос.Выполнить();
		
	КонецЕсли;
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

Процедура СформироватьДвиженияКоэффициентыРаспределенияСреднегоЗаработка(Движения, КоэффициентыРаспределенияСреднегоЗаработка) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Возврат;
	КонецЕсли;
	
	Если КоэффициентыРаспределенияСреднегоЗаработка.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТЗ Из КоэффициентыРаспределенияСреднегоЗаработка Цикл
		НоваяЗапись = Движения.КоэффициентыРаспределенияСреднегоЗаработка.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТЗ);
		Движения.КоэффициентыРаспределенияСреднегоЗаработка.Записывать = Истина;
	КонецЦикла;

КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, МассивФизическихЛиц = Неопределено,
																ИсключаемыеРегистраторы = Неопределено, ИсключатьМежрасчетныеВыплаты = Ложь, ТолькоДоходыСотрудников = Ложь)

	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ИсключаемыеРегистраторы);
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	Запрос.УстановитьПараметр("РаботаВБюджетномУчреждении", РаботаВБюджетномУчреждении);
	Запрос.УстановитьПараметр("ИсключатьМежрасчетныеВыплаты", ИсключатьМежрасчетныеВыплаты);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	БухучетНачисления.Организация КАК Организация,
	|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачисления.Сотрудник КАК Сотрудник,
	|	БухучетНачисления.Подразделение КАК Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.НачислениеУдержание КАК НачислениеУдержание,
	|	БухучетНачисления.ВидОперации КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА БухучетНачисления.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА БухучетНачисления.Подразделение
	|		ИНАЧЕ БухучетНачисления.ПодразделениеУчетаЗатрат
	|	КОНЕЦ КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ БухучетНачисления.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачисления.Сумма КАК Сумма,
	|	БухучетНачисления.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоСтатьямФинансирования
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНачисления.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
	|	И НЕ БухучетНачисления.Регистратор В (&ИсключаемыеРегистраторы)
	|	И &УсловиеПоФизическимЛицам
	|	И &УсловиеИсключатьМежрасчетныеВыплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.НачислениеУдержание,
	|	БухучетНачисления.ВидОперации,
	|	ВЫБОР
	|		КОГДА БухучетНачисления.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА БухучетНачисления.Подразделение
	|		ИНАЧЕ БухучетНачисления.ПодразделениеУчетаЗатрат
	|	КОНЕЦ,
	|	БухучетНачисления.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ БухучетНачисления.СтатьяРасходов
	|	КОНЕЦ,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.Сумма,
	|	БухучетНачисления.ДокументОснование
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНачисления.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И НЕ БухучетНачисления.Регистратор В (&ИсключаемыеРегистраторы)
	|	И БухучетНачисления.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
	|	И &УсловиеПоФизическимЛицам
	|	И &УсловиеИсключатьМежрасчетныеВыплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.НачислениеУдержание,
	|	БухучетНачисления.ВидОперации,
	|	ВЫБОР
	|		КОГДА БухучетНачисления.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА БухучетНачисления.Подразделение
	|		ИНАЧЕ БухучетНачисления.ПодразделениеУчетаЗатрат
	|	КОНЕЦ,
	|	БухучетНачисления.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ БухучетНачисления.СтатьяРасходов
	|	КОНЕЦ,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.Сумма,
	|	БухучетНачисления.ДокументОснование
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНачисления.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И НЕ БухучетНачисления.Регистратор В (&ИсключаемыеРегистраторы)
	|	И БухучетНачисления.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
	|	И &УсловиеПоФизическимЛицам
	|	И &УсловиеИсключатьМежрасчетныеВыплаты";
	
	Если Не ТолькоДоходыСотрудников Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	БухучетНачисления.Организация КАК Организация,
		|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачисления.Сотрудник КАК Сотрудник,
		|	БухучетНачисления.Подразделение КАК Подразделение,
		|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|	БухучетНачисления.НачислениеУдержание КАК НачислениеУдержание,
		|	БухучетНачисления.ВидОперации КАК ВидОперации,
		|	БухучетНачисления.Подразделение КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|	ВЫБОР
		|		КОГДА НЕ &РаботаВБюджетномУчреждении
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
		|		ИНАЧЕ БухучетНачисления.СтатьяРасходов
		|	КОНЕЦ КАК СтатьяРасходов,
		|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БухучетНачисления.Период КАК ДатаНачала,
		|	БухучетНачисления.Период КАК ДатаОкончания,
		|	БухучетНачисления.Сумма КАК Сумма,
		|	БухучетНачисления.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНачисления
		|ГДЕ
		|	БухучетНачисления.Организация = &Организация
		|	И НАЧАЛОПЕРИОДА(БухучетНачисления.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
		|	И НЕ БухучетНачисления.Регистратор В (&ИсключаемыеРегистраторы)
		|	И &УсловиеПоФизическимЛицам";
		
	КонецЕсли;
	
	Если ИсключаемыеРегистраторы = Неопределено Тогда
		УсловиеПоРегистраторам = "";
	ИначеЕсли ТипЗнч(ИсключаемыеРегистраторы) = Тип("Массив") Тогда
		УсловиеПоРегистраторам = "И НЕ БухучетНачисления.Регистратор В (&ИсключаемыеРегистраторы)";
	Иначе
		УсловиеПоРегистраторам = "И БухучетНачисления.Регистратор <> &ИсключаемыеРегистраторы";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеПоФизическимЛицам", ?(МассивФизическихЛиц = Неопределено,"","И БухучетНачисления.ФизическоеЛицо В(&МассивФизическихЛиц)"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеИсключатьМежрасчетныеВыплаты", ?(ИсключатьМежрасчетныеВыплаты,"И НЕ БухучетНачисления.НеУчитыватьВРаспределенииПриОкончательномРасчете",""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеПоРегистраторам", УсловиеПоРегистраторам);
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Выполнить();

КонецПроцедуры

// Формирует временные таблицы с данными бухучета начислений и взносов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//	МенеджерВременныхТаблиц - помещает в менеджер таблицы
//			ВТБухучетНачислений и ВТБухучетСтраховыхВзносов.
//
Процедура СведенияОБухучетеНачисленийИВзносовПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(Организация);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	ОтражениеЗарплатыВБухучете.СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц);
	ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА БухучетНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ БухучетНачисления.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачисления.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	БухучетНачисления.Организация КАК Организация,
	|	БухучетНачисления.Сотрудник КАК Сотрудник,
	|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачисления.Подразделение КАК Подразделение,
	|	БухучетНачисления.НачислениеУдержание КАК Начисление,
	|	БухучетНачисления.ВидОперации КАК ВидОперации,
	|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	НачислениеВидНачисленияОплатыТрудаДляНУ.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|	СУММА(БухучетНачисления.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачислений
	|ИЗ
	|	ВТБухучетНачисленийПоСтатьямФинансирования КАК БухучетНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеВидНачисленияОплатыТрудаДляНУ КАК НачислениеВидНачисленияОплатыТрудаДляНУ
	|		ПО БухучетНачисления.НачислениеУдержание = НачислениеВидНачисленияОплатыТрудаДляНУ.Начисление
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеВидНачисленияОплатыТрудаДляНУ.ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Сотрудник,
	|	ВЫБОР
	|		КОГДА БухучетНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ БухучетНачисления.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачисления.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.НачислениеУдержание,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.Организация
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНачисления.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносы.Подразделение КАК Подразделение,
	|	СтраховыеВзносы.Начисление КАК Начисление,
	|	НачислениеУдержаниеВидОперации.ВидОперации КАК ВидОперации,
	|	СУММА(0) КАК СтраховыеВзносы,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА СтраховыеВзносы.Подразделение
	|		ИНАЧЕ СтраховыеВзносы.ПодразделениеУчетаЗатрат
	|	КОНЕЦ КАК ПодразделениеУчетаЗатрат,
	|	СтраховыеВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СтраховыеВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ СтраховыеВзносы.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносы.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	СтраховыеВзносы.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ ВТБухучетСтраховыхВзносов
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачислениеУдержаниеВидОперации
	|		ПО СтраховыеВзносы.Начисление = НачислениеУдержаниеВидОперации.НачислениеУдержание
	|ГДЕ
	|	СтраховыеВзносы.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(СтраховыеВзносы.Период, МЕСЯЦ) = &ПериодРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	НачислениеУдержаниеВидОперации.ВидОперации,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	СтраховыеВзносы.СтатьяФинансирования,
	|	СтраховыеВзносы.СтатьяРасходов,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ СтраховыеВзносы.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносы.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.Начисление,
	|	СтраховыеВзносы.ДатаНачала,
	|	СтраховыеВзносы.Сотрудник,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА СтраховыеВзносы.Подразделение
	|		ИНАЧЕ СтраховыеВзносы.ПодразделениеУчетаЗатрат
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачислениеВидНачисленияОплатыТрудаДляНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачислениеУдержаниеВидОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийПоСтатьямФинансирования";
	
	ТекстПолейВзносов = "";
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		ТекстПолейВзносов = ТекстПолейВзносов + "СУММА(СтраховыеВзносы." + ИмяПоля + ") КАК " + ИмяПоля + "," + Символы.ПС;
	КонецЦикла;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(0) КАК СтраховыеВзносы,", ТекстПолейВзносов);
	Запрос.Выполнить();
	
КонецПроцедуры

// Выполняет распределение по статьям финансирования НДФЛ и Корректировок выплаты, зарегистрированных документом ПерерасчетНДФЛ
// Параметры:
// 		Организация
// 		ПериодРегистрации
//		ДокументСсылка
//		РезультатыРасчета - структура со свойствами
//			* РезультатыРасчетаНДФЛ - таблица значений
//			* РезультатыРасчетаКорректировкиВыплаты - таблица значений.
//
Процедура ПерерасчетНДФЛРаспределитьПоСтатьям(Организация,ПериодРегистрации,ДокументСсылка,РезультатыРасчета) Экспорт
	
	РезультатыРасчетаНДФЛ = РезультатыРасчета.РезультатыРасчетаНДФЛ;
	ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(РезультатыРасчетаНДФЛ);
	
	КорректировкиВыплаты  = РезультатыРасчета.РезультатыРасчетаКорректировкиВыплаты;
	ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(КорректировкиВыплаты);
	
	ТаблицаНДФЛ = НоваяТаблицаРезультатРасчетаНДФЛ();
	НДФЛКЗачету = НоваяТаблицаКорректировкиВыплаты();
	НДФЛЗачтено = НоваяТаблицаКорректировкиВыплаты();

	Для каждого СтрокаТЗ Из РезультатыРасчетаНДФЛ Цикл
		Если СтрокаТЗ.Сумма <> 0 Тогда
			НоваяСтрока = ТаблицаНДФЛ.Добавить();
			НоваяСтрока.ИдентификаторСтроки = СтрокаТЗ.ИдентификаторСтроки;
			НоваяСтрока.ФизическоеЛицо 		= СтрокаТЗ.ФизическоеЛицо;
			НоваяСтрока.ДатаПолученияДохода = СтрокаТЗ.МесяцНалоговогоПериода;
			НоваяСтрока.Территория 			= СтрокаТЗ.Подразделение;
			НоваяСтрока.Сумма 				= СтрокаТЗ.Сумма;
			НоваяСтрока.ВидУдержания 		= Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаТЗ Из КорректировкиВыплаты Цикл
		Сумма = СтрокаТЗ.КорректировкаВыплаты;
		Если Сумма < 0 Тогда
			НоваяСтрока = НДФЛКЗачету.Добавить();
			НоваяСтрока.ИдентификаторСтроки = СтрокаТЗ.ИдентификаторСтроки;
			НоваяСтрока.ФизическоеЛицо 		= СтрокаТЗ.ФизическоеЛицо;
			НоваяСтрока.Сумма 				= Сумма;
			НоваяСтрока.ВидУдержания 		= Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛКЗачету;
		ИначеЕсли Сумма > 0 Тогда
			НоваяСтрока = НДФЛЗачтено.Добавить();
			НоваяСтрока.ИдентификаторСтроки = СтрокаТЗ.ИдентификаторСтроки;
			НоваяСтрока.ФизическоеЛицо 		= СтрокаТЗ.ФизическоеЛицо;
			НоваяСтрока.Сумма 				= Сумма;
			НоваяСтрока.ВидУдержания 		= Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛЗачтено;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	0 КАК Сумма,
	|	ЛОЖЬ КАК ОблагаетсяЕНВД,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ПериодДействия,
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка) КАК Начисление,
	|	ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) КАК Территория
	|ПОМЕСТИТЬ ВТБухучетНачисленийВыходнаяТаблица";
	Запрос.Выполнить();
	
	ИсходныеДанные = ОписаниеИсходныхДанныхДляОтраженияУдержанийВБухучете();
	ИсходныеДанные.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ИсходныеДанные.Организация    			= Организация;
	ИсходныеДанные.МесяцНачисления 			= ПериодРегистрации;
	ИсходныеДанные.ИмяВТБухучетНачислений 	= "ВТБухучетНачисленийВыходнаяТаблица";
	ИсходныеДанные.ОкончательныйРасчет		= Истина;
	ИсходныеДанные.ИсключаемыйРегистратор 	= ДокументСсылка;
	ИсходныеДанные.РезультатРасчетаНДФЛ		= ТаблицаНДФЛ;
	ИсходныеДанные.НДФЛКЗачету		 		= НДФЛКЗачету;
	ИсходныеДанные.НДФЛЗачтено		 		= НДФЛЗачтено;
	
	РезультатыОтраженияВБухучете = ВыполнитьОтражениеНДФЛИКорректировокВыплатыВБухучете(ИсходныеДанные);
	
	Отбор = Новый Структура("ИдентификаторСтроки");
	БухучетНДФЛ = РезультатыОтраженияВБухучете.БухучетНДФЛ;
	БухучетНДФЛ.Индексы.Добавить("ИдентификаторСтроки");
	
	НоваяТаблица = РезультатыРасчетаНДФЛ.СкопироватьКолонки();
	Для каждого СтрокаТЗ Из РезультатыРасчетаНДФЛ Цикл
		Отбор.ИдентификаторСтроки = СтрокаТЗ.ИдентификаторСтроки;
		РаспределениеПоСтатьям = БухучетНДФЛ.НайтиСтроки(Отбор);
		Для каждого СтрокаРаспределения Из РаспределениеПоСтатьям Цикл
			Если ЗначениеЗаполнено(СтрокаРаспределения.Сотрудник) Тогда
				НоваяСтрока = НоваяТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
				НоваяСтрока.Сотрудник 				= СтрокаРаспределения.Сотрудник;
				НоваяСтрока.ПодразделениеСотрудника = СтрокаРаспределения.Подразделение;
				НоваяСтрока.СтатьяФинансирования 	= СтрокаРаспределения.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов 			= СтрокаРаспределения.СтатьяРасходов;
				НоваяСтрока.Сумма 					= СтрокаРаспределения.Результат;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	РезультатыРасчета.РезультатыРасчетаНДФЛ = НоваяТаблица;
	
	БухучетКорректировкиВыплаты = РезультатыОтраженияВБухучете.БухучетКорректировкиВыплаты;
	БухучетКорректировкиВыплаты.Индексы.Добавить("ИдентификаторСтроки");
	НоваяТаблица = КорректировкиВыплаты.СкопироватьКолонки();
	Для каждого СтрокаТЗ Из КорректировкиВыплаты Цикл
		Отбор.ИдентификаторСтроки = СтрокаТЗ.ИдентификаторСтроки;
		РаспределениеПоСтатьям = БухучетКорректировкиВыплаты.НайтиСтроки(Отбор);
		Для каждого СтрокаРаспределения Из РаспределениеПоСтатьям Цикл
			НоваяСтрока = НоваяТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
			НоваяСтрока.Сотрудник 				= СтрокаРаспределения.Сотрудник;
			НоваяСтрока.ПодразделениеСотрудника = СтрокаРаспределения.Подразделение;
			НоваяСтрока.СтатьяФинансирования 	= СтрокаРаспределения.СтатьяФинансирования;
			НоваяСтрока.СтатьяРасходов 			= СтрокаРаспределения.СтатьяРасходов;
			НоваяСтрока.КорректировкаВыплаты	= СтрокаРаспределения.Результат;
		КонецЦикла;
	КонецЦикла;
	РезультатыРасчета.РезультатыРасчетаКорректировкиВыплаты = НоваяТаблица;
	
КонецПроцедуры

// Добавляет запись о бухучете зарплаты по документу основанию.
//
Процедура ОбновитьСведенияОБухучетеЗарплатыСотрудников(ДокументОбъект, НеРегистрироватьБухучет, ИмяТаблицы, ИмяПоляПериод, ИмяПоляДействуетДо, НетПоляЕНВД = Ложь) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.БухучетЗарплатыСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(ДокументОбъект.Ссылка);
		
	Если НеРегистрироватьБухучет Или Не ДокументОбъект.Проведен Тогда
		
		
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДокументОбъект.ИсправленныйДокумент) Тогда
			// "Включение" записей исправленного документа.
			НаборИсправленныхЗаписей = РегистрыСведений.БухучетЗарплатыСотрудниковИсправления.СоздатьНаборЗаписей();
			НаборИсправленныхЗаписей.Отбор.ДокументОснование.Установить(ДокументОбъект.ИсправленныйДокумент);
			НаборИсправленныхЗаписей.Прочитать();
			Если НаборИсправленныхЗаписей.Количество()>0 Тогда
				НаборЗаписей.Отбор.ДокументОснование.Установить(ДокументОбъект.ИсправленныйДокумент);
				Для каждого ЗаписьНабора Из НаборИсправленныхЗаписей Цикл
					НоваяЗапись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗапись, ЗаписьНабора);
					НоваяЗапись.Период = ЗаписьНабора.ПериодИзмерение;
				КонецЦикла;
				НаборЗаписей.Записать();
				НаборИсправленныхЗаписей.Очистить();
				НаборИсправленныхЗаписей.Записать();
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
		Запрос.УстановитьПараметр("ЕстьЕНВД", ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВДВБюджетномУчреждении"));
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.ДатаНачала КАК Период,
		|	Таблица.ДатаОкончания КАК ДействуетДо,
		|	Таблица.Сотрудник КАК Сотрудник,
		|	Таблица.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	Таблица.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
		|	Таблица.СтатьяФинансирования КАК СтатьяФинансирования,
		|	&Ссылка КАК ДокументОснование
		|ПОМЕСТИТЬ ВТНастройкиБухучета
		|ИЗ
		|	#Таблица КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеПериоды.Сотрудник КАК Сотрудник,
		|	МаксимальныеПериоды.Период КАК Период,
		|	ВЫБОР
		|		КОГДА БухучетЗарплаты.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
		|				И БухучетЗарплаты.ДействуетДо <= МаксимальныеПериоды.Период
		|			ТОГДА БухучетЗарплаты.СтатьяФинансированияПоОкончании
		|		ИНАЧЕ БухучетЗарплаты.СтатьяФинансирования
		|	КОНЕЦ КАК СтатьяФинансирования,
		|	ВЫБОР
		|		КОГДА БухучетЗарплаты.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
		|				И БухучетЗарплаты.ДействуетДо <= МаксимальныеПериоды.Период
		|			ТОГДА БухучетЗарплаты.СпособОтраженияЗарплатыВБухучетеПоОкончании
		|		ИНАЧЕ БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете
		|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
		|	ВЫБОР
		|		КОГДА БухучетЗарплаты.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
		|				И БухучетЗарплаты.ДействуетДо <= МаксимальныеПериоды.Период
		|			ТОГДА БухучетЗарплаты.ОтношениеКЕНВДПоОкончании
		|		ИНАЧЕ БухучетЗарплаты.ОтношениеКЕНВД
		|	КОНЕЦ КАК ОтношениеКЕНВД
		|ПОМЕСТИТЬ ВТЗначенияПоОкончании
		|ИЗ
		|	(ВЫБРАТЬ
		|		НастройкиБухучета.Сотрудник КАК Сотрудник,
		|		НастройкиБухучета.Период КАК Период,
		|		МАКСИМУМ(БухучетЗарплатыСотрудников.Период) КАК ПериодРегистра
		|	ИЗ
		|		ВТНастройкиБухучета КАК НастройкиБухучета
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплатыСотрудников
		|			ПО НастройкиБухучета.Период > БухучетЗарплатыСотрудников.Период
		|				И НастройкиБухучета.Сотрудник = БухучетЗарплатыСотрудников.Сотрудник
		|				И (НастройкиБухучета.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1))
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НастройкиБухучета.Сотрудник,
		|		НастройкиБухучета.Период) КАК МаксимальныеПериоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплаты
		|		ПО МаксимальныеПериоды.Сотрудник = БухучетЗарплаты.Сотрудник
		|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиБухучета.Период КАК Период,
		|	НастройкиБухучета.Сотрудник КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА НЕ БухучетСотрудников.Период ЕСТЬ NULL
		|				И БухучетСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК РучнаяКорректировка,
		|	ВЫБОР
		|		КОГДА НастройкиБухучета.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
		|				ИЛИ НастройкиБухучета.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
		|				ИЛИ &ЕстьЕНВД
		|					И НастройкиБухучета.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК БухучетВДокументеЗадан,
		|	БухучетСотрудников.ДокументОснование КАК ДокументОснованиеСтарый
		|ИЗ
		|	ВТНастройкиБухучета КАК НастройкиБухучета
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетСотрудников
		|		ПО НастройкиБухучета.Период = БухучетСотрудников.Период
		|			И НастройкиБухучета.Сотрудник = БухучетСотрудников.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиБухучета.Период КАК Период,
		|	НастройкиБухучета.Сотрудник КАК Сотрудник,
		|	НастройкиБухучета.ДокументОснование КАК ДокументОснование,
		|	НастройкиБухучета.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	НастройкиБухучета.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
		|	НастройкиБухучета.СтатьяФинансирования КАК СтатьяФинансирования,
		|	НастройкиБухучета.ДействуетДо КАК ДействуетДо,
		|	ЗначенияПоОкончании.СтатьяФинансирования КАК СтатьяФинансированияПоОкончании,
		|	ЗначенияПоОкончании.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучетеПоОкончании,
		|	ЗначенияПоОкончании.ОтношениеКЕНВД КАК ОтношениеКЕНВДПоОкончании
		|ИЗ
		|	ВТНастройкиБухучета КАК НастройкиБухучета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоОкончании КАК ЗначенияПоОкончании
		|		ПО НастройкиБухучета.Период = ЗначенияПоОкончании.Период
		|			И НастройкиБухучета.Сотрудник = ЗначенияПоОкончании.Сотрудник
		|ГДЕ
		|	ВЫБОР
		|			КОГДА НастройкиБухучета.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
		|					ИЛИ НастройкиБухучета.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
		|					ИЛИ &ЕстьЕНВД
		|						И НастройкиБухучета.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"#Таблица",ИмяТаблицы);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Таблица.ДатаНачала",ИмяПоляПериод);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Таблица.ДатаОкончания",?(ИмяПоляДействуетДо = Неопределено,"ДАТАВРЕМЯ(1, 1, 1)",ИмяПоляДействуетДо));
		Если НетПоляЕНВД Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"Таблица.ОтношениеКЕНВД","ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)");
		КонецЕсли;
		Результат = Запрос.ВыполнитьПакет();
		
		Выборка = Результат[Результат.ВГраница()-1].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если НЕ Выборка.БухучетВДокументеЗадан И Выборка.ДокументОснованиеСтарый = ДокументОбъект.Ссылка Тогда
				// Очистка записей если в документе очистили бухучет.
				НаборОчищаемыхЗаписей = РегистрыСведений.БухучетЗарплатыСотрудников.СоздатьНаборЗаписей();
				НаборОчищаемыхЗаписей.Отбор.ДокументОснование.Установить(ДокументОбъект.Ссылка);
				НаборОчищаемыхЗаписей.Записать();
			ИначеЕсли Выборка.БухучетВДокументеЗадан И Выборка.РучнаяКорректировка Тогда
				// Очистка записей если есть ручная корректировка.
				НаборОчищаемыхЗаписей = РегистрыСведений.БухучетЗарплатыСотрудников.СоздатьНаборЗаписей();
				НаборОчищаемыхЗаписей.Отбор.Период.Установить(Выборка.Период);
				НаборОчищаемыхЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
				НаборОчищаемыхЗаписей.Записать();	
			ИначеЕсли ЗначениеЗаполнено(ДокументОбъект.ИсправленныйДокумент) И Выборка.ДокументОснованиеСтарый = ДокументОбъект.ИсправленныйДокумент Тогда
				// "Выключение" записей исправленного документа.
				НаборОчищаемыхЗаписей = РегистрыСведений.БухучетЗарплатыСотрудников.СоздатьНаборЗаписей();
				НаборОчищаемыхЗаписей.Отбор.ДокументОснование.Установить(ДокументОбъект.ИсправленныйДокумент);
				НаборОчищаемыхЗаписей.Прочитать();
				Если НаборОчищаемыхЗаписей.Количество()>0 Тогда
					НаборИсправленныхЗаписей = РегистрыСведений.БухучетЗарплатыСотрудниковИсправления.СоздатьНаборЗаписей();
					НаборИсправленныхЗаписей.Отбор.ДокументОснование.Установить(ДокументОбъект.ИсправленныйДокумент);
					Для каждого ЗаписьНабора Из НаборОчищаемыхЗаписей Цикл
						НоваяЗапись = НаборИсправленныхЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, ЗаписьНабора);
						НоваяЗапись.ПериодИзмерение = ЗаписьНабора.Период;
					КонецЦикла;
					НаборИсправленныхЗаписей.Записать();
					НаборОчищаемыхЗаписей.Очистить();				
					НаборОчищаемыхЗаписей.Записать();	
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Выборка = Результат[Результат.ВГраница()].Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);	
		КонецЦикла;
		
		Если НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Записать();
		КонецЕсли
		
	КонецЕсли;
	
КонецПроцедуры

// Дополняет записи набора записей регистра СведенияОДоходахНДФЛ данными о распределении по статьям финансирования
// Параметры 
//		Движения - коллекции наборов записей движений документа, должна содержать коллекции еще не записанных наборов
//			СведенияОДоходахНДФЛ
//			БухучетНачисленияУдержанияПоСотрудникам - коллекция может отсутствовать или быть пустой, тогда доходы не обрабатываются.
//		
Процедура ДополнитьДоходыНДФЛСведениямиОРаспределенииПоСтатьямФинансирования(Движения) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Возврат;
	КонецЕсли;
	
	Если Движения.Найти("БухучетНачисленияУдержанияПоСотрудникам") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Колонки = "ФизическоеЛицо,НачислениеУдержание,ТерриторияВыполненияРаботВОрганизации,Сотрудник,Подразделение,ДатаНачала,Сумма,СтатьяФинансирования,СтатьяРасходов,ГруппаНачисленияУдержанияВыплаты";
	БухучетНачислений = Движения.БухучетНачисленияУдержанияПоСотрудникам.Выгрузить(,Колонки);
	Если БухучетНачислений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СведенияОДоходах = Движения.СведенияОДоходахНДФЛ.Выгрузить();
	СведенияОДоходах.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	ИдентификаторСтроки = 1;
	Для каждого СтрокаТЗ Из СведенияОДоходах Цикл
		СтрокаТЗ.ИдентификаторСтроки = ИдентификаторСтроки;
		ИдентификаторСтроки = ИдентификаторСтроки + 1;
	КонецЦикла;
	
	НовыеСведенияОДоходах = НовыеСведенияОДоходахДополненныеСтатьейФинансирования(СведенияОДоходах, БухучетНачислений);
	Если НовыеСведенияОДоходах.Количество()>0 Тогда
		Движения.СведенияОДоходахНДФЛ.Загрузить(НовыеСведенияОДоходах);
	КонецЕсли;
	
КонецПроцедуры

Функция НовыеСведенияОДоходахДополненныеСтатьейФинансирования(СведенияОДоходах, БухучетНачислений) Экспорт

	НовыеСведенияОДоходах = СведенияОДоходах.СкопироватьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СведенияОДоходах", СведенияОДоходах);
	Запрос.УстановитьПараметр("БухучетНачислений", БухучетНачислений);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ИдентификаторСтроки,
	|	СведенияОДоходахНДФЛ.Период КАК Период,
	|	СведенияОДоходахНДФЛ.Организация КАК Организация,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.Начисление КАК Начисление,
	|	СведенияОДоходахНДФЛ.Подразделение КАК Территория,
	|	СведенияОДоходахНДФЛ.Сотрудник КАК Сотрудник,
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника КАК Подразделение,
	|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета КАК СуммаВычета
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	&СведенияОДоходах КАК СведенияОДоходахНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.НачислениеУдержание КАК Начисление,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК Территория,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма
	|ПОМЕСТИТЬ ВТБухучетНачислений
	|ИЗ
	|	&БухучетНачислений КАК БухучетНачислений
	|ГДЕ
	|	БухучетНачислений.ГруппаНачисленияУдержанияВыплаты В (ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено), ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Льготы))
	|	И БухучетНачислений.Сумма <> 0";
	Запрос.Выполнить();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ГрантыНеоблагаемыеНДФЛ") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГрантыНеоблагаемыеНДФЛ");
		Если Модуль.ИспользуютсяГрантыНеоблагаемыеНДФЛ() Тогда
			Модуль.УдалитьСуммыЗаСчетГрантовВТаблицеБухучетНачислений(Запрос.МенеджерВременныхТаблиц, "ВТБухучетНачислений");
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БухучетНачисленийВременная.ФизическоеЛицо,
	|	БухучетНачисленийВременная.Начисление,
	|	БухучетНачисленийВременная.Территория,
	|	БухучетНачисленийВременная.Сотрудник,
	|	БухучетНачисленийВременная.Подразделение,
	|	БухучетНачисленийВременная.СтатьяФинансирования,
	|	БухучетНачисленийВременная.СтатьяРасходов,
	|	СУММА(БухучетНачисленийВременная.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийСвод
	|ИЗ
	|	ВТБухучетНачислений КАК БухучетНачисленийВременная
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачисленийВременная.СтатьяФинансирования,
	|	БухучетНачисленийВременная.Сотрудник,
	|	БухучетНачисленийВременная.Территория,
	|	БухучетНачисленийВременная.ФизическоеЛицо,
	|	БухучетНачисленийВременная.СтатьяРасходов,
	|	БухучетНачисленийВременная.Подразделение,
	|	БухучетНачисленийВременная.Начисление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СведенияОДоходах.СуммаДохода,
	|	СведенияОДоходах.СуммаВычета,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК СуммаБУ
	|ПОМЕСТИТЬ ВТСтрокиКОбработке
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачисленийСвод КАК БухучетНачислений
	|		ПО СведенияОДоходах.ФизическоеЛицо = БухучетНачислений.ФизическоеЛицо
	|			И СведенияОДоходах.Начисление = БухучетНачислений.Начисление
	|			И СведенияОДоходах.Территория = БухучетНачислений.Территория
	|			И СведенияОДоходах.Сотрудник = БухучетНачислений.Сотрудник
	|			И СведенияОДоходах.Подразделение = БухучетНачислений.Подразделение
	|			И (БухучетНачислений.Сумма <> 0)
	|ГДЕ
	|	НЕ(СведенияОДоходах.СуммаДохода = 0
	|				И СведенияОДоходах.СуммаВычета = 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.Сотрудник,
	|	СведенияОДоходах.Подразделение,
	|	СведенияОДоходах.Территория КАК ТерриторияВыполненияРаботВОрганизации,
	|	СведенияОДоходах.СуммаДохода,
	|	СведенияОДоходах.СуммаВычета
	|ПОМЕСТИТЬ ВТСтрокиБезБазы
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКОбработке КАК СтрокиКОбработке
	|		ПО СведенияОДоходах.ИдентификаторСтроки = СтрокиКОбработке.ИдентификаторСтроки
	|ГДЕ
	|	СтрокиКОбработке.ИдентификаторСтроки ЕСТЬ NULL 
	|	И НЕ(СведенияОДоходах.СуммаДохода = 0
	|				И СведенияОДоходах.СуммаВычета = 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СотрудникиБезБазы.Период,
	|	СотрудникиБезБазы.Организация,
	|	СотрудникиБезБазы.Сотрудник,
	|	СотрудникиБезБазы.Подразделение,
	|	СотрудникиБезБазы.ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТСотрудникиБезБазы
	|ИЗ
	|	ВТСтрокиБезБазы КАК СотрудникиБезБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиКОбработке.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СтрокиКОбработке.СуммаДохода,
	|	СтрокиКОбработке.СуммаВычета,
	|	СтрокиКОбработке.СтатьяФинансирования,
	|	СтрокиКОбработке.СтатьяРасходов,
	|	СтрокиКОбработке.СуммаБУ
	|ИЗ
	|	ВТСтрокиКОбработке КАК СтрокиКОбработке
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СотрудникиБезБазы.ИдентификаторСтроки
	|ИЗ
	|	ВТСтрокиБезБазы КАК СотрудникиБезБазы";
	
	Результат = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результат.ВГраница();
	
	РезультатРаспределения = Новый ТаблицаЗначений;
	РезультатРаспределения.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	РезультатРаспределения.Колонки.Добавить("СуммаДохода", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	РезультатРаспределения.Колонки.Добавить("СуммаВычета", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	РезультатРаспределения.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	РезультатРаспределения.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	
	// обработка строк, не имеющих базу
	Если Не Результат[КоличествоРезультатов].Пустой() Тогда
		
		СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиБезБазы");
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтрокиБезБазы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	СведенияОБухучете.СтатьяФинансирования,
		|	СведенияОБухучете.СтатьяРасходов,
		|	СтрокиБезБазы.СуммаДохода,
		|	СтрокиБезБазы.СуммаВычета
		|ИЗ
		|	ВТСтрокиБезБазы КАК СтрокиБезБазы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучете
		|		ПО СтрокиБезБазы.Сотрудник = СведенияОБухучете.Сотрудник
		|			И СтрокиБезБазы.Период = СведенияОБухучете.Период
		|			И СтрокиБезБазы.Подразделение = СведенияОБухучете.Подразделение
		|			И СтрокиБезБазы.ТерриторияВыполненияРаботВОрганизации = СведенияОБухучете.ТерриторияВыполненияРаботВОрганизации
		|			И СтрокиБезБазы.Организация = СведенияОБухучете.Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИдентификаторСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(РезультатРаспределения.Добавить(), Выборка);
		КонецЦикла;
		
	КонецЕсли;
	
	// обработка строк, имеющих базу
	Выборка = Результат[КоличествоРезультатов-1].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ИдентификаторСтроки") Цикл
		
		СуммаДохода = Выборка.СуммаДохода;
		СуммаВычета = Выборка.СуммаВычета;
		
		Коэффициенты = Новый Массив;
		СтатьиФинансирования = Новый Массив;
		СтатьиРасходов = Новый Массив;
		
		Пока Выборка.Следующий() Цикл
			Коэффициенты.Добавить(Выборка.СуммаБУ);
			СтатьиФинансирования.Добавить(Выборка.СтатьяФинансирования);
			СтатьиРасходов.Добавить(Выборка.СтатьяРасходов);
		КонецЦикла;
		
		Если Коэффициенты.Количество() = 1 Тогда
			
			НоваяСтрока = РезультатРаспределения.Добавить();
			НоваяСтрока.ИдентификаторСтроки  = Выборка.ИдентификаторСтроки;
			НоваяСтрока.СтатьяФинансирования = СтатьиФинансирования[0];
			НоваяСтрока.СтатьяРасходов 		 = СтатьиРасходов[0];
			НоваяСтрока.СуммаДохода 		 = СуммаДохода;
			НоваяСтрока.СуммаВычета 		 = СуммаВычета;
			
		Иначе
			
			Если СуммаДохода <> 0 Тогда
				РаспределенныеСуммыДохода = ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(СуммаДохода, Коэффициенты);
			КонецЕсли;
			Если СуммаВычета <> 0 Тогда
				РаспределенныеСуммыВычета = ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(СуммаВычета, Коэффициенты);	
			КонецЕсли;
			
			Для Индекс = 0 По Коэффициенты.ВГраница() Цикл
				НоваяСтрока = РезультатРаспределения.Добавить();
				НоваяСтрока.ИдентификаторСтроки  = Выборка.ИдентификаторСтроки;
				НоваяСтрока.СтатьяФинансирования = СтатьиФинансирования[Индекс];
				НоваяСтрока.СтатьяРасходов 		 = СтатьиРасходов[Индекс];
				НоваяСтрока.СуммаДохода 		 = ?(СуммаДохода = 0, 0 , РаспределенныеСуммыДохода[Индекс]);
				НоваяСтрока.СуммаВычета 		 = ?(СуммаВычета = 0, 0 , РаспределенныеСуммыВычета[Индекс]);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;	

	Если РезультатРаспределения.Количество() > 0 Тогда
		
		РезультатРаспределения.Индексы.Добавить("ИдентификаторСтроки");
		Отбор = Новый Структура("ИдентификаторСтроки");
		
		Для каждого СтрокаДоходов Из СведенияОДоходах Цикл
			
			Отбор.ИдентификаторСтроки = СтрокаДоходов.ИдентификаторСтроки;
			СтрокиРаспределения = РезультатРаспределения.НайтиСтроки(Отбор);
			Если СтрокиРаспределения.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(НовыеСведенияОДоходах.Добавить(), СтрокаДоходов);
			Иначе	
				Для каждого СтрокаРаспределения Из СтрокиРаспределения Цикл
					НоваяСтрока = НовыеСведенияОДоходах.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДоходов);
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределения);
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат НовыеСведенияОДоходах;

КонецФункции 


#КонецОбласти

#Область ОбслуживаниеМенеджераРасчетов

// Выполняет отражение начислений в бухучете, создает временную таблицу с именем указанным в ИсходныеДанные - ИмяВТБухучетНачислений.
//
// Параметры:
// 		ИсходныеДанные - структура, см ОписаниеИсходныхДанныхДляОтраженияНачисленийВБухучете
//			Организация
//			МесяцНачисления
//			МенеджерВременныхТаблиц 	- менеджер временных таблиц, содержит таблицу с начислениями, имя ВТ в значении ИмяВТНачисленияИсходная 
//			РаботаВБюджетномУчреждении 	- Булево, значение ФО РаботаВБюджетномУчреждении
//			ИспользоватьСтатьиФинансирования  - Булево, значение ФО ИспользоватьСтатьиФинансирования
//			ДокументСсылка
//			ПроцентЕНВД
//			ПлательщикЕНВД
//
//			ИмяВТБухучетНачислений - имя ВТ в которую будут помещены результаты отражения в бухучете 
//					ИдентификаторСтроки
//					Сотрудник
//					ФизическоеЛицо
//					Подразделение
//					ПодразделениеУчетаЗатрат
//					СпособОтраженияЗарплатыВБухучете
//					СтатьяФинансирования
//					СтатьяРасходов
//					Сумма
//					ОблагаетсяЕНВД
//					ДатаНачала
//					Начисление
//					Территория
//					КодСтатьиФинансирования
//
//			ИмяВТНачисленияИсходная - имя ВТ с начислениями для получения бухучета, содержит поля
//					ПериодРегистрации
//					Организация
//					Сотрудник
//					ФизическоеЛицо
//					Подразделение
//					ТерриторияВыполненияРаботВОрганизации
//					ДатаНачала
//					ДатаОкончания
//					Начисление
//					ДокументОснование
//					ИдентификаторСтроки
//					Сумма
//					Сторно
//					ФиксСторно
//
//			СтрокиБухучетСторноНачислений - соответствие
//					Ключ	 - ИдентификаторСтроки
//					Значение - таблица значений бухучетом, описание см ПустаяТаблицаРаспределениеРезультатовНачислений().
//
//			СтрокиКоэффициентыСреднегоЗаработка - соответствие
//					Ключ	 - ИдентификаторСтроки
//					Значение - таблица значений с коэффициентами распределения, описание см НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка().
//
//			КоэффициентыСреднегоЗаработкаДокумента - Соответствие
//					Ключ	 - Перечисления.СпособыРасчетаНачислений
//					Значение - таблица значений с коэффициентами распределения, описание см НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка().
//	
//			КоэффициентыСреднегоЗаработкаФССДокумента - таблица значений с коэффициентами распределения, описание см НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка().
//
//			БухучетПервичногоДокумента - таблица значений, описание см НоваяТаблицаБухучетЗарплатыПервичныхДокументов().
//
// Возвращаемое значение: таблица значений с бухучетом начислений
//		описание таблицы см ПустаяТаблицаРаспределениеРезультатовНачислений().
//
Функция ВыполнитьОтражениеНачисленийВБухучете(ИсходныеДанные) Экспорт
	
	УдалитьВТ = Новый Массив;
	
	ИмяВТБухучетНачислений 	= ИсходныеДанные.ИмяВТБухучетНачислений;
	МенеджерВременныхТаблиц = ИсходныеДанные.МенеджерВременныхТаблиц;
	ИмяВТНачисления			= ИсходныеДанные.ИмяВТНачисления;
	СтрокиБухучетСторноНачислений = ИсходныеДанные.СтрокиБухучетСторноНачислений;
	
	ИспользоватьСтатьиФинансирования = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	РаботаВБюджетномУчреждении 		 = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	СоздатьВТБухучетНачисленийСторно(МенеджерВременныхТаблиц, ИмяВТНачисления, СтрокиБухучетСторноНачислений, ИспользоватьСтатьиФинансирования, РаботаВБюджетномУчреждении);
	УдалитьВТ.Добавить("ВТБухучетНачисленийСторно");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачисленияДляРаспределения.ПериодРегистрации,
	|	НачисленияДляРаспределения.Организация,
	|	НачисленияДляРаспределения.Сотрудник,
	|	НачисленияДляРаспределения.ФизическоеЛицо,
	|	НачисленияДляРаспределения.Подразделение,
	|	НачисленияДляРаспределения.Начисление,
	|	НачисленияДляРаспределения.ДатаНачала,
	|	НачисленияДляРаспределения.ДатаОкончания,
	|	НачисленияДляРаспределения.Сумма,
	|	НачисленияДляРаспределения.ДокументОснование,
	|	НачисленияДляРаспределения.ИдентификаторСтроки,
	|	НачисленияДляРаспределения.ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияДляРаспределения.Сторно,
	|	НачисленияДляРаспределения.ФиксСторно,
	|	НачисленияДляРаспределения.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
	|ИЗ
	|	ВТНачисленияДляОтраженияВБухучете КАК НачисленияДляРаспределения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийСторно КАК БухучетНачисленийСторно
	|		ПО НачисленияДляРаспределения.ИдентификаторСтроки = БухучетНачисленийСторно.ИдентификаторСтроки
	|ГДЕ
	|	БухучетНачисленийСторно.ИдентификаторСтроки ЕСТЬ NULL "; 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляОтраженияВБухучете", ИмяВТНачисления);
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТНачисленияДляРаспределения");
	
	ИсходныеДанные.ИмяВТНачисления = "ВТНачисленияДляРаспределения";
	ИсходныеДанные.УчитыватьСторноЗаписи = Истина;
	СоздатьВТБухучетНачисленийБезДоговоровГПХ(ИсходныеДанные, "ВТБухучетНачисленийВыходнаяТаблица");
	УдалитьВТ.Добавить("ВТБухучетНачисленийВыходнаяТаблица");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Сумма,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.Территория КАК Территория,
	|	ЕСТЬNULL(СтатьиФинансированияЗарплата.Код, """") КАК КодСтатьиФинансирования
	|ПОМЕСТИТЬ ИмяВТБухучетНачислений
	|ИЗ
	|	(ВЫБРАТЬ
	|		БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		БухучетНачислений.Сотрудник КАК Сотрудник,
	|		БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|		БухучетНачислений.Подразделение КАК Подразделение,
	|		БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|		БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|		БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|		БухучетНачислений.Сумма КАК Сумма,
	|		БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|		БухучетНачислений.Начисление КАК Начисление,
	|		БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК Территория
	|	ИЗ
	|		ВТБухучетНачисленийВыходнаяТаблица КАК БухучетНачислений
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БухучетНачисленийСторно.ИдентификаторСтроки,
	|		БухучетНачисленийСторно.Сотрудник,
	|		БухучетНачисленийСторно.ФизическоеЛицо,
	|		БухучетНачисленийСторно.Подразделение,
	|		БухучетНачисленийСторно.Подразделение,
	|		БухучетНачисленийСторно.СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисленийСторно.СтатьяФинансирования,
	|		БухучетНачисленийСторно.СтатьяРасходов,
	|		БухучетНачисленийСторно.Сумма,
	|		БухучетНачисленийСторно.ОблагаетсяЕНВД,
	|		БухучетНачисленийСторно.ДатаНачала,
	|		БухучетНачисленийСторно.Начисление,
	|		БухучетНачисленийСторно.Территория
	|	ИЗ
	|		ВТБухучетНачисленийСторно КАК БухучетНачисленийСторно) КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиФинансированияЗарплата КАК СтатьиФинансированияЗарплата
	|		ПО БухучетНачислений.СтатьяФинансирования = СтатьиФинансированияЗарплата.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Результат,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БухучетНачислений.Территория КАК Территория,
	|	БухучетНачислений.КодСтатьиФинансирования КАК КодСтатьиФинансирования,
	|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат
	|ИЗ
	|	ИмяВТБухучетНачислений КАК БухучетНачислений
	|
	|УПОРЯДОЧИТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Территория,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.ОблагаетсяЕНВД
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяВТБухучетНачислений", ИмяВТБухучетНачислений);

	БухучетНачислений = Запрос.Выполнить().Выгрузить();
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
	Возврат БухучетНачислений;

КонецФункции

// Выполняет отражение начислений по договорам ГПХ в бухучете, создает временную таблицу с именем указанным в
// ИсходныеДанные - ИмяВТБухучетНачислений.
//
// Параметры:
// 		ИсходныеДанные - структура, см ОписаниеИсходныхДанныхДляОтраженияНачисленийВБухучете.
//
// Возвращаемое значение: таблица значений с бухучетом начислений
//		описание таблицы см ПустаяТаблицаРаспределениеРезультатовНачислений().
//
Функция ВыполнитьОтражениеНачисленийПоДоговорамВБухучете(ИсходныеДанные) Экспорт

	ИмяВТБухучетНачислений  = ИсходныеДанные.ИмяВТБухучетНачислений;
	МенеджерВременныхТаблиц = ИсходныеДанные.МенеджерВременныхТаблиц;
	
	УдалитьВТ = Новый Массив;
	
	СоздатьВТБухучетНачисленийПоДоговорам(ИсходныеДанные, "ВТБухучетНачисленийПоДоговорамВременная");
	УдалитьВТ.Добавить("ВТБухучетНачисленийПоДоговорамВременная");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Сумма,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК Территория,
	|	ЕСТЬNULL(СтатьиФинансированияЗарплата.Код, """") КАК КодСтатьиФинансирования
	|ПОМЕСТИТЬ ВТБухучетНачисленийВыходнаяТаблица
	|ИЗ
	|	ВТБухучетНачисленийПоДоговорамВременная КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиФинансированияЗарплата КАК СтатьиФинансированияЗарплата
	|		ПО БухучетНачислений.СтатьяФинансирования = СтатьиФинансированияЗарплата.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Результат,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БухучетНачислений.Территория КАК Территория,
	|	БухучетНачислений.КодСтатьиФинансирования КАК КодСтатьиФинансирования
	|ИЗ
	|	ВТБухучетНачисленийВыходнаяТаблица КАК БухучетНачислений
	|
	|УПОРЯДОЧИТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Территория,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.ОблагаетсяЕНВД
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийВыходнаяТаблица", ИмяВТБухучетНачислений);
	
	БухучетНачисленийПоДоговорам = Запрос.Выполнить().Выгрузить();
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
	Возврат БухучетНачисленийПоДоговорам;

КонецФункции

// Выполняет отражение НДФЛ и КорректировокВыплаты в бухучете
//
// Параметры:
// 		ИсходныеДанные - структура, см ОписаниеИсходныхДанныхДляОтраженияУдержанийВБухучете
//				* МенеджерВременныхТаблиц
//				* ИмяВТБухучетНачислений
//				* ОкончательныйРасчет
//				* ПериодРегистрации
//				* Организация
//				* ИсключаемыйРегистратор
//				* РезультатРасчетаНДФЛ, описание см НоваяТаблицаРезультатРасчетаНДФЛ
//				* НДФЛКЗачету, описание см НоваяТаблицаКорректировкиВыплаты
//				* НДФЛЗачтено, описание см НоваяТаблицаКорректировкиВыплаты.
//
// Возвращаемое значение: структура с ключами
//		БухучетНДФЛ - Таблица значений, описание см в  НоваяТаблицаРаспределениеРезультатовУдержаний()
//		БухучетКорректировкиВыплаты - Таблица значений, описание см в  НоваяТаблицаРаспределениеРезультатовУдержаний().
//
Функция ВыполнитьОтражениеНДФЛИКорректировокВыплатыВБухучете(ИсходныеДанные) Экспорт

	БухучетНДФЛ 				 = НоваяТаблицаРаспределениеРезультатовУдержаний();
	БухучетКорректировкиВыплаты  = НоваяТаблицаРаспределениеРезультатовУдержаний();
	
	МенеджерВременныхТаблиц = ИсходныеДанные.МенеджерВременныхТаблиц;
	ИмяВТБухучетНачислений 	= ИсходныеДанные.ИмяВТБухучетНачислений;
	ОкончательныйРасчет		= ИсходныеДанные.ОкончательныйРасчет;
	ПериодРегистрации       = ИсходныеДанные.МесяцНачисления;
	Организация      		= ИсходныеДанные.Организация;
	ИсключаемыйРегистратор  = ИсходныеДанные.ИсключаемыйРегистратор;
	РегистраторыНДФЛОбновленияБухучета = ИсходныеДанные.РегистраторыУдержанийОбновленияБухучета;
	
	РезультатРасчетаНДФЛ 	= ИсходныеДанные.РезультатРасчетаНДФЛ;
	НДФЛКЗачету		 		= ИсходныеДанные.НДФЛКЗачету;
	НДФЛЗачтено		 		= ИсходныеДанные.НДФЛЗачтено;
	
	
	// Получение данных для распределения, ДанныеДляРаспределенияНДФЛ - структура
	// БазаВсеНачисления - таблица значений с базовыми начислениями
	// УжеУдержано - таблица значений, содержит данные об уже выполненных удержаниях по физическому лиц
	// в менеджере временных таблиц будет создана таблица ВТБухучетНачисленийДляБазыНДФЛ для получения базы НДФЛ.
	
	ФизическиеЛицаМассив = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаМассив, ОбщегоНазначения.ВыгрузитьКолонку(РезультатРасчетаНДФЛ, "ФизическоеЛицо", Истина), Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаМассив, ОбщегоНазначения.ВыгрузитьКолонку(НДФЛКЗачету, "ФизическоеЛицо", Истина), Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаМассив, ОбщегоНазначения.ВыгрузитьКолонку(НДФЛЗачтено, "ФизическоеЛицо", Истина), Истина);
	
	УдержанияМассив 	 = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(УдержанияМассив, ОбщегоНазначения.ВыгрузитьКолонку(РезультатРасчетаНДФЛ, "ВидУдержания", Истина), Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(УдержанияМассив, ОбщегоНазначения.ВыгрузитьКолонку(НДФЛКЗачету, "ВидУдержания", Истина), Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(УдержанияМассив, ОбщегоНазначения.ВыгрузитьКолонку(НДФЛЗачтено, "ВидУдержания", Истина), Истина);
		
	ДанныеДляРаспределенияНДФЛ = ДанныеДляРаспределенияНДФЛ(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений,
												ФизическиеЛицаМассив, УдержанияМассив,
												ПериодРегистрации, Организация, ОкончательныйРасчет, ИсключаемыйРегистратор, РегистраторыНДФЛОбновленияБухучета);
												
	УдалитьВТ = Новый Массив;
	УдалитьВТ.Добавить("ВТБухучетНачисленийДляБазыНДФЛ");
	БазаВсеНачисления = ДанныеДляРаспределенияНДФЛ.БазаВсеНачисления;
	БазаВсеНачисления.Индексы.Добавить("ФизическоеЛицо");
	
	СтрокиУжеУдержаноПоФизическимЛицам = СтрокиУжеУдержаноПоФизическимЛицам(ДанныеДляРаспределенияНДФЛ.УжеУдержано);
	
	Если РезультатРасчетаНДФЛ.Количество() > 0 Или НДФЛКЗачету.Количество() > 0 Тогда
		
		ФизическиеЛицаМассив = Новый Массив;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаМассив, ОбщегоНазначения.ВыгрузитьКолонку(РезультатРасчетаНДФЛ, "ФизическоеЛицо", Истина), Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаМассив, ОбщегоНазначения.ВыгрузитьКолонку(НДФЛКЗачету, "ФизическоеЛицо", Истина), Истина);
		
		БазаРасчетаНДФЛ = БазаДляРаспределенияНДФЛ(МенеджерВременныхТаблиц, ФизическиеЛицаМассив,
												ПериодРегистрации, Организация, ОкончательныйРасчет, ИсключаемыйРегистратор);
		БазаРасчетаНДФЛ.Индексы.Добавить("ФизическоеЛицо");
		
		// бухучет НДФЛ
		РаспределитьНДФЛПоБазе(БухучетНДФЛ, РезультатРасчетаНДФЛ, БазаРасчетаНДФЛ, БазаВсеНачисления,
									СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации);
									
		// бухучет НДФЛКЗачету
		РаспределитьНДФЛПоБазе(БухучетКорректировкиВыплаты, НДФЛКЗачету, БазаРасчетаНДФЛ, БазаВсеНачисления,
									СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации, Истина);
		
	КонецЕсли;
	
	Если НДФЛЗачтено.Количество()>0 Тогда
		
		ФизическиеЛицаМассив = ОбщегоНазначения.ВыгрузитьКолонку(НДФЛЗачтено, "ФизическоеЛицо", Истина);
		// КорректировкиВыплаты могут служить базой для распределения, нужно переименовать колонку "КорректировкаВыплаты".
		БазаРасчетаНДФЛ = ВзаиморасчетыССотрудниками.КорректировкиВыплаты(Организация, ПериодРегистрации, ФизическиеЛицаМассив);
		БазаРасчетаНДФЛ.Колонки.СуммаКорректировки.Имя = "Сумма";
		
		РаспределитьНДФЛПоБазе(БухучетКорректировкиВыплаты, НДФЛЗачтено, БазаРасчетаНДФЛ, БазаВсеНачисления,
									СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации, Истина);
		
	КонецЕсли;
	
	// сортировка результатов
	БухучетНДФЛ = УпорядоченнаяТаблицаРаспределениеРезультатовУдержаний(БухучетНДФЛ);
	БухучетКорректировкиВыплаты = УпорядоченнаяТаблицаРаспределениеРезультатовУдержаний(БухучетКорректировкиВыплаты);
	
	// заполним колонку КодСтатьиФинансирования в таблицах
	КодыСтатейФинансирования = КодыСтатейФинансирования();
	ЗаполнитьКодСтатьиФинансирования(БухучетКорректировкиВыплаты, КодыСтатейФинансирования);
	ЗаполнитьКодСтатьиФинансирования(БухучетНДФЛ, КодыСтатейФинансирования);
	
	РезультатыОтраженияВБухучете = Новый Структура("БухучетНДФЛ,БухучетКорректировкиВыплаты");
	РезультатыОтраженияВБухучете.БухучетНДФЛ 				 = БухучетНДФЛ;
	РезультатыОтраженияВБухучете.БухучетКорректировкиВыплаты = БухучетКорректировкиВыплаты;
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
	Возврат РезультатыОтраженияВБухучете;
	
КонецФункции

// Выполняет отражение удержаний и займов в бухучете
//
// Параметры:
// 		ИсходныеДанные - структура, см ОписаниеИсходныхДанныхДляОтраженияУдержанийВБухучете
//				* МенеджерВременныхТаблиц
//				* ИмяВТБухучетНачислений
//				* ОкончательныйРасчет
//				* ПериодРегистрации
//				* Организация
//				* ИсключаемыйРегистратор
//				* ТаблицаУдержаний, описание см НоваяТаблицаРезультатРасчетаУдержаний
//				* ТаблицаЗаймов, описание см НоваяТаблицаРезультатПогашениеЗаймов.
//
// Возвращаемое значение: структура с ключами
//		БухучетУдержаний - Таблица значений, описание см в  НоваяТаблицаРаспределениеРезультатовУдержаний()
//		БухучетЗаймов    - Таблица значений, описание см в  НоваяТаблицаРаспределениеРезультатовУдержаний().
//
Функция ВыполнитьОтражениеУдержанийИЗаймовВБухучете(ИсходныеДанные) Экспорт

	БухучетУдержаний  = НоваяТаблицаРаспределениеРезультатовУдержаний();
	БухучетЗаймов 	  = НоваяТаблицаРаспределениеРезультатовУдержаний();
	
	МенеджерВременныхТаблиц = ИсходныеДанные.МенеджерВременныхТаблиц;
	ИмяВТБухучетНачислений 	= ИсходныеДанные.ИмяВТБухучетНачислений;
	ОкончательныйРасчет		= ИсходныеДанные.ОкончательныйРасчет;
	ПериодРегистрации       = ИсходныеДанные.МесяцНачисления;
	Организация      		= ИсходныеДанные.Организация;
	ИсключаемыйРегистратор  = ИсходныеДанные.ИсключаемыйРегистратор;
	РегистраторыУдержанийОбновленияБухучета = ИсходныеДанные.РегистраторыУдержанийОбновленияБухучета;
	
	ТаблицаУдержаний = ИсходныеДанные.ТаблицаУдержаний;
	ТаблицаЗаймов	 = ИсходныеДанные.ТаблицаЗаймов;
	
	// Получение данных учета для распределения
	// БазовыеНачисления - таблица значений с базовыми начислениями
	// УжеУдержано - таблица значений, содержит данные об уже выполненных удержаниях по физическому лицу.
	
	ФизическиеЛицаМассив = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаМассив, ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаЗаймов, "ФизическоеЛицо", Истина), Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаМассив, ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаУдержаний, "ФизическоеЛицо", Истина), Истина);
	
	УдержанияМассив 	 = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(УдержанияМассив, ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаУдержаний, "ВидУдержания", Истина), Истина);
	
	ДанныеДляУчетаУдержаний = ДанныеДляРаспределенияУдержаний(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений,
								ФизическиеЛицаМассив, УдержанияМассив, ПериодРегистрации, Организация,
								ОкончательныйРасчет, ИсключаемыйРегистратор, РегистраторыУдержанийОбновленияБухучета);
	
	БазовыеНачисления = ДанныеДляУчетаУдержаний.БазовыеНачисления;
	БазовыеНачисления.Индексы.Добавить("ФизическоеЛицо");
	
	СтрокиУжеУдержаноПоФизическимЛицам = СтрокиУжеУдержаноПоФизическимЛицам(ДанныеДляУчетаУдержаний.УжеУдержано);
	
	// ТаблицаЗаймов
	РаспределитьУдержанияПоБазе(БухучетЗаймов, ТаблицаЗаймов, БазовыеНачисления, Новый Соответствие, Организация, ПериодРегистрации);
	
	// ТаблицаУдержаний
	ВыполнитьРаспределениеУдержаний(БухучетУдержаний, ИсходныеДанные, БазовыеНачисления, СтрокиУжеУдержаноПоФизическимЛицам);
	
	// сортировка результатов
	БухучетУдержаний = УпорядоченнаяТаблицаРаспределениеРезультатовУдержаний(БухучетУдержаний);
	БухучетЗаймов    = УпорядоченнаяТаблицаРаспределениеРезультатовУдержаний(БухучетЗаймов);
	
	// заполним колонку КодСтатьиФинансирования в таблицах
	КодыСтатейФинансирования = КодыСтатейФинансирования();
	ЗаполнитьКодСтатьиФинансирования(БухучетУдержаний, КодыСтатейФинансирования);
	ЗаполнитьКодСтатьиФинансирования(БухучетЗаймов, КодыСтатейФинансирования);
	
	РезультатыОтраженияВБухучете = Новый Структура("БухучетУдержаний,БухучетЗаймов");
	РезультатыОтраженияВБухучете.БухучетУдержаний  = БухучетУдержаний;
	РезультатыОтраженияВБухучете.БухучетЗаймов 	   = БухучетЗаймов;
	
	Возврат РезультатыОтраженияВБухучете;

КонецФункции

// Создает временную таблицу с именем ИмяВТ помещая в нее содержимое таблицы значений
//	Параметры
//		МенеджерВременныхТаблиц - менеджер временных таблиц
//		БухучетНачислений - таблица значений, описание см НоваяТаблицаБухучетНачислений()
//		ИмяВТ - строка, имя создаваемой временной таблицы.
//
Процедура СоздатьВТБухучетНачисленийПоТаблицеБухучетНачислений(МенеджерВременныхТаблиц, БухучетНачислений, ИмяВТ) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если БухучетНачислений.Количество() = 0 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеУчетаЗатрат,
		|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
		|	0 КАК Сумма,
		|	ЛОЖЬ КАК ОблагаетсяЕНВД,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ПериодДействия,
		|	ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка) КАК Начисление,
		|	ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) КАК Территория
		|ПОМЕСТИТЬ ВТБухучетНачисленийВыходнаяТаблица";
		
	Иначе
		
		Запрос.УстановитьПараметр("БухучетНачислений", БухучетНачислений);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	БухучетНачислений.Организация КАК Организация,
		|	БухучетНачислений.Сотрудник КАК Сотрудник,
		|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачислений.Подразделение КАК Подразделение,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетНачислений.Сумма КАК Сумма,
		|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
		|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
		|	БухучетНачислений.ПериодДействия КАК ПериодДействия,
		|	БухучетНачислений.Начисление КАК Начисление,
		|	БухучетНачислений.Территория КАК Территория
		|ПОМЕСТИТЬ ВТБухучетНачисленийВыходнаяТаблица
		|ИЗ
		|	&БухучетНачислений КАК БухучетНачислений";
		
	КонецЕсли;

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийВыходнаяТаблица", ИмяВТ);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТБухучетВсехНачисленийДляБухучетаУдержанийНДФЛ(МенеджерВременныхТаблиц, ПараметрыБухучета) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Сумма,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.Территория ЕСТЬ НЕ NULL 
	|				И БухучетНачислений.Территория <> НЕОПРЕДЕЛЕНО
	|				И БухучетНачислений.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
	|			ТОГДА БухучетНачислений.Территория
	|		ИНАЧЕ БухучетНачислений.Подразделение
	|	КОНЕЦ КАК Территория
	|ПОМЕСТИТЬ ВТБухучетНачисленийВыходнаяТаблица
	|ИЗ
	|	(ВЫБРАТЬ
	|		БухучетНачислений.Сотрудник КАК Сотрудник,
	|		БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|		БухучетНачислений.Подразделение КАК Подразделение,
	|		БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|		БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|		БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|		БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|		БухучетНачислений.Сумма КАК Сумма,
	|		БухучетНачислений.Начисление КАК Начисление,
	|		БухучетНачислений.Территория КАК Территория
	|	ИЗ
	|		ВТБухучетНачисленийВходнаяТаблица КАК БухучетНачислений
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БухучетНачислений.Сотрудник,
	|		БухучетНачислений.ФизическоеЛицо,
	|		БухучетНачислений.Подразделение,
	|		БухучетНачислений.ПодразделениеУчетаЗатрат,
	|		БухучетНачислений.ДатаНачала,
	|		БухучетНачислений.СтатьяФинансирования,
	|		БухучетНачислений.СтатьяРасходов,
	|		БухучетНачислений.Сумма,
	|		БухучетНачислений.Начисление,
	|		БухучетНачислений.Территория
	|	ИЗ
	|		ВТБухучетНачисленийПоДоговорамВходнаяТаблица КАК БухучетНачислений) КАК БухучетНачислений";
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийВходнаяТаблица", ПараметрыБухучета.ИмяВТБухучетНачислений);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийПоДоговорамВходнаяТаблица", ПараметрыБухучета.ИмяВТБухучетНачисленийПоДоговорам);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийВыходнаяТаблица", ПараметрыБухучета.ИмяВТБухучетВсехНачислений);
	Запрос.Выполнить();
	
КонецПроцедуры


#КонецОбласти

// Формирует сторно записи отменяющие движения исправленного документа по регистрам подсистемы.
//
// Параметры:
//  Движения				 - КоллекцияДвижений, Структура	 - Коллекция движений в которую будут добавлены сторно записи.
//  ИсправленныйДокумент	 - ДокументСсылка				 - Документ, записи которого необходимо сторнировать.
//  Записывать				 - Булево						 - Если Истина, то наборы будут записаны сразу, если Ложь, то наборам будет установлен признак Записывать = Истина.
//
Процедура СторнироватьДвиженияДокумента(Движения, ИсправленныйДокумент, Записывать = Ложь) Экспорт
	
	ТолькоИзолироватьНаборы = Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	
	ИмяУчета = "ОтражениеЗарплатыВБухучете";
	МетаданныеРегистров = МетаданныеРегистровПодсистемы();
	
	ДвиженияВСтруктуре = ТипЗнч(Движения) = Тип("Структура");
	Набор = Неопределено;
	
	// Сторнирование универсальными алгоритмами.
	
	Для Каждого МетаданныеРегистра Из МетаданныеРегистров Цикл
		
		Если ДвиженияВСтруктуре Тогда 
			Движения.Свойство(МетаданныеРегистра.Имя, Набор);
		Иначе 
			Набор = Движения.Найти(МетаданныеРегистра.Имя);
		КонецЕсли;
		
		Если Набор = Неопределено Или Не ИсправлениеДокументовЗарплатаКадры.ИзолироватьУчетом(Набор, ИмяУчета) Или ТолькоИзолироватьНаборы Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЭтоРегистрНакопления(МетаданныеРегистра) Тогда
			ИсправлениеДокументовЗарплатаКадры.СторнироватьДвиженияВРегистреНакопления(Набор, ИсправленныйДокумент, МетаданныеРегистра, Записывать);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВидыОперацийПоЗарплатеБезСпособаОтражения() Экспорт

	РасходыБезСпособаОтражения = Новый Массив;
	РасходыБезСпособаОтражения.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС);
	РасходыБезСпособаОтражения.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	РасходыБезСпособаОтражения.Добавить(Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты);
	РасходыБезСпособаОтражения.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПособиеНаПогребение);
	
	Возврат РасходыБезСпособаОтражения;

КонецФункции

Функция ДоступноЧтениеБухучетаЗарплатыТерриторийВыполненияРабот() Экспорт
	
	Возврат ПравоДоступа("Чтение", Метаданные.РегистрыСведений.БухучетЗарплатыТерриторийВыполненияРабот);
	
КонецФункции

Функция ДоступноИзменениеБухучетаЗарплатыТерриторийВыполненияРабот() Экспорт
	
	Возврат ПравоДоступа("Изменение", Метаданные.РегистрыСведений.БухучетЗарплатыТерриторийВыполненияРабот);
	
КонецФункции

Функция ДоступноИзменениеБухучетаЗарплатыПодразделений() Экспорт
	
	Возврат ПравоДоступа("Изменение", Метаданные.РегистрыСведений.БухучетЗарплатыПодразделений);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область  СоздатьВТБухучетНачислений

Процедура СоздатьВТНастройкиНачислений(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	ВЫБОР
	|		КОГДА Начисления.ВидОтпуска.СпособРасчетаОтпуска В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ВКалендарныхДнях), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ВКалендарныхИлиРабочихДняхВЗависимостиОтТрудовогоДоговора))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаНачислений.ОплатаОтпускаПоКалендарнымДням)
	|		КОГДА Начисления.ВидОтпуска.СпособРасчетаОтпуска = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ВРабочихДнях)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаНачислений.ОплатаОтпускаПоШестидневке)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаНачислений.ПустаяСсылка)
	|	КОНЕЦ КАК СпособРасчетаПоСреднемуЗаработку,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|				И Начисления.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоФактическимНачислениям)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПустаяСсылка)
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|				И Начисления.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазеСреднегоЗаработка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПустаяСсылка)
	|		ИНАЧЕ Начисления.СтратегияОтраженияВУчете
	|	КОНЕЦ КАК СтратегияОтраженияВУчете,
	|	ВЫБОР
	|		КОГДА Начисления.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаДнейУходаЗаДетьмиИнвалидами)
	|			ТОГДА ИСТИНА
	|		КОГДА Начисления.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеОплатаДнейУходаЗаДетьмиИнвалидами)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОплатаДнейУходаЗаДетьмиИнвалидами,
	|	ВЫБОР
	|		КОГДА Начисления.ВидОперацииПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюРаботодатель)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРасходыПоСтрахованиюРаботодатель,
	|	ВЫБОР
	|		КОГДА Начисления.ВидОперацииПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюБюджет)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРасходыПоСтрахованиюБюджет,
	|	ВЫБОР
	|		КОГДА Начисления.ВидОперацииПоЗарплате В (&РасходыПоСтрахованию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРасходыПоСтрахованию,
	|	ВЫБОР
	|		КОГДА Начисления.ВидОперацииПоЗарплате В (&РасходыФСС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРасходыФСС,
	|	Начисления.ОчередностьОтраженияВУчете КАК ОчередностьОтраженияВУчете,
	|	Начисления.ИспользуетСдельныйЗаработок КАК ИспользуетСдельныйЗаработок,
	|	Начисления.ИспользуетСреднийЗаработокОбщий КАК ИспользуетСреднийЗаработокОбщий
	|ПОМЕСТИТЬ ВТНастройкиНачислений
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления";  
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура ДополнитьВТСтрокиКУдалению(Запрос, ИмяТаблицы)

	Если НЕ ЗарплатаКадры.ВТСуществует(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиКУдалению") Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТСтрокиКУдалению
		|ИЗ
		|	#Таблица КАК Таблица";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВТСтрокиКУдалению.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТСтрокиКУдалениюВременная
		|ИЗ
		|	ВТСтрокиКУдалению КАК ВТСтрокиКУдалению
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСтрокиКУдалению
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСтрокиКУдалениюВременная.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТСтрокиКУдалению
		|ИЗ
		|	ВТСтрокиКУдалениюВременная КАК ВТСтрокиКУдалениюВременная
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.ИдентификаторСтроки
		|ИЗ
		|	#Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСтрокиКУдалениюВременная";
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#Таблица", ИмяТаблицы);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТБухучетЕдиновременныеПособия(Запрос, ИмяВТНачисленияИсходная)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	Начисления.Сумма КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НастройкиБухучетаСотрудников.ОтношениеКЕНВД ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		КОГДА НастройкиБухучетаСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|				И &ПроцентЕНВД = 100
	|			ТОГДА ИСТИНА
	|		КОГДА НастройкиБухучетаСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетЕдиновременныеПособия
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|ГДЕ
	|	Начисления.Начисление В (ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеНаПогребение), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеНаПогребениеСотруднику))";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТБухучетКомпенсацийЗаЗадержкуЗарплаты(Запрос, ИмяВТНачисленияИсходная)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	Начисления.Сумма КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЛОЖЬ КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетКомпенсацийЗаЗадержкуЗарплаты
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|ГДЕ
	|	Начисления.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты)";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТНастройкиБухучетаСотрудников(Запрос, ИспользоватьОбособленныеТерритории, ИспользоватьСтатьиФинансирования, РаботаВБюджетномУчреждении, ИмяВТНачисленияИсходная)

	ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, ИмяВТНачисленияИсходная, "Сотрудник,ДатаНачала");
	СоздатьВТСведенияОБухучетеНачислений(Запрос.МенеджерВременныхТаблиц, ИспользоватьСтатьиФинансирования, РаботаВБюджетномУчреждении);
	 
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|		КОГДА БухучетНачислений.Начисление ЕСТЬ NULL
	|			ТОГДА БухучетСотрудников.СпособОтраженияЗарплатыВБухучете
	|		КОГДА БухучетНачислений.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|			ТОГДА БухучетСотрудников.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ БухучетНачислений.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА БухучетНачислений.Начисление ЕСТЬ NULL
	|			ТОГДА БухучетСотрудников.СтатьяФинансирования
	|		КОГДА БухучетНачислений.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетСотрудников.СтатьяФинансирования
	|		ИНАЧЕ БухучетНачислений.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|			ТОГДА &Статья213
	|		КОГДА БухучетНачислений.Начисление ЕСТЬ NULL
	|			ТОГДА БухучетСотрудников.СтатьяРасходов
	|		КОГДА БухучетНачислений.СтатьяРасходов = ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетСотрудников.СтатьяРасходов
	|		ИНАЧЕ БухучетНачислений.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА &ЕстьЕНВД
	|			ТОГДА ВЫБОР
	|					КОГДА БухучетНачислений.Начисление ЕСТЬ NULL
	|						ТОГДА БухучетСотрудников.ОтношениеКЕНВД
	|					КОГДА БухучетНачислений.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|						ТОГДА БухучетСотрудников.ОтношениеКЕНВД
	|					ИНАЧЕ БухучетНачислений.ОтношениеКЕНВД
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	БухучетСотрудников.ЕстьБухучетОрганизации КАК ЕстьБухучетОрганизации,
	|	БухучетСотрудников.ЕстьБухучетПодразделения КАК ЕстьБухучетПодразделения,
	|	БухучетСотрудников.ЕстьБухучетТерритории КАК ЕстьБухучетТерритории,
	|	ВЫБОР
	|		КОГДА БухучетСотрудников.ЕстьБухучетСотрудника
	|			ТОГДА ИСТИНА
	|		КОГДА БухучетСотрудников.ЕстьБухучетТерритории
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьБухучетСотрудникаТерритории
	|ПОМЕСТИТЬ ВТНастройкиБухучетаСотрудников
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК БухучетСотрудников
	|		ПО Начисления.Сотрудник = БухучетСотрудников.Сотрудник
	|			И Начисления.Подразделение = БухучетСотрудников.Подразделение
	|			И Начисления.ТерриторияВыполненияРаботВОрганизации = БухучетСотрудников.ТерриторияВыполненияРаботВОрганизации
	|			И Начисления.ДатаНачала = БухучетСотрудников.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК БухучетНачислений
	|		ПО Начисления.Начисление = БухучетНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление";
	Если НЕ ИспользоватьОбособленныеТерритории Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Начисления.ТерриторияВыполненияРаботВОрганизации = БухучетСотрудников.ТерриторияВыполненияРаботВОрганизации", "");
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Запрос.Выполнить();
	
	Запрос.Текст =
	"УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеНачислений";
	Запрос.Выполнить();	

КонецПроцедуры

Процедура СоздатьВТБухучетОсновногоЗаработка(Запрос, ИспользоватьОбособленныеТерритории, ИмяВТНачисленияИсходная)

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	РаспределениеОсновногоЗаработка.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|		ИНАЧЕ РаспределениеОсновногоЗаработка.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|			ТОГДА &Статья213
	|		ИНАЧЕ &Статья211
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НЕ &ЕстьЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ РаспределениеОсновногоЗаработка.ОблагаетсяЕНВД
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	РаспределениеОсновногоЗаработка.ДоляРаспределения КАК ДоляРаспределения
	|ПОМЕСТИТЬ ВТСтрокиСРаспределением
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО Начисления.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетРаспределениеОсновногоЗаработка КАК РаспределениеОсновногоЗаработка
	|		ПО Начисления.Сотрудник = РаспределениеОсновногоЗаработка.Сотрудник
	|			И Начисления.Организация = РаспределениеОсновногоЗаработка.Организация
	|			И Начисления.ПериодРегистрации = РаспределениеОсновногоЗаработка.ПериодРегистрации
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиСРаспределением.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТСтрокиОтражения
	|ИЗ
	|	ВТСтрокиСРаспределением КАК СтрокиСРаспределением
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиСРаспределением.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СтрокиСРаспределением.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СтрокиСРаспределением.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	СтрокиСРаспределением.СтатьяРасходов КАК СтатьяРасходов,
	|	СтрокиСРаспределением.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтрокиСРаспределением.ДоляРаспределения КАК ДоляРаспределения
	|ИЗ
	|	ВТСтрокиСРаспределением КАК СтрокиСРаспределением
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	Начисления.Сумма КАК Сумма,
	|	НастройкиБухучетаСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|			ТОГДА &Статья213
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НастройкиБухучетаСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|				ИЛИ НастройкиБухучетаСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтрокиОтражения КАК СтрокиОтражения
	|		ПО Начисления.ИдентификаторСтроки = СтрокиОтражения.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|			И Начисления.ТерриторияВыполненияРаботВОрганизации = НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации";
	Если НЕ ИспользоватьОбособленныеТерритории Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Начисления.ТерриторияВыполненияРаботВОрганизации = НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации", "");
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Результат = Запрос.ВыполнитьПакет();
	Распределение = Результат[2].Выгрузить();
	Начисления = Результат[3].Выгрузить();
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТСтрокиСРаспределением
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиОтражения";
	Запрос.Выполнить();	
	
	ТаблицаБухучетНачислений = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
		
	Если Распределение.Количество() > 0 Тогда
		
		Распределение.Индексы.Добавить("ИдентификаторСтроки");
		
		Отбор = Новый Структура("ИдентификаторСтроки");
		Для каждого СтрокаНачисления Из Начисления Цикл
			
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаНачисления);
			СтрокиОтражения = Распределение.НайтиСтроки(Отбор);
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"ДоляРаспределения");
			Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
			
			Если Результаты = Неопределено Тогда
				СтрокаТаблицы = ТаблицаБухучетНачислений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				Продолжить;
			КонецЕсли;
			
			Индекс = 0;
			Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
				
				СтрокаТаблицы = ТаблицаБухучетНачислений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				СтрокаТаблицы.Сумма = Результаты[Индекс];
				СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
				СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = СтрокаОтражения.СпособОтраженияЗарплатыВБухучете;
				СтрокаТаблицы.СтатьяРасходов = СтрокаОтражения.СтатьяРасходов;
				СтрокаТаблицы.ОблагаетсяЕНВД = СтрокаОтражения.ОблагаетсяЕНВД;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаБухучетОсновногоЗаработка", ТаблицаБухучетНачислений);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачисления.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|	БухучетНачисления.Организация КАК Организация,
	|	БухучетНачисления.Сотрудник КАК Сотрудник,
	|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачисления.Подразделение КАК Подразделение,
	|	БухучетНачисления.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.Начисление КАК Начисление,
	|	БухучетНачисления.ВидОперации КАК ВидОперации,
	|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачисления.Сумма КАК Сумма,
	|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетОсновногоЗаработка
	|ИЗ
	|	&ТаблицаБухучетОсновногоЗаработка КАК БухучетНачисления";
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТБухучетСдельногоЗаработка(Запрос, ИмяВТНачисленияИсходная)

	ПоказательСдельногоЗаработка = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.СдельныйЗаработок");
	Запрос.УстановитьПараметр("ПоказательСдельногоЗаработка", ПоказательСдельногоЗаработка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	НастройкиБухучетаСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НастройкиБухучетаСотрудников.СтатьяРасходов КАК СтатьяРасходов,
	|	НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НастройкиБухучетаСотрудников.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	Начисления.Сумма КАК Сумма
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|			И (НастройкиНачислений.ИспользуетСдельныйЗаработок)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СУММА(ЗначенияПоказателей.Значение) КАК Коэффициент,
	|	ЗначенияПоказателей.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ЗначенияПоказателей.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ЗначенияПоказателей.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	ЗначенияПоказателей.Подразделение КАК ПодразделениеУчетаЗатрат
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК СписокНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО СписокНачислений.Начисление = НастройкиНачислений.Начисление
	|			И (НастройкиНачислений.ИспользуетСдельныйЗаработок)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗначенияОперативныхПоказателейРасчетаЗарплатыСотрудников КАК ЗначенияПоказателей
	|		ПО СписокНачислений.Сотрудник = ЗначенияПоказателей.Сотрудник
	|			И (ЗначенияПоказателей.Показатель = &ПоказательСдельногоЗаработка)
	|			И (ЗначенияПоказателей.Период >= СписокНачислений.ДатаНачала)
	|			И (ЗначенияПоказателей.Период <= СписокНачислений.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНачислений.ИдентификаторСтроки,
	|	ЗначенияПоказателей.СтатьяФинансирования,
	|	ЗначенияПоказателей.СпособОтраженияЗарплатыВБухучете,
	|	ЗначенияПоказателей.ОтношениеКЕНВД,
	|	ЗначенияПоказателей.Подразделение";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаБухучетСдельногоЗаработка = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	
	Если Не РезультатЗапроса[0].Пустой() Тогда
		
		ТаблицаКоэффициентов = РезультатЗапроса[1].Выгрузить();
		ТаблицаКоэффициентов.Индексы.Добавить("ИдентификаторСтроки");
		Отбор = Новый Структура("ИдентификаторСтроки");
		
		ВыборкаНачисления = РезультатЗапроса[0].Выбрать();
		Пока ВыборкаНачисления.Следующий() Цикл
			
			Отбор.ИдентификаторСтроки = ВыборкаНачисления.ИдентификаторСтроки;
			
			ЗаполнитьЗначенияСвойств(Отбор, ВыборкаНачисления);
			СтрокиОтражения = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			Если СтрокиОтражения.Количество() = 0 Тогда
				// пропускаем эту строку, т.к. бухучет сдельного заработка не задан
				Продолжить;
			КонецЕсли;
			
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"Коэффициент");
			Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(ВыборкаНачисления.Сумма, Коэффициенты);
			
			Если Результаты = Неопределено Тогда
				
				СтрокаТаблицы = ТаблицаБухучетСдельногоЗаработка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаНачисления);
				
			Иначе
				
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
					
					СтрокаТаблицы = ТаблицаБухучетСдельногоЗаработка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаНачисления);
					СтрокаТаблицы.Сумма = Результаты[Индекс];
					СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
					СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = СтрокаОтражения.СпособОтраженияЗарплатыВБухучете;
					СтрокаТаблицы.ПодразделениеУчетаЗатрат = СтрокаОтражения.ПодразделениеУчетаЗатрат;
					СтрокаТаблицы.ОблагаетсяЕНВД = ?(СтрокаОтражения.ОтношениеКЕНВД = Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД, Истина, Ложь);
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаБухучетСдельногоЗаработка", ТаблицаБухучетСдельногоЗаработка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачислений.Организация КАК Организация,
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ВидОперации КАК ВидОперации,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Сумма,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетСдельногоЗаработка
	|ИЗ
	|	&ТаблицаБухучетСдельногоЗаработка КАК БухучетНачислений";
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТНачисленияПоДокументамИПлановыеДляБухучета(Запрос, ИмяВТНачисленияИсходная)

	Запрос.Текст =
	"ВЫБРАТЬ
	|	БухучетПервичныхДокументов.ДокументОснование КАК ДокументОснование,
	|	БухучетПервичныхДокументов.НачислениеУдержание КАК Начисление,
	|	БухучетПервичныхДокументов.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетПервичныхДокументов.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетПервичныхДокументов.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетПервичныхДокументов.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТБухучетПервичногоДокументаПараметр
	|ИЗ
	|	&БухучетПервичногоДокумента КАК БухучетПервичныхДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Начисление КАК Начисление,
	|	БухучетЗарплатыПервичныхДокументов.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплатыПервичныхДокументов.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплатыПервичныхДокументов.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетЗарплатыПервичныхДокументов.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТНастройкиБухучетаПервичныхДокументов
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПервичныхДокументов КАК БухучетЗарплатыПервичныхДокументов
	|		ПО Начисления.Начисление = БухучетЗарплатыПервичныхДокументов.НачислениеУдержание
	|			И Начисления.ДокументОснование = БухучетЗарплатыПервичныхДокументов.ДокументОснование
	|			И (БухучетЗарплатыПервичныхДокументов.ДокументОснование <> &ИсключаемыйРегистратор)
	|			И (БухучетЗарплатыПервичныхДокументов.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				ИЛИ &ИспользоватьСтатьиФинансирования
	|					И БухучетЗарплатыПервичныхДокументов.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ИЛИ &РаботаВБюджетномУчреждении
	|					И БухучетЗарплатыПервичныхДокументов.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|				ИЛИ &ЕстьЕНВД
	|					И БухучетЗарплатыПервичныхДокументов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.Начисление,
	|	БухучетПервичногоДокумента.СпособОтраженияЗарплатыВБухучете,
	|	БухучетПервичногоДокумента.СтатьяФинансирования,
	|	БухучетПервичногоДокумента.СтатьяРасходов,
	|	БухучетПервичногоДокумента.ОтношениеКЕНВД
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетПервичногоДокументаПараметр КАК БухучетПервичногоДокумента
	|		ПО Начисления.Начисление = БухучетПервичногоДокумента.Начисление
	|			И Начисления.ДокументОснование = БухучетПервичногоДокумента.ДокументОснование
	|			И (БухучетПервичногоДокумента.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				ИЛИ &ИспользоватьСтатьиФинансирования
	|					И БухучетПервичногоДокумента.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ИЛИ &РаботаВБюджетномУчреждении
	|					И БухучетПервичногоДокумента.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|				ИЛИ &ЕстьЕНВД
	|					И БухучетПервичногоДокумента.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Организация КАК Организация,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(БухучетПлановыхНачислений.Период) КАК Период
	|ПОМЕСТИТЬ ВТНастройкиДатыПоследнихДвижений
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхНачислений КАК БухучетПлановыхНачислений
	|		ПО Начисления.Сотрудник = БухучетПлановыхНачислений.Сотрудник
	|			И Начисления.Организация = БухучетПлановыхНачислений.Организация
	|			И Начисления.Начисление = БухучетПлановыхНачислений.Начисление
	|			И Начисления.ДатаНачала >= БухучетПлановыхНачислений.Период
	|			И Начисления.ДокументОснование = БухучетПлановыхНачислений.ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.ДатаНачала,
	|	Начисления.Организация,
	|	Начисления.Начисление,
	|	Начисления.Сотрудник,
	|	Начисления.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыПоследнихДвижений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ДатыПоследнихДвижений.Начисление КАК Начисление,
	|	БухучетПлановыхНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетПлановыхНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетПлановыхНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетПлановыхНачислений.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТНастройкиБухучетаПлановыхНачислений
	|ИЗ
	|	ВТНастройкиДатыПоследнихДвижений КАК ДатыПоследнихДвижений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхНачислений КАК БухучетПлановыхНачислений
	|		ПО ДатыПоследнихДвижений.Начисление = БухучетПлановыхНачислений.Начисление
	|			И ДатыПоследнихДвижений.Сотрудник = БухучетПлановыхНачислений.Сотрудник
	|			И ДатыПоследнихДвижений.Организация = БухучетПлановыхНачислений.Организация
	|			И ДатыПоследнихДвижений.Период = БухучетПлановыхНачислений.Период
	|			И ДатыПоследнихДвижений.ДокументОснование = БухучетПлановыхНачислений.ДокументОснование
	|			И (БухучетПлановыхНачислений.Используется)
	|			И (БухучетПлановыхНачислений.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ИЛИ БухучетПлановыхНачислений.ДействуетДо >= ДатыПоследнихДвижений.ДатаНачала)
	|			И (БухучетПлановыхНачислений.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				ИЛИ &ИспользоватьСтатьиФинансирования
	|					И БухучетПлановыхНачислений.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ИЛИ &РаботаВБюджетномУчреждении
	|					И БухучетПлановыхНачислений.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|				ИЛИ &ЕстьЕНВД
	|					И БухучетПлановыхНачислений.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НастройкиБухучетаПервичныхДокументов.Начисление КАК Начисление,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА НастройкиБухучетаПервичныхДокументов.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПервичныхДокументов.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(НастройкиБухучетаПлановыхНачислений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СтатьяФинансирования
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА НастройкиБухучетаПервичныхДокументов.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПервичныхДокументов.СтатьяРасходов
	|		КОГДА ЕСТЬNULL(НастройкиБухучетаПлановыхНачислений.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СтатьяРасходов
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НастройкиБухучетаПервичныхДокументов.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПервичныхДокументов.СпособОтраженияЗарплатыВБухучете
	|		КОГДА ЕСТЬNULL(НастройкиБухучетаПлановыхНачислений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА НЕ &ЕстьЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|		КОГДА НастройкиБухучетаПервичныхДокументов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПервичныхДокументов.ОтношениеКЕНВД
	|		КОГДА ЕСТЬNULL(НастройкиБухучетаПлановыхНачислений.ОтношениеКЕНВД, ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.ОтношениеКЕНВД
	|		ИНАЧЕ НастройкиБухучетаСотрудников.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ) КАК ЭтоРасходыФСС
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоДокументамИПлановыеВременная
	|ИЗ
	|	ВТНастройкиБухучетаПервичныхДокументов КАК НастройкиБухучетаПервичныхДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаПлановыхНачислений КАК НастройкиБухучетаПлановыхНачислений
	|		ПО НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки = НастройкиБухучетаПлановыхНачислений.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО НастройкиБухучетаПервичныхДокументов.Начисление = НастройкиНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастройкиБухучетаПлановыхНачислений.ИдентификаторСтроки,
	|	НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации,
	|	НастройкиБухучетаПлановыхНачислений.Начисление,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА НастройкиБухучетаПлановыхНачислений.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СтатьяФинансирования
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяФинансирования
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА НастройкиБухучетаПлановыхНачислений.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СтатьяРасходов
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НастройкиБухучетаПлановыхНачислений.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ЕстьЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|		КОГДА НастройкиБухучетаПлановыхНачислений.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.ОтношениеКЕНВД
	|		ИНАЧЕ НастройкиБухучетаСотрудников.ОтношениеКЕНВД
	|	КОНЕЦ,
	|	ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|ИЗ
	|	ВТНастройкиБухучетаПлановыхНачислений КАК НастройкиБухучетаПлановыхНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаПервичныхДокументов КАК НастройкиБухучетаПервичныхДокументов
	|		ПО НастройкиБухучетаПлановыхНачислений.ИдентификаторСтроки = НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО НастройкиБухучетаПлановыхНачислений.Начисление = НастройкиНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО НастройкиБухучетаПлановыхНачислений.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|ГДЕ
	|	НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.ЭтоРасходыФСС
	|			ТОГДА &Статья213
	|		ИНАЧЕ БухучетНачислений.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.ЭтоРасходыФСС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|		ИНАЧЕ БухучетНачислений.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТНачисленияПоДокументамИПлановыеДляБухучета
	|ИЗ
	|	ВТБухучетНачисленийПоДокументамИПлановыеВременная КАК БухучетНачислений";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Запрос.Выполнить();
	
	Запрос.Текст =
	"УНИЧТОЖИТЬ ВТНастройкиБухучетаПлановыхНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНастройкиДатыПоследнихДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетПервичногоДокументаПараметр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийПоДокументамИПлановыеВременная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНастройкиБухучетаПервичныхДокументов";
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийПоБазеСреднегоЗаработка(Запрос, КоэффициентыСреднегоЗаработкаФССДокумента, КоэффициентыСреднегоЗаработкаДокумента, СтрокиКоэффициентыСреднегоЗаработка, ИмяВТНачисленияИсходная)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	НастройкиБухучетаСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НастройкиБухучетаСотрудников.СтатьяРасходов КАК СтатьяРасходов,
	|	НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НастройкиБухучетаСотрудников.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	НастройкиНачислений.ЭтоРасходыПоСтрахованиюРаботодатель КАК ЭтоРасходыПоСтрахованиюРаботодатель,
	|	НастройкиНачислений.СпособРасчетаПоСреднемуЗаработку КАК СпособРасчетаПоСреднемуЗаработку,
	|	НастройкиНачислений.ЭтоРасходыФСС КАК ЭтоРасходыФСС,
	|	НастройкиНачислений.ИспользуетСреднийЗаработокОбщий КАК ИспользуетСреднийЗаработокОбщий,
	|	Начисления.Сумма КАК Сумма
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО Начисления.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL
	|	И НастройкиНачислений.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазеСреднегоЗаработка)";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаБухучетПоСреднемуЗаработку = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		НачисленияПоБазе = РезультатЗапроса.Выгрузить();
		
		Для каждого СтрокаНачисления Из НачисленияПоБазе Цикл
			
			СтрокиОтражения = СтрокиКоэффициентыСреднегоЗаработка[СтрокаНачисления.ИдентификаторСтроки];
			Если СтрокиОтражения = Неопределено Тогда
				
				// получим коэффициенты для всего документа
				Если СтрокаНачисления.ИспользуетСреднийЗаработокОбщий Тогда   
					СтрокиОтражения = КоэффициентыСреднегоЗаработкаДокумента[СтрокаНачисления.СпособРасчетаПоСреднемуЗаработку];
				Иначе
					СтрокиОтражения = КоэффициентыСреднегоЗаработкаФССДокумента;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СтрокиОтражения = Неопределено Тогда
				Результаты = Неопределено;
			Иначе
				Коэффициенты = СтрокиОтражения.ВыгрузитьКолонку("Коэффициент");
				Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);	
			КонецЕсли;
			
			Если Результаты = Неопределено Тогда
				СтрокаТаблицы = ТаблицаБухучетПоСреднемуЗаработку.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				Продолжить;
			КонецЕсли;
			
			Индекс = 0;
			Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
				
				СтрокаТаблицы = ТаблицаБухучетПоСреднемуЗаработку.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				СтрокаТаблицы.Сумма = Результаты[Индекс];
				СтрокаТаблицы.ОблагаетсяЕНВД = СтрокаОтражения.ОблагаетсяЕНВД;
				
				НоваяСтатьяФинансирования = ?(ЗначениеЗаполнено(СтрокаОтражения.СтатьяФинансирования),СтрокаОтражения.СтатьяФинансирования,СтрокаТаблицы.СтатьяФинансирования);
				НоваяСтатьяРасходов       = ?(ЗначениеЗаполнено(СтрокаОтражения.СтатьяРасходов),СтрокаОтражения.СтатьяРасходов,СтрокаТаблицы.СтатьяРасходов);
				НовыйСпособОтражения      = ?(ЗначениеЗаполнено(СтрокаОтражения.СпособОтраженияЗарплатыВБухучете),СтрокаОтражения.СпособОтраженияЗарплатыВБухучете,СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете);
				
				СтрокаТаблицы.СтатьяФинансирования = НоваяСтатьяФинансирования;
				Если Не СтрокаНачисления.ЭтоРасходыФСС Тогда
					СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = НовыйСпособОтражения;
					Если Не СтрокаНачисления.ЭтоРасходыПоСтрахованиюРаботодатель Тогда
						СтрокаТаблицы.СтатьяРасходов = НоваяСтатьяРасходов;
					КонецЕсли;
				КонецЕсли;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаБухучетПоСреднемуЗаработку", ТаблицаБухучетПоСреднемуЗаработку);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачислений.Организация КАК Организация,
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ВидОперации КАК ВидОперации,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Сумма,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоБазеСреднегоЗаработка
	|ИЗ
	|	&ТаблицаБухучетПоСреднемуЗаработку КАК БухучетНачислений";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийПоФактическимНачислениям(Запрос, ИмяВТНачисленияИсходная)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	НастройкиБухучетаСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НастройкиБухучетаСотрудников.СтатьяРасходов КАК СтатьяРасходов,
	|	НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НастройкиБухучетаСотрудников.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	НастройкиНачислений.ЭтоРасходыПоСтрахованиюРаботодатель КАК ЭтоРасходыПоСтрахованиюРаботодатель,
	|	Начисления.Сумма КАК Сумма
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО Начисления.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL
	|	И НастройкиНачислений.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоФактическимНачислениям)";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаБухучетПоФактическимНачислениям = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ПериодРегистрации = Запрос.Параметры.ПериодРегистрации;
		Если Месяц(ПериодРегистрации) > 1 Тогда
			// для первого месяца нет смысла получать фактические начисления
			НачПериода = НачалоГода(ПериодРегистрации);
			КонПериода = КонецМесяца(ДобавитьМесяц(ПериодРегистрации, -1));
			
			НачисленияПоБазе = РезультатЗапроса.Выгрузить();
			ФизическиеЛицаДляОтбора = НачисленияПоБазе.ВыгрузитьКолонку("ФизическоеЛицо");
			Запрос.УстановитьПараметр("ФизическиеЛицаДляОтбора",ФизическиеЛицаДляОтбора);
			Запрос.УстановитьПараметр("НачПериода",НачПериода);
			Запрос.УстановитьПараметр("КонПериода",КонПериода);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
			|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|	СУММА(БухучетНачисления.Сумма) КАК Сумма
			|ИЗ
			|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
			|ГДЕ
			|	БухучетНачисления.Период МЕЖДУ &НачПериода И &КонПериода
			|	И БухучетНачисления.Организация = &Организация
			|	И БухучетНачисления.ФизическоеЛицо В(&ФизическиеЛицаДляОтбора)
			|	И БухучетНачисления.НачислениеУдержание.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
			|	И БухучетНачисления.Регистратор <> &ИсключаемыйРегистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	БухучетНачисления.СтатьяФинансирования,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.ОблагаетсяЕНВД,
			|	БухучетНачисления.ФизическоеЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
			|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|	СУММА(БухучетНачисления.Сумма) КАК Сумма
			|ИЗ
			|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
			|ГДЕ
			|	БухучетНачисления.Период МЕЖДУ &НачПериода И &КонПериода
			|	И БухучетНачисления.Организация = &Организация
			|	И БухучетНачисления.ФизическоеЛицо В(&ФизическиеЛицаДляОтбора)
			|	И БухучетНачисления.НачислениеУдержание.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
			|	И БухучетНачисления.Регистратор <> &ИсключаемыйРегистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	БухучетНачисления.СтатьяФинансирования,
			|	БухучетНачисления.ОблагаетсяЕНВД,
			|	БухучетНачисления.ФизическоеЛицо";
			
			РезультатЗапроса = Запрос.ВыполнитьПакет();
			
			БазаДляРасходовРаботодателя = РезультатЗапроса[0].Выгрузить();
			БазаДляРасходовФСС = РезультатЗапроса[1].Выгрузить();
			
			БазаДляРасходовРаботодателя.Индексы.Добавить("ФизическоеЛицо");
			БазаДляРасходовФСС.Индексы.Добавить("ФизическоеЛицо");
			Отбор = Новый Структура("ФизическоеЛицо");
			
			Для каждого СтрокаНачисления Из НачисленияПоБазе Цикл
				
				Если СтрокаНачисления.ЭтоРасходыПоСтрахованиюРаботодатель Тогда
					БазаРаспределения = БазаДляРасходовРаботодателя;
				Иначе	
					БазаРаспределения = БазаДляРасходовФСС;
				КонецЕсли;	
				
				ЗаполнитьЗначенияСвойств(Отбор, СтрокаНачисления);
				СтрокиОтражения = БазаРаспределения.НайтиСтроки(Отбор);
				Если СтрокиОтражения.Количество() = 0 Тогда
					СтрокаТаблицы = ТаблицаБухучетПоФактическимНачислениям.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
					Продолжить;	
				КонецЕсли;	
				Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"Сумма");
				Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
				
				Если Результаты = Неопределено Тогда
					СтрокаТаблицы = ТаблицаБухучетПоФактическимНачислениям.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
					Продолжить;
				КонецЕсли;
				
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
					
					СтрокаТаблицы = ТаблицаБухучетПоФактическимНачислениям.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
					СтрокаТаблицы.Сумма = Результаты[Индекс];
					Если ЗначениеЗаполнено(СтрокаОтражения.СтатьяФинансирования) Тогда
						СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
					КонецЕсли;
					СтрокаТаблицы.ОблагаетсяЕНВД = СтрокаОтражения.ОблагаетсяЕНВД;
					
					Если СтрокаНачисления.ЭтоРасходыПоСтрахованиюРаботодатель Тогда
						Если ЗначениеЗаполнено(СтрокаОтражения.СпособОтраженияЗарплатыВБухучете) Тогда
							СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = СтрокаОтражения.СпособОтраженияЗарплатыВБухучете;
						КонецЕсли;
					КонецЕсли;	
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
				
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаБухучетПоФактическимНачислениям", ТаблицаБухучетПоФактическимНачислениям);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачислений.Организация КАК Организация,
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ВидОперации КАК ВидОперации,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Сумма,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоФактическимНачислениям
	|ИЗ
	|	&ТаблицаБухучетПоФактическимНачислениям КАК БухучетНачислений";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТНачисленияКакЗаданоВидуРасчетаДляБухучета(Запрос, ИмяВТНачисленияИсходная)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СписокНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	СписокНачислений.Начисление КАК Начисление,
	|	НастройкиБухучетаСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НастройкиБухучетаСотрудников.СтатьяРасходов КАК СтатьяРасходов,
	|	НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НастройкиБухучетаСотрудников.ОтношениеКЕНВД КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТНачисленияКакЗаданоВидуРасчетаДляБухучета
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО СписокНачислений.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО СписокНачислений.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО СписокНачислений.Начисление = НастройкиНачислений.Начисление
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL
	|	И НастройкиНачислений.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТНачисленияПоБазе(Запрос, УчитыватьСторноЗаписи, ИмяВТНачисленияИсходная)
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.ПериодРегистрации КАК ПериодРегистрации,
	|	СписокНачислений.Организация КАК Организация,
	|	СписокНачислений.Сотрудник КАК Сотрудник,
	|	СписокНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокНачислений.Подразделение КАК Подразделение,
	|	СписокНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	СписокНачислений.Начисление КАК Начисление,
	|	СписокНачислений.ВидОперации КАК ВидОперации,
	|	СписокНачислений.ДатаНачала КАК ДатаНачала,
	|	СписокНачислений.ДатаОкончания КАК ДатаОкончания,
	|	СписокНачислений.Сумма КАК Сумма,
	|	СписокНачислений.ДокументОснование КАК ДокументОснование,
	|	СписокНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СписокНачислений.Сторно КАК Сторно,
	|	СписокНачислений.ФиксСторно КАК ФиксСторно,
	|	Начисления.ОчередностьОтраженияВУчете КАК ОчередностьОтраженияВУчете
	|ПОМЕСТИТЬ ВТНачисленияПоБазе
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК СписокНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК Начисления
	|		ПО (Начисления.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам))
	|			И СписокНачислений.Начисление = Начисления.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО СписокНачислений.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Если Не УчитыватьСторноЗаписи Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СписокНачислений.Сторно КАК Сторно,", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СписокНачислений.ФиксСторно КАК ФиксСторно,", "");
	КонецЕсли;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийБезБазы(Запрос, ИспользоватьОбособленныеТерритории, ИмяВТНачисленияИсходная)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НастройкиБухучетаСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|			ТОГДА &Статья213
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.ЭтоРасходыФСС, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА НЕ &ЕстьЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|		ИНАЧЕ НастройкиБухучетаСотрудников.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО Начисления.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|			И Начисления.ТерриторияВыполненияРаботВОрганизации = НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.ОтношениеКЕНВД
	|ИЗ
	|	ВТНачисленияПоДокументамИПлановыеДляБухучета КАК БухучетНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.ОтношениеКЕНВД
	|ИЗ
	|	ВТНачисленияКакЗаданоВидуРасчетаДляБухучета КАК БухучетНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.Подразделение КАК ПодразделениеУчетаЗатрат,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|				И &РассчитыватьДолюЕНВД
	|			ТОГДА ВЫБОР
	|					КОГДА ОтношениеКЕНВДЗатратНаЗарплату.Ссылка = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|						ТОГДА ВЫРАЗИТЬ(Начисления.Сумма * &ПроцентЕНВД / 100 КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ Начисления.Сумма - (ВЫРАЗИТЬ(Начисления.Сумма * &ПроцентЕНВД / 100 КАК ЧИСЛО(15, 2)))
	|				КОНЕЦ
	|		ИНАЧЕ Начисления.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА БухучетНачислений.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|					ТОГДА ВЫБОР
	|							КОГДА &РассчитыватьДолюЕНВД
	|								ТОГДА ОтношениеКЕНВДЗатратНаЗарплату.Ссылка
	|							КОГДА &ПроцентЕНВД = 0
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|							ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|						КОНЕЦ
	|				ИНАЧЕ БухучетНачислений.ОтношениеКЕНВД
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленийБезБазы
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияДляРаспределения КАК Начисления
	|		ПО БухучетНачислений.ИдентификаторСтроки = Начисления.ИдентификаторСтроки
	|			И БухучетНачислений.ТерриторияВыполненияРаботВОрганизации = Начисления.ТерриторияВыполненияРаботВОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ОтношениеКЕНВДЗатратНаЗарплату КАК ОтношениеКЕНВДЗатратНаЗарплату
	|		ПО (ОтношениеКЕНВДЗатратНаЗарплату.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД), ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)))
	|			И (БухучетНачислений.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом))
	|			И (&РассчитыватьДолюЕНВД)";
	
	Если НЕ ИспользоватьОбособленныеТерритории Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Начисления.ТерриторияВыполненияРаботВОрганизации = НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И БухучетНачислений.ТерриторияВыполненияРаботВОрганизации = Начисления.ТерриторияВыполненияРаботВОрганизации", "");
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТБухучетНачисленийВременная";
	Запрос.Выполнить(); 	
	
КонецПроцедуры

Процедура СоздатьВТБухучетНачисленияПоБазе(Запрос, ИспользоватьОбособленныеТерритории, УчитыватьСторноЗаписи, МенеджерКадровогоУчета, МенеджерДанныхУчетаВремени)
	
	УдалитьВТ = Новый Массив;
	
	ПоляГруппировки = "ИдентификаторСтроки,Организация,Сотрудник,ФизическоеЛицо,Подразделение,ТерриторияВыполненияРаботВОрганизации,
	|Начисление,ВидОперации,ДатаНачала,ДатаОкончания,ДокументОснование,
	|СпособОтраженияЗарплатыВБухучете,СтатьяФинансирования,СтатьяРасходов,ОблагаетсяЕНВД,ПодразделениеУчетаЗатрат";
	ПоляСуммирования = "Сумма";
	ТаблицаБухучетНачисленияПоБазеСвод = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам().СкопироватьКолонки(ПоляГруппировки+","+ПоляСуммирования);
	
	ОтборНулевыхСтрок = Новый Структура("Сумма", 0);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТНачисленияПоБазе.ОчередностьОтраженияВУчете КАК ОчередностьОтраженияВУчете
	|ИЗ
	|	ВТНачисленияПоБазе КАК ВТНачисленияПоБазе
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОчередностьОтраженияВУчете";
	
	РезультатОчередностьРаспределенияПоБазе = Запрос.Выполнить();
	
	Если Не РезультатОчередностьРаспределенияПоБазе.Пустой() Тогда
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачислений.Организация КАК Организация,
		|	БухучетНачислений.Сотрудник КАК Сотрудник,
		|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачислений.Подразделение КАК Подразделение,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|	БухучетНачислений.Начисление КАК Начисление,
		|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
		|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
		|	СУММА(БухучетНачислений.Сумма) КАК Сумма,
		|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
		|ИЗ
		|	(ВЫБРАТЬ
		|		БухучетНачисления.Организация КАК Организация,
		|		БухучетНачисления.Сотрудник КАК Сотрудник,
		|		БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|		БухучетНачисления.Подразделение КАК Подразделение,
		|		БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|		БухучетНачисления.Начисление КАК Начисление,
		|		БухучетНачисления.ДатаНачала КАК ДатаНачала,
		|		БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
		|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|		БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
		|		БухучетНачисления.Сумма КАК Сумма,
		|		БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
		|	ИЗ
		|		ВТБухучетНачисленийБезРаспределяемыхПоБазе КАК БухучетНачисления
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БухучетНачисления.Организация,
		|		БухучетНачисления.Сотрудник,
		|		БухучетНачисления.ФизическоеЛицо,
		|		БухучетНачисления.Подразделение,
		|		ВЫБОР
		|			КОГДА БухучетНачисления.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				ТОГДА БухучетНачисления.Подразделение
		|			ИНАЧЕ БухучетНачисления.ПодразделениеУчетаЗатрат
		|		КОНЕЦ,
		|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
		|		БухучетНачисления.НачислениеУдержание,
		|		БухучетНачисления.ДатаНачала,
		|		БухучетНачисления.ДатаОкончания,
		|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
		|		БухучетНачисления.СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов,
		|		БухучетНачисления.Сумма,
		|		БухучетНачисления.ОблагаетсяЕНВД
		|	ИЗ
		|		РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
		|	ГДЕ
		|		БухучетНачисления.Организация = &Организация
		|		И БухучетНачисления.Период = &ПериодРегистрации
		|		И БухучетНачисления.Регистратор <> &ИсключаемыйРегистратор
		|		И БухучетНачисления.Сотрудник В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					НачисленияПоБазе.Сотрудник
		|				ИЗ
		|					ВТНачисленияПоБазе КАК НачисленияПоБазе)
		|		И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты В (ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено), ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Льготы))
		|		И БухучетНачисления.Сумма <> 0
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БухучетНачисления.Организация,
		|		БухучетНачисления.Сотрудник,
		|		БухучетНачисления.ФизическоеЛицо,
		|		БухучетНачисления.Подразделение,
		|		БухучетНачисления.Подразделение,
		|		БухучетНачисления.Территория,
		|		БухучетНачисления.Начисление,
		|		БухучетНачисления.ДатаНачала,
		|		БухучетНачисления.ДатаОкончания,
		|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
		|		БухучетНачисления.СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов,
		|		БухучетНачисления.Сумма,
		|		БухучетНачисления.ОблагаетсяЕНВД
		|	ИЗ
		|		ВТБухучетНачисленийИзФормы КАК БухучетНачисления
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БухучетНачисленийФормы.Организация,
		|		БухучетНачисленийФормы.Сотрудник,
		|		БухучетНачисленийФормы.ФизическоеЛицо,
		|		БухучетНачисленийФормы.Подразделение,
		|		БухучетНачисленийФормы.Подразделение,
		|		БухучетНачисленийФормы.Территория,
		|		БухучетНачисленийФормы.Начисление,
		|		БухучетНачисленийФормы.ДатаНачала,
		|		БухучетНачисленийФормы.ДатаОкончания,
		|		БухучетНачисленийФормы.СпособОтраженияЗарплатыВБухучете,
		|		БухучетНачисленийФормы.СтатьяФинансирования,
		|		БухучетНачисленийФормы.СтатьяРасходов,
		|		БухучетНачисленийФормы.Сумма,
		|		БухучетНачисленийФормы.ОблагаетсяЕНВД
		|	ИЗ
		|		ВТБухучетНачисленийСторно КАК БухучетНачисленийФормы) КАК БухучетНачислений
		|
		|СГРУППИРОВАТЬ ПО
		|	БухучетНачислений.Организация,
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.ДатаНачала,
		|	БухучетНачислений.ДатаОкончания,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов,
		|	БухучетНачислений.ОблагаетсяЕНВД,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат";
		Запрос.Выполнить();	
		
		ЗарплатаКадры.СоздатьПустуюВТ(Запрос.МенеджерВременныхТаблиц, "РегистрРасчета.Начисления");
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Начисления.Регистратор КАК Регистратор,
		|	Начисления.НомерСтроки КАК НомерСтроки,
		|	НачисленияПоБазе.ИдентификаторСтроки,
		|	НачисленияПоБазе.ОчередностьОтраженияВУчете,
		|	НачисленияПоБазе.Сотрудник,
		|	НачисленияПоБазе.ФизическоеЛицо,
		|	НачисленияПоБазе.Начисление КАК ВидРасчета,
		|	НачисленияПоБазе.ДатаНачала,
		|	НачисленияПоБазе.ДатаОкончания
		|ПОМЕСТИТЬ ВТНачисленияПоБазеИзРегистраРасчета
		|ИЗ
		|	ВТНачисленияПоБазе КАК НачисленияПоБазе
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО НачисленияПоБазе.ПериодРегистрации = Начисления.ПериодРегистрации
		|			И НачисленияПоБазе.Организация = Начисления.Организация
		|			И НачисленияПоБазе.Сторно = Начисления.Сторно
		|			И НачисленияПоБазе.ФиксСторно = Начисления.ФиксСторно
		|			И НачисленияПоБазе.Сотрудник = Начисления.Сотрудник
		|			И НачисленияПоБазе.Начисление = Начисления.ВидРасчета
		|			И (НачисленияПоБазе.Сумма <> 0)
		|			И НачисленияПоБазе.ДатаНачала = Начисления.ПериодДействияНачало
		|			И (НачисленияПоБазе.ДатаОкончания = НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ))
		|			И (Начисления.Регистратор <> &ИсключаемыйРегистратор)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Начисления.Регистратор,
		|	Начисления.НомерСтроки,
		|	НачисленияПоБазе.ИдентификаторСтроки,
		|	НачисленияПоБазе.ОчередностьОтраженияВУчете,
		|	НачисленияПоБазе.Сотрудник,
		|	НачисленияПоБазе.ФизическоеЛицо,
		|	НачисленияПоБазе.Начисление,
		|	НачисленияПоБазе.ДатаНачала,
		|	НачисленияПоБазе.ДатаОкончания
		|ИЗ
		|	ВТНачисленияПоБазе КАК НачисленияПоБазе
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистрРасчета_Начисления КАК Начисления
		|		ПО НачисленияПоБазе.ПериодРегистрации = Начисления.ПериодРегистрации
		|			И НачисленияПоБазе.Организация = Начисления.Организация
		|			И НачисленияПоБазе.Сторно = Начисления.Сторно
		|			И НачисленияПоБазе.ФиксСторно = Начисления.ФиксСторно
		|			И НачисленияПоБазе.Сотрудник = Начисления.Сотрудник
		|			И НачисленияПоБазе.Начисление = Начисления.ВидРасчета
		|			И (НачисленияПоБазе.Сумма <> 0)
		|			И НачисленияПоБазе.ДатаНачала = Начисления.ПериодДействияНачало
		|			И (НачисленияПоБазе.ДатаОкончания = НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтборНачислений.Регистратор,
		|	ОтборНачислений.НомерСтроки
		|ПОМЕСТИТЬ ВТОтборНачислений
		|ИЗ
		|	ВТНачисленияПоБазеИзРегистраРасчета КАК ОтборНачислений";
		Если Не УчитыватьСторноЗаписи Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НачисленияПоБазе.Сторно = Начисления.Сторно", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НачисленияПоБазе.ФиксСторно = Начисления.ФиксСторно", "");
		КонецЕсли;
		Запрос.Выполнить();	
	
		РасчетЗарплатыРасширенный.СоздатьВТРасчетнаяБазаНачисленийПоВременнойТаблицеКаскадно(Запрос.МенеджерВременныхТаблиц, Запрос.Параметры.ИсключаемыйРегистратор, МенеджерКадровогоУчета, МенеджерДанныхУчетаВремени);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетнаяБаза.Регистратор,
		|	РасчетнаяБаза.НомерСтроки,
		|	РасчетнаяБаза.ВидРасчетаРазрез,
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, ДЕНЬ) КАК ДатаНачала,
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ) КАК ДатаОкончания,
		|	СУММА(РасчетнаяБаза.РезультатБаза) КАК РезультатБаза,
		|	Начисления.ПериодРегистрации
		|ПОМЕСТИТЬ ВТРасчетнаяБазаСПериодом
		|ИЗ
		|	ВТРасчетнаяБаза КАК РасчетнаяБаза
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО РасчетнаяБаза.РегистраторРазрез = Начисления.Регистратор
		|			И РасчетнаяБаза.НомерСтрокиРазрез = Начисления.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетнаяБаза.Регистратор,
		|	РасчетнаяБаза.НомерСтроки,
		|	РасчетнаяБаза.ВидРасчетаРазрез,
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, ДЕНЬ),
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ),
		|	Начисления.ПериодРегистрации
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетнаяБаза.РезультатБаза) <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетнаяБаза.Регистратор,
		|	РасчетнаяБаза.НомерСтроки,
		|	РасчетнаяБаза.ВидРасчетаРазрез,
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, ДЕНЬ),
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ),
		|	СУММА(РасчетнаяБаза.РезультатБаза),
		|	Начисления.ПериодРегистрации
		|ИЗ
		|	ВТРасчетнаяБаза КАК РасчетнаяБаза
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистрРасчета_Начисления КАК Начисления
		|		ПО РасчетнаяБаза.РегистраторРазрез = Начисления.Регистратор
		|			И РасчетнаяБаза.НомерСтрокиРазрез = Начисления.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетнаяБаза.Регистратор,
		|	РасчетнаяБаза.НомерСтроки,
		|	РасчетнаяБаза.ВидРасчетаРазрез,
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, ДЕНЬ),
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ),
		|	Начисления.ПериодРегистрации
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетнаяБаза.РезультатБаза) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияПоБазе.ИдентификаторСтроки,
		|	НачисленияПоБазе.ОчередностьОтраженияВУчете,
		|	База.РезультатБаза КАК РезультатБаза,
		|	НачисленияПоБазе.Сотрудник КАК СотрудникБаза,
		|	НачисленияПоБазе.ФизическоеЛицо КАК ФизическоеЛицоБаза,
		|	База.ВидРасчетаРазрез КАК НачислениеБаза,
		|	База.ДатаНачала КАК ДатаНачалаБаза,
		|	База.ДатаОкончания КАК ДатаОкончанияБаза,
		|	База.ПериодРегистрации
		|ПОМЕСТИТЬ ВТБазовыеНачисления
		|ИЗ
		|	ВТНачисленияПоБазеИзРегистраРасчета КАК НачисленияПоБазе
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРасчетнаяБазаСПериодом КАК База
		|		ПО НачисленияПоБазе.Регистратор = База.Регистратор
		|			И НачисленияПоБазе.НомерСтроки = База.НомерСтроки";
		Запрос.Выполнить();
		
		УдалитьВТ.Добавить("ВТНачисленияПоБазеИзРегистраРасчета");
		УдалитьВТ.Добавить("ВТРасчетнаяБаза");
		УдалитьВТ.Добавить("ВТРасчетнаяБазаСПериодом");
		УдалитьВТ.Добавить("ВТОтборНачислений");
		
		ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
		
		Выборка = РезультатОчередностьРаспределенияПоБазе.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОчередностьОтраженияВУчете = Выборка.ОчередностьОтраженияВУчете;
			Запрос.УстановитьПараметр("ОчередностьОтраженияВУчете", ОчередностьОтраженияВУчете);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	БазовыеНачисленияБУ.ПериодРегистрации КАК ПериодРегистрации,
			|	БазовыеНачисленияБУ.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|	БазовыеНачисленияБУ.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	БазовыеНачисленияБУ.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	БазовыеНачисленияБУ.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БазовыеНачисленияБУ.СтатьяРасходов КАК СтатьяРасходов,
			|	БазовыеНачисленияБУ.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|	БазовыеНачисленияБУ.НачислениеБаза КАК НачислениеБаза,
			|	БазовыеНачисленияБУ.РезультатБаза КАК РезультатБаза,
			|	БазовыеНачисленияБУ.ДатаНачала КАК ДатаНачала,
			|	БазовыеНачисленияБУ.ДатаОкончания КАК ДатаОкончания,
			|	СУММА(БазовыеНачисленияБУ.СуммаБУ) КАК СуммаБУ
			|ПОМЕСТИТЬ ВТБазовыеНачисленияБУ
			|ИЗ
			|	(ВЫБРАТЬ
			|		БазаНачислений.ПериодРегистрации КАК ПериодРегистрации,
			|		БазаНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|		БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|		БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|		БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|		БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
			|		БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
			|		БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|		БазаНачислений.НачислениеБаза КАК НачислениеБаза,
			|		БазаНачислений.РезультатБаза КАК РезультатБаза,
			|		БухучетНачислений.ДатаНачала КАК ДатаНачала,
			|		БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
			|		ВЫРАЗИТЬ(БухучетНачислений.Сумма КАК ЧИСЛО(13, 2)) КАК СуммаБУ
			|	ИЗ
			|		ВТБазовыеНачисления КАК БазаНачислений
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачисленийВременная КАК БухучетНачислений
			|			ПО БазаНачислений.СотрудникБаза = БухучетНачислений.Сотрудник
			|				И БазаНачислений.ФизическоеЛицоБаза = БухучетНачислений.ФизическоеЛицо
			|				И БазаНачислений.НачислениеБаза = БухучетНачислений.Начисление
			|				И БазаНачислений.ДатаНачалаБаза = БухучетНачислений.ДатаНачала
			|				И БазаНачислений.ДатаОкончанияБаза = БухучетНачислений.ДатаОкончания
			|				И (БазаНачислений.ПериодРегистрации = &ПериодРегистрации)
			|	ГДЕ
			|		БазаНачислений.ОчередностьОтраженияВУчете = &ОчередностьОтраженияВУчете
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		БазаНачислений.ПериодРегистрации,
			|		БазаНачислений.ИдентификаторСтроки,
			|		ВЫБОР
			|			КОГДА БухучетНачислений.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|				ТОГДА БухучетНачислений.Подразделение
			|			ИНАЧЕ БухучетНачислений.ПодразделениеУчетаЗатрат
			|		КОНЕЦ,
			|		БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
			|		БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
			|		БухучетНачислений.СтатьяФинансирования,
			|		БухучетНачислений.СтатьяРасходов,
			|		БухучетНачислений.ОблагаетсяЕНВД,
			|		БазаНачислений.НачислениеБаза,
			|		БазаНачислений.РезультатБаза,
			|		БухучетНачислений.ДатаНачала,
			|		БухучетНачислений.ДатаОкончания,
			|		ВЫРАЗИТЬ(БухучетНачислений.Сумма КАК ЧИСЛО(13, 2))
			|	ИЗ
			|		ВТБазовыеНачисления КАК БазаНачислений
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачислений
			|			ПО БазаНачислений.СотрудникБаза = БухучетНачислений.Сотрудник
			|				И БазаНачислений.ФизическоеЛицоБаза = БухучетНачислений.ФизическоеЛицо
			|				И БазаНачислений.НачислениеБаза = БухучетНачислений.НачислениеУдержание
			|				И БазаНачислений.ДатаНачалаБаза = БухучетНачислений.ДатаНачала
			|				И БазаНачислений.ДатаОкончанияБаза = БухучетНачислений.ДатаОкончания
			|				И (БазаНачислений.ПериодРегистрации <> &ПериодРегистрации)
			|				И БазаНачислений.ПериодРегистрации = БухучетНачислений.Период
			|				И (БухучетНачислений.Регистратор <> &ИсключаемыйРегистратор)
			|	ГДЕ
			|		БазаНачислений.ОчередностьОтраженияВУчете = &ОчередностьОтраженияВУчете) КАК БазовыеНачисленияБУ
			|
			|СГРУППИРОВАТЬ ПО
			|	БазовыеНачисленияБУ.ПериодРегистрации,
			|	БазовыеНачисленияБУ.ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.ТерриторияВыполненияРаботВОрганизации,
			|	БазовыеНачисленияБУ.СпособОтраженияЗарплатыВБухучете,
			|	БазовыеНачисленияБУ.СтатьяФинансирования,
			|	БазовыеНачисленияБУ.СтатьяРасходов,
			|	БазовыеНачисленияБУ.ОблагаетсяЕНВД,
			|	БазовыеНачисленияБУ.НачислениеБаза,
			|	БазовыеНачисленияБУ.ДатаНачала,
			|	БазовыеНачисленияБУ.ДатаОкончания,
			|	БазовыеНачисленияБУ.РезультатБаза,
			|	БазовыеНачисленияБУ.ПодразделениеУчетаЗатрат
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БазовыеНачисленияБУ.ПериодРегистрации КАК ПериодРегистрации,
			|	БазовыеНачисленияБУ.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|	БазовыеНачисленияБУ.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	БазовыеНачисленияБУ.НачислениеБаза КАК НачислениеБаза,
			|	БазовыеНачисленияБУ.ДатаНачала КАК ДатаНачала,
			|	БазовыеНачисленияБУ.ДатаОкончания КАК ДатаОкончания,
			|	СУММА(БазовыеНачисленияБУ.СуммаБУ) КАК СуммаБУ
			|ПОМЕСТИТЬ ВТБазовыеНачисленияБУСвод
			|ИЗ
			|	ВТБазовыеНачисленияБУ КАК БазовыеНачисленияБУ
			|
			|СГРУППИРОВАТЬ ПО
			|	БазовыеНачисленияБУ.ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.ТерриторияВыполненияРаботВОрганизации,
			|	БазовыеНачисленияБУ.НачислениеБаза,
			|	БазовыеНачисленияБУ.ДатаНачала,
			|	БазовыеНачисленияБУ.ДатаОкончания,
			|	БазовыеНачисленияБУ.ПериодРегистрации,
			|	БазовыеНачисленияБУ.ПодразделениеУчетаЗатрат
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БазовыеНачисленияБУ.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|	БазовыеНачисленияБУ.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	БазовыеНачисленияБУ.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	БазовыеНачисленияБУ.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БазовыеНачисленияБУ.СтатьяРасходов КАК СтатьяРасходов,
			|	БазовыеНачисленияБУ.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|	СУММА(ВЫБОР
			|			КОГДА ВТБазовыеНачисленияБУСвод.СуммаБУ = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫРАЗИТЬ(БазовыеНачисленияБУ.РезультатБаза * БазовыеНачисленияБУ.СуммаБУ / ВТБазовыеНачисленияБУСвод.СуммаБУ КАК ЧИСЛО(25, 10))
			|		КОНЕЦ) КАК Сумма
			|ПОМЕСТИТЬ ВТБазовыеНачисленияБУКоэффициенты
			|ИЗ
			|	ВТБазовыеНачисленияБУ КАК БазовыеНачисленияБУ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазовыеНачисленияБУСвод КАК ВТБазовыеНачисленияБУСвод
			|		ПО БазовыеНачисленияБУ.ИдентификаторСтроки = ВТБазовыеНачисленияБУСвод.ИдентификаторСтроки
			|			И БазовыеНачисленияБУ.ПериодРегистрации = ВТБазовыеНачисленияБУСвод.ПериодРегистрации
			|			И БазовыеНачисленияБУ.НачислениеБаза = ВТБазовыеНачисленияБУСвод.НачислениеБаза
			|			И БазовыеНачисленияБУ.ТерриторияВыполненияРаботВОрганизации = ВТБазовыеНачисленияБУСвод.ТерриторияВыполненияРаботВОрганизации
			|			И БазовыеНачисленияБУ.ДатаНачала = ВТБазовыеНачисленияБУСвод.ДатаНачала
			|			И БазовыеНачисленияБУ.ДатаОкончания = ВТБазовыеНачисленияБУСвод.ДатаОкончания
			|
			|СГРУППИРОВАТЬ ПО
			|	БазовыеНачисленияБУ.ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.ТерриторияВыполненияРаботВОрганизации,
			|	БазовыеНачисленияБУ.СпособОтраженияЗарплатыВБухучете,
			|	БазовыеНачисленияБУ.СтатьяФинансирования,
			|	БазовыеНачисленияБУ.СтатьяРасходов,
			|	БазовыеНачисленияБУ.ОблагаетсяЕНВД,
			|	БазовыеНачисленияБУ.ПодразделениеУчетаЗатрат
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НачисленияПоБазе.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	НачисленияБУ.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|	НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	НачисленияПоБазе.Сумма КАК Сумма,
			|	НачисленияБУ.СтатьяФинансирования КАК СтатьяФинансирования,
			|	НачисленияБУ.СтатьяРасходов КАК СтатьяРасходов,
			|	НачисленияБУ.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	НачисленияБУ.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|	НачисленияБУ.Сумма КАК СуммаБУ
			|ПОМЕСТИТЬ ВТНачисленияПоБазеБУКоэффициенты
			|ИЗ
			|	ВТНачисленияПоБазе КАК НачисленияПоБазе
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазовыеНачисленияБУКоэффициенты КАК НачисленияБУ
			|		ПО НачисленияПоБазе.ИдентификаторСтроки = НачисленияБУ.ИдентификаторСтроки
			|			И НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации = НачисленияБУ.ТерриторияВыполненияРаботВОрганизации
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НачисленияПоБазе.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	СУММА(НачисленияПоБазе.СуммаБУ) КАК СуммаБУ
			|ПОМЕСТИТЬ ВТНачисленияПоБазеБУКоэффициентыСвод
			|ИЗ
			|	ВТНачисленияПоБазеБУКоэффициенты КАК НачисленияПоБазе
			|
			|СГРУППИРОВАТЬ ПО
			|	НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации,
			|	НачисленияПоБазе.ИдентификаторСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	Начисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	Начисления.СтатьяФинансирования КАК СтатьяФинансирования,
			|	Начисления.СтатьяРасходов КАК СтатьяРасходов,
			|	Начисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	Начисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|	ВЫБОР
			|		КОГДА НачисленияСвод.СуммаБУ = 0
			|			ТОГДА 0
			|		ИНАЧЕ ВЫРАЗИТЬ(Начисления.Сумма * Начисления.СуммаБУ / НачисленияСвод.СуммаБУ КАК ЧИСЛО(25, 10))
			|	КОНЕЦ КАК База
			|ИЗ
			|	ВТНачисленияПоБазеБУКоэффициенты КАК Начисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияПоБазеБУКоэффициентыСвод КАК НачисленияСвод
			|		ПО Начисления.ИдентификаторСтроки = НачисленияСвод.ИдентификаторСтроки
			|			И Начисления.ТерриторияВыполненияРаботВОрганизации = НачисленияСвод.ТерриторияВыполненияРаботВОрганизации
			|ГДЕ
			|	ВЫБОР
			|			КОГДА НачисленияСвод.СуммаБУ = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫРАЗИТЬ(Начисления.Сумма * Начисления.СуммаБУ / НачисленияСвод.СуммаБУ КАК ЧИСЛО(25, 10))
			|		КОНЕЦ <> 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НачисленияПоБазе.ПериодРегистрации КАК ПериодРегистрации,
			|	НачисленияПоБазе.Организация КАК Организация,
			|	НачисленияПоБазе.Сотрудник КАК Сотрудник,
			|	НачисленияПоБазе.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НачисленияПоБазе.Подразделение КАК Подразделение,
			|	НачисленияПоБазе.Начисление КАК Начисление,
			|	НачисленияПоБазе.ВидОперации КАК ВидОперации,
			|	НачисленияПоБазе.ДатаНачала КАК ДатаНачала,
			|	НачисленияПоБазе.ДатаОкончания КАК ДатаОкончания,
			|	НачисленияПоБазе.Сумма КАК Сумма,
			|	НачисленияПоБазе.ДокументОснование КАК ДокументОснование,
			|	НачисленияПоБазе.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	НастройкиБухучетаСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
			|	НастройкиБухучетаСотрудников.СтатьяРасходов КАК СтатьяРасходов,
			|	НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	ВЫБОР
			|		КОГДА НастройкиБухучетаСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
			|				ИЛИ НастройкиБухучетаСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ОблагаетсяЕНВД
			|ИЗ
			|	ВТНачисленияПоБазе КАК НачисленияПоБазе
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
			|		ПО НачисленияПоБазе.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
			|			И НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации = НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации
			|ГДЕ
			|	НачисленияПоБазе.ОчередностьОтраженияВУчете = &ОчередностьОтраженияВУчете";
			
			Если ИспользоватьОбособленныеТерритории Тогда
				СтрокаОписаниеИндексов = "ИдентификаторСтроки,ТерриторияВыполненияРаботВОрганизации";
			 Иначе
				СтрокаОписаниеИндексов = "ИдентификаторСтроки";
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации = НачисленияБУ.ТерриторияВыполненияРаботВОрганизации", "");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Начисления.ТерриторияВыполненияРаботВОрганизации = НачисленияСвод.ТерриторияВыполненияРаботВОрганизации", "");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации = НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации", "");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "И БазовыеНачисленияБУ.ТерриторияВыполненияРаботВОрганизации = ВТБазовыеНачисленияБУСвод.ТерриторияВыполненияРаботВОрганизации", "");
			КонецЕсли;
			
			Пакет = Запрос.ВыполнитьПакет();
			КоличествоРезультатов = Пакет.ВГраница();
			
			ТаблицаКоэффициентов = Пакет[КоличествоРезультатов-1].Выгрузить();
			ТаблицаКоэффициентов.Индексы.Добавить(СтрокаОписаниеИндексов);
			Отбор = Новый Структура(СтрокаОписаниеИндексов);
			
			НачисленияПоБазе = Пакет[КоличествоРезультатов].Выгрузить();
			
			ТаблицаБухучетНачисленияПоБазеОчередности = ТаблицаБухучетНачисленияПоБазеСвод.СкопироватьКолонки();
			
			Для каждого СтрокаНачисления Из НачисленияПоБазе Цикл
				
				ТаблицаБухучетНачисленияПоБазе = ТаблицаБухучетНачисленияПоБазеСвод.СкопироватьКолонки();
				
				ЗаполнитьЗначенияСвойств(Отбор, СтрокаНачисления);
				СтрокиОтражения = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
				Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"База");
				Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
				
				Если Результаты = Неопределено Тогда
					
					СтрокаТаблицы = ТаблицаБухучетНачисленияПоБазе.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
					
				Иначе
					
					Индекс = 0;
					Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
						
						СтрокаТаблицы = ТаблицаБухучетНачисленияПоБазе.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
						СтрокаТаблицы.Сумма = Результаты[Индекс];
						СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
						СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = СтрокаОтражения.СпособОтраженияЗарплатыВБухучете;
						СтрокаТаблицы.СтатьяРасходов = СтрокаОтражения.СтатьяРасходов;
						СтрокаТаблицы.ОблагаетсяЕНВД = СтрокаОтражения.ОблагаетсяЕНВД;
						СтрокаТаблицы.ПодразделениеУчетаЗатрат = СтрокаОтражения.ПодразделениеУчетаЗатрат;
						
						Индекс = Индекс + 1;
						
					КонецЦикла;
					
					ТаблицаБухучетНачисленияПоБазе.Свернуть(ПоляГруппировки, ПоляСуммирования);
					Если ТаблицаБухучетНачисленияПоБазе.Количество() > 1 Тогда
						СтрокиКУдалению = ТаблицаБухучетНачисленияПоБазе.НайтиСтроки(ОтборНулевыхСтрок);
						Для каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
							ТаблицаБухучетНачисленияПоБазе.Удалить(УдаляемаяСтрока);
						КонецЦикла;	
					КонецЕсли;
					
				КонецЕсли;
				
				ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(ТаблицаБухучетНачисленияПоБазе, ТаблицаБухучетНачисленияПоБазеОчередности);
				
			КонецЦикла;
			
			ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(ТаблицаБухучетНачисленияПоБазеОчередности, ТаблицаБухучетНачисленияПоБазеСвод);
			
			Запрос.УстановитьПараметр("ТаблицаБухучетНачисления", ТаблицаБухучетНачисленияПоБазеОчередности);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	БухучетНачисления.Организация КАК Организация,
			|	БухучетНачисления.Сотрудник КАК Сотрудник,
			|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
			|	БухучетНачисления.Подразделение КАК Подразделение,
			|	БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисления.Начисление КАК Начисление,
			|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
			|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
			|	БухучетНачисления.Сумма КАК Сумма,
			|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
			|ПОМЕСТИТЬ ВТБухучетНачисленийВременнаяНовая
			|ИЗ
			|	ВТБухучетНачисленийВременная КАК БухучетНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБухучетНачисленийВременная
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БухучетНачисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	БухучетНачисления.Организация КАК Организация,
			|	БухучетНачисления.Сотрудник КАК Сотрудник,
			|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
			|	БухучетНачисления.Подразделение КАК Подразделение,
			|	БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисления.Начисление КАК Начисление,
			|	БухучетНачисления.ВидОперации КАК ВидОперации,
			|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
			|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
			|	БухучетНачисления.Сумма КАК Сумма,
			|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
			|ПОМЕСТИТЬ ВТБухучетНачисленияПоБазеПоОчередности
			|ИЗ
			|	&ТаблицаБухучетНачисления КАК БухучетНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БухучетНачисленийВременнаяНовая.Организация КАК Организация,
			|	БухучетНачисленийВременнаяНовая.Сотрудник КАК Сотрудник,
			|	БухучетНачисленийВременнаяНовая.ФизическоеЛицо КАК ФизическоеЛицо,
			|	БухучетНачисленийВременнаяНовая.Подразделение КАК Подразделение,
			|	БухучетНачисленийВременнаяНовая.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
			|	БухучетНачисленийВременнаяНовая.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисленийВременнаяНовая.Начисление КАК Начисление,
			|	БухучетНачисленийВременнаяНовая.ДатаНачала КАК ДатаНачала,
			|	БухучетНачисленийВременнаяНовая.ДатаОкончания КАК ДатаОкончания,
			|	БухучетНачисленийВременнаяНовая.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисленийВременнаяНовая.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БухучетНачисленийВременнаяНовая.СтатьяРасходов КАК СтатьяРасходов,
			|	БухучетНачисленийВременнаяНовая.Сумма КАК Сумма,
			|	БухучетНачисленийВременнаяНовая.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
			|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
			|ИЗ
			|	ВТБухучетНачисленийВременнаяНовая КАК БухучетНачисленийВременнаяНовая
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БухучетНачисленияПоБазеПоОчередности.Организация,
			|	БухучетНачисленияПоБазеПоОчередности.Сотрудник,
			|	БухучетНачисленияПоБазеПоОчередности.ФизическоеЛицо,
			|	БухучетНачисленияПоБазеПоОчередности.Подразделение,
			|	БухучетНачисленияПоБазеПоОчередности.ПодразделениеУчетаЗатрат,
			|	БухучетНачисленияПоБазеПоОчередности.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисленияПоБазеПоОчередности.Начисление,
			|	БухучетНачисленияПоБазеПоОчередности.ДатаНачала,
			|	БухучетНачисленияПоБазеПоОчередности.ДатаОкончания,
			|	БухучетНачисленияПоБазеПоОчередности.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисленияПоБазеПоОчередности.СтатьяФинансирования,
			|	БухучетНачисленияПоБазеПоОчередности.СтатьяРасходов,
			|	БухучетНачисленияПоБазеПоОчередности.Сумма,
			|	БухучетНачисленияПоБазеПоОчередности.ОблагаетсяЕНВД
			|ИЗ
			|	ВТБухучетНачисленияПоБазеПоОчередности КАК БухучетНачисленияПоБазеПоОчередности
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленияПоБазеБУКоэффициентыСвод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленияПоБазеБУКоэффициенты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБазовыеНачисленияБУКоэффициенты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБазовыеНачисленияБУСвод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБазовыеНачисленияБУ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБухучетНачисленияПоБазеПоОчередности
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБухучетНачисленийВременнаяНовая";
			
			Запрос.Выполнить();
			
		КонецЦикла;
		
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТБазовыеНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийВременная";
		Запрос.Выполнить();
		
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаБухучетНачисления", ТаблицаБухучетНачисленияПоБазеСвод);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БухучетНачисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачисления.Организация КАК Организация,
	|	БухучетНачисления.Сотрудник КАК Сотрудник,
	|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачисления.Подразделение КАК Подразделение,
	|	БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.Начисление КАК Начисление,
	|	БухучетНачисления.ВидОперации КАК ВидОперации,
	|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачисления.Сумма КАК Сумма,
	|	БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленияПоБазе
	|ИЗ
	|	&ТаблицаБухучетНачисления КАК БухучетНачисления";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению(Запрос, ИмяВТНачисленияИсходная)

	УдалитьВТ = Новый Массив;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации
	|ПОМЕСТИТЬ ВТСтрокиКОбработке
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО Начисления.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|			И (НастройкиБухучетаСотрудников.ЕстьБухучетСотрудникаТерритории)
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL
	|	И НастройкиБухучетаСотрудников.ИдентификаторСтроки ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ БухучетЗарплатыПодразделений.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА МаксимальныеПериоды.ВидОперации В (&РасходыФСС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|		ИНАЧЕ БухучетЗарплатыПодразделений.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА МаксимальныеПериоды.ВидОперации В (&РасходыФСС)
	|			ТОГДА &Статья213
	|		ИНАЧЕ &Статья211
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НЕ &ЕстьЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|		ИНАЧЕ БухучетЗарплатыПодразделений.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	БухучетЗарплатыПодразделений.ДоляРаспределения КАК ДоляРаспределения
	|ПОМЕСТИТЬ ВТСтрокиОтражения
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныеПериоды.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		МаксимальныеПериоды.Подразделение КАК Подразделение,
	|		МаксимальныеПериоды.ВидОперации КАК ВидОперации,
	|		МаксимальныеПериоды.ПериодРегистрации КАК ПериодРегистрации,
	|		МаксимальныеПериоды.Период КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СтрокиКОбработке.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|			СтрокиКОбработке.Подразделение КАК Подразделение,
	|			СтрокиКОбработке.ВидОперации КАК ВидОперации,
	|			СтрокиКОбработке.ПериодРегистрации КАК ПериодРегистрации,
	|			МАКСИМУМ(БухучетЗарплатыПодразделений.Период) КАК Период
	|		ИЗ
	|			ВТСтрокиКОбработке КАК СтрокиКОбработке
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|				ПО СтрокиКОбработке.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|					И СтрокиКОбработке.ПериодРегистрации >= БухучетЗарплатыПодразделений.Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтрокиКОбработке.ИдентификаторСтроки,
	|			СтрокиКОбработке.Подразделение,
	|			СтрокиКОбработке.ВидОперации,
	|			СтрокиКОбработке.ПериодРегистрации) КАК МаксимальныеПериоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|			ПО МаксимальныеПериоды.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|				И МаксимальныеПериоды.Период = БухучетЗарплатыПодразделений.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МаксимальныеПериоды.ИдентификаторСтроки,
	|		МаксимальныеПериоды.Подразделение,
	|		МаксимальныеПериоды.ВидОперации,
	|		МаксимальныеПериоды.ПериодРегистрации,
	|		МаксимальныеПериоды.Период
	|	
	|	ИМЕЮЩИЕ
	|		КОЛИЧЕСТВО(БухучетЗарплатыПодразделений.ИдентификаторСтроки) > 1) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|		ПО МаксимальныеПериоды.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|			И МаксимальныеПериоды.Период = БухучетЗарплатыПодразделений.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиОтражения.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СтрокиОтражения.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СтрокиОтражения.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	СтрокиОтражения.СтатьяРасходов КАК СтатьяРасходов,
	|	СтрокиОтражения.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	СтрокиОтражения.ДоляРаспределения КАК ДоляРаспределения
	|ИЗ
	|	ВТСтрокиОтражения КАК СтрокиОтражения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	Начисления.ДатаОкончания КАК ДатаОкончания,
	|	Начисления.ВидОперации КАК ВидОперации,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	Начисления.Сумма КАК Сумма
	|ИЗ
	|	ВТНачисленияДляРаспределения КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтрокиОтражения КАК СтрокиОтражения
	|		ПО Начисления.ИдентификаторСтроки = СтрокиОтражения.ИдентификаторСтроки";
	
	УдалитьВТ.Добавить("ВТСтрокиКОбработке");
	УдалитьВТ.Добавить("ВТСтрокиОтражения");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРаспределения", ИмяВТНачисленияИсходная);
	Результат = Запрос.ВыполнитьПакет();
	Распределение = Результат[2].Выгрузить();
	Начисления = Результат[3].Выгрузить();
	
	Если Распределение.Количество() = 0 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ПериодРегистрации,
		|	0 КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) КАК ТерриторияВыполненияРаботВОрганизации,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеУчетаЗатрат,
		|	ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка) КАК Начисление,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка) КАК ВидОперации,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	0 КАК Сумма,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
		|	ЛОЖЬ КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению";
		Запрос.Выполнить();
		
	Иначе
		
		ТаблицаБухучетНачислений = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
		
		Распределение.Индексы.Добавить("ИдентификаторСтроки");
		
		Отбор = Новый Структура("ИдентификаторСтроки");
		Для каждого СтрокаНачисления Из Начисления Цикл
			
			Отбор.ИдентификаторСтроки = СтрокаНачисления.ИдентификаторСтроки;
			СтрокиОтражения = Распределение.НайтиСтроки(Отбор);
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"ДоляРаспределения");
			Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
			
			Индекс = 0;
			Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
				
				СтрокаТаблицы = ТаблицаБухучетНачислений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				СтрокаТаблицы.Сумма = ?(Результаты = Неопределено, 0, Результаты[Индекс]);
				СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
				СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = СтрокаОтражения.СпособОтраженияЗарплатыВБухучете;
				СтрокаТаблицы.СтатьяРасходов = СтрокаОтражения.СтатьяРасходов;
				СтрокаТаблицы.ОтношениеКЕНВД = СтрокаОтражения.ОтношениеКЕНВД;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;	
		
		Запрос.УстановитьПараметр("ТаблицаБухучетНачислений", ТаблицаБухучетНачислений);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	БухучетНачисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|	БухучетНачисления.Организация КАК Организация,
		|	БухучетНачисления.Сотрудник КАК Сотрудник,
		|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачисления.Подразделение КАК Подразделение,
		|	БухучетНачисления.Подразделение КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачисления.Начисление КАК Начисление,
		|	БухучетНачисления.ВидОперации КАК ВидОперации,
		|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
		|	БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
		|	БухучетНачисления.ДокументОснование КАК ДокументОснование,
		|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетНачисления.Сумма КАК Сумма,
		|	БухучетНачисления.ОтношениеКЕНВД КАК ОтношениеКЕНВД
		|ПОМЕСТИТЬ ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделениюВременная
		|ИЗ
		|	&ТаблицаБухучетНачислений КАК БухучетНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетОсновногоЗаработка.ПериодРегистрации КАК ПериодРегистрации,
		|	БухучетОсновногоЗаработка.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	БухучетОсновногоЗаработка.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|	БухучетОсновногоЗаработка.Организация КАК Организация,
		|	БухучетОсновногоЗаработка.Сотрудник КАК Сотрудник,
		|	БухучетОсновногоЗаработка.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетОсновногоЗаработка.Подразделение КАК Подразделение,
		|	БухучетОсновногоЗаработка.Подразделение КАК ПодразделениеУчетаЗатрат,
		|	БухучетОсновногоЗаработка.Начисление КАК Начисление,
		|	БухучетОсновногоЗаработка.ВидОперации КАК ВидОперации,
		|	БухучетОсновногоЗаработка.ДатаНачала КАК ДатаНачала,
		|	БухучетОсновногоЗаработка.ДатаОкончания КАК ДатаОкончания,
		|	БухучетОсновногоЗаработка.ДокументОснование КАК ДокументОснование,
		|	БухучетОсновногоЗаработка.Сумма КАК Сумма,
		|	БухучетОсновногоЗаработка.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетОсновногоЗаработка.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетОсновногоЗаработка.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	ВЫБОР
		|		КОГДА БухучетОсновногоЗаработка.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА БухучетОсновногоЗаработка.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению
		|ИЗ
		|	ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделениюВременная КАК БухучетОсновногоЗаработка";
		Запрос.Выполнить();
		
		УдалитьВТ.Добавить("ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделениюВременная");
		
	КонецЕсли;
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

// Выполняет бухучет начислений, кроме договоров ГПХ
//	результаты помещает во временную таблицу с именем ИмяВТБухучетНачислений.
//
Процедура СоздатьВТБухучетНачисленийБезДоговоровГПХ(ИсходныеДанные, ИмяВТБухучетНачислений) Экспорт
	
	Организация                 = ИсходныеДанные.Организация;
	ПериодРегистрации           = ИсходныеДанные.МесяцНачисления;
	МенеджерВременныхТаблиц     = ИсходныеДанные.МенеджерВременныхТаблиц;
	ИмяВТНачисленияИсходная     = ИсходныеДанные.ИмяВТНачисления;
	БухучетПервичногоДокумента  = ИсходныеДанные.БухучетПервичногоДокумента;
	ИсключаемыйРегистратор 		= ИсходныеДанные.ИсключаемыйРегистратор;
	ПроцентЕНВД                 = ИсходныеДанные.ПроцентЕНВД;
	ПлательщикЕНВД              = ИсходныеДанные.ПлательщикЕНВД;
	УчитыватьСторноЗаписи 		= ИсходныеДанные.УчитыватьСторноЗаписи;
	СтрокиКоэффициентыСреднегоЗаработка       = ИсходныеДанные.СтрокиКоэффициентыСреднегоЗаработка;
	КоэффициентыСреднегоЗаработкаДокумента    = ИсходныеДанные.КоэффициентыСреднегоЗаработкаДокумента;
	КоэффициентыСреднегоЗаработкаФССДокумента = ИсходныеДанные.КоэффициентыСреднегоЗаработкаФССДокумента;
	ВидыОперацийРасходыПоСтрахованию          = ИсходныеДанные.ВидыОперацийРасходыПоСтрахованию;
	
	РаботаВБюджетномУчреждении  	   = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	ИспользоватьСтатьиФинансирования   = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	ИспользоватьОбособленныеТерритории = ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеТерритории", Новый Структура("Организация", Организация));
	
	Если ПлательщикЕНВД = Неопределено Тогда
		ПлательщикЕНВД = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Организация, ПериодРегистрации);
		ОтражениеЗарплатыВБухучете.ПроцентЕНВД(Организация, ПериодРегистрации);
	КонецЕсли;
	
	ПроцентЕНВД 		 = ?(ПроцентЕНВД = Неопределено, 0, ПроцентЕНВД);
	РассчитыватьДолюЕНВД = ?(ПроцентЕНВД = 0 Или ПроцентЕНВД = 100, Ложь, Истина);
	СтатьяРасходов213	 = СтатьяРасходов213();
	СтатьяРасходов211	 = СтатьяРасходов211();
	
	ВидыОперацийРасходыФСС = Новый Массив;
	ВидыОперацийРасходыФСС.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС); 
	ВидыОперацийРасходыФСС.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	ВидыОперацийРасходыФСС.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПособиеНаПогребение);
	
	// В массиве будем накапливать имена временных таблиц
	// которые необходимо уничтожить.
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ИспользоватьСтатьиФинансирования);
	Запрос.УстановитьПараметр("РаботаВБюджетномУчреждении", РаботаВБюджетномУчреждении);
	Запрос.УстановитьПараметр("ЕстьЕНВД", ПлательщикЕНВД);
	Запрос.УстановитьПараметр("ПроцентЕНВД", ПроцентЕНВД);
	Запрос.УстановитьПараметр("РассчитыватьДолюЕНВД", РассчитыватьДолюЕНВД);
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
	Запрос.УстановитьПараметр("БухучетПервичногоДокумента", БухучетПервичногоДокумента);
	Запрос.УстановитьПараметр("Статья213", СтатьяРасходов213);
	Запрос.УстановитьПараметр("Статья211", СтатьяРасходов211);
	Запрос.УстановитьПараметр("РасходыПоСтрахованию", ВидыОперацийРасходыПоСтрахованию);
	Запрос.УстановитьПараметр("РасходыФСС", ВидыОперацийРасходыФСС);
	
	// ВТНачислениеВидНачисленияОплатыТрудаДляНУ.
	// Таблица соответствия начисления и вида начисления для НУ.
	Если Не ЗарплатаКадры.ВТСуществует(МенеджерВременныхТаблиц, "ВТНачислениеВидНачисленияОплатыТрудаДляНУ") Тогда
		ОтражениеЗарплатыВБухучете.СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц);
		УдалитьВТ.Добавить("ВТНачислениеВидНачисленияОплатыТрудаДляНУ");	
	КонецЕсли;
	
	Если Не ЗарплатаКадры.ВТСуществует(МенеджерВременныхТаблиц, "ВТБухучетНачисленийИзФормы") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) КАК Территория,
		|	ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка) КАК Начисление,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка) КАК ВидОперации,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
		|	0 КАК Сумма,
		|	ЛОЖЬ КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТБухучетНачисленийИзФормы";
		Запрос.Выполнить();
		УдалитьВТ.Добавить("ВТБухучетНачисленийИзФормы");
		
	КонецЕсли;
	
	Если Не ЗарплатаКадры.ВТСуществует(МенеджерВременныхТаблиц, "ВТБухучетНачисленийСторно") Тогда
		СоздатьПустуюВТБухучетНачисленийСторно(Запрос);
		УдалитьВТ.Добавить("ВТБухучетНачисленийСторно");
	КонецЕсли;
	
	// ВТНастройкиНачислений
	// Таблица с настройками начислений.
	СоздатьВТНастройкиНачислений(Запрос);
	УдалитьВТ.Добавить("ВТНастройкиНачислений");
		
	// ВТНастройкиБухучетаСотрудников
	// настройки бухучета, указанные в начислении, сотруднике, территории, подразделении, организации
	// будет использоваться как настройки бухучета по умолчанию.
	СоздатьВТНастройкиБухучетаСотрудников(Запрос, ИспользоватьОбособленныеТерритории, ИспользоватьСтатьиФинансирования, РаботаВБюджетномУчреждении, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТНастройкиБухучетаСотрудников");
	
	// Создаем временные таблицы с бухучетом
	// если имя таблицы начинется с "ВТБухучет...", это таблица с окончательными сведениями
	// если имя таблицы оканчивается на "...ДляБухучета", это таблица для дальнейшей обработки в части доли ЕНВД.
	
	// Во временной таблице ВТСтрокиКУдалению накапливаем строки
	// по которым уже выполна обработка.
	
	// ВТБухучетЕдиновременныеПособия
	СоздатьВТБухучетЕдиновременныеПособия(Запрос, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТБухучетЕдиновременныеПособия");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТБухучетЕдиновременныеПособия");
	
	// ВТБухучетКомпенсацийЗаЗадержкуЗарплаты
	СоздатьВТБухучетКомпенсацийЗаЗадержкуЗарплаты(Запрос, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТБухучетКомпенсацийЗаЗадержкуЗарплаты");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТБухучетЕдиновременныеПособия");
	
	// Таблицы создаем в порядке убывния приоритета места указания настройки бухучета
	// сведения о бухучете, зарегистрированные в "сдельном наряде"
	// Первичный документ, регистрирующий начисление
	// Настройка, указанная для планового начисления сотрудника
	// Настройка, указанная в виде расчета: по базе среднего заработка, по базовым начиселниям, по фактическим начислениям
	// или как указано виду расчета Начисления, для которых задано распределение на текущий месяц
	// Распределение, указанное в подразделении сотрудника.
	
	// ВТБухучетСдельногоЗаработка
	СоздатьВТБухучетСдельногоЗаработка(Запрос, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТБухучетСдельногоЗаработка");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТБухучетСдельногоЗаработка");
	
	// ВТНачисленияПоДокументамИПлановыеДляБухучет
	// содержит строки у которых бухучет задан в первичном документе и в настройках бухучета плановых начислений.
	СоздатьВТНачисленияПоДокументамИПлановыеДляБухучета(Запрос, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТНачисленияПоДокументамИПлановыеДляБухучета");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТНачисленияПоДокументамИПлановыеДляБухучета");
	
	// ВТБухучетНачисленийПоБазеСреднегоЗаработка
	СоздатьВТБухучетНачисленийПоБазеСреднегоЗаработка(Запрос, КоэффициентыСреднегоЗаработкаФССДокумента, КоэффициентыСреднегоЗаработкаДокумента, СтрокиКоэффициентыСреднегоЗаработка, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТБухучетНачисленийПоБазеСреднегоЗаработка");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТБухучетНачисленийПоБазеСреднегоЗаработка");
	
	// ВТБухучетНачисленийПоФактическимНачислениям
	СоздатьВТБухучетНачисленийПоФактическимНачислениям(Запрос, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТБухучетНачисленийПоФактическимНачислениям");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТБухучетНачисленийПоФактическимНачислениям");
	
	// ВТНачисленияКакЗаданоВидуРасчетаДляБухучета
	СоздатьВТНачисленияКакЗаданоВидуРасчетаДляБухучета(Запрос, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТНачисленияКакЗаданоВидуРасчетаДляБухучета");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТНачисленияКакЗаданоВидуРасчетаДляБухучета");
	
	// ВТНачисленияПоБазе - отберем из таблиы ИмяВТНачисленияИсходная начисления со стратегией отражения ПоБазовымРасчетам.
	СоздатьВТНачисленияПоБазе(Запрос, УчитыватьСторноЗаписи, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТНачисленияПоБазе");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТНачисленияПоБазе");
	
	// ВТБухучетОсновногоЗаработка
	// начисления для которых задано распределение на текущий месяц.
	СоздатьВТБухучетОсновногоЗаработка(Запрос, ИспользоватьОбособленныеТерритории, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТБухучетОсновногоЗаработка");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТБухучетОсновногоЗаработка");
	
	// ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению
	// начисления для которых задано распределение на текущий месяц.
	СоздатьВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению(Запрос, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению");
	
	// ВТБухучетНачисленийБезБазы
	// бухучет всех оставшихся начислений, для которых применяется бухучет по умолчанию из таблицы ВТНастройкиБухучетаСотрудников
	// дополнительно в таблицу включаются данные из таблиц с постфиксом "...ДляБухучета".
	СоздатьВТБухучетНачисленийБезБазы(Запрос, ИспользоватьОбособленныеТерритории, ИмяВТНачисленияИсходная);
	УдалитьВТ.Добавить("ВТБухучетНачисленийБезБазы");
	ДополнитьВТСтрокиКУдалению(Запрос, "ВТБухучетНачисленийБезБазы");
	
	// Объединим все результаты в таблице ВТБухучетНачисленийБезРаспределяемыхПоБазе
	// эта таблица будет источником данных для получения бухучета по базе начислений.
	ИменаТаблиц = Новый Массив; 
	ИменаТаблиц.Добавить("ВТБухучетНачисленийБезБазы");
	ИменаТаблиц.Добавить("ВТБухучетЕдиновременныеПособия");
	ИменаТаблиц.Добавить("ВТБухучетКомпенсацийЗаЗадержкуЗарплаты");
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоБазеСреднегоЗаработка");
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоФактическимНачислениям");
	ИменаТаблиц.Добавить("ВТБухучетОсновногоЗаработка");
	ИменаТаблиц.Добавить("ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению");
	ИменаТаблиц.Добавить("ВТБухучетСдельногоЗаработка");
	
	ШаблонТекстаЗапроса = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.Организация КАК Организация,
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо, 
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ВидОперации КАК ВидОперации,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.Сумма КАК Сумма,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленийБезРаспределяемыхПоБазе
	|ИЗ
	|	#ИмяТаблицы КАК БухучетНачислений";
	
	ТекстЗапроса = "";
	Для Индекс = 0 По ИменаТаблиц.ВГраница() Цикл
		
		ИмяТаблицы = ИменаТаблиц[Индекс];
		
		Если Индекс > 0 Тогда
			ТекстЗапроса = ТекстЗапроса + " 
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
			ФрагментТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса,"ПОМЕСТИТЬ ВТБухучетНачисленийБезРаспределяемыхПоБазе","");
		Иначе
			ФрагментТекстаЗапроса = ШаблонТекстаЗапроса;
		КонецЕсли;
		
		ФрагментТекстаЗапроса = СтрЗаменить(ФрагментТекстаЗапроса, "#ИмяТаблицы", ИмяТаблицы);
		ТекстЗапроса = ТекстЗапроса + ФрагментТекстаЗапроса;
		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТБухучетНачисленийБезРаспределяемыхПоБазе");
	
	// ВТБухучетНачисленияПоБазе
	СоздатьВТБухучетНачисленияПоБазе(Запрос, ИспользоватьОбособленныеТерритории, УчитыватьСторноЗаписи, ИсходныеДанные.МенеджерКадровогоУчета, ИсходныеДанные.МенеджерДанныхУчетаВремени);
	УдалитьВТ.Добавить("ВТБухучетНачисленияПоБазе");
	
	// ВТБухучетНачислений - объединение сведений о бухучете начислений.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|	БухучетНачислений.Организация КАК Организация,
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА БухучетНачислений.Подразделение
	|		ИНАЧЕ БухучетНачислений.ПодразделениеУчетаЗатрат
	|	КОНЕЦ КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ВидОперации КАК ВидОперации,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
	|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийВыходнаяТаблица
	|ИЗ
	|	(ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		ВЫБОР
	|			КОГДА БухучетНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ БухучетНачисления.ДатаНачала < БухучетНачисления.ПериодРегистрации
	|				ТОГДА БухучетНачисления.ПериодРегистрации
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачисления.ДатаНачала, МЕСЯЦ)
	|		КОНЕЦ КАК ПериодПринятияРасходов,
	|		БухучетНачисления.Организация КАК Организация,
	|		БухучетНачисления.Сотрудник КАК Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|		БухучетНачисления.Подразделение КАК Подразделение,
	|		БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление КАК Начисление,
	|		БухучетНачисления.ВидОперации КАК ВидОперации,
	|		БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|		БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|		БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|		БухучетНачисления.Сумма КАК Сумма,
	|		НачислениеВидНачисленияОплатыТрудаДляНУ.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|		БухучетНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|	ИЗ
	|		ВТБухучетНачисленийБезРаспределяемыхПоБазе КАК БухучетНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеВидНачисленияОплатыТрудаДляНУ КАК НачислениеВидНачисленияОплатыТрудаДляНУ
	|			ПО БухучетНачисления.Начисление = НачислениеВидНачисленияОплатыТрудаДляНУ.Начисление
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки,
	|		ВЫБОР
	|			КОГДА БухучетНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ БухучетНачисления.ДатаНачала < БухучетНачисления.ПериодРегистрации
	|				ТОГДА БухучетНачисления.ПериодРегистрации
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачисления.ДатаНачала, МЕСЯЦ)
	|		КОНЕЦ,
	|		БухучетНачисления.Организация,
	|		БухучетНачисления.Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо,
	|		БухучетНачисления.Подразделение,
	|		БухучетНачисления.ПодразделениеУчетаЗатрат,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление,
	|		БухучетНачисления.ВидОперации,
	|		БухучетНачисления.ДатаНачала,
	|		БухучетНачисления.ДатаОкончания,
	|		БухучетНачисления.ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов,
	|		БухучетНачисления.Сумма,
	|		НачислениеВидНачисленияОплатыТрудаДляНУ.ВидНачисленияОплатыТрудаДляНУ,
	|		БухучетНачисления.ОблагаетсяЕНВД
	|	ИЗ
	|		ВТБухучетНачисленияПоБазе КАК БухучетНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеВидНачисленияОплатыТрудаДляНУ КАК НачислениеВидНачисленияОплатыТрудаДляНУ
	|			ПО БухучетНачисления.Начисление = НачислениеВидНачисленияОплатыТрудаДляНУ.Начисление) КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачислений.ОблагаетсяЕНВД,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ПериодПринятияРасходов,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.ДатаНачала,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА БухучетНачислений.Подразделение
	|		ИНАЧЕ БухучетНачислений.ПодразделениеУчетаЗатрат
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийВыходнаяТаблица", ИмяВТБухучетНачислений);
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТСтрокиКУдалению");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийПоДоговорам(ИсходныеДанные, ИмяВТБухучетНачислений)
	
	МенеджерВременныхТаблиц 		   = ИсходныеДанные.МенеджерВременныхТаблиц;
	ИмяВТНачисленияИсходная 		   = ИсходныеДанные.ИмяВТНачисления;
	ПлательщикЕНВД                     = ИсходныеДанные.ПлательщикЕНВД;
	
	РаботаВБюджетномУчреждении  	   = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	ИспользоватьСтатьиФинансирования   = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	ИспользоватьОбособленныеТерритории = ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеТерритории", Новый Структура("Организация", ИсходныеДанные.Организация));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЕстьЕНВД", ПлательщикЕНВД);
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ИспользоватьСтатьиФинансирования);
	Запрос.УстановитьПараметр("РаботаВБюджетномУчреждении", РаботаВБюджетномУчреждении);
	
	УдалитьВТ = Новый Массив;
	
	// Получим сведения о настройке бухучета для договорников.
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВТНачисленияИсходная, "Сотрудник,ПериодРегистрации");
	
	// ВТНачислениеВидНачисленияОплатыТрудаДляНУ.
	// Таблица соответствия начисления и вида начисления для НУ.
	Если Не ЗарплатаКадры.ВТСуществует(МенеджерВременныхТаблиц, "ВТНачислениеВидНачисленияОплатыТрудаДляНУ") Тогда
		ОтражениеЗарплатыВБухучете.СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц);
		УдалитьВТ.Добавить("ВТНачислениеВидНачисленияОплатыТрудаДляНУ");	
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования,
	|	СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов,
	|	СведенияОБухучетеЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА &ЕстьЕНВД
	|			ТОГДА ВЫБОР
	|					КОГДА СведенияОБухучетеЗарплатыСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|					ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.ОтношениеКЕНВД
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТБухучетСотрудниковПоДоговорам
	|ИЗ
	|	ВТНачисленияПоДоговорамГПХ КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
	|		ПО Начисления.Сотрудник = СведенияОБухучетеЗарплатыСотрудников.Сотрудник
	|			И Начисления.Подразделение = СведенияОБухучетеЗарплатыСотрудников.Подразделение
	|			И Начисления.ТерриторияВыполненияРаботВОрганизации = СведенияОБухучетеЗарплатыСотрудников.ТерриторияВыполненияРаботВОрганизации
	|			И Начисления.ПериодРегистрации = СведенияОБухучетеЗарплатыСотрудников.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки,
	|	ЕСТЬNULL(НачисленияПоДоговорам.СтатьяФинансирования, УсловияДоговораГПХ.СтатьяФинансирования) КАК СтатьяФинансирования,
	|	ЕСТЬNULL(НачисленияПоДоговорам.СтатьяРасходов, УсловияДоговораГПХ.СтатьяРасходов) КАК СтатьяРасходов,
	|	ЕСТЬNULL(НачисленияПоДоговорам.СпособОтраженияЗарплатыВБухучете, УсловияДоговораГПХ.СпособОтраженияЗарплатыВБухучете) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(НачисленияПоДоговорам.ОтношениеКЕНВД, УсловияДоговораГПХ.ОтношениеКЕНВД) КАК ОтношениеКЕНВД,
	|	ЕСТЬNULL(НачисленияПоДоговорам.Сумма, УсловияДоговораГПХ.Сумма) КАК Сумма,
	|	ЕСТЬNULL(НачисленияПоДоговорам.СуммаЕНВД, УсловияДоговораГПХ.СуммаЕНВД) КАК СуммаЕНВД
	|ПОМЕСТИТЬ ВТБухучетДокументов
	|ИЗ
	|	ВТНачисленияПоДоговорамГПХ КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияПоДоговорам КАК НачисленияПоДоговорам
	|		ПО Начисления.ДокументОснование = НачисленияПоДоговорам.ДоговорАкт
	|			И Начисления.ПериодРегистрации = НачисленияПоДоговорам.МесяцНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УсловияДоговораГПХ КАК УсловияДоговораГПХ
	|		ПО Начисления.ДокументОснование = УсловияДоговораГПХ.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетСотрудников.ТерриторияВыполненияРаботВОрганизации,
	|	ВЫБОР
	|		КОГДА БухучетДокументов.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				ИЛИ БухучетДокументов.СпособОтраженияЗарплатыВБухучете ЕСТЬ NULL 
	|			ТОГДА БухучетСотрудников.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ БухучетДокументов.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетДокументов.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ИЛИ БухучетДокументов.СтатьяФинансирования ЕСТЬ NULL 
	|			ТОГДА БухучетСотрудников.СтатьяФинансирования
	|		ИНАЧЕ БухучетДокументов.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА БухучетДокументов.СтатьяРасходов = ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|				ИЛИ БухучетДокументов.СтатьяРасходов ЕСТЬ NULL 
	|			ТОГДА БухучетСотрудников.СтатьяРасходов
	|		ИНАЧЕ БухучетДокументов.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА &ЕстьЕНВД
	|			ТОГДА ВЫБОР
	|					КОГДА БухучетДокументов.ОтношениеКЕНВД ЕСТЬ NULL 
	|							ИЛИ БухучетДокументов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|						ТОГДА БухучетСотрудников.ОтношениеКЕНВД
	|					ИНАЧЕ БухучетДокументов.ОтношениеКЕНВД
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	Начисления.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БухучетДокументов.Сумма, 0) = 0
	|			ТОГДА 0
	|		КОГДА Начисления.Сумма = БухучетДокументов.Сумма
	|			ТОГДА БухучетДокументов.СуммаЕНВД
	|		ИНАЧЕ ВЫРАЗИТЬ(БухучетДокументов.СуммаЕНВД * (ВЫРАЗИТЬ(Начисления.Сумма / БухучетДокументов.Сумма КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаЕНВД
	|ПОМЕСТИТЬ ВТУчетДоговоровВременная
	|ИЗ
	|	ВТНачисленияПоДоговорамГПХ КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетДокументов КАК БухучетДокументов
	|		ПО Начисления.ИдентификаторСтроки = БухучетДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетСотрудниковПоДоговорам КАК БухучетСотрудников
	|		ПО Начисления.ИдентификаторСтроки = БухучетСотрудников.ИдентификаторСтроки
	|		И Начисления.ТерриторияВыполненияРаботВОрганизации = БухучетСотрудников.ТерриторияВыполненияРаботВОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетДоговоров.ИдентификаторСтроки,
	|	УчетДоговоров.ТерриторияВыполненияРаботВОрганизации,
	|	УчетДоговоров.СпособОтраженияЗарплатыВБухучете,
	|	УчетДоговоров.СтатьяФинансирования,
	|	УчетДоговоров.СтатьяРасходов,
	|	УчетДоговоров.ОтношениеКЕНВД,
	|	УчетДоговоров.Сумма,
	|	УчетДоговоров.СуммаЕНВД,
	|	ВЫБОР
	|		КОГДА УчетДоговоров.Сумма = УчетДоговоров.СуммаЕНВД
	|				ИЛИ УчетДоговоров.СуммаЕНВД = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РассчитыватьДолюЕНВД,
	|	ВЫБОР
	|		КОГДА УчетДоговоров.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ УчетДоговоров.СуммаЕНВД / УчетДоговоров.Сумма
	|	КОНЕЦ КАК ДоляЕНВД
	|ПОМЕСТИТЬ ВТУчетДоговоров
	|ИЗ
	|	ВТУчетДоговоровВременная КАК УчетДоговоров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки,
	|	УчетДоговоров.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ПериодРегистрации,
	|	Начисления.ПериодРегистрации КАК ПериодПринятияРасходов,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.Начисление,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.ДокументОснование,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ УчетДоговоров.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ УчетДоговоров.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	УчетДоговоров.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА УчетДоговоров.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|					ТОГДА ВЫБОР
	|							КОГДА УчетДоговоров.РассчитыватьДолюЕНВД
	|								ТОГДА ОтношениеКЕНВДЗатратНаЗарплату.Ссылка
	|							КОГДА УчетДоговоров.ДоляЕНВД = 0
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)
	|							ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|						КОНЕЦ
	|				ИНАЧЕ УчетДоговоров.ОтношениеКЕНВД
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА УчетДоговоров.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
	|				И УчетДоговоров.РассчитыватьДолюЕНВД
	|			ТОГДА ВЫБОР
	|					КОГДА ОтношениеКЕНВДЗатратНаЗарплату.Ссылка = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|						ТОГДА УчетДоговоров.СуммаЕНВД
	|					ИНАЧЕ УчетДоговоров.Сумма - УчетДоговоров.СуммаЕНВД
	|				КОНЕЦ
	|		ИНАЧЕ УчетДоговоров.Сумма
	|	КОНЕЦ КАК Сумма,
	|	НачислениеВидНачисленияОплатыТрудаДляНУ.ВидНачисленияОплатыТрудаДляНУ,
	|	Начисления.ВидОперации
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоДоговорам
	|ИЗ
	|	ВТНачисленияПоДоговорамГПХ КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетДоговоров КАК УчетДоговоров
	|		ПО Начисления.ИдентификаторСтроки = УчетДоговоров.ИдентификаторСтроки
	|		И Начисления.ТерриторияВыполненияРаботВОрганизации = УчетДоговоров.ТерриторияВыполненияРаботВОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ОтношениеКЕНВДЗатратНаЗарплату КАК ОтношениеКЕНВДЗатратНаЗарплату
	|		ПО (ОтношениеКЕНВДЗатратНаЗарплату.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД), ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД)))
	|			И (УчетДоговоров.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом))
	|			И (УчетДоговоров.РассчитыватьДолюЕНВД)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеВидНачисленияОплатыТрудаДляНУ КАК НачислениеВидНачисленияОплатыТрудаДляНУ
	|		ПО Начисления.Начисление = НачислениеВидНачисленияОплатыТрудаДляНУ.Начисление";
	
	Если Не ИспользоватьОбособленныеТерритории Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Начисления.ТерриторияВыполненияРаботВОрганизации = СведенияОБухучетеЗарплатыСотрудников.ТерриторияВыполненияРаботВОрганизации", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Начисления.ТерриторияВыполненияРаботВОрганизации = БухучетСотрудников.ТерриторияВыполненияРаботВОрганизации", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Начисления.ТерриторияВыполненияРаботВОрганизации = УчетДоговоров.ТерриторияВыполненияРаботВОрганизации", "");
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияПоДоговорамГПХ", ИмяВТНачисленияИсходная);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийПоДоговорам", ИмяВТБухучетНачислений);
	
	Запрос.Выполнить();
	
	УдалитьВТ = Новый Массив;
	УдалитьВТ.Добавить("ВТСведенияОБухучетеЗарплатыСотрудников");
	УдалитьВТ.Добавить("ВТБухучетСотрудниковПоДоговорам");
	УдалитьВТ.Добавить("ВТУчетДоговоров");
	УдалитьВТ.Добавить("ВТУчетДоговоровВременная");
	УдалитьВТ.Добавить("ВТБухучетДокументов");
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

#КонецОбласти

#Область ОбслуживаниеОценочныхОбязательств

Процедура СоздатьВТНачисленияБазаОтпуска(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиНачислений.Ссылка
	|ПОМЕСТИТЬ ВТНачисленияБазаОтпуска
	|ИЗ
	|	ПланВидовРасчета.Начисления.СреднийЗаработокОбщий КАК НастройкиНачислений
	|ГДЕ
	|	НастройкиНачислений.Значение <> ЗНАЧЕНИЕ(Перечисление.УчетНачисленийВСреднемЗаработкеОбщий.НеВключать)";
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, Период) Экспорт

	ТаблицаОстаткиОтпусков = ОтражениеЗарплатыВБухучете.НоваяТаблицаОстаткиОтпусков();
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.Организация      = Организация;
	ПараметрыПолучения.НачалоПериода    = НачалоМесяца(Период);
	ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(Период);
	ПараметрыПолучения.Вставить("КадровыеДанные", "Подразделение");
	ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
	МассивСотрудников = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	ЕстьЕНВД = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Организация, Период);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников);
	Запрос.УстановитьПараметр("ЕстьЕНВД", ЕстьЕНВД);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник,
	|	ТаблицаСотрудников.Период,
	|	ТаблицаСотрудников.Подразделение
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников"; 
	Запрос.Выполнить();
	
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники", "Сотрудник,Период", Организация,,Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Сотрудники.Подразделение КАК Подразделение,
	|	СведенияОБухучетеНачисленийСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	СведенияОБухучетеНачисленийСотрудников.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ЕстьЕНВД
	|				И СведенияОБухучетеНачисленийСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеНачисленийСотрудников
	|		ПО Сотрудники.Сотрудник = СведенияОБухучетеНачисленийСотрудников.Сотрудник";
	
	БухучетСотрудников = Запрос.Выполнить().Выгрузить();
	БухучетСотрудников.Индексы.Добавить("Сотрудник");
	Отбор = Новый Структура("Сотрудник");
	
	Для каждого Сотрудник Из МассивСотрудников Цикл
	
		ОстаткиОтпусковСотрудника = ОстаткиОтпусков.ОстатокОтпускаСотрудникаНаДату(Сотрудник, КонецМесяца(Период));
		ОстатокОтпусковСотрудника = 0;
		Для каждого СтрокаТЗ Из ОстаткиОтпусковСотрудника.ОстаткиВРазрезеВидовОтпусков Цикл
			ОстатокОтпусковСотрудника = ОстатокОтпусковСотрудника + СтрокаТЗ.КоличествоДней;
		КонецЦикла;
		
		ДатаНачалаСобытия = НачалоМесяца(ДобавитьМесяц(Период, 1));
		ПериодРасчета = УчетСреднегоЗаработка.ПериодРасчетаОбщегоСреднегоЗаработкаСотрудника(ДатаНачалаСобытия, Сотрудник);
		ПорядокРасчета = УчетСреднегоЗаработкаКлиентСервер.ПорядокРасчетаОбщегоСреднегоЗаработка(Период);
		ДанныеДляРасчета = УчетСреднегоЗаработка.ДанныеДляРасчетаОбщегоСреднегоЗаработкаСотрудника(Сотрудник, ДатаНачалаСобытия, ПериодРасчета.ДатаНачала, ПериодРасчета.ДатаОкончания, ПорядокРасчета);
		
		ДополнительныеПараметры = УчетСреднегоЗаработкаКлиентСервер.ДополнительныеПараметрыРасчетаСреднегоЗаработка();
		ДополнительныеПараметры.НачалоПериода = ПериодРасчета.ДатаНачала;
		ДополнительныеПараметры.ОкончаниеПериода = ПериодРасчета.ДатаОкончания;
		ДополнительныеПараметры.Индексации = ДанныеДляРасчета.ДанныеОбИндексации;
		ДополнительныеПараметры.ДатаНачалаСобытия = ДатаНачалаСобытия;
		ДополнительныеПараметры.СпособРасчетаОтпуска = Перечисления.СпособыРасчетаНачислений.ОплатаОтпускаПоКалендарнымДням;
		
		СреднийЗаработок = УчетСреднегоЗаработкаКлиентСервер.СреднийЗаработокОбщий(ДанныеДляРасчета.ДанныеОНачислениях, ДанныеДляРасчета.ДанныеОВремени, ДополнительныеПараметры);
		
		НоваяСтрока = ТаблицаОстаткиОтпусков.Добавить();
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.Сотрудник   = Сотрудник;
		НоваяСтрока.ОстатокОтпусков  = ОстатокОтпусковСотрудника;
		НоваяСтрока.СреднийЗаработок = СреднийЗаработок;
		
		Отбор.Сотрудник = Сотрудник;
		СтрокиБухучета = БухучетСотрудников.НайтиСтроки(Отбор);
		Если СтрокиБухучета.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиБухучета[0]);	
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат ТаблицаОстаткиОтпусков;

КонецФункции

Функция НачисленияИВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации)
		
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		СведенияОБухучетеНачисленийИВзносовПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	Иначе
		ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачислений(Организация, ПериодРегистрации);
		ТаблицаВзносов 	  = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносов(Организация, ПериодРегистрации);
		ОтражениеЗарплатыВБухучете.СведенияОБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ТаблицаНачислений, ТаблицаВзносов);
	КонецЕсли;
	
	Возврат ОтражениеЗарплатыВБухучете.ТаблицаНачисленийИВзносовДляБухучета(МенеджерВременныхТаблиц);
	
КонецФункции

Процедура ЗаполнитьПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, ПараметрыДляРасчета) Экспорт

	НачисленнаяЗарплатаИВзносы = НачисленияИВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации);
	ФондОплатыТрудаИСтраховыеВзносы = ОтражениеЗарплатыВБухучете.ФондОплатыТрудаИСтраховыеВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, НачисленнаяЗарплатаИВзносы);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ФондОплатыТрудаИСтраховыеВзносы, ПараметрыДляРасчета.ФондОплатыТрудаИСтраховыеВзносы);
	
	ОстаткиОтпусковДляРасчетаОценочныхОбязательств = ОтражениеЗарплатыВБухучете.ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, ПериодРегистрации);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОстаткиОтпусковДляРасчетаОценочныхОбязательств, ПараметрыДляРасчета.ОстаткиОтпусков);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		ПараметрыДляРасчета.ОстаткиОтпусков.ЗаполнитьЗначения(КонецМесяца(ПериодРегистрации),"ДатаНачала");
		ПараметрыДляРасчета.ФондОплатыТрудаИСтраховыеВзносы.ЗаполнитьЗначения(КонецМесяца(ПериодРегистрации),"ДатаНачала");
		ИменаТаблиц = "ФондОплатыТрудаИСтраховыеВзносы,ОстаткиОтпусков";
		Модуль.ДополнитьДанныеДокументаМестомВСтруктуреПредприятия(ПараметрыДляРасчета, ИменаТаблиц);
	КонецЕсли;
	
	Для каждого ЭлементСтруктуры Из ПараметрыДляРасчета Цикл
		Если ЭлементСтруктуры.Значение.Колонки.Найти("ПодразделениеУчетаЗатрат") <> Неопределено Тогда
			ЭлементСтруктуры.Значение.Колонки.Удалить("Подразделение");
			ЭлементСтруктуры.Значение.Колонки.ПодразделениеУчетаЗатрат.Имя = "Подразделение";
		КонецЕсли;
	КонецЦикла;
	
	ОтражениеЗарплатыВБухучете.СвернутьДанныеДляОтраженияЗарплатыВБухучете(ПараметрыДляРасчета, "ДатаНачала");

КонецПроцедуры

#КонецОбласти

#Область ОписанияТаблицСтруктурЗначенийПоУмолчанию

// Возвращает ссылку на элемент справочника СтатьиРасходовЗарплата с кодом 211.
Функция СтатьяРасходов211() Экспорт
	
	Статья211 = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Статья211 = Справочники.СтатьиРасходовЗарплата.НайтиПоКоду("211");
	КонецЕсли;

	Возврат Статья211;
	
КонецФункции

// Возвращает ссылку на элемент справочника СтатьиРасходовЗарплата с кодом 213.
Функция СтатьяРасходов213() Экспорт
	
	Статья213 = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Статья213 = Справочники.СтатьиРасходовЗарплата.НайтиПоКоду("213");
	КонецЕсли;
	
	Возврат Статья213;
	
КонецФункции 

// Возвращает ссылку на элемент справочника СтатьиРасходовЗарплата с кодом 290.
Функция СтатьяРасходов290() Экспорт
	
	Статья290 = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Статья290 = Справочники.СтатьиРасходовЗарплата.НайтиПоКоду("290");
	КонецЕсли;

	Возврат Статья290;
	
КонецФункции

Функция НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам() Экспорт
	
	Таблица = УчетНачисленнойЗарплатыРасширенный.НоваяТаблицаНачисленияУдержанияПоСотрудникам();
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("ВидНачисленияОплатыТрудаДляНУ", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыНачисленийОплатыТрудаДляНУ"));
	Таблица.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));  
	Таблица.Колонки.Добавить("ОтношениеКЕНВД", Новый ОписаниеТипов("ПеречислениеСсылка.ОтношениеКЕНВДЗатратНаЗарплату"));
	Таблица.Колонки.Добавить("ПодразделениеУчетаЗатрат", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	
	Таблица.Колонки.НачислениеУдержание.Имя = "Начисление"; 

	Возврат Таблица;
	
КонецФункции  

Функция НоваяТаблицаБухучетНачисленияУдержанияПоКонтрагентамАкционерам() Экспорт
	
	МассивТиповНачислениеУдержание = Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Измерения.НачислениеУдержание.Тип.Типы();
	МассивТиповДокументОснование = Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Реквизиты.ДокументОснование.Тип.Типы();
	
	Таблица = Новый ТаблицаЗначений;

	Таблица.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачислениеУдержание));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ГруппаНачисленияУдержанияВыплаты", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"));
	Таблица.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТиповДокументОснование));
	Таблица.Колонки.Добавить("ТерриторияВыполненияРаботВОрганизации", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));

	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетЗарплатыПервичныхДокументов() Экспорт
	
	МассивТиповНачисленияУдержания = Новый Массив;
	МассивТиповНачисленияУдержания.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисленияУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	МассивТиповНачисленияУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Удержания"));
	МассивТиповНачисленияУдержания.Добавить(Тип("СправочникСсылка.ВидыВыплатБывшимСотрудникам"));
	МассивТиповНачисленияУдержания.Добавить(Тип("СправочникСсылка.ВидыПрочихДоходовФизическихЛиц"));
	
	МассивТиповДокументОснование = Метаданные.РегистрыСведений.БухучетЗарплатыПервичныхДокументов.Измерения.ДокументОснование.Тип.Типы();
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ДокументОснование",  Новый ОписаниеТипов(МассивТиповДокументОснование));
	Таблица.Колонки.Добавить("НачислениеУдержание",  Новый ОписаниеТипов(МассивТиповНачисленияУдержания));  
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете",  Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухучете"));
	Таблица.Колонки.Добавить("ОтношениеКЕНВД",  Новый ОписаниеТипов("ПеречислениеСсылка.ОтношениеКЕНВДЗатратНаЗарплату"));
	Таблица.Колонки.Добавить("СтатьяФинансирования",  Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов",  Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	
	Возврат Таблица;
КонецФункции

Функция ОписаниеИсходныхДанныхДляОтраженияНачисленийВБухучете() Экспорт

	Параметры = Новый Структура(
	"Организация,
	|МесяцНачисления,
	|МенеджерВременныхТаблиц,
	|МенеджерКадровогоУчета,
	|ИмяВТБухучетНачислений,
	|ИмяВТНачисления,
	|СтрокиБухучетСторноНачислений,
	|БухучетПервичногоДокумента,
	|ИсключаемыйРегистратор,
	|ПроцентЕНВД,
	|ПлательщикЕНВД,
	|СтрокиКоэффициентыСреднегоЗаработка,
	|КоэффициентыСреднегоЗаработкаДокумента,
	|КоэффициентыСреднегоЗаработкаФССДокумента,
	|ВидыОперацийРасходыПоСтрахованию,
	|УчитыватьСторноЗаписи,
	|МенеджерДанныхУчетаВремени");
	
	Параметры.СтрокиБухучетСторноНачислений = Новый Соответствие;
	Параметры.БухучетПервичногоДокумента 	= НоваяТаблицаБухучетЗарплатыПервичныхДокументов();
	Параметры.СтрокиКоэффициентыСреднегоЗаработка 		= Новый Соответствие;
	Параметры.КоэффициентыСреднегоЗаработкаДокумента 	= Новый Соответствие;
	Параметры.КоэффициентыСреднегоЗаработкаФССДокумента = НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка();
	Параметры.ИмяВТНачисления 		= "ВТНачисленияДляРаспределения";
	Параметры.УчитыватьСторноЗаписи = Ложь;
	
	// Виды операций, которые обрабатываются при получении бухучета как расходы по страхованию.
	ВидыОперацийРасходыПоСтрахованию = Новый Массив;
	ВидыОперацийРасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюБюджет);
	ВидыОперацийРасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС);
	ВидыОперацийРасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	ВидыОперацийРасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПособиеНаПогребение);
	ВидыОперацийРасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюРаботодатель);
	
	Параметры.ВидыОперацийРасходыПоСтрахованию = ВидыОперацийРасходыПоСтрахованию;
	
	Возврат Параметры;	

КонецФункции 

Функция ОписаниеИсходныхДанныхДляОтраженияУдержанийВБухучете() Экспорт

	Параметры = Новый Структура(
	"Организация,
	|МесяцНачисления,
	|МенеджерВременныхТаблиц,
	|ИмяВТБухучетНачислений,
	|ОкончательныйРасчет,
	|ИсключаемыйРегистратор,
	|ВидыНачисленийДополненияРасчетнойБазы,
	|ТаблицаУдержаний,
	|ТаблицаЗаймов,
	|РезультатРасчетаНДФЛ,
	|НДФЛКЗачету,
	|НДФЛЗачтено,
	|РегистраторыУдержанийОбновленияБухучета");
	
	Возврат Параметры;	

КонецФункции

// Функция определяет состав видов особых начислений, 
//	включаемых в состав расчетной базы.
//
Функция ВидыНачисленийДополненияРасчетнойБазыУдержаний() Экспорт
	
	ВидыНачислений = Новый Массив;
	ВидыНачислений.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа);
	ВидыНачислений.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги);
	ВидыНачислений.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.КомпенсацияЗаЗадержкуЗарплаты);
	ВидыНачислений.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов);
	
	Возврат ВидыНачислений;
	
КонецФункции

Функция НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка() Экспорт

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("СтатьяФинансирования", 			 Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", 					 Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", 					 Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("Коэффициент", 		 			 Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;

КонецФункции

Функция НоваяТаблицаРаспределениеРезультатовУдержаний() Экспорт
	
	// В методе УпорядоченнаяТаблицаРаспределениеРезультатовУдержаний выполняется сортировка строк результатов распределения,
	// при изменении состава колонок или имен необходимо внести изменения в УпорядоченнаяТаблицаРаспределениеРезультатовУдержаний.
	
	МассивТиповВидУдержания = Новый Массив;
	МассивТиповВидУдержания.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповВидУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Удержания"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("ВидУдержания", Новый ОписаниеТипов(МассивТиповВидУдержания));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ПодразделениеУчетаЗатрат", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("КодСтатьиФинансирования", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(3)));

	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаРаспределениеРезультатовНачислений() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("ПодразделениеУчетаЗатрат", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("Территория", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("КодСтатьиФинансирования", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(3)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаРезультатРасчетаНДФЛ() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("ДатаПолученияДохода", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Территория", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ВидУдержания", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	Таблица.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
	
	Возврат Таблица;

КонецФункции

Функция НоваяТаблицаКорректировкиВыплаты() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ВидУдержания", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	// колонка для совместимости
	Таблица.Колонки.Добавить("ДатаПолученияДохода", Новый ОписаниеТипов("Дата"));
	
	Возврат Таблица;

КонецФункции

Функция НоваяТаблицаРезультатРасчетаУдержаний() Экспорт
	
	МассивТиповВидУдержания = Новый Массив;
	МассивТиповВидУдержания.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповВидУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Удержания"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Сотрудник",  			Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", 		Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));  
	Таблица.Колонки.Добавить("ВидУдержания", 		Новый ОписаниеТипов(МассивТиповВидУдержания));
	Таблица.Колонки.Добавить("ДокументОснование", 	Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ОснованиеУдержания.Тип));
	Таблица.Колонки.Добавить("ПлатежныйАгент", 		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("Получатель", 			Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("ДатаНачала", 			Новый ОписаниеТипов("Дата",Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	Таблица.Колонки.Добавить("ДатаОкончания", 		Новый ОписаниеТипов("Дата",Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	Таблица.Колонки.Добавить("Сумма", 				Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;

КонецФункции

Функция НоваяТаблицаРезультатПогашениеЗаймов() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидУдержания", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2)));
	// колонки для совместимости, для займов будут с пустыми значениями 
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ОснованиеУдержания.Тип));

	
	Возврат Таблица;

КонецФункции

Функция НоваяТаблицаБухучетНачислений() Экспорт

	ОписаниеТипаДата = Новый ОписаниеТипов("Дата",Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	МассивТиповНачисления.Добавить(Тип("СправочникСсылка.ВидыВыплатБывшимСотрудникам"));
	МассивТиповНачисления.Добавить(Тип("СправочникСсылка.ВидыПрочихДоходовФизическихЛиц"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИдентификаторСтроки", 				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7,0)));
	Таблица.Колонки.Добавить("Организация",  						Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", 						Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник",  							Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", 						Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ПодразделениеУчетаЗатрат", 			Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("Начисление", 							Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("ДатаНачала", 							ОписаниеТипаДата);
	Таблица.Колонки.Добавить("ДатаОкончания", 						ОписаниеТипаДата);
	Таблица.Колонки.Добавить("ПериодДействия", 						ОписаниеТипаДата);
	Таблица.Колонки.Добавить("Территория",							Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип));
	Таблица.Колонки.Добавить("СтатьяФинансирования",				Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов",  					Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД",						Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", 	Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухучете"));
	
	Таблица.Колонки.Добавить("Сумма", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("Результат",	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;

КонецФункции

Функция ПараметрыДляЗаполненияТаблицДокумента() Экспорт

	Параметры = Новый Структура("
	|Организация,
	|ПериодРегистрации,
	|ДокументСсылка,
	|ИсточникФинансовогоОбеспечения");
	
	Возврат Параметры;

КонецФункции

#КонецОбласти

#Область ДанныеДляОтраженияЗарплатыВБухучете

Функция ДанныеДляОтраженияЗарплатыВБухучете(Организация, ПериодРегистрации) Экспорт

	ДанныеДляОтражения = ОтражениеЗарплатыВБухучете.НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете();
	
	Если ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СведенияОБухучетеНачисленийИВзносовПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
		
		ДанныеДляОтражения.НачисленнаяЗарплатаИВзносы 	= ОтражениеЗарплатыВБухучете.ТаблицаНачисленийИВзносовДляБухучета(МенеджерВременныхТаблиц);
		ДанныеДляОтражения.НачисленныйНДФЛ 				= ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации);
		ДанныеДляОтражения.УдержаннаяЗарплата 			= ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации);
		
	Иначе
		
		ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачислений(Организация, ПериодРегистрации);
		ТаблицаВзносов 	  = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносов(Организация, ПериодРегистрации);
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ОтражениеЗарплатыВБухучете.СведенияОБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ТаблицаНачислений, ТаблицаВзносов);
		ДанныеДляОтражения.НачисленнаяЗарплатаИВзносы = ОтражениеЗарплатыВБухучете.ТаблицаНачисленийИВзносовДляБухучета(МенеджерВременныхТаблиц);
		
		ТаблицаНДФЛ = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНДФЛ(Организация, ПериодРегистрации);
		ДанныеДляОтражения.НачисленныйНДФЛ = ОтражениеЗарплатыВБухучете.ТаблицаНДФЛДляБухучета(ТаблицаНДФЛ);
		
		ПоляТаблиц = "Сотрудник,Подразделение,ПодразделениеУчетаЗатрат,Сумма";
		ТаблицаНачислений = ДанныеДляОтражения.НачисленнаяЗарплатаИВзносы.Скопировать(,ПоляТаблиц);
		
		ТаблицаУдержаний = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеУдержаний(Организация, ПериодРегистрации);
		ДанныеДляОтражения.УдержаннаяЗарплата = ТаблицаУдержанийДляБухучета(ТаблицаУдержаний, ТаблицаНачислений);
		
	КонецЕсли;
	
	Возврат ДанныеДляОтражения;

КонецФункции

// Функция возвращает таблицу значений с данными бухучета удержаний.
//		Поля таблицы
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				Подразделение  - СправочникСсылка.ПодразделенияОрганизаций
//				ВидОперации    - ПеречислениеСсылка.ВидыОперацийПоЗарплате
//				СтатьяФинансирования - СправочникСсылка.СтатьиФинансированияЗарплата
//				СтатьяРасходов       - СправочникСсылка.СтатьиРасходовЗарплата
//				Контрагент           - СправочникСсылка.Контрагенты, контрагент, в пользу которого произведено удержание.
//				Сумма - Число 15.2.
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//
Функция ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации)

	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ();
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетУдержаний.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетУдержаний.Сотрудник КАК Сотрудник,
	|	БухучетУдержаний.ВидОперации КАК ВидОперации,
	|	БухучетУдержаний.Подразделение КАК Подразделение,
	|	БухучетУдержаний.ДатаНачала КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА БухучетУдержаний.ПодразделениеУчетаЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА БухучетУдержаний.Подразделение
	|		ИНАЧЕ БухучетУдержаний.ПодразделениеУчетаЗатрат
	|	КОНЕЦ КАК ПодразделениеУчетаЗатрат,
	|	БухучетУдержаний.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетУдержаний.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетУдержаний.Контрагент КАК Контрагент,
	|	БухучетУдержаний.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетУдержаний
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетУдержаний
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(БухучетУдержаний.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетУдержаний.Организация = &Организация
	|	И БухучетУдержаний.Сумма <> 0
	|	И (БухучетУдержаний.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
	|				И НЕ БухучетУдержаний.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|			ИЛИ БухучетУдержаний.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетУдержаний.ФизическоеЛицо,
	|	БухучетУдержаний.Сотрудник,
	|	БухучетУдержаний.ВидОперации,
	|	БухучетУдержаний.Подразделение,
	|	&ПериодРегистрации,
	|	БухучетУдержаний.Подразделение,
	|	БухучетУдержаний.СтатьяФинансирования,
	|	БухучетУдержаний.СтатьяРасходов,
	|	БухучетУдержаний.Контрагент,
	|	БухучетУдержаний.Сумма
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетУдержаний
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(БухучетУдержаний.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетУдержаний.Организация = &Организация
	|	И БухучетУдержаний.Сумма <> 0
	|	И (БухучетУдержаний.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
	|				И НЕ БухучетУдержаний.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|			ИЛИ БухучетУдержаний.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетУдержаний.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетУдержаний.Сотрудник КАК Сотрудник,
	|	БухучетУдержаний.ВидОперации КАК ВидОперации,
	|	БухучетУдержаний.Подразделение КАК Подразделение,
	|	БухучетУдержаний.ДатаНачала КАК ДатаНачала,
	|	БухучетУдержаний.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетУдержаний.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетУдержаний.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетУдержаний.Контрагент КАК Контрагент,
	|	СУММА(БухучетУдержаний.Сумма) КАК Сумма,
	|	ФизическиеЛица.Наименование КАК ФизическоеЛицоНаименование,
	|	ПодразделенияОрганизаций.Наименование КАК ПодразделениеНаименование
	|ИЗ
	|	ВТБухучетУдержаний КАК БухучетУдержаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО БухучетУдержаний.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО БухучетУдержаний.ПодразделениеУчетаЗатрат = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетУдержаний.Сотрудник,
	|	БухучетУдержаний.ВидОперации,
	|	БухучетУдержаний.Подразделение,
	|	БухучетУдержаний.ДатаНачала,
	|	БухучетУдержаний.Контрагент,
	|	БухучетУдержаний.ФизическоеЛицо,
	|	БухучетУдержаний.СтатьяРасходов,
	|	БухучетУдержаний.СтатьяФинансирования,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	БухучетУдержаний.ПодразделениеУчетаЗатрат
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетУдержаний.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицоНаименование,
	|	ПодразделениеНаименование,
	|	ВидОперации,
	|	СтатьяФинансирования,
	|	СтатьяРасходов";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Функция возвращает таблицу значений с данными бухучета НДФЛ.
//		Поля таблицы
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				ВидОперации    - ПеречислениеСсылка.ВидыОперацийПоЗарплате
//				СтатьяФинансирования     - СправочникСсылка.СтатьиФинансированияЗарплата
//				СтатьяРасходов     - СправочникСсылка.СтатьиРасходовЗарплата
//				КодПоОКАТО     - Строка, 11
//				КодПоОКТМО     - Строка, 11
//				КПП   - Строка, 9
//				Сумма - Число 15.2.
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//
Функция ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации)
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация);
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ(Истина);
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНДФЛ.Сотрудник КАК Сотрудник,
	|	БухучетНДФЛ.ВидОперации КАК ВидОперации,
	|	БухучетНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(БухучетНДФЛ.Сумма) КАК Сумма,
	|	БухучетНДФЛ.ТерриторияВыполненияРаботВОрганизации КАК Подразделение,
	|	БухучетНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТТаблицаНДФЛ
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНДФЛ
	|ГДЕ
	|	БухучетНДФЛ.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНДФЛ.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНДФЛ.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНДФЛ.ФизическоеЛицо,
	|	БухучетНДФЛ.СтатьяРасходов,
	|	БухучетНДФЛ.СтатьяФинансирования,
	|	БухучетНДФЛ.ВидОперации,
	|	БухучетНДФЛ.Сотрудник,
	|	БухучетНДФЛ.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНДФЛ.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНДФЛ.Сумма) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНДФЛ.ФизическоеЛицо,
	|	БухучетНДФЛ.Сотрудник,
	|	БухучетНДФЛ.ВидОперации,
	|	БухучетНДФЛ.СтатьяФинансирования,
	|	БухучетНДФЛ.СтатьяРасходов,
	|	СУММА(БухучетНДФЛ.Сумма),
	|	БухучетНДФЛ.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНДФЛ.РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНДФЛ
	|ГДЕ
	|	БухучетНДФЛ.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНДФЛ.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНДФЛ.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНДФЛ.ФизическоеЛицо,
	|	БухучетНДФЛ.СтатьяРасходов,
	|	БухучетНДФЛ.СтатьяФинансирования,
	|	БухучетНДФЛ.ВидОперации,
	|	БухучетНДФЛ.Сотрудник,
	|	БухучетНДФЛ.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНДФЛ.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНДФЛ.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник КАК Сотрудник,
	|	ТаблицаНДФЛ.ВидОперации КАК ВидОперации,
	|	ТаблицаНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ТаблицаНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(ТаблицаНДФЛ.Сумма) КАК Сумма,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКАТО, """") КАК КодПоОКАТО,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКТМО, """") КАК КодПоОКТМО,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КПП, """") КАК КПП,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.Код, """") КАК КодНалоговогоОргана,
	|	ФизическиеЛица.Наименование КАК Наименование
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО ТаблицаНДФЛ.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник,
	|	ТаблицаНДФЛ.ВидОперации,
	|	ТаблицаНДФЛ.СтатьяФинансирования,
	|	ТаблицаНДФЛ.СтатьяРасходов,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКАТО, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКТМО, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КПП, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.Код, """"),
	|	ФизическиеЛица.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование,
	|	ВидОперации,
	|	СтатьяФинансирования,
	|	СтатьяРасходов
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ДанныеДляЗаполненияТаблицДокумента(ПараметрыДляЗаполнения) Экспорт
	
	Организация 	  = ПараметрыДляЗаполнения.Организация;
	ПериодРегистрации = ПараметрыДляЗаполнения.ПериодРегистрации;
	ДокументСсылка 	  = ПараметрыДляЗаполнения.ДокументСсылка;
	
	РезультатЗаполнения = ДанныеДляОтраженияЗарплатыВБухучете(Организация, ПериодРегистрации);
	
	НачисленныеОтпуска = ОтражениеЗарплатыВБухучете.НоваяТаблицаНачисленныеОтпуска();
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОценочныеОбязательстваЗарплатаКадры") Тогда
		МодульРезервОтпусков = ОбщегоНазначения.ОбщийМодуль("РезервОтпусков");
		НастройкиРезервовОтпусков = МодульРезервОтпусков.НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
		Если НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
			КолонкиСуммирования = Неопределено;
			ОтражениеЗарплатыВБухучете.НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы(КолонкиСуммирования);
			МодульРезервОтпусков.СписатьРасходыПоОплатеОтпускаЗаСчетОценочныхОбязательств(Организация, ПериодРегистрации, ДокументСсылка, РезультатЗаполнения.НачисленнаяЗарплатаИВзносы, НачисленныеОтпуска, КолонкиСуммирования);
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		Модуль.ДополнитьДанныеДокументаМестомВСтруктуреПредприятия(РезультатЗаполнения, "НачисленнаяЗарплатаИВзносы,УдержаннаяЗарплата");
	КонецЕсли;
	
	Для каждого ЭлементСтруктуры Из РезультатЗаполнения Цикл
		Если ЭлементСтруктуры.Значение.Колонки.Найти("ПодразделениеУчетаЗатрат") <> Неопределено Тогда
			ЭлементСтруктуры.Значение.Колонки.Удалить("Подразделение");
			ЭлементСтруктуры.Значение.Колонки.ПодразделениеУчетаЗатрат.Имя = "Подразделение";
		КонецЕсли;
	КонецЦикла;
	
	ОтражениеЗарплатыВБухучете.СвернутьДанныеДляОтраженияЗарплатыВБухучете(РезультатЗаполнения, "Сотрудник,Начисление,ДатаНачала");
	
	РезультатЗаполнения.Вставить("ВыплатаОтпусковЗаСчетРезерва", НачисленныеОтпуска);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений");
		Модуль.ОтобратьРезультатыЗаполненияТаблицДокумента(РезультатЗаполнения, ПараметрыДляЗаполнения);
	КонецЕсли;
	
	Возврат РезультатЗаполнения;

КонецФункции

Функция ТаблицаУдержанийДляБухучета(ТаблицаУдержаний, ТаблицаНачислений)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаУдержаннаяЗарплата", ТаблицаУдержаний);
	Запрос.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	Начисления.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	&ТаблицаНачислений КАК Начисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	СУММА(Начисления.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТСтрокиНачислений
	|ИЗ
	|	ВТНачисления КАК Начисления
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Начисления.Подразделение <> Начисления.ПодразделениеУчетаЗатрат
	|					И Начисления.ПодразделениеУчетаЗатрат <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Сотрудник,
	|	Начисления.Подразделение,
	|	Начисления.ПодразделениеУчетаЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержаннаяЗарплата.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	УдержаннаяЗарплата.Сотрудник КАК Сотрудник,
	|	УдержаннаяЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение КАК Подразделение,
	|	УдержаннаяЗарплата.ДатаНачала КАК ДатаНачала,
	|	УдержаннаяЗарплата.Контрагент КАК Контрагент,
	|	УдержаннаяЗарплата.ВидОперации КАК ВидОперации,
	|	УдержаннаяЗарплата.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТУдержаннаяЗарплата
	|ИЗ
	|	&ТаблицаУдержаннаяЗарплата КАК УдержаннаяЗарплата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиУдержаний.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВТСтрокиНачислений КАК СтрокиНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУдержаннаяЗарплата КАК СтрокиУдержаний
	|		ПО СтрокиНачислений.Сотрудник = СтрокиУдержаний.Сотрудник
	|			И СтрокиНачислений.Подразделение = СтрокиУдержаний.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиНачислений.Сотрудник КАК Сотрудник,
	|	СтрокиНачислений.Подразделение КАК Подразделение,
	|	СтрокиНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	СУММА(СтрокиНачислений.Сумма) КАК Сумма
	|ИЗ
	|	ВТНачисления КАК СтрокиНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиНачислений.ПодразделениеУчетаЗатрат,
	|	СтрокиНачислений.Сотрудник,
	|	СтрокиНачислений.Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Подразделение";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = РезультатЗапроса.ВГраница();
	
	НоваяТаблицаУдержаний = ОтражениеЗарплатыВБухучете.НоваяТаблицаБухучетУдержаннаяЗарплата();
	
	СтрокиКОбработке = РезультатЗапроса[КоличествоРезультатов-1].Выгрузить().ВыгрузитьКолонку("ИдентификаторСтроки");
	Если СтрокиКОбработке.Количество()>0 Тогда
		
		ТаблицаУдержаний.Индексы.Добавить("ИдентификаторСтроки");
		ОтборУдержаний = Новый Структура("ИдентификаторСтроки");
		
		ТаблицаКоэффициентов = РезультатЗапроса[КоличествоРезультатов].Выгрузить();
		ТаблицаКоэффициентов.Индексы.Добавить("Сотрудник,Подразделение");
		ОтборКоэффициентов = Новый Структура("Сотрудник,Подразделение");
		
		Для каждого ИдентификаторСтроки Из СтрокиКОбработке Цикл
			
			ОтборУдержаний.ИдентификаторСтроки = ИдентификаторСтроки;
			СтрокиУдержаний = ТаблицаУдержаний.НайтиСтроки(ОтборУдержаний);
			СтрокаУдержания = СтрокиУдержаний[0];
			
			ЗаполнитьЗначенияСвойств(ОтборКоэффициентов, СтрокаУдержания);
			СтрокиОтражения = ТаблицаКоэффициентов.НайтиСтроки(ОтборКоэффициентов);
			
			Если СтрокиОтражения.Количество() = 0 Тогда
				
				НоваяСтрока = НоваяТаблицаУдержаний.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУдержания);
				НоваяСтрока.ПодразделениеУчетаЗатрат = НоваяСтрока.Подразделение;
				
			Иначе
				
				Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"Сумма");
				Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаУдержания.Сумма, Коэффициенты);
				
				Если Результаты = Неопределено Тогда
					
					НоваяСтрока = НоваяТаблицаУдержаний.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУдержания);
					НоваяСтрока.ПодразделениеУчетаЗатрат = НоваяСтрока.Подразделение;
					
				Иначе
					
					Индекс = 0;
					Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
						
						НоваяСтрока = НоваяТаблицаУдержаний.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУдержания);
						НоваяСтрока.Сумма = Результаты[Индекс];
						НоваяСтрока.ПодразделениеУчетаЗатрат = СтрокаОтражения.ПодразделениеУчетаЗатрат;
						
						Индекс = Индекс + 1;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НоваяТаблицаУдержаний", НоваяТаблицаУдержаний);
	Запрос.УстановитьПараметр("ОбработанныеСтроки", СтрокиКОбработке);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдержаннаяЗарплата.Сотрудник КАК Сотрудник,
	|	УдержаннаяЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение КАК Подразделение,
	|	УдержаннаяЗарплата.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	УдержаннаяЗарплата.ДатаНачала КАК ДатаНачала,
	|	УдержаннаяЗарплата.Контрагент КАК Контрагент,
	|	УдержаннаяЗарплата.ВидОперации КАК ВидОперации,
	|	УдержаннаяЗарплата.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТНоваяТаблицаУдержаний
	|ИЗ
	|	&НоваяТаблицаУдержаний КАК УдержаннаяЗарплата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.Сотрудник КАК Сотрудник,
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Подразделение КАК Подразделение,
	|	Удержания.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	Удержания.ДатаНачала КАК ДатаНачала,
	|	Удержания.Контрагент КАК Контрагент,
	|	Удержания.ВидОперации КАК ВидОперации,
	|	СУММА(Удержания.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		Удержания.Сотрудник КАК Сотрудник,
	|		Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Удержания.Подразделение КАК Подразделение,
	|		Удержания.Подразделение КАК ПодразделениеУчетаЗатрат,
	|		Удержания.ДатаНачала КАК ДатаНачала,
	|		Удержания.Контрагент КАК Контрагент,
	|		Удержания.ВидОперации КАК ВидОперации,
	|		Удержания.Сумма КАК Сумма
	|	ИЗ
	|		ВТУдержаннаяЗарплата КАК Удержания
	|	ГДЕ
	|		НЕ Удержания.ИдентификаторСтроки В (&ОбработанныеСтроки)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Удержания.Сотрудник,
	|		Удержания.ФизическоеЛицо,
	|		Удержания.Подразделение,
	|		Удержания.ПодразделениеУчетаЗатрат,
	|		Удержания.ДатаНачала,
	|		Удержания.Контрагент,
	|		Удержания.ВидОперации,
	|		Удержания.Сумма
	|	ИЗ
	|		ВТНоваяТаблицаУдержаний КАК Удержания) КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО Удержания.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО Удержания.ПодразделениеУчетаЗатрат = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.Сотрудник,
	|	Удержания.Подразделение,
	|	Удержания.Контрагент,
	|	Удержания.ФизическоеЛицо,
	|	Удержания.ВидОперации,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	Удержания.ДатаНачала,
	|	Удержания.ПодразделениеУчетаЗатрат
	|
	|ИМЕЮЩИЕ
	|	СУММА(Удержания.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	ВидОперации";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	УдержаннаяЗарплата = ОтражениеЗарплатыВБухучете.НоваяТаблицаБухучетУдержаннаяЗарплата();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(УдержаннаяЗарплата.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат УдержаннаяЗарплата;	

КонецФункции 


#КонецОбласти

#Область ОбслуживаниеРаспределенияРезультатов

Функция БазаДляРаспределенияНДФЛ(МенеджерВременныхТаблиц, МассивФизическихЛиц, ПериодРегистрации, Организация, ОкончательныйРасчет, ИсключаемыйРегистратор)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ИсключаемыеРегистраторы = Новый Массив;
	ИсключаемыеРегистраторы.Добавить(ИсключаемыйРегистратор);
	
	Если ОкончательныйРасчет Тогда
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ФизическиеЛица", МассивФизическихЛиц);
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БухучетНачисления.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
		|ГДЕ
		|	БухучетНачисления.НеУчитыватьВРаспределенииПриОкончательномРасчете
		|	И БухучетНачисления.Период = &ПериодРегистрации
		|	И БухучетНачисления.ФизическоеЛицо В(&ФизическиеЛица)
		|	И БухучетНачисления.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БухучетНачисления.Регистратор
		|ИЗ
		|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
		|ГДЕ
		|	БухучетНачисления.ФизическоеЛицо В(&ФизическиеЛица)
		|	И БухучетНачисления.Организация = &Организация
		|	И БухучетНачисления.ПервичныйРегистратор = &ИсключаемыйРегистратор";
		Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключаемыеРегистраторы, Регистраторы, Истина);
		
	КонецЕсли;
		
	УчетНДФЛ.СоздатьВТСведенияОДоходахДляРаспределенияНДФЛ(МенеджерВременныхТаблиц, Организация, ПериодРегистрации, ИсключаемыеРегистраторы, МассивФизическихЛиц, ОкончательныйРасчет);
	
	УдалитьВТ = Новый Массив;
	УдалитьВТ.Добавить("ВТСведенияОДоходахДляРаспределенияНДФЛ");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ГрантыНеоблагаемыеНДФЛ") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГрантыНеоблагаемыеНДФЛ");
		Если Модуль.ИспользуютсяГрантыНеоблагаемыеНДФЛ() Тогда
			Модуль.УдалитьСуммыЗаСчетГрантовВТаблицеБухучетНачислений(Запрос.МенеджерВременныхТаблиц, "ВТБухучетНачисленийДляБазыНДФЛ");
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.Территория КАК Территория,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийБазаНДФЛ
	|ИЗ
	|	ВТБухучетНачисленийДляБазыНДФЛ КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Территория,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.Территория КАК Территория,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетСвод
	|ИЗ
	|	ВТБухучетНачисленийДляБазыНДФЛ КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.Территория,
	|	БухучетНачислений.Начисление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БазаНДФЛ.Сотрудник КАК Сотрудник,
	|	БазаНДФЛ.Подразделение КАК Подразделение,
	|	БазаНДФЛ.Территория КАК Территория,
	|	БазаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БазаНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БазаНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(БазаНДФЛ.Сумма) КАК Сумма,
	|	БазаНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	БазаНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	БазаНДФЛ.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода
	|ИЗ
	|	(ВЫБРАТЬ
	|		База.Сотрудник КАК Сотрудник,
	|		База.Подразделение КАК Подразделение,
	|		База.Территория КАК Территория,
	|		База.ФизическоеЛицо КАК ФизическоеЛицо,
	|		База.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|		База.КатегорияДохода КАК КатегорияДохода,
	|		БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|		БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|		ВЫБОР
	|			КОГДА БухучетНачисленийСвод.Сумма = 0
	|				ТОГДА 0
	|			ИНАЧЕ База.Сумма * (ВЫРАЗИТЬ(БухучетНачислений.Сумма / БухучетНачисленийСвод.Сумма КАК ЧИСЛО(25, 10)))
	|		КОНЕЦ КАК Сумма,
	|		База.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода
	|	ИЗ
	|		ВТСведенияОДоходахДляРаспределенияНДФЛ КАК База
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачисленийБазаНДФЛ КАК БухучетНачислений
	|			ПО База.Сотрудник = БухучетНачислений.Сотрудник
	|				И База.Начисление = БухучетНачислений.Начисление
	|				И База.Подразделение = БухучетНачислений.Подразделение
	|				И База.Территория = БухучетНачислений.Территория
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетСвод КАК БухучетНачисленийСвод
	|			ПО База.Сотрудник = БухучетНачисленийСвод.Сотрудник
	|				И База.Начисление = БухучетНачисленийСвод.Начисление
	|				И База.Подразделение = БухучетНачисленийСвод.Подразделение
	|				И База.Территория = БухучетНачисленийСвод.Территория) КАК БазаНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	БазаНДФЛ.ФизическоеЛицо,
	|	БазаНДФЛ.Сотрудник,
	|	БазаНДФЛ.Подразделение,
	|	БазаНДФЛ.Территория,
	|	БазаНДФЛ.СтатьяФинансирования,
	|	БазаНДФЛ.СтатьяРасходов,
	|	БазаНДФЛ.ДатаПолученияДохода,
	|	БазаНДФЛ.КатегорияДохода,
	|	БазаНДФЛ.ДоходМежрасчетногоПериода
	|
	|ИМЕЮЩИЕ
	|	СУММА(БазаНДФЛ.Сумма) <> 0";
	
	УдалитьВТ.Добавить("ВТБухучетСвод");
	УдалитьВТ.Добавить("ВТБухучетНачисленийБазаНДФЛ");
	БазаРасчетаНДФЛ = Запрос.Выполнить().Выгрузить();
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
	Возврат БазаРасчетаНДФЛ;

КонецФункции

Функция ДанныеДляРаспределенияНДФЛ(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений, МассивФизическихЛиц, МассивРаспределяемыхУдержаний, ПериодРегистрации, Организация, ОкончательныйРасчет, ИсключаемыйРегистратор, РегистраторыНДФЛОбновленияБухучета)

	ДанныеДляРаспределенияНДФЛ = Новый Структура("БазаВсеНачисления,УжеУдержано");
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	УдалитьВТ = Новый Массив;
	
	Если ОкончательныйРасчет Тогда
		
		ИсключаемыеРегистраторы = Новый Массив;
		ИсключаемыеРегистраторы.Добавить(ИсключаемыйРегистратор);
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ФизическиеЛица", МассивФизическихЛиц);
		Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БухучетНачисления.Регистратор
		|ИЗ
		|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
		|ГДЕ
		|	БухучетНачисления.ФизическоеЛицо В(&ФизическиеЛица)
		|	И БухучетНачисления.Организация = &Организация
		|	И БухучетНачисления.ПервичныйРегистратор = &ИсключаемыйРегистратор";
		Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключаемыеРегистраторы, Регистраторы);
		
		// Получим уже зарегистрированное распределение начислений по статьям финансирования, без учета текущего документа и
		// без учета начислений межрасчетного периода.
		СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, МассивФизическихЛиц, ИсключаемыеРегистраторы, Истина, Истина);
		
		Если РегистраторыНДФЛОбновленияБухучета <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключаемыеРегистраторы, РегистраторыНДФЛОбновленияБухучета);
		КонецЕсли;
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ИсключаемыеРегистраторы);
		Запрос.УстановитьПараметр("Удержания", МассивРаспределяемыхУдержаний);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияУдержания.Сотрудник КАК Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК Территория,
		|	НачисленияУдержания.Подразделение КАК Подразделение,
		|	НачисленияУдержания.НачислениеУдержание КАК ВидУдержания,
		|	НачисленияУдержания.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	НачисленияУдержания.СтатьяФинансирования КАК СтатьяФинансирования,
		|	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
		|	НачисленияУдержания.КатегорияДохода КАК КатегорияДохода,
		|	СУММА(НачисленияУдержания.Сумма) КАК Сумма
		|ИЗ
		|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
		|ГДЕ
		|	НачисленияУдержания.Организация = &Организация
		|	И НачисленияУдержания.НачислениеУдержание В(&Удержания)
		|	И НачисленияУдержания.Период = &ПериодРегистрации
		|	И НачисленияУдержания.ФизическоеЛицо В(&ФизическиеЛица)
		|	И НЕ НачисленияУдержания.НеУчитыватьВРаспределенииПриОкончательномРасчете
		|	И НЕ НачисленияУдержания.Регистратор В (&ИсключаемыеРегистраторы)
		|
		|СГРУППИРОВАТЬ ПО
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.СтатьяФинансирования,
		|	НачисленияУдержания.СтатьяРасходов,
		|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации,
		|	НачисленияУдержания.ДатаПолученияДохода,
		|	НачисленияУдержания.КатегорияДохода
		|
		|ИМЕЮЩИЕ
		|	СУММА(НачисленияУдержания.Сумма) <> 0";
		
		ДанныеДляРаспределенияНДФЛ.УжеУдержано = Запрос.Выполнить().Выгрузить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачислений.Сотрудник КАК Сотрудник,
		|	БухучетНачислений.Территория КАК Территория,
		|	БухучетНачислений.Подразделение КАК Подразделение,
		|	БухучетНачислений.Начисление КАК Начисление,
		|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
		|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
		|	СУММА(БухучетНачислений.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТБухучетНачисленийДляБазыНДФЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		БухучетНачисления.Сотрудник КАК Сотрудник,
		|		ВЫБОР
		|			КОГДА БухучетНачисления.ТерриторияВыполненияРаботВОрганизации ЕСТЬ НЕ NULL 
		|					И БухучетНачисления.ТерриторияВыполненияРаботВОрганизации <> НЕОПРЕДЕЛЕНО
		|					И БухучетНачисления.ТерриторияВыполненияРаботВОрганизации <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
		|				ТОГДА БухучетНачисления.ТерриторияВыполненияРаботВОрганизации
		|			ИНАЧЕ БухучетНачисления.Подразделение
		|		КОНЕЦ КАК Территория,
		|		БухучетНачисления.НачислениеУдержание КАК Начисление,
		|		БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|		БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
		|		БухучетНачисления.ДатаНачала КАК ДатаНачала,
		|		БухучетНачисления.Сумма КАК Сумма,
		|		БухучетНачисления.Подразделение КАК Подразделение
		|	ИЗ
		|		ВТБухучетНачисленийПоСтатьямФинансирования КАК БухучетНачисления
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БухучетНачисления.Сотрудник,
		|		ВЫБОР
		|			КОГДА БухучетНачисления.Территория ЕСТЬ НЕ NULL 
		|					И БухучетНачисления.Территория <> НЕОПРЕДЕЛЕНО
		|					И БухучетНачисления.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
		|				ТОГДА БухучетНачисления.Территория
		|			ИНАЧЕ БухучетНачисления.Подразделение
		|		КОНЕЦ,
		|		БухучетНачисления.Начисление,
		|		БухучетНачисления.ФизическоеЛицо,
		|		БухучетНачисления.СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов,
		|		БухучетНачисления.ДатаНачала,
		|		БухучетНачисления.Сумма,
		|		БухучетНачисления.Подразделение
		|	ИЗ
		|		ВТБухучетНачисленийТекущегоДокумента КАК БухучетНачисления) КАК БухучетНачислений
		|
		|СГРУППИРОВАТЬ ПО
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов,
		|	БухучетНачислений.Территория,
		|	БухучетНачислений.ДатаНачала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетНачисленийДляБазыНДФЛ.Сотрудник КАК Сотрудник,
		|	БухучетНачисленийДляБазыНДФЛ.Территория КАК Территория,
		|	БухучетНачисленийДляБазыНДФЛ.Подразделение КАК Подразделение,
		|	БухучетНачисленийДляБазыНДФЛ.Начисление КАК Начисление,
		|	БухучетНачисленийДляБазыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачисленийДляБазыНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачисленийДляБазыНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетНачисленийДляБазыНДФЛ.Сумма КАК Сумма
		|ИЗ
		|	ВТБухучетНачисленийДляБазыНДФЛ КАК БухучетНачисленийДляБазыНДФЛ
		|ГДЕ
		|	БухучетНачисленийДляБазыНДФЛ.Сумма <> 0";
		
		УдалитьВТ.Добавить("ВТБухучетНачисленийПоСтатьямФинансирования");
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачисления.Сотрудник КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА БухучетНачисления.Территория ЕСТЬ НЕ NULL 
		|				И БухучетНачисления.Территория <> НЕОПРЕДЕЛЕНО
		|				И БухучетНачисления.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
		|			ТОГДА БухучетНачисления.Территория
		|		ИНАЧЕ БухучетНачисления.Подразделение
		|	КОНЕЦ КАК Территория,
		|	БухучетНачисления.Подразделение КАК Подразделение,
		|	БухучетНачисления.Начисление КАК Начисление,
		|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетНачисления.ДатаНачала КАК ДатаНачала,
		|	СУММА(БухучетНачисления.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТБухучетНачисленийДляБазыНДФЛ
		|ИЗ
		|	ВТБухучетНачисленийТекущегоДокумента КАК БухучетНачисления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА БухучетНачисления.Территория ЕСТЬ НЕ NULL 
		|				И БухучетНачисления.Территория <> НЕОПРЕДЕЛЕНО
		|				И БухучетНачисления.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
		|			ТОГДА БухучетНачисления.Территория
		|		ИНАЧЕ БухучетНачисления.Подразделение
		|	КОНЕЦ,
		|	БухучетНачисления.Подразделение,
		|	БухучетНачисления.Начисление,
		|	БухучетНачисления.ДатаНачала,
		|	БухучетНачисления.ФизическоеЛицо,
		|	БухучетНачисления.Сотрудник,
		|	БухучетНачисления.СтатьяРасходов,
		|	БухучетНачисления.СтатьяФинансирования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетНачисленийДляБазыНДФЛ.Сотрудник КАК Сотрудник,
		|	БухучетНачисленийДляБазыНДФЛ.Территория КАК Территория,
		|	БухучетНачисленийДляБазыНДФЛ.Подразделение КАК Подразделение,
		|	БухучетНачисленийДляБазыНДФЛ.Начисление КАК Начисление,
		|	БухучетНачисленийДляБазыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачисленийДляБазыНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачисленийДляБазыНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетНачисленийДляБазыНДФЛ.Сумма КАК Сумма
		|ИЗ
		|	ВТБухучетНачисленийДляБазыНДФЛ КАК БухучетНачисленийДляБазыНДФЛ
		|ГДЕ
		|	БухучетНачисленийДляБазыНДФЛ.Сумма <> 0";
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийТекущегоДокумента", ИмяВТБухучетНачислений);
	ДанныеДляРаспределенияНДФЛ.БазаВсеНачисления = Запрос.Выполнить().Выгрузить();
	
	Если УдалитьВТ.Количество()>0 Тогда
		ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	КонецЕсли;
	
	Возврат ДанныеДляРаспределенияНДФЛ;

КонецФункции

Процедура РаспределитьНДФЛПоБазе(РезультатыРаспределения, ТаблицаДляРаспределения, База, БазаВсеНачисления, СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации, ОтборТолькоПоФизлицу = Ложь)
	
	Если ТаблицаДляРаспределения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиБезБазы = Новый Массив;
	Отбор = Новый Структура("ФизическоеЛицо");
	
	Для Каждого СтрокаНДФЛ Из ТаблицаДляРаспределения Цикл
		
		// При обработке "старых" данных, у которых не заполнено поле СтрокаНДФЛ.ДатаПолученияДохода
		// оставляем прежнее поведение, не учитываем ранее удержанные суммы и из базы исключаем строки с признаком ДоходМежрасчетногоПериода.
		
		УчитыватьДатуПолученияДохода = ЗначениеЗаполнено(СтрокаНДФЛ.ДатаПолученияДохода) И СтрокаНДФЛ.ДатаПолученияДохода >= УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев();
		УчитыватьКатегориюДохода     = УчитыватьДатуПолученияДохода И ЗначениеЗаполнено(СтрокаНДФЛ.КатегорияДохода) И СтрокаНДФЛ.ДатаПолученияДохода >= '20170101';
		УчитыватьУжеРаспределенные   = (СтрокаНДФЛ.Сумма <> 0) И УчитыватьДатуПолученияДохода;
		
		Отбор.ФизическоеЛицо = СтрокаНДФЛ.ФизическоеЛицо;
		СтрокиРаспределения = Новый Массив;
		
		Если ОтборТолькоПоФизлицу Тогда
			
			// распределение корректировок выплаты
			СтрокиРаспределения = База.НайтиСтроки(Отбор);
			Если СтрокиРаспределения.Количество() = 0 Тогда
				СтрокиРаспределения = БазаВсеНачисления.НайтиСтроки(Отбор);
			КонецЕсли;
			
		Иначе // распределение строк НДФЛ
			
			СтрокиБазыПоФизлицу = База.НайтиСтроки(Отбор);
			
			Если Не УчитыватьДатуПолученияДохода Тогда
				
				СтрокиРаспределенияБезТерритории = Новый Массив;
				Для каждого СтрокаТЗ Из СтрокиБазыПоФизлицу Цикл
					Если Не СтрокаТЗ.ДоходМежрасчетногоПериода Тогда 
						Если СтрокаТЗ.Территория = СтрокаНДФЛ.Территория Тогда
							СтрокиРаспределения.Добавить(СтрокаТЗ);
						КонецЕсли;
						СтрокиРаспределенияБезТерритории.Добавить(СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				
				Если СтрокиРаспределения.Количество() = 0 Тогда
					СтрокиРаспределения = СтрокиРаспределенияБезТерритории;	
				КонецЕсли;
				
			ИначеЕсли Не УчитыватьКатегориюДохода Тогда
				
				СтрокиРаспределенияБезДаты = Новый Массив;
				Для каждого СтрокаТЗ Из СтрокиБазыПоФизлицу Цикл
					Если СтрокаТЗ.Территория = СтрокаНДФЛ.Территория И СтрокаТЗ.ДатаПолученияДохода = СтрокаНДФЛ.ДатаПолученияДохода Тогда
						СтрокиРаспределения.Добавить(СтрокаТЗ);	
					ИначеЕсли СтрокаТЗ.Территория = СтрокаНДФЛ.Территория Тогда
						СтрокиРаспределенияБезДаты.Добавить(СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				
				Если СтрокиРаспределения.Количество() = 0 Тогда
					СтрокиРаспределения = СтрокиРаспределенияБезДаты;
					Если СтрокиРаспределения.Количество() = 0 Тогда
						СтрокиРаспределения = СтрокиБазыПоФизлицу;
					КонецЕсли;
				КонецЕсли;
				
			Иначе // учитываем дату получения дохода и категорию дохода
				
				СтрокиРаспределенияБезДатыИКатегорий = Новый Массив;
				СтрокиРаспределенияБезКатегорий = Новый Массив;
				Для каждого СтрокаТЗ Из СтрокиБазыПоФизлицу Цикл
					Если СтрокаТЗ.Территория = СтрокаНДФЛ.Территория И СтрокаТЗ.ДатаПолученияДохода = СтрокаНДФЛ.ДатаПолученияДохода  И СтрокаТЗ.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода Тогда
						СтрокиРаспределения.Добавить(СтрокаТЗ);
					ИначеЕсли СтрокаТЗ.Территория = СтрокаНДФЛ.Территория И СтрокаТЗ.ДатаПолученияДохода = СтрокаНДФЛ.ДатаПолученияДохода Тогда
						СтрокиРаспределенияБезКатегорий.Добавить(СтрокаТЗ);	
					ИначеЕсли СтрокаТЗ.Территория = СтрокаНДФЛ.Территория Тогда
						СтрокиРаспределенияБезДатыИКатегорий.Добавить(СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				
				Если СтрокиРаспределения.Количество() = 0 Тогда
					СтрокиРаспределения = СтрокиРаспределенияБезКатегорий;
					Если СтрокиРаспределения.Количество() = 0 Тогда
						СтрокиРаспределения = СтрокиРаспределенияБезДатыИКатегорий;
						Если СтрокиРаспределения.Количество() = 0 Тогда
							СтрокиРаспределения = СтрокиБазыПоФизлицу;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СтрокиРаспределения.Количество() = 0 Тогда
				// не нашли строки распределения по базе
				СтрокиБазыПоФизлицу = БазаВсеНачисления.НайтиСтроки(Отбор);
				Для каждого СтрокаТЗ Из СтрокиБазыПоФизлицу Цикл
					Если СтрокаТЗ.Территория = СтрокаНДФЛ.Территория Тогда
						СтрокиРаспределения.Добавить(СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				Если СтрокиРаспределения.Количество() = 0 Тогда
					СтрокиРаспределения = СтрокиБазыПоФизлицу;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрокиРаспределения.Количество() = 0 Тогда
			СтрокиБезБазы.Добавить(СтрокаНДФЛ);
			Продолжить;
		КонецЕсли;
		
		// Ранее удержано по этому виду удержания
		РанееУдержано = 0;
		СтрокиУжеУдержаноПоФизическомуЛицу = СтрокиУжеУдержаноПоФизическимЛицам[СтрокаНДФЛ.ФизическоеЛицо];
		Если УчитыватьУжеРаспределенные И СтрокиУжеУдержаноПоФизическомуЛицу <> Неопределено Тогда
			Для Каждого СтрокаУжеУдержаноПоФизическомуЛицу Из СтрокиУжеУдержаноПоФизическомуЛицу Цикл
				Если СтрокаУжеУдержаноПоФизическомуЛицу.ВидУдержания = СтрокаНДФЛ.ВидУдержания 
 						И СтрокаУжеУдержаноПоФизическомуЛицу.ДатаПолученияДохода = СтрокаНДФЛ.ДатаПолученияДохода
						И СтрокаУжеУдержаноПоФизическомуЛицу.Территория = СтрокаНДФЛ.Территория
						И (Не УчитыватьКатегориюДохода Или СтрокаУжеУдержаноПоФизическомуЛицу.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода) Тогда
					РанееУдержано = РанееУдержано + СтрокаУжеУдержаноПоФизическомуЛицу.Сумма;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Распределяем пропорционально суммам в найденных строках.
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиРаспределения, "Сумма");
		// распределеяем суммы с учетом ранее удержанного
		РаспределенныеСуммы = ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(СтрокаНДФЛ.Сумма + РанееУдержано, Коэффициенты, 0);
		
		Если РаспределенныеСуммы <> Неопределено Тогда
			
			// минусуем уже удержанные суммы
			Если УчитыватьУжеРаспределенные И СтрокиУжеУдержаноПоФизическомуЛицу <> Неопределено Тогда
				
				Для Каждого СтрокаУжеУдержаноПоФизическомуЛицу Из СтрокиУжеУдержаноПоФизическомуЛицу Цикл
					Если СтрокаУжеУдержаноПоФизическомуЛицу.ВидУдержания = СтрокаНДФЛ.ВидУдержания 
						И СтрокаУжеУдержаноПоФизическомуЛицу.ДатаПолученияДохода = СтрокаНДФЛ.ДатаПолученияДохода
						И СтрокаУжеУдержаноПоФизическомуЛицу.Территория = СтрокаНДФЛ.Территория
						И (Не УчитыватьКатегориюДохода Или СтрокаУжеУдержаноПоФизическомуЛицу.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода) Тогда
						
						НоваяСтрока = РезультатыРаспределения.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУжеУдержаноПоФизическомуЛицу);
						
						НоваяСтрока.Результат 			= - СтрокаУжеУдержаноПоФизическомуЛицу.Сумма;
						НоваяСтрока.ИдентификаторСтроки = СтрокаНДФЛ.ИдентификаторСтроки;
						
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			// плюсуем распределенные суммы
			Для Индекс = 0 По СтрокиРаспределения.Количество() - 1 Цикл
				
				СтрокаРаспределения = СтрокиРаспределения[Индекс];
				НоваяСтрока = РезультатыРаспределения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределения);
				
				НоваяСтрока.ВидУдержания        = СтрокаНДФЛ.ВидУдержания;
				НоваяСтрока.ИдентификаторСтроки = СтрокаНДФЛ.ИдентификаторСтроки;
				НоваяСтрока.Результат           = РаспределенныеСуммы[Индекс];
				
			КонецЦикла;
			
		Иначе
			
			НоваяСтрока = РезультатыРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиРаспределения[0]);
			
			НоваяСтрока.ВидУдержания        = СтрокаНДФЛ.ВидУдержания;
			НоваяСтрока.ИдентификаторСтроки = СтрокаНДФЛ.ИдентификаторСтроки;
			НоваяСтрока.Результат           = СтрокаНДФЛ.Сумма;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СвернутьРезультатыРаспределения(РезультатыРаспределения);
	
	Если СтрокиБезБазы.Количество() > 0 Тогда
		РаспределитьУдержанияПоБазеПоУмолчанию(РезультатыРаспределения, СтрокиБезБазы, Организация, ПериодРегистрации);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру с таблицами значений, необходимые для распределения удержаний по рабочим местам
// Данные с базовыми начислениями
//	Сотрудник
//	ФизическоеЛицо
//	Подразделение
//	Начисление
//	СтатьяФинансирования
//	СтатьяРасходов
//	Сумма
//
// Данные с результатами выполненнных ранее удержаний
//
// Параметры:
//	МенеджерВременныхТаблиц
//	ИмяВТБухучетНачислений - имя ВТ с бухучетом начислений
//	МассивФизическихЛиц
//	МассивРаспределяемыхУдержаний
//	ПериодРегистрации
//	Организация
//  ОкончательныйРасчет - признак того, что документ выполняет окончательный расчет удержаний
//  ИсключаемыйРегистратор - ссылка на текущий документ, для исключения его движений
//	РегистраторыУдержанийОбновленияБухучета - Неопределено или массив ссылок на регистраторы
//												которые необходимо исключить при выборке уже зарегистрированных удержаний.
//
// Возвращаемое значение: структура со свойствами
//		БазовыеНачисления
//		УжеУдержано
//
Функция ДанныеДляРаспределенияУдержаний(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений, МассивФизическихЛиц, МассивРаспределяемыхУдержаний, ПериодРегистрации, Организация, ОкончательныйРасчет, ИсключаемыйРегистратор, РегистраторыУдержанийОбновленияБухучета)
	
	ДанныеДляУчетаУдержаний = Новый Структура("БазовыеНачисления,УжеУдержано");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
	
	Если ОкончательныйРасчет Тогда   
		
		ИсключаемыеРегистраторы = Новый Массив;
		ИсключаемыеРегистраторы.Добавить(ИсключаемыйРегистратор);
		Если РегистраторыУдержанийОбновленияБухучета <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключаемыеРегистраторы, РегистраторыУдержанийОбновленияБухучета);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ИсключаемыеРегистраторы", ИсключаемыеРегистраторы);
		Запрос.УстановитьПараметр("Удержания", МассивРаспределяемыхУдержаний);
		Запрос.УстановитьПараметр("ФизическиеЛица", МассивФизическихЛиц);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.НачислениеУдержание КАК ВидУдержания,
		|	НачисленияУдержания.СтатьяФинансирования,
		|	НачисленияУдержания.СтатьяРасходов,
		|	НачисленияУдержания.ДокументОснование,
		|	НачисленияУдержания.Контрагент,
		|	СУММА(НачисленияУдержания.Сумма) КАК Сумма
		|ИЗ
		|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
		|ГДЕ
		|	НачисленияУдержания.Организация = &Организация
		|	И НачисленияУдержания.НачислениеУдержание В(&Удержания)
		|	И НачисленияУдержания.Период = &ПериодРегистрации
		|	И НачисленияУдержания.ФизическоеЛицо В(&ФизическиеЛица)
		|	И НЕ НачисленияУдержания.НеУчитыватьВРаспределенииПриОкончательномРасчете
		|	И НЕ НачисленияУдержания.Регистратор В (&ИсключаемыеРегистраторы)
		|
		|СГРУППИРОВАТЬ ПО
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.СтатьяФинансирования,
		|	НачисленияУдержания.СтатьяРасходов,
		|	НачисленияУдержания.ДокументОснование,
		|	НачисленияУдержания.Контрагент";
		
		ДанныеДляУчетаУдержаний.УжеУдержано = Запрос.Выполнить().Выгрузить();
		
		// Получим уже зарегистрированное распределение начислений по статьям финансирования, без учета текущего документа,
		// без учета начислений межрасчетного периода и только по "зарплатным" доходам.
		СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, МассивФизическихЛиц, ИсключаемыйРегистратор, Истина, Истина);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(Сотрудники.ГоловнойСотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК ГоловнойСотрудник,
		|	БухучетНачисления.Сотрудник КАК Сотрудник,
		|	БухучетНачисления.Подразделение КАК Подразделение,
		|	БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачисления.Начисление КАК Начисление,
		|	БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
		|	СУММА(БухучетНачисления.Сумма) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		БухучетНачисления.Сотрудник КАК Сотрудник,
		|		БухучетНачисления.Подразделение КАК Подразделение,
		|		БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|		БухучетНачисления.НачислениеУдержание КАК Начисление,
		|		БухучетНачисления.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|		БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
		|		БухучетНачисления.Сумма КАК Сумма
		|	ИЗ
		|		ВТБухучетНачисленийПоСтатьямФинансирования КАК БухучетНачисления
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БухучетНачисления.Сотрудник,
		|		БухучетНачисления.Подразделение,
		|		БухучетНачисления.ФизическоеЛицо,
		|		БухучетНачисления.Начисление,
		|		БухучетНачисления.ПодразделениеУчетаЗатрат,
		|		БухучетНачисления.СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов,
		|		БухучетНачисления.Сумма
		|	ИЗ
		|		ВТБухучетНачисленийТекущегоДокумента КАК БухучетНачисления) КАК БухучетНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО БухучетНачисления.Сотрудник = Сотрудники.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(Сотрудники.ГоловнойСотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)),
		|	БухучетНачисления.Сотрудник,
		|	БухучетНачисления.Подразделение,
		|	БухучетНачисления.ФизическоеЛицо,
		|	БухучетНачисления.Начисление,
		|	БухучетНачисления.СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов,
		|	БухучетНачисления.ПодразделениеУчетаЗатрат
		|
		|ИМЕЮЩИЕ
		|	СУММА(БухучетНачисления.Сумма) <> 0";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(Сотрудники.ГоловнойСотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК ГоловнойСотрудник,
		|	БухучетНачислений.Сотрудник КАК Сотрудник,
		|	БухучетНачислений.Подразделение КАК Подразделение,
		|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачислений.Начисление КАК Начисление,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
		|	СУММА(БухучетНачислений.Сумма) КАК Сумма
		|ИЗ
		|	ВТБухучетНачисленийТекущегоДокумента КАК БухучетНачислений
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО БухучетНачислений.Сотрудник = Сотрудники.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(Сотрудники.ГоловнойСотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)),
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов
		|
		|ИМЕЮЩИЕ
		|	СУММА(БухучетНачислений.Сумма) <> 0";
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийТекущегоДокумента", ИмяВТБухучетНачислений);
	
	ДанныеДляУчетаУдержаний.БазовыеНачисления = Запрос.Выполнить().Выгрузить();
	
	Возврат ДанныеДляУчетаУдержаний;
	
КонецФункции

// Выполняет распределение удержаний по статьям
//	Параметры
//		БухучетУдержаний, таблица значений, которая заполняется результатами отражения удержаний см описание НоваяТаблицаРаспределениеРезультатовУдержаний
//		ИсходныеДанные - структура, , см ОписаниеИсходныхДанныхДляОтраженияУдержанийВБухучете
//		БазовыеНачисления - таблица значений
//				* ГоловнойСотрудник
//				* Сотрудник
//				* Подразделение
//				* ФизическоеЛицо
//				* Начисление
//				* СтатьяФинансирования
//				* СтатьяРасходов
//				* Сумма
//		СтрокиУжеУдержаноПоФизическимЛицам - соответствие, 
//			Ключ - Физическое лицо
//			Значение - таблица значений, размер уже зарегистрированных удержаний
//				* Сотрудник
//				* ФизическоеЛицо
//				* Подразделение
//				* Удержание
//				* СтатьяФинансирования
//				* СтатьяРасходов
//				* ДокументОснование
//				* Контрагент
//				* Сумма
//
Процедура ВыполнитьРаспределениеУдержаний(БухучетУдержаний, ИсходныеДанные, БазовыеНачисления, СтрокиУжеУдержаноПоФизическимЛицам)
	
	ТаблицаУдержаний = ИсходныеДанные.ТаблицаУдержаний;
	Если ТаблицаУдержаний.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = ИсходныеДанные.МенеджерВременныхТаблиц;
	ПериодРегистрации       = ИсходныеДанные.МесяцНачисления;
	Организация      		= ИсходныеДанные.Организация;
	ВидыНачисленийДополненияРасчетнойБазы = ИсходныеДанные.ВидыНачисленийДополненияРасчетнойБазы;
	
	УдалитьВТ = Новый Массив;
	
	КатегорииОплатыБольничного = ПланыВидовРасчета.Начисления.КатегорииОплатыБольничного();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхтаблиц;
	Запрос.УстановитьПараметр("КатегорииБЛ", КатегорииОплатыБольничного);
	Запрос.УстановитьПараметр("Удержания", ТаблицаУдержаний);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо,
	|	Удержания.Сотрудник,
	|	Удержания.ВидУдержания,
	|	Удержания.Сумма КАК Сумма,
	|	Удержания.ДатаНачала,
	|	Удержания.ДатаОкончания,
	|	Удержания.ДокументОснование,
	|	Удержания.ПлатежныйАгент,
	|	Удержания.Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	Удержания.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТУдержанияДляРаспределения
	|ИЗ
	|	&Удержания КАК Удержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УдержанияДляРаспределения.ДокументОснование КАК ИсполнительныйДокумент,
	|	УдержанияДляРаспределения.ДатаНачала КАК Период
	|ПОМЕСТИТЬ ВТИсполнительныеДокументы
	|ИЗ
	|	ВТУдержанияДляРаспределения КАК УдержанияДляРаспределения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО УдержанияДляРаспределения.ВидУдержания = Удержания.Ссылка
	|			И (Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист))
	|ГДЕ
	|	УдержанияДляРаспределения.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержанияБазовыеВидыРасчета.Ссылка КАК Ссылка,
	|	УдержанияБазовыеВидыРасчета.ВидРасчета,
	|	УдержанияБазовыеВидыРасчета.Ссылка.КатегорияУдержания КАК КатегорияУдержания
	|ИЗ
	|	ПланВидовРасчета.Удержания.БазовыеВидыРасчета КАК УдержанияБазовыеВидыРасчета
	|ГДЕ
	|	УдержанияБазовыеВидыРасчета.Ссылка.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&КатегорииБЛ)";
	
	УдалитьВТ.Добавить("ВТУдержанияДляРаспределения");
	УдалитьВТ.Добавить("ВТИсполнительныеДокументы");
	
	Результат = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результат.ВГраница();
	ВыборкаБазовыеВР = Результат[КоличествоРезультатов-1].Выбрать();
	ВРОплатыБЛ = Результат[КоличествоРезультатов].Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	БазовыеВидыРасчета = Новый Соответствие;
	БазовыеВидыРасчетаБезБЛ = Новый Соответствие;
	Пока ВыборкаБазовыеВР.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ВРУдержание = ВыборкаБазовыеВР.Ссылка;
		
		МассивВР = Новый Массив;
		МассивВРБезБЛ = Новый Массив;
		Если ВыборкаБазовыеВР.КатегорияУдержания = Перечисления.КатегорииУдержаний.ИсполнительныйЛист Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивВР, ВидыНачисленийДополненияРасчетнойБазы);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивВРБезБЛ, ВидыНачисленийДополненияРасчетнойБазы);
			Пока ВыборкаБазовыеВР.Следующий() Цикл
				МассивВР.Добавить(ВыборкаБазовыеВР.ВидРасчета);
				Если ВРОплатыБЛ.Найти(ВыборкаБазовыеВР.ВидРасчета) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;	
				МассивВРБезБЛ.Добавить(ВыборкаБазовыеВР.ВидРасчета);
			КонецЦикла;
		Иначе
			Пока ВыборкаБазовыеВР.Следующий() Цикл
				МассивВР.Добавить(ВыборкаБазовыеВР.ВидРасчета);
			КонецЦикла;
		КонецЕсли;
			
		БазовыеВидыРасчета.Вставить(ВРУдержание, МассивВР);
		БазовыеВидыРасчетаБезБЛ.Вставить(ВРУдержание, МассивВРБезБЛ);
		
	КонецЦикла;

	// Запрашиваем условия удержаний.
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТИсполнительныеДокументы", "ИсполнительныйДокумент");
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних("УсловияУдержанияПоИсполнительномуДокументу", МенеджерВременныхТаблиц, Истина, ОписаниеФильтра);
	УдалитьВТ.Добавить("ВТУсловияУдержанияПоИсполнительномуДокументуСрезПоследних");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокУдержаний.ФизическоеЛицо,
	|	СписокУдержаний.Сотрудник,
	|	СписокУдержаний.ВидУдержания КАК ВидУдержания,
	|	СписокУдержаний.Сумма,
	|	СписокУдержаний.ДокументОснование,
	|	СписокУдержаний.ИдентификаторСтроки,
	|	СписокУдержаний.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(УсловияУдержанияПоИсполнительномуДокументу.УчитыватьБольничныеЛисты, ЛОЖЬ) КАК УчитыватьБольничныеЛисты,
	|	Удержания.ОкруглятьРезультатРаспределения
	|ИЗ
	|	ВТУдержанияДляРаспределения КАК СписокУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО СписокУдержаний.ВидУдержания = Удержания.Ссылка
	|			И (Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловияУдержанияПоИсполнительномуДокументуСрезПоследних КАК УсловияУдержанияПоИсполнительномуДокументу
	|		ПО СписокУдержаний.ДокументОснование = УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент
	|			И СписокУдержаний.ДатаНачала = УсловияУдержанияПоИсполнительномуДокументу.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокУдержаний.ФизическоеЛицо,
	|	СписокУдержаний.Сотрудник,
	|	СписокУдержаний.ВидУдержания КАК ВидУдержания,
	|	СписокУдержаний.Сумма,
	|	СписокУдержаний.ДокументОснование,
	|	СписокУдержаний.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СписокУдержаний.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(УдержанияИсполнительныйЛист.ИдентификаторСтроки, 0) КАК ИдентификаторСтрокиБазыУдержаний,
	|	Удержания.ОкруглятьРезультатРаспределения
	|ИЗ
	|	ВТУдержанияДляРаспределения КАК СписокУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО СписокУдержаний.ВидУдержания = Удержания.Ссылка
	|			И (Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержанияДляРаспределения КАК УдержанияИсполнительныйЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК УдержанияВторойСписок
	|			ПО УдержанияИсполнительныйЛист.ВидУдержания = УдержанияВторойСписок.Ссылка
	|				И (УдержанияВторойСписок.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист))
	|		ПО СписокУдержаний.ПлатежныйАгент = УдержанияИсполнительныйЛист.ПлатежныйАгент
	|			И СписокУдержаний.Получатель = УдержанияИсполнительныйЛист.Получатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторСтроки";
	
	Результат = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результат.ВГраница();
	ТаблицаИсполнительныеЛисты = Результат[КоличествоРезультатов-1].Выгрузить();
	РезультатВознагражденияПлатежногоАгента = Результат[КоличествоРезультатов];
	
	// Исполнительные листы
	Если ТаблицаИсполнительныеЛисты.Количество()>0 Тогда
		
		Отбор = Новый Структура("УчитыватьБольничныеЛисты", Истина);
		НайденныеСтроки = ТаблицаИсполнительныеЛисты.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество()>0 Тогда
			ТаблицаРаспределения = БухучетУдержаний.СкопироватьКолонки();
			РаспределитьУдержанияПоБазе(ТаблицаРаспределения, НайденныеСтроки, БазовыеНачисления, СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации, БазовыеВидыРасчета, Истина);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, БухучетУдержаний);
		КонецЕсли;
		
		Отбор.УчитыватьБольничныеЛисты = Ложь;
		НайденныеСтроки = ТаблицаИсполнительныеЛисты.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество()>0 Тогда
			ТаблицаРаспределения = БухучетУдержаний.СкопироватьКолонки();
			РаспределитьУдержанияПоБазе(ТаблицаРаспределения, НайденныеСтроки, БазовыеНачисления, СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации, БазовыеВидыРасчетаБезБЛ, Истина);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, БухучетУдержаний);
		КонецЕсли
		
	КонецЕсли;
	
	// Вознаграждение платежного агента, распределяем по базе исполнительных листов
	Если Не РезультатВознагражденияПлатежногоАгента.Пустой() Тогда
		
		Отбор = Новый Структура("ИдентификаторСтроки");
		Выборка = РезультатВознагражденияПлатежногоАгента.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("ИдентификаторСтроки") Цикл
			
			РезультатРаспределенияИЛ = БухучетУдержаний.СкопироватьКолонки();
			
			Пока Выборка.Следующий() Цикл
				Отбор.ИдентификаторСтроки = Выборка.ИдентификаторСтрокиБазыУдержаний;
				ТаблицаБазы = БухучетУдержаний.Скопировать(Отбор);
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаБазы, РезультатРаспределенияИЛ);
			КонецЦикла;
			
			КоллекцияДляРаспределения = Новый Массив;
			КоллекцияДляРаспределения.Добавить(Выборка);
			
			Если РезультатРаспределенияИЛ.Количество() = 0 Тогда
				// удерживаем из всех начислений
				ТаблицаРаспределения = БухучетУдержаний.СкопироватьКолонки();
				РаспределитьУдержанияПоБазе(ТаблицаРаспределения, КоллекцияДляРаспределения, БазовыеНачисления, СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации, , Истина);
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, БухучетУдержаний);
			Иначе
				
				РезультатРаспределенияИЛ.Колонки.Результат.Имя = "Сумма";
				РезультатРаспределенияИЛ.Колонки.Добавить("ГоловнойСотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
				РезультатРаспределенияИЛ.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
				РезультатРаспределенияИЛ.ЗаполнитьЗначения(Выборка.ФизическоеЛицо,"ФизическоеЛицо");
				
				ТаблицаРаспределения = БухучетУдержаний.СкопироватьКолонки();
				РаспределитьУдержанияПоБазе(ТаблицаРаспределения, КоллекцияДляРаспределения, РезультатРаспределенияИЛ, Новый Соответствие, Организация, ПериодРегистрации, , Истина);
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, БухучетУдержаний);
				
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	// остальные удержания
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокУдержаний.ФизическоеЛицо,
	|	СписокУдержаний.Сотрудник,
	|	СписокУдержаний.ВидУдержания,
	|	СписокУдержаний.ДатаНачала,
	|	СписокУдержаний.ДатаОкончания,
	|	СписокУдержаний.Сумма,
	|	СписокУдержаний.ДокументОснование,
	|	СписокУдержаний.ИдентификаторСтроки,
	|	СписокУдержаний.Подразделение КАК Подразделение,
	|	Удержания.СтратегияОтраженияВУчете,
	|	Удержания.СтатьяФинансирования,
	|	Удержания.СтатьяРасходов
	|ПОМЕСТИТЬ ВТПрочиеУдержанияДляРаспределения
	|ИЗ
	|	ВТУдержанияДляРаспределения КАК СписокУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО СписокУдержаний.ВидУдержания = Удержания.Ссылка
	|			И (НЕ Удержания.КатегорияУдержания В (ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента), ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПрочиеУдержания.ДокументОснование КАК ДокументОснование,
	|	ПрочиеУдержания.ВидУдержания КАК ВидУдержания,
	|	ПрочиеУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ПрочиеУдержания.ДатаНачала КАК ДатаНачала,
	|	МАКСИМУМ(БухучетПлановыхУдержаний.Период) КАК Период
	|ПОМЕСТИТЬ ВТМаксимальныеПериоды
	|ИЗ
	|	ВТПрочиеУдержанияДляРаспределения КАК ПрочиеУдержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхУдержаний КАК БухучетПлановыхУдержаний
	|		ПО ПрочиеУдержания.ФизическоеЛицо = БухучетПлановыхУдержаний.ФизическоеЛицо
	|			И ПрочиеУдержания.ДокументОснование = БухучетПлановыхУдержаний.ДокументОснование
	|			И ПрочиеУдержания.ВидУдержания = БухучетПлановыхУдержаний.Удержание
	|			И ПрочиеУдержания.ДатаНачала >= БухучетПлановыхУдержаний.Период
	|			И (ПрочиеУдержания.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеУдержания.ФизическоеЛицо,
	|	ПрочиеУдержания.ДокументОснование,
	|	ПрочиеУдержания.ВидУдержания,
	|	ПрочиеУдержания.ИдентификаторСтроки,
	|	ПрочиеУдержания.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА БухучетПлановыхУдержаний.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетПлановыхУдержаний.ДействуетДо <= МаксимальныеПериоды.ДатаНачала
	|			ТОГДА БухучетПлановыхУдержаний.СтатьяФинансированияПоОкончании
	|		ИНАЧЕ БухучетПлановыхУдержаний.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА БухучетПлановыхУдержаний.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетПлановыхУдержаний.ДействуетДо <= МаксимальныеПериоды.ДатаНачала
	|			ТОГДА БухучетПлановыхУдержаний.СтатьяРасходовПоОкончании
	|		ИНАЧЕ БухучетПлановыхУдержаний.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА БухучетПлановыхУдержаний.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
	|				И БухучетПлановыхУдержаний.ДействуетДо <= МаксимальныеПериоды.ДатаНачала
	|			ТОГДА БухучетПлановыхУдержаний.ИспользуетсяПоОкончании
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Используется
	|ПОМЕСТИТЬ ВТБухучетИзДокумента
	|ИЗ
	|	ВТМаксимальныеПериоды КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхУдержаний КАК БухучетПлановыхУдержаний
	|		ПО МаксимальныеПериоды.ФизическоеЛицо = БухучетПлановыхУдержаний.ФизическоеЛицо
	|			И МаксимальныеПериоды.Период = БухучетПлановыхУдержаний.Период
	|			И МаксимальныеПериоды.ДокументОснование = БухучетПлановыхУдержаний.ДокументОснование
	|			И МаксимальныеПериоды.ВидУдержания = БухучетПлановыхУдержаний.Удержание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеУдержания.ФизическоеЛицо,
	|	ПрочиеУдержания.Сотрудник,
	|	ПрочиеУдержания.ВидУдержания КАК ВидУдержания,
	|	ПрочиеУдержания.Сумма,
	|	ПрочиеУдержания.ДокументОснование,
	|	ПрочиеУдержания.ИдентификаторСтроки,
	|	ПрочиеУдержания.Подразделение,
	|	ПрочиеУдержания.СтатьяФинансирования,
	|	ПрочиеУдержания.СтатьяРасходов
	|ИЗ
	|	ВТПрочиеУдержанияДляРаспределения КАК ПрочиеУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетИзДокумента КАК БухучетИзДокумента
	|		ПО ПрочиеУдержания.ИдентификаторСтроки = БухучетИзДокумента.ИдентификаторСтроки
	|ГДЕ
	|	ПрочиеУдержания.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)
	|	И БухучетИзДокумента.ИдентификаторСтроки ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеУдержания.ФизическоеЛицо,
	|	ПрочиеУдержания.Сотрудник,
	|	ПрочиеУдержания.ВидУдержания КАК ВидУдержания,
	|	ПрочиеУдержания.Сумма,
	|	ПрочиеУдержания.ДокументОснование,
	|	ПрочиеУдержания.ИдентификаторСтроки,
	|	ПрочиеУдержания.Подразделение,
	|	БухучетИзДокумента.СтатьяФинансирования,
	|	БухучетИзДокумента.СтатьяРасходов
	|ИЗ
	|	ВТПрочиеУдержанияДляРаспределения КАК ПрочиеУдержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетИзДокумента КАК БухучетИзДокумента
	|		ПО ПрочиеУдержания.ИдентификаторСтроки = БухучетИзДокумента.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеУдержания.ФизическоеЛицо,
	|	ПрочиеУдержания.Сотрудник,
	|	ПрочиеУдержания.ВидУдержания КАК ВидУдержания,
	|	ПрочиеУдержания.Сумма,
	|	ПрочиеУдержания.ДокументОснование,
	|	ПрочиеУдержания.ИдентификаторСтроки,
	|	ПрочиеУдержания.Подразделение,
	|	ЕСТЬNULL(Удержания.ОкруглятьРезультатРаспределения, ЛОЖЬ) КАК ОкруглятьРезультатРаспределения
	|ИЗ
	|	ВТПрочиеУдержанияДляРаспределения КАК ПрочиеУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетИзДокумента КАК БухучетИзДокумента
	|		ПО ПрочиеУдержания.ИдентификаторСтроки = БухучетИзДокумента.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО ПрочиеУдержания.ВидУдержания = Удержания.Ссылка
	|ГДЕ
	|	ПрочиеУдержания.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)
	|	И БухучетИзДокумента.ИдентификаторСтроки ЕСТЬ NULL ";
	
	УдалитьВТ.Добавить("ВТПрочиеУдержанияДляРаспределения");  
	УдалитьВТ.Добавить("ВТБухучетИзДокумента");
	УдалитьВТ.Добавить("ВТМаксимальныеПериоды");
	
	Результат = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результат.ВГраница();
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
	// Обработаем удержания, для которых указан бухучет в виде расчета или в документе основании
	// для таких строк необходимо выполнить распределение только по рабочим местам.

	// удержания для которых указан бухучет в документе
	ПрочиеУдержания = Результат[КоличествоРезультатов-1].Выгрузить();
	// добавим удержания для которых указан бухучет в виде расчета
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат[КоличествоРезультатов-2].Выгрузить(), ПрочиеУдержания);
	Если ПрочиеУдержания.Количество()>0 Тогда
		ТаблицаРаспределения = БухучетУдержаний.СкопироватьКолонки();
		РаспределитьУдержанияПоБазе(ТаблицаРаспределения, ПрочиеУдержания, БазовыеНачисления, Новый Соответствие, Организация, ПериодРегистрации, Неопределено, Ложь, Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, БухучетУдержаний);
	КонецЕсли;
	
	// Обработаем удержания со стратегией по базе или по фактическим начислениям
	ПрочиеУдержания = Результат[КоличествоРезультатов].Выгрузить();
	Если ПрочиеУдержания.Количество()>0 Тогда
		ТаблицаРаспределения = БухучетУдержаний.СкопироватьКолонки();
		РаспределитьУдержанияПоБазе(ТаблицаРаспределения, ПрочиеУдержания, БазовыеНачисления, СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации, БазовыеВидыРасчета, Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, БухучетУдержаний);
	КонецЕсли;
	
КонецПроцедуры

Процедура РаспределитьУдержанияПоБазе(РезультатыРаспределения, ТаблицаУдержаний, БазаУдержаний, СтрокиУжеУдержаноПоФизическимЛицам, Организация, ПериодРегистрации, БазовыеВидыРасчета = Неопределено, ОкруглятьРезультатРаспределения = Ложь, РаспределятьТолькоПоРабочимМестам = Ложь)

	Если ТаблицаУдержаний.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если РаспределятьТолькоПоРабочимМестам Тогда
		// поля СтатьяФинансирования и СтатьяРасходов есть в таблице ТаблицаУдержаний
		ИменаКолонокСтрокРаспределения = "ГоловнойСотрудник,Сотрудник,Подразделение,ПодразделениеУчетаЗатрат";
	Иначе
		ИменаКолонокСтрокРаспределения = "ГоловнойСотрудник,Сотрудник,Подразделение,ПодразделениеУчетаЗатрат,СтатьяФинансирования,СтатьяРасходов";
	КонецЕсли;
	
	ПоляЗаполненияАналитики = "СтатьяФинансирования,СтатьяРасходов";
	
	СтрокиБезБазы = Новый Массив;
	ОтборСтрок = Новый Структура("ФизическоеЛицо");
	Для Каждого СтрокаУдержаний Из ТаблицаУдержаний Цикл
		
		УчитыватьУжеРаспределенные = (СтрокаУдержаний.Сумма <> 0);
		
		ОтборСтрок.ФизическоеЛицо = СтрокаУдержаний.ФизическоеЛицо;
		СтрокиРаспределения = БазаУдержаний.Скопировать(ОтборСтрок);

		Если СтрокиРаспределения.Количество() = 0 Тогда
			СтрокиБезБазы.Добавить(СтрокаУдержаний);
			Продолжить;
		КонецЕсли;
		
		Если БазовыеВидыРасчета <> Неопределено Тогда
			// отберем строки распределения по базовым начислениям
			БазовыеНачисления = БазовыеВидыРасчета[СтрокаУдержаний.ВидУдержания];
			Если БазовыеНачисления <> Неопределено И БазовыеНачисления.Количество()>0 Тогда
				НовыеСтрокиРаспределения = Новый Массив;
				Для каждого СтрокаРаспределения Из СтрокиРаспределения Цикл
					Если БазовыеНачисления.Найти(СтрокаРаспределения.Начисление) <> Неопределено Тогда
						НовыеСтрокиРаспределения.Добавить(СтрокаРаспределения);
					КонецЕсли;
				КонецЦикла;
				СтрокиРаспределения = БазаУдержаний.Скопировать(НовыеСтрокиРаспределения);
			КонецЕсли;
		КонецЕсли;
		СтрокиРаспределения.Свернуть(ИменаКолонокСтрокРаспределения,"Сумма");
		
		Если СтрокиРаспределения.Количество() = 0 Тогда
			СтрокиБезБазы.Добавить(СтрокаУдержаний);
			Продолжить;
		КонецЕсли;
		
		СтрокиРаспределенияБезУчетаПодразделения = Новый Массив;
		СтрокиРаспределенияСУчетомПодразделения = Новый Массив;
		СтрокиРаспределенияСУчетомОсновногоСотрудника = Новый Массив;
		Для Каждого СтрокаБазыПоФизическомуЛицу Из СтрокиРаспределения Цикл
			СтрокиРаспределенияБезУчетаПодразделения.Добавить(СтрокаБазыПоФизическомуЛицу);
			// Если подразделение совпадает, то эта строка с более точным источником распределением.
			Если СтрокаУдержаний.Подразделение = СтрокаБазыПоФизическомуЛицу.Подразделение Тогда
				СтрокиРаспределенияСУчетомПодразделения.Добавить(СтрокаБазыПоФизическомуЛицу);
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаУдержаний.Сотрудник) 
				И СтрокаУдержаний.Сотрудник = СтрокаБазыПоФизическомуЛицу.ГоловнойСотрудник Тогда
				СтрокиРаспределенияСУчетомОсновногоСотрудника.Добавить(СтрокаБазыПоФизическомуЛицу);
			КонецЕсли;
		КонецЦикла;
		
		СтрокиРаспределения = СтрокиРаспределенияСУчетомОсновногоСотрудника;
		Если СтрокиРаспределения.Количество() = 0 Тогда
			СтрокиРаспределения = СтрокиРаспределенияСУчетомПодразделения;
			Если СтрокиРаспределения.Количество() = 0 Тогда
				СтрокиРаспределения = СтрокиРаспределенияБезУчетаПодразделения;
			КонецЕсли;
		КонецЕсли;
		
		// Ранее удержано по этому виду удержания
		РанееУдержано = 0;
		СтрокиУжеУдержаноПоФизическомуЛицу = СтрокиУжеУдержаноПоФизическимЛицам[СтрокаУдержаний.ФизическоеЛицо];
		Если УчитыватьУжеРаспределенные И СтрокиУжеУдержаноПоФизическомуЛицу <> Неопределено Тогда
			Для Каждого СтрокаУжеУдержаноПоФизическомуЛицу Из СтрокиУжеУдержаноПоФизическомуЛицу Цикл
				Если СтрокаУжеУдержаноПоФизическомуЛицу.ВидУдержания = СтрокаУдержаний.ВидУдержания 
 						И СтрокаУжеУдержаноПоФизическомуЛицу.ДокументОснование = СтрокаУдержаний.ДокументОснование Тогда
					РанееУдержано = РанееУдержано + СтрокаУжеУдержаноПоФизическомуЛицу.Сумма;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Точность = ?(ОкруглятьРезультатРаспределения,?(СтрокаУдержаний.ОкруглятьРезультатРаспределения,0,2),2);
		
		// Распределяем пропорционально суммам в найденных строках.
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиРаспределения, "Сумма");
		// распределеяем суммы с учетом ранее удержанного
		РаспределенныеСуммы = ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(СтрокаУдержаний.Сумма + РанееУдержано, Коэффициенты, Точность);
		
		Если РаспределенныеСуммы <> Неопределено Тогда
			
			// минусуем уже удержанные суммы
			Если УчитыватьУжеРаспределенные И СтрокиУжеУдержаноПоФизическомуЛицу <> Неопределено Тогда
				Для Каждого СтрокаУжеУдержаноПоФизическомуЛицу Из СтрокиУжеУдержаноПоФизическомуЛицу Цикл
					Если СтрокаУжеУдержаноПоФизическомуЛицу.ВидУдержания = СтрокаУдержаний.ВидУдержания 
 							И СтрокаУжеУдержаноПоФизическомуЛицу.ДокументОснование = СтрокаУдержаний.ДокументОснование Тогда
							
						НоваяСтрока = РезультатыРаспределения.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУжеУдержаноПоФизическомуЛицу);
						Если РаспределятьТолькоПоРабочимМестам Тогда
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУдержаний, ПоляЗаполненияАналитики);
						КонецЕсли;
						
						НоваяСтрока.Результат 			= - СтрокаУжеУдержаноПоФизическомуЛицу.Сумма;
						НоваяСтрока.ВидУдержания        = СтрокаУдержаний.ВидУдержания;
						НоваяСтрока.ИдентификаторСтроки = СтрокаУдержаний.ИдентификаторСтроки;
						
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			// плюсуем распределенные суммы
			Для Индекс = 0 По СтрокиРаспределения.Количество() - 1 Цикл
				
				СтрокаРаспределения = СтрокиРаспределения[Индекс];
				НоваяСтрока = РезультатыРаспределения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределения);
				Если РаспределятьТолькоПоРабочимМестам Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУдержаний, ПоляЗаполненияАналитики);
				КонецЕсли;
				
				НоваяСтрока.ВидУдержания        = СтрокаУдержаний.ВидУдержания;
				НоваяСтрока.ИдентификаторСтроки = СтрокаУдержаний.ИдентификаторСтроки;
				НоваяСтрока.Результат           = РаспределенныеСуммы[Индекс];
				
			КонецЦикла;
			
		Иначе
			
			НоваяСтрока = РезультатыРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиРаспределения[0]);
			Если РаспределятьТолькоПоРабочимМестам Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУдержаний, ПоляЗаполненияАналитики);
			КонецЕсли;
			
			НоваяСтрока.ВидУдержания        = СтрокаУдержаний.ВидУдержания;
			НоваяСтрока.ИдентификаторСтроки = СтрокаУдержаний.ИдентификаторСтроки;
			НоваяСтрока.Результат           = СтрокаУдержаний.Сумма;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СвернутьРезультатыРаспределения(РезультатыРаспределения);
	
	Если СтрокиБезБазы.Количество() > 0 Тогда
		РаспределитьУдержанияПоБазеПоУмолчанию(РезультатыРаспределения, СтрокиБезБазы, Организация, ПериодРегистрации, Истина, РаспределятьТолькоПоРабочимМестам);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийСторно(МенеджерВременныхТаблиц, ИмяВТНачисления, СтрокиБухучетСторноНачислений, ИспользоватьСтатьиФинансирования, РаботаВБюджетномУчреждении)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ИспользоватьСтатьиФинансирования И СтрокиБухучетСторноНачислений.Количество() > 0 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.ПериодРегистрации,
		|	Начисления.Организация,
		|	Начисления.Сотрудник,
		|	Начисления.ФизическоеЛицо,
		|	Начисления.Подразделение,
		|	Начисления.Начисление,
		|	Начисления.ДатаНачала,
		|	Начисления.ДатаОкончания,
		|	Начисления.Сумма КАК Результат,
		|	Начисления.ДокументОснование,
		|	Начисления.ИдентификаторСтроки,
		|	Начисления.ТерриторияВыполненияРаботВОрганизации,
		|	Начисления.Сторно,
		|	Начисления.ФиксСторно
		|ИЗ
		|	ВТНачисленияДляОтраженияВБухучете КАК Начисления
		|ГДЕ
		|	Начисления.Сторно
		|	И НЕ Начисления.ФиксСторно
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Начисления.ПериодРегистрации,
		|	Начисления.Организация,
		|	Начисления.Сотрудник,
		|	Начисления.ФизическоеЛицо,
		|	Начисления.Подразделение,
		|	Начисления.Начисление,
		|	Начисления.ДатаНачала,
		|	Начисления.ДатаОкончания,
		|	Начисления.Сумма КАК Результат,
		|	Начисления.ДокументОснование,
		|	Начисления.ИдентификаторСтроки,
		|	Начисления.ТерриторияВыполненияРаботВОрганизации,
		|	Начисления.Сторно,
		|	Начисления.ФиксСторно
		|ИЗ
		|	ВТНачисленияДляОтраженияВБухучете КАК Начисления
		|ГДЕ
		|	Начисления.ФиксСторно";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляОтраженияВБухучете", ИмяВТНачисления);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ТаблицаНачислений = РезультатЗапроса[0].Выгрузить();
		БухучетНачисленийСторно = БухучетНачисленийСторноИзИсходнойТаблицы(ТаблицаНачислений, СтрокиБухучетСторноНачислений, ИспользоватьСтатьиФинансирования, РаботаВБюджетномУчреждении, Ложь);
		
		ТаблицаНачислений = РезультатЗапроса[1].Выгрузить();
		БухучетНачисленийФиксСторно = БухучетНачисленийСторноИзИсходнойТаблицы(ТаблицаНачислений, СтрокиБухучетСторноНачислений, ИспользоватьСтатьиФинансирования, РаботаВБюджетномУчреждении, Истина);
		
		ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(БухучетНачисленийФиксСторно, БухучетНачисленийСторно);
		
		Запрос.УстановитьПараметр("БухучетНачисленийСторно", БухучетНачисленийСторно);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачисленийСторно.ИдентификаторСтроки,
		|	БухучетНачисленийСторно.Организация,
		|	БухучетНачисленийСторно.Сотрудник,
		|	БухучетНачисленийСторно.ФизическоеЛицо,
		|	БухучетНачисленийСторно.Подразделение,
		|	БухучетНачисленийСторно.СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачисленийСторно.СтатьяФинансирования,
		|	БухучетНачисленийСторно.СтатьяРасходов,
		|	БухучетНачисленийСторно.Результат КАК Сумма,
		|	БухучетНачисленийСторно.ОблагаетсяЕНВД,
		|	БухучетНачисленийСторно.ДатаНачала,
		|	БухучетНачисленийСторно.ДатаОкончания,
		|	БухучетНачисленийСторно.Начисление,
		|	БухучетНачисленийСторно.Территория
		|ПОМЕСТИТЬ ВТБухучетНачисленийСторно
		|ИЗ
		|	&БухучетНачисленийСторно КАК БухучетНачисленийСторно";
		Запрос.Выполнить();
		
	Иначе
		
		СоздатьПустуюВТБухучетНачисленийСторно(Запрос);
		
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьПустуюВТБухучетНачисленийСторно(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	0 КАК Сумма,
	|	ЛОЖЬ КАК ОблагаетсяЕНВД,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка) КАК Начисление,
	|	ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) КАК Территория
	|ПОМЕСТИТЬ ВТБухучетНачисленийСторно";
	Запрос.Выполнить();

КонецПроцедуры

Функция БухучетНачисленийСторноИзИсходнойТаблицы(ТаблицаНачислений, СтрокиНачисленийСторно, ИспользоватьСтатьиФинансирования, РаботаВБюджетномУчреждении, ФиксСторно)

	ТаблицаРаспределение = НоваяТаблицаБухучетНачислений();
	
	Если ТаблицаНачислений.Количество()=0 Тогда
		Возврат ТаблицаРаспределение;
	КонецЕсли;
	
	// Параметры для проверки результатов распределения.
	ПараметрыДляПроверки = ПараметрыДляПроверкиРезультатовРаспределенияНачислений();
	ПараметрыДляПроверки.ПроверяемыеПоля.СтатьяФинансирования = ИспользоватьСтатьиФинансирования;
	ПараметрыДляПроверки.ПроверяемыеПоля.СтатьяРасходов       = РаботаВБюджетномУчреждении;
	
	Для каждого СтрокаТЗ Из ТаблицаНачислений Цикл
		
		РезультатыРаспределения = СтрокиНачисленийСторно[СтрокаТЗ.ИдентификаторСтроки];
		Если РезультатыРаспределения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// отберем строки распределения по территории
		КоллекцияРаспределения = РезультатыРаспределения.СкопироватьКолонки();
		Для каждого СтрокаРаспределения Из РезультатыРаспределения Цикл
			Если (СтрокаРаспределения.Территория = СтрокаТЗ.ТерриторияВыполненияРаботВОрганизации)
				Или (НЕ ЗначениеЗаполнено(СтрокаРаспределения.Территория) И Не ЗначениеЗаполнено(СтрокаТЗ.ТерриторияВыполненияРаботВОрганизации)) Тогда
				НоваяСтрока = КоллекцияРаспределения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределения);
				НоваяСтрока.ИдентификаторСтроки = СтрокаТЗ.ИдентификаторСтроки;
			КонецЕсли;
		КонецЦикла;
		
		Если КоллекцияРаспределения.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ФиксСторно Тогда
			ЗарплатаКадры.РазнестиСуммуПоБазе(СтрокаТЗ.Результат, КоллекцияРаспределения, "Результат");
		КонецЕсли;
		
		// Выполним проверку результата распределения
		ВидОперации = ПараметрыДляПроверки.НачислениеУдержаниеВидОперации[СтрокаТЗ.Начисление];
		ПараметрыДляПроверки.ПроверяемыеПоля.СпособОтраженияЗарплатыВБухучете = ПараметрыДляПроверки.ВидыОперацийПособия.Найти(ВидОперации) = Неопределено;
		ЕстьОшибкиРаспределения = РезультатРаспределенияСодержитОшибки(СтрокаТЗ.Результат, КоллекцияРаспределения, ПараметрыДляПроверки.ПроверяемыеПоля);
		
		Если ЕстьОшибкиРаспределения Тогда
			
			Если ФиксСторно Тогда
				
				// попробуем привести результат распределения к сумме строки
				ЗарплатаКадры.РазнестиСуммуПоБазе(СтрокаТЗ.Результат, КоллекцияРаспределения, "Результат");
				Если РезультатРаспределенияСодержитОшибки(СтрокаТЗ.Результат, КоллекцияРаспределения, ПараметрыДляПроверки.ПроверяемыеПоля) Тогда
					Продолжить;	
				КонецЕсли;
				
			Иначе
				Продолжить;	
			КонецЕсли;
			
		КонецЕсли;
		
		Для каждого ЭлементКоллекции Из КоллекцияРаспределения Цикл
			
			НоваяСтрока = ТаблицаРаспределение.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементКоллекции);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаРаспределение;
	
КонецФункции

Процедура ЗаполнитьКодСтатьиФинансирования(Таблица, Коды)

	Для каждого СтрокаТЗ Из Таблица Цикл
		СтрокаТЗ.КодСтатьиФинансирования = Коды[СтрокаТЗ.СтатьяФинансирования];
	КонецЦикла;	

КонецПроцедуры

Функция СтрокиУжеУдержаноПоФизическимЛицам(УжеУдержано)

	// Раскладываем строки УжеУдержано в соответствие по физическим лицам.
	СтрокиУжеУдержаноПоФизическимЛицам = Новый Соответствие;
	Если УжеУдержано <> Неопределено Тогда
		Для Каждого Строка Из УжеУдержано Цикл
			СтрокиУжеУдержаноПоФизическомуЛицу = СтрокиУжеУдержаноПоФизическимЛицам[Строка.ФизическоеЛицо];
			Если СтрокиУжеУдержаноПоФизическомуЛицу = Неопределено Тогда
				СтрокиУжеУдержаноПоФизическомуЛицу = Новый Массив;
			КонецЕсли;
			СтрокиУжеУдержаноПоФизическомуЛицу.Добавить(Строка);
			СтрокиУжеУдержаноПоФизическимЛицам.Вставить(Строка.ФизическоеЛицо, СтрокиУжеУдержаноПоФизическомуЛицу);
		КонецЦикла;
	КонецЕсли;
	
	Возврат СтрокиУжеУдержаноПоФизическимЛицам;

КонецФункции

Процедура СвернутьРезультатыРаспределения(РезультатыРаспределения)

	Колонки = "";
	Для Каждого Колонка Из РезультатыРаспределения.Колонки Цикл
		Если Колонка.Имя = "Результат" Тогда
			Продолжить;
		КонецЕсли;
		Колонки = Колонки + "," + Колонка.Имя;
	КонецЦикла;
	Колонки = Сред(Колонки, 2);
	РезультатыРаспределения.Свернуть(Колонки, "Результат");
	НайденныеСтроки = РезультатыРаспределения.НайтиСтроки(Новый Структура("Результат",0));
	Для каждого СтрокаТЗ Из НайденныеСтроки Цикл
		РезультатыРаспределения.Удалить(СтрокаТЗ);
	КонецЦикла;	

КонецПроцедуры

Процедура СвернутьТаблицуКоэффициентовРаспределенияСреднегоЗаработка(ТаблицаКоэффициентов) Экспорт

	ТаблицаКоэффициентов.Свернуть("СтатьяФинансирования,СтатьяРасходов,СпособОтраженияЗарплатыВБухучете,ОблагаетсяЕНВД", "Коэффициент");

КонецПроцедуры


// Распределение Удержаний или НДФЛ по базе по умолчанию
// Параметры 
//		РезультатыРаспределения
//		СтрокиБезБазы - массив, строки ТЗ, для которых выполняется распределение
//		Организация
//		ПериодРегистрации
//		РаспределениеУдержаний - Булево, признак того, что распределяем Удержания, иначе НДФЛ
//		РаспределятьТолькоПоРабочимМестам - Булево, если Истина, тогда в строках СтрокиБезБазы уже есть поля СтатьяФинансирования и СтатьяРасходов.
//
Процедура РаспределитьУдержанияПоБазеПоУмолчанию(РезультатыРаспределения, СтрокиБезБазы, Организация, ПериодРегистрации, РаспределениеУдержаний = Ложь, РаспределятьТолькоПоРабочимМестам = Ложь)

	// Массив физических лиц, данные которых еще не распределились.
	МассивФизическихЛиц = Новый Массив;
	Для Каждого СтрокаБезБазы Из СтрокиБезБазы Цикл
		МассивФизическихЛиц.Добавить(СтрокаБезБазы.ФизическоеЛицо);
	КонецЦикла;
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивФизическихЛиц);
	
	// Таблица значений с полями
	// ФизическоеЛицо, Сотрудник, ГоловнойСотрудник, Подразделение, ТерриторияВыполненияРаботВОрганизации.
	БазаПоУмолчанию = РасчетЗарплаты.ПолучитьБазуУдержанийПоУмолчанию(МассивФизическихЛиц, ПериодРегистрации, Организация);
	
	Если РаспределятьТолькоПоРабочимМестам Тогда
		БазаУдержанийПоУмолчанию = БазаПоУмолчанию;
	Иначе	
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Период", КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("БазаПоУмолчанию", БазаПоУмолчанию);
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	БазаПоУмолчанию.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БазаПоУмолчанию.Сотрудник КАК Сотрудник,
		|	БазаПоУмолчанию.ГоловнойСотрудник КАК ГоловнойСотрудник,
		|	БазаПоУмолчанию.Подразделение КАК Подразделение,
		|	БазаПоУмолчанию.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|	1000 КАК Сумма
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	&БазаПоУмолчанию КАК БазаПоУмолчанию";
		Запрос.Выполнить();
		
		ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.ФизическоеЛицо,
		|	Сотрудники.Сотрудник,
		|	Сотрудники.ГоловнойСотрудник КАК ГоловнойСотрудник,
		|	Сотрудники.Подразделение,
		|	Сотрудники.Сумма,
		|	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования,
		|	СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов
		|ИЗ
		|	ВТСотрудники КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
		|		ПО Сотрудники.Сотрудник = СведенияОБухучетеЗарплатыСотрудников.Сотрудник";
		
		БазаУдержанийПоУмолчанию = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	БазаУдержанийПоУмолчанию.Индексы.Добавить("ФизическоеЛицо");
	
	ОтборСтрок = Новый Структура("ФизическоеЛицо");
	Для Каждого Строка Из СтрокиБезБазы Цикл
		
		ОтборСтрок.ФизическоеЛицо = Строка.ФизическоеЛицо;
		СтрокиРаспределения = БазаУдержанийПоУмолчанию.НайтиСтроки(ОтборСтрок);
		
		Если РаспределениеУдержаний Тогда
			
			СтрокиРаспределенияСУчетомОсновногоСотрудника  = Новый Массив;
			СтрокиРаспределенияБезУчетаОсновногоСотрудника = Новый Массив;
			Для Каждого СтрокаБазыПоФизическомуЛицу Из СтрокиРаспределения Цикл
				СтрокиРаспределенияБезУчетаОсновногоСотрудника.Добавить(СтрокаБазыПоФизическомуЛицу);
				Если ЗначениеЗаполнено(Строка.Сотрудник) 
					И Строка.Сотрудник = СтрокаБазыПоФизическомуЛицу.ГоловнойСотрудник Тогда
					СтрокиРаспределенияСУчетомОсновногоСотрудника.Добавить(СтрокаБазыПоФизическомуЛицу);
				КонецЕсли;
			КонецЦикла;
			
			СтрокиРаспределения = СтрокиРаспределенияСУчетомОсновногоСотрудника;
			Если СтрокиРаспределения.Количество() = 0 Тогда
				СтрокиРаспределения = СтрокиРаспределенияБезУчетаОсновногоСотрудника;
			КонецЕсли;
			
		КонецЕсли;
		
		НоваяСтрока = РезультатыРаспределения.Добавить();
		Если СтрокиРаспределения.Количество() = 0 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		Иначе
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиРаспределения[0]);
			Если РаспределятьТолькоПоРабочимМестам Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка, "СтатьяФинансирования,СтатьяРасходов");
			КонецЕсли;
			НоваяСтрока.ВидУдержания        = Строка.ВидУдержания;
			НоваяСтрока.ИдентификаторСтроки = Строка.ИдентификаторСтроки;
		КонецЕсли;
		НоваяСтрока.Результат           = Строка.Сумма;
		
	КонецЦикла;
	
КонецПроцедуры

Функция УпорядоченнаяТаблицаРаспределениеРезультатовУдержаний(ТаблицаРаспределениеРезультатовУдержаний)

	Если ТаблицаРаспределениеРезультатовУдержаний.Количество() = 0 Тогда
		Возврат ТаблицаРаспределениеРезультатовУдержаний;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаРаспределениеРезультатовУдержаний", ТаблицаРаспределениеРезультатовУдержаний);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРаспределения.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаРаспределения.ВидУдержания КАК ВидУдержания,
	|	ТаблицаРаспределения.Сотрудник КАК Сотрудник,
	|	ТаблицаРаспределения.Подразделение КАК Подразделение,
	|	ТаблицаРаспределения.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	ТаблицаРаспределения.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ТаблицаРаспределения.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРаспределения.Результат КАК Результат,
	|	ТаблицаРаспределения.КодСтатьиФинансирования КАК КодСтатьиФинансирования
	|ПОМЕСТИТЬ ВТТаблицаРаспределения
	|ИЗ
	|	&ТаблицаРаспределениеРезультатовУдержаний КАК ТаблицаРаспределения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспределения.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаРаспределения.ВидУдержания КАК ВидУдержания,
	|	ТаблицаРаспределения.Сотрудник КАК Сотрудник,
	|	ТаблицаРаспределения.Подразделение КАК Подразделение,
	|	ТаблицаРаспределения.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	ТаблицаРаспределения.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ТаблицаРаспределения.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРаспределения.Результат КАК Результат,
	|	ТаблицаРаспределения.КодСтатьиФинансирования КАК КодСтатьиФинансирования
	|ИЗ
	|	ВТТаблицаРаспределения КАК ТаблицаРаспределения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторСтроки,
	|	ВидУдержания,
	|	Сотрудник,
	|	Подразделение,
	|	СтатьяФинансирования,
	|	СтатьяРасходов
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

#КонецОбласти

#Область ПроверкаРаспределенияПоИсточникамФинансирования

Процедура ПроверитьРезультатыРаспределенияНачисленийУдержанийОбъекта(ДокументОбъект, ИменаТаблиц, Отказ, ВидНачисленияВШапке = Неопределено) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Возврат;
	КонецЕсли;
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	ТаблицаРезультатовПроверки = Новый ТаблицаЗначений;
	ТаблицаРезультатовПроверки.Колонки.Добавить("ИмяТаблицы",  Новый ОписаниеТипов("Строка"));
	ТаблицаРезультатовПроверки.Колонки.Добавить("НомерСтроки",  Новый ОписаниеТипов("Число"));
	ТаблицаРезультатовПроверки.Колонки.Добавить("ЕстьОшибкиЗаполнения",  Новый ОписаниеТипов("Булево"));
	ТаблицаРезультатовПроверки.Колонки.Добавить("ЕстьОшибкиРаспределения",  Новый ОписаниеТипов("Булево"));
	
	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	ИменаТаблицРаспределенияРезультатов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаТаблиц, ",", Истина, Истина);
	
	Для Каждого ИмяТаблицыНачисленийУдержаний Из ИменаТаблицРаспределенияРезультатов Цикл
		
		ИмяТаблицыРаспределениеРезультатовРасчета = ИмяТаблицыДляРаспределенияРезультата(ИмяТаблицыНачисленийУдержаний);
		ТаблицаРаспределенияРезультатовИзХранилища = ДокументОбъект[ИмяТаблицыРаспределениеРезультатовРасчета];
		
		ИмяРеквизитаИдентификаторСтроки = ИмяРеквизитаИдентификаторСтрокиПоИмениТаблицы(ИмяТаблицыНачисленийУдержаний);
		
		Для каждого СтрокаТЧ Из ДокументОбъект[ИмяТаблицыНачисленийУдержаний] Цикл
			
			Отбор = Новый Структура("ИдентификаторСтроки", СтрокаТЧ[ИмяРеквизитаИдентификаторСтроки]);
			РезультатыРаспределения = ТаблицаРаспределенияРезультатовИзХранилища.НайтиСтроки(Отбор);
			
			РезультатПроверкиСтроки = ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтрокеОбъекта(
				СтрокаТЧ, РезультатыРаспределения, ИмяТаблицыНачисленийУдержаний, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении, ВидНачисленияВШапке);
			
			Если РезультатПроверкиСтроки.ЕстьОшибкиЗаполнения Или РезультатПроверкиСтроки.ЕстьОшибкиРаспределения Тогда
				
				НоваяСтрока = ТаблицаРезультатовПроверки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатПроверкиСтроки);
				НоваяСтрока.НомерСтроки = СтрокаТЧ.НомерСтроки;
				НоваяСтрока.ИмяТаблицы  = ИмяТаблицыНачисленийУдержаний;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ТаблицаРезультатовПроверки.Количество() > 0 Тогда
		
		МаксимальноСообщений = 10;
		ВыводимыхСообщений = 0;
		НевыводимыхСообщений = 0;
		
		МетаданныеДокумента = ДокументОбъект.Ссылка.Метаданные();
		ПредставленияТаблиц = Новый Соответствие;
		
		Для каждого СтрокаТаблицы Из ТаблицаРезультатовПроверки Цикл
			
			Отказ = Истина;
			
			ПредставлениеТаблицы = ПредставленияТаблиц.Получить(СтрокаТаблицы.ИмяТаблицы);
			Если ПредставлениеТаблицы = Неопределено Тогда
				
				ПредставлениеТаблицы = МетаданныеДокумента.ТабличныеЧасти.Найти(СтрокаТаблицы.ИмяТаблицы).Синоним;
				ПредставленияТаблиц.Вставить(СтрокаТаблицы.ИмяТаблицы, ПредставлениеТаблицы);
				
			КонецЕсли;
			
			Если ВыводимыхСообщений > МаксимальноСообщений Тогда
				НевыводимыхСообщений = НевыводимыхСообщений + 1;
			Иначе
				
				ТекстСообщения = НСтр("ru = 'В строке %1 таблицы %2 обнаружены незаполненные поля при распределении результата'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстСообщения,
					СтрокаТаблицы.НомерСтроки,
					ПредставлениеТаблицы);
				
				ПолеСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Объект.%1[%2].КомандаРедактированияРаспределения", СтрокаТаблицы.ИмяТаблицы, СтрокаТаблицы.НомерСтроки-1);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПолеСообщения, , Отказ);
				ВыводимыхСообщений = ВыводимыхСообщений + 1;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтрокеОбъекта(ПроверяемаяСтрока, СтрокиРаспределенияРезультатовРасчета, ИмяТаблицы, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении, ВидНачисленияВШапке = Неопределено)
	
	РезультатПроверки = СтруктураРезультатаПроверки();
	
	ИмяТаблицыРаспределениеРезультатовРасчета = ИмяТаблицыДляРаспределенияРезультата(ИмяТаблицы);
	ЭтоТаблицаНачислений = ИмяТаблицыРаспределениеРезультатовРасчета = "РаспределениеРезультатовНачислений";
	
	Если Не ЗначениеЗаполнено(ВидНачисленияВШапке) И ЭтоТаблицаНачислений И ИмяТаблицы <> "НачисленияПоДоговорам" Тогда
		ВидРасчета = ПроверяемаяСтрока.Начисление;
	ИначеЕсли ЗначениеЗаполнено(ВидНачисленияВШапке) Тогда
		ВидРасчета = ВидНачисленияВШапке;
	Иначе
		ВидРасчета = Неопределено;
	КонецЕсли;
	
	ВидыОперацийПособия = Новый Массив;
	ВидыОперацийПособия.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС);
	ВидыОперацийПособия.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	
	ПроверяемыеПоля = Новый Структура;
	ПроверяемыеПоля.Вставить("СтатьяФинансирования", Истина);
	ПроверяемыеПоля.Вставить("СтатьяРасходов", РаботаВБюджетномУчреждении);
	
	ЭтоТаблицаНДФЛ						= ИмяТаблицы = "НДФЛ";
	ЭтоТаблицаКорректировкиВыплаты		= ИмяТаблицы = "КорректировкиВыплаты";
	ЭтоТаблицаЗаймов					= ИмяТаблицы = "ПогашениеЗаймов";
	УточнятьПроверкуСпособаОтражения	= ЭтоТаблицаНачислений И ИмяТаблицы <> "НачисленияПоДоговорам" И ВидРасчета <> Неопределено;
	
	Если ЭтоТаблицаНачислений Тогда
		ПроверяемыеПоля.Вставить("СпособОтраженияЗарплатыВБухучете", Истина);
		ПроверяемыеПоля.Вставить("Сотрудник", Ложь);
	Иначе
		// Для удержаний не проверяем способ отражения.
		ПроверяемыеПоля.Вставить("СпособОтраженияЗарплатыВБухучете", Ложь);
		ПроверяемыеПоля.Вставить("Сотрудник", Истина);
	КонецЕсли;
	
	Если УточнятьПроверкуСпособаОтражения Тогда
		ПроверяемыеПоля.СпособОтраженияЗарплатыВБухучете = ВидыОперацийПособия.Найти(НачислениеУдержаниеВидОперации[ВидРасчета]) = Неопределено;
	КонецЕсли;
	
	Если ЭтоТаблицаНДФЛ Тогда
		Результат  = ПроверяемаяСтрока.Налог - ПроверяемаяСтрока.ЗачтеноАвансовыхПлатежей;
	ИначеЕсли ЭтоТаблицаКорректировкиВыплаты Тогда
		Результат  = ПроверяемаяСтрока.КорректировкаВыплаты;
	ИначеЕсли ЭтоТаблицаЗаймов Тогда
		Результат  = ПроверяемаяСтрока.НачисленоПроцентов + ПроверяемаяСтрока.ПогашениеПроцентов + ПроверяемаяСтрока.ПогашениеЗайма + ПроверяемаяСтрока.МатериальнаяВыгода + ПроверяемаяСтрока.НалогНаМатериальнуюВыгоду;
	Иначе
		Результат  = ПроверяемаяСтрока.Результат;
	КонецЕсли;
	
	РезультатРаспределения = 0;
	ЕстьОшибкиЗаполнения = Ложь;
	Если СтрокиРаспределенияРезультатовРасчета <> Неопределено
		И СтрокиРаспределенияРезультатовРасчета.Количество() > 0 Тогда
		
		Для каждого СтрокаРаспределения Из СтрокиРаспределенияРезультатовРасчета Цикл
			РезультатРаспределения = РезультатРаспределения + СтрокаРаспределения.Результат;
			Для Каждого КлючИЗначение Из ПроверяемыеПоля Цикл
				Если КлючИЗначение.Значение И Не ЗначениеЗаполнено(СтрокаРаспределения[КлючИЗначение.Ключ]) Тогда
					ЕстьОшибкиЗаполнения = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Если Результат = 0 И РезультатРаспределения = 0 Тогда
		ЕстьОшибкиРаспределения = Ложь;
		ЕстьОшибкиЗаполнения = Ложь;
	Иначе
		ЕстьОшибкиРаспределения = Результат <> РезультатРаспределения;
	КонецЕсли;
	
	РезультатПроверки.ЕстьОшибкиРаспределения = ЕстьОшибкиРаспределения;
	РезультатПроверки.ЕстьОшибкиЗаполнения    = ЕстьОшибкиЗаполнения;
	РезультатПроверки.СуммаКРаспределению     = Результат;
	РезультатПроверки.РезультатРаспределения  = РезультатРаспределения;
	
	Возврат РезультатПроверки;
	
КонецФункции

Функция ИмяТаблицыДляРаспределенияРезультата(ИмяТаблицы)
	
	ИмяТаблицыДляРаспределения = "";
	
	Если ИмяТаблицы = "Начисления"
		Или ИмяТаблицы = "НачисленияПерерасчет"
		Или ИмяТаблицы = "НачисленияПоДоговорам"
		Или ИмяТаблицы = "Пособия"
		Или ИмяТаблицы = "ПособияПерерасчет"
		Или ИмяТаблицы = "ДоначисленияИПерерасчеты"
		Или ИмяТаблицы = "ОплатаТруда"
		Или ИмяТаблицы = "Сторнировано" Тогда
		
		ИмяТаблицыДляРаспределения = "РаспределениеРезультатовНачислений";
		
	ИначеЕсли ИмяТаблицы = "НДФЛ"
		Или ИмяТаблицы = "Удержания"
		Или ИмяТаблицы = "ПогашениеЗаймов"
		Или ИмяТаблицы = "КорректировкиВыплаты" Тогда
		
		ИмяТаблицыДляРаспределения = "РаспределениеРезультатовУдержаний";
		
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяТаблицыДляРаспределения) Тогда
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
			МодульЛьготыСотрудниковКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ЛьготыСотрудниковКлиентСервер");
			ИмяТаблицыДляРаспределения = МодульЛьготыСотрудниковКлиентСервер.ИмяТаблицыДляРаспределенияРезультата(ИмяТаблицы);
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат ИмяТаблицыДляРаспределения;
	
КонецФункции

Функция СтруктураРезультатаПроверки()
	
	РезультатПроверки = Новый Структура;
	РезультатПроверки.Вставить("ЕстьОшибкиРаспределения", Истина);
	РезультатПроверки.Вставить("ЕстьОшибкиЗаполнения", Истина);
	РезультатПроверки.Вставить("СуммаКРаспределению", 0);
	РезультатПроверки.Вставить("РезультатРаспределения", Неопределено);
	
	Возврат РезультатПроверки;
	
КонецФункции

Функция ИмяРеквизитаИдентификаторСтрокиПоИмениТаблицы(ИмяТаблицы)
	
	ИмяРеквизитаИдентификаторСтроки = "";
	
	Если ИмяТаблицы = "НДФЛ" Тогда
		ИмяРеквизитаИдентификаторСтроки = "ИдентификаторСтрокиНДФЛ";
	ИначеЕсли ИмяТаблицы = "ПогашениеЗаймов" Или ИмяТаблицы = "КорректировкиВыплаты" Тогда
		ИмяРеквизитаИдентификаторСтроки = "ИдентификаторСтроки";
	ИначеЕсли ИмяТаблицы = "НачисленияПоДоговорам" Тогда
		ИмяРеквизитаИдентификаторСтроки = "ИдентификаторСтроки";
	Иначе
		ИмяРеквизитаИдентификаторСтроки = "ИдентификаторСтрокиВидаРасчета";
	КонецЕсли;
	
	Возврат ИмяРеквизитаИдентификаторСтроки;
	
КонецФункции

#КонецОбласти

#Область РедактированиеПроцентаЕНВДВФормахДокументов

Процедура ОбъектПриЧтенииНаСервереПроцентЕНВД(Форма, Организация, МесяцНачисления, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь) Экспорт

	Если (НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная")) 
		ИЛИ ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ОтражениеЗарплатыВБухучете.ОбъектПриЧтенииНаСервереПроцентЕНВД(Форма, Организация, МесяцНачисления, ДобавлятьЭлементыФормы, ДобавлятьРеквизитыФормы);
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура ОбъектПриСозданииНаСервереПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт
	
	Если (НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная")) 
		ИЛИ ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	ОтражениеЗарплатыВБухучете.ОбъектПриСозданииНаСервереПроцентЕНВД(Форма, Организация, МесяцНачисления);
	
КонецПроцедуры

Процедура ОбработатьИзменениеОрганизацииПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт
	
	Если (НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная")) 
		ИЛИ ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	ОтражениеЗарплатыВБухучете.ОбработатьИзменениеОрганизацииПроцентЕНВД(Форма, Организация, МесяцНачисления)
	
КонецПроцедуры

Процедура ОбработатьИзменениеМесяцНачисленияПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт
	
	Если (НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная")) 
		ИЛИ ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	ОтражениеЗарплатыВБухучете.ОбработатьИзменениеМесяцНачисленияПроцентЕНВД(Форма, Организация, МесяцНачисления)
	
КонецПроцедуры

Процедура ЗарегистрироватьПроцентЕНВДПослеРедактированияВФорме(Организация, Месяц, ПроцентЕНВД, ПроцентЕНВДСтрока) Экспорт

	Если (НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная")) 
		ИЛИ ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	ОтражениеЗарплатыВБухучете.ЗарегистрироватьПроцентЕНВДПослеРедактированияВФорме(Организация, Месяц, ПроцентЕНВД, ПроцентЕНВДСтрока)
	
КонецПроцедуры

#КонецОбласти

#Область ПредставлениеРезультатовРаспределения

Процедура ОбъектПриЧтенииНаСервереПредставлениеРаспределения(Форма, ОписаниеДокумента) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	НачислениеИзШапкиДокумента = Неопределено;
	Если ОписаниеДокумента.ВидНачисленияВШапке И ЗначениеЗаполнено(ОписаниеДокумента.ВидНачисленияИмя) Тогда
		НачислениеИзШапкиДокумента = Объект[ОписаниеДокумента.ИменаПолейНачисления];
	КонецЕсли;
	
	Если ОписаниеДокумента.НачисленияИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.НачисленияИмя], ОписаниеДокумента, ОписаниеДокумента.НачисленияИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.НачисленияПерерасчетИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.НачисленияПерерасчетИмя], ОписаниеДокумента, ОписаниеДокумента.НачисленияПерерасчетИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.ПособияИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.ПособияИмя], ОписаниеДокумента, ОписаниеДокумента.ПособияИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.НачисленияПоДоговорамИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.НачисленияПоДоговорамИмя], ОписаниеДокумента, ОписаниеДокумента.НачисленияПоДоговорамИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.СторноИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.СторноИмя], ОписаниеДокумента, ОписаниеДокумента.СторноИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.ЛьготыИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.ЛьготыИмя], ОписаниеДокумента, ОписаниеДокумента.ЛьготыИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.ЛьготыПерерасчетИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.ЛьготыПерерасчетИмя], ОписаниеДокумента, ОписаниеДокумента.ЛьготыПерерасчетИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.УдержанияИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.УдержанияИмя], ОписаниеДокумента, ОписаниеДокумента.УдержанияИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.УдержанияПерерасчетИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.УдержанияПерерасчетИмя], ОписаниеДокумента, ОписаниеДокумента.УдержанияПерерасчетИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.НДФЛИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.НДФЛИмя], ОписаниеДокумента, ОписаниеДокумента.НДФЛИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.КорректировкиВыплатыИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.КорректировкиВыплатыИмя], ОписаниеДокумента, ОписаниеДокумента.КорректировкиВыплатыИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	Если ОписаниеДокумента.ПогашениеЗаймовИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.ПогашениеЗаймовИмя], ОписаниеДокумента, ОписаниеДокумента.ПогашениеЗаймовИмя, НачислениеИзШапкиДокумента, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеРаспределения(ДанныеЗаполнения, ОписаниеДокумента, ИмяТаблицы, ВидРасчетаИзШапки, РаботаВБюджетномУчреждении, НачислениеУдержаниеВидОперации) 
	
	Если ДанныеЗаполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого СтрокаТаблицы Из ДанныеЗаполнения Цикл
			
		РезультатПроверкиСтроки = ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтроке(
			СтрокаТаблицы, ИмяТаблицы, ОписаниеДокумента, ВидРасчетаИзШапки, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении);
			
		РаспределениеСодержитОшибки = РезультатПроверкиСтроки.ЕстьОшибкиРаспределения Или РезультатПроверкиСтроки.ЕстьОшибкиЗаполнения;
		
		ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ЗаполнитьПредставлениеРаспределенияВСтроке(
			СтрокаТаблицы, РаспределениеСодержитОшибки, ИмяТаблицы, РаботаВБюджетномУчреждении);			
			
	КонецЦикла	

КонецПроцедуры

Функция ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтроке(ПроверяемаяСтрока, ИмяТаблицы, ОписаниеДокумента, ВидРасчетаИзШапки, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении, РезультатыРаспределения = Неопределено)
	
	ОписаниеТаблицыФормы = Неопределено;
	Если Не ОписаниеДокумента.ОписанияТаблицДляРаспределенияРезультата.Свойство(ИмяТаблицы, ОписаниеТаблицыФормы) Тогда
		Возврат СтруктураРезультатаПроверки();
	КонецЕсли;
	
	Если РезультатыРаспределения = Неопределено Тогда 
		РезультатыРаспределения = ПроверяемаяСтрока.РезультатРаспределения;
	КонецЕсли;
	
	Возврат ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтрокеОбъекта(ПроверяемаяСтрока, РезультатыРаспределения, ИмяТаблицы,
		НачислениеУдержаниеВидОперации,РаботаВБюджетномУчреждении, ВидРасчетаИзШапки);
	
КонецФункции

Процедура ДополнитьТаблицуРаспределенияКодомСтатьиФинансирования(ТаблицаРаспределения) Экспорт
	
	КодыСтатей = КодыСтатейФинансирования();
	
	Если ТаблицаРаспределения.Колонки.Найти("КодСтатьиФинансирования") = Неопределено Тогда
		ТаблицаРаспределения.Колонки.Добавить("КодСтатьиФинансирования", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(3)));
	КонецЕсли;
	Для каждого СтрокаТЗ Из ТаблицаРаспределения Цикл
		СтрокаТЗ.КодСтатьиФинансирования = КодыСтатей[СтрокаТЗ.СтатьяФинансирования]
	КонецЦикла;
	
КонецПроцедуры

Функция КодыСтатейФинансирования() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиФинансированияЗарплата.Код КАК КодСтатьиФинансирования,
	|	СтатьиФинансированияЗарплата.Ссылка
	|ИЗ
	|	Справочник.СтатьиФинансированияЗарплата КАК СтатьиФинансированияЗарплата";
	Выборка = Запрос.Выполнить().Выбрать();
	
	КодыСтатей = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		КодыСтатей.Вставить(Выборка.Ссылка, Выборка.КодСтатьиФинансирования);
	КонецЦикла;
	КодыСтатей.Вставить(Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка(), "");
	
	Возврат КодыСтатей;

КонецФункции 

// Формирует представление результата распределения строки начисления
// Параметры
//	СуммаОсновнойСтроки - число, результат расчета строки начисления 
//	ВидРасчета - вид расчета из строки начисления
//	СтрокиРаспределения - коллекция строк с результатами распределения строки начисления, содержит поле КодСтатьиФинансирования
//	ПараметрыДляПроверки - структура, см ПараметрыДляПроверкиРезультатовРаспределенияНачислений.
//
// Возвращаемое значение - строка, для помещения в реквизит КомандаРедактированияРаспределения.
//
Функция ПредставлениеРезультатаРаспределенияСтрокиНачисления(СуммаОсновнойСтроки, ВидРасчета, СтрокиРаспределения, ПараметрыДляПроверки) Экспорт
	
	ВидОперации = ПараметрыДляПроверки.НачислениеУдержаниеВидОперации[ВидРасчета];
	ПараметрыДляПроверки.ПроверяемыеПоля.СпособОтраженияЗарплатыВБухучете = ПараметрыДляПроверки.ВидыОперацийПособия.Найти(ВидОперации) = Неопределено;
	ЕстьОшибкиРаспределения = РезультатРаспределенияСодержитОшибки(СуммаОсновнойСтроки, СтрокиРаспределения, ПараметрыДляПроверки.ПроверяемыеПоля);
	
	Возврат ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ПредставлениеРаспределения(СтрокиРаспределения, ЕстьОшибкиРаспределения, ПараметрыДляПроверки.ПроверяемыеПоля.СтатьяРасходов)

КонецФункции

Функция ПредставлениеРезультатаРаспределенияСтрокиУдержания(СуммаОсновнойСтроки, СтрокиРаспределения, ПроверяемыеПоля) Экспорт
	
	ЕстьОшибкиРаспределения = РезультатРаспределенияСодержитОшибки(СуммаОсновнойСтроки, СтрокиРаспределения, ПроверяемыеПоля);
	Возврат ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ПредставлениеРаспределения(СтрокиРаспределения, ЕстьОшибкиРаспределения, ПроверяемыеПоля.СтатьяРасходов)

КонецФункции

Функция ПредставлениеРезультатаРаспределенияСтрокиПогашениеЗаймов(СуммаОсновнойСтроки, СтрокиРаспределения, ПроверяемыеПоля) Экспорт
	
	ЕстьОшибкиРаспределения = РезультатРаспределенияСодержитОшибки(СуммаОсновнойСтроки, СтрокиРаспределения, ПроверяемыеПоля);
	
	РаспределениеВсейСуммыСтроки = Новый Массив;
	
	ИменаКолонок = "СтатьяФинансирования,СтатьяРасходов,КодСтатьиФинансирования,Результат,ВидУдержания,Сотрудник,Подразделение";
	Для каждого СтрокаРаспределения Из СтрокиРаспределения Цикл
		
		ОписаниеСтроки = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(ОписаниеСтроки, СтрокаРаспределения);
		
		СтрокаНеНайдена = Истина;
		
		Для Каждого СтрокаРаспределенияВсейСуммыСтроки Из РаспределениеВсейСуммыСтроки Цикл
			Если СтрокаРаспределенияВсейСуммыСтроки.СтатьяФинансирования = ОписаниеСтроки.СтатьяФинансирования
				И СтрокаРаспределенияВсейСуммыСтроки.КодСтатьиФинансирования = ОписаниеСтроки.КодСтатьиФинансирования
				И СтрокаРаспределенияВсейСуммыСтроки.СтатьяРасходов = ОписаниеСтроки.СтатьяРасходов
				И СтрокаРаспределенияВсейСуммыСтроки.Сотрудник = ОписаниеСтроки.Сотрудник
				И СтрокаРаспределенияВсейСуммыСтроки.Подразделение = ОписаниеСтроки.Подразделение Тогда
				СтрокаРаспределенияВсейСуммыСтроки.Результат = СтрокаРаспределенияВсейСуммыСтроки.Результат + ОписаниеСтроки.Результат;
				СтрокаНеНайдена = Ложь;
			КонецЕсли;				
		КонецЦикла;
		
		Если СтрокаНеНайдена Тогда
			РаспределениеВсейСуммыСтроки.Добавить(ОписаниеСтроки);
		КонецЕсли;			
		
	КонецЦикла;
	
	Возврат ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ПредставлениеРаспределения(РаспределениеВсейСуммыСтроки, ЕстьОшибкиРаспределения, ПроверяемыеПоля.СтатьяРасходов)

КонецФункции

// ПроверяемыеПоля см ПараметрыДляПроверкиРезультатовРаспределенияНачислений.ПроверяемыеПоля.
Функция РезультатРаспределенияСодержитОшибки(СуммаОсновнойСтроки, СтрокиРаспределения, ПроверяемыеПоля)
	
	РезультатРаспределения = 0;
	Для каждого СтрокаРаспределения Из СтрокиРаспределения Цикл
		РезультатРаспределения = РезультатРаспределения + СтрокаРаспределения.Результат;
		Для Каждого КлючИЗначение Из ПроверяемыеПоля Цикл
			Если КлючИЗначение.Значение И Не ЗначениеЗаполнено(СтрокаРаспределения[КлючИЗначение.Ключ]) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат СуммаОсновнойСтроки <> РезультатРаспределения;

КонецФункции 

Функция ПараметрыДляПроверкиРезультатовРаспределенияНачислений() Экспорт

	ВидыОперацийПособия = Новый Массив;
	ВидыОперацийПособия.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС);
	ВидыОперацийПособия.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	
	ПроверяемыеПоля = Новый Структура;
	ПроверяемыеПоля.Вставить("СтатьяФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата"));
	ПроверяемыеПоля.Вставить("СтатьяРасходов", ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении"));
	ПроверяемыеПоля.Вставить("СпособОтраженияЗарплатыВБухучете", Ложь);
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	Параметры = Новый Структура;
	Параметры.Вставить("ВидыОперацийПособия", ВидыОперацийПособия);
	Параметры.Вставить("НачислениеУдержаниеВидОперации", НачислениеУдержаниеВидОперации);
	Параметры.Вставить("ПроверяемыеПоля", ПроверяемыеПоля);
	
	Возврат Параметры;

КонецФункции

Функция ПараметрыДляПроверкиРезультатовРаспределенияУдержаний() Экспорт

	Параметры = Новый Структура;
	Параметры.Вставить("СтатьяФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата"));
	Параметры.Вставить("СтатьяРасходов", ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении"));
	Параметры.Вставить("Сотрудник", Истина);
	
	Возврат Параметры;

КонецФункции

#КонецОбласти

#Область Прочие

// Устанавливает подсказку ввода для элемента СтатьяРасходов.
// Параметры:
// 		Форма - форма объекта
// 		ПутьРеквизита - путь к реквизиту типа ПланыВидовРасчетаСсылка.Начисления.
//
Процедура УстановитьПодсказкуВводаСтатьиРасходовПоНачислению(Форма, ПутьРеквизита) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	
	ПодсказкаВвода = "211";
	
	ВидРасчета = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ПутьРеквизита);
	Если ЗначениеЗаполнено(ВидРасчета) Тогда
		СтатьяРасходов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасчета, "СтатьяРасходов");
		Если ЗначениеЗаполнено(СтатьяРасходов) Тогда
			ПодсказкаВвода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтатьяРасходов, "Код");
		КонецЕсли;
	КонецЕсли;	
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "СтатьяРасходов", "ПодсказкаВвода", ПодсказкаВвода);

КонецПроцедуры

Процедура УстановитьСписокВыбораОтношениеКЕНВД(ЭлементыФормы, ИмяЭлемента) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		
		ЭлементФормы = ЭлементыФормы.Найти(ИмяЭлемента);
		Если ЭлементФормы <> Неопределено Тогда
			ЭлементФормы.РежимВыбораИзСписка = Истина;
			ЭлементФормы.СписокВыбора.Добавить(Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД);
			ЭлементФормы.СписокВыбора.Добавить(Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.НеЕНВД);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура УточнитьСоставПроверяемыхРеквизитовБухучетПлановыхУдержаний(ДокументОбъект, ПроверяемыеРеквизиты) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата")
		Или Не ДокументОбъект.БухучетЗаданВДокументе
		Или ДокументОбъект.Действие = Перечисления.ДействияСУдержаниями.Прекратить
		Или Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Удержание, "ДоступнаСтратегияОтраженияКакЗаданоВидуРасчета") Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СтатьяФинансирования");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СтатьяРасходов");
	ИначеЕсли НЕ ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СтатьяРасходов");
	КонецЕсли;

КонецПроцедуры

// Функция дополняет переданную таблицу значений результатами отражения в бухучете исчисленного НДФЛ.
//	Параметры
//		ТаблицаУсловийОтбора, таблица значений с полями
//			* ФизическоеЛицо
//			* Подразделение, тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации
//			* ДокументОснование, ОпределяемыйТип.ДокументыОснованияНДФЛ
//			* МесяцНалоговогоПериода, дата получения дохода.
//
//	Возвращаемое значение - таблица значений с полями
//			* ФизическоеЛицо
//			* Подразделение, тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации
//			* ДокументОснование, ОпределяемыйТип.ДокументыОснованияНДФЛ
//			* МесяцНалоговогоПериода, дата получения дохода
//			* СтатьяФинансирования, Тип СправочникСсылка.СтатьиФинансированияЗарплата
//			* СтатьяРасходов, Тип СправочникСсылка.СтатьиРасходовЗарплата
//			* Сумма
//
Функция БухучетНДФЛСотрудниковПоДокументамОснованиям(ТаблицаУсловийОтбора) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаУсловийОтбора", ТаблицаУсловийОтбора);
	Запрос.УстановитьПараметр("ИспользоватьСтатьиРасходов", ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении"));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаУсловийОтбора.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение КАК Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование КАК ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТСписокУсловий
	|ИЗ
	|	&ТаблицаУсловийОтбора КАК ТаблицаУсловийОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУсловийОтбора.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение КАК Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование КАК ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяРасходов,
	|	СУММА(БухучетНачисленияУдержания.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучет
	|ИЗ
	|	ВТСписокУсловий КАК ТаблицаУсловийОтбора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержания
	|		ПО ТаблицаУсловийОтбора.ДокументОснование = БухучетНачисленияУдержания.Регистратор
	|			И (НЕ БухучетНачисленияУдержания.Регистратор ССЫЛКА Документ.ПереносЗатратНаПерсоналМеждуСтатьями)
	|			И ТаблицаУсловийОтбора.Подразделение = БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации
	|			И ТаблицаУсловийОтбора.ФизическоеЛицо = БухучетНачисленияУдержания.ФизическоеЛицо
	|			И ТаблицаУсловийОтбора.МесяцНалоговогоПериода = БухучетНачисленияУдержания.ДатаПолученияДохода
	|			И (БухучетНачисленияУдержания.ДатаПолученияДохода <> ДАТАВРЕМЯ(1, 1, 1))
	|			И (БухучетНачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУсловийОтбора.ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаУсловийОтбора.ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ,
	|	СУММА(БухучетНачисленияУдержания.Сумма)
	|ИЗ
	|	ВТСписокУсловий КАК ТаблицаУсловийОтбора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержания
	|		ПО ТаблицаУсловийОтбора.ДокументОснование = БухучетНачисленияУдержания.ПервичныйРегистратор
	|			И (БухучетНачисленияУдержания.Регистратор ССЫЛКА Документ.ПереносЗатратНаПерсоналМеждуСтатьями)
	|			И ТаблицаУсловийОтбора.Подразделение = БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации
	|			И ТаблицаУсловийОтбора.ФизическоеЛицо = БухучетНачисленияУдержания.ФизическоеЛицо
	|			И ТаблицаУсловийОтбора.МесяцНалоговогоПериода = БухучетНачисленияУдержания.ДатаПолученияДохода
	|			И (БухучетНачисленияУдержания.ДатаПолученияДохода <> ДАТАВРЕМЯ(1, 1, 1))
	|			И (БухучетНачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУсловийОтбора.ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаУсловийОтбора.ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ,
	|	СУММА(БухучетНачисленияУдержания.Сумма)
	|ИЗ
	|	ВТСписокУсловий КАК ТаблицаУсловийОтбора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержания
	|		ПО ТаблицаУсловийОтбора.ДокументОснование = БухучетНачисленияУдержания.Регистратор
	|			И (НЕ БухучетНачисленияУдержания.Регистратор ССЫЛКА Документ.ПереносЗатратНаПерсоналМеждуСтатьями)
	|			И ТаблицаУсловийОтбора.Подразделение = БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации
	|			И ТаблицаУсловийОтбора.ФизическоеЛицо = БухучетНачисленияУдержания.ФизическоеЛицо
	|			И (БухучетНачисленияУдержания.ДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1))
	|			И (БухучетНачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУсловийОтбора.ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаУсловийОтбора.ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ,
	|	СУММА(БухучетНачисленияУдержания.Сумма)
	|ИЗ
	|	ВТСписокУсловий КАК ТаблицаУсловийОтбора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержания
	|		ПО ТаблицаУсловийОтбора.ДокументОснование = БухучетНачисленияУдержания.ПервичныйРегистратор
	|			И (БухучетНачисленияУдержания.Регистратор ССЫЛКА Документ.ПереносЗатратНаПерсоналМеждуСтатьями)
	|			И ТаблицаУсловийОтбора.Подразделение = БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации
	|			И ТаблицаУсловийОтбора.ФизическоеЛицо = БухучетНачисленияУдержания.ФизическоеЛицо
	|			И (БухучетНачисленияУдержания.ДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1))
	|			И (БухучетНачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУсловийОтбора.ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокУсловий.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокУсловий.Подразделение КАК Подразделение,
	|	СписокУсловий.ДокументОснование КАК ДокументОснование,
	|	СписокУсловий.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ЕСТЬNULL(Бухчет.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) КАК СтатьяФинансирования,
	|	ЕСТЬNULL(Бухчет.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) КАК СтатьяРасходов,
	|	ЕСТЬNULL(Бухчет.Сумма, 0) КАК Сумма
	|ИЗ
	|	ВТСписокУсловий КАК СписокУсловий
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучет КАК Бухчет
	|		ПО СписокУсловий.ФизическоеЛицо = Бухчет.ФизическоеЛицо
	|			И СписокУсловий.Подразделение = Бухчет.Подразделение
	|			И СписокУсловий.ДокументОснование = Бухчет.ДокументОснование
	|			И СписокУсловий.МесяцНалоговогоПериода = Бухчет.МесяцНалоговогоПериода";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

Функция МетаданныеРегистровПодсистемы()
	Регистры = Новый Массив;
	Регистры.Добавить(Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам);
	Регистры.Добавить(Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам);
	Регистры.Добавить(Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникамАвансом);
	
	Возврат Регистры;
КонецФункции


// Функция дополняет переданную таблицу значений результатами отражения в бухучете исчисленного НДФЛ.
//	Параметры
//		ТаблицаУсловийОтбора, таблица значений с полями
//			* ФизическоеЛицо
//			* Подразделение, тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизации
//			* ДокументОснование, ОпределяемыйТип.ДокументыОснованияНДФЛ
//			* МесяцНалоговогоПериода, дата получения дохода.
//
//	Возвращаемое значение - таблица значений с полями
//			* ФизическоеЛицо
//			* Подразделение, тип ОпределяемыйТип.ТерриторияВыполненияРаботВОрганизаци
//			* ДокументОснование, ОпределяемыйТип.ДокументыОснованияНДФЛ
//			* МесяцНалоговогоПериода, дата получения дохода
//			* СтатьяФинансирования, Тип СправочникСсылка.СтатьиФинансированияЗарплата
//			* СтатьяРасходов, Тип СправочникСсылка.СтатьиРасходовЗарплата
//			* Сумма
//
Функция БухучетНДФЛФизическихЛицПоДокументамОснованиям(ТаблицаУсловийОтбора) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаУсловийОтбора", ТаблицаУсловийОтбора);
	Запрос.УстановитьПараметр("ИспользоватьСтатьиРасходов", ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении"));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаУсловийОтбора.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение КАК Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование КАК ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТСписокУсловий
	|ИЗ
	|	&ТаблицаУсловийОтбора КАК ТаблицаУсловийОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУсловийОтбора.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение КАК Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование КАК ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяРасходов,
	|	СУММА(БухучетНачисленияУдержания.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучет
	|ИЗ
	|	ВТСписокУсловий КАК ТаблицаУсловийОтбора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНачисленияУдержания
	|		ПО ТаблицаУсловийОтбора.ДокументОснование = БухучетНачисленияУдержания.Регистратор
	|			И ТаблицаУсловийОтбора.ФизическоеЛицо = БухучетНачисленияУдержания.ФизическоеЛицо
	|			И (БухучетНачисленияУдержания.НачислениеУдержание В (ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛДоходыКонтрагентов), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛРасчетыСБывшимиСотрудниками), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивиденды), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивидендыСотрудникам)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУсловийОтбора.ФизическоеЛицо,
	|	ТаблицаУсловийОтбора.Подразделение,
	|	ТаблицаУсловийОтбора.ДокументОснование,
	|	ТаблицаУсловийОтбора.МесяцНалоговогоПериода,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиРасходов
	|			ТОГДА БухучетНачисленияУдержания.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокУсловий.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокУсловий.Подразделение КАК Подразделение,
	|	СписокУсловий.ДокументОснование КАК ДокументОснование,
	|	СписокУсловий.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ЕСТЬNULL(Бухчет.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) КАК СтатьяФинансирования,
	|	ЕСТЬNULL(Бухчет.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) КАК СтатьяРасходов,
	|	ЕСТЬNULL(Бухчет.Сумма, 0) КАК Сумма
	|ИЗ
	|	ВТСписокУсловий КАК СписокУсловий
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучет КАК Бухчет
	|		ПО СписокУсловий.ФизическоеЛицо = Бухчет.ФизическоеЛицо
	|			И СписокУсловий.Подразделение = Бухчет.Подразделение
	|			И СписокУсловий.ДокументОснование = Бухчет.ДокументОснование
	|			И СписокУсловий.МесяцНалоговогоПериода = Бухчет.МесяцНалоговогоПериода";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

////////////////////////////////////////////////////////////////////////////////
// Блок функций первоначального заполнения и обновления ИБ.
//

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.16.10";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьБухучетЗарплатыПервичныхДокументов";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.19.43";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.УстановитьИспользованиеЕНВД";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.22.165";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ЗаполнитьТерриториюВыполненияРаботВОрганизацииВБухучетНачисленияУдержания";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.26.4";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ЗаполнитьИзмерениеДокументОснованиеРегистраБухучетПлановыхНачислений";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.12";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ЗаполнитьДвиженияБухучетНачисленияУдержанияПоСотрудникамПерерасчетНДФЛ";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();   
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("0bd22a82-1bc0-49ed-bf84-da7ac4b587d8");
	Обработчик.Комментарий = НСтр("ru = 'Обновление движений в регистре ""БухучетНачисленияУдержанияПоСотрудникам"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.45";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ЗаполнитьКоэффициентыРаспределенияСреднегоЗаработка";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("867c4eb9-d660-4a8f-980e-be0385415c2a");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение коэффициентов распределения среднего заработка.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.45";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ЗаполнитьКоэффициентыРаспределенияСреднегоЗаработкаФСС";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e8f977fc-130c-4f97-8f0c-eb7cd04619c5");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение коэффициентов распределения среднего заработка для пособий.'");
		
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.68";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьСтратегиюОтраженияВБухучетеУдержаний";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();   
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("47de3e5b-f8c9-4ab3-85a7-d436f115a2c2");
	Обработчик.Комментарий = НСтр("ru = 'Обновление стратегии отражения удержаний в бухучете.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.3.67";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьВидОперацииРасходыПоСтрахованиюБюджет";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();   
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("9a944acf-768c-4bd2-9490-919b54014974");
	Обработчик.Комментарий = НСтр("ru = 'Обновление вида операции для отражения в бухучете расходов по страхованию.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.3.70";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьБухучетЗарплатыСотрудниковНеИспользуется";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();   
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("09d77b14-a8e9-4aff-b232-7b79a0359818");
	Обработчик.Комментарий = НСтр("ru = 'Обновление сведений бухучета сотрудников.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.3.83";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьВидОперацииЕжегодныеОтпуска";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();   
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("3382a671-4abe-404f-b940-dfc122a5ec5a");
	Обработчик.Комментарий = НСтр("ru = 'Обновление видов операций ежегодных отпусков.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.3.127";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ЗаполнитьДвиженияБухучетНачисленияУдержанияНДФЛДляПередачиВНалоговыйОрган";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();   
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("dcfc72a4-188d-4e2d-96a2-9d565def96ff");
	Обработчик.Комментарий = НСтр("ru = 'Обновление движений регистра ""Бухучет начисления удержания по сотрудникам""  по документу ""2-НДФЛ для передачи в ИФНС"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.5.8";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ОбновитьСтратегиюОтраженияВБухучетеНачислений";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();   
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("db60ab7e-bdef-4ade-a097-e7d238be67bb");
	Обработчик.Комментарий = НСтр("ru = 'Обновление стратегии отражения начислений в бухучете.'");
	
КонецПроцедуры

Функция ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачисленнаяЗарплатаИВзносы.Ссылка,
	|	НачисленнаяЗарплатаИВзносы.ФизическоеЛицо,
	|	НачисленнаяЗарплатаИВзносы.Подразделение,
	|	НачисленнаяЗарплатаИВзносы.ВидОперации,
	|	НачисленнаяЗарплатаИВзносы.СтатьяФинансирования,
	|	НачисленнаяЗарплатаИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленнаяЗарплатаИВзносы.ОблагаетсяЕНВД,
	|	НачисленнаяЗарплатаИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленнаяЗарплатаИВзносы.ПериодПринятияРасходов,
	|	НачисленнаяЗарплатаИВзносы.Сумма,
	|	НачисленнаяЗарплатаИВзносы.ПФРСтраховая,
	|	НачисленнаяЗарплатаИВзносы.ПФРНакопительная,
	|	НачисленнаяЗарплатаИВзносы.ФСС,
	|	НачисленнаяЗарплатаИВзносы.ФФОМС,
	|	НачисленнаяЗарплатаИВзносы.ТФОМС,
	|	НачисленнаяЗарплатаИВзносы.ПФРНаДоплатуЛетчикам,
	|	НачисленнаяЗарплатаИВзносы.ПФРНаДоплатуШахтерам,
	|	НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	НачисленнаяЗарплатаИВзносы.ФССНесчастныеСлучаи,
	|	НачисленнаяЗарплатаИВзносы.ПФРПоСуммарномуТарифу
	|ПОМЕСТИТЬ ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете
	|ИЗ
	|	#НачисленнаяЗарплатаИВзносы КАК НачисленнаяЗарплатаИВзносы
	|ГДЕ
	|	НачисленнаяЗарплатаИВзносы.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				НачисленнаяЗарплатаИВзносы.Ссылка
	|			ИЗ
	|				#НачисленнаяЗарплатаИВзносы КАК НачисленнаяЗарплатаИВзносы
	|			ГДЕ
	|				НачисленнаяЗарплатаИВзносы.ВидОперации В (&ВидыОпераций))";
	
	ТекстЗапроса1 = "";
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.БухучетХозрасчетныхОрганизаций") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("БухучетХозрасчетныхОрганизацийРасширенный");
		ТекстЗапроса1 = Модуль.ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете(ТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса2 = "";
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений");
		ТекстЗапроса2 = Модуль.ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете(ТекстЗапроса);
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗапроса1) И ПустаяСтрока(ТекстЗапроса2) Тогда
		Возврат "";
	КонецЕсли;	
	
	Если Не ПустаяСтрока(ТекстЗапроса1) И НЕ ПустаяСтрока(ТекстЗапроса2) Тогда
		
		ТекстЗапроса2 = СтрЗаменить(ТекстЗапроса2,"ПОМЕСТИТЬ ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете","");
		
		ТекстЗапроса = ТекстЗапроса1 + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|" + ТекстЗапроса2;
		
	ИначеЕсли Не ПустаяСтрока(ТекстЗапроса1) Тогда
		ТекстЗапроса = ТекстЗапроса1;
	Иначе
		ТекстЗапроса = ТекстЗапроса2;
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками()Экспорт

	Запрос = Новый Запрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.ВидОперацииПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПрочиеРасчетыСПерсоналом)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		УдержаниеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		УдержаниеОбъект.ВидОперацииПоЗарплате = Перечисления.ВидыОперацийПоЗарплате.УдержаниеПоПрочимОперациямСРаботниками;
		УдержаниеОбъект.ОбменДанными.Загрузка = Истина;
		УдержаниеОбъект.Записать();
		
	КонецЦикла;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.БухучетХозрасчетныхОрганизаций") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("БухучетХозрасчетныхОрганизацийРасширенный");
		Модуль.ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками();
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений");
		Модуль.ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками();
	КонецЕсли;

КонецПроцедуры

Процедура ОбновитьБухучетЗарплатыПервичныхДокументов() Экспорт

	Запрос = Новый Запрос;
	
	// Обновление записей регистра БухучетЗарплатыПервичныхДокументов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетДокументов.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	РегистрСведений.БухучетЗарплатыПервичныхДокументов КАК БухучетДокументов
	|ГДЕ
	|	(БухучетДокументов.УдалитьСотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|			ИЛИ БухучетДокументов.УдалитьОблагаетсяЕНВД)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БухучетЗарплатыПервичныхДокументов.ДокументОснование КАК ДокументОснование,
	|	БухучетЗарплатыПервичныхДокументов.НачислениеУдержание,
	|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК УдалитьСотрудник,
	|	БухучетЗарплатыПервичныхДокументов.СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплатыПервичныхДокументов.СтатьяФинансирования,
	|	БухучетЗарплатыПервичныхДокументов.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА БухучетЗарплатыПервичныхДокументов.УдалитьОблагаетсяЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	ЛОЖЬ КАК УдалитьОблагаетсяЕНВД
	|ИЗ
	|	РегистрСведений.БухучетЗарплатыПервичныхДокументов КАК БухучетЗарплатыПервичныхДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыКОбработке КАК ВТДокументыКОбработке
	|		ПО БухучетЗарплатыПервичныхДокументов.ДокументОснование = ВТДокументыКОбработке.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОснование
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ДокументОснование") Цикл
		
		НаборЗаписей = РегистрыСведений.БухучетЗарплатыПервичныхДокументов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументОснование.Установить(Выборка.ДокументОснование);
		
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

	// Обновление реквизита ОтношениеКЕНВД в документах.
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыплатаБывшимСотрудникам.Ссылка,
	|	ВыплатаБывшимСотрудникам.УдалитьОблагаетсяЕНВД
	|ИЗ
	|	Документ.ВыплатаБывшимСотрудникам КАК ВыплатаБывшимСотрудникам
	|ГДЕ
	|	ВыплатаБывшимСотрудникам.УдалитьОблагаетсяЕНВД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияПрочихДоходов.Ссылка,
	|	РегистрацияПрочихДоходов.УдалитьОблагаетсяЕНВД
	|ИЗ
	|	Документ.РегистрацияПрочихДоходов КАК РегистрацияПрочихДоходов
	|ГДЕ
	|	РегистрацияПрочихДоходов.УдалитьОблагаетсяЕНВД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоходВНатуральнойФорме.Ссылка,
	|	ДоходВНатуральнойФорме.УдалитьОблагаетсяЕНВД
	|ИЗ
	|	Документ.ДоходВНатуральнойФорме КАК ДоходВНатуральнойФорме
	|ГДЕ
	|	ДоходВНатуральнойФорме.УдалитьОблагаетсяЕНВД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МатериальнаяПомощь.Ссылка,
	|	МатериальнаяПомощь.УдалитьОблагаетсяЕНВД
	|ИЗ
	|	Документ.МатериальнаяПомощь КАК МатериальнаяПомощь
	|ГДЕ
	|	МатериальнаяПомощь.УдалитьОблагаетсяЕНВД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Премия.Ссылка,
	|	Премия.УдалитьОблагаетсяЕНВД
	|ИЗ
	|	Документ.Премия КАК Премия
	|ГДЕ
	|	Премия.УдалитьОблагаетсяЕНВД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПризПодарок.Ссылка,
	|	ПризПодарок.УдалитьОблагаетсяЕНВД
	|ИЗ
	|	Документ.ПризПодарок КАК ПризПодарок
	|ГДЕ
	|	ПризПодарок.УдалитьОблагаетсяЕНВД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РазовоеНачисление.Ссылка,
	|	РазовоеНачисление.УдалитьОблагаетсяЕНВД
	|ИЗ
	|	Документ.РазовоеНачисление КАК РазовоеНачисление
	|ГДЕ
	|	РазовоеНачисление.УдалитьОблагаетсяЕНВД";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ОтношениеКЕНВД = Перечисления.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД;
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
	
	// Добавление записей в регистр БухучетЗарплатыПервичныхДокументов по новым документам.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыплатаБывшимСотрудникам.Ссылка,
	|	ВыплатаБывшимСотрудникам.ВидВыплаты КАК Начисление,
	|	ВыплатаБывшимСотрудникам.СтатьяФинансирования,
	|	ВыплатаБывшимСотрудникам.СтатьяРасходов,
	|	ВыплатаБывшимСотрудникам.СпособОтраженияЗарплатыВБухучете,
	|	ВыплатаБывшимСотрудникам.ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.ВыплатаБывшимСотрудникам КАК ВыплатаБывшимСотрудникам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияПрочихДоходов.Ссылка,
	|	РегистрацияПрочихДоходов.ВидПрочегоДохода,
	|	РегистрацияПрочихДоходов.СтатьяФинансирования,
	|	РегистрацияПрочихДоходов.СтатьяРасходов,
	|	РегистрацияПрочихДоходов.СпособОтраженияЗарплатыВБухучете,
	|	РегистрацияПрочихДоходов.ОтношениеКЕНВД
	|ИЗ
	|	Документ.РегистрацияПрочихДоходов КАК РегистрацияПрочихДоходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК ДокументОснование,
	|	Документы.Начисление КАК НачислениеУдержание,
	|	Документы.СтатьяФинансирования,
	|	Документы.СтатьяРасходов,
	|	Документы.СпособОтраженияЗарплатыВБухучете,
	|	Документы.ОтношениеКЕНВД
	|ИЗ
	|	ВТДокументы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПервичныхДокументов КАК БухучетЗарплатыПервичныхДокументов
	|		ПО Документы.Ссылка = БухучетЗарплатыПервичныхДокументов.ДокументОснование
	|ГДЕ
	|	БухучетЗарплатыПервичныхДокументов.ОтношениеКЕНВД ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОснование
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ДокументОснование") Цикл
		
		НаборЗаписей = РегистрыСведений.БухучетЗарплатыПервичныхДокументов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументОснование.Установить(Выборка.ДокументОснование);
		
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьИспользованиеЕНВД() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетнаяПолитикаОрганизаций.ПлательщикЕНВД
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|ГДЕ
	|	УчетнаяПолитикаОрганизаций.ПлательщикЕНВД";
	
	Результат = Запрос.Выполнить();
	
	Константы.ИспользуетсяЕНВД.Установить(Не Результат.Пустой());
	Константы.ИспользуетсяЕНВДВБюджетномУчреждении.Установить(Не Результат.Пустой() И Константы.РаботаВБюджетномУчреждении.Получить());

КонецПроцедуры

Процедура УчетнаяПолитикаОрганизацииПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	УстановитьИспользованиеЕНВД();
	
КонецПроцедуры

Процедура ЗаполнитьБухучетНовойОрганизацииПриЗаписи(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Константы.ИспользоватьСтатьиФинансированияЗарплата.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	РаботаВБюджетномУчреждении = Константы.РаботаВБюджетномУчреждении.Получить();
	РаботаВХозрасчетнойОрганизации = Константы.РаботаВХозрасчетнойОрганизации.Получить();
	
	ЗаписьПоУмолчанию = Неопределено;
	Если РаботаВБюджетномУчреждении И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений");
		ЗаписьПоУмолчанию = Модуль.БухучетОрганизацииПоУмолчанию();
	ИначеЕсли РаботаВХозрасчетнойОрганизации И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетХозрасчетныхОрганизаций") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетХозрасчетныхОрганизаций");
		ЗаписьПоУмолчанию = Модуль.БухучетОрганизацииПоУмолчанию();	
	КонецЕсли;
	
	Если ЗаписьПоУмолчанию = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	НаборЗаписей = РегистрыСведений.БухучетЗарплатыОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
	НаборЗаписей.Отбор.Организация.Установить(Источник.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ЗаписьПоУмолчанию);
		НоваяЗапись.Организация = Источник.Ссылка;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОбновитьВидОперацииЕжегодныеОтпуска(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска), ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеНаПериодОтпуска))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска)
	|	КОНЕЦ КАК ВидыОперацийПоЗарплате
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	(Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска), ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеНаПериодОтпуска))
	|				И Начисления.ВидОперацииПоЗарплате <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск)
	|			ИЛИ Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска), ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеКомпенсацияОтпуска))
	|				И Начисления.ВидОперацииПоЗарплате <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска))
	|	И Начисления.ВидОтпуска.ОтпускЯвляетсяЕжегодным";
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "ПланВидовРасчета.Начисления", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		НачислениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		НачислениеОбъект.ВидОперацииПоЗарплате = Выборка.ВидыОперацийПоЗарплате;
		НачислениеОбъект.ОбменДанными.Загрузка = Истина;
		НачислениеОбъект.Записать();
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьВидОперацииПоЗарплатеЕжегодныйОтпускПриЗаписи(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидОтпуска", Источник.Ссылка);
	Запрос.УстановитьПараметр("ОтпускЯвляетсяЕжегодным", Источник.ОтпускЯвляетсяЕжегодным);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Ссылка,
	|	ВЫБОР
	|		КОГДА Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска), ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеКомпенсацияОтпуска))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КомпенсацияОтпуска
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.ВидОтпуска = &ВидОтпуска
	|	И (&ОтпускЯвляетсяЕжегодным
	|				И НЕ Начисления.ВидОперацииПоЗарплате В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска))
	|			ИЛИ НЕ &ОтпускЯвляетсяЕжегодным
	|				И Начисления.ВидОперацииПоЗарплате В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска)))";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Источник.ОтпускЯвляетсяЕжегодным Тогда
			ВидОперации = ?(Выборка.КомпенсацияОтпуска,Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска,Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск);
		Иначе
			ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НачисленоДоход;
		КонецЕсли;
		ВидРасчетаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВидРасчетаОбъект.ВидОперацииПоЗарплате = ВидОперации;
		ВидРасчетаОбъект.ОбменДанными.Загрузка = Истина;
		ВидРасчетаОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТерриториюВыполненияРаботВОрганизацииВБухучетНачисленияУдержания() Экспорт

	НДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НДФЛ", НДФЛ);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БухучетНачисленияУдержания.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержания
	|ГДЕ
	|	БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации.Ссылка ЕСТЬ NULL 
	|	И БухучетНачисленияУдержания.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И БухучетНачисленияУдержания.НачислениеУдержание В(&НДФЛ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачисленияУдержания.Период,
	|	БухучетНачисленияУдержания.Регистратор КАК Регистратор,
	|	БухучетНачисленияУдержания.НомерСтроки КАК НомерСтроки,
	|	БухучетНачисленияУдержания.Организация,
	|	БухучетНачисленияУдержания.ФизическоеЛицо,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	БухучетНачисленияУдержания.СтатьяРасходов,
	|	БухучетНачисленияУдержания.Сотрудник,
	|	БухучетНачисленияУдержания.Подразделение,
	|	БухучетНачисленияУдержания.НачислениеУдержание,
	|	БухучетНачисленияУдержания.Сумма,
	|	БухучетНачисленияУдержания.ГруппаНачисленияУдержанияВыплаты,
	|	БухучетНачисленияУдержания.ПериодДействия,
	|	БухучетНачисленияУдержания.ДокументОснование,
	|	БухучетНачисленияУдержания.Контрагент,
	|	БухучетНачисленияУдержания.ДатаНачала,
	|	БухучетНачисленияУдержания.ДатаОкончания,
	|	БухучетНачисленияУдержания.ИдентификаторСтроки,
	|	БухучетНачисленияУдержания.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисленияУдержания.ОблагаетсяЕНВД,
	|	БухучетНачисленияУдержания.ВидОперации,
	|	БухучетНачисленияУдержания.НеУчитыватьВРаспределенииПриОкончательномРасчете,
	|	ВЫБОР
	|		КОГДА БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации.Ссылка ЕСТЬ NULL 
	|				И БухучетНачисленияУдержания.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				И БухучетНачисленияУдержания.НачислениеУдержание В (&НДФЛ)
	|			ТОГДА БухучетНачисленияУдержания.Подразделение
	|		ИНАЧЕ БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации
	|	КОНЕЦ КАК ТерриторияВыполненияРаботВОрганизации
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержания
	|ГДЕ
	|	БухучетНачисленияУдержания.Регистратор В
	|			(ВЫБРАТЬ
	|				ВТРегистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей = РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		Пока Выборка.Следующий() Цикл
		    ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НДФЛ", НДФЛ);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БухучетНачисленияУдержания.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНачисленияУдержания
	|ГДЕ
	|	БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации.Ссылка ЕСТЬ NULL 
	|	И БухучетНачисленияУдержания.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И БухучетНачисленияУдержания.НачислениеУдержание В(&НДФЛ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачисленияУдержания.Период,
	|	БухучетНачисленияУдержания.Регистратор КАК Регистратор,
	|	БухучетНачисленияУдержания.НомерСтроки КАК НомерСтроки,
	|	БухучетНачисленияУдержания.Организация,
	|	БухучетНачисленияУдержания.ФизическоеЛицо,
	|	БухучетНачисленияУдержания.СтатьяФинансирования,
	|	БухучетНачисленияУдержания.СтатьяРасходов,
	|	БухучетНачисленияУдержания.Сотрудник,
	|	БухучетНачисленияУдержания.Подразделение,
	|	БухучетНачисленияУдержания.НачислениеУдержание,
	|	БухучетНачисленияУдержания.Сумма,
	|	БухучетНачисленияУдержания.ГруппаНачисленияУдержанияВыплаты,
	|	БухучетНачисленияУдержания.ДокументОснование,
	|	БухучетНачисленияУдержания.ИдентификаторСтроки,
	|	БухучетНачисленияУдержания.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисленияУдержания.ОблагаетсяЕНВД,
	|	БухучетНачисленияУдержания.ВидОперации,
	|	ВЫБОР
	|		КОГДА БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации.Ссылка ЕСТЬ NULL 
	|				И БухучетНачисленияУдержания.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				И БухучетНачисленияУдержания.НачислениеУдержание В (&НДФЛ)
	|			ТОГДА БухучетНачисленияУдержания.Подразделение
	|		ИНАЧЕ БухучетНачисленияУдержания.ТерриторияВыполненияРаботВОрганизации
	|	КОНЕЦ КАК ТерриторияВыполненияРаботВОрганизации
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНачисленияУдержания
	|ГДЕ
	|	БухучетНачисленияУдержания.Регистратор В
	|			(ВЫБРАТЬ
	|				ВТРегистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей = РегистрыНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		Пока Выборка.Следующий() Цикл
		    ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьИзмерениеДокументОснованиеРегистраБухучетПлановыхНачислений() Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	БухучетПлановыхНачислений.*
	               |ИЗ
	               |	РегистрСведений.БухучетПлановыхНачислений КАК БухучетПлановыхНачислений
	               |ГДЕ
	               |	БухучетПлановыхНачислений.ДокументОснование = НЕОПРЕДЕЛЕНО
	               |	И БухучетПлановыхНачислений.УдалитьДокументОснование <> НЕОПРЕДЕЛЕНО";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл 
		
		НаборЗаписей = РегистрыСведений.БухучетПлановыхНачислений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.ДокументОснование = Выборка.УдалитьДокументОснование;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДвиженияБухучетНачисленияУдержанияПоСотрудникамПерерасчетНДФЛ(ПараметрыОбновления = Неопределено) Экспорт
	
	Если Не ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачисленияУдержанияПоСотрудникам.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.ПерерасчетНДФЛ КАК ПерерасчетНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ПО ПерерасчетНДФЛ.Ссылка = НачисленияУдержанияПоСотрудникам.Регистратор
	|			И (НачисленияУдержанияПоСотрудникам.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержанияПоСотрудникам
	|		ПО ПерерасчетНДФЛ.Ссылка = БухучетНачисленияУдержанияПоСотрудникам.Регистратор
	|ГДЕ
	|	БухучетНачисленияУдержанияПоСотрудникам.НомерСтроки ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияУдержанияПоСотрудникам.Период,
	|	НачисленияУдержанияПоСотрудникам.Регистратор КАК Регистратор,
	|	НачисленияУдержанияПоСотрудникам.НомерСтроки КАК НомерСтроки,
	|	НачисленияУдержанияПоСотрудникам.Организация,
	|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
	|	НачисленияУдержанияПоСотрудникам.СтатьяФинансирования,
	|	НачисленияУдержанияПоСотрудникам.СтатьяРасходов,
	|	НачисленияУдержанияПоСотрудникам.Сотрудник,
	|	НачисленияУдержанияПоСотрудникам.Подразделение,
	|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
	|	НачисленияУдержанияПоСотрудникам.Сумма,
	|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты,
	|	НачисленияУдержанияПоСотрудникам.ПериодДействия,
	|	НачисленияУдержанияПоСотрудникам.ДокументОснование,
	|	НачисленияУдержанияПоСотрудникам.Контрагент,
	|	НачисленияУдержанияПоСотрудникам.ДатаНачала,
	|	НачисленияУдержанияПоСотрудникам.ДатаОкончания,
	|	НачисленияУдержанияПоСотрудникам.ДанныеМежрасчетногоПериода,
	|	НачисленияУдержанияПоСотрудникам.ТерриторияВыполненияРаботВОрганизации
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ПО ДокументыКОбработке.Регистратор = НачисленияУдержанияПоСотрудникам.Регистратор
	|			И (НачисленияУдержанияПоСотрудникам.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		НаборЗаписей = РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам.НаборЗаписей", "Регистратор", Выборка.Регистратор) Тогда
			Продолжить;
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ВидОперации = НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = Истина;
			
		КонецЦикла;
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи", Ложь);
		НаборЗаписей.Записать(Ложь);
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьКоэффициентыРаспределенияСреднегоЗаработка(ПараметрыОбновления) Экспорт

	Если Не ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Командировка.Ссылка
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.Командировка КАК Командировка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Командировка.СреднийЗаработокОбщий КАК КомандировкаСреднийЗаработокОбщий
	|		ПО Командировка.Ссылка = КомандировкаСреднийЗаработокОбщий.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Командировка.КоэффициентыРаспределенияСреднегоЗаработка КАК КомандировкаКоэффициенты
	|		ПО Командировка.Ссылка = КомандировкаКоэффициенты.Ссылка
	|ГДЕ
	|	КомандировкаКоэффициенты.НомерСтроки ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ДокументыКОбработке.Ссылка,
	|	Командировка.Проведен
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Командировка КАК Командировка
	|		ПО ДокументыКОбработке.Ссылка = Командировка.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Командировка.ПериодРегистрации УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	
	ПараметрыОбновления.ОбработкаЗавершена = Ложь;
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыОбновления.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.КоэффициентыРаспределенияСреднегоЗаработка.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ФормироватьДвижения = Выборка.Проведен;
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		НачатьТранзакцию();
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировки = БлокировкаДанных.Добавить("Документ.Командировка");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		Если ФормироватьДвижения Тогда
			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.КоэффициентыРаспределенияСреднегоЗаработка.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
		КонецЕсли;
		
		Попытка
			БлокировкаДанных.Заблокировать();
		Исключение
			// не удалось заблокировать объект, пропускаем
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;
		
		ОписаниеДокумента = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеРасчетногоДокумента();
		ОписаниеДокумента.ДатаНачалаСобытияИмя = "ДатаНачалаСобытия";
		
		ИспользуетсяСреднечасовойЗаработок = Ложь;
		Если ДокументОбъект.ВнутрисменнаяКомандировка Тогда
			ИспользуетсяСреднечасовойЗаработок = Истина;
		ИначеЕсли УчетРабочегоВремениРасширенный.СотрудникуПрименяетсяСуммированныйУчетРабочегоВремени(ДокументОбъект.Сотрудник, ДокументОбъект.ДатаНачалаСобытия) Тогда
			ИспользуетсяСреднечасовойЗаработок = Истина;
		ИначеЕсли УчетСреднегоЗаработка.НачислениеИспользуетСреднечасовойЗаработок(ДокументОбъект.ВидРасчета) Тогда
			ИспользуетсяСреднечасовойЗаработок = Истина;	
		КонецЕсли;
		ОписаниеДокумента.ЭтоСреднечасовойЗаработок = ИспользуетсяСреднечасовойЗаработок;
		
		
		
		ТаблицаКоэффициентов = УчетСреднегоЗаработка.КоэффициентыРаспределенияСреднегоЗаработкаДокумента(ДокументОбъект, ОписаниеДокумента)[Перечисления.СпособыРасчетаНачислений.ПустаяСсылка()];
		ДокументОбъект.КоэффициентыРаспределенияСреднегоЗаработка.Загрузить(ТаблицаКоэффициентов);
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		Если ФормироватьДвижения И ТаблицаКоэффициентов.Количество() > 0 Тогда
			
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
			Для каждого СтрокаТЗ Из ТаблицаКоэффициентов Цикл
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор = Выборка.Ссылка;
				НоваяЗапись.ДокументОснование = Выборка.Ссылка;
				НоваяЗапись.СтатьяФинансирования = СтрокаТЗ.СтатьяФинансирования;
				НоваяЗапись.Коэффициент = СтрокаТЗ.Коэффициент;
			КонецЦикла;
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьКоэффициентыРаспределенияСреднегоЗаработкаФСС(ПараметрыОбновления) Экспорт
	
	Если Не ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.СреднийЗаработокФСС КАК ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС
	|		ПО ОтпускПоУходуЗаРебенком.Ссылка = ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоэффициентыРаспределенияСреднегоЗаработка КАК Коэффициенты
	|		ПО ОтпускПоУходуЗаРебенком.Ссылка = Коэффициенты.ДокументОснование
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Проведен
	|	И Коэффициенты.НомерСтроки ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ДокументыКОбработке.Ссылка КАК Ссылка,
	|	ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СУММА(ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.Сумма) КАК Сумма
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.СреднийЗаработокФСС КАК ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС
	|		ПО ДокументыКОбработке.Ссылка = ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыКОбработке.Ссылка,
	|	ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.СтатьяФинансирования
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ";
	РезультатЗапроса = Запрос.Выполнить();
	
	ПараметрыОбновления.ОбработкаЗавершена = Ложь;
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыОбновления.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.КоэффициентыРаспределенияСреднегоЗаработка.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		НачатьТранзакцию();
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.КоэффициентыРаспределенияСреднегоЗаработка.НаборЗаписей");
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
		
		Попытка
			БлокировкаДанных.Заблокировать();
		Исключение
			// не удалось заблокировать объект, пропускаем
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;
		
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Регистратор = Выборка.Ссылка;
			НоваяЗапись.ДокументОснование = Выборка.Ссылка;
			НоваяЗапись.СтатьяФинансирования = Выборка.СтатьяФинансирования;
			НоваяЗапись.Коэффициент = Выборка.Сумма
		КонецЦикла;
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОбновитьСтратегиюОтраженияВБухучетеУдержаний(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РаботаВБюджетномУчреждении", ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении"));
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.Ссылка,
	|	ВЫБОР
	|		КОГДА Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	|				ИЛИ Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента)
	|				ИЛИ Удержания.ТребуетсяРасчетБазы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам)
	|		КОГДА &РаботаВБюджетномУчреждении
	|				И Удержания.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				И Удержания.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|				И Удержания.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоФактическимНачислениям)
	|	КОНЕЦ КАК СтратегияОтраженияВУчете,
	|	ВЫБОР
	|		КОГДА Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	|				ИЛИ Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента)
	|				ИЛИ Удержания.ТребуетсяРасчетБазы
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДоступнаСтратегияОтраженияКакЗаданоВидуРасчета
	|ИЗ
	|	ПланВидовРасчета.Удержания КАК Удержания
	|ГДЕ
	|	(Удержания.СтратегияОтраженияВУчете <> ВЫБОР
	|				КОГДА Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	|						ИЛИ Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента)
	|						ИЛИ Удержания.ТребуетсяРасчетБазы
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам)
	|				КОГДА &РаботаВБюджетномУчреждении
	|						И Удержания.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|						И Удержания.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)
	|				КОГДА &ИспользоватьСтатьиФинансирования
	|						И Удержания.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоФактическимНачислениям)
	|			КОНЕЦ
	|			ИЛИ Удержания.ДоступнаСтратегияОтраженияКакЗаданоВидуРасчета <> ВЫБОР
	|				КОГДА Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)
	|						ИЛИ Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента)
	|						ИЛИ Удержания.ТребуетсяРасчетБазы
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "ПланВидовРасчета.Удержания", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ВРОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВРОбъект.СтратегияОтраженияВУчете = Выборка.СтратегияОтраженияВУчете;
		ВРОбъект.ДоступнаСтратегияОтраженияКакЗаданоВидуРасчета = Выборка.ДоступнаСтратегияОтраженияКакЗаданоВидуРасчета;
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		ВРОбъект.Записать();
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьВидОперацииРасходыПоСтрахованиюБюджет(ПараметрыОбновления = Неопределено) Экспорт

	Если Не ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда 
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодамВоеннослужащего), ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоПолутораЛетВоеннослужащим))
	|	И Начисления.ВидОперацииПоЗарплате <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюБюджет)";
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "ПланВидовРасчета.Начисления", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ВРОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВРОбъект.ВидОперацииПоЗарплате = Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюБюджет;
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		ВРОбъект.Записать();
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбновитьБухучетЗарплатыСотрудниковНеИспользуется(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БухучетЗарплатыСотрудников.ДокументОснование.ИсправленныйДокумент КАК ИсправленныйДокумент
	|ПОМЕСТИТЬ ВТИсправленныеДокументы
	|ИЗ
	|	РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплатыСотрудников
	|ГДЕ
	|	НЕ БухучетЗарплатыСотрудников.ДокументОснование.ИсправленныйДокумент.Номер ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетЗарплатыСотрудников.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплатыСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО БухучетЗарплатыСотрудников.ДокументОснование = ИсправленныеДокументы.ИсправленныйДокумент";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрСведений.БухучетЗарплатыСотрудников", "ДокументОснование", Выборка.ДокументОснование) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборИсправленныхЗаписей = РегистрыСведений.БухучетЗарплатыСотрудниковИсправления.СоздатьНаборЗаписей();
		НаборИсправленныхЗаписей.Отбор.ДокументОснование.Установить(Выборка.ДокументОснование);
		
		НаборЗаписей = РегистрыСведений.БухучетЗарплатыСотрудников.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументОснование.Установить(Выборка.ДокументОснование);
		НаборЗаписей.Прочитать();
		Для каждого ЗаписьНабора Из НаборЗаписей Цикл
			НоваяЗапись = НаборИсправленныхЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ЗаписьНабора);
			НоваяЗапись.ПериодИзмерение = ЗаписьНабора.Период;
		КонецЦикла;
		
		НаборИсправленныхЗаписей.ОбменДанными.Загрузка = Истина;
		НаборИсправленныхЗаписей.Записать();
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
				
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьДвиженияБухучетНачисленияУдержанияНДФЛДляПередачиВНалоговыйОрган(ПараметрыОбновления = Неопределено) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачисленияУдержания.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисленияУдержания
	|		ПО НачисленияУдержания.Регистратор = БухучетНачисленияУдержания.Регистратор
	|ГДЕ
	|	НачисленияУдержания.Регистратор ССЫЛКА Документ.СправкиНДФЛДляПередачиВНалоговыйОрган
	|	И НачисленияУдержания.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|	И БухучетНачисленияУдержания.НомерСтроки ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияУдержания.Период КАК Период,
	|	НачисленияУдержания.Регистратор КАК Регистратор,
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НачисленияУдержания.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.Подразделение КАК Подразделение,
	|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
	|	НачисленияУдержания.Сумма КАК Сумма,
	|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты,
	|	НачисленияУдержания.ПериодДействия КАК ПериодДействия,
	|	НачисленияУдержания.ДокументОснование КАК ДокументОснование,
	|	НачисленияУдержания.Контрагент КАК Контрагент,
	|	НачисленияУдержания.ДатаНачала КАК ДатаНачала,
	|	НачисленияУдержания.ДатаОкончания КАК ДатаОкончания,
	|	НачисленияУдержания.ДанныеМежрасчетногоПериода КАК ДанныеМежрасчетногоПериода,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НачисленияУдержания.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО НачисленияУдержания.Регистратор = Регистраторы.Регистратор
	|ГДЕ
	|	НачисленияУдержания.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		Регистратор = Выборка.Регистратор;
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам.НаборЗаписей", "Регистратор", Регистратор) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ВидОперации = НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = Истина;
		КонецЦикла;
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьСтратегиюОтраженияВБухучетеНачислений(ПараметрыОбновления = Неопределено) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	(Начисления.УдалитьСтатьяФинансированияОпределяетсяПоСреднемуЗаработку
	|			ИЛИ Начисления.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам)
	|				И Начисления.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Пустаяссылка))";
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "ПланВидовРасчета.Начисления", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ВРОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВРОбъект.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазеСреднегоЗаработка;
		ВРОбъект.УдалитьСтатьяФинансированияОпределяетсяПоСреднемуЗаработку = Ложь;
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		ВРОбъект.Записать();
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура вызывается при обновлении строк НДФЛ в документе
//
// Параметры
//	ДокументОбъект - ДокументОбъект, в котором необходимо обновить распределение НДФЛ
//	ОбновленныеСтрокиНДФЛ - соответствие, описывает как изменились строки НДФЛ
//			* Ключ - значение реквизита ТЧ НДФЛ.ИдентификаторСтрокиНДФЛ, идентификатор исходной строки, до обработки
//			* Значение - массив, идентификаторы строк, идентификаторы строк, в которые преобразована исходная строка ТЧ
//	НовыйНаборЗаписейБухучета - Неопределено, в этот параметр помещается набор записей, который будет записан в вызывающем методе.
//
Процедура ОбновитьРаспределениеПриОбновленииКатегорииДоходаВИсчисленномНДФЛ(ДокументОбъект, ОбновленныеСтрокиНДФЛ, НовыйНаборЗаписейБухучета) Экспорт
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	Если МетаданныеДокумента.ТабличныеЧасти.Найти("РаспределениеРезультатовУдержаний") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", ДокументОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК Бухучет
	|ГДЕ
	|	Бухучет.Регистратор = &Регистратор
	|	И Бухучет.НачислениеУдержание <> ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК Бухучет
	|ГДЕ
	|	Бухучет.Регистратор = &Регистратор
	|	И Бухучет.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаДвижений = РезультатЗапроса[0].Выгрузить();
	ТаблицаДвиженийНДФЛ = РезультатЗапроса[1].Выгрузить();
	ТаблицаНовыхДвиженийНДФЛ = ТаблицаДвиженийНДФЛ.СкопироватьКолонки();
	ТаблицаДвиженийНДФЛ.Индексы.Добавить("ИдентификаторСтроки");
	
	ТаблицаРаспределенияНДФЛ = Новый ТаблицаЗначений;
	ТаблицаРаспределенияНДФЛ.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	ТаблицаРаспределенияНДФЛ.Колонки.Добавить("СтрокаРаспределения");
	Для каждого СтрокаТЧ Из ДокументОбъект.РаспределениеРезультатовУдержаний Цикл
		Если СтрокаТЧ.ВидУдержания <> Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаРаспределенияНДФЛ.Добавить();
		НоваяСтрока.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
		НоваяСтрока.СтрокаРаспределения = СтрокаТЧ;
	КонецЦикла;
	ТаблицаРаспределенияНДФЛ.Индексы.Добавить("ИдентификаторСтроки");
	
	СтрокиТаблицыНДФЛ = Новый Соответствие;
	Для каждого СтрокаТЧ Из ДокументОбъект.НДФЛ Цикл
		СтрокиТаблицыНДФЛ.Вставить(СтрокаТЧ.ИдентификаторСтрокиНДФЛ, СтрокаТЧ);
	КонецЦикла;
	
	НоваяТаблицаРаспределенияНДФЛ = НоваяТаблицаРаспределениеРезультатовУдержаний();
	Отбор = Новый Структура("ИдентификаторСтроки");
	
	Для каждого ЭлементКоллекции Из ОбновленныеСтрокиНДФЛ Цикл
		
		ИдентификаторСтроки  = ЭлементКоллекции.Ключ;     // идентификатор исходной строки
		НовыеСтрокиНДФЛ		 = ЭлементКоллекции.Значение; // массив идентификаторов новых строк НДФЛ
		
		Отбор.ИдентификаторСтроки = ИдентификаторСтроки;
		// получим строки распределения, соответствующие идентификатору исходной строки НДФЛ
		СтрокиТекущегоРаспределения = ТаблицаРаспределенияНДФЛ.НайтиСтроки(Отбор);
		Если СтрокиТекущегоРаспределения.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// массив строк текущих движений по НДФЛ
		СтрокиТекущихДвижений = ТаблицаДвиженийНДФЛ.НайтиСтроки(Отбор);
		
		НовыеСтрокиРаспределенияНДФЛ = НоваяТаблицаРаспределениеРезультатовУдержаний();
		Для каждого СтрокаТЗ Из СтрокиТекущегоРаспределения Цикл
			ЗаполнитьЗначенияСвойств(НовыеСтрокиРаспределенияНДФЛ.Добавить(), СтрокаТЗ.СтрокаРаспределения);
			ДокументОбъект.РаспределениеРезультатовУдержаний.Удалить(СтрокаТЗ.СтрокаРаспределения);
		КонецЦикла;
		НовыеСтрокиРаспределенияНДФЛ.Свернуть("ИдентификаторСтроки,ВидУдержания,Сотрудник,Подразделение,СтатьяФинансирования,СтатьяРасходов","Результат");
		
		НовыеСтрокиДвижений = ТаблицаНовыхДвиженийНДФЛ.СкопироватьКолонки();
		Для каждого СтрокаДвижений Из СтрокиТекущихДвижений Цикл
			ЗаполнитьЗначенияСвойств(НовыеСтрокиДвижений.Добавить(), СтрокаДвижений);
		КонецЦикла;
		
		Для каждого ИдентификаторСтрокиНДФЛ Из НовыеСтрокиНДФЛ Цикл
			
			// получаем строку табличной части НДФЛ
			СтрокаНДФЛ = СтрокиТаблицыНДФЛ[ИдентификаторСтрокиНДФЛ];
			
			СтрокиРаспределения = НовыеСтрокиРаспределенияНДФЛ.Скопировать();
			ЗарплатаКадры.РазнестиСуммуПоБазе(СтрокаНДФЛ.Налог - СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей, СтрокиРаспределения, "Результат", 0);
			Для каждого СтрокаТЗ Из СтрокиРаспределения Цикл
				НоваяСтрока = НоваяТаблицаРаспределенияНДФЛ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
				НоваяСтрока.ИдентификаторСтроки = ИдентификаторСтрокиНДФЛ;
			КонецЦикла;
			
			СтрокиДвижений = НовыеСтрокиДвижений.Скопировать();
			ЗарплатаКадры.РазнестиСуммуПоБазе(СтрокаНДФЛ.Налог - СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей, СтрокиДвижений, "Сумма", 0);
			Для каждого СтрокаТЗ Из СтрокиДвижений Цикл
				НоваяСтрока = ТаблицаНовыхДвиженийНДФЛ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
				НоваяСтрока.ИдентификаторСтроки = ИдентификаторСтрокиНДФЛ;
				НоваяСтрока.КатегорияДохода = СтрокаНДФЛ.КатегорияДохода;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого СтрокаТЗ Из НоваяТаблицаРаспределенияНДФЛ Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъект.РаспределениеРезультатовУдержаний.Добавить(), СтрокаТЗ);
	КонецЦикла;
	
	Если ТаблицаНовыхДвиженийНДФЛ.Количество() > 0 Или ТаблицаДвиженийНДФЛ.Количество() > 0 Тогда
		
		НовыйНаборЗаписейБухучета = РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СоздатьНаборЗаписей();
		НовыйНаборЗаписейБухучета.Отбор.Регистратор.Установить(ДокументОбъект.Ссылка);
		
		Для каждого СтрокаТЗ Из ТаблицаДвижений Цикл
			ЗаполнитьЗначенияСвойств(НовыйНаборЗаписейБухучета.Добавить(), СтрокаТЗ);
		КонецЦикла;
		
		Для каждого СтрокаТЗ Из ТаблицаНовыхДвиженийНДФЛ Цикл
			ЗаполнитьЗначенияСвойств(НовыйНаборЗаписейБухучета.Добавить(), СтрокаТЗ);
		КонецЦикла;
		
	КонецЕсли;
	
	Если МетаданныеДокумента.ТабличныеЧасти.Найти("ПредставлениеРаспределенияРезультатовРасчета") <> Неопределено Тогда
		ДокументМенеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументОбъект.Ссылка);
		ДокументМенеджер.ЗаполнитьПредставлениеРаспределенияРезультатовРасчета(ДокументОбъект);
	КонецЕсли;

КонецПроцедуры

Процедура ИсправитьРаспределениеНДФЛВТаблицеДокумента(ДокументОбъект) Экспорт

	ТаблицаРаспределенияНДФЛ = Новый ТаблицаЗначений;
	ТаблицаРаспределенияНДФЛ.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	ТаблицаРаспределенияНДФЛ.Колонки.Добавить("СтрокаРаспределения");
	Для каждого СтрокаТЧ Из ДокументОбъект.РаспределениеРезультатовУдержаний Цикл
		Если СтрокаТЧ.ВидУдержания <> Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаРаспределенияНДФЛ.Добавить();
		НоваяСтрока.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
		НоваяСтрока.СтрокаРаспределения = СтрокаТЧ;
	КонецЦикла;
	ТаблицаРаспределенияНДФЛ.Индексы.Добавить("ИдентификаторСтроки");
	
	Отбор = Новый Структура("ИдентификаторСтроки");
	Для каждого СтрокаТЧ Из ДокументОбъект.НДФЛ Цикл
	
		Отбор.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтрокиНДФЛ;
		СуммаКРаспределению = СтрокаТЧ.Налог - СтрокаТЧ.ЗачтеноАвансовыхПлатежей;
		
		СтрокиТекущегоРаспределения = ТаблицаРаспределенияНДФЛ.НайтиСтроки(Отбор);
		НовыеСтрокиРаспределенияНДФЛ = ОтражениеЗарплатыВБухучетеРасширенный.НоваяТаблицаРаспределениеРезультатовУдержаний();
		Для каждого СтрокаТЗ Из СтрокиТекущегоРаспределения Цикл
			ЗаполнитьЗначенияСвойств(НовыеСтрокиРаспределенияНДФЛ.Добавить(), СтрокаТЗ.СтрокаРаспределения);
		КонецЦикла;
		РезультатРаспределения = НовыеСтрокиРаспределенияНДФЛ.Итог("Результат");
		
		Если РезультатРаспределения <> СуммаКРаспределению Тогда
			
			НовыеСтрокиРаспределенияНДФЛ.Свернуть("ИдентификаторСтроки,ВидУдержания,Сотрудник,Подразделение,СтатьяФинансирования,СтатьяРасходов","Результат");
			СтрокиРаспределения = НовыеСтрокиРаспределенияНДФЛ.Скопировать();
			ЗарплатаКадры.РазнестиСуммуПоБазе(СуммаКРаспределению, СтрокиРаспределения, "Результат", 0);
			
			Для каждого СтрокаТЗ Из СтрокиТекущегоРаспределения Цикл
				ДокументОбъект.РаспределениеРезультатовУдержаний.Удалить(СтрокаТЗ.СтрокаРаспределения);
			КонецЦикла;
			
			Для каждого СтрокаТЗ Из СтрокиРаспределения Цикл
				ЗаполнитьЗначенияСвойств(ДокументОбъект.РаспределениеРезультатовУдержаний.Добавить(), СтрокаТЗ);
			КонецЦикла;
			
		КонецЕсли;
	
	КонецЦикла;
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	Если МетаданныеДокумента.ТабличныеЧасти.Найти("ПредставлениеРаспределенияРезультатовРасчета") <> Неопределено Тогда
		ДокументМенеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументОбъект.Ссылка);
		ДокументМенеджер.ЗаполнитьПредставлениеРаспределенияРезультатовРасчета(ДокументОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИсправитьДвиженияБухучетНДФЛ(ДокументСсылка, НовыйНаборЗаписейБухучета) Экспорт

	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	
	СтрокаИмена = ВРег("НачислениеЗарплаты,ИсключениеИзСписковЧасти,ИсключениеИзСписковЧастиСписком,Увольнение,УвольнениеСписком,ОтпускПоУходуЗаРебенком,ОтпускПоУходуЗаРебенкомВоеннослужащего");
	ИмяДокумента = ВРег(МетаданныеДокумента.Имя);
	Если СтрНайти(СтрокаИмена, ИмяДокумента)>0 Тогда
		НеУчитыватьВРаспределенииПриОкончательномРасчете = Ложь;
	Иначе
		НеУчитыватьВРаспределенииПриОкончательномРасчете = Истина;
		Если МетаданныеДокумента.Реквизиты.Найти("ПорядокВыплаты")<>Неопределено Тогда
			НеУчитыватьВРаспределенииПриОкончательномРасчете = РасчетЗарплатыРасширенный.ЭтоМежрасчетнаяВыплата(ДокументОбъект.ПорядокВыплаты);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК Бухучет
	|ГДЕ
	|	Бухучет.Регистратор = &Регистратор
	|	И Бухучет.НачислениеУдержание <> ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияУдержания.Период КАК Период,
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.ПериодДействия КАК ПериодДействия,
	|	НачисленияУдержания.ДокументОснование КАК ДокументОснование,
	|	НачисленияУдержания.ДанныеМежрасчетногоПериода КАК ДанныеМежрасчетногоПериода,
	|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	НачисленияУдержания.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
	|ГДЕ
	|	НачисленияУдержания.Регистратор = &Регистратор
	|	И НачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаДвижений = РезультатЗапроса[0].Выгрузить();
	ТаблицаНачисленияУдержания = РезультатЗапроса[1].Выгрузить();
	ТаблицаНовыхДвиженийБухучетНДФЛ = ТаблицаДвижений.СкопироватьКолонки();
	
	ПериодРегистрации 	= ТаблицаНачисленияУдержания[0].Период;
	ПериодДействия 		= ТаблицаНачисленияУдержания[0].ПериодДействия;
	Организация 		= ТаблицаНачисленияУдержания[0].Организация;
	
	ТаблицаНачисленияУдержания.Индексы.Добавить("ФизическоеЛицо");
	ОтборРегистрации = Новый Структура("ФизическоеЛицо");
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	ТаблицаРаспределенияНДФЛ = Новый ТаблицаЗначений;
	ТаблицаРаспределенияНДФЛ.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	ТаблицаРаспределенияНДФЛ.Колонки.Добавить("СтрокаРаспределения");
	Для каждого СтрокаТЧ Из ДокументОбъект.РаспределениеРезультатовУдержаний Цикл
		Если СтрокаТЧ.ВидУдержания <> Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаРаспределенияНДФЛ.Добавить();
		НоваяСтрока.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
		НоваяСтрока.СтрокаРаспределения = СтрокаТЧ;
	КонецЦикла;
	ТаблицаРаспределенияНДФЛ.Индексы.Добавить("ИдентификаторСтроки");
	
	Отбор = Новый Структура("ИдентификаторСтроки");
	Для каждого СтрокаТЧ Из ДокументОбъект.НДФЛ Цикл
	
		Отбор.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтрокиНДФЛ;
		СтрокиРаспределения = ТаблицаРаспределенияНДФЛ.НайтиСтроки(Отбор);
		
		ОтборРегистрации.ФизическоеЛицо = СтрокаТЧ.ФизическоеЛицо;
		СтрокиПоФизлицу = ТаблицаНачисленияУдержания.НайтиСтроки(ОтборРегистрации);
		РегистрацияВНалоговомОргане = "";
		Если СтрокиПоФизлицу.Количество()>0 Тогда
			РегистрацияВНалоговомОргане = СтрокиПоФизлицу[0].РегистрацияВНалоговомОргане;
		КонецЕсли;
		
		Для каждого СтрокаТЗ Из СтрокиРаспределения Цикл
		
			НоваяСтрока = ТаблицаНовыхДвиженийБухучетНДФЛ.Добавить();
			НоваяСтрока.ФизическоеЛицо		= СтрокаТЧ.ФизическоеЛицо;
			НоваяСтрока.ДатаПолученияДохода = СтрокаТЧ.МесяцНалоговогоПериода;
			НоваяСтрока.КатегорияДохода 	= СтрокаТЧ.КатегорияДохода;
			НоваяСтрока.ТерриторияВыполненияРаботВОрганизации = СтрокаТЧ.Подразделение;
			
			НоваяСтрока.НачислениеУдержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ;
		    НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ.СтрокаРаспределения, "Сотрудник,СтатьяФинансирования,СтатьяРасходов,Подразделение,ИдентификаторСтроки");
			НоваяСтрока.Сумма = СтрокаТЗ.СтрокаРаспределения.Результат;
			
			НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.ПериодДействия		= ПериодДействия;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = НеУчитыватьВРаспределенииПриОкончательномРасчете;
			
		КонецЦикла;
	
	КонецЦикла;
		
	НовыйНаборЗаписейБухучета = РегистрыНакопления.БухучетНачисленияУдержанияПоСотрудникам.СоздатьНаборЗаписей();
	НовыйНаборЗаписейБухучета.Отбор.Регистратор.Установить(ДокументОбъект.Ссылка);
	
	Для каждого СтрокаТЗ Из ТаблицаДвижений Цикл
		ЗаполнитьЗначенияСвойств(НовыйНаборЗаписейБухучета.Добавить(), СтрокаТЗ,,"Активность");
	КонецЦикла;
	
	Для каждого СтрокаТЗ Из ТаблицаНовыхДвиженийБухучетНДФЛ Цикл
		ЗаполнитьЗначенияСвойств(НовыйНаборЗаписейБухучета.Добавить(), СтрокаТЗ,,"Активность");
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти
