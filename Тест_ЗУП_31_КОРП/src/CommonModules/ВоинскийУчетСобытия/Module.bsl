
#Область СлужебныеПроцедурыИФункции

Процедура ЗарегистрироватьИзменениеАдресаФизическогоЛицаПередЗаписью(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда 
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ФизическоеЛицо = Источник.Ссылка;
	
	Период = ТекущаяДатаСеанса();
	
	Если Отказ Или Не ЗначениеЗаполнено(ФизическоеЛицо) Или Не ВоеннообязанныйРаботник(Источник.Ссылка, Период) Тогда 
		Возврат;
	КонецЕсли;	
	
	АдресМестаПроживания = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица");
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид", АдресМестаПроживания);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛицаКонтактнаяИнформация.Тип,
	               |	ФизическиеЛицаКонтактнаяИнформация.Вид КАК Вид,
	               |	ФизическиеЛицаКонтактнаяИнформация.Представление
	               |ИЗ
	               |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &ФизическоеЛицо
	               |	И ФизическиеЛицаКонтактнаяИнформация.Вид = &Вид
	               |	И ФизическиеЛицаКонтактнаяИнформация.Тип = &Тип";
				   
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЗаписейБазыДанных = РезультатЗапроса.Выгрузить();
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	СтруктураОтбора.Вставить("Вид", АдресМестаПроживания);
	
	ТаблицаЗаписейОбъекта = Источник.КонтактнаяИнформация.Выгрузить(СтруктураОтбора, "Тип, Вид, Представление");
	
	УдалитьСовпадающиеСтрокиТаблиц(ТаблицаЗаписейБазыДанных, ТаблицаЗаписейОбъекта);
	
	Если Не ОбщегоНазначения.КоллекцииИдентичны(ТаблицаЗаписейОбъекта, ТаблицаЗаписейБазыДанных) Тогда 
		
		ПрежниеАдреса 		= "";
		УстановленныеАдреса = "";
		
		Для Каждого ТекСтрока Из ТаблицаЗаписейБазыДанных Цикл 
			ПрежниеАдреса = ПрежниеАдреса + ?(ЗначениеЗаполнено(ПрежниеАдреса), Символы.ПС, "") + ТекСтрока.Вид + ": " + ТекСтрока.Представление;
		КонецЦикла;
		
		Для Каждого ТекСтрока Из ТаблицаЗаписейОбъекта Цикл 
			УстановленныеАдреса = УстановленныеАдреса + ?(ЗначениеЗаполнено(УстановленныеАдреса), Символы.ПС, "") + ТекСтрока.Вид + ": " + ТекСтрока.Представление;
		КонецЦикла;
		
		НаборЗаписей = РегистрыСведений.ИзменениеСведенийФизическихЛиц.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.ДатаЗаписи.Установить(Период);
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
		НаборЗаписей.Отбор.КатегорияСведений.Установить(Перечисления.КатегорииСведенийОФизическихЛицах.КонтактнаяИнформация);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.ДатаЗаписи 			  = Период;
		НоваяЗапись.ФизическоеЛицо 		  = ФизическоеЛицо;
		НоваяЗапись.КатегорияСведений 	  = Перечисления.КатегорииСведенийОФизическихЛицах.КонтактнаяИнформация;
		НоваяЗапись.ПрежнееЗначение 	  = ПрежниеАдреса;
		НоваяЗапись.УстановленноеЗначение = УстановленныеАдреса;
		
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьИзменениеОбразованияФизическогоЛицаПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Источник.ЭтоДополнительноеОбразование() Тогда
		Возврат;
	КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Истина);
	
	ФизическоеЛицо = Источник.Владелец;
	Период = ТекущаяДатаСеанса();
	
	Если Отказ Или Не ВоеннообязанныйРаботник(ФизическоеЛицо, Период) Тогда 
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбразованиеФЛ.Ссылка,
	|	ОбразованиеФЛ.Владелец КАК ФизическоеЛицо,
	|	ОбразованиеФЛ.УчебноеЗаведение,
	|	ОбразованиеФЛ.ВидОбразования,
	|	ОбразованиеФЛ.ВидДополнительногоОбучения,
	|	ОбразованиеФЛ.Специальность,
	|	ОбразованиеФЛ.Окончание,
	|	ОбразованиеФЛ.Квалификация
	|ИЗ
	|	Справочник.ОбразованиеФизическихЛиц КАК ОбразованиеФЛ
	|ГДЕ
	|	ОбразованиеФЛ.Владелец = &ФизическоеЛицо
	|	И ОбразованиеФЛ.ВидОбразования <> ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ДополнительноеПрофессиональноеОбразование)
	|	И ОбразованиеФЛ.ВидДополнительногоОбучения <> ЗНАЧЕНИЕ(Перечисление.ВидыПрофессиональнойПодготовки.Переподготовка)
	|	И ОбразованиеФЛ.ВидДополнительногоОбучения <> ЗНАЧЕНИЕ(Перечисление.ВидыПрофессиональнойПодготовки.ПовышениеКвалификации)
	|	И НЕ ОбразованиеФЛ.ПометкаУдаления";
	
	ТаблицаЗаписейБазыДанных = Запрос.Выполнить().Выгрузить();
	НоваяТаблицаЗаписей 	 = ТаблицаЗаписейБазыДанных.Скопировать();
	
	СтрокаСсылки = НоваяТаблицаЗаписей.Найти(Источник.Ссылка, "Ссылка");
	Если СтрокаСсылки <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтрокаСсылки, Источник, "УчебноеЗаведение,ВидОбразования,ВидДополнительногоОбучения,Специальность,Окончание,Квалификация");
	КонецЕсли; 
	
	УдалитьСовпадающиеСтрокиТаблиц(ТаблицаЗаписейБазыДанных, НоваяТаблицаЗаписей);
	
	Если Не ОбщегоНазначения.КоллекцииИдентичны(НоваяТаблицаЗаписей, ТаблицаЗаписейБазыДанных) Тогда 
		
		ПрежнееОбразование 		 = "";
		УстановленноеОбразование = "";
		
		Для Каждого ТекСтрока Из ТаблицаЗаписейБазыДанных Цикл
			
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(ТекСтрока);
			
			ПрежнееОбразование = ПрежнееОбразование + ?(ЗначениеЗаполнено(ПрежнееОбразование), Символы.ПС, "") 
				+ Справочники.ОбразованиеФизическихЛиц.ПредставлениеСведенийОбОбразовании(МассивСтрок);
			
		КонецЦикла;
		
		Для Каждого ТекСтрока Из НоваяТаблицаЗаписей Цикл
			
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(ТекСтрока);
			
			УстановленноеОбразование = УстановленноеОбразование + ?(ЗначениеЗаполнено(УстановленноеОбразование), Символы.ПС, "") 
				+ Справочники.ОбразованиеФизическихЛиц.ПредставлениеСведенийОбОбразовании(МассивСтрок);
			
		КонецЦикла;
		
		НаборЗаписей = РегистрыСведений.ИзменениеСведенийФизическихЛиц.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.ДатаЗаписи.Установить(Период);
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
		НаборЗаписей.Отбор.КатегорияСведений.Установить(Перечисления.КатегорииСведенийОФизическихЛицах.Образование);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.ДатаЗаписи 			  = Период;
		НоваяЗапись.ФизическоеЛицо 		  = ФизическоеЛицо;
		НоваяЗапись.КатегорияСведений 	  = Перечисления.КатегорииСведенийОФизическихЛицах.Образование;
		НоваяЗапись.ПрежнееЗначение 	  = ПрежнееОбразование;
		НоваяЗапись.УстановленноеЗначение = УстановленноеОбразование;
		
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьИзменениеСоставаСемьиФизическогоЛицаПередЗаписью(Источник, Отказ, Замещение) Экспорт

	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда 
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ФизическоеЛицо = Источник.Владелец;
	
	Период = ТекущаяДатаСеанса();
	Если Отказ Или Не ВоеннообязанныйРаботник(ФизическоеЛицо, Период) Тогда 
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РодственникиФизическихЛиц.Владелец КАК ФизическоеЛицо,
		|	РодственникиФизическихЛиц.СтепеньРодства,
		|	РодственникиФизическихЛиц.Наименование КАК ФИО,
		|	РодственникиФизическихЛиц.ДатаРождения,
		|	РодственникиФизическихЛиц.Ссылка
		|ИЗ
		|	Справочник.РодственникиФизическихЛиц КАК РодственникиФизическихЛиц
		|ГДЕ
		|	РодственникиФизическихЛиц.Владелец = &ФизическоеЛицо";
	
	ТаблицаЗаписейБазыДанных = Запрос.Выполнить().Выгрузить();
	ТаблицаЗаписейНабора = ТаблицаЗаписейБазыДанных.Скопировать();
	
	СтрокаНабора = ТаблицаЗаписейНабора.Найти(Источник.Ссылка, "Ссылка");
	
	Если Источник.ЭтоНовый() Или СтрокаНабора = Неопределено Тогда
		
		СтрокаНабора = ТаблицаЗаписейНабора.Добавить();
		СтрокаНабора.Ссылка = Источник.Ссылка;
		СтрокаНабора.ФизическоеЛицо = Источник.Владелец;
		
	КонецЕсли;
	
	СтрокаНабора.СтепеньРодства = Источник.СтепеньРодства;
	СтрокаНабора.ФИО = Источник.Наименование;
	СтрокаНабора.ДатаРождения = Источник.ДатаРождения;
				
	УдалитьСовпадающиеСтрокиТаблиц(ТаблицаЗаписейБазыДанных, ТаблицаЗаписейНабора);
	Если Не ОбщегоНазначения.КоллекцииИдентичны(ТаблицаЗаписейНабора, ТаблицаЗаписейБазыДанных) Тогда 
		
		ПрежнийСоставСемьи 		 = "";
		УстановленныйСоставСемьи = "";
		
		Для Каждого ТекСтрока Из ТаблицаЗаписейБазыДанных Цикл
			
			ПрежнийСоставСемьи = ПрежнийСоставСемьи + ?(ЗначениеЗаполнено(ПрежнийСоставСемьи), Символы.ПС, "") 
				+ ТекСтрока.СтепеньРодства + ?(ЗначениеЗаполнено(ТекСтрока.ФИО), " - ", "") + ТекСтрока.ФИО 
				+ ?(ЗначениеЗаполнено(ТекСтрока.ДатаРождения), ", ", "") + Формат(ТекСтрока.ДатаРождения, "ДЛФ=Д");
			
		КонецЦикла;
		
		Для Каждого ТекСтрока Из ТаблицаЗаписейНабора Цикл
			
			УстановленныйСоставСемьи = УстановленныйСоставСемьи + ?(ЗначениеЗаполнено(УстановленныйСоставСемьи), Символы.ПС, "") 
				+ ТекСтрока.СтепеньРодства + ?(ЗначениеЗаполнено(ТекСтрока.ФИО), " - ", "") + ТекСтрока.ФИО 
				+ ?(ЗначениеЗаполнено(ТекСтрока.ДатаРождения), ", ", "") + Формат(ТекСтрока.ДатаРождения, "ДЛФ=Д");
			
		КонецЦикла;
		
		НаборЗаписей = РегистрыСведений.ИзменениеСведенийФизическихЛиц.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.ДатаЗаписи.Установить(Период);
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
		НаборЗаписей.Отбор.КатегорияСведений.Установить(Перечисления.КатегорииСведенийОФизическихЛицах.СоставСемьи);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.ДатаЗаписи 			  = Период;
		НоваяЗапись.ФизическоеЛицо 		  = ФизическоеЛицо;
		НоваяЗапись.КатегорияСведений 	  = Перечисления.КатегорииСведенийОФизическихЛицах.СоставСемьи;
		НоваяЗапись.ПрежнееЗначение 	  = ПрежнийСоставСемьи;
		НоваяЗапись.УстановленноеЗначение = УстановленныйСоставСемьи;
		
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Функция проверяет, подлежит ли физическое лицо воинскому учету.
//
Функция ВоеннообязанныйРаботник(ФизическоеЛицо, Период)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВоинскийУчетСрезПоследних.ФизическоеЛицо
	               |ИЗ
	               |	РегистрСведений.ВоинскийУчет.СрезПоследних(
	               |			&Период,
	               |			ФизическоеЛицо = &ФизическоеЛицо
	               |				И ОтношениеКВоинскойОбязанности В (ЗНАЧЕНИЕ(Перечисление.ОтношениеКВоинскойОбязанности.Призывник), ЗНАЧЕНИЕ(Перечисление.ОтношениеКВоинскойОбязанности.Военнообязанный))
	               |				И НЕ ОтношениеКВоинскомуУчету В (ЗНАЧЕНИЕ(Перечисление.ОтношениеКВоинскомуУчету.СнятПоВозрасту), ЗНАЧЕНИЕ(Перечисление.ОтношениеКВоинскомуУчету.СнятПоСостояниюЗдоровья))) КАК ВоинскийУчетСрезПоследних";
				   
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

Процедура УдалитьСовпадающиеСтрокиТаблиц(ПерваяТаблица, ВтораяТаблица)
	
	ПерваяТаблицаИтоговая = ПерваяТаблица.СкопироватьКолонки();
	ВтораяТаблицаИтоговая = ВтораяТаблица.СкопироватьКолонки();
	
	Для Каждого ТекСтрока Из ПерваяТаблица Цикл 
		
		СтруктураОтбора = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТекСтрока);
		
		МассивСтрок = ВтораяТаблица.НайтиСтроки(СтруктураОтбора);
		
		Если МассивСтрок.Количество() = 0 Тогда 
			НоваяСтрока = ПерваяТаблицаИтоговая.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ВтораяТаблица Цикл 
		
		СтруктураОтбора = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТекСтрока);
		
		МассивСтрок = ПерваяТаблица.НайтиСтроки(СтруктураОтбора);
		
		Если МассивСтрок.Количество() = 0 Тогда 
			НоваяСтрока = ВтораяТаблицаИтоговая.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	ПерваяТаблица = ПерваяТаблицаИтоговая;
	ВтораяТаблица = ВтораяТаблицаИтоговая;
	
КонецПроцедуры

#КонецОбласти
