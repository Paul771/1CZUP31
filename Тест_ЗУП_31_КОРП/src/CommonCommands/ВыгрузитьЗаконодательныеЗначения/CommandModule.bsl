
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	#Если ВебКлиент Тогда
		Возврат;
	#КонецЕсли
	
	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		
		Получаемые = Новый Массив;
		Получаемые.Добавить(Новый ОписаниеПередаваемогоФайла("", СохранитьЗаконодательныеЗначенияВоВременноеХранилище()));
		
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		Диалог.Заголовок = НСтр("ru = 'Выберите файл'");
		Диалог.ПредварительныйПросмотр = Ложь;
		Диалог.Фильтр = НСтр("ru = 'Файл (*.xml)|*.xml'");
		Диалог.Расширение = "xml";
		Диалог.ПроверятьСуществованиеФайла = Истина;
		Диалог.МножественныйВыбор = Ложь;
		
		ОписаниеОповещенияПолученияФайлов = Новый ОписаниеОповещения("ПолучениеФайловЗавершение", ЭтотОбъект);
		
		НачатьПолучениеФайлов(ОписаниеОповещенияПолученияФайлов, Получаемые, Диалог, Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Без расширения работы с файлами невозможно работать с файлами.'"), "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеФайловЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	ТекстПояснения = НСтр("ru = 'Законодательные зачения успешно выгружены'"); 
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		ИмяФайла = Результат[0].Имя;
		ТекстПояснения = ТекстПояснения + НСтр("ru = ' в файл:'") + " 
		|" + ИмяФайла; 
	КонецЕсли;
	ПоказатьОповещениеПользователя(НСтр("ru = 'Файл сформирован'"), , ТекстПояснения, БиблиотекаКартинок.Успешно32);	
	
КонецПроцедуры

&НаСервере
Функция СохранитьЗаконодательныеЗначенияВоВременноеХранилище()
	
	ДвоичныеДанные = ЗаписатьЗаконодательныеЗначенияВФайлXML();
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
КонецФункции

&НаСервере
Функция ЗаписатьЗаконодательныеЗначенияВФайлXML()
	
	ИменаРегистров = Новый Массив;
	ИменаРегистров.Добавить("СтавкаРефинансированияЦБ");
	ИменаРегистров.Добавить("МинимальнаяОплатаТрудаРФ");
	ИменаРегистров.Добавить("МаксимальныйРазмерЕжемесячнойСтраховойВыплаты");
	ИменаРегистров.Добавить("РазмерыГосударственныхПособий");
	ИменаРегистров.Добавить("ПредельнаяВеличинаБазыСтраховыхВзносов");
	ИменаРегистров.Добавить("РазмерВычетовНДФЛ");
	ИменаРегистров.Добавить("ТарифыСтраховыхВзносов");
	
	Запрос = Новый Запрос;
	Текст_Подстановки = 
	"ВЫБРАТЬ
	|	""#ИмяРегистра"" КАК ИмяРегистра,
	|	Регистр.*
	|ИЗ
	|	#Регистр КАК Регистр
	|ИТОГИ ПО
	|	ИмяРегистра";
	ТекстЗапроса = "";
	Первый = Истина;
	Для Каждого ИмяРегистра Из ИменаРегистров Цикл
		Если Не Первый Тогда
			Запрос.Текст = Запрос.Текст + ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов();
		КонецЕсли;
		
		ТекстПоляРегистра = "";
		Для Каждого Измерение Из Метаданные.РегистрыСведений[ИмяРегистра].Измерения Цикл
			ТекстПоляРегистра = ТекстПоляРегистра + ", Регистр." + Измерение.Имя + ".ИмяПредопределенныхДанных КАК " + Измерение.Имя + "
			|";
		КонецЦикла;
		Для Каждого Поле Из Метаданные.РегистрыСведений[ИмяРегистра].Ресурсы Цикл
			ТекстПоляРегистра = ТекстПоляРегистра + ", Регистр." + Поле.Имя + " КАК " + Поле.Имя + "
			|";
		КонецЦикла;
		Для Каждого Поле Из Метаданные.РегистрыСведений[ИмяРегистра].Реквизиты Цикл
			ТекстПоляРегистра = ТекстПоляРегистра + ", Регистр." + Поле.Имя + " КАК " + Поле.Имя + "
			|";
		КонецЦикла;
		Если Метаданные.РегистрыСведений[ИмяРегистра].ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
			ТекстПоляРегистра = ТекстПоляРегистра + ", Регистр.Период КАК Период
			|";
		КонецЕсли;
		ТекстПоляРегистра = Сред(ТекстПоляРегистра, 2);
		
		ТекстЗапроса = СтрЗаменить(Текст_Подстановки, "#ИмяРегистра", ИмяРегистра);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#Регистр", "РегистрСведений." + ИмяРегистра);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Регистр.*", ТекстПоляРегистра);
		
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		Первый = Ложь;
		
	КонецЦикла;
	
	НаборыЗаписей = Новый Структура();
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Для Каждого РезультатЗапроса Из РезультатыЗапроса Цикл
		Регистр = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если Регистр.Следующий() Тогда
			
			СтруктураСтрокой = "";
			Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
				Если Колонка.Имя = "ИмяРегистра" Тогда
					Продолжить;
				КонецЕсли;
				СтруктураСтрокой = СтруктураСтрокой + "," + Колонка.Имя;
			КонецЦикла;
			СтруктураСтрокой = Сред(СтруктураСтрокой, 2);
			
			ЗаписиРегистра = Новый Массив();
			Выборка = Регистр.Выбрать();
			Пока Выборка.Следующий() Цикл
				НоваяЗапись = Новый Структура(СтруктураСтрокой);
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
				ЗаписиРегистра.Добавить(НоваяЗапись);
			КонецЦикла;
			
			НаборыЗаписей.Вставить(Регистр.ИмяРегистра, ЗаписиРегистра);
			
		КонецЕсли;
	КонецЦикла;
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяФайла);
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, НаборыЗаписей, НазначениеТипаXML.Явное);
	ЗаписьXML.Закрыть();
	
	ВозвращаемоеЗначение = Новый ДвоичныеДанные(ИмяФайла);
	
	УдалитьФайлы(ИмяФайла);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции