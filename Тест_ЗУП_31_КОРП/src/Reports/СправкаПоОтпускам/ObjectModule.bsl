
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДокументРезультат.Очистить();
	
	ИнициализироватьОтчет();
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	// Устанавливаем ДатуОстатков
	ДатаОстатков = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ДатаОстатков");
	Если НЕ ДатаОстатков.Использование Тогда
		ДатаОстатков.Значение = Новый СтандартнаяДатаНачала(ВариантСтандартнойДатыНачала.НачалоЭтогоДня);
		ДатаОстатков.Использование = Истина;
	КонецЕсли;
	
	// Получаем список сотрудников, для которых надо формировать справку.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	// Создадим и инициализируем процессор компоновки.
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	
	// Получаем сотрудников по отборам.
	ПроцессорВыводаВКоллекциюЗначений = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаЗначений =  Новый ТаблицаЗначений;
	ПроцессорВыводаВКоллекциюЗначений.УстановитьОбъект(ТаблицаЗначений);
	ПроцессорВыводаВКоллекциюЗначений.Вывести(ПроцессорКомпоновки);
	
	// Если что-то есть - выводим.
	Если ТаблицаЗначений.Количество() > 0 Тогда
		МассивСотрудников = ТаблицаЗначений.ВыгрузитьКолонку("Сотрудник");
		СправкаРезультат = ОстаткиОтпусков.СправкаПоОтпускамСотрудника(МассивСотрудников, ДатаОстатков.Значение, Ложь);
		ДокументРезультат.Вывести(СправкаРезультат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОтчет() Экспорт
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаполнитьОбщиеИсточникиДанныхОтчета(ЭтотОбъект);
	
КонецПроцедуры

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ИнициализироватьОтчет();
	ЗначениеВДанныеФормы(ЭтотОбъект, Форма.Отчет);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли