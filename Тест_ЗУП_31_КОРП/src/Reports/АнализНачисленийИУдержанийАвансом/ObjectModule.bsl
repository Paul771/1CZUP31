#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ОтчетИнициализирован;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ИнициализироватьОтчет();
	
	УчетНачисленнойЗарплаты.ПриКомпоновкеОтчетаАнализНачисленийИУдержаний(
			ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, Истина);
	
	ПриКомпоновкеОтчета(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОтчет(КлючВарианта = "") Экспорт
	
	Если Не ОтчетИнициализирован Тогда
		
		ЗаполнитьОбщиеИсточникиДанных = Ложь;
		
		Для Каждого НаборДанных Из СхемаКомпоновкиДанных.НаборыДанных Цикл
			
			Если ТипЗнч(НаборДанных) = Тип("НаборДанныхЗапросСхемыКомпоновкиДанных")
				И (СтрНайти(НаборДанных.Запрос, "ОбщиеЗапросы_") > 0
					Или СтрНайти(НаборДанных.Запрос, "Представления_") > 0) Тогда
				
				ЗаполнитьОбщиеИсточникиДанных = Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗаполнитьОбщиеИсточникиДанных Тогда
			
			ДополнительныеПоля = Новый Структура;
			УчетНачисленнойЗарплаты.ЗаполнитьДополнительныеПоляОтчетаАнализНачисленийИУдержаний(ЭтотОбъект, ДополнительныеПоля);
			
			ЗарплатаКадрыОбщиеНаборыДанных.ЗаполнитьОбщиеИсточникиДанныхОтчета(ЭтотОбъект, ДополнительныеПоля);
			
		КонецЕсли;
		
		ОтчетИнициализирован = Истина;
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(КлючВарианта) Тогда
		
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек[КлючВарианта].Настройки);
		
		Отбор = КомпоновщикНастроек.Настройки.Отбор;
		Отбор.Элементы.Очистить();
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "Организация", ВидСравненияКомпоновкиДанных.Равно, Справочники.Организации.ПустаяСсылка());
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "ФизическоеЛицо", ВидСравненияКомпоновкиДанных.ВСписке, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ФизическиеЛица.ПустаяСсылка()));
		
	КонецЕсли;
	
КонецПроцедуры

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
	
КонецПроцедуры

// Вызывается перед загрузкой новых настроек. Используется для изменения схемы компоновки.
//
Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	
	Если КлючСхемы <> "СхемаИнициализирована" Тогда
		
		ИнициализироватьОтчет();
		ЗарплатаКадрыОтчеты.ОтчетАнализНачисленийИУдержанийПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД);
		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКомпоновкиДанных, КлючСхемы);
		
		КлючСхемы = "СхемаИнициализирована";
		
	КонецЕсли;
	
КонецПроцедуры

// Компоновка вариантов отчета.
Процедура ПриКомпоновкеОтчета(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Если Не СтандартнаяОбработка Тогда
		Возврат
	КонецЕсли;
	
	КлючВарианта = ЗарплатаКадрыОтчеты.КлючВарианта(КомпоновщикНастроек);
	
	Если КлючВарианта = "Т51ПерваяПоловинаМесяца" Тогда
		ЗарплатаКадрыОтчеты.ПриКомпоновкеРезультатаТ51(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, Истина);
	ИначеЕсли КлючВарианта = "Т49ПерваяПоловинаМесяца" Тогда
		ЗарплатаКадрыОтчеты.ПриКомпоновкеРезультатаТ49(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, Истина);
	ИначеЕсли ЗарплатаКадрыОтчеты.ЭтоКлючВариантаОтчетаРасчетныйЛисток(КлючВарианта) Тогда
		ЗарплатаКадрыОтчеты.ПриКомпоновкеРезультатаРасчетныйЛисток(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ОтчетИнициализирован = Ложь;

#КонецОбласти

#КонецЕсли